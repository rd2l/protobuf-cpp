// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_publishedfile.steamworkssdk.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5fpublishedfile_2esteamworkssdk_2eproto
#define PROTOBUF_INCLUDED_steammessages_5fpublishedfile_2esteamworkssdk_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamworkssdk.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fpublishedfile_2esteamworkssdk_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[21]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_5fpublishedfile_2esteamworkssdk_2eproto();
namespace proto {
namespace dota {
class CPublishedFile_GetDetails_Request;
class CPublishedFile_GetDetails_RequestDefaultTypeInternal;
extern CPublishedFile_GetDetails_RequestDefaultTypeInternal _CPublishedFile_GetDetails_Request_default_instance_;
class CPublishedFile_GetDetails_Response;
class CPublishedFile_GetDetails_ResponseDefaultTypeInternal;
extern CPublishedFile_GetDetails_ResponseDefaultTypeInternal _CPublishedFile_GetDetails_Response_default_instance_;
class CPublishedFile_GetUserFiles_Request;
class CPublishedFile_GetUserFiles_RequestDefaultTypeInternal;
extern CPublishedFile_GetUserFiles_RequestDefaultTypeInternal _CPublishedFile_GetUserFiles_Request_default_instance_;
class CPublishedFile_GetUserFiles_Response;
class CPublishedFile_GetUserFiles_ResponseDefaultTypeInternal;
extern CPublishedFile_GetUserFiles_ResponseDefaultTypeInternal _CPublishedFile_GetUserFiles_Response_default_instance_;
class CPublishedFile_GetUserFiles_Response_App;
class CPublishedFile_GetUserFiles_Response_AppDefaultTypeInternal;
extern CPublishedFile_GetUserFiles_Response_AppDefaultTypeInternal _CPublishedFile_GetUserFiles_Response_App_default_instance_;
class CPublishedFile_Publish_Request;
class CPublishedFile_Publish_RequestDefaultTypeInternal;
extern CPublishedFile_Publish_RequestDefaultTypeInternal _CPublishedFile_Publish_Request_default_instance_;
class CPublishedFile_Publish_Response;
class CPublishedFile_Publish_ResponseDefaultTypeInternal;
extern CPublishedFile_Publish_ResponseDefaultTypeInternal _CPublishedFile_Publish_Response_default_instance_;
class CPublishedFile_RefreshVotingQueue_Request;
class CPublishedFile_RefreshVotingQueue_RequestDefaultTypeInternal;
extern CPublishedFile_RefreshVotingQueue_RequestDefaultTypeInternal _CPublishedFile_RefreshVotingQueue_Request_default_instance_;
class CPublishedFile_RefreshVotingQueue_Response;
class CPublishedFile_RefreshVotingQueue_ResponseDefaultTypeInternal;
extern CPublishedFile_RefreshVotingQueue_ResponseDefaultTypeInternal _CPublishedFile_RefreshVotingQueue_Response_default_instance_;
class CPublishedFile_Subscribe_Request;
class CPublishedFile_Subscribe_RequestDefaultTypeInternal;
extern CPublishedFile_Subscribe_RequestDefaultTypeInternal _CPublishedFile_Subscribe_Request_default_instance_;
class CPublishedFile_Subscribe_Response;
class CPublishedFile_Subscribe_ResponseDefaultTypeInternal;
extern CPublishedFile_Subscribe_ResponseDefaultTypeInternal _CPublishedFile_Subscribe_Response_default_instance_;
class CPublishedFile_Unsubscribe_Request;
class CPublishedFile_Unsubscribe_RequestDefaultTypeInternal;
extern CPublishedFile_Unsubscribe_RequestDefaultTypeInternal _CPublishedFile_Unsubscribe_Request_default_instance_;
class CPublishedFile_Unsubscribe_Response;
class CPublishedFile_Unsubscribe_ResponseDefaultTypeInternal;
extern CPublishedFile_Unsubscribe_ResponseDefaultTypeInternal _CPublishedFile_Unsubscribe_Response_default_instance_;
class CPublishedFile_Update_Request;
class CPublishedFile_Update_RequestDefaultTypeInternal;
extern CPublishedFile_Update_RequestDefaultTypeInternal _CPublishedFile_Update_Request_default_instance_;
class CPublishedFile_Update_Response;
class CPublishedFile_Update_ResponseDefaultTypeInternal;
extern CPublishedFile_Update_ResponseDefaultTypeInternal _CPublishedFile_Update_Response_default_instance_;
class PublishedFileDetails;
class PublishedFileDetailsDefaultTypeInternal;
extern PublishedFileDetailsDefaultTypeInternal _PublishedFileDetails_default_instance_;
class PublishedFileDetails_Child;
class PublishedFileDetails_ChildDefaultTypeInternal;
extern PublishedFileDetails_ChildDefaultTypeInternal _PublishedFileDetails_Child_default_instance_;
class PublishedFileDetails_KVTag;
class PublishedFileDetails_KVTagDefaultTypeInternal;
extern PublishedFileDetails_KVTagDefaultTypeInternal _PublishedFileDetails_KVTag_default_instance_;
class PublishedFileDetails_Preview;
class PublishedFileDetails_PreviewDefaultTypeInternal;
extern PublishedFileDetails_PreviewDefaultTypeInternal _PublishedFileDetails_Preview_default_instance_;
class PublishedFileDetails_Tag;
class PublishedFileDetails_TagDefaultTypeInternal;
extern PublishedFileDetails_TagDefaultTypeInternal _PublishedFileDetails_Tag_default_instance_;
class PublishedFileDetails_VoteData;
class PublishedFileDetails_VoteDataDefaultTypeInternal;
extern PublishedFileDetails_VoteDataDefaultTypeInternal _PublishedFileDetails_VoteData_default_instance_;
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::dota::CPublishedFile_GetDetails_Request* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_GetDetails_Request>(Arena*);
template<> ::proto::dota::CPublishedFile_GetDetails_Response* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_GetDetails_Response>(Arena*);
template<> ::proto::dota::CPublishedFile_GetUserFiles_Request* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_GetUserFiles_Request>(Arena*);
template<> ::proto::dota::CPublishedFile_GetUserFiles_Response* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_GetUserFiles_Response>(Arena*);
template<> ::proto::dota::CPublishedFile_GetUserFiles_Response_App* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_GetUserFiles_Response_App>(Arena*);
template<> ::proto::dota::CPublishedFile_Publish_Request* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_Publish_Request>(Arena*);
template<> ::proto::dota::CPublishedFile_Publish_Response* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_Publish_Response>(Arena*);
template<> ::proto::dota::CPublishedFile_RefreshVotingQueue_Request* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_RefreshVotingQueue_Request>(Arena*);
template<> ::proto::dota::CPublishedFile_RefreshVotingQueue_Response* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_RefreshVotingQueue_Response>(Arena*);
template<> ::proto::dota::CPublishedFile_Subscribe_Request* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_Subscribe_Request>(Arena*);
template<> ::proto::dota::CPublishedFile_Subscribe_Response* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_Subscribe_Response>(Arena*);
template<> ::proto::dota::CPublishedFile_Unsubscribe_Request* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_Unsubscribe_Request>(Arena*);
template<> ::proto::dota::CPublishedFile_Unsubscribe_Response* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_Unsubscribe_Response>(Arena*);
template<> ::proto::dota::CPublishedFile_Update_Request* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_Update_Request>(Arena*);
template<> ::proto::dota::CPublishedFile_Update_Response* Arena::CreateMaybeMessage<::proto::dota::CPublishedFile_Update_Response>(Arena*);
template<> ::proto::dota::PublishedFileDetails* Arena::CreateMaybeMessage<::proto::dota::PublishedFileDetails>(Arena*);
template<> ::proto::dota::PublishedFileDetails_Child* Arena::CreateMaybeMessage<::proto::dota::PublishedFileDetails_Child>(Arena*);
template<> ::proto::dota::PublishedFileDetails_KVTag* Arena::CreateMaybeMessage<::proto::dota::PublishedFileDetails_KVTag>(Arena*);
template<> ::proto::dota::PublishedFileDetails_Preview* Arena::CreateMaybeMessage<::proto::dota::PublishedFileDetails_Preview>(Arena*);
template<> ::proto::dota::PublishedFileDetails_Tag* Arena::CreateMaybeMessage<::proto::dota::PublishedFileDetails_Tag>(Arena*);
template<> ::proto::dota::PublishedFileDetails_VoteData* Arena::CreateMaybeMessage<::proto::dota::PublishedFileDetails_VoteData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace dota {

// ===================================================================

class CPublishedFile_Subscribe_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_Subscribe_Request) */ {
 public:
  CPublishedFile_Subscribe_Request();
  virtual ~CPublishedFile_Subscribe_Request();

  CPublishedFile_Subscribe_Request(const CPublishedFile_Subscribe_Request& from);

  inline CPublishedFile_Subscribe_Request& operator=(const CPublishedFile_Subscribe_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_Subscribe_Request(CPublishedFile_Subscribe_Request&& from) noexcept
    : CPublishedFile_Subscribe_Request() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_Subscribe_Request& operator=(CPublishedFile_Subscribe_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_Subscribe_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_Subscribe_Request* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_Subscribe_Request*>(
               &_CPublishedFile_Subscribe_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CPublishedFile_Subscribe_Request* other);
  friend void swap(CPublishedFile_Subscribe_Request& a, CPublishedFile_Subscribe_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_Subscribe_Request* New() const final {
    return CreateMaybeMessage<CPublishedFile_Subscribe_Request>(nullptr);
  }

  CPublishedFile_Subscribe_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_Subscribe_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_Subscribe_Request& from);
  void MergeFrom(const CPublishedFile_Subscribe_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_Subscribe_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 publishedfileid = 1;
  bool has_publishedfileid() const;
  void clear_publishedfileid();
  static const int kPublishedfileidFieldNumber = 1;
  ::google::protobuf::uint64 publishedfileid() const;
  void set_publishedfileid(::google::protobuf::uint64 value);

  // optional uint32 list_type = 2;
  bool has_list_type() const;
  void clear_list_type();
  static const int kListTypeFieldNumber = 2;
  ::google::protobuf::uint32 list_type() const;
  void set_list_type(::google::protobuf::uint32 value);

  // optional int32 appid = 3;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 3;
  ::google::protobuf::int32 appid() const;
  void set_appid(::google::protobuf::int32 value);

  // optional bool notify_client = 4;
  bool has_notify_client() const;
  void clear_notify_client();
  static const int kNotifyClientFieldNumber = 4;
  bool notify_client() const;
  void set_notify_client(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_Subscribe_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 publishedfileid_;
  ::google::protobuf::uint32 list_type_;
  ::google::protobuf::int32 appid_;
  bool notify_client_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_Subscribe_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_Subscribe_Response) */ {
 public:
  CPublishedFile_Subscribe_Response();
  virtual ~CPublishedFile_Subscribe_Response();

  CPublishedFile_Subscribe_Response(const CPublishedFile_Subscribe_Response& from);

  inline CPublishedFile_Subscribe_Response& operator=(const CPublishedFile_Subscribe_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_Subscribe_Response(CPublishedFile_Subscribe_Response&& from) noexcept
    : CPublishedFile_Subscribe_Response() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_Subscribe_Response& operator=(CPublishedFile_Subscribe_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_Subscribe_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_Subscribe_Response* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_Subscribe_Response*>(
               &_CPublishedFile_Subscribe_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CPublishedFile_Subscribe_Response* other);
  friend void swap(CPublishedFile_Subscribe_Response& a, CPublishedFile_Subscribe_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_Subscribe_Response* New() const final {
    return CreateMaybeMessage<CPublishedFile_Subscribe_Response>(nullptr);
  }

  CPublishedFile_Subscribe_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_Subscribe_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_Subscribe_Response& from);
  void MergeFrom(const CPublishedFile_Subscribe_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_Subscribe_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_Subscribe_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_Unsubscribe_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_Unsubscribe_Request) */ {
 public:
  CPublishedFile_Unsubscribe_Request();
  virtual ~CPublishedFile_Unsubscribe_Request();

  CPublishedFile_Unsubscribe_Request(const CPublishedFile_Unsubscribe_Request& from);

  inline CPublishedFile_Unsubscribe_Request& operator=(const CPublishedFile_Unsubscribe_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_Unsubscribe_Request(CPublishedFile_Unsubscribe_Request&& from) noexcept
    : CPublishedFile_Unsubscribe_Request() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_Unsubscribe_Request& operator=(CPublishedFile_Unsubscribe_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_Unsubscribe_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_Unsubscribe_Request* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_Unsubscribe_Request*>(
               &_CPublishedFile_Unsubscribe_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CPublishedFile_Unsubscribe_Request* other);
  friend void swap(CPublishedFile_Unsubscribe_Request& a, CPublishedFile_Unsubscribe_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_Unsubscribe_Request* New() const final {
    return CreateMaybeMessage<CPublishedFile_Unsubscribe_Request>(nullptr);
  }

  CPublishedFile_Unsubscribe_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_Unsubscribe_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_Unsubscribe_Request& from);
  void MergeFrom(const CPublishedFile_Unsubscribe_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_Unsubscribe_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 publishedfileid = 1;
  bool has_publishedfileid() const;
  void clear_publishedfileid();
  static const int kPublishedfileidFieldNumber = 1;
  ::google::protobuf::uint64 publishedfileid() const;
  void set_publishedfileid(::google::protobuf::uint64 value);

  // optional uint32 list_type = 2;
  bool has_list_type() const;
  void clear_list_type();
  static const int kListTypeFieldNumber = 2;
  ::google::protobuf::uint32 list_type() const;
  void set_list_type(::google::protobuf::uint32 value);

  // optional int32 appid = 3;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 3;
  ::google::protobuf::int32 appid() const;
  void set_appid(::google::protobuf::int32 value);

  // optional bool notify_client = 4;
  bool has_notify_client() const;
  void clear_notify_client();
  static const int kNotifyClientFieldNumber = 4;
  bool notify_client() const;
  void set_notify_client(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_Unsubscribe_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 publishedfileid_;
  ::google::protobuf::uint32 list_type_;
  ::google::protobuf::int32 appid_;
  bool notify_client_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_Unsubscribe_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_Unsubscribe_Response) */ {
 public:
  CPublishedFile_Unsubscribe_Response();
  virtual ~CPublishedFile_Unsubscribe_Response();

  CPublishedFile_Unsubscribe_Response(const CPublishedFile_Unsubscribe_Response& from);

  inline CPublishedFile_Unsubscribe_Response& operator=(const CPublishedFile_Unsubscribe_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_Unsubscribe_Response(CPublishedFile_Unsubscribe_Response&& from) noexcept
    : CPublishedFile_Unsubscribe_Response() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_Unsubscribe_Response& operator=(CPublishedFile_Unsubscribe_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_Unsubscribe_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_Unsubscribe_Response* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_Unsubscribe_Response*>(
               &_CPublishedFile_Unsubscribe_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CPublishedFile_Unsubscribe_Response* other);
  friend void swap(CPublishedFile_Unsubscribe_Response& a, CPublishedFile_Unsubscribe_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_Unsubscribe_Response* New() const final {
    return CreateMaybeMessage<CPublishedFile_Unsubscribe_Response>(nullptr);
  }

  CPublishedFile_Unsubscribe_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_Unsubscribe_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_Unsubscribe_Response& from);
  void MergeFrom(const CPublishedFile_Unsubscribe_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_Unsubscribe_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_Unsubscribe_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_Publish_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_Publish_Request) */ {
 public:
  CPublishedFile_Publish_Request();
  virtual ~CPublishedFile_Publish_Request();

  CPublishedFile_Publish_Request(const CPublishedFile_Publish_Request& from);

  inline CPublishedFile_Publish_Request& operator=(const CPublishedFile_Publish_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_Publish_Request(CPublishedFile_Publish_Request&& from) noexcept
    : CPublishedFile_Publish_Request() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_Publish_Request& operator=(CPublishedFile_Publish_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_Publish_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_Publish_Request* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_Publish_Request*>(
               &_CPublishedFile_Publish_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CPublishedFile_Publish_Request* other);
  friend void swap(CPublishedFile_Publish_Request& a, CPublishedFile_Publish_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_Publish_Request* New() const final {
    return CreateMaybeMessage<CPublishedFile_Publish_Request>(nullptr);
  }

  CPublishedFile_Publish_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_Publish_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_Publish_Request& from);
  void MergeFrom(const CPublishedFile_Publish_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_Publish_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string tags = 13 [(.proto.dota.description) = "Array of text tags to apply to the published file."];
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 13;
  const ::std::string& tags(int index) const;
  ::std::string* mutable_tags(int index);
  void set_tags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tags(int index, ::std::string&& value);
  #endif
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  ::std::string* add_tags();
  void add_tags(const ::std::string& value);
  #if LANG_CXX11
  void add_tags(::std::string&& value);
  #endif
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& tags() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_tags();

  // optional string cloudfilename = 3 [(.proto.dota.description) = "Name of the file to publish in the user\'s cloud."];
  bool has_cloudfilename() const;
  void clear_cloudfilename();
  static const int kCloudfilenameFieldNumber = 3;
  const ::std::string& cloudfilename() const;
  void set_cloudfilename(const ::std::string& value);
  #if LANG_CXX11
  void set_cloudfilename(::std::string&& value);
  #endif
  void set_cloudfilename(const char* value);
  void set_cloudfilename(const char* value, size_t size);
  ::std::string* mutable_cloudfilename();
  ::std::string* release_cloudfilename();
  void set_allocated_cloudfilename(::std::string* cloudfilename);

  // optional string preview_cloudfilename = 4 [(.proto.dota.description) = "Name of the file to use as the published file\'s preview."];
  bool has_preview_cloudfilename() const;
  void clear_preview_cloudfilename();
  static const int kPreviewCloudfilenameFieldNumber = 4;
  const ::std::string& preview_cloudfilename() const;
  void set_preview_cloudfilename(const ::std::string& value);
  #if LANG_CXX11
  void set_preview_cloudfilename(::std::string&& value);
  #endif
  void set_preview_cloudfilename(const char* value);
  void set_preview_cloudfilename(const char* value, size_t size);
  ::std::string* mutable_preview_cloudfilename();
  ::std::string* release_preview_cloudfilename();
  void set_allocated_preview_cloudfilename(::std::string* preview_cloudfilename);

  // optional string title = 5 [(.proto.dota.description) = "Text title for the published file."];
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 5;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string file_description = 6 [(.proto.dota.description) = "Text description for the published file."];
  bool has_file_description() const;
  void clear_file_description();
  static const int kFileDescriptionFieldNumber = 6;
  const ::std::string& file_description() const;
  void set_file_description(const ::std::string& value);
  #if LANG_CXX11
  void set_file_description(::std::string&& value);
  #endif
  void set_file_description(const char* value);
  void set_file_description(const char* value, size_t size);
  ::std::string* mutable_file_description();
  ::std::string* release_file_description();
  void set_allocated_file_description(::std::string* file_description);

  // optional string consumer_shortcut_name = 8 [(.proto.dota.description) = "Shortcut name for the published file."];
  bool has_consumer_shortcut_name() const;
  void clear_consumer_shortcut_name();
  static const int kConsumerShortcutNameFieldNumber = 8;
  const ::std::string& consumer_shortcut_name() const;
  void set_consumer_shortcut_name(const ::std::string& value);
  #if LANG_CXX11
  void set_consumer_shortcut_name(::std::string&& value);
  #endif
  void set_consumer_shortcut_name(const char* value);
  void set_consumer_shortcut_name(const char* value, size_t size);
  ::std::string* mutable_consumer_shortcut_name();
  ::std::string* release_consumer_shortcut_name();
  void set_allocated_consumer_shortcut_name(::std::string* consumer_shortcut_name);

  // optional string youtube_username = 9 [(.proto.dota.description) = "(Optional) User\'s YouTube account username."];
  bool has_youtube_username() const;
  void clear_youtube_username();
  static const int kYoutubeUsernameFieldNumber = 9;
  const ::std::string& youtube_username() const;
  void set_youtube_username(const ::std::string& value);
  #if LANG_CXX11
  void set_youtube_username(::std::string&& value);
  #endif
  void set_youtube_username(const char* value);
  void set_youtube_username(const char* value, size_t size);
  ::std::string* mutable_youtube_username();
  ::std::string* release_youtube_username();
  void set_allocated_youtube_username(::std::string* youtube_username);

  // optional string youtube_videoid = 10 [(.proto.dota.description) = "(Optional) Video Id of a YouTube video for this published file."];
  bool has_youtube_videoid() const;
  void clear_youtube_videoid();
  static const int kYoutubeVideoidFieldNumber = 10;
  const ::std::string& youtube_videoid() const;
  void set_youtube_videoid(const ::std::string& value);
  #if LANG_CXX11
  void set_youtube_videoid(::std::string&& value);
  #endif
  void set_youtube_videoid(const char* value);
  void set_youtube_videoid(const char* value, size_t size);
  ::std::string* mutable_youtube_videoid();
  ::std::string* release_youtube_videoid();
  void set_allocated_youtube_videoid(::std::string* youtube_videoid);

  // optional string redirect_uri = 12 [(.proto.dota.description) = "(Optional) If supplied, the resulting published file\'s Id is appended to the URI."];
  bool has_redirect_uri() const;
  void clear_redirect_uri();
  static const int kRedirectUriFieldNumber = 12;
  const ::std::string& redirect_uri() const;
  void set_redirect_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_redirect_uri(::std::string&& value);
  #endif
  void set_redirect_uri(const char* value);
  void set_redirect_uri(const char* value, size_t size);
  ::std::string* mutable_redirect_uri();
  ::std::string* release_redirect_uri();
  void set_allocated_redirect_uri(::std::string* redirect_uri);

  // optional string collection_type = 14 [(.proto.dota.description) = "(Optional) Type of collection the published file represents."];
  bool has_collection_type() const;
  void clear_collection_type();
  static const int kCollectionTypeFieldNumber = 14;
  const ::std::string& collection_type() const;
  void set_collection_type(const ::std::string& value);
  #if LANG_CXX11
  void set_collection_type(::std::string&& value);
  #endif
  void set_collection_type(const char* value);
  void set_collection_type(const char* value, size_t size);
  ::std::string* mutable_collection_type();
  ::std::string* release_collection_type();
  void set_allocated_collection_type(::std::string* collection_type);

  // optional string game_type = 15 [(.proto.dota.description) = "(Optional) Type of game the published file represents."];
  bool has_game_type() const;
  void clear_game_type();
  static const int kGameTypeFieldNumber = 15;
  const ::std::string& game_type() const;
  void set_game_type(const ::std::string& value);
  #if LANG_CXX11
  void set_game_type(::std::string&& value);
  #endif
  void set_game_type(const char* value);
  void set_game_type(const char* value, size_t size);
  ::std::string* mutable_game_type();
  ::std::string* release_game_type();
  void set_allocated_game_type(::std::string* game_type);

  // optional string url = 16 [(.proto.dota.description) = "(Optional) If this represents a game, this is the URL to that game\'s page."];
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 16;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional uint32 appid = 1 [(.proto.dota.description) = "App Id this file is being published FROM."];
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint32 consumer_appid = 2 [(.proto.dota.description) = "App Id this file is being published TO."];
  bool has_consumer_appid() const;
  void clear_consumer_appid();
  static const int kConsumerAppidFieldNumber = 2;
  ::google::protobuf::uint32 consumer_appid() const;
  void set_consumer_appid(::google::protobuf::uint32 value);

  // optional uint32 file_type = 7 [(.proto.dota.description) = "(EWorkshopFileType) Type of Workshop file to publish."];
  bool has_file_type() const;
  void clear_file_type();
  static const int kFileTypeFieldNumber = 7;
  ::google::protobuf::uint32 file_type() const;
  void set_file_type(::google::protobuf::uint32 value);

  // optional uint32 visibility = 11 [(.proto.dota.description) = "(ERemoteStoragePublishedFileVisibility) Visibility of the published file (private, friends, public, etc.)"];
  bool has_visibility() const;
  void clear_visibility();
  static const int kVisibilityFieldNumber = 11;
  ::google::protobuf::uint32 visibility() const;
  void set_visibility(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_Publish_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> tags_;
  ::google::protobuf::internal::ArenaStringPtr cloudfilename_;
  ::google::protobuf::internal::ArenaStringPtr preview_cloudfilename_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr file_description_;
  ::google::protobuf::internal::ArenaStringPtr consumer_shortcut_name_;
  ::google::protobuf::internal::ArenaStringPtr youtube_username_;
  ::google::protobuf::internal::ArenaStringPtr youtube_videoid_;
  ::google::protobuf::internal::ArenaStringPtr redirect_uri_;
  ::google::protobuf::internal::ArenaStringPtr collection_type_;
  ::google::protobuf::internal::ArenaStringPtr game_type_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 consumer_appid_;
  ::google::protobuf::uint32 file_type_;
  ::google::protobuf::uint32 visibility_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_Publish_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_Publish_Response) */ {
 public:
  CPublishedFile_Publish_Response();
  virtual ~CPublishedFile_Publish_Response();

  CPublishedFile_Publish_Response(const CPublishedFile_Publish_Response& from);

  inline CPublishedFile_Publish_Response& operator=(const CPublishedFile_Publish_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_Publish_Response(CPublishedFile_Publish_Response&& from) noexcept
    : CPublishedFile_Publish_Response() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_Publish_Response& operator=(CPublishedFile_Publish_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_Publish_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_Publish_Response* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_Publish_Response*>(
               &_CPublishedFile_Publish_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CPublishedFile_Publish_Response* other);
  friend void swap(CPublishedFile_Publish_Response& a, CPublishedFile_Publish_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_Publish_Response* New() const final {
    return CreateMaybeMessage<CPublishedFile_Publish_Response>(nullptr);
  }

  CPublishedFile_Publish_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_Publish_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_Publish_Response& from);
  void MergeFrom(const CPublishedFile_Publish_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_Publish_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string redirect_uri = 2;
  bool has_redirect_uri() const;
  void clear_redirect_uri();
  static const int kRedirectUriFieldNumber = 2;
  const ::std::string& redirect_uri() const;
  void set_redirect_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_redirect_uri(::std::string&& value);
  #endif
  void set_redirect_uri(const char* value);
  void set_redirect_uri(const char* value, size_t size);
  ::std::string* mutable_redirect_uri();
  ::std::string* release_redirect_uri();
  void set_allocated_redirect_uri(::std::string* redirect_uri);

  // optional uint64 publishedfileid = 1;
  bool has_publishedfileid() const;
  void clear_publishedfileid();
  static const int kPublishedfileidFieldNumber = 1;
  ::google::protobuf::uint64 publishedfileid() const;
  void set_publishedfileid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_Publish_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr redirect_uri_;
  ::google::protobuf::uint64 publishedfileid_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_GetDetails_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_GetDetails_Request) */ {
 public:
  CPublishedFile_GetDetails_Request();
  virtual ~CPublishedFile_GetDetails_Request();

  CPublishedFile_GetDetails_Request(const CPublishedFile_GetDetails_Request& from);

  inline CPublishedFile_GetDetails_Request& operator=(const CPublishedFile_GetDetails_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_GetDetails_Request(CPublishedFile_GetDetails_Request&& from) noexcept
    : CPublishedFile_GetDetails_Request() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_GetDetails_Request& operator=(CPublishedFile_GetDetails_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_GetDetails_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_GetDetails_Request* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_GetDetails_Request*>(
               &_CPublishedFile_GetDetails_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CPublishedFile_GetDetails_Request* other);
  friend void swap(CPublishedFile_GetDetails_Request& a, CPublishedFile_GetDetails_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_GetDetails_Request* New() const final {
    return CreateMaybeMessage<CPublishedFile_GetDetails_Request>(nullptr);
  }

  CPublishedFile_GetDetails_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_GetDetails_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_GetDetails_Request& from);
  void MergeFrom(const CPublishedFile_GetDetails_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_GetDetails_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 publishedfileids = 1 [(.proto.dota.description) = "Set of published file Ids to retrieve details for."];
  int publishedfileids_size() const;
  void clear_publishedfileids();
  static const int kPublishedfileidsFieldNumber = 1;
  ::google::protobuf::uint64 publishedfileids(int index) const;
  void set_publishedfileids(int index, ::google::protobuf::uint64 value);
  void add_publishedfileids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      publishedfileids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_publishedfileids();

  // optional bool includetags = 2 [(.proto.dota.description) = "If true, return tag information in the returned details."];
  bool has_includetags() const;
  void clear_includetags();
  static const int kIncludetagsFieldNumber = 2;
  bool includetags() const;
  void set_includetags(bool value);

  // optional bool includeadditionalpreviews = 3 [(.proto.dota.description) = "If true, return preview information in the returned details."];
  bool has_includeadditionalpreviews() const;
  void clear_includeadditionalpreviews();
  static const int kIncludeadditionalpreviewsFieldNumber = 3;
  bool includeadditionalpreviews() const;
  void set_includeadditionalpreviews(bool value);

  // optional bool includechildren = 4 [(.proto.dota.description) = "If true, return children in the returned details."];
  bool has_includechildren() const;
  void clear_includechildren();
  static const int kIncludechildrenFieldNumber = 4;
  bool includechildren() const;
  void set_includechildren(bool value);

  // optional bool includekvtags = 5 [(.proto.dota.description) = "If true, return key value tags in the returned details."];
  bool has_includekvtags() const;
  void clear_includekvtags();
  static const int kIncludekvtagsFieldNumber = 5;
  bool includekvtags() const;
  void set_includekvtags(bool value);

  // optional bool includevotes = 6 [(.proto.dota.description) = "If true, return vote data in the returned details."];
  bool has_includevotes() const;
  void clear_includevotes();
  static const int kIncludevotesFieldNumber = 6;
  bool includevotes() const;
  void set_includevotes(bool value);

  // optional bool short_description = 8 [(.proto.dota.description) = "If true, return a short description instead of the full description."];
  bool has_short_description() const;
  void clear_short_description();
  static const int kShortDescriptionFieldNumber = 8;
  bool short_description() const;
  void set_short_description(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_GetDetails_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > publishedfileids_;
  bool includetags_;
  bool includeadditionalpreviews_;
  bool includechildren_;
  bool includekvtags_;
  bool includevotes_;
  bool short_description_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class PublishedFileDetails_Tag final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.PublishedFileDetails.Tag) */ {
 public:
  PublishedFileDetails_Tag();
  virtual ~PublishedFileDetails_Tag();

  PublishedFileDetails_Tag(const PublishedFileDetails_Tag& from);

  inline PublishedFileDetails_Tag& operator=(const PublishedFileDetails_Tag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishedFileDetails_Tag(PublishedFileDetails_Tag&& from) noexcept
    : PublishedFileDetails_Tag() {
    *this = ::std::move(from);
  }

  inline PublishedFileDetails_Tag& operator=(PublishedFileDetails_Tag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PublishedFileDetails_Tag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublishedFileDetails_Tag* internal_default_instance() {
    return reinterpret_cast<const PublishedFileDetails_Tag*>(
               &_PublishedFileDetails_Tag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PublishedFileDetails_Tag* other);
  friend void swap(PublishedFileDetails_Tag& a, PublishedFileDetails_Tag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishedFileDetails_Tag* New() const final {
    return CreateMaybeMessage<PublishedFileDetails_Tag>(nullptr);
  }

  PublishedFileDetails_Tag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PublishedFileDetails_Tag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PublishedFileDetails_Tag& from);
  void MergeFrom(const PublishedFileDetails_Tag& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishedFileDetails_Tag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tag = 1;
  bool has_tag() const;
  void clear_tag();
  static const int kTagFieldNumber = 1;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // optional bool adminonly = 2;
  bool has_adminonly() const;
  void clear_adminonly();
  static const int kAdminonlyFieldNumber = 2;
  bool adminonly() const;
  void set_adminonly(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.PublishedFileDetails.Tag)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  bool adminonly_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class PublishedFileDetails_Preview final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.PublishedFileDetails.Preview) */ {
 public:
  PublishedFileDetails_Preview();
  virtual ~PublishedFileDetails_Preview();

  PublishedFileDetails_Preview(const PublishedFileDetails_Preview& from);

  inline PublishedFileDetails_Preview& operator=(const PublishedFileDetails_Preview& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishedFileDetails_Preview(PublishedFileDetails_Preview&& from) noexcept
    : PublishedFileDetails_Preview() {
    *this = ::std::move(from);
  }

  inline PublishedFileDetails_Preview& operator=(PublishedFileDetails_Preview&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PublishedFileDetails_Preview& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublishedFileDetails_Preview* internal_default_instance() {
    return reinterpret_cast<const PublishedFileDetails_Preview*>(
               &_PublishedFileDetails_Preview_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(PublishedFileDetails_Preview* other);
  friend void swap(PublishedFileDetails_Preview& a, PublishedFileDetails_Preview& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishedFileDetails_Preview* New() const final {
    return CreateMaybeMessage<PublishedFileDetails_Preview>(nullptr);
  }

  PublishedFileDetails_Preview* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PublishedFileDetails_Preview>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PublishedFileDetails_Preview& from);
  void MergeFrom(const PublishedFileDetails_Preview& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishedFileDetails_Preview* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 3;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string filename = 5;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 5;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional string youtubevideoid = 6;
  bool has_youtubevideoid() const;
  void clear_youtubevideoid();
  static const int kYoutubevideoidFieldNumber = 6;
  const ::std::string& youtubevideoid() const;
  void set_youtubevideoid(const ::std::string& value);
  #if LANG_CXX11
  void set_youtubevideoid(::std::string&& value);
  #endif
  void set_youtubevideoid(const char* value);
  void set_youtubevideoid(const char* value, size_t size);
  ::std::string* mutable_youtubevideoid();
  ::std::string* release_youtubevideoid();
  void set_allocated_youtubevideoid(::std::string* youtubevideoid);

  // optional uint64 previewid = 1;
  bool has_previewid() const;
  void clear_previewid();
  static const int kPreviewidFieldNumber = 1;
  ::google::protobuf::uint64 previewid() const;
  void set_previewid(::google::protobuf::uint64 value);

  // optional uint32 sortorder = 2;
  bool has_sortorder() const;
  void clear_sortorder();
  static const int kSortorderFieldNumber = 2;
  ::google::protobuf::uint32 sortorder() const;
  void set_sortorder(::google::protobuf::uint32 value);

  // optional uint32 size = 4;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.PublishedFileDetails.Preview)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr youtubevideoid_;
  ::google::protobuf::uint64 previewid_;
  ::google::protobuf::uint32 sortorder_;
  ::google::protobuf::uint32 size_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class PublishedFileDetails_Child final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.PublishedFileDetails.Child) */ {
 public:
  PublishedFileDetails_Child();
  virtual ~PublishedFileDetails_Child();

  PublishedFileDetails_Child(const PublishedFileDetails_Child& from);

  inline PublishedFileDetails_Child& operator=(const PublishedFileDetails_Child& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishedFileDetails_Child(PublishedFileDetails_Child&& from) noexcept
    : PublishedFileDetails_Child() {
    *this = ::std::move(from);
  }

  inline PublishedFileDetails_Child& operator=(PublishedFileDetails_Child&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PublishedFileDetails_Child& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublishedFileDetails_Child* internal_default_instance() {
    return reinterpret_cast<const PublishedFileDetails_Child*>(
               &_PublishedFileDetails_Child_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(PublishedFileDetails_Child* other);
  friend void swap(PublishedFileDetails_Child& a, PublishedFileDetails_Child& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishedFileDetails_Child* New() const final {
    return CreateMaybeMessage<PublishedFileDetails_Child>(nullptr);
  }

  PublishedFileDetails_Child* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PublishedFileDetails_Child>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PublishedFileDetails_Child& from);
  void MergeFrom(const PublishedFileDetails_Child& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishedFileDetails_Child* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 publishedfileid = 1;
  bool has_publishedfileid() const;
  void clear_publishedfileid();
  static const int kPublishedfileidFieldNumber = 1;
  ::google::protobuf::uint64 publishedfileid() const;
  void set_publishedfileid(::google::protobuf::uint64 value);

  // optional uint32 sortorder = 2;
  bool has_sortorder() const;
  void clear_sortorder();
  static const int kSortorderFieldNumber = 2;
  ::google::protobuf::uint32 sortorder() const;
  void set_sortorder(::google::protobuf::uint32 value);

  // optional uint32 file_type = 3;
  bool has_file_type() const;
  void clear_file_type();
  static const int kFileTypeFieldNumber = 3;
  ::google::protobuf::uint32 file_type() const;
  void set_file_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.PublishedFileDetails.Child)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 publishedfileid_;
  ::google::protobuf::uint32 sortorder_;
  ::google::protobuf::uint32 file_type_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class PublishedFileDetails_KVTag final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.PublishedFileDetails.KVTag) */ {
 public:
  PublishedFileDetails_KVTag();
  virtual ~PublishedFileDetails_KVTag();

  PublishedFileDetails_KVTag(const PublishedFileDetails_KVTag& from);

  inline PublishedFileDetails_KVTag& operator=(const PublishedFileDetails_KVTag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishedFileDetails_KVTag(PublishedFileDetails_KVTag&& from) noexcept
    : PublishedFileDetails_KVTag() {
    *this = ::std::move(from);
  }

  inline PublishedFileDetails_KVTag& operator=(PublishedFileDetails_KVTag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PublishedFileDetails_KVTag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublishedFileDetails_KVTag* internal_default_instance() {
    return reinterpret_cast<const PublishedFileDetails_KVTag*>(
               &_PublishedFileDetails_KVTag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(PublishedFileDetails_KVTag* other);
  friend void swap(PublishedFileDetails_KVTag& a, PublishedFileDetails_KVTag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishedFileDetails_KVTag* New() const final {
    return CreateMaybeMessage<PublishedFileDetails_KVTag>(nullptr);
  }

  PublishedFileDetails_KVTag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PublishedFileDetails_KVTag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PublishedFileDetails_KVTag& from);
  void MergeFrom(const PublishedFileDetails_KVTag& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishedFileDetails_KVTag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:proto.dota.PublishedFileDetails.KVTag)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class PublishedFileDetails_VoteData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.PublishedFileDetails.VoteData) */ {
 public:
  PublishedFileDetails_VoteData();
  virtual ~PublishedFileDetails_VoteData();

  PublishedFileDetails_VoteData(const PublishedFileDetails_VoteData& from);

  inline PublishedFileDetails_VoteData& operator=(const PublishedFileDetails_VoteData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishedFileDetails_VoteData(PublishedFileDetails_VoteData&& from) noexcept
    : PublishedFileDetails_VoteData() {
    *this = ::std::move(from);
  }

  inline PublishedFileDetails_VoteData& operator=(PublishedFileDetails_VoteData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PublishedFileDetails_VoteData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublishedFileDetails_VoteData* internal_default_instance() {
    return reinterpret_cast<const PublishedFileDetails_VoteData*>(
               &_PublishedFileDetails_VoteData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(PublishedFileDetails_VoteData* other);
  friend void swap(PublishedFileDetails_VoteData& a, PublishedFileDetails_VoteData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishedFileDetails_VoteData* New() const final {
    return CreateMaybeMessage<PublishedFileDetails_VoteData>(nullptr);
  }

  PublishedFileDetails_VoteData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PublishedFileDetails_VoteData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PublishedFileDetails_VoteData& from);
  void MergeFrom(const PublishedFileDetails_VoteData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishedFileDetails_VoteData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float score = 1;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  float score() const;
  void set_score(float value);

  // optional uint32 votes_up = 2;
  bool has_votes_up() const;
  void clear_votes_up();
  static const int kVotesUpFieldNumber = 2;
  ::google::protobuf::uint32 votes_up() const;
  void set_votes_up(::google::protobuf::uint32 value);

  // optional uint32 votes_down = 3;
  bool has_votes_down() const;
  void clear_votes_down();
  static const int kVotesDownFieldNumber = 3;
  ::google::protobuf::uint32 votes_down() const;
  void set_votes_down(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.PublishedFileDetails.VoteData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float score_;
  ::google::protobuf::uint32 votes_up_;
  ::google::protobuf::uint32 votes_down_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class PublishedFileDetails final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.PublishedFileDetails) */ {
 public:
  PublishedFileDetails();
  virtual ~PublishedFileDetails();

  PublishedFileDetails(const PublishedFileDetails& from);

  inline PublishedFileDetails& operator=(const PublishedFileDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishedFileDetails(PublishedFileDetails&& from) noexcept
    : PublishedFileDetails() {
    *this = ::std::move(from);
  }

  inline PublishedFileDetails& operator=(PublishedFileDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PublishedFileDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublishedFileDetails* internal_default_instance() {
    return reinterpret_cast<const PublishedFileDetails*>(
               &_PublishedFileDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(PublishedFileDetails* other);
  friend void swap(PublishedFileDetails& a, PublishedFileDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishedFileDetails* New() const final {
    return CreateMaybeMessage<PublishedFileDetails>(nullptr);
  }

  PublishedFileDetails* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PublishedFileDetails>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PublishedFileDetails& from);
  void MergeFrom(const PublishedFileDetails& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishedFileDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PublishedFileDetails_Tag Tag;
  typedef PublishedFileDetails_Preview Preview;
  typedef PublishedFileDetails_Child Child;
  typedef PublishedFileDetails_KVTag KVTag;
  typedef PublishedFileDetails_VoteData VoteData;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.PublishedFileDetails.Preview previews = 51;
  int previews_size() const;
  void clear_previews();
  static const int kPreviewsFieldNumber = 51;
  ::proto::dota::PublishedFileDetails_Preview* mutable_previews(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Preview >*
      mutable_previews();
  const ::proto::dota::PublishedFileDetails_Preview& previews(int index) const;
  ::proto::dota::PublishedFileDetails_Preview* add_previews();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Preview >&
      previews() const;

  // repeated .proto.dota.PublishedFileDetails.Tag tags = 52;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 52;
  ::proto::dota::PublishedFileDetails_Tag* mutable_tags(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Tag >*
      mutable_tags();
  const ::proto::dota::PublishedFileDetails_Tag& tags(int index) const;
  ::proto::dota::PublishedFileDetails_Tag* add_tags();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Tag >&
      tags() const;

  // repeated .proto.dota.PublishedFileDetails.Child children = 53;
  int children_size() const;
  void clear_children();
  static const int kChildrenFieldNumber = 53;
  ::proto::dota::PublishedFileDetails_Child* mutable_children(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Child >*
      mutable_children();
  const ::proto::dota::PublishedFileDetails_Child& children(int index) const;
  ::proto::dota::PublishedFileDetails_Child* add_children();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Child >&
      children() const;

  // repeated .proto.dota.PublishedFileDetails.KVTag kvtags = 54;
  int kvtags_size() const;
  void clear_kvtags();
  static const int kKvtagsFieldNumber = 54;
  ::proto::dota::PublishedFileDetails_KVTag* mutable_kvtags(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_KVTag >*
      mutable_kvtags();
  const ::proto::dota::PublishedFileDetails_KVTag& kvtags(int index) const;
  ::proto::dota::PublishedFileDetails_KVTag* add_kvtags();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_KVTag >&
      kvtags() const;

  // optional string filename = 7;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 7;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional string file_url = 10;
  bool has_file_url() const;
  void clear_file_url();
  static const int kFileUrlFieldNumber = 10;
  const ::std::string& file_url() const;
  void set_file_url(const ::std::string& value);
  #if LANG_CXX11
  void set_file_url(::std::string&& value);
  #endif
  void set_file_url(const char* value);
  void set_file_url(const char* value, size_t size);
  ::std::string* mutable_file_url();
  ::std::string* release_file_url();
  void set_allocated_file_url(::std::string* file_url);

  // optional string preview_url = 11;
  bool has_preview_url() const;
  void clear_preview_url();
  static const int kPreviewUrlFieldNumber = 11;
  const ::std::string& preview_url() const;
  void set_preview_url(const ::std::string& value);
  #if LANG_CXX11
  void set_preview_url(::std::string&& value);
  #endif
  void set_preview_url(const char* value);
  void set_preview_url(const char* value, size_t size);
  ::std::string* mutable_preview_url();
  ::std::string* release_preview_url();
  void set_allocated_preview_url(::std::string* preview_url);

  // optional string youtubevideoid = 12;
  bool has_youtubevideoid() const;
  void clear_youtubevideoid();
  static const int kYoutubevideoidFieldNumber = 12;
  const ::std::string& youtubevideoid() const;
  void set_youtubevideoid(const ::std::string& value);
  #if LANG_CXX11
  void set_youtubevideoid(::std::string&& value);
  #endif
  void set_youtubevideoid(const char* value);
  void set_youtubevideoid(const char* value, size_t size);
  ::std::string* mutable_youtubevideoid();
  ::std::string* release_youtubevideoid();
  void set_allocated_youtubevideoid(::std::string* youtubevideoid);

  // optional string url = 13;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 13;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string title = 16;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 16;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string file_description = 17;
  bool has_file_description() const;
  void clear_file_description();
  static const int kFileDescriptionFieldNumber = 17;
  const ::std::string& file_description() const;
  void set_file_description(const ::std::string& value);
  #if LANG_CXX11
  void set_file_description(::std::string&& value);
  #endif
  void set_file_description(const char* value);
  void set_file_description(const char* value, size_t size);
  ::std::string* mutable_file_description();
  ::std::string* release_file_description();
  void set_allocated_file_description(::std::string* file_description);

  // optional string short_description = 18;
  bool has_short_description() const;
  void clear_short_description();
  static const int kShortDescriptionFieldNumber = 18;
  const ::std::string& short_description() const;
  void set_short_description(const ::std::string& value);
  #if LANG_CXX11
  void set_short_description(::std::string&& value);
  #endif
  void set_short_description(const char* value);
  void set_short_description(const char* value, size_t size);
  ::std::string* mutable_short_description();
  ::std::string* release_short_description();
  void set_allocated_short_description(::std::string* short_description);

  // optional string ban_reason = 29;
  bool has_ban_reason() const;
  void clear_ban_reason();
  static const int kBanReasonFieldNumber = 29;
  const ::std::string& ban_reason() const;
  void set_ban_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_ban_reason(::std::string&& value);
  #endif
  void set_ban_reason(const char* value);
  void set_ban_reason(const char* value, size_t size);
  ::std::string* mutable_ban_reason();
  ::std::string* release_ban_reason();
  void set_allocated_ban_reason(::std::string* ban_reason);

  // optional string app_name = 33;
  bool has_app_name() const;
  void clear_app_name();
  static const int kAppNameFieldNumber = 33;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // optional string image_url = 45;
  bool has_image_url() const;
  void clear_image_url();
  static const int kImageUrlFieldNumber = 45;
  const ::std::string& image_url() const;
  void set_image_url(const ::std::string& value);
  #if LANG_CXX11
  void set_image_url(::std::string&& value);
  #endif
  void set_image_url(const char* value);
  void set_image_url(const char* value, size_t size);
  ::std::string* mutable_image_url();
  ::std::string* release_image_url();
  void set_allocated_image_url(::std::string* image_url);

  // optional string shortcutname = 48;
  bool has_shortcutname() const;
  void clear_shortcutname();
  static const int kShortcutnameFieldNumber = 48;
  const ::std::string& shortcutname() const;
  void set_shortcutname(const ::std::string& value);
  #if LANG_CXX11
  void set_shortcutname(::std::string&& value);
  #endif
  void set_shortcutname(const char* value);
  void set_shortcutname(const char* value, size_t size);
  ::std::string* mutable_shortcutname();
  ::std::string* release_shortcutname();
  void set_allocated_shortcutname(::std::string* shortcutname);

  // optional .proto.dota.PublishedFileDetails.VoteData vote_data = 55;
  bool has_vote_data() const;
  void clear_vote_data();
  static const int kVoteDataFieldNumber = 55;
  const ::proto::dota::PublishedFileDetails_VoteData& vote_data() const;
  ::proto::dota::PublishedFileDetails_VoteData* release_vote_data();
  ::proto::dota::PublishedFileDetails_VoteData* mutable_vote_data();
  void set_allocated_vote_data(::proto::dota::PublishedFileDetails_VoteData* vote_data);

  // optional uint64 publishedfileid = 2;
  bool has_publishedfileid() const;
  void clear_publishedfileid();
  static const int kPublishedfileidFieldNumber = 2;
  ::google::protobuf::uint64 publishedfileid() const;
  void set_publishedfileid(::google::protobuf::uint64 value);

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional uint32 creator_appid = 4;
  bool has_creator_appid() const;
  void clear_creator_appid();
  static const int kCreatorAppidFieldNumber = 4;
  ::google::protobuf::uint32 creator_appid() const;
  void set_creator_appid(::google::protobuf::uint32 value);

  // optional fixed64 creator = 3;
  bool has_creator() const;
  void clear_creator();
  static const int kCreatorFieldNumber = 3;
  ::google::protobuf::uint64 creator() const;
  void set_creator(::google::protobuf::uint64 value);

  // optional uint32 consumer_appid = 5;
  bool has_consumer_appid() const;
  void clear_consumer_appid();
  static const int kConsumerAppidFieldNumber = 5;
  ::google::protobuf::uint32 consumer_appid() const;
  void set_consumer_appid(::google::protobuf::uint32 value);

  // optional uint32 consumer_shortcutid = 6;
  bool has_consumer_shortcutid() const;
  void clear_consumer_shortcutid();
  static const int kConsumerShortcutidFieldNumber = 6;
  ::google::protobuf::uint32 consumer_shortcutid() const;
  void set_consumer_shortcutid(::google::protobuf::uint32 value);

  // optional uint64 file_size = 8;
  bool has_file_size() const;
  void clear_file_size();
  static const int kFileSizeFieldNumber = 8;
  ::google::protobuf::uint64 file_size() const;
  void set_file_size(::google::protobuf::uint64 value);

  // optional uint64 preview_file_size = 9;
  bool has_preview_file_size() const;
  void clear_preview_file_size();
  static const int kPreviewFileSizeFieldNumber = 9;
  ::google::protobuf::uint64 preview_file_size() const;
  void set_preview_file_size(::google::protobuf::uint64 value);

  // optional fixed64 hcontent_file = 14;
  bool has_hcontent_file() const;
  void clear_hcontent_file();
  static const int kHcontentFileFieldNumber = 14;
  ::google::protobuf::uint64 hcontent_file() const;
  void set_hcontent_file(::google::protobuf::uint64 value);

  // optional fixed64 hcontent_preview = 15;
  bool has_hcontent_preview() const;
  void clear_hcontent_preview();
  static const int kHcontentPreviewFieldNumber = 15;
  ::google::protobuf::uint64 hcontent_preview() const;
  void set_hcontent_preview(::google::protobuf::uint64 value);

  // optional uint32 time_created = 19;
  bool has_time_created() const;
  void clear_time_created();
  static const int kTimeCreatedFieldNumber = 19;
  ::google::protobuf::uint32 time_created() const;
  void set_time_created(::google::protobuf::uint32 value);

  // optional uint32 time_updated = 20;
  bool has_time_updated() const;
  void clear_time_updated();
  static const int kTimeUpdatedFieldNumber = 20;
  ::google::protobuf::uint32 time_updated() const;
  void set_time_updated(::google::protobuf::uint32 value);

  // optional uint32 visibility = 21;
  bool has_visibility() const;
  void clear_visibility();
  static const int kVisibilityFieldNumber = 21;
  ::google::protobuf::uint32 visibility() const;
  void set_visibility(::google::protobuf::uint32 value);

  // optional uint32 flags = 22;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 22;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // optional bool workshop_file = 23;
  bool has_workshop_file() const;
  void clear_workshop_file();
  static const int kWorkshopFileFieldNumber = 23;
  bool workshop_file() const;
  void set_workshop_file(bool value);

  // optional bool workshop_accepted = 24;
  bool has_workshop_accepted() const;
  void clear_workshop_accepted();
  static const int kWorkshopAcceptedFieldNumber = 24;
  bool workshop_accepted() const;
  void set_workshop_accepted(bool value);

  // optional bool show_subscribe_all = 25;
  bool has_show_subscribe_all() const;
  void clear_show_subscribe_all();
  static const int kShowSubscribeAllFieldNumber = 25;
  bool show_subscribe_all() const;
  void set_show_subscribe_all(bool value);

  // optional bool banned = 28;
  bool has_banned() const;
  void clear_banned();
  static const int kBannedFieldNumber = 28;
  bool banned() const;
  void set_banned(bool value);

  // optional int32 num_comments_developer = 26;
  bool has_num_comments_developer() const;
  void clear_num_comments_developer();
  static const int kNumCommentsDeveloperFieldNumber = 26;
  ::google::protobuf::int32 num_comments_developer() const;
  void set_num_comments_developer(::google::protobuf::int32 value);

  // optional fixed64 banner = 30;
  bool has_banner() const;
  void clear_banner();
  static const int kBannerFieldNumber = 30;
  ::google::protobuf::uint64 banner() const;
  void set_banner(::google::protobuf::uint64 value);

  // optional int32 num_comments_public = 27;
  bool has_num_comments_public() const;
  void clear_num_comments_public();
  static const int kNumCommentsPublicFieldNumber = 27;
  ::google::protobuf::int32 num_comments_public() const;
  void set_num_comments_public(::google::protobuf::int32 value);

  // optional uint32 file_type = 34;
  bool has_file_type() const;
  void clear_file_type();
  static const int kFileTypeFieldNumber = 34;
  ::google::protobuf::uint32 file_type() const;
  void set_file_type(::google::protobuf::uint32 value);

  // optional uint32 subscriptions = 36;
  bool has_subscriptions() const;
  void clear_subscriptions();
  static const int kSubscriptionsFieldNumber = 36;
  ::google::protobuf::uint32 subscriptions() const;
  void set_subscriptions(::google::protobuf::uint32 value);

  // optional bool can_be_deleted = 31;
  bool has_can_be_deleted() const;
  void clear_can_be_deleted();
  static const int kCanBeDeletedFieldNumber = 31;
  bool can_be_deleted() const;
  void set_can_be_deleted(bool value);

  // optional bool incompatible = 32;
  bool has_incompatible() const;
  void clear_incompatible();
  static const int kIncompatibleFieldNumber = 32;
  bool incompatible() const;
  void set_incompatible(bool value);

  // optional bool can_subscribe = 35;
  bool has_can_subscribe() const;
  void clear_can_subscribe();
  static const int kCanSubscribeFieldNumber = 35;
  bool can_subscribe() const;
  void set_can_subscribe(bool value);

  // optional bool spoiler_tag = 46;
  bool has_spoiler_tag() const;
  void clear_spoiler_tag();
  static const int kSpoilerTagFieldNumber = 46;
  bool spoiler_tag() const;
  void set_spoiler_tag(bool value);

  // optional uint32 favorited = 37;
  bool has_favorited() const;
  void clear_favorited();
  static const int kFavoritedFieldNumber = 37;
  ::google::protobuf::uint32 favorited() const;
  void set_favorited(::google::protobuf::uint32 value);

  // optional uint32 followers = 38;
  bool has_followers() const;
  void clear_followers();
  static const int kFollowersFieldNumber = 38;
  ::google::protobuf::uint32 followers() const;
  void set_followers(::google::protobuf::uint32 value);

  // optional uint32 lifetime_subscriptions = 39;
  bool has_lifetime_subscriptions() const;
  void clear_lifetime_subscriptions();
  static const int kLifetimeSubscriptionsFieldNumber = 39;
  ::google::protobuf::uint32 lifetime_subscriptions() const;
  void set_lifetime_subscriptions(::google::protobuf::uint32 value);

  // optional uint32 lifetime_favorited = 40;
  bool has_lifetime_favorited() const;
  void clear_lifetime_favorited();
  static const int kLifetimeFavoritedFieldNumber = 40;
  ::google::protobuf::uint32 lifetime_favorited() const;
  void set_lifetime_favorited(::google::protobuf::uint32 value);

  // optional uint32 lifetime_followers = 41;
  bool has_lifetime_followers() const;
  void clear_lifetime_followers();
  static const int kLifetimeFollowersFieldNumber = 41;
  ::google::protobuf::uint32 lifetime_followers() const;
  void set_lifetime_followers(::google::protobuf::uint32 value);

  // optional uint32 views = 42;
  bool has_views() const;
  void clear_views();
  static const int kViewsFieldNumber = 42;
  ::google::protobuf::uint32 views() const;
  void set_views(::google::protobuf::uint32 value);

  // optional uint32 image_width = 43;
  bool has_image_width() const;
  void clear_image_width();
  static const int kImageWidthFieldNumber = 43;
  ::google::protobuf::uint32 image_width() const;
  void set_image_width(::google::protobuf::uint32 value);

  // optional uint32 image_height = 44;
  bool has_image_height() const;
  void clear_image_height();
  static const int kImageHeightFieldNumber = 44;
  ::google::protobuf::uint32 image_height() const;
  void set_image_height(::google::protobuf::uint32 value);

  // optional uint32 shortcutid = 47;
  bool has_shortcutid() const;
  void clear_shortcutid();
  static const int kShortcutidFieldNumber = 47;
  ::google::protobuf::uint32 shortcutid() const;
  void set_shortcutid(::google::protobuf::uint32 value);

  // optional uint32 num_children = 49;
  bool has_num_children() const;
  void clear_num_children();
  static const int kNumChildrenFieldNumber = 49;
  ::google::protobuf::uint32 num_children() const;
  void set_num_children(::google::protobuf::uint32 value);

  // optional uint32 num_reports = 50;
  bool has_num_reports() const;
  void clear_num_reports();
  static const int kNumReportsFieldNumber = 50;
  ::google::protobuf::uint32 num_reports() const;
  void set_num_reports(::google::protobuf::uint32 value);

  // optional uint32 time_subscribed = 56 [(.proto.dota.description) = "Only valid in PublishedFile.GetUserFiles and not normal PublishedFile.GetDetail calls"];
  bool has_time_subscribed() const;
  void clear_time_subscribed();
  static const int kTimeSubscribedFieldNumber = 56;
  ::google::protobuf::uint32 time_subscribed() const;
  void set_time_subscribed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.PublishedFileDetails)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<2> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Preview > previews_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Tag > tags_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Child > children_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_KVTag > kvtags_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr file_url_;
  ::google::protobuf::internal::ArenaStringPtr preview_url_;
  ::google::protobuf::internal::ArenaStringPtr youtubevideoid_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr file_description_;
  ::google::protobuf::internal::ArenaStringPtr short_description_;
  ::google::protobuf::internal::ArenaStringPtr ban_reason_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr image_url_;
  ::google::protobuf::internal::ArenaStringPtr shortcutname_;
  ::proto::dota::PublishedFileDetails_VoteData* vote_data_;
  ::google::protobuf::uint64 publishedfileid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 creator_appid_;
  ::google::protobuf::uint64 creator_;
  ::google::protobuf::uint32 consumer_appid_;
  ::google::protobuf::uint32 consumer_shortcutid_;
  ::google::protobuf::uint64 file_size_;
  ::google::protobuf::uint64 preview_file_size_;
  ::google::protobuf::uint64 hcontent_file_;
  ::google::protobuf::uint64 hcontent_preview_;
  ::google::protobuf::uint32 time_created_;
  ::google::protobuf::uint32 time_updated_;
  ::google::protobuf::uint32 visibility_;
  ::google::protobuf::uint32 flags_;
  bool workshop_file_;
  bool workshop_accepted_;
  bool show_subscribe_all_;
  bool banned_;
  ::google::protobuf::int32 num_comments_developer_;
  ::google::protobuf::uint64 banner_;
  ::google::protobuf::int32 num_comments_public_;
  ::google::protobuf::uint32 file_type_;
  ::google::protobuf::uint32 subscriptions_;
  bool can_be_deleted_;
  bool incompatible_;
  bool can_subscribe_;
  bool spoiler_tag_;
  ::google::protobuf::uint32 favorited_;
  ::google::protobuf::uint32 followers_;
  ::google::protobuf::uint32 lifetime_subscriptions_;
  ::google::protobuf::uint32 lifetime_favorited_;
  ::google::protobuf::uint32 lifetime_followers_;
  ::google::protobuf::uint32 views_;
  ::google::protobuf::uint32 image_width_;
  ::google::protobuf::uint32 image_height_;
  ::google::protobuf::uint32 shortcutid_;
  ::google::protobuf::uint32 num_children_;
  ::google::protobuf::uint32 num_reports_;
  ::google::protobuf::uint32 time_subscribed_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_GetDetails_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_GetDetails_Response) */ {
 public:
  CPublishedFile_GetDetails_Response();
  virtual ~CPublishedFile_GetDetails_Response();

  CPublishedFile_GetDetails_Response(const CPublishedFile_GetDetails_Response& from);

  inline CPublishedFile_GetDetails_Response& operator=(const CPublishedFile_GetDetails_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_GetDetails_Response(CPublishedFile_GetDetails_Response&& from) noexcept
    : CPublishedFile_GetDetails_Response() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_GetDetails_Response& operator=(CPublishedFile_GetDetails_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_GetDetails_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_GetDetails_Response* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_GetDetails_Response*>(
               &_CPublishedFile_GetDetails_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CPublishedFile_GetDetails_Response* other);
  friend void swap(CPublishedFile_GetDetails_Response& a, CPublishedFile_GetDetails_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_GetDetails_Response* New() const final {
    return CreateMaybeMessage<CPublishedFile_GetDetails_Response>(nullptr);
  }

  CPublishedFile_GetDetails_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_GetDetails_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_GetDetails_Response& from);
  void MergeFrom(const CPublishedFile_GetDetails_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_GetDetails_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.PublishedFileDetails publishedfiledetails = 1;
  int publishedfiledetails_size() const;
  void clear_publishedfiledetails();
  static const int kPublishedfiledetailsFieldNumber = 1;
  ::proto::dota::PublishedFileDetails* mutable_publishedfiledetails(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails >*
      mutable_publishedfiledetails();
  const ::proto::dota::PublishedFileDetails& publishedfiledetails(int index) const;
  ::proto::dota::PublishedFileDetails* add_publishedfiledetails();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails >&
      publishedfiledetails() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_GetDetails_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails > publishedfiledetails_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_GetUserFiles_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_GetUserFiles_Request) */ {
 public:
  CPublishedFile_GetUserFiles_Request();
  virtual ~CPublishedFile_GetUserFiles_Request();

  CPublishedFile_GetUserFiles_Request(const CPublishedFile_GetUserFiles_Request& from);

  inline CPublishedFile_GetUserFiles_Request& operator=(const CPublishedFile_GetUserFiles_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_GetUserFiles_Request(CPublishedFile_GetUserFiles_Request&& from) noexcept
    : CPublishedFile_GetUserFiles_Request() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_GetUserFiles_Request& operator=(CPublishedFile_GetUserFiles_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_GetUserFiles_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_GetUserFiles_Request* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_GetUserFiles_Request*>(
               &_CPublishedFile_GetUserFiles_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CPublishedFile_GetUserFiles_Request* other);
  friend void swap(CPublishedFile_GetUserFiles_Request& a, CPublishedFile_GetUserFiles_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_GetUserFiles_Request* New() const final {
    return CreateMaybeMessage<CPublishedFile_GetUserFiles_Request>(nullptr);
  }

  CPublishedFile_GetUserFiles_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_GetUserFiles_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_GetUserFiles_Request& from);
  void MergeFrom(const CPublishedFile_GetUserFiles_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_GetUserFiles_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string requiredtags = 11 [(.proto.dota.description) = "(Optional) Tags that must be present on a published file to satisfy the query."];
  int requiredtags_size() const;
  void clear_requiredtags();
  static const int kRequiredtagsFieldNumber = 11;
  const ::std::string& requiredtags(int index) const;
  ::std::string* mutable_requiredtags(int index);
  void set_requiredtags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_requiredtags(int index, ::std::string&& value);
  #endif
  void set_requiredtags(int index, const char* value);
  void set_requiredtags(int index, const char* value, size_t size);
  ::std::string* add_requiredtags();
  void add_requiredtags(const ::std::string& value);
  #if LANG_CXX11
  void add_requiredtags(::std::string&& value);
  #endif
  void add_requiredtags(const char* value);
  void add_requiredtags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& requiredtags() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_requiredtags();

  // repeated string excludedtags = 12 [(.proto.dota.description) = "(Optional) Tags that must NOT be present on a published file to satisfy the query."];
  int excludedtags_size() const;
  void clear_excludedtags();
  static const int kExcludedtagsFieldNumber = 12;
  const ::std::string& excludedtags(int index) const;
  ::std::string* mutable_excludedtags(int index);
  void set_excludedtags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_excludedtags(int index, ::std::string&& value);
  #endif
  void set_excludedtags(int index, const char* value);
  void set_excludedtags(int index, const char* value, size_t size);
  ::std::string* add_excludedtags();
  void add_excludedtags(const ::std::string& value);
  #if LANG_CXX11
  void add_excludedtags(::std::string&& value);
  #endif
  void add_excludedtags(const char* value);
  void add_excludedtags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& excludedtags() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_excludedtags();

  // optional string sortmethod = 6 [default = "lastupdated", (.proto.dota.description) = "(Optional) Sorting method to use on returned values."];
  bool has_sortmethod() const;
  void clear_sortmethod();
  static const int kSortmethodFieldNumber = 6;
  const ::std::string& sortmethod() const;
  void set_sortmethod(const ::std::string& value);
  #if LANG_CXX11
  void set_sortmethod(::std::string&& value);
  #endif
  void set_sortmethod(const char* value);
  void set_sortmethod(const char* value, size_t size);
  ::std::string* mutable_sortmethod();
  ::std::string* release_sortmethod();
  void set_allocated_sortmethod(::std::string* sortmethod);

  // optional uint32 appid = 1 [(.proto.dota.description) = "App Id to retrieve published files from."];
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional bool totalonly = 7 [(.proto.dota.description) = "(Optional) If true, only return the total number of files that satisfy this query."];
  bool has_totalonly() const;
  void clear_totalonly();
  static const int kTotalonlyFieldNumber = 7;
  bool totalonly() const;
  void set_totalonly(bool value);

  // optional bool ids_only = 10 [(.proto.dota.description) = "(Optional) If true, only return the published file ids of files that satisfy this query."];
  bool has_ids_only() const;
  void clear_ids_only();
  static const int kIdsOnlyFieldNumber = 10;
  bool ids_only() const;
  void set_ids_only(bool value);

  // optional uint32 privacy = 9 [(.proto.dota.description) = "(optional) Filter by privacy settings."];
  bool has_privacy() const;
  void clear_privacy();
  static const int kPrivacyFieldNumber = 9;
  ::google::protobuf::uint32 privacy() const;
  void set_privacy(::google::protobuf::uint32 value);

  // optional uint32 page = 3 [default = 1, (.proto.dota.description) = "(Optional) Starting page for results."];
  bool has_page() const;
  void clear_page();
  static const int kPageFieldNumber = 3;
  ::google::protobuf::uint32 page() const;
  void set_page(::google::protobuf::uint32 value);

  // optional uint32 numperpage = 4 [default = 1, (.proto.dota.description) = "(Optional) The number of results, per page to return."];
  bool has_numperpage() const;
  void clear_numperpage();
  static const int kNumperpageFieldNumber = 4;
  ::google::protobuf::uint32 numperpage() const;
  void set_numperpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_GetUserFiles_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> requiredtags_;
  ::google::protobuf::RepeatedPtrField<::std::string> excludedtags_;
  public:
  static ::google::protobuf::internal::ExplicitlyConstructed<::std::string> _i_give_permission_to_break_this_code_default_sortmethod_;
  private:
  ::google::protobuf::internal::ArenaStringPtr sortmethod_;
  ::google::protobuf::uint32 appid_;
  bool totalonly_;
  bool ids_only_;
  ::google::protobuf::uint32 privacy_;
  ::google::protobuf::uint32 page_;
  ::google::protobuf::uint32 numperpage_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_GetUserFiles_Response_App final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_GetUserFiles_Response.App) */ {
 public:
  CPublishedFile_GetUserFiles_Response_App();
  virtual ~CPublishedFile_GetUserFiles_Response_App();

  CPublishedFile_GetUserFiles_Response_App(const CPublishedFile_GetUserFiles_Response_App& from);

  inline CPublishedFile_GetUserFiles_Response_App& operator=(const CPublishedFile_GetUserFiles_Response_App& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_GetUserFiles_Response_App(CPublishedFile_GetUserFiles_Response_App&& from) noexcept
    : CPublishedFile_GetUserFiles_Response_App() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_GetUserFiles_Response_App& operator=(CPublishedFile_GetUserFiles_Response_App&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_GetUserFiles_Response_App& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_GetUserFiles_Response_App* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_GetUserFiles_Response_App*>(
               &_CPublishedFile_GetUserFiles_Response_App_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(CPublishedFile_GetUserFiles_Response_App* other);
  friend void swap(CPublishedFile_GetUserFiles_Response_App& a, CPublishedFile_GetUserFiles_Response_App& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_GetUserFiles_Response_App* New() const final {
    return CreateMaybeMessage<CPublishedFile_GetUserFiles_Response_App>(nullptr);
  }

  CPublishedFile_GetUserFiles_Response_App* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_GetUserFiles_Response_App>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_GetUserFiles_Response_App& from);
  void MergeFrom(const CPublishedFile_GetUserFiles_Response_App& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_GetUserFiles_Response_App* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint32 shortcutid = 3;
  bool has_shortcutid() const;
  void clear_shortcutid();
  static const int kShortcutidFieldNumber = 3;
  ::google::protobuf::uint32 shortcutid() const;
  void set_shortcutid(::google::protobuf::uint32 value);

  // optional bool private = 4;
  bool has_private_() const;
  void clear_private_();
  static const int kPrivateFieldNumber = 4;
  bool private_() const;
  void set_private_(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_GetUserFiles_Response.App)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 shortcutid_;
  bool private__;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_GetUserFiles_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_GetUserFiles_Response) */ {
 public:
  CPublishedFile_GetUserFiles_Response();
  virtual ~CPublishedFile_GetUserFiles_Response();

  CPublishedFile_GetUserFiles_Response(const CPublishedFile_GetUserFiles_Response& from);

  inline CPublishedFile_GetUserFiles_Response& operator=(const CPublishedFile_GetUserFiles_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_GetUserFiles_Response(CPublishedFile_GetUserFiles_Response&& from) noexcept
    : CPublishedFile_GetUserFiles_Response() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_GetUserFiles_Response& operator=(CPublishedFile_GetUserFiles_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_GetUserFiles_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_GetUserFiles_Response* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_GetUserFiles_Response*>(
               &_CPublishedFile_GetUserFiles_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CPublishedFile_GetUserFiles_Response* other);
  friend void swap(CPublishedFile_GetUserFiles_Response& a, CPublishedFile_GetUserFiles_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_GetUserFiles_Response* New() const final {
    return CreateMaybeMessage<CPublishedFile_GetUserFiles_Response>(nullptr);
  }

  CPublishedFile_GetUserFiles_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_GetUserFiles_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_GetUserFiles_Response& from);
  void MergeFrom(const CPublishedFile_GetUserFiles_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_GetUserFiles_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CPublishedFile_GetUserFiles_Response_App App;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.PublishedFileDetails publishedfiledetails = 3;
  int publishedfiledetails_size() const;
  void clear_publishedfiledetails();
  static const int kPublishedfiledetailsFieldNumber = 3;
  ::proto::dota::PublishedFileDetails* mutable_publishedfiledetails(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails >*
      mutable_publishedfiledetails();
  const ::proto::dota::PublishedFileDetails& publishedfiledetails(int index) const;
  ::proto::dota::PublishedFileDetails* add_publishedfiledetails();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails >&
      publishedfiledetails() const;

  // repeated .proto.dota.CPublishedFile_GetUserFiles_Response.App apps = 4;
  int apps_size() const;
  void clear_apps();
  static const int kAppsFieldNumber = 4;
  ::proto::dota::CPublishedFile_GetUserFiles_Response_App* mutable_apps(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CPublishedFile_GetUserFiles_Response_App >*
      mutable_apps();
  const ::proto::dota::CPublishedFile_GetUserFiles_Response_App& apps(int index) const;
  ::proto::dota::CPublishedFile_GetUserFiles_Response_App* add_apps();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CPublishedFile_GetUserFiles_Response_App >&
      apps() const;

  // optional uint32 total = 1;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 1;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 startindex = 2;
  bool has_startindex() const;
  void clear_startindex();
  static const int kStartindexFieldNumber = 2;
  ::google::protobuf::uint32 startindex() const;
  void set_startindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_GetUserFiles_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails > publishedfiledetails_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CPublishedFile_GetUserFiles_Response_App > apps_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 startindex_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_Update_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_Update_Request) */ {
 public:
  CPublishedFile_Update_Request();
  virtual ~CPublishedFile_Update_Request();

  CPublishedFile_Update_Request(const CPublishedFile_Update_Request& from);

  inline CPublishedFile_Update_Request& operator=(const CPublishedFile_Update_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_Update_Request(CPublishedFile_Update_Request&& from) noexcept
    : CPublishedFile_Update_Request() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_Update_Request& operator=(CPublishedFile_Update_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_Update_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_Update_Request* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_Update_Request*>(
               &_CPublishedFile_Update_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CPublishedFile_Update_Request* other);
  friend void swap(CPublishedFile_Update_Request& a, CPublishedFile_Update_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_Update_Request* New() const final {
    return CreateMaybeMessage<CPublishedFile_Update_Request>(nullptr);
  }

  CPublishedFile_Update_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_Update_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_Update_Request& from);
  void MergeFrom(const CPublishedFile_Update_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_Update_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string tags = 6 [(.proto.dota.description) = "(Optional) Set of tags for the published file."];
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 6;
  const ::std::string& tags(int index) const;
  ::std::string* mutable_tags(int index);
  void set_tags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tags(int index, ::std::string&& value);
  #endif
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  ::std::string* add_tags();
  void add_tags(const ::std::string& value);
  #if LANG_CXX11
  void add_tags(::std::string&& value);
  #endif
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& tags() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_tags();

  // optional string title = 3 [(.proto.dota.description) = "(Optional) Title of the published file."];
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string file_description = 4 [(.proto.dota.description) = "(Optional) Description of the published file."];
  bool has_file_description() const;
  void clear_file_description();
  static const int kFileDescriptionFieldNumber = 4;
  const ::std::string& file_description() const;
  void set_file_description(const ::std::string& value);
  #if LANG_CXX11
  void set_file_description(::std::string&& value);
  #endif
  void set_file_description(const char* value);
  void set_file_description(const char* value, size_t size);
  ::std::string* mutable_file_description();
  ::std::string* release_file_description();
  void set_allocated_file_description(::std::string* file_description);

  // optional string filename = 7 [(.proto.dota.description) = "(Optional) Filename for the published file."];
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 7;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional string preview_filename = 8 [(.proto.dota.description) = "(Optional) Preview filename for the published file."];
  bool has_preview_filename() const;
  void clear_preview_filename();
  static const int kPreviewFilenameFieldNumber = 8;
  const ::std::string& preview_filename() const;
  void set_preview_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_preview_filename(::std::string&& value);
  #endif
  void set_preview_filename(const char* value);
  void set_preview_filename(const char* value, size_t size);
  ::std::string* mutable_preview_filename();
  ::std::string* release_preview_filename();
  void set_allocated_preview_filename(::std::string* preview_filename);

  // optional fixed64 publishedfileid = 2 [(.proto.dota.description) = "Published file id of the file we\'d like update."];
  bool has_publishedfileid() const;
  void clear_publishedfileid();
  static const int kPublishedfileidFieldNumber = 2;
  ::google::protobuf::uint64 publishedfileid() const;
  void set_publishedfileid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1 [(.proto.dota.description) = "App Id this published file belongs to."];
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint32 visibility = 5 [(.proto.dota.description) = "(Optional) Visibility of the published file."];
  bool has_visibility() const;
  void clear_visibility();
  static const int kVisibilityFieldNumber = 5;
  ::google::protobuf::uint32 visibility() const;
  void set_visibility(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_Update_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> tags_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr file_description_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr preview_filename_;
  ::google::protobuf::uint64 publishedfileid_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 visibility_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_Update_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_Update_Response) */ {
 public:
  CPublishedFile_Update_Response();
  virtual ~CPublishedFile_Update_Response();

  CPublishedFile_Update_Response(const CPublishedFile_Update_Response& from);

  inline CPublishedFile_Update_Response& operator=(const CPublishedFile_Update_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_Update_Response(CPublishedFile_Update_Response&& from) noexcept
    : CPublishedFile_Update_Response() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_Update_Response& operator=(CPublishedFile_Update_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_Update_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_Update_Response* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_Update_Response*>(
               &_CPublishedFile_Update_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(CPublishedFile_Update_Response* other);
  friend void swap(CPublishedFile_Update_Response& a, CPublishedFile_Update_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_Update_Response* New() const final {
    return CreateMaybeMessage<CPublishedFile_Update_Response>(nullptr);
  }

  CPublishedFile_Update_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_Update_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_Update_Response& from);
  void MergeFrom(const CPublishedFile_Update_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_Update_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_Update_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_RefreshVotingQueue_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_RefreshVotingQueue_Request) */ {
 public:
  CPublishedFile_RefreshVotingQueue_Request();
  virtual ~CPublishedFile_RefreshVotingQueue_Request();

  CPublishedFile_RefreshVotingQueue_Request(const CPublishedFile_RefreshVotingQueue_Request& from);

  inline CPublishedFile_RefreshVotingQueue_Request& operator=(const CPublishedFile_RefreshVotingQueue_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_RefreshVotingQueue_Request(CPublishedFile_RefreshVotingQueue_Request&& from) noexcept
    : CPublishedFile_RefreshVotingQueue_Request() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_RefreshVotingQueue_Request& operator=(CPublishedFile_RefreshVotingQueue_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_RefreshVotingQueue_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_RefreshVotingQueue_Request* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_RefreshVotingQueue_Request*>(
               &_CPublishedFile_RefreshVotingQueue_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(CPublishedFile_RefreshVotingQueue_Request* other);
  friend void swap(CPublishedFile_RefreshVotingQueue_Request& a, CPublishedFile_RefreshVotingQueue_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_RefreshVotingQueue_Request* New() const final {
    return CreateMaybeMessage<CPublishedFile_RefreshVotingQueue_Request>(nullptr);
  }

  CPublishedFile_RefreshVotingQueue_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_RefreshVotingQueue_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_RefreshVotingQueue_Request& from);
  void MergeFrom(const CPublishedFile_RefreshVotingQueue_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_RefreshVotingQueue_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string tags = 3 [(.proto.dota.description) = "Include files that have all the tags or any of the tags if match_all_tags is set to false."];
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 3;
  const ::std::string& tags(int index) const;
  ::std::string* mutable_tags(int index);
  void set_tags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tags(int index, ::std::string&& value);
  #endif
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  ::std::string* add_tags();
  void add_tags(const ::std::string& value);
  #if LANG_CXX11
  void add_tags(::std::string&& value);
  #endif
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& tags() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_tags();

  // repeated string excluded_tags = 5 [(.proto.dota.description) = "Exclude any files that have any of these tags."];
  int excluded_tags_size() const;
  void clear_excluded_tags();
  static const int kExcludedTagsFieldNumber = 5;
  const ::std::string& excluded_tags(int index) const;
  ::std::string* mutable_excluded_tags(int index);
  void set_excluded_tags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_excluded_tags(int index, ::std::string&& value);
  #endif
  void set_excluded_tags(int index, const char* value);
  void set_excluded_tags(int index, const char* value, size_t size);
  ::std::string* add_excluded_tags();
  void add_excluded_tags(const ::std::string& value);
  #if LANG_CXX11
  void add_excluded_tags(::std::string&& value);
  #endif
  void add_excluded_tags(const char* value);
  void add_excluded_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& excluded_tags() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_excluded_tags();

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint32 matching_file_type = 2 [(.proto.dota.description) = "EPublishedFileInfoMatchingFileType"];
  bool has_matching_file_type() const;
  void clear_matching_file_type();
  static const int kMatchingFileTypeFieldNumber = 2;
  ::google::protobuf::uint32 matching_file_type() const;
  void set_matching_file_type(::google::protobuf::uint32 value);

  // optional uint32 desired_queue_size = 6 [(.proto.dota.description) = "Desired number of items in the voting queue.  May be clamped by the server"];
  bool has_desired_queue_size() const;
  void clear_desired_queue_size();
  static const int kDesiredQueueSizeFieldNumber = 6;
  ::google::protobuf::uint32 desired_queue_size() const;
  void set_desired_queue_size(::google::protobuf::uint32 value);

  // optional bool match_all_tags = 4 [default = true, (.proto.dota.description) = "If true, then files must have all the tags specified.  If false, then must have at least one of the tags specified."];
  bool has_match_all_tags() const;
  void clear_match_all_tags();
  static const int kMatchAllTagsFieldNumber = 4;
  bool match_all_tags() const;
  void set_match_all_tags(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_RefreshVotingQueue_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> tags_;
  ::google::protobuf::RepeatedPtrField<::std::string> excluded_tags_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 matching_file_type_;
  ::google::protobuf::uint32 desired_queue_size_;
  bool match_all_tags_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CPublishedFile_RefreshVotingQueue_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CPublishedFile_RefreshVotingQueue_Response) */ {
 public:
  CPublishedFile_RefreshVotingQueue_Response();
  virtual ~CPublishedFile_RefreshVotingQueue_Response();

  CPublishedFile_RefreshVotingQueue_Response(const CPublishedFile_RefreshVotingQueue_Response& from);

  inline CPublishedFile_RefreshVotingQueue_Response& operator=(const CPublishedFile_RefreshVotingQueue_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CPublishedFile_RefreshVotingQueue_Response(CPublishedFile_RefreshVotingQueue_Response&& from) noexcept
    : CPublishedFile_RefreshVotingQueue_Response() {
    *this = ::std::move(from);
  }

  inline CPublishedFile_RefreshVotingQueue_Response& operator=(CPublishedFile_RefreshVotingQueue_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CPublishedFile_RefreshVotingQueue_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CPublishedFile_RefreshVotingQueue_Response* internal_default_instance() {
    return reinterpret_cast<const CPublishedFile_RefreshVotingQueue_Response*>(
               &_CPublishedFile_RefreshVotingQueue_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(CPublishedFile_RefreshVotingQueue_Response* other);
  friend void swap(CPublishedFile_RefreshVotingQueue_Response& a, CPublishedFile_RefreshVotingQueue_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CPublishedFile_RefreshVotingQueue_Response* New() const final {
    return CreateMaybeMessage<CPublishedFile_RefreshVotingQueue_Response>(nullptr);
  }

  CPublishedFile_RefreshVotingQueue_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CPublishedFile_RefreshVotingQueue_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CPublishedFile_RefreshVotingQueue_Response& from);
  void MergeFrom(const CPublishedFile_RefreshVotingQueue_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPublishedFile_RefreshVotingQueue_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CPublishedFile_RefreshVotingQueue_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fpublishedfile_2esteamworkssdk_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CPublishedFile_Subscribe_Request

// optional uint64 publishedfileid = 1;
inline bool CPublishedFile_Subscribe_Request::has_publishedfileid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CPublishedFile_Subscribe_Request::clear_publishedfileid() {
  publishedfileid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CPublishedFile_Subscribe_Request::publishedfileid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Subscribe_Request.publishedfileid)
  return publishedfileid_;
}
inline void CPublishedFile_Subscribe_Request::set_publishedfileid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  publishedfileid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Subscribe_Request.publishedfileid)
}

// optional uint32 list_type = 2;
inline bool CPublishedFile_Subscribe_Request::has_list_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CPublishedFile_Subscribe_Request::clear_list_type() {
  list_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CPublishedFile_Subscribe_Request::list_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Subscribe_Request.list_type)
  return list_type_;
}
inline void CPublishedFile_Subscribe_Request::set_list_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  list_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Subscribe_Request.list_type)
}

// optional int32 appid = 3;
inline bool CPublishedFile_Subscribe_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CPublishedFile_Subscribe_Request::clear_appid() {
  appid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CPublishedFile_Subscribe_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Subscribe_Request.appid)
  return appid_;
}
inline void CPublishedFile_Subscribe_Request::set_appid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Subscribe_Request.appid)
}

// optional bool notify_client = 4;
inline bool CPublishedFile_Subscribe_Request::has_notify_client() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CPublishedFile_Subscribe_Request::clear_notify_client() {
  notify_client_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CPublishedFile_Subscribe_Request::notify_client() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Subscribe_Request.notify_client)
  return notify_client_;
}
inline void CPublishedFile_Subscribe_Request::set_notify_client(bool value) {
  _has_bits_[0] |= 0x00000008u;
  notify_client_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Subscribe_Request.notify_client)
}

// -------------------------------------------------------------------

// CPublishedFile_Subscribe_Response

// -------------------------------------------------------------------

// CPublishedFile_Unsubscribe_Request

// optional uint64 publishedfileid = 1;
inline bool CPublishedFile_Unsubscribe_Request::has_publishedfileid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CPublishedFile_Unsubscribe_Request::clear_publishedfileid() {
  publishedfileid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CPublishedFile_Unsubscribe_Request::publishedfileid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Unsubscribe_Request.publishedfileid)
  return publishedfileid_;
}
inline void CPublishedFile_Unsubscribe_Request::set_publishedfileid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  publishedfileid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Unsubscribe_Request.publishedfileid)
}

// optional uint32 list_type = 2;
inline bool CPublishedFile_Unsubscribe_Request::has_list_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CPublishedFile_Unsubscribe_Request::clear_list_type() {
  list_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CPublishedFile_Unsubscribe_Request::list_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Unsubscribe_Request.list_type)
  return list_type_;
}
inline void CPublishedFile_Unsubscribe_Request::set_list_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  list_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Unsubscribe_Request.list_type)
}

// optional int32 appid = 3;
inline bool CPublishedFile_Unsubscribe_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CPublishedFile_Unsubscribe_Request::clear_appid() {
  appid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CPublishedFile_Unsubscribe_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Unsubscribe_Request.appid)
  return appid_;
}
inline void CPublishedFile_Unsubscribe_Request::set_appid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Unsubscribe_Request.appid)
}

// optional bool notify_client = 4;
inline bool CPublishedFile_Unsubscribe_Request::has_notify_client() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CPublishedFile_Unsubscribe_Request::clear_notify_client() {
  notify_client_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CPublishedFile_Unsubscribe_Request::notify_client() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Unsubscribe_Request.notify_client)
  return notify_client_;
}
inline void CPublishedFile_Unsubscribe_Request::set_notify_client(bool value) {
  _has_bits_[0] |= 0x00000008u;
  notify_client_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Unsubscribe_Request.notify_client)
}

// -------------------------------------------------------------------

// CPublishedFile_Unsubscribe_Response

// -------------------------------------------------------------------

// CPublishedFile_Publish_Request

// optional uint32 appid = 1 [(.proto.dota.description) = "App Id this file is being published FROM."];
inline bool CPublishedFile_Publish_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CPublishedFile_Publish_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.appid)
  return appid_;
}
inline void CPublishedFile_Publish_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.appid)
}

// optional uint32 consumer_appid = 2 [(.proto.dota.description) = "App Id this file is being published TO."];
inline bool CPublishedFile_Publish_Request::has_consumer_appid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_consumer_appid() {
  consumer_appid_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 CPublishedFile_Publish_Request::consumer_appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.consumer_appid)
  return consumer_appid_;
}
inline void CPublishedFile_Publish_Request::set_consumer_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  consumer_appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.consumer_appid)
}

// optional string cloudfilename = 3 [(.proto.dota.description) = "Name of the file to publish in the user\'s cloud."];
inline bool CPublishedFile_Publish_Request::has_cloudfilename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_cloudfilename() {
  cloudfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CPublishedFile_Publish_Request::cloudfilename() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.cloudfilename)
  return cloudfilename_.GetNoArena();
}
inline void CPublishedFile_Publish_Request::set_cloudfilename(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  cloudfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.cloudfilename)
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Request::set_cloudfilename(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  cloudfilename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Publish_Request.cloudfilename)
}
#endif
inline void CPublishedFile_Publish_Request::set_cloudfilename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  cloudfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Publish_Request.cloudfilename)
}
inline void CPublishedFile_Publish_Request::set_cloudfilename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  cloudfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Publish_Request.cloudfilename)
}
inline ::std::string* CPublishedFile_Publish_Request::mutable_cloudfilename() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Publish_Request.cloudfilename)
  return cloudfilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Publish_Request::release_cloudfilename() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Publish_Request.cloudfilename)
  if (!has_cloudfilename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return cloudfilename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Publish_Request::set_allocated_cloudfilename(::std::string* cloudfilename) {
  if (cloudfilename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  cloudfilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cloudfilename);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Publish_Request.cloudfilename)
}

// optional string preview_cloudfilename = 4 [(.proto.dota.description) = "Name of the file to use as the published file\'s preview."];
inline bool CPublishedFile_Publish_Request::has_preview_cloudfilename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_preview_cloudfilename() {
  preview_cloudfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CPublishedFile_Publish_Request::preview_cloudfilename() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.preview_cloudfilename)
  return preview_cloudfilename_.GetNoArena();
}
inline void CPublishedFile_Publish_Request::set_preview_cloudfilename(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  preview_cloudfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.preview_cloudfilename)
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Request::set_preview_cloudfilename(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  preview_cloudfilename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Publish_Request.preview_cloudfilename)
}
#endif
inline void CPublishedFile_Publish_Request::set_preview_cloudfilename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  preview_cloudfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Publish_Request.preview_cloudfilename)
}
inline void CPublishedFile_Publish_Request::set_preview_cloudfilename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  preview_cloudfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Publish_Request.preview_cloudfilename)
}
inline ::std::string* CPublishedFile_Publish_Request::mutable_preview_cloudfilename() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Publish_Request.preview_cloudfilename)
  return preview_cloudfilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Publish_Request::release_preview_cloudfilename() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Publish_Request.preview_cloudfilename)
  if (!has_preview_cloudfilename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return preview_cloudfilename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Publish_Request::set_allocated_preview_cloudfilename(::std::string* preview_cloudfilename) {
  if (preview_cloudfilename != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  preview_cloudfilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), preview_cloudfilename);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Publish_Request.preview_cloudfilename)
}

// optional string title = 5 [(.proto.dota.description) = "Text title for the published file."];
inline bool CPublishedFile_Publish_Request::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CPublishedFile_Publish_Request::title() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.title)
  return title_.GetNoArena();
}
inline void CPublishedFile_Publish_Request::set_title(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.title)
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Request::set_title(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Publish_Request.title)
}
#endif
inline void CPublishedFile_Publish_Request::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Publish_Request.title)
}
inline void CPublishedFile_Publish_Request::set_title(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Publish_Request.title)
}
inline ::std::string* CPublishedFile_Publish_Request::mutable_title() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Publish_Request.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Publish_Request::release_title() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Publish_Request.title)
  if (!has_title()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return title_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Publish_Request::set_allocated_title(::std::string* title) {
  if (title != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Publish_Request.title)
}

// optional string file_description = 6 [(.proto.dota.description) = "Text description for the published file."];
inline bool CPublishedFile_Publish_Request::has_file_description() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_file_description() {
  file_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& CPublishedFile_Publish_Request::file_description() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.file_description)
  return file_description_.GetNoArena();
}
inline void CPublishedFile_Publish_Request::set_file_description(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  file_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.file_description)
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Request::set_file_description(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  file_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Publish_Request.file_description)
}
#endif
inline void CPublishedFile_Publish_Request::set_file_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  file_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Publish_Request.file_description)
}
inline void CPublishedFile_Publish_Request::set_file_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  file_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Publish_Request.file_description)
}
inline ::std::string* CPublishedFile_Publish_Request::mutable_file_description() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Publish_Request.file_description)
  return file_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Publish_Request::release_file_description() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Publish_Request.file_description)
  if (!has_file_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return file_description_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Publish_Request::set_allocated_file_description(::std::string* file_description) {
  if (file_description != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  file_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_description);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Publish_Request.file_description)
}

// optional uint32 file_type = 7 [(.proto.dota.description) = "(EWorkshopFileType) Type of Workshop file to publish."];
inline bool CPublishedFile_Publish_Request::has_file_type() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_file_type() {
  file_type_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint32 CPublishedFile_Publish_Request::file_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.file_type)
  return file_type_;
}
inline void CPublishedFile_Publish_Request::set_file_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  file_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.file_type)
}

// optional string consumer_shortcut_name = 8 [(.proto.dota.description) = "Shortcut name for the published file."];
inline bool CPublishedFile_Publish_Request::has_consumer_shortcut_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_consumer_shortcut_name() {
  consumer_shortcut_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& CPublishedFile_Publish_Request::consumer_shortcut_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.consumer_shortcut_name)
  return consumer_shortcut_name_.GetNoArena();
}
inline void CPublishedFile_Publish_Request::set_consumer_shortcut_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  consumer_shortcut_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.consumer_shortcut_name)
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Request::set_consumer_shortcut_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  consumer_shortcut_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Publish_Request.consumer_shortcut_name)
}
#endif
inline void CPublishedFile_Publish_Request::set_consumer_shortcut_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  consumer_shortcut_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Publish_Request.consumer_shortcut_name)
}
inline void CPublishedFile_Publish_Request::set_consumer_shortcut_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  consumer_shortcut_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Publish_Request.consumer_shortcut_name)
}
inline ::std::string* CPublishedFile_Publish_Request::mutable_consumer_shortcut_name() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Publish_Request.consumer_shortcut_name)
  return consumer_shortcut_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Publish_Request::release_consumer_shortcut_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Publish_Request.consumer_shortcut_name)
  if (!has_consumer_shortcut_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return consumer_shortcut_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Publish_Request::set_allocated_consumer_shortcut_name(::std::string* consumer_shortcut_name) {
  if (consumer_shortcut_name != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  consumer_shortcut_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), consumer_shortcut_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Publish_Request.consumer_shortcut_name)
}

// optional string youtube_username = 9 [(.proto.dota.description) = "(Optional) User\'s YouTube account username."];
inline bool CPublishedFile_Publish_Request::has_youtube_username() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_youtube_username() {
  youtube_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::std::string& CPublishedFile_Publish_Request::youtube_username() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.youtube_username)
  return youtube_username_.GetNoArena();
}
inline void CPublishedFile_Publish_Request::set_youtube_username(const ::std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  youtube_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.youtube_username)
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Request::set_youtube_username(::std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  youtube_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Publish_Request.youtube_username)
}
#endif
inline void CPublishedFile_Publish_Request::set_youtube_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  youtube_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Publish_Request.youtube_username)
}
inline void CPublishedFile_Publish_Request::set_youtube_username(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  youtube_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Publish_Request.youtube_username)
}
inline ::std::string* CPublishedFile_Publish_Request::mutable_youtube_username() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Publish_Request.youtube_username)
  return youtube_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Publish_Request::release_youtube_username() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Publish_Request.youtube_username)
  if (!has_youtube_username()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return youtube_username_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Publish_Request::set_allocated_youtube_username(::std::string* youtube_username) {
  if (youtube_username != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  youtube_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), youtube_username);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Publish_Request.youtube_username)
}

// optional string youtube_videoid = 10 [(.proto.dota.description) = "(Optional) Video Id of a YouTube video for this published file."];
inline bool CPublishedFile_Publish_Request::has_youtube_videoid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_youtube_videoid() {
  youtube_videoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::std::string& CPublishedFile_Publish_Request::youtube_videoid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.youtube_videoid)
  return youtube_videoid_.GetNoArena();
}
inline void CPublishedFile_Publish_Request::set_youtube_videoid(const ::std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  youtube_videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.youtube_videoid)
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Request::set_youtube_videoid(::std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  youtube_videoid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Publish_Request.youtube_videoid)
}
#endif
inline void CPublishedFile_Publish_Request::set_youtube_videoid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  youtube_videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Publish_Request.youtube_videoid)
}
inline void CPublishedFile_Publish_Request::set_youtube_videoid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  youtube_videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Publish_Request.youtube_videoid)
}
inline ::std::string* CPublishedFile_Publish_Request::mutable_youtube_videoid() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Publish_Request.youtube_videoid)
  return youtube_videoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Publish_Request::release_youtube_videoid() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Publish_Request.youtube_videoid)
  if (!has_youtube_videoid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return youtube_videoid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Publish_Request::set_allocated_youtube_videoid(::std::string* youtube_videoid) {
  if (youtube_videoid != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  youtube_videoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), youtube_videoid);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Publish_Request.youtube_videoid)
}

// optional uint32 visibility = 11 [(.proto.dota.description) = "(ERemoteStoragePublishedFileVisibility) Visibility of the published file (private, friends, public, etc.)"];
inline bool CPublishedFile_Publish_Request::has_visibility() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_visibility() {
  visibility_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::google::protobuf::uint32 CPublishedFile_Publish_Request::visibility() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.visibility)
  return visibility_;
}
inline void CPublishedFile_Publish_Request::set_visibility(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  visibility_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.visibility)
}

// optional string redirect_uri = 12 [(.proto.dota.description) = "(Optional) If supplied, the resulting published file\'s Id is appended to the URI."];
inline bool CPublishedFile_Publish_Request::has_redirect_uri() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_redirect_uri() {
  redirect_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::std::string& CPublishedFile_Publish_Request::redirect_uri() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.redirect_uri)
  return redirect_uri_.GetNoArena();
}
inline void CPublishedFile_Publish_Request::set_redirect_uri(const ::std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  redirect_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.redirect_uri)
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Request::set_redirect_uri(::std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  redirect_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Publish_Request.redirect_uri)
}
#endif
inline void CPublishedFile_Publish_Request::set_redirect_uri(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  redirect_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Publish_Request.redirect_uri)
}
inline void CPublishedFile_Publish_Request::set_redirect_uri(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000080u;
  redirect_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Publish_Request.redirect_uri)
}
inline ::std::string* CPublishedFile_Publish_Request::mutable_redirect_uri() {
  _has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Publish_Request.redirect_uri)
  return redirect_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Publish_Request::release_redirect_uri() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Publish_Request.redirect_uri)
  if (!has_redirect_uri()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return redirect_uri_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Publish_Request::set_allocated_redirect_uri(::std::string* redirect_uri) {
  if (redirect_uri != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  redirect_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redirect_uri);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Publish_Request.redirect_uri)
}

// repeated string tags = 13 [(.proto.dota.description) = "Array of text tags to apply to the published file."];
inline int CPublishedFile_Publish_Request::tags_size() const {
  return tags_.size();
}
inline void CPublishedFile_Publish_Request::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& CPublishedFile_Publish_Request::tags(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.tags)
  return tags_.Get(index);
}
inline ::std::string* CPublishedFile_Publish_Request::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Publish_Request.tags)
  return tags_.Mutable(index);
}
inline void CPublishedFile_Publish_Request::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Request::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CPublishedFile_Publish_Request::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Publish_Request.tags)
}
inline void CPublishedFile_Publish_Request::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Publish_Request.tags)
}
inline ::std::string* CPublishedFile_Publish_Request::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CPublishedFile_Publish_Request.tags)
  return tags_.Add();
}
inline void CPublishedFile_Publish_Request::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_Publish_Request.tags)
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Request::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_Publish_Request.tags)
}
#endif
inline void CPublishedFile_Publish_Request::add_tags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CPublishedFile_Publish_Request.tags)
}
inline void CPublishedFile_Publish_Request::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CPublishedFile_Publish_Request.tags)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CPublishedFile_Publish_Request::tags() const {
  // @@protoc_insertion_point(field_list:proto.dota.CPublishedFile_Publish_Request.tags)
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CPublishedFile_Publish_Request::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CPublishedFile_Publish_Request.tags)
  return &tags_;
}

// optional string collection_type = 14 [(.proto.dota.description) = "(Optional) Type of collection the published file represents."];
inline bool CPublishedFile_Publish_Request::has_collection_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_collection_type() {
  collection_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000100u;
}
inline const ::std::string& CPublishedFile_Publish_Request::collection_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.collection_type)
  return collection_type_.GetNoArena();
}
inline void CPublishedFile_Publish_Request::set_collection_type(const ::std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  collection_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.collection_type)
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Request::set_collection_type(::std::string&& value) {
  _has_bits_[0] |= 0x00000100u;
  collection_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Publish_Request.collection_type)
}
#endif
inline void CPublishedFile_Publish_Request::set_collection_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000100u;
  collection_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Publish_Request.collection_type)
}
inline void CPublishedFile_Publish_Request::set_collection_type(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000100u;
  collection_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Publish_Request.collection_type)
}
inline ::std::string* CPublishedFile_Publish_Request::mutable_collection_type() {
  _has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Publish_Request.collection_type)
  return collection_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Publish_Request::release_collection_type() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Publish_Request.collection_type)
  if (!has_collection_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  return collection_type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Publish_Request::set_allocated_collection_type(::std::string* collection_type) {
  if (collection_type != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  collection_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_type);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Publish_Request.collection_type)
}

// optional string game_type = 15 [(.proto.dota.description) = "(Optional) Type of game the published file represents."];
inline bool CPublishedFile_Publish_Request::has_game_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_game_type() {
  game_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000200u;
}
inline const ::std::string& CPublishedFile_Publish_Request::game_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.game_type)
  return game_type_.GetNoArena();
}
inline void CPublishedFile_Publish_Request::set_game_type(const ::std::string& value) {
  _has_bits_[0] |= 0x00000200u;
  game_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.game_type)
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Request::set_game_type(::std::string&& value) {
  _has_bits_[0] |= 0x00000200u;
  game_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Publish_Request.game_type)
}
#endif
inline void CPublishedFile_Publish_Request::set_game_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000200u;
  game_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Publish_Request.game_type)
}
inline void CPublishedFile_Publish_Request::set_game_type(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000200u;
  game_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Publish_Request.game_type)
}
inline ::std::string* CPublishedFile_Publish_Request::mutable_game_type() {
  _has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Publish_Request.game_type)
  return game_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Publish_Request::release_game_type() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Publish_Request.game_type)
  if (!has_game_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000200u;
  return game_type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Publish_Request::set_allocated_game_type(::std::string* game_type) {
  if (game_type != nullptr) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  game_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_type);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Publish_Request.game_type)
}

// optional string url = 16 [(.proto.dota.description) = "(Optional) If this represents a game, this is the URL to that game\'s page."];
inline bool CPublishedFile_Publish_Request::has_url() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CPublishedFile_Publish_Request::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000400u;
}
inline const ::std::string& CPublishedFile_Publish_Request::url() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Request.url)
  return url_.GetNoArena();
}
inline void CPublishedFile_Publish_Request::set_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000400u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Request.url)
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Request::set_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000400u;
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Publish_Request.url)
}
#endif
inline void CPublishedFile_Publish_Request::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000400u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Publish_Request.url)
}
inline void CPublishedFile_Publish_Request::set_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000400u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Publish_Request.url)
}
inline ::std::string* CPublishedFile_Publish_Request::mutable_url() {
  _has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Publish_Request.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Publish_Request::release_url() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Publish_Request.url)
  if (!has_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000400u;
  return url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Publish_Request::set_allocated_url(::std::string* url) {
  if (url != nullptr) {
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Publish_Request.url)
}

// -------------------------------------------------------------------

// CPublishedFile_Publish_Response

// optional uint64 publishedfileid = 1;
inline bool CPublishedFile_Publish_Response::has_publishedfileid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CPublishedFile_Publish_Response::clear_publishedfileid() {
  publishedfileid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CPublishedFile_Publish_Response::publishedfileid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Response.publishedfileid)
  return publishedfileid_;
}
inline void CPublishedFile_Publish_Response::set_publishedfileid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  publishedfileid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Response.publishedfileid)
}

// optional string redirect_uri = 2;
inline bool CPublishedFile_Publish_Response::has_redirect_uri() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CPublishedFile_Publish_Response::clear_redirect_uri() {
  redirect_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CPublishedFile_Publish_Response::redirect_uri() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Publish_Response.redirect_uri)
  return redirect_uri_.GetNoArena();
}
inline void CPublishedFile_Publish_Response::set_redirect_uri(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  redirect_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Publish_Response.redirect_uri)
}
#if LANG_CXX11
inline void CPublishedFile_Publish_Response::set_redirect_uri(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  redirect_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Publish_Response.redirect_uri)
}
#endif
inline void CPublishedFile_Publish_Response::set_redirect_uri(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  redirect_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Publish_Response.redirect_uri)
}
inline void CPublishedFile_Publish_Response::set_redirect_uri(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  redirect_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Publish_Response.redirect_uri)
}
inline ::std::string* CPublishedFile_Publish_Response::mutable_redirect_uri() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Publish_Response.redirect_uri)
  return redirect_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Publish_Response::release_redirect_uri() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Publish_Response.redirect_uri)
  if (!has_redirect_uri()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return redirect_uri_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Publish_Response::set_allocated_redirect_uri(::std::string* redirect_uri) {
  if (redirect_uri != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  redirect_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redirect_uri);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Publish_Response.redirect_uri)
}

// -------------------------------------------------------------------

// CPublishedFile_GetDetails_Request

// repeated fixed64 publishedfileids = 1 [(.proto.dota.description) = "Set of published file Ids to retrieve details for."];
inline int CPublishedFile_GetDetails_Request::publishedfileids_size() const {
  return publishedfileids_.size();
}
inline void CPublishedFile_GetDetails_Request::clear_publishedfileids() {
  publishedfileids_.Clear();
}
inline ::google::protobuf::uint64 CPublishedFile_GetDetails_Request::publishedfileids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetDetails_Request.publishedfileids)
  return publishedfileids_.Get(index);
}
inline void CPublishedFile_GetDetails_Request::set_publishedfileids(int index, ::google::protobuf::uint64 value) {
  publishedfileids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetDetails_Request.publishedfileids)
}
inline void CPublishedFile_GetDetails_Request::add_publishedfileids(::google::protobuf::uint64 value) {
  publishedfileids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_GetDetails_Request.publishedfileids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CPublishedFile_GetDetails_Request::publishedfileids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CPublishedFile_GetDetails_Request.publishedfileids)
  return publishedfileids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CPublishedFile_GetDetails_Request::mutable_publishedfileids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CPublishedFile_GetDetails_Request.publishedfileids)
  return &publishedfileids_;
}

// optional bool includetags = 2 [(.proto.dota.description) = "If true, return tag information in the returned details."];
inline bool CPublishedFile_GetDetails_Request::has_includetags() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CPublishedFile_GetDetails_Request::clear_includetags() {
  includetags_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CPublishedFile_GetDetails_Request::includetags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetDetails_Request.includetags)
  return includetags_;
}
inline void CPublishedFile_GetDetails_Request::set_includetags(bool value) {
  _has_bits_[0] |= 0x00000001u;
  includetags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetDetails_Request.includetags)
}

// optional bool includeadditionalpreviews = 3 [(.proto.dota.description) = "If true, return preview information in the returned details."];
inline bool CPublishedFile_GetDetails_Request::has_includeadditionalpreviews() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CPublishedFile_GetDetails_Request::clear_includeadditionalpreviews() {
  includeadditionalpreviews_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CPublishedFile_GetDetails_Request::includeadditionalpreviews() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetDetails_Request.includeadditionalpreviews)
  return includeadditionalpreviews_;
}
inline void CPublishedFile_GetDetails_Request::set_includeadditionalpreviews(bool value) {
  _has_bits_[0] |= 0x00000002u;
  includeadditionalpreviews_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetDetails_Request.includeadditionalpreviews)
}

// optional bool includechildren = 4 [(.proto.dota.description) = "If true, return children in the returned details."];
inline bool CPublishedFile_GetDetails_Request::has_includechildren() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CPublishedFile_GetDetails_Request::clear_includechildren() {
  includechildren_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CPublishedFile_GetDetails_Request::includechildren() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetDetails_Request.includechildren)
  return includechildren_;
}
inline void CPublishedFile_GetDetails_Request::set_includechildren(bool value) {
  _has_bits_[0] |= 0x00000004u;
  includechildren_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetDetails_Request.includechildren)
}

// optional bool includekvtags = 5 [(.proto.dota.description) = "If true, return key value tags in the returned details."];
inline bool CPublishedFile_GetDetails_Request::has_includekvtags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CPublishedFile_GetDetails_Request::clear_includekvtags() {
  includekvtags_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CPublishedFile_GetDetails_Request::includekvtags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetDetails_Request.includekvtags)
  return includekvtags_;
}
inline void CPublishedFile_GetDetails_Request::set_includekvtags(bool value) {
  _has_bits_[0] |= 0x00000008u;
  includekvtags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetDetails_Request.includekvtags)
}

// optional bool includevotes = 6 [(.proto.dota.description) = "If true, return vote data in the returned details."];
inline bool CPublishedFile_GetDetails_Request::has_includevotes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CPublishedFile_GetDetails_Request::clear_includevotes() {
  includevotes_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CPublishedFile_GetDetails_Request::includevotes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetDetails_Request.includevotes)
  return includevotes_;
}
inline void CPublishedFile_GetDetails_Request::set_includevotes(bool value) {
  _has_bits_[0] |= 0x00000010u;
  includevotes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetDetails_Request.includevotes)
}

// optional bool short_description = 8 [(.proto.dota.description) = "If true, return a short description instead of the full description."];
inline bool CPublishedFile_GetDetails_Request::has_short_description() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CPublishedFile_GetDetails_Request::clear_short_description() {
  short_description_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CPublishedFile_GetDetails_Request::short_description() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetDetails_Request.short_description)
  return short_description_;
}
inline void CPublishedFile_GetDetails_Request::set_short_description(bool value) {
  _has_bits_[0] |= 0x00000020u;
  short_description_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetDetails_Request.short_description)
}

// -------------------------------------------------------------------

// PublishedFileDetails_Tag

// optional string tag = 1;
inline bool PublishedFileDetails_Tag::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PublishedFileDetails_Tag::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PublishedFileDetails_Tag::tag() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.Tag.tag)
  return tag_.GetNoArena();
}
inline void PublishedFileDetails_Tag::set_tag(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.Tag.tag)
}
#if LANG_CXX11
inline void PublishedFileDetails_Tag::set_tag(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.Tag.tag)
}
#endif
inline void PublishedFileDetails_Tag::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.Tag.tag)
}
inline void PublishedFileDetails_Tag::set_tag(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.Tag.tag)
}
inline ::std::string* PublishedFileDetails_Tag::mutable_tag() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.Tag.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails_Tag::release_tag() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.Tag.tag)
  if (!has_tag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return tag_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails_Tag::set_allocated_tag(::std::string* tag) {
  if (tag != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.Tag.tag)
}

// optional bool adminonly = 2;
inline bool PublishedFileDetails_Tag::has_adminonly() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PublishedFileDetails_Tag::clear_adminonly() {
  adminonly_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool PublishedFileDetails_Tag::adminonly() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.Tag.adminonly)
  return adminonly_;
}
inline void PublishedFileDetails_Tag::set_adminonly(bool value) {
  _has_bits_[0] |= 0x00000002u;
  adminonly_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.Tag.adminonly)
}

// -------------------------------------------------------------------

// PublishedFileDetails_Preview

// optional uint64 previewid = 1;
inline bool PublishedFileDetails_Preview::has_previewid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PublishedFileDetails_Preview::clear_previewid() {
  previewid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 PublishedFileDetails_Preview::previewid() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.Preview.previewid)
  return previewid_;
}
inline void PublishedFileDetails_Preview::set_previewid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  previewid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.Preview.previewid)
}

// optional uint32 sortorder = 2;
inline bool PublishedFileDetails_Preview::has_sortorder() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PublishedFileDetails_Preview::clear_sortorder() {
  sortorder_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 PublishedFileDetails_Preview::sortorder() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.Preview.sortorder)
  return sortorder_;
}
inline void PublishedFileDetails_Preview::set_sortorder(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  sortorder_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.Preview.sortorder)
}

// optional string url = 3;
inline bool PublishedFileDetails_Preview::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PublishedFileDetails_Preview::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PublishedFileDetails_Preview::url() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.Preview.url)
  return url_.GetNoArena();
}
inline void PublishedFileDetails_Preview::set_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.Preview.url)
}
#if LANG_CXX11
inline void PublishedFileDetails_Preview::set_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.Preview.url)
}
#endif
inline void PublishedFileDetails_Preview::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.Preview.url)
}
inline void PublishedFileDetails_Preview::set_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.Preview.url)
}
inline ::std::string* PublishedFileDetails_Preview::mutable_url() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.Preview.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails_Preview::release_url() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.Preview.url)
  if (!has_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails_Preview::set_allocated_url(::std::string* url) {
  if (url != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.Preview.url)
}

// optional uint32 size = 4;
inline bool PublishedFileDetails_Preview::has_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PublishedFileDetails_Preview::clear_size() {
  size_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 PublishedFileDetails_Preview::size() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.Preview.size)
  return size_;
}
inline void PublishedFileDetails_Preview::set_size(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  size_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.Preview.size)
}

// optional string filename = 5;
inline bool PublishedFileDetails_Preview::has_filename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PublishedFileDetails_Preview::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& PublishedFileDetails_Preview::filename() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.Preview.filename)
  return filename_.GetNoArena();
}
inline void PublishedFileDetails_Preview::set_filename(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.Preview.filename)
}
#if LANG_CXX11
inline void PublishedFileDetails_Preview::set_filename(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.Preview.filename)
}
#endif
inline void PublishedFileDetails_Preview::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.Preview.filename)
}
inline void PublishedFileDetails_Preview::set_filename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.Preview.filename)
}
inline ::std::string* PublishedFileDetails_Preview::mutable_filename() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.Preview.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails_Preview::release_filename() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.Preview.filename)
  if (!has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails_Preview::set_allocated_filename(::std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.Preview.filename)
}

// optional string youtubevideoid = 6;
inline bool PublishedFileDetails_Preview::has_youtubevideoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PublishedFileDetails_Preview::clear_youtubevideoid() {
  youtubevideoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& PublishedFileDetails_Preview::youtubevideoid() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.Preview.youtubevideoid)
  return youtubevideoid_.GetNoArena();
}
inline void PublishedFileDetails_Preview::set_youtubevideoid(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  youtubevideoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.Preview.youtubevideoid)
}
#if LANG_CXX11
inline void PublishedFileDetails_Preview::set_youtubevideoid(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  youtubevideoid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.Preview.youtubevideoid)
}
#endif
inline void PublishedFileDetails_Preview::set_youtubevideoid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  youtubevideoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.Preview.youtubevideoid)
}
inline void PublishedFileDetails_Preview::set_youtubevideoid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  youtubevideoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.Preview.youtubevideoid)
}
inline ::std::string* PublishedFileDetails_Preview::mutable_youtubevideoid() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.Preview.youtubevideoid)
  return youtubevideoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails_Preview::release_youtubevideoid() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.Preview.youtubevideoid)
  if (!has_youtubevideoid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return youtubevideoid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails_Preview::set_allocated_youtubevideoid(::std::string* youtubevideoid) {
  if (youtubevideoid != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  youtubevideoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), youtubevideoid);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.Preview.youtubevideoid)
}

// -------------------------------------------------------------------

// PublishedFileDetails_Child

// optional uint64 publishedfileid = 1;
inline bool PublishedFileDetails_Child::has_publishedfileid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PublishedFileDetails_Child::clear_publishedfileid() {
  publishedfileid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 PublishedFileDetails_Child::publishedfileid() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.Child.publishedfileid)
  return publishedfileid_;
}
inline void PublishedFileDetails_Child::set_publishedfileid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  publishedfileid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.Child.publishedfileid)
}

// optional uint32 sortorder = 2;
inline bool PublishedFileDetails_Child::has_sortorder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PublishedFileDetails_Child::clear_sortorder() {
  sortorder_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 PublishedFileDetails_Child::sortorder() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.Child.sortorder)
  return sortorder_;
}
inline void PublishedFileDetails_Child::set_sortorder(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  sortorder_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.Child.sortorder)
}

// optional uint32 file_type = 3;
inline bool PublishedFileDetails_Child::has_file_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PublishedFileDetails_Child::clear_file_type() {
  file_type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 PublishedFileDetails_Child::file_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.Child.file_type)
  return file_type_;
}
inline void PublishedFileDetails_Child::set_file_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  file_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.Child.file_type)
}

// -------------------------------------------------------------------

// PublishedFileDetails_KVTag

// optional string key = 1;
inline bool PublishedFileDetails_KVTag::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PublishedFileDetails_KVTag::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PublishedFileDetails_KVTag::key() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.KVTag.key)
  return key_.GetNoArena();
}
inline void PublishedFileDetails_KVTag::set_key(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.KVTag.key)
}
#if LANG_CXX11
inline void PublishedFileDetails_KVTag::set_key(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.KVTag.key)
}
#endif
inline void PublishedFileDetails_KVTag::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.KVTag.key)
}
inline void PublishedFileDetails_KVTag::set_key(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.KVTag.key)
}
inline ::std::string* PublishedFileDetails_KVTag::mutable_key() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.KVTag.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails_KVTag::release_key() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.KVTag.key)
  if (!has_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails_KVTag::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.KVTag.key)
}

// optional string value = 2;
inline bool PublishedFileDetails_KVTag::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PublishedFileDetails_KVTag::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& PublishedFileDetails_KVTag::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.KVTag.value)
  return value_.GetNoArena();
}
inline void PublishedFileDetails_KVTag::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.KVTag.value)
}
#if LANG_CXX11
inline void PublishedFileDetails_KVTag::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.KVTag.value)
}
#endif
inline void PublishedFileDetails_KVTag::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.KVTag.value)
}
inline void PublishedFileDetails_KVTag::set_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.KVTag.value)
}
inline ::std::string* PublishedFileDetails_KVTag::mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.KVTag.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails_KVTag::release_value() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.KVTag.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails_KVTag::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.KVTag.value)
}

// -------------------------------------------------------------------

// PublishedFileDetails_VoteData

// optional float score = 1;
inline bool PublishedFileDetails_VoteData::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PublishedFileDetails_VoteData::clear_score() {
  score_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float PublishedFileDetails_VoteData::score() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.VoteData.score)
  return score_;
}
inline void PublishedFileDetails_VoteData::set_score(float value) {
  _has_bits_[0] |= 0x00000001u;
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.VoteData.score)
}

// optional uint32 votes_up = 2;
inline bool PublishedFileDetails_VoteData::has_votes_up() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PublishedFileDetails_VoteData::clear_votes_up() {
  votes_up_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 PublishedFileDetails_VoteData::votes_up() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.VoteData.votes_up)
  return votes_up_;
}
inline void PublishedFileDetails_VoteData::set_votes_up(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  votes_up_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.VoteData.votes_up)
}

// optional uint32 votes_down = 3;
inline bool PublishedFileDetails_VoteData::has_votes_down() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PublishedFileDetails_VoteData::clear_votes_down() {
  votes_down_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 PublishedFileDetails_VoteData::votes_down() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.VoteData.votes_down)
  return votes_down_;
}
inline void PublishedFileDetails_VoteData::set_votes_down(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  votes_down_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.VoteData.votes_down)
}

// -------------------------------------------------------------------

// PublishedFileDetails

// optional uint32 result = 1;
inline bool PublishedFileDetails::has_result() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PublishedFileDetails::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.result)
  return result_;
}
inline void PublishedFileDetails::set_result(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.result)
}

// optional uint64 publishedfileid = 2;
inline bool PublishedFileDetails::has_publishedfileid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PublishedFileDetails::clear_publishedfileid() {
  publishedfileid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint64 PublishedFileDetails::publishedfileid() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.publishedfileid)
  return publishedfileid_;
}
inline void PublishedFileDetails::set_publishedfileid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00002000u;
  publishedfileid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.publishedfileid)
}

// optional fixed64 creator = 3;
inline bool PublishedFileDetails::has_creator() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PublishedFileDetails::clear_creator() {
  creator_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00010000u;
}
inline ::google::protobuf::uint64 PublishedFileDetails::creator() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.creator)
  return creator_;
}
inline void PublishedFileDetails::set_creator(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00010000u;
  creator_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.creator)
}

// optional uint32 creator_appid = 4;
inline bool PublishedFileDetails::has_creator_appid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PublishedFileDetails::clear_creator_appid() {
  creator_appid_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::creator_appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.creator_appid)
  return creator_appid_;
}
inline void PublishedFileDetails::set_creator_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  creator_appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.creator_appid)
}

// optional uint32 consumer_appid = 5;
inline bool PublishedFileDetails::has_consumer_appid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PublishedFileDetails::clear_consumer_appid() {
  consumer_appid_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::consumer_appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.consumer_appid)
  return consumer_appid_;
}
inline void PublishedFileDetails::set_consumer_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  consumer_appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.consumer_appid)
}

// optional uint32 consumer_shortcutid = 6;
inline bool PublishedFileDetails::has_consumer_shortcutid() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PublishedFileDetails::clear_consumer_shortcutid() {
  consumer_shortcutid_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::consumer_shortcutid() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.consumer_shortcutid)
  return consumer_shortcutid_;
}
inline void PublishedFileDetails::set_consumer_shortcutid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  consumer_shortcutid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.consumer_shortcutid)
}

// optional string filename = 7;
inline bool PublishedFileDetails::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PublishedFileDetails::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PublishedFileDetails::filename() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.filename)
  return filename_.GetNoArena();
}
inline void PublishedFileDetails::set_filename(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.filename)
}
#if LANG_CXX11
inline void PublishedFileDetails::set_filename(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.filename)
}
#endif
inline void PublishedFileDetails::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.filename)
}
inline void PublishedFileDetails::set_filename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.filename)
}
inline ::std::string* PublishedFileDetails::mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails::release_filename() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.filename)
  if (!has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails::set_allocated_filename(::std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.filename)
}

// optional uint64 file_size = 8;
inline bool PublishedFileDetails::has_file_size() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PublishedFileDetails::clear_file_size() {
  file_size_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00080000u;
}
inline ::google::protobuf::uint64 PublishedFileDetails::file_size() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.file_size)
  return file_size_;
}
inline void PublishedFileDetails::set_file_size(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00080000u;
  file_size_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.file_size)
}

// optional uint64 preview_file_size = 9;
inline bool PublishedFileDetails::has_preview_file_size() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void PublishedFileDetails::clear_preview_file_size() {
  preview_file_size_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00100000u;
}
inline ::google::protobuf::uint64 PublishedFileDetails::preview_file_size() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.preview_file_size)
  return preview_file_size_;
}
inline void PublishedFileDetails::set_preview_file_size(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00100000u;
  preview_file_size_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.preview_file_size)
}

// optional string file_url = 10;
inline bool PublishedFileDetails::has_file_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PublishedFileDetails::clear_file_url() {
  file_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& PublishedFileDetails::file_url() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.file_url)
  return file_url_.GetNoArena();
}
inline void PublishedFileDetails::set_file_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  file_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.file_url)
}
#if LANG_CXX11
inline void PublishedFileDetails::set_file_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  file_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.file_url)
}
#endif
inline void PublishedFileDetails::set_file_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  file_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.file_url)
}
inline void PublishedFileDetails::set_file_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  file_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.file_url)
}
inline ::std::string* PublishedFileDetails::mutable_file_url() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.file_url)
  return file_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails::release_file_url() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.file_url)
  if (!has_file_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return file_url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails::set_allocated_file_url(::std::string* file_url) {
  if (file_url != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  file_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.file_url)
}

// optional string preview_url = 11;
inline bool PublishedFileDetails::has_preview_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PublishedFileDetails::clear_preview_url() {
  preview_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& PublishedFileDetails::preview_url() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.preview_url)
  return preview_url_.GetNoArena();
}
inline void PublishedFileDetails::set_preview_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  preview_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.preview_url)
}
#if LANG_CXX11
inline void PublishedFileDetails::set_preview_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  preview_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.preview_url)
}
#endif
inline void PublishedFileDetails::set_preview_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  preview_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.preview_url)
}
inline void PublishedFileDetails::set_preview_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  preview_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.preview_url)
}
inline ::std::string* PublishedFileDetails::mutable_preview_url() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.preview_url)
  return preview_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails::release_preview_url() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.preview_url)
  if (!has_preview_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return preview_url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails::set_allocated_preview_url(::std::string* preview_url) {
  if (preview_url != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  preview_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), preview_url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.preview_url)
}

// optional string youtubevideoid = 12;
inline bool PublishedFileDetails::has_youtubevideoid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PublishedFileDetails::clear_youtubevideoid() {
  youtubevideoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& PublishedFileDetails::youtubevideoid() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.youtubevideoid)
  return youtubevideoid_.GetNoArena();
}
inline void PublishedFileDetails::set_youtubevideoid(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  youtubevideoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.youtubevideoid)
}
#if LANG_CXX11
inline void PublishedFileDetails::set_youtubevideoid(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  youtubevideoid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.youtubevideoid)
}
#endif
inline void PublishedFileDetails::set_youtubevideoid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  youtubevideoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.youtubevideoid)
}
inline void PublishedFileDetails::set_youtubevideoid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  youtubevideoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.youtubevideoid)
}
inline ::std::string* PublishedFileDetails::mutable_youtubevideoid() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.youtubevideoid)
  return youtubevideoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails::release_youtubevideoid() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.youtubevideoid)
  if (!has_youtubevideoid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return youtubevideoid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails::set_allocated_youtubevideoid(::std::string* youtubevideoid) {
  if (youtubevideoid != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  youtubevideoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), youtubevideoid);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.youtubevideoid)
}

// optional string url = 13;
inline bool PublishedFileDetails::has_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PublishedFileDetails::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& PublishedFileDetails::url() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.url)
  return url_.GetNoArena();
}
inline void PublishedFileDetails::set_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.url)
}
#if LANG_CXX11
inline void PublishedFileDetails::set_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.url)
}
#endif
inline void PublishedFileDetails::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.url)
}
inline void PublishedFileDetails::set_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.url)
}
inline ::std::string* PublishedFileDetails::mutable_url() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails::release_url() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.url)
  if (!has_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails::set_allocated_url(::std::string* url) {
  if (url != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.url)
}

// optional fixed64 hcontent_file = 14;
inline bool PublishedFileDetails::has_hcontent_file() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PublishedFileDetails::clear_hcontent_file() {
  hcontent_file_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00200000u;
}
inline ::google::protobuf::uint64 PublishedFileDetails::hcontent_file() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.hcontent_file)
  return hcontent_file_;
}
inline void PublishedFileDetails::set_hcontent_file(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00200000u;
  hcontent_file_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.hcontent_file)
}

// optional fixed64 hcontent_preview = 15;
inline bool PublishedFileDetails::has_hcontent_preview() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void PublishedFileDetails::clear_hcontent_preview() {
  hcontent_preview_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00400000u;
}
inline ::google::protobuf::uint64 PublishedFileDetails::hcontent_preview() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.hcontent_preview)
  return hcontent_preview_;
}
inline void PublishedFileDetails::set_hcontent_preview(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00400000u;
  hcontent_preview_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.hcontent_preview)
}

// optional string title = 16;
inline bool PublishedFileDetails::has_title() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PublishedFileDetails::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::std::string& PublishedFileDetails::title() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.title)
  return title_.GetNoArena();
}
inline void PublishedFileDetails::set_title(const ::std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.title)
}
#if LANG_CXX11
inline void PublishedFileDetails::set_title(::std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.title)
}
#endif
inline void PublishedFileDetails::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.title)
}
inline void PublishedFileDetails::set_title(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.title)
}
inline ::std::string* PublishedFileDetails::mutable_title() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails::release_title() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.title)
  if (!has_title()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return title_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails::set_allocated_title(::std::string* title) {
  if (title != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.title)
}

// optional string file_description = 17;
inline bool PublishedFileDetails::has_file_description() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PublishedFileDetails::clear_file_description() {
  file_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::std::string& PublishedFileDetails::file_description() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.file_description)
  return file_description_.GetNoArena();
}
inline void PublishedFileDetails::set_file_description(const ::std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  file_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.file_description)
}
#if LANG_CXX11
inline void PublishedFileDetails::set_file_description(::std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  file_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.file_description)
}
#endif
inline void PublishedFileDetails::set_file_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  file_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.file_description)
}
inline void PublishedFileDetails::set_file_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  file_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.file_description)
}
inline ::std::string* PublishedFileDetails::mutable_file_description() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.file_description)
  return file_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails::release_file_description() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.file_description)
  if (!has_file_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return file_description_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails::set_allocated_file_description(::std::string* file_description) {
  if (file_description != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  file_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_description);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.file_description)
}

// optional string short_description = 18;
inline bool PublishedFileDetails::has_short_description() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PublishedFileDetails::clear_short_description() {
  short_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::std::string& PublishedFileDetails::short_description() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.short_description)
  return short_description_.GetNoArena();
}
inline void PublishedFileDetails::set_short_description(const ::std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  short_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.short_description)
}
#if LANG_CXX11
inline void PublishedFileDetails::set_short_description(::std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  short_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.short_description)
}
#endif
inline void PublishedFileDetails::set_short_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  short_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.short_description)
}
inline void PublishedFileDetails::set_short_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000080u;
  short_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.short_description)
}
inline ::std::string* PublishedFileDetails::mutable_short_description() {
  _has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.short_description)
  return short_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails::release_short_description() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.short_description)
  if (!has_short_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return short_description_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails::set_allocated_short_description(::std::string* short_description) {
  if (short_description != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  short_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_description);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.short_description)
}

// optional uint32 time_created = 19;
inline bool PublishedFileDetails::has_time_created() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void PublishedFileDetails::clear_time_created() {
  time_created_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::time_created() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.time_created)
  return time_created_;
}
inline void PublishedFileDetails::set_time_created(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  time_created_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.time_created)
}

// optional uint32 time_updated = 20;
inline bool PublishedFileDetails::has_time_updated() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void PublishedFileDetails::clear_time_updated() {
  time_updated_ = 0u;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::time_updated() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.time_updated)
  return time_updated_;
}
inline void PublishedFileDetails::set_time_updated(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x01000000u;
  time_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.time_updated)
}

// optional uint32 visibility = 21;
inline bool PublishedFileDetails::has_visibility() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void PublishedFileDetails::clear_visibility() {
  visibility_ = 0u;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::visibility() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.visibility)
  return visibility_;
}
inline void PublishedFileDetails::set_visibility(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x02000000u;
  visibility_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.visibility)
}

// optional uint32 flags = 22;
inline bool PublishedFileDetails::has_flags() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void PublishedFileDetails::clear_flags() {
  flags_ = 0u;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.flags)
  return flags_;
}
inline void PublishedFileDetails::set_flags(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x04000000u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.flags)
}

// optional bool workshop_file = 23;
inline bool PublishedFileDetails::has_workshop_file() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void PublishedFileDetails::clear_workshop_file() {
  workshop_file_ = false;
  _has_bits_[0] &= ~0x08000000u;
}
inline bool PublishedFileDetails::workshop_file() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.workshop_file)
  return workshop_file_;
}
inline void PublishedFileDetails::set_workshop_file(bool value) {
  _has_bits_[0] |= 0x08000000u;
  workshop_file_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.workshop_file)
}

// optional bool workshop_accepted = 24;
inline bool PublishedFileDetails::has_workshop_accepted() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void PublishedFileDetails::clear_workshop_accepted() {
  workshop_accepted_ = false;
  _has_bits_[0] &= ~0x10000000u;
}
inline bool PublishedFileDetails::workshop_accepted() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.workshop_accepted)
  return workshop_accepted_;
}
inline void PublishedFileDetails::set_workshop_accepted(bool value) {
  _has_bits_[0] |= 0x10000000u;
  workshop_accepted_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.workshop_accepted)
}

// optional bool show_subscribe_all = 25;
inline bool PublishedFileDetails::has_show_subscribe_all() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void PublishedFileDetails::clear_show_subscribe_all() {
  show_subscribe_all_ = false;
  _has_bits_[0] &= ~0x20000000u;
}
inline bool PublishedFileDetails::show_subscribe_all() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.show_subscribe_all)
  return show_subscribe_all_;
}
inline void PublishedFileDetails::set_show_subscribe_all(bool value) {
  _has_bits_[0] |= 0x20000000u;
  show_subscribe_all_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.show_subscribe_all)
}

// optional int32 num_comments_developer = 26;
inline bool PublishedFileDetails::has_num_comments_developer() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void PublishedFileDetails::clear_num_comments_developer() {
  num_comments_developer_ = 0;
  _has_bits_[0] &= ~0x80000000u;
}
inline ::google::protobuf::int32 PublishedFileDetails::num_comments_developer() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.num_comments_developer)
  return num_comments_developer_;
}
inline void PublishedFileDetails::set_num_comments_developer(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x80000000u;
  num_comments_developer_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.num_comments_developer)
}

// optional int32 num_comments_public = 27;
inline bool PublishedFileDetails::has_num_comments_public() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void PublishedFileDetails::clear_num_comments_public() {
  num_comments_public_ = 0;
  _has_bits_[1] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PublishedFileDetails::num_comments_public() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.num_comments_public)
  return num_comments_public_;
}
inline void PublishedFileDetails::set_num_comments_public(::google::protobuf::int32 value) {
  _has_bits_[1] |= 0x00000002u;
  num_comments_public_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.num_comments_public)
}

// optional bool banned = 28;
inline bool PublishedFileDetails::has_banned() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void PublishedFileDetails::clear_banned() {
  banned_ = false;
  _has_bits_[0] &= ~0x40000000u;
}
inline bool PublishedFileDetails::banned() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.banned)
  return banned_;
}
inline void PublishedFileDetails::set_banned(bool value) {
  _has_bits_[0] |= 0x40000000u;
  banned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.banned)
}

// optional string ban_reason = 29;
inline bool PublishedFileDetails::has_ban_reason() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PublishedFileDetails::clear_ban_reason() {
  ban_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000100u;
}
inline const ::std::string& PublishedFileDetails::ban_reason() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.ban_reason)
  return ban_reason_.GetNoArena();
}
inline void PublishedFileDetails::set_ban_reason(const ::std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  ban_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.ban_reason)
}
#if LANG_CXX11
inline void PublishedFileDetails::set_ban_reason(::std::string&& value) {
  _has_bits_[0] |= 0x00000100u;
  ban_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.ban_reason)
}
#endif
inline void PublishedFileDetails::set_ban_reason(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000100u;
  ban_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.ban_reason)
}
inline void PublishedFileDetails::set_ban_reason(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000100u;
  ban_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.ban_reason)
}
inline ::std::string* PublishedFileDetails::mutable_ban_reason() {
  _has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.ban_reason)
  return ban_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails::release_ban_reason() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.ban_reason)
  if (!has_ban_reason()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  return ban_reason_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails::set_allocated_ban_reason(::std::string* ban_reason) {
  if (ban_reason != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  ban_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ban_reason);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.ban_reason)
}

// optional fixed64 banner = 30;
inline bool PublishedFileDetails::has_banner() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void PublishedFileDetails::clear_banner() {
  banner_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[1] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 PublishedFileDetails::banner() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.banner)
  return banner_;
}
inline void PublishedFileDetails::set_banner(::google::protobuf::uint64 value) {
  _has_bits_[1] |= 0x00000001u;
  banner_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.banner)
}

// optional bool can_be_deleted = 31;
inline bool PublishedFileDetails::has_can_be_deleted() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void PublishedFileDetails::clear_can_be_deleted() {
  can_be_deleted_ = false;
  _has_bits_[1] &= ~0x00000010u;
}
inline bool PublishedFileDetails::can_be_deleted() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.can_be_deleted)
  return can_be_deleted_;
}
inline void PublishedFileDetails::set_can_be_deleted(bool value) {
  _has_bits_[1] |= 0x00000010u;
  can_be_deleted_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.can_be_deleted)
}

// optional bool incompatible = 32;
inline bool PublishedFileDetails::has_incompatible() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void PublishedFileDetails::clear_incompatible() {
  incompatible_ = false;
  _has_bits_[1] &= ~0x00000020u;
}
inline bool PublishedFileDetails::incompatible() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.incompatible)
  return incompatible_;
}
inline void PublishedFileDetails::set_incompatible(bool value) {
  _has_bits_[1] |= 0x00000020u;
  incompatible_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.incompatible)
}

// optional string app_name = 33;
inline bool PublishedFileDetails::has_app_name() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PublishedFileDetails::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000200u;
}
inline const ::std::string& PublishedFileDetails::app_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.app_name)
  return app_name_.GetNoArena();
}
inline void PublishedFileDetails::set_app_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000200u;
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.app_name)
}
#if LANG_CXX11
inline void PublishedFileDetails::set_app_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000200u;
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.app_name)
}
#endif
inline void PublishedFileDetails::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000200u;
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.app_name)
}
inline void PublishedFileDetails::set_app_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000200u;
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.app_name)
}
inline ::std::string* PublishedFileDetails::mutable_app_name() {
  _has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails::release_app_name() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.app_name)
  if (!has_app_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000200u;
  return app_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails::set_allocated_app_name(::std::string* app_name) {
  if (app_name != nullptr) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.app_name)
}

// optional uint32 file_type = 34;
inline bool PublishedFileDetails::has_file_type() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void PublishedFileDetails::clear_file_type() {
  file_type_ = 0u;
  _has_bits_[1] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::file_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.file_type)
  return file_type_;
}
inline void PublishedFileDetails::set_file_type(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000004u;
  file_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.file_type)
}

// optional bool can_subscribe = 35;
inline bool PublishedFileDetails::has_can_subscribe() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void PublishedFileDetails::clear_can_subscribe() {
  can_subscribe_ = false;
  _has_bits_[1] &= ~0x00000040u;
}
inline bool PublishedFileDetails::can_subscribe() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.can_subscribe)
  return can_subscribe_;
}
inline void PublishedFileDetails::set_can_subscribe(bool value) {
  _has_bits_[1] |= 0x00000040u;
  can_subscribe_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.can_subscribe)
}

// optional uint32 subscriptions = 36;
inline bool PublishedFileDetails::has_subscriptions() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void PublishedFileDetails::clear_subscriptions() {
  subscriptions_ = 0u;
  _has_bits_[1] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::subscriptions() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.subscriptions)
  return subscriptions_;
}
inline void PublishedFileDetails::set_subscriptions(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000008u;
  subscriptions_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.subscriptions)
}

// optional uint32 favorited = 37;
inline bool PublishedFileDetails::has_favorited() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void PublishedFileDetails::clear_favorited() {
  favorited_ = 0u;
  _has_bits_[1] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::favorited() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.favorited)
  return favorited_;
}
inline void PublishedFileDetails::set_favorited(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000100u;
  favorited_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.favorited)
}

// optional uint32 followers = 38;
inline bool PublishedFileDetails::has_followers() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void PublishedFileDetails::clear_followers() {
  followers_ = 0u;
  _has_bits_[1] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::followers() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.followers)
  return followers_;
}
inline void PublishedFileDetails::set_followers(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000200u;
  followers_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.followers)
}

// optional uint32 lifetime_subscriptions = 39;
inline bool PublishedFileDetails::has_lifetime_subscriptions() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void PublishedFileDetails::clear_lifetime_subscriptions() {
  lifetime_subscriptions_ = 0u;
  _has_bits_[1] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::lifetime_subscriptions() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.lifetime_subscriptions)
  return lifetime_subscriptions_;
}
inline void PublishedFileDetails::set_lifetime_subscriptions(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000400u;
  lifetime_subscriptions_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.lifetime_subscriptions)
}

// optional uint32 lifetime_favorited = 40;
inline bool PublishedFileDetails::has_lifetime_favorited() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void PublishedFileDetails::clear_lifetime_favorited() {
  lifetime_favorited_ = 0u;
  _has_bits_[1] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::lifetime_favorited() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.lifetime_favorited)
  return lifetime_favorited_;
}
inline void PublishedFileDetails::set_lifetime_favorited(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000800u;
  lifetime_favorited_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.lifetime_favorited)
}

// optional uint32 lifetime_followers = 41;
inline bool PublishedFileDetails::has_lifetime_followers() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void PublishedFileDetails::clear_lifetime_followers() {
  lifetime_followers_ = 0u;
  _has_bits_[1] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::lifetime_followers() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.lifetime_followers)
  return lifetime_followers_;
}
inline void PublishedFileDetails::set_lifetime_followers(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00001000u;
  lifetime_followers_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.lifetime_followers)
}

// optional uint32 views = 42;
inline bool PublishedFileDetails::has_views() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void PublishedFileDetails::clear_views() {
  views_ = 0u;
  _has_bits_[1] &= ~0x00002000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::views() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.views)
  return views_;
}
inline void PublishedFileDetails::set_views(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00002000u;
  views_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.views)
}

// optional uint32 image_width = 43;
inline bool PublishedFileDetails::has_image_width() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void PublishedFileDetails::clear_image_width() {
  image_width_ = 0u;
  _has_bits_[1] &= ~0x00004000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::image_width() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.image_width)
  return image_width_;
}
inline void PublishedFileDetails::set_image_width(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00004000u;
  image_width_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.image_width)
}

// optional uint32 image_height = 44;
inline bool PublishedFileDetails::has_image_height() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void PublishedFileDetails::clear_image_height() {
  image_height_ = 0u;
  _has_bits_[1] &= ~0x00008000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::image_height() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.image_height)
  return image_height_;
}
inline void PublishedFileDetails::set_image_height(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00008000u;
  image_height_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.image_height)
}

// optional string image_url = 45;
inline bool PublishedFileDetails::has_image_url() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PublishedFileDetails::clear_image_url() {
  image_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000400u;
}
inline const ::std::string& PublishedFileDetails::image_url() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.image_url)
  return image_url_.GetNoArena();
}
inline void PublishedFileDetails::set_image_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000400u;
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.image_url)
}
#if LANG_CXX11
inline void PublishedFileDetails::set_image_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000400u;
  image_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.image_url)
}
#endif
inline void PublishedFileDetails::set_image_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000400u;
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.image_url)
}
inline void PublishedFileDetails::set_image_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000400u;
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.image_url)
}
inline ::std::string* PublishedFileDetails::mutable_image_url() {
  _has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.image_url)
  return image_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails::release_image_url() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.image_url)
  if (!has_image_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000400u;
  return image_url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails::set_allocated_image_url(::std::string* image_url) {
  if (image_url != nullptr) {
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  image_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.image_url)
}

// optional bool spoiler_tag = 46;
inline bool PublishedFileDetails::has_spoiler_tag() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void PublishedFileDetails::clear_spoiler_tag() {
  spoiler_tag_ = false;
  _has_bits_[1] &= ~0x00000080u;
}
inline bool PublishedFileDetails::spoiler_tag() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.spoiler_tag)
  return spoiler_tag_;
}
inline void PublishedFileDetails::set_spoiler_tag(bool value) {
  _has_bits_[1] |= 0x00000080u;
  spoiler_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.spoiler_tag)
}

// optional uint32 shortcutid = 47;
inline bool PublishedFileDetails::has_shortcutid() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void PublishedFileDetails::clear_shortcutid() {
  shortcutid_ = 0u;
  _has_bits_[1] &= ~0x00010000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::shortcutid() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.shortcutid)
  return shortcutid_;
}
inline void PublishedFileDetails::set_shortcutid(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00010000u;
  shortcutid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.shortcutid)
}

// optional string shortcutname = 48;
inline bool PublishedFileDetails::has_shortcutname() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PublishedFileDetails::clear_shortcutname() {
  shortcutname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000800u;
}
inline const ::std::string& PublishedFileDetails::shortcutname() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.shortcutname)
  return shortcutname_.GetNoArena();
}
inline void PublishedFileDetails::set_shortcutname(const ::std::string& value) {
  _has_bits_[0] |= 0x00000800u;
  shortcutname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.shortcutname)
}
#if LANG_CXX11
inline void PublishedFileDetails::set_shortcutname(::std::string&& value) {
  _has_bits_[0] |= 0x00000800u;
  shortcutname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.PublishedFileDetails.shortcutname)
}
#endif
inline void PublishedFileDetails::set_shortcutname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000800u;
  shortcutname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.PublishedFileDetails.shortcutname)
}
inline void PublishedFileDetails::set_shortcutname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000800u;
  shortcutname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.PublishedFileDetails.shortcutname)
}
inline ::std::string* PublishedFileDetails::mutable_shortcutname() {
  _has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.shortcutname)
  return shortcutname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishedFileDetails::release_shortcutname() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.shortcutname)
  if (!has_shortcutname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000800u;
  return shortcutname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishedFileDetails::set_allocated_shortcutname(::std::string* shortcutname) {
  if (shortcutname != nullptr) {
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  shortcutname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shortcutname);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.shortcutname)
}

// optional uint32 num_children = 49;
inline bool PublishedFileDetails::has_num_children() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void PublishedFileDetails::clear_num_children() {
  num_children_ = 0u;
  _has_bits_[1] &= ~0x00020000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::num_children() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.num_children)
  return num_children_;
}
inline void PublishedFileDetails::set_num_children(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00020000u;
  num_children_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.num_children)
}

// optional uint32 num_reports = 50;
inline bool PublishedFileDetails::has_num_reports() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void PublishedFileDetails::clear_num_reports() {
  num_reports_ = 0u;
  _has_bits_[1] &= ~0x00040000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::num_reports() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.num_reports)
  return num_reports_;
}
inline void PublishedFileDetails::set_num_reports(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00040000u;
  num_reports_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.num_reports)
}

// repeated .proto.dota.PublishedFileDetails.Preview previews = 51;
inline int PublishedFileDetails::previews_size() const {
  return previews_.size();
}
inline void PublishedFileDetails::clear_previews() {
  previews_.Clear();
}
inline ::proto::dota::PublishedFileDetails_Preview* PublishedFileDetails::mutable_previews(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.previews)
  return previews_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Preview >*
PublishedFileDetails::mutable_previews() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.PublishedFileDetails.previews)
  return &previews_;
}
inline const ::proto::dota::PublishedFileDetails_Preview& PublishedFileDetails::previews(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.previews)
  return previews_.Get(index);
}
inline ::proto::dota::PublishedFileDetails_Preview* PublishedFileDetails::add_previews() {
  // @@protoc_insertion_point(field_add:proto.dota.PublishedFileDetails.previews)
  return previews_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Preview >&
PublishedFileDetails::previews() const {
  // @@protoc_insertion_point(field_list:proto.dota.PublishedFileDetails.previews)
  return previews_;
}

// repeated .proto.dota.PublishedFileDetails.Tag tags = 52;
inline int PublishedFileDetails::tags_size() const {
  return tags_.size();
}
inline void PublishedFileDetails::clear_tags() {
  tags_.Clear();
}
inline ::proto::dota::PublishedFileDetails_Tag* PublishedFileDetails::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.tags)
  return tags_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Tag >*
PublishedFileDetails::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.PublishedFileDetails.tags)
  return &tags_;
}
inline const ::proto::dota::PublishedFileDetails_Tag& PublishedFileDetails::tags(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.tags)
  return tags_.Get(index);
}
inline ::proto::dota::PublishedFileDetails_Tag* PublishedFileDetails::add_tags() {
  // @@protoc_insertion_point(field_add:proto.dota.PublishedFileDetails.tags)
  return tags_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Tag >&
PublishedFileDetails::tags() const {
  // @@protoc_insertion_point(field_list:proto.dota.PublishedFileDetails.tags)
  return tags_;
}

// repeated .proto.dota.PublishedFileDetails.Child children = 53;
inline int PublishedFileDetails::children_size() const {
  return children_.size();
}
inline void PublishedFileDetails::clear_children() {
  children_.Clear();
}
inline ::proto::dota::PublishedFileDetails_Child* PublishedFileDetails::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.children)
  return children_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Child >*
PublishedFileDetails::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.PublishedFileDetails.children)
  return &children_;
}
inline const ::proto::dota::PublishedFileDetails_Child& PublishedFileDetails::children(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.children)
  return children_.Get(index);
}
inline ::proto::dota::PublishedFileDetails_Child* PublishedFileDetails::add_children() {
  // @@protoc_insertion_point(field_add:proto.dota.PublishedFileDetails.children)
  return children_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_Child >&
PublishedFileDetails::children() const {
  // @@protoc_insertion_point(field_list:proto.dota.PublishedFileDetails.children)
  return children_;
}

// repeated .proto.dota.PublishedFileDetails.KVTag kvtags = 54;
inline int PublishedFileDetails::kvtags_size() const {
  return kvtags_.size();
}
inline void PublishedFileDetails::clear_kvtags() {
  kvtags_.Clear();
}
inline ::proto::dota::PublishedFileDetails_KVTag* PublishedFileDetails::mutable_kvtags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.kvtags)
  return kvtags_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_KVTag >*
PublishedFileDetails::mutable_kvtags() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.PublishedFileDetails.kvtags)
  return &kvtags_;
}
inline const ::proto::dota::PublishedFileDetails_KVTag& PublishedFileDetails::kvtags(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.kvtags)
  return kvtags_.Get(index);
}
inline ::proto::dota::PublishedFileDetails_KVTag* PublishedFileDetails::add_kvtags() {
  // @@protoc_insertion_point(field_add:proto.dota.PublishedFileDetails.kvtags)
  return kvtags_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails_KVTag >&
PublishedFileDetails::kvtags() const {
  // @@protoc_insertion_point(field_list:proto.dota.PublishedFileDetails.kvtags)
  return kvtags_;
}

// optional .proto.dota.PublishedFileDetails.VoteData vote_data = 55;
inline bool PublishedFileDetails::has_vote_data() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PublishedFileDetails::clear_vote_data() {
  if (vote_data_ != nullptr) vote_data_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
inline const ::proto::dota::PublishedFileDetails_VoteData& PublishedFileDetails::vote_data() const {
  const ::proto::dota::PublishedFileDetails_VoteData* p = vote_data_;
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.vote_data)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::PublishedFileDetails_VoteData*>(
      &::proto::dota::_PublishedFileDetails_VoteData_default_instance_);
}
inline ::proto::dota::PublishedFileDetails_VoteData* PublishedFileDetails::release_vote_data() {
  // @@protoc_insertion_point(field_release:proto.dota.PublishedFileDetails.vote_data)
  _has_bits_[0] &= ~0x00001000u;
  ::proto::dota::PublishedFileDetails_VoteData* temp = vote_data_;
  vote_data_ = nullptr;
  return temp;
}
inline ::proto::dota::PublishedFileDetails_VoteData* PublishedFileDetails::mutable_vote_data() {
  _has_bits_[0] |= 0x00001000u;
  if (vote_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::PublishedFileDetails_VoteData>(GetArenaNoVirtual());
    vote_data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.PublishedFileDetails.vote_data)
  return vote_data_;
}
inline void PublishedFileDetails::set_allocated_vote_data(::proto::dota::PublishedFileDetails_VoteData* vote_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete vote_data_;
  }
  if (vote_data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      vote_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vote_data, submessage_arena);
    }
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  vote_data_ = vote_data;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.PublishedFileDetails.vote_data)
}

// optional uint32 time_subscribed = 56 [(.proto.dota.description) = "Only valid in PublishedFile.GetUserFiles and not normal PublishedFile.GetDetail calls"];
inline bool PublishedFileDetails::has_time_subscribed() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void PublishedFileDetails::clear_time_subscribed() {
  time_subscribed_ = 0u;
  _has_bits_[1] &= ~0x00080000u;
}
inline ::google::protobuf::uint32 PublishedFileDetails::time_subscribed() const {
  // @@protoc_insertion_point(field_get:proto.dota.PublishedFileDetails.time_subscribed)
  return time_subscribed_;
}
inline void PublishedFileDetails::set_time_subscribed(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00080000u;
  time_subscribed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.PublishedFileDetails.time_subscribed)
}

// -------------------------------------------------------------------

// CPublishedFile_GetDetails_Response

// repeated .proto.dota.PublishedFileDetails publishedfiledetails = 1;
inline int CPublishedFile_GetDetails_Response::publishedfiledetails_size() const {
  return publishedfiledetails_.size();
}
inline void CPublishedFile_GetDetails_Response::clear_publishedfiledetails() {
  publishedfiledetails_.Clear();
}
inline ::proto::dota::PublishedFileDetails* CPublishedFile_GetDetails_Response::mutable_publishedfiledetails(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_GetDetails_Response.publishedfiledetails)
  return publishedfiledetails_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails >*
CPublishedFile_GetDetails_Response::mutable_publishedfiledetails() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CPublishedFile_GetDetails_Response.publishedfiledetails)
  return &publishedfiledetails_;
}
inline const ::proto::dota::PublishedFileDetails& CPublishedFile_GetDetails_Response::publishedfiledetails(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetDetails_Response.publishedfiledetails)
  return publishedfiledetails_.Get(index);
}
inline ::proto::dota::PublishedFileDetails* CPublishedFile_GetDetails_Response::add_publishedfiledetails() {
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_GetDetails_Response.publishedfiledetails)
  return publishedfiledetails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails >&
CPublishedFile_GetDetails_Response::publishedfiledetails() const {
  // @@protoc_insertion_point(field_list:proto.dota.CPublishedFile_GetDetails_Response.publishedfiledetails)
  return publishedfiledetails_;
}

// -------------------------------------------------------------------

// CPublishedFile_GetUserFiles_Request

// optional uint32 appid = 1 [(.proto.dota.description) = "App Id to retrieve published files from."];
inline bool CPublishedFile_GetUserFiles_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CPublishedFile_GetUserFiles_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CPublishedFile_GetUserFiles_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Request.appid)
  return appid_;
}
inline void CPublishedFile_GetUserFiles_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Request.appid)
}

// optional uint32 page = 3 [default = 1, (.proto.dota.description) = "(Optional) Starting page for results."];
inline bool CPublishedFile_GetUserFiles_Request::has_page() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CPublishedFile_GetUserFiles_Request::clear_page() {
  page_ = 1u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CPublishedFile_GetUserFiles_Request::page() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Request.page)
  return page_;
}
inline void CPublishedFile_GetUserFiles_Request::set_page(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  page_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Request.page)
}

// optional uint32 numperpage = 4 [default = 1, (.proto.dota.description) = "(Optional) The number of results, per page to return."];
inline bool CPublishedFile_GetUserFiles_Request::has_numperpage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CPublishedFile_GetUserFiles_Request::clear_numperpage() {
  numperpage_ = 1u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CPublishedFile_GetUserFiles_Request::numperpage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Request.numperpage)
  return numperpage_;
}
inline void CPublishedFile_GetUserFiles_Request::set_numperpage(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  numperpage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Request.numperpage)
}

// optional string sortmethod = 6 [default = "lastupdated", (.proto.dota.description) = "(Optional) Sorting method to use on returned values."];
inline bool CPublishedFile_GetUserFiles_Request::has_sortmethod() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CPublishedFile_GetUserFiles_Request::clear_sortmethod() {
  sortmethod_.ClearToDefaultNoArena(&::proto::dota::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CPublishedFile_GetUserFiles_Request::sortmethod() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Request.sortmethod)
  return sortmethod_.GetNoArena();
}
inline void CPublishedFile_GetUserFiles_Request::set_sortmethod(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  sortmethod_.SetNoArena(&::proto::dota::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Request.sortmethod)
}
#if LANG_CXX11
inline void CPublishedFile_GetUserFiles_Request::set_sortmethod(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  sortmethod_.SetNoArena(
    &::proto::dota::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_GetUserFiles_Request.sortmethod)
}
#endif
inline void CPublishedFile_GetUserFiles_Request::set_sortmethod(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  sortmethod_.SetNoArena(&::proto::dota::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_GetUserFiles_Request.sortmethod)
}
inline void CPublishedFile_GetUserFiles_Request::set_sortmethod(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  sortmethod_.SetNoArena(&::proto::dota::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_GetUserFiles_Request.sortmethod)
}
inline ::std::string* CPublishedFile_GetUserFiles_Request::mutable_sortmethod() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_GetUserFiles_Request.sortmethod)
  return sortmethod_.MutableNoArena(&::proto::dota::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get());
}
inline ::std::string* CPublishedFile_GetUserFiles_Request::release_sortmethod() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_GetUserFiles_Request.sortmethod)
  if (!has_sortmethod()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return sortmethod_.ReleaseNonDefaultNoArena(&::proto::dota::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get());
}
inline void CPublishedFile_GetUserFiles_Request::set_allocated_sortmethod(::std::string* sortmethod) {
  if (sortmethod != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  sortmethod_.SetAllocatedNoArena(&::proto::dota::CPublishedFile_GetUserFiles_Request::_i_give_permission_to_break_this_code_default_sortmethod_.get(), sortmethod);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_GetUserFiles_Request.sortmethod)
}

// optional bool totalonly = 7 [(.proto.dota.description) = "(Optional) If true, only return the total number of files that satisfy this query."];
inline bool CPublishedFile_GetUserFiles_Request::has_totalonly() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CPublishedFile_GetUserFiles_Request::clear_totalonly() {
  totalonly_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CPublishedFile_GetUserFiles_Request::totalonly() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Request.totalonly)
  return totalonly_;
}
inline void CPublishedFile_GetUserFiles_Request::set_totalonly(bool value) {
  _has_bits_[0] |= 0x00000004u;
  totalonly_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Request.totalonly)
}

// optional uint32 privacy = 9 [(.proto.dota.description) = "(optional) Filter by privacy settings."];
inline bool CPublishedFile_GetUserFiles_Request::has_privacy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CPublishedFile_GetUserFiles_Request::clear_privacy() {
  privacy_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CPublishedFile_GetUserFiles_Request::privacy() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Request.privacy)
  return privacy_;
}
inline void CPublishedFile_GetUserFiles_Request::set_privacy(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  privacy_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Request.privacy)
}

// optional bool ids_only = 10 [(.proto.dota.description) = "(Optional) If true, only return the published file ids of files that satisfy this query."];
inline bool CPublishedFile_GetUserFiles_Request::has_ids_only() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CPublishedFile_GetUserFiles_Request::clear_ids_only() {
  ids_only_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CPublishedFile_GetUserFiles_Request::ids_only() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Request.ids_only)
  return ids_only_;
}
inline void CPublishedFile_GetUserFiles_Request::set_ids_only(bool value) {
  _has_bits_[0] |= 0x00000008u;
  ids_only_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Request.ids_only)
}

// repeated string requiredtags = 11 [(.proto.dota.description) = "(Optional) Tags that must be present on a published file to satisfy the query."];
inline int CPublishedFile_GetUserFiles_Request::requiredtags_size() const {
  return requiredtags_.size();
}
inline void CPublishedFile_GetUserFiles_Request::clear_requiredtags() {
  requiredtags_.Clear();
}
inline const ::std::string& CPublishedFile_GetUserFiles_Request::requiredtags(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Request.requiredtags)
  return requiredtags_.Get(index);
}
inline ::std::string* CPublishedFile_GetUserFiles_Request::mutable_requiredtags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_GetUserFiles_Request.requiredtags)
  return requiredtags_.Mutable(index);
}
inline void CPublishedFile_GetUserFiles_Request::set_requiredtags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Request.requiredtags)
  requiredtags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CPublishedFile_GetUserFiles_Request::set_requiredtags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Request.requiredtags)
  requiredtags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CPublishedFile_GetUserFiles_Request::set_requiredtags(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  requiredtags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_GetUserFiles_Request.requiredtags)
}
inline void CPublishedFile_GetUserFiles_Request::set_requiredtags(int index, const char* value, size_t size) {
  requiredtags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_GetUserFiles_Request.requiredtags)
}
inline ::std::string* CPublishedFile_GetUserFiles_Request::add_requiredtags() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CPublishedFile_GetUserFiles_Request.requiredtags)
  return requiredtags_.Add();
}
inline void CPublishedFile_GetUserFiles_Request::add_requiredtags(const ::std::string& value) {
  requiredtags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_GetUserFiles_Request.requiredtags)
}
#if LANG_CXX11
inline void CPublishedFile_GetUserFiles_Request::add_requiredtags(::std::string&& value) {
  requiredtags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_GetUserFiles_Request.requiredtags)
}
#endif
inline void CPublishedFile_GetUserFiles_Request::add_requiredtags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  requiredtags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CPublishedFile_GetUserFiles_Request.requiredtags)
}
inline void CPublishedFile_GetUserFiles_Request::add_requiredtags(const char* value, size_t size) {
  requiredtags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CPublishedFile_GetUserFiles_Request.requiredtags)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CPublishedFile_GetUserFiles_Request::requiredtags() const {
  // @@protoc_insertion_point(field_list:proto.dota.CPublishedFile_GetUserFiles_Request.requiredtags)
  return requiredtags_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CPublishedFile_GetUserFiles_Request::mutable_requiredtags() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CPublishedFile_GetUserFiles_Request.requiredtags)
  return &requiredtags_;
}

// repeated string excludedtags = 12 [(.proto.dota.description) = "(Optional) Tags that must NOT be present on a published file to satisfy the query."];
inline int CPublishedFile_GetUserFiles_Request::excludedtags_size() const {
  return excludedtags_.size();
}
inline void CPublishedFile_GetUserFiles_Request::clear_excludedtags() {
  excludedtags_.Clear();
}
inline const ::std::string& CPublishedFile_GetUserFiles_Request::excludedtags(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Request.excludedtags)
  return excludedtags_.Get(index);
}
inline ::std::string* CPublishedFile_GetUserFiles_Request::mutable_excludedtags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_GetUserFiles_Request.excludedtags)
  return excludedtags_.Mutable(index);
}
inline void CPublishedFile_GetUserFiles_Request::set_excludedtags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Request.excludedtags)
  excludedtags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CPublishedFile_GetUserFiles_Request::set_excludedtags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Request.excludedtags)
  excludedtags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CPublishedFile_GetUserFiles_Request::set_excludedtags(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  excludedtags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_GetUserFiles_Request.excludedtags)
}
inline void CPublishedFile_GetUserFiles_Request::set_excludedtags(int index, const char* value, size_t size) {
  excludedtags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_GetUserFiles_Request.excludedtags)
}
inline ::std::string* CPublishedFile_GetUserFiles_Request::add_excludedtags() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CPublishedFile_GetUserFiles_Request.excludedtags)
  return excludedtags_.Add();
}
inline void CPublishedFile_GetUserFiles_Request::add_excludedtags(const ::std::string& value) {
  excludedtags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_GetUserFiles_Request.excludedtags)
}
#if LANG_CXX11
inline void CPublishedFile_GetUserFiles_Request::add_excludedtags(::std::string&& value) {
  excludedtags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_GetUserFiles_Request.excludedtags)
}
#endif
inline void CPublishedFile_GetUserFiles_Request::add_excludedtags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  excludedtags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CPublishedFile_GetUserFiles_Request.excludedtags)
}
inline void CPublishedFile_GetUserFiles_Request::add_excludedtags(const char* value, size_t size) {
  excludedtags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CPublishedFile_GetUserFiles_Request.excludedtags)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CPublishedFile_GetUserFiles_Request::excludedtags() const {
  // @@protoc_insertion_point(field_list:proto.dota.CPublishedFile_GetUserFiles_Request.excludedtags)
  return excludedtags_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CPublishedFile_GetUserFiles_Request::mutable_excludedtags() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CPublishedFile_GetUserFiles_Request.excludedtags)
  return &excludedtags_;
}

// -------------------------------------------------------------------

// CPublishedFile_GetUserFiles_Response_App

// optional uint32 appid = 1;
inline bool CPublishedFile_GetUserFiles_Response_App::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CPublishedFile_GetUserFiles_Response_App::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CPublishedFile_GetUserFiles_Response_App::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Response.App.appid)
  return appid_;
}
inline void CPublishedFile_GetUserFiles_Response_App::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Response.App.appid)
}

// optional string name = 2;
inline bool CPublishedFile_GetUserFiles_Response_App::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CPublishedFile_GetUserFiles_Response_App::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CPublishedFile_GetUserFiles_Response_App::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Response.App.name)
  return name_.GetNoArena();
}
inline void CPublishedFile_GetUserFiles_Response_App::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Response.App.name)
}
#if LANG_CXX11
inline void CPublishedFile_GetUserFiles_Response_App::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_GetUserFiles_Response.App.name)
}
#endif
inline void CPublishedFile_GetUserFiles_Response_App::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_GetUserFiles_Response.App.name)
}
inline void CPublishedFile_GetUserFiles_Response_App::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_GetUserFiles_Response.App.name)
}
inline ::std::string* CPublishedFile_GetUserFiles_Response_App::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_GetUserFiles_Response.App.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_GetUserFiles_Response_App::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_GetUserFiles_Response.App.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_GetUserFiles_Response_App::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_GetUserFiles_Response.App.name)
}

// optional uint32 shortcutid = 3;
inline bool CPublishedFile_GetUserFiles_Response_App::has_shortcutid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CPublishedFile_GetUserFiles_Response_App::clear_shortcutid() {
  shortcutid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CPublishedFile_GetUserFiles_Response_App::shortcutid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Response.App.shortcutid)
  return shortcutid_;
}
inline void CPublishedFile_GetUserFiles_Response_App::set_shortcutid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  shortcutid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Response.App.shortcutid)
}

// optional bool private = 4;
inline bool CPublishedFile_GetUserFiles_Response_App::has_private_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CPublishedFile_GetUserFiles_Response_App::clear_private_() {
  private__ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CPublishedFile_GetUserFiles_Response_App::private_() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Response.App.private)
  return private__;
}
inline void CPublishedFile_GetUserFiles_Response_App::set_private_(bool value) {
  _has_bits_[0] |= 0x00000008u;
  private__ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Response.App.private)
}

// -------------------------------------------------------------------

// CPublishedFile_GetUserFiles_Response

// optional uint32 total = 1;
inline bool CPublishedFile_GetUserFiles_Response::has_total() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CPublishedFile_GetUserFiles_Response::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CPublishedFile_GetUserFiles_Response::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Response.total)
  return total_;
}
inline void CPublishedFile_GetUserFiles_Response::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Response.total)
}

// optional uint32 startindex = 2;
inline bool CPublishedFile_GetUserFiles_Response::has_startindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CPublishedFile_GetUserFiles_Response::clear_startindex() {
  startindex_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CPublishedFile_GetUserFiles_Response::startindex() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Response.startindex)
  return startindex_;
}
inline void CPublishedFile_GetUserFiles_Response::set_startindex(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  startindex_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_GetUserFiles_Response.startindex)
}

// repeated .proto.dota.PublishedFileDetails publishedfiledetails = 3;
inline int CPublishedFile_GetUserFiles_Response::publishedfiledetails_size() const {
  return publishedfiledetails_.size();
}
inline void CPublishedFile_GetUserFiles_Response::clear_publishedfiledetails() {
  publishedfiledetails_.Clear();
}
inline ::proto::dota::PublishedFileDetails* CPublishedFile_GetUserFiles_Response::mutable_publishedfiledetails(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_GetUserFiles_Response.publishedfiledetails)
  return publishedfiledetails_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails >*
CPublishedFile_GetUserFiles_Response::mutable_publishedfiledetails() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CPublishedFile_GetUserFiles_Response.publishedfiledetails)
  return &publishedfiledetails_;
}
inline const ::proto::dota::PublishedFileDetails& CPublishedFile_GetUserFiles_Response::publishedfiledetails(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Response.publishedfiledetails)
  return publishedfiledetails_.Get(index);
}
inline ::proto::dota::PublishedFileDetails* CPublishedFile_GetUserFiles_Response::add_publishedfiledetails() {
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_GetUserFiles_Response.publishedfiledetails)
  return publishedfiledetails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::PublishedFileDetails >&
CPublishedFile_GetUserFiles_Response::publishedfiledetails() const {
  // @@protoc_insertion_point(field_list:proto.dota.CPublishedFile_GetUserFiles_Response.publishedfiledetails)
  return publishedfiledetails_;
}

// repeated .proto.dota.CPublishedFile_GetUserFiles_Response.App apps = 4;
inline int CPublishedFile_GetUserFiles_Response::apps_size() const {
  return apps_.size();
}
inline void CPublishedFile_GetUserFiles_Response::clear_apps() {
  apps_.Clear();
}
inline ::proto::dota::CPublishedFile_GetUserFiles_Response_App* CPublishedFile_GetUserFiles_Response::mutable_apps(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_GetUserFiles_Response.apps)
  return apps_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CPublishedFile_GetUserFiles_Response_App >*
CPublishedFile_GetUserFiles_Response::mutable_apps() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CPublishedFile_GetUserFiles_Response.apps)
  return &apps_;
}
inline const ::proto::dota::CPublishedFile_GetUserFiles_Response_App& CPublishedFile_GetUserFiles_Response::apps(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_GetUserFiles_Response.apps)
  return apps_.Get(index);
}
inline ::proto::dota::CPublishedFile_GetUserFiles_Response_App* CPublishedFile_GetUserFiles_Response::add_apps() {
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_GetUserFiles_Response.apps)
  return apps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CPublishedFile_GetUserFiles_Response_App >&
CPublishedFile_GetUserFiles_Response::apps() const {
  // @@protoc_insertion_point(field_list:proto.dota.CPublishedFile_GetUserFiles_Response.apps)
  return apps_;
}

// -------------------------------------------------------------------

// CPublishedFile_Update_Request

// optional uint32 appid = 1 [(.proto.dota.description) = "App Id this published file belongs to."];
inline bool CPublishedFile_Update_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CPublishedFile_Update_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CPublishedFile_Update_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Update_Request.appid)
  return appid_;
}
inline void CPublishedFile_Update_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Update_Request.appid)
}

// optional fixed64 publishedfileid = 2 [(.proto.dota.description) = "Published file id of the file we\'d like update."];
inline bool CPublishedFile_Update_Request::has_publishedfileid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CPublishedFile_Update_Request::clear_publishedfileid() {
  publishedfileid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 CPublishedFile_Update_Request::publishedfileid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Update_Request.publishedfileid)
  return publishedfileid_;
}
inline void CPublishedFile_Update_Request::set_publishedfileid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  publishedfileid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Update_Request.publishedfileid)
}

// optional string title = 3 [(.proto.dota.description) = "(Optional) Title of the published file."];
inline bool CPublishedFile_Update_Request::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CPublishedFile_Update_Request::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CPublishedFile_Update_Request::title() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Update_Request.title)
  return title_.GetNoArena();
}
inline void CPublishedFile_Update_Request::set_title(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Update_Request.title)
}
#if LANG_CXX11
inline void CPublishedFile_Update_Request::set_title(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Update_Request.title)
}
#endif
inline void CPublishedFile_Update_Request::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Update_Request.title)
}
inline void CPublishedFile_Update_Request::set_title(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Update_Request.title)
}
inline ::std::string* CPublishedFile_Update_Request::mutable_title() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Update_Request.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Update_Request::release_title() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Update_Request.title)
  if (!has_title()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return title_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Update_Request::set_allocated_title(::std::string* title) {
  if (title != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Update_Request.title)
}

// optional string file_description = 4 [(.proto.dota.description) = "(Optional) Description of the published file."];
inline bool CPublishedFile_Update_Request::has_file_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CPublishedFile_Update_Request::clear_file_description() {
  file_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CPublishedFile_Update_Request::file_description() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Update_Request.file_description)
  return file_description_.GetNoArena();
}
inline void CPublishedFile_Update_Request::set_file_description(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  file_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Update_Request.file_description)
}
#if LANG_CXX11
inline void CPublishedFile_Update_Request::set_file_description(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  file_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Update_Request.file_description)
}
#endif
inline void CPublishedFile_Update_Request::set_file_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  file_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Update_Request.file_description)
}
inline void CPublishedFile_Update_Request::set_file_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  file_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Update_Request.file_description)
}
inline ::std::string* CPublishedFile_Update_Request::mutable_file_description() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Update_Request.file_description)
  return file_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Update_Request::release_file_description() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Update_Request.file_description)
  if (!has_file_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return file_description_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Update_Request::set_allocated_file_description(::std::string* file_description) {
  if (file_description != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  file_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_description);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Update_Request.file_description)
}

// optional uint32 visibility = 5 [(.proto.dota.description) = "(Optional) Visibility of the published file."];
inline bool CPublishedFile_Update_Request::has_visibility() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CPublishedFile_Update_Request::clear_visibility() {
  visibility_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CPublishedFile_Update_Request::visibility() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Update_Request.visibility)
  return visibility_;
}
inline void CPublishedFile_Update_Request::set_visibility(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  visibility_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Update_Request.visibility)
}

// repeated string tags = 6 [(.proto.dota.description) = "(Optional) Set of tags for the published file."];
inline int CPublishedFile_Update_Request::tags_size() const {
  return tags_.size();
}
inline void CPublishedFile_Update_Request::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& CPublishedFile_Update_Request::tags(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Update_Request.tags)
  return tags_.Get(index);
}
inline ::std::string* CPublishedFile_Update_Request::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Update_Request.tags)
  return tags_.Mutable(index);
}
inline void CPublishedFile_Update_Request::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Update_Request.tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CPublishedFile_Update_Request::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Update_Request.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CPublishedFile_Update_Request::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Update_Request.tags)
}
inline void CPublishedFile_Update_Request::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Update_Request.tags)
}
inline ::std::string* CPublishedFile_Update_Request::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CPublishedFile_Update_Request.tags)
  return tags_.Add();
}
inline void CPublishedFile_Update_Request::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_Update_Request.tags)
}
#if LANG_CXX11
inline void CPublishedFile_Update_Request::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_Update_Request.tags)
}
#endif
inline void CPublishedFile_Update_Request::add_tags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CPublishedFile_Update_Request.tags)
}
inline void CPublishedFile_Update_Request::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CPublishedFile_Update_Request.tags)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CPublishedFile_Update_Request::tags() const {
  // @@protoc_insertion_point(field_list:proto.dota.CPublishedFile_Update_Request.tags)
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CPublishedFile_Update_Request::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CPublishedFile_Update_Request.tags)
  return &tags_;
}

// optional string filename = 7 [(.proto.dota.description) = "(Optional) Filename for the published file."];
inline bool CPublishedFile_Update_Request::has_filename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CPublishedFile_Update_Request::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CPublishedFile_Update_Request::filename() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Update_Request.filename)
  return filename_.GetNoArena();
}
inline void CPublishedFile_Update_Request::set_filename(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Update_Request.filename)
}
#if LANG_CXX11
inline void CPublishedFile_Update_Request::set_filename(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Update_Request.filename)
}
#endif
inline void CPublishedFile_Update_Request::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Update_Request.filename)
}
inline void CPublishedFile_Update_Request::set_filename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Update_Request.filename)
}
inline ::std::string* CPublishedFile_Update_Request::mutable_filename() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Update_Request.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Update_Request::release_filename() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Update_Request.filename)
  if (!has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Update_Request::set_allocated_filename(::std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Update_Request.filename)
}

// optional string preview_filename = 8 [(.proto.dota.description) = "(Optional) Preview filename for the published file."];
inline bool CPublishedFile_Update_Request::has_preview_filename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CPublishedFile_Update_Request::clear_preview_filename() {
  preview_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& CPublishedFile_Update_Request::preview_filename() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_Update_Request.preview_filename)
  return preview_filename_.GetNoArena();
}
inline void CPublishedFile_Update_Request::set_preview_filename(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  preview_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_Update_Request.preview_filename)
}
#if LANG_CXX11
inline void CPublishedFile_Update_Request::set_preview_filename(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  preview_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CPublishedFile_Update_Request.preview_filename)
}
#endif
inline void CPublishedFile_Update_Request::set_preview_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  preview_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_Update_Request.preview_filename)
}
inline void CPublishedFile_Update_Request::set_preview_filename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  preview_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_Update_Request.preview_filename)
}
inline ::std::string* CPublishedFile_Update_Request::mutable_preview_filename() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_Update_Request.preview_filename)
  return preview_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPublishedFile_Update_Request::release_preview_filename() {
  // @@protoc_insertion_point(field_release:proto.dota.CPublishedFile_Update_Request.preview_filename)
  if (!has_preview_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return preview_filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPublishedFile_Update_Request::set_allocated_preview_filename(::std::string* preview_filename) {
  if (preview_filename != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  preview_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), preview_filename);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CPublishedFile_Update_Request.preview_filename)
}

// -------------------------------------------------------------------

// CPublishedFile_Update_Response

// -------------------------------------------------------------------

// CPublishedFile_RefreshVotingQueue_Request

// optional uint32 appid = 1;
inline bool CPublishedFile_RefreshVotingQueue_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CPublishedFile_RefreshVotingQueue_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CPublishedFile_RefreshVotingQueue_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_RefreshVotingQueue_Request.appid)
  return appid_;
}
inline void CPublishedFile_RefreshVotingQueue_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_RefreshVotingQueue_Request.appid)
}

// optional uint32 matching_file_type = 2 [(.proto.dota.description) = "EPublishedFileInfoMatchingFileType"];
inline bool CPublishedFile_RefreshVotingQueue_Request::has_matching_file_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CPublishedFile_RefreshVotingQueue_Request::clear_matching_file_type() {
  matching_file_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CPublishedFile_RefreshVotingQueue_Request::matching_file_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_RefreshVotingQueue_Request.matching_file_type)
  return matching_file_type_;
}
inline void CPublishedFile_RefreshVotingQueue_Request::set_matching_file_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  matching_file_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_RefreshVotingQueue_Request.matching_file_type)
}

// repeated string tags = 3 [(.proto.dota.description) = "Include files that have all the tags or any of the tags if match_all_tags is set to false."];
inline int CPublishedFile_RefreshVotingQueue_Request::tags_size() const {
  return tags_.size();
}
inline void CPublishedFile_RefreshVotingQueue_Request::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& CPublishedFile_RefreshVotingQueue_Request::tags(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_RefreshVotingQueue_Request.tags)
  return tags_.Get(index);
}
inline ::std::string* CPublishedFile_RefreshVotingQueue_Request::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_RefreshVotingQueue_Request.tags)
  return tags_.Mutable(index);
}
inline void CPublishedFile_RefreshVotingQueue_Request::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_RefreshVotingQueue_Request.tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CPublishedFile_RefreshVotingQueue_Request::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_RefreshVotingQueue_Request.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CPublishedFile_RefreshVotingQueue_Request::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_RefreshVotingQueue_Request.tags)
}
inline void CPublishedFile_RefreshVotingQueue_Request::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_RefreshVotingQueue_Request.tags)
}
inline ::std::string* CPublishedFile_RefreshVotingQueue_Request::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CPublishedFile_RefreshVotingQueue_Request.tags)
  return tags_.Add();
}
inline void CPublishedFile_RefreshVotingQueue_Request::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_RefreshVotingQueue_Request.tags)
}
#if LANG_CXX11
inline void CPublishedFile_RefreshVotingQueue_Request::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_RefreshVotingQueue_Request.tags)
}
#endif
inline void CPublishedFile_RefreshVotingQueue_Request::add_tags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CPublishedFile_RefreshVotingQueue_Request.tags)
}
inline void CPublishedFile_RefreshVotingQueue_Request::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CPublishedFile_RefreshVotingQueue_Request.tags)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CPublishedFile_RefreshVotingQueue_Request::tags() const {
  // @@protoc_insertion_point(field_list:proto.dota.CPublishedFile_RefreshVotingQueue_Request.tags)
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CPublishedFile_RefreshVotingQueue_Request::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CPublishedFile_RefreshVotingQueue_Request.tags)
  return &tags_;
}

// optional bool match_all_tags = 4 [default = true, (.proto.dota.description) = "If true, then files must have all the tags specified.  If false, then must have at least one of the tags specified."];
inline bool CPublishedFile_RefreshVotingQueue_Request::has_match_all_tags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CPublishedFile_RefreshVotingQueue_Request::clear_match_all_tags() {
  match_all_tags_ = true;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CPublishedFile_RefreshVotingQueue_Request::match_all_tags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_RefreshVotingQueue_Request.match_all_tags)
  return match_all_tags_;
}
inline void CPublishedFile_RefreshVotingQueue_Request::set_match_all_tags(bool value) {
  _has_bits_[0] |= 0x00000008u;
  match_all_tags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_RefreshVotingQueue_Request.match_all_tags)
}

// repeated string excluded_tags = 5 [(.proto.dota.description) = "Exclude any files that have any of these tags."];
inline int CPublishedFile_RefreshVotingQueue_Request::excluded_tags_size() const {
  return excluded_tags_.size();
}
inline void CPublishedFile_RefreshVotingQueue_Request::clear_excluded_tags() {
  excluded_tags_.Clear();
}
inline const ::std::string& CPublishedFile_RefreshVotingQueue_Request::excluded_tags(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_RefreshVotingQueue_Request.excluded_tags)
  return excluded_tags_.Get(index);
}
inline ::std::string* CPublishedFile_RefreshVotingQueue_Request::mutable_excluded_tags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CPublishedFile_RefreshVotingQueue_Request.excluded_tags)
  return excluded_tags_.Mutable(index);
}
inline void CPublishedFile_RefreshVotingQueue_Request::set_excluded_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_RefreshVotingQueue_Request.excluded_tags)
  excluded_tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CPublishedFile_RefreshVotingQueue_Request::set_excluded_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_RefreshVotingQueue_Request.excluded_tags)
  excluded_tags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CPublishedFile_RefreshVotingQueue_Request::set_excluded_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  excluded_tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CPublishedFile_RefreshVotingQueue_Request.excluded_tags)
}
inline void CPublishedFile_RefreshVotingQueue_Request::set_excluded_tags(int index, const char* value, size_t size) {
  excluded_tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CPublishedFile_RefreshVotingQueue_Request.excluded_tags)
}
inline ::std::string* CPublishedFile_RefreshVotingQueue_Request::add_excluded_tags() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CPublishedFile_RefreshVotingQueue_Request.excluded_tags)
  return excluded_tags_.Add();
}
inline void CPublishedFile_RefreshVotingQueue_Request::add_excluded_tags(const ::std::string& value) {
  excluded_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_RefreshVotingQueue_Request.excluded_tags)
}
#if LANG_CXX11
inline void CPublishedFile_RefreshVotingQueue_Request::add_excluded_tags(::std::string&& value) {
  excluded_tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CPublishedFile_RefreshVotingQueue_Request.excluded_tags)
}
#endif
inline void CPublishedFile_RefreshVotingQueue_Request::add_excluded_tags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  excluded_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CPublishedFile_RefreshVotingQueue_Request.excluded_tags)
}
inline void CPublishedFile_RefreshVotingQueue_Request::add_excluded_tags(const char* value, size_t size) {
  excluded_tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CPublishedFile_RefreshVotingQueue_Request.excluded_tags)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CPublishedFile_RefreshVotingQueue_Request::excluded_tags() const {
  // @@protoc_insertion_point(field_list:proto.dota.CPublishedFile_RefreshVotingQueue_Request.excluded_tags)
  return excluded_tags_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CPublishedFile_RefreshVotingQueue_Request::mutable_excluded_tags() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CPublishedFile_RefreshVotingQueue_Request.excluded_tags)
  return &excluded_tags_;
}

// optional uint32 desired_queue_size = 6 [(.proto.dota.description) = "Desired number of items in the voting queue.  May be clamped by the server"];
inline bool CPublishedFile_RefreshVotingQueue_Request::has_desired_queue_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CPublishedFile_RefreshVotingQueue_Request::clear_desired_queue_size() {
  desired_queue_size_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CPublishedFile_RefreshVotingQueue_Request::desired_queue_size() const {
  // @@protoc_insertion_point(field_get:proto.dota.CPublishedFile_RefreshVotingQueue_Request.desired_queue_size)
  return desired_queue_size_;
}
inline void CPublishedFile_RefreshVotingQueue_Request::set_desired_queue_size(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  desired_queue_size_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CPublishedFile_RefreshVotingQueue_Request.desired_queue_size)
}

// -------------------------------------------------------------------

// CPublishedFile_RefreshVotingQueue_Response

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_5fpublishedfile_2esteamworkssdk_2eproto
