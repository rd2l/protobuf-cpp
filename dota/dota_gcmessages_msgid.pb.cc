// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_msgid.proto

#include "dota_gcmessages_msgid.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace proto {
namespace dota {
}  // namespace dota
}  // namespace proto
void InitDefaults_dota_5fgcmessages_5fmsgid_2eproto() {
}

constexpr ::google::protobuf::Metadata* file_level_metadata_dota_5fgcmessages_5fmsgid_2eproto = nullptr;
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_dota_5fgcmessages_5fmsgid_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_dota_5fgcmessages_5fmsgid_2eproto = nullptr;
const ::google::protobuf::uint32 TableStruct_dota_5fgcmessages_5fmsgid_2eproto::offsets[1] = {};
static constexpr ::google::protobuf::internal::MigrationSchema* schemas = nullptr;
static constexpr ::google::protobuf::Message* const* file_default_instances = nullptr;

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_dota_5fgcmessages_5fmsgid_2eproto = {
  {}, AddDescriptors_dota_5fgcmessages_5fmsgid_2eproto, "dota_gcmessages_msgid.proto", schemas,
  file_default_instances, TableStruct_dota_5fgcmessages_5fmsgid_2eproto::offsets,
  file_level_metadata_dota_5fgcmessages_5fmsgid_2eproto, 0, file_level_enum_descriptors_dota_5fgcmessages_5fmsgid_2eproto, file_level_service_descriptors_dota_5fgcmessages_5fmsgid_2eproto,
};

const char descriptor_table_protodef_dota_5fgcmessages_5fmsgid_2eproto[] =
  "\n\033dota_gcmessages_msgid.proto\022\nproto.dot"
  "a*\210\370\001\n\nEDOTAGCMsg\022\025\n\020k_EMsgGCDOTABase\020\3306"
  "\022\034\n\027k_EMsgGCGeneralResponse\020\3316\022\035\n\030k_EMsg"
  "GCGameMatchSignOut\020\3346\022%\n k_EMsgGCGameMat"
  "chSignOutResponse\020\3356\022\034\n\027k_EMsgGCJoinChat"
  "Channel\020\3416\022$\n\037k_EMsgGCJoinChatChannelRes"
  "ponse\020\3426\022\037\n\032k_EMsgGCOtherJoinedChannel\020\345"
  "6\022\035\n\030k_EMsgGCOtherLeftChannel\020\3466\022\035\n\030k_EM"
  "sgGCMatchHistoryList\020\3516\022\"\n\035k_EMsgServerT"
  "oGCRequestStatus\020\3626\022\035\n\030k_EMsgGCGetRecent"
  "Matches\020\3636\022\"\n\035k_EMsgGCRecentMatchesRespo"
  "nse\020\3646\022\036\n\031k_EMsgGCStartFindingMatch\020\3716\022\035"
  "\n\030k_EMsgGCConnectedPlayers\020\3726\022\037\n\032k_EMsgG"
  "CAbandonCurrentGame\020\3736\022\035\n\030k_EMsgGCStopFi"
  "ndingMatch\020\3746\022 \n\033k_EMsgGCPracticeLobbyCr"
  "eate\020\3766\022\037\n\032k_EMsgGCPracticeLobbyLeave\020\2007"
  "\022 \n\033k_EMsgGCPracticeLobbyLaunch\020\2017\022\036\n\031k_"
  "EMsgGCPracticeLobbyList\020\2027\022&\n!k_EMsgGCPr"
  "acticeLobbyListResponse\020\2037\022\036\n\031k_EMsgGCPr"
  "acticeLobbyJoin\020\2047\022$\n\037k_EMsgGCPracticeLo"
  "bbySetDetails\020\2067\022%\n k_EMsgGCPracticeLobb"
  "ySetTeamSlot\020\2077\022)\n$k_EMsgGCInitialQuesti"
  "onnaireResponse\020\2117\022\"\n\035k_EMsgGCPracticeLo"
  "bbyResponse\020\2177\022\"\n\035k_EMsgGCBroadcastNotif"
  "ication\020\2207\022!\n\034k_EMsgGCLiveScoreboardUpda"
  "te\020\2217\022#\n\036k_EMsgGCRequestChatChannelList\020"
  "\2247\022+\n&k_EMsgGCRequestChatChannelListResp"
  "onse\020\2257\022\033\n\026k_EMsgGCRequestMatches\020\2307\022#\n\036"
  "k_EMsgGCRequestMatchesResponse\020\2317\022#\n\036k_E"
  "MsgGCRequestPlayerResources\020\2347\022+\n&k_EMsg"
  "GCRequestPlayerResourcesResponse\020\2357\022\024\n\017k"
  "_EMsgGCReadyUp\020\2367\022\'\n\"k_EMsgGCKickedFromM"
  "atchmakingQueue\020\2377\022\033\n\026k_EMsgGCLeaverDete"
  "cted\020\2407\022\037\n\032k_EMsgGCSpectateFriendGame\020\2417"
  "\022\'\n\"k_EMsgGCSpectateFriendGameResponse\020\242"
  "7\022\032\n\025k_EMsgGCPlayerReports\020\2437\022$\n\037k_EMsgG"
  "CReportsRemainingRequest\020\2447\022%\n k_EMsgGCR"
  "eportsRemainingResponse\020\2457\022\037\n\032k_EMsgGCSu"
  "bmitPlayerReport\020\2467\022\'\n\"k_EMsgGCSubmitPla"
  "yerReportResponse\020\2477\022\036\n\031k_EMsgGCPractice"
  "LobbyKick\020\2517\022 \n\033k_EMsgGCReportCountsRequ"
  "est\020\2527\022!\n\034k_EMsgGCReportCountsResponse\020\253"
  "7\022\035\n\030k_EMsgGCRequestSaveGames\020\2547\022#\n\036k_EM"
  "sgGCRequestSaveGamesServer\020\2557\022%\n k_EMsgG"
  "CRequestSaveGamesResponse\020\2567\022#\n\036k_EMsgGC"
  "LeaverDetectedResponse\020\2577\022\"\n\035k_EMsgGCPla"
  "yerFailedToConnect\020\2607\022\035\n\030k_EMsgGCGCToRel"
  "ayConnect\020\2617\022%\n k_EMsgGCGCToRelayConnect"
  "response\020\2627\022\026\n\021k_EMsgGCWatchGame\020\2637\022\036\n\031k"
  "_EMsgGCWatchGameResponse\020\2647\022\035\n\030k_EMsgGCB"
  "anStatusRequest\020\2657\022\036\n\031k_EMsgGCBanStatusR"
  "esponse\020\2667\022 \n\033k_EMsgGCMatchDetailsReques"
  "t\020\2677\022!\n\034k_EMsgGCMatchDetailsResponse\020\2707\022"
  "\034\n\027k_EMsgGCCancelWatchGame\020\2717\022\022\n\rk_EMsgG"
  "CPopup\020\2767\022,\n\'k_EMsgGCDOTAClearNotifySucc"
  "essfulReport\020\3007\022+\n&k_EMsgGCFriendPractic"
  "eLobbyListRequest\020\3077\022,\n\'k_EMsgGCFriendPr"
  "acticeLobbyListResponse\020\3107\022&\n!k_EMsgGCPr"
  "acticeLobbyJoinResponse\020\3117\022%\n k_EMsgClie"
  "ntEconNotification_Job\020\3127\022\027\n\022k_EMsgGCCre"
  "ateTeam\020\3137\022\037\n\032k_EMsgGCCreateTeamResponse"
  "\020\3147\022\025\n\020k_EMsgGCTeamData\020\3217\022#\n\036k_EMsgGCTe"
  "amInvite_InviterToGC\020\3227\0224\n/k_EMsgGCTeamI"
  "nvite_GCImmediateResponseToInviter\020\3237\022*\n"
  "%k_EMsgGCTeamInvite_GCRequestToInvitee\020\324"
  "7\022+\n&k_EMsgGCTeamInvite_InviteeResponseT"
  "oGC\020\3257\022+\n&k_EMsgGCTeamInvite_GCResponseT"
  "oInviter\020\3267\022+\n&k_EMsgGCTeamInvite_GCResp"
  "onseToInvitee\020\3277\022\033\n\026k_EMsgGCKickTeamMemb"
  "er\020\3307\022#\n\036k_EMsgGCKickTeamMemberResponse\020"
  "\3317\022\026\n\021k_EMsgGCLeaveTeam\020\3327\022\036\n\031k_EMsgGCLe"
  "aveTeamResponse\020\3337\022#\n\036k_EMsgGCSuggestTea"
  "mMatchmaking\020\3347\022%\n k_EMsgGCPlayerHeroesF"
  "avoritesAdd\020\3357\022(\n#k_EMsgGCPlayerHeroesFa"
  "voritesRemove\020\3367\022%\n k_EMsgGCApplyTeamToP"
  "racticeLobby\020\3467\022\036\n\031k_EMsgGCTransferTeamA"
  "dmin\020\3507\022.\n)k_EMsgGCPracticeLobbyJoinBroa"
  "dcastChannel\020\3557\022!\n\034k_EMsgGC_TournamentIt"
  "emEvent\020\3567\022)\n$k_EMsgGC_TournamentItemEve"
  "ntResponse\020\3577\022\030\n\023k_EMsgCastMatchVote\020\3607\022"
  " \n\033k_EMsgCastMatchVoteResponse\020\3617\022\034\n\027k_E"
  "MsgRetrieveMatchVote\020\3627\022$\n\037k_EMsgRetriev"
  "eMatchVoteResponse\020\3637\022\026\n\021k_EMsgTeamFanfa"
  "re\020\3647\022\036\n\031k_EMsgResponseTeamFanfare\020\3657\022&\n"
  "!k_EMsgGC_GameServerUploadSaveGame\020\3667\022&\n"
  "!k_EMsgGC_GameServerSaveGameResult\020\3677\022#\n"
  "\036k_EMsgGC_GameServerGetLoadGame\020\3707\022)\n$k_"
  "EMsgGC_GameServerGetLoadGameResult\020\3717\022\034\n"
  "\027k_EMsgGCEditTeamDetails\020\3767\022$\n\037k_EMsgGCE"
  "ditTeamDetailsResponse\020\3777\022\037\n\032k_EMsgGCPro"
  "TeamListRequest\020\2008\022 \n\033k_EMsgGCProTeamLis"
  "tResponse\020\2018\022\032\n\025k_EMsgGCReadyUpStatus\020\2028"
  "\022\027\n\022k_EMsgGCHallOfFame\020\2038\022\036\n\031k_EMsgGCHal"
  "lOfFameRequest\020\2048\022\037\n\032k_EMsgGCHallOfFameR"
  "esponse\020\2058\022&\n!k_EMsgGCGenerateDiretidePr"
  "izeList\020\2068\022!\n\034k_EMsgGCRewardDiretidePriz"
  "es\020\2108\022+\n&k_EMsgGCDiretidePrizesRewardedR"
  "esponse\020\2118\022&\n!k_EMsgGCHalloweenHighScore"
  "Request\020\2128\022\'\n\"k_EMsgGCHalloweenHighScore"
  "Response\020\2138\022.\n)k_EMsgGCGenerateDiretideP"
  "rizeListResponse\020\2148\022#\n\036k_EMsgGCStoreProm"
  "oPagesRequest\020\2168\022$\n\037k_EMsgGCStorePromoPa"
  "gesResponse\020\2178\022\037\n\032k_EMsgGCToGCMatchCompl"
  "eted\020\2228\022!\n\034k_EMsgGCBalancedShuffleLobby\020"
  "\2248\022&\n!k_EMsgGCToGCCheckLeaguePermission\020"
  "\2258\022.\n)k_EMsgGCToGCCheckLeaguePermissionR"
  "esponse\020\2268\022$\n\037k_EMsgGCMatchmakingStatsRe"
  "quest\020\2358\022%\n k_EMsgGCMatchmakingStatsResp"
  "onse\020\2368\022\032\n\025k_EMsgGCBotGameCreate\020\2378\022\"\n\035k"
  "_EMsgGCSetMatchHistoryAccess\020\2408\022*\n%k_EMs"
  "gGCSetMatchHistoryAccessResponse\020\2418\022\034\n\027k"
  "_EMsgUpgradeLeagueItem\020\2438\022$\n\037k_EMsgUpgra"
  "deLeagueItemResponse\020\2448\022%\n k_EMsgGCTeamM"
  "emberProfileRequest\020\2458\022\"\n\035k_EMsgGCWatchD"
  "ownloadedReplay\020\2468\022 \n\033k_EMsgGCSetMapLoca"
  "tionState\020\2478\022(\n#k_EMsgGCSetMapLocationSt"
  "ateResponse\020\2508\022\036\n\031k_EMsgGCResetMapLocati"
  "ons\020\2518\022&\n!k_EMsgGCResetMapLocationsRespo"
  "nse\020\2528\022$\n\037k_EMsgRefreshPartnerAccountLin"
  "k\020\2608\022$\n\037k_EMsgClientsRejoinChatChannels\020"
  "\2618\022 \n\033k_EMsgGCToGCGetUserChatInfo\020\2628\022(\n#"
  "k_EMsgGCToGCGetUserChatInfoResponse\020\2638\022%"
  "\n k_EMsgGCToGCLeaveAllChatChannels\020\2648\022%\n"
  " k_EMsgGCToGCUpdateAccountChatBan\020\2658\022\037\n\032"
  "k_EMsgGCGuildCreateRequest\020\2668\022 \n\033k_EMsgG"
  "CGuildCreateResponse\020\2678\022\'\n\"k_EMsgGCGuild"
  "SetAccountRoleRequest\020\2708\022(\n#k_EMsgGCGuil"
  "dSetAccountRoleResponse\020\2718\022\035\n\030k_EMsgGCRe"
  "questGuildData\020\2728\022\026\n\021k_EMsgGCGuildData\020\273"
  "8\022&\n!k_EMsgGCGuildInviteAccountRequest\020\274"
  "8\022\'\n\"k_EMsgGCGuildInviteAccountResponse\020"
  "\2758\022%\n k_EMsgGCGuildCancelInviteRequest\020\276"
  "8\022&\n!k_EMsgGCGuildCancelInviteResponse\020\277"
  "8\022&\n!k_EMsgGCGuildUpdateDetailsRequest\020\300"
  "8\022\'\n\"k_EMsgGCGuildUpdateDetailsResponse\020"
  "\3018\022$\n\037k_EMsgGCToGCCanInviteUserToTeam\020\3028"
  "\022,\n\'k_EMsgGCToGCCanInviteUserToTeamRespo"
  "nse\020\3038\022\034\n\027k_EMsgGCToGCGetUserRank\020\3048\022$\n\037"
  "k_EMsgGCToGCGetUserRankResponse\020\3058\022 \n\033k_"
  "EMsgGCToGCUpdateTeamStats\020\3108\022\034\n\027k_EMsgGC"
  "ToGCGetTeamRank\020\3118\022$\n\037k_EMsgGCToGCGetTea"
  "mRankResponse\020\3128\022 \n\033k_EMsgGCPassportData"
  "Request\020\3208\022!\n\034k_EMsgGCPassportDataRespon"
  "se\020\3218\022\033\n\026k_EMsgGCNotInGuildData\020\3238\022\034\n\027k_"
  "EMsgGCGuildInviteData\020\3268\022\037\n\032k_EMsgGCToGC"
  "GetLeagueAdmin\020\3278\022\'\n\"k_EMsgGCToGCGetLeag"
  "ueAdminResponse\020\3308\022#\n\036k_EMsgGCRequestLea"
  "guePrizePool\020\3328\022+\n&k_EMsgGCRequestLeague"
  "PrizePoolResponse\020\3338\022,\n\'k_EMsgGCToGCUpda"
  "teOpenGuildPartyRequest\020\3358\022-\n(k_EMsgGCTo"
  "GCUpdateOpenGuildPartyResponse\020\3368\022-\n(k_E"
  "MsgGCToGCDestroyOpenGuildPartyRequest\020\3378"
  "\022.\n)k_EMsgGCToGCDestroyOpenGuildPartyRes"
  "ponse\020\3408\022\037\n\032k_EMsgGCGuildUpdateMessage\020\341"
  "8\022%\n k_EMsgGCPartySetOpenGuildRequest\020\3428"
  "\022&\n!k_EMsgGCPartySetOpenGuildResponse\020\3438"
  "\022\"\n\035k_EMsgGCGuildOpenPartyRefresh\020\3448\022&\n!"
  "k_EMsgGCJoinOpenGuildPartyRequest\020\3458\022\'\n\""
  "k_EMsgGCJoinOpenGuildPartyResponse\020\3468\022\035\n"
  "\030k_EMsgGCLeaveChatChannel\020\3508\022\030\n\023k_EMsgGC"
  "ChatMessage\020\3518\022\035\n\030k_EMsgGCGetHeroStandin"
  "gs\020\3528\022%\n k_EMsgGCGetHeroStandingsRespons"
  "e\020\3538\022!\n\034k_EMsgGCGuildEditLogoRequest\020\3578\022"
  "\"\n\035k_EMsgGCGuildEditLogoResponse\020\3608\022.\n)k"
  "_EMsgGCGuildmatePracticeLobbyListRequest"
  "\020\3618\022/\n*k_EMsgGCGuildmatePracticeLobbyLis"
  "tResponse\020\3628\022*\n%k_EMsgGCItemEditorReserv"
  "ationsRequest\020\3638\022+\n&k_EMsgGCItemEditorRe"
  "servationsResponse\020\3648\022%\n k_EMsgGCItemEdi"
  "torReserveItemDef\020\3658\022-\n(k_EMsgGCItemEdit"
  "orReserveItemDefResponse\020\3668\022)\n$k_EMsgGCI"
  "temEditorReleaseReservation\020\3678\0221\n,k_EMsg"
  "GCItemEditorReleaseReservationResponse\020\370"
  "8\022!\n\034k_EMsgGCRewardTutorialPrizes\020\3718\022*\n%"
  "k_EMsgGCLastHitChallengeHighScorePost\020\3728"
  "\022-\n(k_EMsgGCLastHitChallengeHighScoreReq"
  "uest\020\3738\022.\n)k_EMsgGCLastHitChallengeHighS"
  "coreResponse\020\3748\022\'\n\"k_EMsgGCCreateFantasy"
  "LeagueRequest\020\3758\022(\n#k_EMsgGCCreateFantas"
  "yLeagueResponse\020\3768\022%\n k_EMsgGCFantasyLea"
  "gueInfoRequest\020\2019\022&\n!k_EMsgGCFantasyLeag"
  "ueInfoResponse\020\2029\022\036\n\031k_EMsgGCFantasyLeag"
  "ueInfo\020\2039\022%\n k_EMsgGCCreateFantasyTeamRe"
  "quest\020\2049\022&\n!k_EMsgGCCreateFantasyTeamRes"
  "ponse\020\2059\022#\n\036k_EMsgGCEditFantasyTeamReque"
  "st\020\2069\022$\n\037k_EMsgGCEditFantasyTeamResponse"
  "\020\2079\0224\n/k_EMsgGCFantasyTeamInfoRequestByF"
  "antasyLeagueID\020\2109\0223\n.k_EMsgGCFantasyTeam"
  "InfoRequestByOwnerAccountID\020\2119\022$\n\037k_EMsg"
  "GCFantasyTeamInfoResponse\020\2129\022\034\n\027k_EMsgGC"
  "FantasyTeamInfo\020\2139\022#\n\036k_EMsgGCFantasyLiv"
  "ePlayerStats\020\2149\022$\n\037k_EMsgGCFantasyFinalP"
  "layerStats\020\2159\022\031\n\024k_EMsgGCFantasyMatch\020\2169"
  "\022$\n\037k_EMsgGCFantasyTeamScoreRequest\020\2209\022%"
  "\n k_EMsgGCFantasyTeamScoreResponse\020\2219\022(\n"
  "#k_EMsgGCFantasyTeamStandingsRequest\020\2229\022"
  ")\n$k_EMsgGCFantasyTeamStandingsResponse\020"
  "\2239\022&\n!k_EMsgGCFantasyPlayerScoreRequest\020"
  "\2249\022\'\n\"k_EMsgGCFantasyPlayerScoreResponse"
  "\020\2259\022*\n%k_EMsgGCFantasyPlayerStandingsReq"
  "uest\020\2269\022+\n&k_EMsgGCFantasyPlayerStanding"
  "sResponse\020\2279\022\033\n\026k_EMsgGCFlipLobbyTeams\020\230"
  "9\022\035\n\030k_EMsgGCCustomGameCreate\020\2319\022-\n(k_EM"
  "sgGCToGCProcessPlayerReportForTarget\020\2349\022"
  "%\n k_EMsgGCToGCProcessReportSuccess\020\2359\022%"
  "\n k_EMsgGCNotifyAccountFlagsChange\020\2369\022\036\n"
  "\031k_EMsgGCSetProfilePrivacy\020\2379\022&\n!k_EMsgG"
  "CSetProfilePrivacyResponse\020\2409\022+\n&k_EMsgG"
  "CFantasyLeagueCreateInfoRequest\020\2439\022,\n\'k_"
  "EMsgGCFantasyLeagueCreateInfoResponse\020\2449"
  "\022+\n&k_EMsgGCFantasyLeagueInviteInfoReque"
  "st\020\2459\022,\n\'k_EMsgGCFantasyLeagueInviteInfo"
  "Response\020\2469\022\036\n\031k_EMsgGCClientIgnoredUser"
  "\020\2479\022\'\n\"k_EMsgGCFantasyLeagueCreateReques"
  "t\020\2509\022(\n#k_EMsgGCFantasyLeagueCreateRespo"
  "nse\020\2519\022%\n k_EMsgGCFantasyTeamCreateReque"
  "st\020\2529\022&\n!k_EMsgGCFantasyTeamCreateRespon"
  "se\020\2539\022/\n*k_EMsgGCFantasyLeagueFriendJoin"
  "ListRequest\020\2549\0220\n+k_EMsgGCFantasyLeagueF"
  "riendJoinListResponse\020\2559\022\034\n\027k_EMsgGCClie"
  "ntSuspended\020\2569\022 \n\033k_EMsgGCPartyMemberSet"
  "Coach\020\2579\022,\n\'k_EMsgGCFantasyLeagueEditInv"
  "itesRequest\020\2609\022-\n(k_EMsgGCFantasyLeagueE"
  "ditInvitesResponse\020\2619\022\"\n\035k_EMsgGCPractic"
  "eLobbySetCoach\020\2629\022)\n$k_EMsgGCFantasyLeag"
  "ueEditInfoRequest\020\2639\022*\n%k_EMsgGCFantasyL"
  "eagueEditInfoResponse\020\2649\022,\n\'k_EMsgGCFant"
  "asyLeagueDraftStatusRequest\020\2659\022%\n k_EMsg"
  "GCFantasyLeagueDraftStatus\020\2669\022,\n\'k_EMsgG"
  "CFantasyLeagueDraftPlayerRequest\020\2679\022-\n(k"
  "_EMsgGCFantasyLeagueDraftPlayerResponse\020"
  "\2709\022)\n$k_EMsgGCFantasyLeagueMatchupsReque"
  "st\020\2719\022*\n%k_EMsgGCFantasyLeagueMatchupsRe"
  "sponse\020\2729\022)\n$k_EMsgGCFantasyTeamRosterSw"
  "apRequest\020\2739\022*\n%k_EMsgGCFantasyTeamRoste"
  "rSwapResponse\020\2749\022%\n k_EMsgGCFantasyTeamR"
  "osterRequest\020\2759\022&\n!k_EMsgGCFantasyTeamRo"
  "sterResponse\020\2769\022,\n\'k_EMsgGCFantasyTeamRo"
  "sterAddDropRequest\020\3019\022-\n(k_EMsgGCFantasy"
  "TeamRosterAddDropResponse\020\3029\022&\n!k_EMsgPr"
  "esentedClientTerminateDlg\020\3039\022/\n*k_EMsgGC"
  "FantasyPlayerHisoricalStatsRequest\020\3049\0220\n"
  "+k_EMsgGCFantasyPlayerHisoricalStatsResp"
  "onse\020\3059\022%\n k_EMsgGCPCBangTimedRewardMess"
  "age\020\3069\022,\n\'k_EMsgGCLobbyUpdateBroadcastCh"
  "annelInfo\020\3079\022%\n k_EMsgGCFantasyTeamTrade"
  "sRequest\020\3109\022&\n!k_EMsgGCFantasyTeamTrades"
  "Response\020\3119\022*\n%k_EMsgGCFantasyTeamTradeC"
  "ancelRequest\020\3129\022+\n&k_EMsgGCFantasyTeamTr"
  "adeCancelResponse\020\3139\022$\n\037k_EMsgGCToGCGran"
  "tTournamentItem\020\3149\022)\n$k_EMsgGCProcessFan"
  "tasyScheduledEvent\020\3159\022)\n$k_EMsgGCToGCUpg"
  "radeTwitchViewerItems\020\3179\022\'\n\"k_EMsgGCToGC"
  "GetLiveMatchAffiliates\020\3209\022/\n*k_EMsgGCToG"
  "CGetLiveMatchAffiliatesResponse\020\3219\022*\n%k_"
  "EMsgGCToGCUpdatePlayerPennantCounts\020\3229\022\'"
  "\n\"k_EMsgGCToGCGetPlayerPennantCounts\020\3239\022"
  "/\n*k_EMsgGCToGCGetPlayerPennantCountsRes"
  "ponse\020\3249\022.\n)k_EMsgGCGameMatchSignOutPerm"
  "issionRequest\020\3259\022/\n*k_EMsgGCGameMatchSig"
  "nOutPermissionResponse\020\3269\022&\n!k_EMsgDOTAC"
  "hatChannelMemberUpdate\020\3279\022\037\n\032k_EMsgDOTAA"
  "wardEventPoints\020\3309\022\035\n\030k_EMsgDOTAGetEvent"
  "Points\020\3339\022%\n k_EMsgDOTAGetEventPointsRes"
  "ponse\020\3349\022(\n#k_EMsgGCToGCSignoutAwardEven"
  "tPoints\020\3369\022!\n\034k_EMsgDOTASendFriendRecrui"
  "ts\020\3419\022$\n\037k_EMsgDOTAFriendRecruitsRequest"
  "\020\3429\022%\n k_EMsgDOTAFriendRecruitsResponse\020"
  "\3439\022/\n*k_EMsgDOTAFriendRecruitInviteAccep"
  "tDecline\020\3449\022\'\n\"k_EMsgGCPartyLeaderWatchG"
  "amePrompt\020\3459\022#\n\036k_EMsgDOTAFrostivusTimeE"
  "lapsed\020\3469\022#\n\036k_EMsgDOTALiveLeagueGameUpd"
  "ate\020\3529\022\036\n\031k_EMsgDOTAChatGetUserList\020\3539\022&"
  "\n!k_EMsgDOTAChatGetUserListResponse\020\3549\022#"
  "\n\036k_EMsgGCCompendiumSetSelection\020\3559\022\"\n\035k"
  "_EMsgGCCompendiumDataRequest\020\3569\022#\n\036k_EMs"
  "gGCCompendiumDataResponse\020\3579\022$\n\037k_EMsgDO"
  "TAGetPlayerMatchHistory\020\3609\022,\n\'k_EMsgDOTA"
  "GetPlayerMatchHistoryResponse\020\3619\022$\n\037k_EM"
  "sgGCToGCMatchmakingAddParty\020\3629\022\'\n\"k_EMsg"
  "GCToGCMatchmakingRemoveParty\020\3639\022,\n\'k_EMs"
  "gGCToGCMatchmakingRemoveAllParties\020\3649\022&\n"
  "!k_EMsgGCToGCMatchmakingMatchFound\020\3659\022+\n"
  "&k_EMsgGCToGCUpdateMatchManagementStats\020"
  "\3669\022\'\n\"k_EMsgGCToGCUpdateMatchmakingStats"
  "\020\3679\022 \n\033k_EMsgGCToServerPingRequest\020\3709\022!\n"
  "\034k_EMsgGCToServerPingResponse\020\3719\022#\n\036k_EM"
  "sgGCToServerConsoleCommand\020\3729\022\031\n\024k_EMsgG"
  "CMakeOffering\020\3779\022\035\n\030k_EMsgGCRequestOffer"
  "ings\020\200:\022%\n k_EMsgGCRequestOfferingsRespo"
  "nse\020\201:\022#\n\036k_EMsgGCToGCProcessMatchLeaver"
  "\020\202:\022!\n\034k_EMsgGCNotificationsRequest\020\203:\022\""
  "\n\035k_EMsgGCNotificationsResponse\020\204:\022#\n\036k_"
  "EMsgGCToGCModifyNotification\020\205:\022$\n\037k_EMs"
  "gGCToGCSetNewNotifications\020\206:\022\034\n\027k_EMsgG"
  "CLeagueAdminList\020\212:\022)\n$k_EMsgGCNotificat"
  "ionsMarkReadRequest\020\213:\022\036\n\031k_EMsgGCFantas"
  "yMessageAdd\020\214:\022#\n\036k_EMsgGCFantasyMessage"
  "sRequest\020\215:\022$\n\037k_EMsgGCFantasyMessagesRe"
  "sponse\020\216:\022+\n&k_EMsgGCFantasyScheduledMat"
  "chesRequest\020\217:\022,\n\'k_EMsgGCFantasySchedul"
  "edMatchesResponse\020\220:\022\034\n\027k_EMsgGCEventGam"
  "eCreate\020\223:\022*\n%k_EMsgGCPerfectWorldUserLo"
  "okupRequest\020\224:\022+\n&k_EMsgGCPerfectWorldUs"
  "erLookupResponse\020\225:\022\037\n\032k_EMsgGCFantasyRe"
  "moveOwner\020\230:\022\'\n\"k_EMsgGCFantasyRemoveOwn"
  "erResponse\020\231:\022(\n#k_EMsgGCRequestBatchPla"
  "yerResources\020\232:\0220\n+k_EMsgGCRequestBatchP"
  "layerResourcesResponse\020\233:\022\"\n\035k_EMsgGCToG"
  "CSendUpdateLeagues\020\234:\022+\n&k_EMsgGCCompend"
  "iumSetSelectionResponse\020\235:\022\036\n\031k_EMsgGCPl"
  "ayerInfoRequest\020\236:\022\027\n\022k_EMsgGCPlayerInfo"
  "\020\237:\022\035\n\030k_EMsgGCPlayerInfoSubmit\020\240:\022%\n k_"
  "EMsgGCPlayerInfoSubmitResponse\020\241:\022 \n\033k_E"
  "MsgGCToGCGetAccountLevel\020\242:\022(\n#k_EMsgGCT"
  "oGCGetAccountLevelResponse\020\243:\022\"\n\035k_EMsgG"
  "CToGCGetAccountPartner\020\244:\022*\n%k_EMsgGCToG"
  "CGetAccountPartnerResponse\020\245:\022(\n#k_EMsgD"
  "OTAGetWeekendTourneySchedule\020\250:\022%\n k_EMs"
  "gDOTAWeekendTourneySchedule\020\251:\022+\n&k_EMsg"
  "GCJoinableCustomGameModesRequest\020\252:\022,\n\'k"
  "_EMsgGCJoinableCustomGameModesResponse\020\253"
  ":\022)\n$k_EMsgGCJoinableCustomLobbiesReques"
  "t\020\254:\022*\n%k_EMsgGCJoinableCustomLobbiesRes"
  "ponse\020\255:\022!\n\034k_EMsgGCQuickJoinCustomLobby"
  "\020\256:\022)\n$k_EMsgGCQuickJoinCustomLobbyRespo"
  "nse\020\257:\022&\n!k_EMsgGCToGCGrantEventPointAct"
  "ion\020\260:\022\037\n\032k_EMsgServerGetEventPoints\020\261:\022"
  "\'\n\"k_EMsgServerGetEventPointsResponse\020\262:"
  "\022&\n!k_EMsgServerGrantSurveyPermission\020\263:"
  "\022.\n)k_EMsgServerGrantSurveyPermissionRes"
  "ponse\020\264:\022$\n\037k_EMsgClientProvideSurveyRes"
  "ult\020\265:\022\'\n\"k_EMsgGCToGCSetCompendiumSelec"
  "tion\020\266:\022#\n\036k_EMsgGCToGCUpdateTI4HeroQues"
  "t\020\270:\022\"\n\035k_EMsgGCCompendiumDataChanged\020\271:"
  "\022\'\n\"k_EMsgDOTAFantasyLeagueFindRequest\020\272"
  ":\022(\n#k_EMsgDOTAFantasyLeagueFindResponse"
  "\020\273:\022\031\n\024k_EMsgGCHasItemQuery\020\274:\022\034\n\027k_EMsg"
  "GCHasItemResponse\020\275:\022!\n\034k_EMsgGCConsumeF"
  "antasyTicket\020\276:\022(\n#k_EMsgGCConsumeFantas"
  "yTicketFailure\020\277:\022)\n$k_EMsgGCToGCGrantEv"
  "entPointActionMsg\020\300:\022&\n!k_EMsgClientToGC"
  "TrackDialogResult\020\301:\022&\n!k_EMsgGCFantasyL"
  "eaveLeagueRequest\020\302:\022\'\n\"k_EMsgGCFantasyL"
  "eaveLeagueResponse\020\303:\022(\n#k_EMsgGCToGCGet"
  "CompendiumSelections\020\304:\0220\n+k_EMsgGCToGCG"
  "etCompendiumSelectionsResponse\020\305:\022)\n$k_E"
  "MsgServerToGCMatchConnectionStats\020\306:\022\'\n\""
  "k_EMsgGCToClientTournamentItemDrop\020\307:\022$\n"
  "\037k_EMsgSQLDelayedGrantLeagueDrop\020\310:\022\'\n\"k"
  "_EMsgServerGCUpdateSpectatorCount\020\311:\022-\n("
  "k_EMsgGCFantasyPlayerScoreDetailsRequest"
  "\020\313:\022.\n)k_EMsgGCFantasyPlayerScoreDetails"
  "Response\020\314:\022\037\n\032k_EMsgGCToGCEmoticonUnloc"
  "k\020\315:\022\033\n\026k_EMsgSignOutDraftInfo\020\316:\022(\n#k_E"
  "MsgClientToGCEmoticonDataRequest\020\317:\022!\n\034k"
  "_EMsgGCToClientEmoticonData\020\320:\022\?\n:k_EMsg"
  "GCPracticeLobbyToggleBroadcastChannelCam"
  "eramanStatus\020\321:\022,\n\'k_EMsgGCToGCCreateWee"
  "kendTourneyRequest\020\322:\022-\n(k_EMsgGCToGCCre"
  "ateWeekendTourneyResponse\020\323:\022(\n#k_EMsgCl"
  "ientToGCSetAdditionalEquips\020\331:\022(\n#k_EMsg"
  "ClientToGCGetAdditionalEquips\020\332:\0220\n+k_EM"
  "sgClientToGCGetAdditionalEquipsResponse\020"
  "\333:\022(\n#k_EMsgServerToGCGetAdditionalEquip"
  "s\020\334:\0220\n+k_EMsgServerToGCGetAdditionalEqu"
  "ipsResponse\020\335:\022\031\n\024k_EMsgDOTARedeemItem\020\336"
  ":\022!\n\034k_EMsgDOTARedeemItemResponse\020\337:\022(\n#"
  "k_EMsgSQLGCToGCGrantAllHeroProgress\020\340:\022\'"
  "\n\"k_EMsgClientToGCGetAllHeroProgress\020\341:\022"
  "/\n*k_EMsgClientToGCGetAllHeroProgressRes"
  "ponse\020\342:\022#\n\036k_EMsgGCToGCGetServerForClie"
  "nt\020\343:\022+\n&k_EMsgGCToGCGetServerForClientR"
  "esponse\020\344:\022*\n%k_EMsgSQLProcessTournament"
  "GameOutcome\020\345:\022\"\n\035k_EMsgSQLGrantTrophyTo"
  "Account\020\346:\022\"\n\035k_EMsgClientToGCGetTrophyL"
  "ist\020\347:\022*\n%k_EMsgClientToGCGetTrophyListR"
  "esponse\020\350:\022\"\n\035k_EMsgGCToClientTrophyAwar"
  "ded\020\351:\022 \n\033k_EMsgGCGameBotMatchSignOut\020\352:"
  "\0221\n,k_EMsgGCGameBotMatchSignOutPermissio"
  "nRequest\020\353:\022\031\n\024k_EMsgSignOutBotInfo\020\354:\022#"
  "\n\036k_EMsgGCToGCUpdateProfileCards\020\355:\022#\n\036k"
  "_EMsgClientToGCGetProfileCard\020\356:\022+\n&k_EM"
  "sgClientToGCGetProfileCardResponse\020\357:\022#\n"
  "\036k_EMsgServerToGCGetProfileCard\020\360:\022+\n&k_"
  "EMsgServerToGCGetProfileCardResponse\020\361:\022"
  "(\n#k_EMsgClientToGCSetProfileCardSlots\020\362"
  ":\022\'\n\"k_EMsgGCToClientProfileCardUpdated\020"
  "\363:\022\'\n\"k_EMsgServerToGCVictoryPredictions"
  "\020\364:\022-\n(k_EMsgClientToGCMarkNotificationL"
  "istRead\020\366:\022)\n$k_EMsgGCToClientNewNotific"
  "ationAdded\020\367:\022\'\n\"k_EMsgServerToGCSuspici"
  "ousActivity\020\370:\022&\n!k_EMsgSignOutCommunica"
  "tionSummary\020\371:\022+\n&k_EMsgServerToGCReques"
  "tStatus_Response\020\372:\022%\n k_EMsgClientToGCC"
  "reateHeroStatue\020\373:\022+\n&k_EMsgGCToClientHe"
  "roStatueCreateResult\020\374:\022&\n!k_EMsgGCGCToL"
  "ANServerRelayConnect\020\375:\022\'\n\"k_EMsgServerT"
  "oGCGetIngameEventData\020\377:\022/\n*k_EMsgGCToGC"
  "UpdateIngameEventDataBroadcast\020\200;\022-\n(k_E"
  "MsgGCToServerIngameEventData_OraclePA\020\201;"
  "\022(\n#k_EMsgServerToGCReportKillSummaries\020"
  "\202;\022$\n\037k_EMsgGCToGCReportKillSummaries\020\203;"
  "\022\'\n\"k_EMsgGCToGCUpdateAssassinMinigame\020\204"
  ";\022&\n!k_EMsgGCToGCFantasySetMatchLeague\020\205"
  ";\022(\n#k_EMsgGCToGCUpdatePlayerPredictions"
  "\020\211;\022%\n k_EMsgGCToServerPredictionResult\020"
  "\212;\0220\n+k_EMsgServerToGCSignoutAwardAdditi"
  "onalDrops\020\213;\022,\n\'k_EMsgGCToGCSignoutAward"
  "AdditionalDrops\020\214;\022\'\n\"k_EMsgGCToClientEv"
  "entStatusChanged\020\215;\022\035\n\030k_EMsgGCHasItemDe"
  "fsQuery\020\216;\022 \n\033k_EMsgGCHasItemDefsRespons"
  "e\020\217;\022,\n\'k_EMsgGCToGCReplayMonitorValidat"
  "eReplay\020\221;\022\033\n\026k_EMsgLobbyEventPoints\020\224;\022"
  "%\n k_EMsgGCToGCGetCustomGameTickets\020\225;\022-"
  "\n(k_EMsgGCToGCGetCustomGameTicketsRespon"
  "se\020\226;\022!\n\034k_EMsgGCToGCCustomGamePlayed\020\230;"
  "\022\'\n\"k_EMsgGCToGCGrantEventPointsToUser\020\231"
  ";\022)\n$k_EMsgGCToGCSetEventMMPanicFlushTim"
  "e\020\232;\022 \n\033k_EMsgGameserverCrashReport\020\233;\022("
  "\n#k_EMsgGameserverCrashReportResponse\020\234;"
  "\022(\n#k_EMsgGCToClientSteamDatagramTicket\020"
  "\235;\022$\n\037k_EMsgGCToGCGrantEventOwnership\020\236;"
  "\022(\n#k_EMsgGCToGCSendAccountsEventPoints\020"
  "\237;\022*\n%k_EMsgClientToGCRerollPlayerChalle"
  "nge\020\240;\022*\n%k_EMsgServerToGCRerollPlayerCh"
  "allenge\020\241;\022*\n%k_EMsgGCRerollPlayerChalle"
  "ngeResponse\020\242;\022\'\n\"k_EMsgSignOutUpdatePla"
  "yerChallenge\020\243;\022#\n\036k_EMsgClientToGCSetPa"
  "rtyLeader\020\244;\022\'\n\"k_EMsgClientToGCCancelPa"
  "rtyInvites\020\245;\022$\n\037k_EMsgGCToGCMasterReloa"
  "dAccount\020\246;\022-\n(k_EMsgSQLGrantLeagueMatch"
  "ToTicketHolders\020\250;\0220\n+k_EMsgClientToGCSe"
  "tAdditionalEquipsResponse\020\251;\022)\n$k_EMsgGC"
  "ToGCEmoticonUnlockNoRollback\020\252;\022%\n k_EMs"
  "gGCToGCGetCompendiumFanfare\020\253;\022$\n\037k_EMsg"
  "ServerToGCHoldEventPoints\020\254;\022(\n#k_EMsgSi"
  "gnOutReleaseEventPointHolds\020\255;\022#\n\036k_EMsg"
  "GCToGCChatNewUserSession\020\256;\022%\n k_EMsgCli"
  "entToGCApplyGemCombiner\020\263;\022+\n&k_EMsgClie"
  "ntToGCDOTACreateStaticRecipe\020\264;\0223\n.k_EMs"
  "gClientToGCDOTACreateStaticRecipeRespons"
  "e\020\265;\022$\n\037k_EMsgClientToGCGetAllHeroOrder\020"
  "\266;\022,\n\'k_EMsgClientToGCGetAllHeroOrderRes"
  "ponse\020\267;\022$\n\037k_EMsgSQLGCToGCGrantBadgePoi"
  "nts\020\270;\022&\n!k_EMsgGCToGCGetAccountMatchSta"
  "tus\020\271;\022.\n)k_EMsgGCToGCGetAccountMatchSta"
  "tusResponse\020\272;\022-\n(k_EMsgGCToGCCheckOwnsE"
  "ntireEmoticonRange\020\273;\0225\n0k_EMsgGCToGCChe"
  "ckOwnsEntireEmoticonRangeResponse\020\274;\022%\n "
  "k_EMsgClientToGCRecycleHeroRelic\020\303;\022-\n(k"
  "_EMsgClientToGCRecycleHeroRelicResponse\020"
  "\304;\022%\n k_EMsgGCToGCRevokeEventOwnership\020\305"
  ";\022)\n$k_EMsgGCToGCUnlockEventPointSpendin"
  "g\020\306;\022)\n$k_EMsgGCToClientRequestLaneSelec"
  "tion\020\307;\0221\n,k_EMsgGCToClientRequestLaneSe"
  "lectionResponse\020\310;\022,\n\'k_EMsgServerToGCCa"
  "vernCrawlIsHeroActive\020\311;\0224\n/k_EMsgServer"
  "ToGCCavernCrawlIsHeroActiveResponse\020\312;\0226"
  "\n1k_EMsgClientToGCPlayerCardSpecificPurc"
  "haseRequest\020\313;\0227\n2k_EMsgClientToGCPlayer"
  "CardSpecificPurchaseResponse\020\314;\022\'\n\"k_EMs"
  "gGCtoServerTensorflowInstance\020\315;\022\036\n\031k_EM"
  "sgSQLSetIsLeagueAdmin\020\316;\022%\n k_EMsgGCToGC"
  "GetLiveLeagueMatches\020\317;\022-\n(k_EMsgGCToGCG"
  "etLiveLeagueMatchesResponse\020\320;\022*\n%k_EMsg"
  "DOTALeagueInfoListAdminsRequest\020\321;\022*\n%k_"
  "EMsgDOTALeagueInfoListAdminsReponse\020\322;\022#"
  "\n\036k_EMsgGCToGCLeagueMatchStarted\020\335;\022%\n k"
  "_EMsgGCToGCLeagueMatchCompleted\020\336;\022+\n&k_"
  "EMsgGCToGCLeagueMatchStartedResponse\020\337;\022"
  " \n\033k_EMsgDOTALeagueNodeRequest\020\340;\022!\n\034k_E"
  "MsgDOTALeagueNodeResponse\020\341;\022/\n*k_EMsgDO"
  "TALeagueAvailableLobbyNodesRequest\020\342;\022(\n"
  "#k_EMsgDOTALeagueAvailableLobbyNodes\020\343;\022"
  "\036\n\031k_EMsgGCToGCLeagueRequest\020\344;\022\037\n\032k_EMs"
  "gGCToGCLeagueResponse\020\345;\022\'\n\"k_EMsgGCToGC"
  "LeagueNodeGroupRequest\020\346;\022(\n#k_EMsgGCToG"
  "CLeagueNodeGroupResponse\020\347;\022\"\n\035k_EMsgGCT"
  "oGCLeagueNodeRequest\020\350;\022#\n\036k_EMsgGCToGCL"
  "eagueNodeResponse\020\351;\022*\n%k_EMsgGCToGCReal"
  "timeStatsTerseRequest\020\352;\022+\n&k_EMsgGCToGC"
  "RealtimeStatsTerseResponse\020\353;\022%\n k_EMsgG"
  "CToGCGetTopMatchesRequest\020\354;\022&\n!k_EMsgGC"
  "ToGCGetTopMatchesResponse\020\355;\022\035\n\030k_EMsgGC"
  "Dev_GrantWarKill\020\301>\022%\n k_EMsgServerToGCL"
  "ockCharmTrading\020\304>\022\'\n\"k_EMsgClientToGCPl"
  "ayerStatsRequest\020\306>\022(\n#k_EMsgGCToClientP"
  "layerStatsResponse\020\307>\022#\n\036k_EMsgGCClearPr"
  "acticeLobbyTeam\020\310>\022)\n$k_EMsgClientToGCFi"
  "ndTopSourceTVGames\020\311>\0221\n,k_EMsgGCToClien"
  "tFindTopSourceTVGamesResponse\020\312>\022\026\n\021k_EM"
  "sgGCLobbyList\020\313>\022\036\n\031k_EMsgGCLobbyListRes"
  "ponse\020\314>\022$\n\037k_EMsgGCPlayerStatsMatchSign"
  "Out\020\315>\0221\n,k_EMsgClientToGCCustomGamePlay"
  "erCountRequest\020\316>\0222\n-k_EMsgGCToClientCus"
  "tomGamePlayerCountResponse\020\317>\0221\n,k_EMsgC"
  "lientToGCSocialFeedPostCommentRequest\020\320>"
  "\0222\n-k_EMsgGCToClientSocialFeedPostCommen"
  "tResponse\020\321>\0224\n/k_EMsgClientToGCCustomGa"
  "mesFriendsPlayedRequest\020\322>\0225\n0k_EMsgGCTo"
  "ClientCustomGamesFriendsPlayedResponse\020\323"
  ">\0223\n.k_EMsgClientToGCFriendsPlayedCustom"
  "GameRequest\020\324>\0224\n/k_EMsgGCToClientFriend"
  "sPlayedCustomGameResponse\020\325>\022\037\n\032k_EMsgGC"
  "TopCustomGamesList\020\330>\0222\n-k_EMsgClientToG"
  "CSocialMatchPostCommentRequest\020\331>\0223\n.k_E"
  "MsgGCToClientSocialMatchPostCommentRespo"
  "nse\020\332>\022.\n)k_EMsgClientToGCSocialMatchDet"
  "ailsRequest\020\333>\022/\n*k_EMsgGCToClientSocial"
  "MatchDetailsResponse\020\334>\022!\n\034k_EMsgClientT"
  "oGCSetPartyOpen\020\335>\022%\n k_EMsgClientToGCMe"
  "rgePartyInvite\020\336>\022*\n%k_EMsgGCToClientMer"
  "geGroupInviteReply\020\337>\022\'\n\"k_EMsgClientToG"
  "CMergePartyResponse\020\340>\022,\n\'k_EMsgGCToClie"
  "ntMergePartyResponseReply\020\341>\022(\n#k_EMsgCl"
  "ientToGCGetProfileCardStats\020\342>\0220\n+k_EMsg"
  "ClientToGCGetProfileCardStatsResponse\020\343>"
  "\022,\n\'k_EMsgClientToGCTopLeagueMatchesRequ"
  "est\020\344>\022,\n\'k_EMsgClientToGCTopFriendMatch"
  "esRequest\020\345>\022,\n\'k_EMsgGCToClientProfileC"
  "ardStatsUpdated\020\350>\022\"\n\035k_EMsgServerToGCRe"
  "altimeStats\020\351>\022+\n&k_EMsgGCToServerRealti"
  "meStatsStartStop\020\352>\022%\n k_EMsgGCToGCGetSe"
  "rversForClients\020\355>\022-\n(k_EMsgGCToGCGetSer"
  "versForClientsResponse\020\356>\022&\n!k_EMsgGCPra"
  "cticeLobbyKickFromTeam\020\357>\022!\n\034k_EMsgDOTAC"
  "hatGetMemberCount\020\360>\022)\n$k_EMsgDOTAChatGe"
  "tMemberCountResponse\020\361>\0221\n,k_EMsgClientT"
  "oGCSocialFeedPostMessageRequest\020\362>\0222\n-k_"
  "EMsgGCToClientSocialFeedPostMessageRespo"
  "nse\020\363>\022/\n*k_EMsgCustomGameListenServerSt"
  "artedLoading\020\364>\022*\n%k_EMsgCustomGameClien"
  "tFinishedLoading\020\365>\022/\n*k_EMsgGCPracticeL"
  "obbyCloseBroadcastChannel\020\366>\022&\n!k_EMsgGC"
  "StartFindingMatchResponse\020\367>\022$\n\037k_EMsgSQ"
  "LGCToGCGrantAccountFlag\020\371>\022 \n\033k_EMsgGCTo"
  "GCGetAccountFlags\020\372>\022(\n#k_EMsgGCToGCGetA"
  "ccountFlagsResponse\020\373>\022\034\n\027k_EMsgSignOutW"
  "agerStats\020\374>\022-\n(k_EMsgGCToClientTopLeagu"
  "eMatchesResponse\020\375>\022-\n(k_EMsgGCToClientT"
  "opFriendMatchesResponse\020\376>\022*\n%k_EMsgClie"
  "ntToGCMatchesMinimalRequest\020\377>\022+\n&k_EMsg"
  "ClientToGCMatchesMinimalResponse\020\200\?\022&\n!k"
  "_EMsgGCToGCGetProfileBadgePoints\020\201\?\022.\n)k"
  "_EMsgGCToGCGetProfileBadgePointsResponse"
  "\020\202\?\022\'\n\"k_EMsgGCToClientChatRegionsEnable"
  "d\020\203\?\022\035\n\030k_EMsgClientToGCPingData\020\204\?\022(\n#k"
  "_EMsgServerToGCMatchDetailsRequest\020\205\?\022)\n"
  "$k_EMsgGCToServerMatchDetailsResponse\020\206\?"
  "\022%\n k_EMsgGCToGCEnsureAccountInParty\020\207\?\022"
  "-\n(k_EMsgGCToGCEnsureAccountInPartyRespo"
  "nse\020\210\?\022&\n!k_EMsgClientToGCGetProfileTick"
  "ets\020\211\?\022.\n)k_EMsgClientToGCGetProfileTick"
  "etsResponse\020\212\?\022\'\n\"k_EMsgGCToClientMatchG"
  "roupsVersion\020\213\?\022$\n\037k_EMsgClientToGCH264U"
  "nsupported\020\214\?\022\'\n\"k_EMsgClientToGCRequest"
  "H264Support\020\215\?\022%\n k_EMsgClientToGCGetQue"
  "stProgress\020\216\?\022-\n(k_EMsgClientToGCGetQues"
  "tProgressResponse\020\217\?\022\031\n\024k_EMsgSignOutXPC"
  "oins\020\220\?\022#\n\036k_EMsgGCToClientMatchSignedOu"
  "t\020\221\?\022 \n\033k_EMsgGCGetHeroStatsHistory\020\222\?\022("
  "\n#k_EMsgGCGetHeroStatsHistoryResponse\020\223\?"
  "\022&\n!k_EMsgClientToGCPrivateChatInvite\020\224\?"
  "\022$\n\037k_EMsgClientToGCPrivateChatKick\020\230\?\022\'"
  "\n\"k_EMsgClientToGCPrivateChatPromote\020\231\?\022"
  "&\n!k_EMsgClientToGCPrivateChatDemote\020\232\?\022"
  "(\n#k_EMsgGCToClientPrivateChatResponse\020\233"
  "\?\022+\n&k_EMsgClientToGCPrivateChatInfoRequ"
  "est\020\234\?\022,\n\'k_EMsgGCToClientPrivateChatInf"
  "oResponse\020\235\?\0222\n-k_EMsgClientToGCLatestCo"
  "nductScorecardRequest\020\237\?\022+\n&k_EMsgClient"
  "ToGCLatestConductScorecard\020\240\?\022!\n\034k_EMsgS"
  "erverToGCPostMatchTip\020\241\?\022)\n$k_EMsgServer"
  "ToGCPostMatchTipResponse\020\242\?\022$\n\037k_EMsgCli"
  "entToGCWageringRequest\020\243\?\022%\n k_EMsgGCToC"
  "lientWageringResponse\020\244\?\022&\n!k_EMsgClient"
  "ToGCEventGoalsRequest\020\247\?\022\'\n\"k_EMsgClient"
  "ToGCEventGoalsResponse\020\250\?\022&\n!k_EMsgClien"
  "tToGCLeaguePredictions\020\252\?\022.\n)k_EMsgGCToC"
  "lientLeaguePredictionsResponse\020\253\?\022(\n#k_E"
  "MsgGCToGCLeaguePredictionsUpdate\020\254\?\022\'\n\"k"
  "_EMsgClientToGCSuspiciousActivity\020\255\?\022&\n!"
  "k_EMsgGCToGCAddUserToPostGameChat\020\256\?\022)\n$"
  "k_EMsgClientToGCHasPlayerVotedForMVP\020\257\?\022"
  "1\n,k_EMsgClientToGCHasPlayerVotedForMVPR"
  "esponse\020\260\?\022\037\n\032k_EMsgClientToGCVoteForMVP"
  "\020\261\?\022\'\n\"k_EMsgClientToGCVoteForMVPRespons"
  "e\020\262\?\022\"\n\035k_EMsgGCToGCGetEventOwnership\020\263\?"
  "\022*\n%k_EMsgGCToGCGetEventOwnershipRespons"
  "e\020\264\?\0223\n.k_EMsgGCToClientAutomatedTournam"
  "entStateChange\020\265\?\022\'\n\"k_EMsgClientToGCWee"
  "kendTourneyOpts\020\266\?\022/\n*k_EMsgClientToGCWe"
  "ekendTourneyOptsResponse\020\267\?\022(\n#k_EMsgCli"
  "entToGCWeekendTourneyLeave\020\270\?\0220\n+k_EMsgC"
  "lientToGCWeekendTourneyLeaveResponse\020\271\?\022"
  ")\n$k_EMsgClientToGCTeammateStatsRequest\020"
  "\274\?\022*\n%k_EMsgClientToGCTeammateStatsRespo"
  "nse\020\275\?\022\'\n\"k_EMsgClientToGCGetGiftPermiss"
  "ions\020\276\?\022/\n*k_EMsgClientToGCGetGiftPermis"
  "sionsResponse\020\277\?\022\"\n\035k_EMsgClientToGCVote"
  "ForArcana\020\300\?\022*\n%k_EMsgClientToGCVoteForA"
  "rcanaResponse\020\301\?\0220\n+k_EMsgClientToGCRequ"
  "estArcanaVotesRemaining\020\302\?\0228\n3k_EMsgClie"
  "ntToGCRequestArcanaVotesRemainingRespons"
  "e\020\303\?\022&\n!k_EMsgGCTransferTeamAdminRespons"
  "e\020\304\?\022\035\n\030k_EMsgGCToClientTeamInfo\020\307\?\022\036\n\031k"
  "_EMsgGCToClientTeamsInfo\020\310\?\022&\n!k_EMsgCli"
  "entToGCMyTeamInfoRequest\020\311\?\022$\n\037k_EMsgCli"
  "entToGCPublishUserStat\020\314\?\022\"\n\035k_EMsgGCToG"
  "CSignoutSpendWager\020\315\?\022\037\n\032k_EMsgGCSubmitL"
  "obbyMVPVote\020\320\?\022\'\n\"k_EMsgGCSubmitLobbyMVP"
  "VoteResponse\020\321\?\022.\n)k_EMsgClientToGCReque"
  "stLinaPlaysRemaining\020\322\?\0226\n1k_EMsgClientT"
  "oGCRequestLinaPlaysRemainingResponse\020\323\?\022"
  "*\n%k_EMsgClientToGCRequestLinaGameResult"
  "\020\324\?\0222\n-k_EMsgClientToGCRequestLinaGameRe"
  "sultResponse\020\325\?\022\'\n\"k_EMsgSignOutCommunit"
  "yGoalProgress\020\326\?\022,\n\'k_EMsgGCToClientLobb"
  "yMVPNotifyRecipient\020\327\?\022$\n\037k_EMsgGCToClie"
  "ntLobbyMVPAwarded\020\330\?\022)\n$k_EMsgGCToClient"
  "QuestProgressUpdated\020\331\?\022#\n\036k_EMsgGCToCli"
  "entWageringUpdate\020\332\?\022&\n!k_EMsgGCToClient"
  "ArcanaVotesUpdate\020\333\?\022\'\n\"k_EMsgClientToGC"
  "AddTI6TreeProgress\020\334\?\022-\n(k_EMsgClientToG"
  "CSetSpectatorLobbyDetails\020\335\?\0225\n0k_EMsgCl"
  "ientToGCSetSpectatorLobbyDetailsResponse"
  "\020\336\?\022)\n$k_EMsgClientToGCCreateSpectatorLo"
  "bby\020\337\?\0221\n,k_EMsgClientToGCCreateSpectato"
  "rLobbyResponse\020\340\?\022\'\n\"k_EMsgClientToGCSpe"
  "ctatorLobbyList\020\341\?\022/\n*k_EMsgClientToGCSp"
  "ectatorLobbyListResponse\020\342\?\022$\n\037k_EMsgSpe"
  "ctatorLobbyGameDetails\020\343\?\0226\n1k_EMsgServe"
  "rToGCCompendiumInGamePredictionResults\020\346"
  "\?\022:\n5k_EMsgServerToGCCloseCompendiumInGa"
  "mePredictionVoting\020\347\?\022\'\n\"k_EMsgClientToG"
  "COpenPlayerCardPack\020\350\?\022/\n*k_EMsgClientTo"
  "GCOpenPlayerCardPackResponse\020\351\?\0225\n0k_EMs"
  "gClientToGCSelectCompendiumInGamePredict"
  "ion\020\352\?\022=\n8k_EMsgClientToGCSelectCompendi"
  "umInGamePredictionResponse\020\353\?\0221\n,k_EMsgC"
  "lientToGCWeekendTourneyGetPlayerStats\020\354\?"
  "\0229\n4k_EMsgClientToGCWeekendTourneyGetPla"
  "yerStatsResponse\020\355\?\022&\n!k_EMsgClientToGCR"
  "ecyclePlayerCard\020\356\?\022.\n)k_EMsgClientToGCR"
  "ecyclePlayerCardResponse\020\357\?\022)\n$k_EMsgCli"
  "entToGCCreatePlayerCardPack\020\360\?\0221\n,k_EMsg"
  "ClientToGCCreatePlayerCardPackResponse\020\361"
  "\?\022/\n*k_EMsgClientToGCGetPlayerCardRoster"
  "Request\020\362\?\0220\n+k_EMsgClientToGCGetPlayerC"
  "ardRosterResponse\020\363\?\022/\n*k_EMsgClientToGC"
  "SetPlayerCardRosterRequest\020\364\?\0220\n+k_EMsgC"
  "lientToGCSetPlayerCardRosterResponse\020\365\?\022"
  "B\n=k_EMsgServerToGCCloseCompendiumInGame"
  "PredictionVotingResponse\020\367\?\022>\n9k_EMsgSer"
  "verToGCCompendiumInGamePredictionResults"
  "Response\020\371\?\022 \n\033k_EMsgLobbyBattleCupVicto"
  "ry\020\372\?\022\"\n\035k_EMsgGCGetPlayerCardItemInfo\020\373"
  "\?\022*\n%k_EMsgGCGetPlayerCardItemInfoRespon"
  "se\020\374\?\022/\n*k_EMsgClientToGCRequestSteamDat"
  "agramTicket\020\375\?\0227\n2k_EMsgClientToGCReques"
  "tSteamDatagramTicketResponse\020\376\?\022,\n\'k_EMs"
  "gGCToClientBattlePassRollupRequest\020\377\?\022-\n"
  "(k_EMsgGCToClientBattlePassRollupRespons"
  "e\020\200@\022/\n*k_EMsgClientToGCTransferSeasonal"
  "MMRRequest\020\201@\0220\n+k_EMsgClientToGCTransfe"
  "rSeasonalMMRResponse\020\202@\022+\n&k_EMsgGCToGCP"
  "ublicChatCommunicationBan\020\203@\022+\n&k_EMsgGC"
  "ToGCUpdateAccountPublicChatBan\020\204@\022!\n\034k_E"
  "MsgGCChatReportPublicSpam\020\205@\022+\n&k_EMsgCl"
  "ientToGCSetPartyBuilderOptions\020\206@\0223\n.k_E"
  "MsgClientToGCSetPartyBuilderOptionsRespo"
  "nse\020\207@\022#\n\036k_EMsgGCToClientPlaytestStatus"
  "\020\210@\022!\n\034k_EMsgClientToGCJoinPlaytest\020\211@\022)"
  "\n$k_EMsgClientToGCJoinPlaytestResponse\020\212"
  "@\022\037\n\032k_EMsgLobbyPlaytestDetails\020\213@\022\036\n\031k_"
  "EMsgDOTASetFavoriteTeam\020\214@\0220\n+k_EMsgGCTo"
  "ClientBattlePassRollupListRequest\020\215@\0221\n,"
  "k_EMsgGCToClientBattlePassRollupListResp"
  "onse\020\216@\022\027\n\022k_EMsgGCIsProQuery\020\217@\022\032\n\025k_EM"
  "sgGCIsProResponse\020\220@\022\037\n\032k_EMsgDOTAClaimE"
  "ventAction\020\221@\022\'\n\"k_EMsgDOTAClaimEventAct"
  "ionResponse\020\222@\022\"\n\035k_EMsgDOTAGetPeriodicR"
  "esource\020\223@\022*\n%k_EMsgDOTAGetPeriodicResou"
  "rceResponse\020\224@\022&\n!k_EMsgDOTAPeriodicReso"
  "urceUpdated\020\225@\022\037\n\032k_EMsgServerToGCSpendW"
  "ager\020\226@\022\'\n\"k_EMsgGCToGCSignoutSpendWager"
  "Token\020\227@\022%\n k_EMsgSubmitTriviaQuestionAn"
  "swer\020\230@\022-\n(k_EMsgSubmitTriviaQuestionAns"
  "werResponse\020\231@\022\034\n\027k_EMsgClientToGCGiveTi"
  "p\020\232@\022$\n\037k_EMsgClientToGCGiveTipResponse\020"
  "\233@\022\035\n\030k_EMsgStartTriviaSession\020\234@\022%\n k_E"
  "MsgStartTriviaSessionResponse\020\235@\022#\n\036k_EM"
  "sgAnchorPhoneNumberRequest\020\236@\022$\n\037k_EMsgA"
  "nchorPhoneNumberResponse\020\237@\022%\n k_EMsgUna"
  "nchorPhoneNumberRequest\020\240@\022&\n!k_EMsgUnan"
  "chorPhoneNumberResponse\020\241@\022$\n\037k_EMsgGCTo"
  "ClientTipNotification\020\242@\022+\n&k_EMsgClient"
  "ToGCRequestSlarkGameResult\020\243@\0223\n.k_EMsgC"
  "lientToGCRequestSlarkGameResultResponse\020"
  "\244@\022&\n!k_EMsgGCToGCSignoutSpendRankWager\020"
  "\245@\022 \n\033k_EMsgGCToGCGetFavoriteTeam\020\246@\022(\n#"
  "k_EMsgGCToGCGetFavoriteTeamResponse\020\247@\022\037"
  "\n\032k_EMsgSignOutEventGameData\020\250@\022(\n#k_EMs"
  "gGCToClientAllStarVotesRequest\020\251@\022&\n!k_E"
  "MsgGCToClientAllStarVotesReply\020\252@\022\'\n\"k_E"
  "MsgGCToClientAllStarVotesSubmit\020\254@\022,\n\'k_"
  "EMsgGCToClientAllStarVotesSubmitReply\020\255@"
  "\022&\n!k_EMsgClientToGCQuickStatsRequest\020\256@"
  "\022\'\n\"k_EMsgClientToGCQuickStatsResponse\020\257"
  "@\022,\n\'k_EMsgGCToGCSubtractEventPointsFrom"
  "User\020\260@\022)\n$k_EMsgSelectionPriorityChoice"
  "Request\020\261@\022*\n%k_EMsgSelectionPriorityCho"
  "iceResponse\020\262@\0222\n-k_EMsgGCToGCCompendium"
  "InGamePredictionResults\020\263@\022\036\n\031k_EMsgGame"
  "AutographReward\020\264@\022&\n!k_EMsgGameAutograp"
  "hRewardResponse\020\265@\022\036\n\031k_EMsgDestroyLobby"
  "Request\020\266@\022\037\n\032k_EMsgDestroyLobbyResponse"
  "\020\267@\022&\n!k_EMsgPurchaseItemWithEventPoints"
  "\020\270@\022.\n)k_EMsgPurchaseItemWithEventPoints"
  "Response\020\271@\0223\n.k_EMsgServerToGCMatchPlay"
  "erItemPurchaseHistory\020\272@\022*\n%k_EMsgGCToGC"
  "GrantPlusHeroMatchResults\020\273@\022\036\n\031k_EMsgGC"
  "GetHeroTimedStats\020\274@\022&\n!k_EMsgGCGetHeroT"
  "imedStatsResponse\020\275@\022*\n%k_EMsgLobbyPlaye"
  "rPlusSubscriptionData\020\276@\022&\n!k_EMsgServer"
  "ToGCMatchStateHistory\020\277@\022\034\n\027k_EMsgPurcha"
  "seHeroRelic\020\300@\022$\n\037k_EMsgPurchaseHeroReli"
  "cResponse\020\301@\022\"\n\035k_EMsgPurchaseHeroRandom"
  "Relic\020\302@\022*\n%k_EMsgPurchaseHeroRandomReli"
  "cResponse\020\303@\022.\n)k_EMsgClientToGCClaimEve"
  "ntActionUsingItem\020\304@\0226\n1k_EMsgClientToGC"
  "ClaimEventActionUsingItemResponse\020\305@\022!\n\034"
  "k_EMsgPartyReadyCheckRequest\020\306@\022\"\n\035k_EMs"
  "gPartyReadyCheckResponse\020\307@\022%\n k_EMsgPar"
  "tyReadyCheckAcknowledge\020\310@\022*\n%k_EMsgGetR"
  "ecentPlayTimeFriendsRequest\020\311@\022+\n&k_EMsg"
  "GetRecentPlayTimeFriendsResponse\020\312@\022(\n#k"
  "_EMsgGCToClientCommendNotification\020\313@\022\031\n"
  "\024k_EMsgProfileRequest\020\314@\022\032\n\025k_EMsgProfil"
  "eResponse\020\315@\022\030\n\023k_EMsgProfileUpdate\020\316@\022 "
  "\n\033k_EMsgProfileUpdateResponse\020\317@\022\031\n\024k_EM"
  "sgSuccessfulHero\020\321@\022 \n\033k_EMsgHeroGlobalD"
  "ataRequest\020\322@\022!\n\034k_EMsgHeroGlobalDataRes"
  "ponse\020\323@\0225\n0k_EMsgClientToGCRequestPlusW"
  "eeklyChallengeResult\020\324@\022=\n8k_EMsgClientT"
  "oGCRequestPlusWeeklyChallengeResultRespo"
  "nse\020\325@\022%\n k_EMsgGCToGCGrantPlusPrepaidTi"
  "me\020\326@\022$\n\037k_EMsgPrivateMetadataKeyRequest"
  "\020\327@\022%\n k_EMsgPrivateMetadataKeyResponse\020"
  "\330@\022$\n\037k_EMsgGCToGCReconcilePlusStatus\020\331@"
  "\022 \n\033k_EMsgGCToGCCheckPlusStatus\020\332@\022(\n#k_"
  "EMsgGCToGCCheckPlusStatusResponse\020\333@\022,\n\'"
  "k_EMsgGCToGCReconcilePlusAutoGrantItems\020"
  "\334@\022.\n)k_EMsgGCToGCReconcilePlusStatusUnr"
  "eliable\020\335@\022\'\n\"k_EMsgActivatePlusFreeTria"
  "lRequest\020\336@\022(\n#k_EMsgActivatePlusFreeTri"
  "alResponse\020\337@\0220\n+k_EMsgGCToClientCavernC"
  "rawlMapPathCompleted\020\340@\022)\n$k_EMsgClientT"
  "oGCCavernCrawlClaimRoom\020\341@\0221\n,k_EMsgClie"
  "ntToGCCavernCrawlClaimRoomResponse\020\342@\022-\n"
  "(k_EMsgClientToGCCavernCrawlUseItemOnRoo"
  "m\020\343@\0225\n0k_EMsgClientToGCCavernCrawlUseIt"
  "emOnRoomResponse\020\344@\022-\n(k_EMsgClientToGCC"
  "avernCrawlUseItemOnPath\020\345@\0225\n0k_EMsgClie"
  "ntToGCCavernCrawlUseItemOnPathResponse\020\346"
  "@\022/\n*k_EMsgClientToGCCavernCrawlRequestM"
  "apState\020\347@\0227\n2k_EMsgClientToGCCavernCraw"
  "lRequestMapStateResponse\020\350@\022\026\n\021k_EMsgSig"
  "nOutTips\020\351@\022+\n&k_EMsgClientToGCRequestEv"
  "entPointLogV2\020\352@\0223\n.k_EMsgClientToGCRequ"
  "estEventPointLogResponseV2\020\353@\022,\n\'k_EMsgC"
  "lientToGCRequestEventTipsSummary\020\354@\0224\n/k"
  "_EMsgClientToGCRequestEventTipsSummaryRe"
  "sponse\020\355@\022\"\n\035k_EMsgHeroGlobalDataAllHero"
  "es\020\356@\022&\n!k_EMsgClientToGCRequestSocialFe"
  "ed\020\357@\022.\n)k_EMsgClientToGCRequestSocialFe"
  "edResponse\020\360@\022.\n)k_EMsgClientToGCRequest"
  "SocialFeedComments\020\361@\0226\n1k_EMsgClientToG"
  "CRequestSocialFeedCommentsResponse\020\362@\022=\n"
  "8k_EMsgGCToGCSignoutAwardCappedUnderholl"
  "owEventGamePoints\020\363@\0223\n.k_EMsgClientToGC"
  "CavernCrawlGetClaimedRoomCount\020\364@\022;\n6k_E"
  "MsgClientToGCCavernCrawlGetClaimedRoomCo"
  "untResponse\020\365@\0226\n1k_EMsgGCToGCReconcileP"
  "lusAutoGrantItemsUnreliable\020\366@\022.\n)k_EMsg"
  "ServerToGCAddBroadcastTimelineEvent\020\367@\022,"
  "\n\'k_EMsgGCToServerUpdateSteamBroadcastin"
  "g\020\370@\022&\n!k_EMsgClientToGCRecordContestVot"
  "e\020\371@\022.\n)k_EMsgGCToClientRecordContestVot"
  "eResponse\020\372@\022\037\n\032k_EMsgGCToGCGrantAutogra"
  "ph\020\373@\022\'\n\"k_EMsgGCToGCGrantAutographRespo"
  "nse\020\374@\022!\n\034k_EMsgSignOutConsumableUsage\020\375"
  "@\022 \n\033k_EMsgLobbyEventGameDetails\020\376@\022(\n#k"
  "_EMsgGCToGCReconcileEventOwnership\020\205AB\005H"
  "\001\200\001\000"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_dota_5fgcmessages_5fmsgid_2eproto = {
  false, InitDefaults_dota_5fgcmessages_5fmsgid_2eproto, 
  descriptor_table_protodef_dota_5fgcmessages_5fmsgid_2eproto,
  "dota_gcmessages_msgid.proto", &assign_descriptors_table_dota_5fgcmessages_5fmsgid_2eproto, 31804,
};

void AddDescriptors_dota_5fgcmessages_5fmsgid_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_dota_5fgcmessages_5fmsgid_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_dota_5fgcmessages_5fmsgid_2eproto = []() { AddDescriptors_dota_5fgcmessages_5fmsgid_2eproto(); return true; }();
namespace proto {
namespace dota {
const ::google::protobuf::EnumDescriptor* EDOTAGCMsg_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_dota_5fgcmessages_5fmsgid_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fmsgid_2eproto[0];
}
bool EDOTAGCMsg_IsValid(int value) {
  switch (value) {
    case 7000:
    case 7001:
    case 7004:
    case 7005:
    case 7009:
    case 7010:
    case 7013:
    case 7014:
    case 7017:
    case 7026:
    case 7027:
    case 7028:
    case 7033:
    case 7034:
    case 7035:
    case 7036:
    case 7038:
    case 7040:
    case 7041:
    case 7042:
    case 7043:
    case 7044:
    case 7046:
    case 7047:
    case 7049:
    case 7055:
    case 7056:
    case 7057:
    case 7060:
    case 7061:
    case 7064:
    case 7065:
    case 7068:
    case 7069:
    case 7070:
    case 7071:
    case 7072:
    case 7073:
    case 7074:
    case 7075:
    case 7076:
    case 7077:
    case 7078:
    case 7079:
    case 7081:
    case 7082:
    case 7083:
    case 7084:
    case 7085:
    case 7086:
    case 7087:
    case 7088:
    case 7089:
    case 7090:
    case 7091:
    case 7092:
    case 7093:
    case 7094:
    case 7095:
    case 7096:
    case 7097:
    case 7102:
    case 7104:
    case 7111:
    case 7112:
    case 7113:
    case 7114:
    case 7115:
    case 7116:
    case 7121:
    case 7122:
    case 7123:
    case 7124:
    case 7125:
    case 7126:
    case 7127:
    case 7128:
    case 7129:
    case 7130:
    case 7131:
    case 7132:
    case 7133:
    case 7134:
    case 7142:
    case 7144:
    case 7149:
    case 7150:
    case 7151:
    case 7152:
    case 7153:
    case 7154:
    case 7155:
    case 7156:
    case 7157:
    case 7158:
    case 7159:
    case 7160:
    case 7161:
    case 7166:
    case 7167:
    case 7168:
    case 7169:
    case 7170:
    case 7171:
    case 7172:
    case 7173:
    case 7174:
    case 7176:
    case 7177:
    case 7178:
    case 7179:
    case 7180:
    case 7182:
    case 7183:
    case 7186:
    case 7188:
    case 7189:
    case 7190:
    case 7197:
    case 7198:
    case 7199:
    case 7200:
    case 7201:
    case 7203:
    case 7204:
    case 7205:
    case 7206:
    case 7207:
    case 7208:
    case 7209:
    case 7210:
    case 7216:
    case 7217:
    case 7218:
    case 7219:
    case 7220:
    case 7221:
    case 7222:
    case 7223:
    case 7224:
    case 7225:
    case 7226:
    case 7227:
    case 7228:
    case 7229:
    case 7230:
    case 7231:
    case 7232:
    case 7233:
    case 7234:
    case 7235:
    case 7236:
    case 7237:
    case 7240:
    case 7241:
    case 7242:
    case 7248:
    case 7249:
    case 7251:
    case 7254:
    case 7255:
    case 7256:
    case 7258:
    case 7259:
    case 7261:
    case 7262:
    case 7263:
    case 7264:
    case 7265:
    case 7266:
    case 7267:
    case 7268:
    case 7269:
    case 7270:
    case 7272:
    case 7273:
    case 7274:
    case 7275:
    case 7279:
    case 7280:
    case 7281:
    case 7282:
    case 7283:
    case 7284:
    case 7285:
    case 7286:
    case 7287:
    case 7288:
    case 7289:
    case 7290:
    case 7291:
    case 7292:
    case 7293:
    case 7294:
    case 7297:
    case 7298:
    case 7299:
    case 7300:
    case 7301:
    case 7302:
    case 7303:
    case 7304:
    case 7305:
    case 7306:
    case 7307:
    case 7308:
    case 7309:
    case 7310:
    case 7312:
    case 7313:
    case 7314:
    case 7315:
    case 7316:
    case 7317:
    case 7318:
    case 7319:
    case 7320:
    case 7321:
    case 7324:
    case 7325:
    case 7326:
    case 7327:
    case 7328:
    case 7331:
    case 7332:
    case 7333:
    case 7334:
    case 7335:
    case 7336:
    case 7337:
    case 7338:
    case 7339:
    case 7340:
    case 7341:
    case 7342:
    case 7343:
    case 7344:
    case 7345:
    case 7346:
    case 7347:
    case 7348:
    case 7349:
    case 7350:
    case 7351:
    case 7352:
    case 7353:
    case 7354:
    case 7355:
    case 7356:
    case 7357:
    case 7358:
    case 7361:
    case 7362:
    case 7363:
    case 7364:
    case 7365:
    case 7366:
    case 7367:
    case 7368:
    case 7369:
    case 7370:
    case 7371:
    case 7372:
    case 7373:
    case 7375:
    case 7376:
    case 7377:
    case 7378:
    case 7379:
    case 7380:
    case 7381:
    case 7382:
    case 7383:
    case 7384:
    case 7387:
    case 7388:
    case 7390:
    case 7393:
    case 7394:
    case 7395:
    case 7396:
    case 7397:
    case 7398:
    case 7402:
    case 7403:
    case 7404:
    case 7405:
    case 7406:
    case 7407:
    case 7408:
    case 7409:
    case 7410:
    case 7411:
    case 7412:
    case 7413:
    case 7414:
    case 7415:
    case 7416:
    case 7417:
    case 7418:
    case 7423:
    case 7424:
    case 7425:
    case 7426:
    case 7427:
    case 7428:
    case 7429:
    case 7430:
    case 7434:
    case 7435:
    case 7436:
    case 7437:
    case 7438:
    case 7439:
    case 7440:
    case 7443:
    case 7444:
    case 7445:
    case 7448:
    case 7449:
    case 7450:
    case 7451:
    case 7452:
    case 7453:
    case 7454:
    case 7455:
    case 7456:
    case 7457:
    case 7458:
    case 7459:
    case 7460:
    case 7461:
    case 7464:
    case 7465:
    case 7466:
    case 7467:
    case 7468:
    case 7469:
    case 7470:
    case 7471:
    case 7472:
    case 7473:
    case 7474:
    case 7475:
    case 7476:
    case 7477:
    case 7478:
    case 7480:
    case 7481:
    case 7482:
    case 7483:
    case 7484:
    case 7485:
    case 7486:
    case 7487:
    case 7488:
    case 7489:
    case 7490:
    case 7491:
    case 7492:
    case 7493:
    case 7494:
    case 7495:
    case 7496:
    case 7497:
    case 7499:
    case 7500:
    case 7501:
    case 7502:
    case 7503:
    case 7504:
    case 7505:
    case 7506:
    case 7507:
    case 7513:
    case 7514:
    case 7515:
    case 7516:
    case 7517:
    case 7518:
    case 7519:
    case 7520:
    case 7521:
    case 7522:
    case 7523:
    case 7524:
    case 7525:
    case 7526:
    case 7527:
    case 7528:
    case 7529:
    case 7530:
    case 7531:
    case 7532:
    case 7533:
    case 7534:
    case 7535:
    case 7536:
    case 7537:
    case 7538:
    case 7539:
    case 7540:
    case 7542:
    case 7543:
    case 7544:
    case 7545:
    case 7546:
    case 7547:
    case 7548:
    case 7549:
    case 7551:
    case 7552:
    case 7553:
    case 7554:
    case 7555:
    case 7556:
    case 7557:
    case 7561:
    case 7562:
    case 7563:
    case 7564:
    case 7565:
    case 7566:
    case 7567:
    case 7569:
    case 7572:
    case 7573:
    case 7574:
    case 7576:
    case 7577:
    case 7578:
    case 7579:
    case 7580:
    case 7581:
    case 7582:
    case 7583:
    case 7584:
    case 7585:
    case 7586:
    case 7587:
    case 7588:
    case 7589:
    case 7590:
    case 7592:
    case 7593:
    case 7594:
    case 7595:
    case 7596:
    case 7597:
    case 7598:
    case 7603:
    case 7604:
    case 7605:
    case 7606:
    case 7607:
    case 7608:
    case 7609:
    case 7610:
    case 7611:
    case 7612:
    case 7619:
    case 7620:
    case 7621:
    case 7622:
    case 7623:
    case 7624:
    case 7625:
    case 7626:
    case 7627:
    case 7628:
    case 7629:
    case 7630:
    case 7631:
    case 7632:
    case 7633:
    case 7634:
    case 7645:
    case 7646:
    case 7647:
    case 7648:
    case 7649:
    case 7650:
    case 7651:
    case 7652:
    case 7653:
    case 7654:
    case 7655:
    case 7656:
    case 7657:
    case 7658:
    case 7659:
    case 7660:
    case 7661:
    case 8001:
    case 8004:
    case 8006:
    case 8007:
    case 8008:
    case 8009:
    case 8010:
    case 8011:
    case 8012:
    case 8013:
    case 8014:
    case 8015:
    case 8016:
    case 8017:
    case 8018:
    case 8019:
    case 8020:
    case 8021:
    case 8024:
    case 8025:
    case 8026:
    case 8027:
    case 8028:
    case 8029:
    case 8030:
    case 8031:
    case 8032:
    case 8033:
    case 8034:
    case 8035:
    case 8036:
    case 8037:
    case 8040:
    case 8041:
    case 8042:
    case 8045:
    case 8046:
    case 8047:
    case 8048:
    case 8049:
    case 8050:
    case 8051:
    case 8052:
    case 8053:
    case 8054:
    case 8055:
    case 8057:
    case 8058:
    case 8059:
    case 8060:
    case 8061:
    case 8062:
    case 8063:
    case 8064:
    case 8065:
    case 8066:
    case 8067:
    case 8068:
    case 8069:
    case 8070:
    case 8071:
    case 8072:
    case 8073:
    case 8074:
    case 8075:
    case 8076:
    case 8077:
    case 8078:
    case 8079:
    case 8080:
    case 8081:
    case 8082:
    case 8083:
    case 8084:
    case 8088:
    case 8089:
    case 8090:
    case 8091:
    case 8092:
    case 8093:
    case 8095:
    case 8096:
    case 8097:
    case 8098:
    case 8099:
    case 8100:
    case 8103:
    case 8104:
    case 8106:
    case 8107:
    case 8108:
    case 8109:
    case 8110:
    case 8111:
    case 8112:
    case 8113:
    case 8114:
    case 8115:
    case 8116:
    case 8117:
    case 8118:
    case 8119:
    case 8120:
    case 8121:
    case 8124:
    case 8125:
    case 8126:
    case 8127:
    case 8128:
    case 8129:
    case 8130:
    case 8131:
    case 8132:
    case 8135:
    case 8136:
    case 8137:
    case 8140:
    case 8141:
    case 8144:
    case 8145:
    case 8146:
    case 8147:
    case 8148:
    case 8149:
    case 8150:
    case 8151:
    case 8152:
    case 8153:
    case 8154:
    case 8155:
    case 8156:
    case 8157:
    case 8158:
    case 8159:
    case 8160:
    case 8161:
    case 8162:
    case 8163:
    case 8166:
    case 8167:
    case 8168:
    case 8169:
    case 8170:
    case 8171:
    case 8172:
    case 8173:
    case 8174:
    case 8175:
    case 8176:
    case 8177:
    case 8178:
    case 8179:
    case 8180:
    case 8181:
    case 8183:
    case 8185:
    case 8186:
    case 8187:
    case 8188:
    case 8189:
    case 8190:
    case 8191:
    case 8192:
    case 8193:
    case 8194:
    case 8195:
    case 8196:
    case 8197:
    case 8198:
    case 8199:
    case 8200:
    case 8201:
    case 8202:
    case 8203:
    case 8204:
    case 8205:
    case 8206:
    case 8207:
    case 8208:
    case 8209:
    case 8210:
    case 8211:
    case 8212:
    case 8213:
    case 8214:
    case 8215:
    case 8216:
    case 8217:
    case 8218:
    case 8219:
    case 8220:
    case 8221:
    case 8222:
    case 8223:
    case 8224:
    case 8225:
    case 8226:
    case 8227:
    case 8228:
    case 8229:
    case 8230:
    case 8231:
    case 8232:
    case 8233:
    case 8234:
    case 8236:
    case 8237:
    case 8238:
    case 8239:
    case 8240:
    case 8241:
    case 8242:
    case 8243:
    case 8244:
    case 8245:
    case 8246:
    case 8247:
    case 8248:
    case 8249:
    case 8250:
    case 8251:
    case 8252:
    case 8253:
    case 8254:
    case 8255:
    case 8256:
    case 8257:
    case 8258:
    case 8259:
    case 8260:
    case 8261:
    case 8262:
    case 8263:
    case 8264:
    case 8265:
    case 8266:
    case 8267:
    case 8268:
    case 8269:
    case 8270:
    case 8271:
    case 8273:
    case 8274:
    case 8275:
    case 8276:
    case 8277:
    case 8278:
    case 8279:
    case 8280:
    case 8281:
    case 8282:
    case 8283:
    case 8284:
    case 8285:
    case 8286:
    case 8287:
    case 8288:
    case 8289:
    case 8290:
    case 8291:
    case 8292:
    case 8293:
    case 8294:
    case 8295:
    case 8296:
    case 8297:
    case 8298:
    case 8299:
    case 8300:
    case 8301:
    case 8302:
    case 8303:
    case 8304:
    case 8305:
    case 8306:
    case 8307:
    case 8308:
    case 8309:
    case 8310:
    case 8311:
    case 8312:
    case 8313:
    case 8314:
    case 8315:
    case 8316:
    case 8317:
    case 8318:
    case 8325:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
