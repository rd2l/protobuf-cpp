// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client.proto

#ifndef PROTOBUF_INCLUDED_dota_5fgcmessages_5fclient_2eproto
#define PROTOBUF_INCLUDED_dota_5fgcmessages_5fclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
#include "dota_shared_enums.pb.h"
#include "dota_gcmessages_common.pb.h"
#include "gcsdk_gcmessages.pb.h"
#include "dota_gcmessages_common_match_management.pb.h"
#include "base_gcmessages.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dota_5fgcmessages_5fclient_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_dota_5fgcmessages_5fclient_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[411]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_dota_5fgcmessages_5fclient_2eproto();
namespace proto {
namespace dota {
class CMatchPlayerTimedStatAverages;
class CMatchPlayerTimedStatAveragesDefaultTypeInternal;
extern CMatchPlayerTimedStatAveragesDefaultTypeInternal _CMatchPlayerTimedStatAverages_default_instance_;
class CMsgActivatePlusFreeTrialRequest;
class CMsgActivatePlusFreeTrialRequestDefaultTypeInternal;
extern CMsgActivatePlusFreeTrialRequestDefaultTypeInternal _CMsgActivatePlusFreeTrialRequest_default_instance_;
class CMsgActivatePlusFreeTrialResponse;
class CMsgActivatePlusFreeTrialResponseDefaultTypeInternal;
extern CMsgActivatePlusFreeTrialResponseDefaultTypeInternal _CMsgActivatePlusFreeTrialResponse_default_instance_;
class CMsgArcanaVotes;
class CMsgArcanaVotesDefaultTypeInternal;
extern CMsgArcanaVotesDefaultTypeInternal _CMsgArcanaVotes_default_instance_;
class CMsgArcanaVotes_Match;
class CMsgArcanaVotes_MatchDefaultTypeInternal;
extern CMsgArcanaVotes_MatchDefaultTypeInternal _CMsgArcanaVotes_Match_default_instance_;
class CMsgBalancedShuffleLobby;
class CMsgBalancedShuffleLobbyDefaultTypeInternal;
extern CMsgBalancedShuffleLobbyDefaultTypeInternal _CMsgBalancedShuffleLobby_default_instance_;
class CMsgCastMatchVote;
class CMsgCastMatchVoteDefaultTypeInternal;
extern CMsgCastMatchVoteDefaultTypeInternal _CMsgCastMatchVote_default_instance_;
class CMsgClientProvideSurveyResult;
class CMsgClientProvideSurveyResultDefaultTypeInternal;
extern CMsgClientProvideSurveyResultDefaultTypeInternal _CMsgClientProvideSurveyResult_default_instance_;
class CMsgClientProvideSurveyResult_Response;
class CMsgClientProvideSurveyResult_ResponseDefaultTypeInternal;
extern CMsgClientProvideSurveyResult_ResponseDefaultTypeInternal _CMsgClientProvideSurveyResult_Response_default_instance_;
class CMsgClientSuspended;
class CMsgClientSuspendedDefaultTypeInternal;
extern CMsgClientSuspendedDefaultTypeInternal _CMsgClientSuspended_default_instance_;
class CMsgClientToGCAddTI6TreeProgress;
class CMsgClientToGCAddTI6TreeProgressDefaultTypeInternal;
extern CMsgClientToGCAddTI6TreeProgressDefaultTypeInternal _CMsgClientToGCAddTI6TreeProgress_default_instance_;
class CMsgClientToGCApplyGemCombiner;
class CMsgClientToGCApplyGemCombinerDefaultTypeInternal;
extern CMsgClientToGCApplyGemCombinerDefaultTypeInternal _CMsgClientToGCApplyGemCombiner_default_instance_;
class CMsgClientToGCCavernCrawlClaimRoom;
class CMsgClientToGCCavernCrawlClaimRoomDefaultTypeInternal;
extern CMsgClientToGCCavernCrawlClaimRoomDefaultTypeInternal _CMsgClientToGCCavernCrawlClaimRoom_default_instance_;
class CMsgClientToGCCavernCrawlClaimRoomResponse;
class CMsgClientToGCCavernCrawlClaimRoomResponseDefaultTypeInternal;
extern CMsgClientToGCCavernCrawlClaimRoomResponseDefaultTypeInternal _CMsgClientToGCCavernCrawlClaimRoomResponse_default_instance_;
class CMsgClientToGCCavernCrawlGetClaimedRoomCount;
class CMsgClientToGCCavernCrawlGetClaimedRoomCountDefaultTypeInternal;
extern CMsgClientToGCCavernCrawlGetClaimedRoomCountDefaultTypeInternal _CMsgClientToGCCavernCrawlGetClaimedRoomCount_default_instance_;
class CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse;
class CMsgClientToGCCavernCrawlGetClaimedRoomCountResponseDefaultTypeInternal;
extern CMsgClientToGCCavernCrawlGetClaimedRoomCountResponseDefaultTypeInternal _CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_default_instance_;
class CMsgClientToGCCavernCrawlRequestMapState;
class CMsgClientToGCCavernCrawlRequestMapStateDefaultTypeInternal;
extern CMsgClientToGCCavernCrawlRequestMapStateDefaultTypeInternal _CMsgClientToGCCavernCrawlRequestMapState_default_instance_;
class CMsgClientToGCCavernCrawlRequestMapStateResponse;
class CMsgClientToGCCavernCrawlRequestMapStateResponseDefaultTypeInternal;
extern CMsgClientToGCCavernCrawlRequestMapStateResponseDefaultTypeInternal _CMsgClientToGCCavernCrawlRequestMapStateResponse_default_instance_;
class CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem;
class CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItemDefaultTypeInternal;
extern CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItemDefaultTypeInternal _CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem_default_instance_;
class CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge;
class CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallengeDefaultTypeInternal;
extern CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallengeDefaultTypeInternal _CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge_default_instance_;
class CMsgClientToGCCavernCrawlUseItemOnPath;
class CMsgClientToGCCavernCrawlUseItemOnPathDefaultTypeInternal;
extern CMsgClientToGCCavernCrawlUseItemOnPathDefaultTypeInternal _CMsgClientToGCCavernCrawlUseItemOnPath_default_instance_;
class CMsgClientToGCCavernCrawlUseItemOnPathResponse;
class CMsgClientToGCCavernCrawlUseItemOnPathResponseDefaultTypeInternal;
extern CMsgClientToGCCavernCrawlUseItemOnPathResponseDefaultTypeInternal _CMsgClientToGCCavernCrawlUseItemOnPathResponse_default_instance_;
class CMsgClientToGCCavernCrawlUseItemOnRoom;
class CMsgClientToGCCavernCrawlUseItemOnRoomDefaultTypeInternal;
extern CMsgClientToGCCavernCrawlUseItemOnRoomDefaultTypeInternal _CMsgClientToGCCavernCrawlUseItemOnRoom_default_instance_;
class CMsgClientToGCCavernCrawlUseItemOnRoomResponse;
class CMsgClientToGCCavernCrawlUseItemOnRoomResponseDefaultTypeInternal;
extern CMsgClientToGCCavernCrawlUseItemOnRoomResponseDefaultTypeInternal _CMsgClientToGCCavernCrawlUseItemOnRoomResponse_default_instance_;
class CMsgClientToGCClaimEventActionUsingItem;
class CMsgClientToGCClaimEventActionUsingItemDefaultTypeInternal;
extern CMsgClientToGCClaimEventActionUsingItemDefaultTypeInternal _CMsgClientToGCClaimEventActionUsingItem_default_instance_;
class CMsgClientToGCClaimEventActionUsingItemResponse;
class CMsgClientToGCClaimEventActionUsingItemResponseDefaultTypeInternal;
extern CMsgClientToGCClaimEventActionUsingItemResponseDefaultTypeInternal _CMsgClientToGCClaimEventActionUsingItemResponse_default_instance_;
class CMsgClientToGCCreateHeroStatue;
class CMsgClientToGCCreateHeroStatueDefaultTypeInternal;
extern CMsgClientToGCCreateHeroStatueDefaultTypeInternal _CMsgClientToGCCreateHeroStatue_default_instance_;
class CMsgClientToGCCreatePlayerCardPack;
class CMsgClientToGCCreatePlayerCardPackDefaultTypeInternal;
extern CMsgClientToGCCreatePlayerCardPackDefaultTypeInternal _CMsgClientToGCCreatePlayerCardPack_default_instance_;
class CMsgClientToGCCreatePlayerCardPackResponse;
class CMsgClientToGCCreatePlayerCardPackResponseDefaultTypeInternal;
extern CMsgClientToGCCreatePlayerCardPackResponseDefaultTypeInternal _CMsgClientToGCCreatePlayerCardPackResponse_default_instance_;
class CMsgClientToGCCustomGamePlayerCountRequest;
class CMsgClientToGCCustomGamePlayerCountRequestDefaultTypeInternal;
extern CMsgClientToGCCustomGamePlayerCountRequestDefaultTypeInternal _CMsgClientToGCCustomGamePlayerCountRequest_default_instance_;
class CMsgClientToGCCustomGamesFriendsPlayedRequest;
class CMsgClientToGCCustomGamesFriendsPlayedRequestDefaultTypeInternal;
extern CMsgClientToGCCustomGamesFriendsPlayedRequestDefaultTypeInternal _CMsgClientToGCCustomGamesFriendsPlayedRequest_default_instance_;
class CMsgClientToGCEmoticonDataRequest;
class CMsgClientToGCEmoticonDataRequestDefaultTypeInternal;
extern CMsgClientToGCEmoticonDataRequestDefaultTypeInternal _CMsgClientToGCEmoticonDataRequest_default_instance_;
class CMsgClientToGCFriendsPlayedCustomGameRequest;
class CMsgClientToGCFriendsPlayedCustomGameRequestDefaultTypeInternal;
extern CMsgClientToGCFriendsPlayedCustomGameRequestDefaultTypeInternal _CMsgClientToGCFriendsPlayedCustomGameRequest_default_instance_;
class CMsgClientToGCGetAdditionalEquips;
class CMsgClientToGCGetAdditionalEquipsDefaultTypeInternal;
extern CMsgClientToGCGetAdditionalEquipsDefaultTypeInternal _CMsgClientToGCGetAdditionalEquips_default_instance_;
class CMsgClientToGCGetAdditionalEquipsResponse;
class CMsgClientToGCGetAdditionalEquipsResponseDefaultTypeInternal;
extern CMsgClientToGCGetAdditionalEquipsResponseDefaultTypeInternal _CMsgClientToGCGetAdditionalEquipsResponse_default_instance_;
class CMsgClientToGCGetAllHeroOrder;
class CMsgClientToGCGetAllHeroOrderDefaultTypeInternal;
extern CMsgClientToGCGetAllHeroOrderDefaultTypeInternal _CMsgClientToGCGetAllHeroOrder_default_instance_;
class CMsgClientToGCGetAllHeroOrderResponse;
class CMsgClientToGCGetAllHeroOrderResponseDefaultTypeInternal;
extern CMsgClientToGCGetAllHeroOrderResponseDefaultTypeInternal _CMsgClientToGCGetAllHeroOrderResponse_default_instance_;
class CMsgClientToGCGetAllHeroProgress;
class CMsgClientToGCGetAllHeroProgressDefaultTypeInternal;
extern CMsgClientToGCGetAllHeroProgressDefaultTypeInternal _CMsgClientToGCGetAllHeroProgress_default_instance_;
class CMsgClientToGCGetAllHeroProgressResponse;
class CMsgClientToGCGetAllHeroProgressResponseDefaultTypeInternal;
extern CMsgClientToGCGetAllHeroProgressResponseDefaultTypeInternal _CMsgClientToGCGetAllHeroProgressResponse_default_instance_;
class CMsgClientToGCGetEventGoals;
class CMsgClientToGCGetEventGoalsDefaultTypeInternal;
extern CMsgClientToGCGetEventGoalsDefaultTypeInternal _CMsgClientToGCGetEventGoals_default_instance_;
class CMsgClientToGCGetProfileCard;
class CMsgClientToGCGetProfileCardDefaultTypeInternal;
extern CMsgClientToGCGetProfileCardDefaultTypeInternal _CMsgClientToGCGetProfileCard_default_instance_;
class CMsgClientToGCGetProfileCardStats;
class CMsgClientToGCGetProfileCardStatsDefaultTypeInternal;
extern CMsgClientToGCGetProfileCardStatsDefaultTypeInternal _CMsgClientToGCGetProfileCardStats_default_instance_;
class CMsgClientToGCGetProfileTickets;
class CMsgClientToGCGetProfileTicketsDefaultTypeInternal;
extern CMsgClientToGCGetProfileTicketsDefaultTypeInternal _CMsgClientToGCGetProfileTickets_default_instance_;
class CMsgClientToGCGetQuestProgress;
class CMsgClientToGCGetQuestProgressDefaultTypeInternal;
extern CMsgClientToGCGetQuestProgressDefaultTypeInternal _CMsgClientToGCGetQuestProgress_default_instance_;
class CMsgClientToGCGetQuestProgressResponse;
class CMsgClientToGCGetQuestProgressResponseDefaultTypeInternal;
extern CMsgClientToGCGetQuestProgressResponseDefaultTypeInternal _CMsgClientToGCGetQuestProgressResponse_default_instance_;
class CMsgClientToGCGetQuestProgressResponse_Challenge;
class CMsgClientToGCGetQuestProgressResponse_ChallengeDefaultTypeInternal;
extern CMsgClientToGCGetQuestProgressResponse_ChallengeDefaultTypeInternal _CMsgClientToGCGetQuestProgressResponse_Challenge_default_instance_;
class CMsgClientToGCGetQuestProgressResponse_Quest;
class CMsgClientToGCGetQuestProgressResponse_QuestDefaultTypeInternal;
extern CMsgClientToGCGetQuestProgressResponse_QuestDefaultTypeInternal _CMsgClientToGCGetQuestProgressResponse_Quest_default_instance_;
class CMsgClientToGCGetTrophyList;
class CMsgClientToGCGetTrophyListDefaultTypeInternal;
extern CMsgClientToGCGetTrophyListDefaultTypeInternal _CMsgClientToGCGetTrophyList_default_instance_;
class CMsgClientToGCGetTrophyListResponse;
class CMsgClientToGCGetTrophyListResponseDefaultTypeInternal;
extern CMsgClientToGCGetTrophyListResponseDefaultTypeInternal _CMsgClientToGCGetTrophyListResponse_default_instance_;
class CMsgClientToGCGetTrophyListResponse_Trophy;
class CMsgClientToGCGetTrophyListResponse_TrophyDefaultTypeInternal;
extern CMsgClientToGCGetTrophyListResponse_TrophyDefaultTypeInternal _CMsgClientToGCGetTrophyListResponse_Trophy_default_instance_;
class CMsgClientToGCGiveTip;
class CMsgClientToGCGiveTipDefaultTypeInternal;
extern CMsgClientToGCGiveTipDefaultTypeInternal _CMsgClientToGCGiveTip_default_instance_;
class CMsgClientToGCGiveTipResponse;
class CMsgClientToGCGiveTipResponseDefaultTypeInternal;
extern CMsgClientToGCGiveTipResponseDefaultTypeInternal _CMsgClientToGCGiveTipResponse_default_instance_;
class CMsgClientToGCH264Unsupported;
class CMsgClientToGCH264UnsupportedDefaultTypeInternal;
extern CMsgClientToGCH264UnsupportedDefaultTypeInternal _CMsgClientToGCH264Unsupported_default_instance_;
class CMsgClientToGCHasPlayerVotedForMVP;
class CMsgClientToGCHasPlayerVotedForMVPDefaultTypeInternal;
extern CMsgClientToGCHasPlayerVotedForMVPDefaultTypeInternal _CMsgClientToGCHasPlayerVotedForMVP_default_instance_;
class CMsgClientToGCHasPlayerVotedForMVPResponse;
class CMsgClientToGCHasPlayerVotedForMVPResponseDefaultTypeInternal;
extern CMsgClientToGCHasPlayerVotedForMVPResponseDefaultTypeInternal _CMsgClientToGCHasPlayerVotedForMVPResponse_default_instance_;
class CMsgClientToGCJoinPlaytest;
class CMsgClientToGCJoinPlaytestDefaultTypeInternal;
extern CMsgClientToGCJoinPlaytestDefaultTypeInternal _CMsgClientToGCJoinPlaytest_default_instance_;
class CMsgClientToGCJoinPlaytestResponse;
class CMsgClientToGCJoinPlaytestResponseDefaultTypeInternal;
extern CMsgClientToGCJoinPlaytestResponseDefaultTypeInternal _CMsgClientToGCJoinPlaytestResponse_default_instance_;
class CMsgClientToGCMarkNotificationListRead;
class CMsgClientToGCMarkNotificationListReadDefaultTypeInternal;
extern CMsgClientToGCMarkNotificationListReadDefaultTypeInternal _CMsgClientToGCMarkNotificationListRead_default_instance_;
class CMsgClientToGCOpenPlayerCardPack;
class CMsgClientToGCOpenPlayerCardPackDefaultTypeInternal;
extern CMsgClientToGCOpenPlayerCardPackDefaultTypeInternal _CMsgClientToGCOpenPlayerCardPack_default_instance_;
class CMsgClientToGCOpenPlayerCardPackResponse;
class CMsgClientToGCOpenPlayerCardPackResponseDefaultTypeInternal;
extern CMsgClientToGCOpenPlayerCardPackResponseDefaultTypeInternal _CMsgClientToGCOpenPlayerCardPackResponse_default_instance_;
class CMsgClientToGCPlayerCardSpecificPurchaseRequest;
class CMsgClientToGCPlayerCardSpecificPurchaseRequestDefaultTypeInternal;
extern CMsgClientToGCPlayerCardSpecificPurchaseRequestDefaultTypeInternal _CMsgClientToGCPlayerCardSpecificPurchaseRequest_default_instance_;
class CMsgClientToGCPlayerCardSpecificPurchaseResponse;
class CMsgClientToGCPlayerCardSpecificPurchaseResponseDefaultTypeInternal;
extern CMsgClientToGCPlayerCardSpecificPurchaseResponseDefaultTypeInternal _CMsgClientToGCPlayerCardSpecificPurchaseResponse_default_instance_;
class CMsgClientToGCPlayerStatsRequest;
class CMsgClientToGCPlayerStatsRequestDefaultTypeInternal;
extern CMsgClientToGCPlayerStatsRequestDefaultTypeInternal _CMsgClientToGCPlayerStatsRequest_default_instance_;
class CMsgClientToGCPublishUserStat;
class CMsgClientToGCPublishUserStatDefaultTypeInternal;
extern CMsgClientToGCPublishUserStatDefaultTypeInternal _CMsgClientToGCPublishUserStat_default_instance_;
class CMsgClientToGCRecordContestVote;
class CMsgClientToGCRecordContestVoteDefaultTypeInternal;
extern CMsgClientToGCRecordContestVoteDefaultTypeInternal _CMsgClientToGCRecordContestVote_default_instance_;
class CMsgClientToGCRecycleHeroRelic;
class CMsgClientToGCRecycleHeroRelicDefaultTypeInternal;
extern CMsgClientToGCRecycleHeroRelicDefaultTypeInternal _CMsgClientToGCRecycleHeroRelic_default_instance_;
class CMsgClientToGCRecycleHeroRelicResponse;
class CMsgClientToGCRecycleHeroRelicResponseDefaultTypeInternal;
extern CMsgClientToGCRecycleHeroRelicResponseDefaultTypeInternal _CMsgClientToGCRecycleHeroRelicResponse_default_instance_;
class CMsgClientToGCRecyclePlayerCard;
class CMsgClientToGCRecyclePlayerCardDefaultTypeInternal;
extern CMsgClientToGCRecyclePlayerCardDefaultTypeInternal _CMsgClientToGCRecyclePlayerCard_default_instance_;
class CMsgClientToGCRecyclePlayerCardResponse;
class CMsgClientToGCRecyclePlayerCardResponseDefaultTypeInternal;
extern CMsgClientToGCRecyclePlayerCardResponseDefaultTypeInternal _CMsgClientToGCRecyclePlayerCardResponse_default_instance_;
class CMsgClientToGCRequestArcanaVotesRemaining;
class CMsgClientToGCRequestArcanaVotesRemainingDefaultTypeInternal;
extern CMsgClientToGCRequestArcanaVotesRemainingDefaultTypeInternal _CMsgClientToGCRequestArcanaVotesRemaining_default_instance_;
class CMsgClientToGCRequestArcanaVotesRemainingResponse;
class CMsgClientToGCRequestArcanaVotesRemainingResponseDefaultTypeInternal;
extern CMsgClientToGCRequestArcanaVotesRemainingResponseDefaultTypeInternal _CMsgClientToGCRequestArcanaVotesRemainingResponse_default_instance_;
class CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote;
class CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVoteDefaultTypeInternal;
extern CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVoteDefaultTypeInternal _CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote_default_instance_;
class CMsgClientToGCRequestEventPointLogResponseV2;
class CMsgClientToGCRequestEventPointLogResponseV2DefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponseV2DefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponseV2_default_instance_;
class CMsgClientToGCRequestEventPointLogResponseV2_LogEntry;
class CMsgClientToGCRequestEventPointLogResponseV2_LogEntryDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponseV2_LogEntryDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponseV2_LogEntry_default_instance_;
class CMsgClientToGCRequestEventPointLogV2;
class CMsgClientToGCRequestEventPointLogV2DefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogV2DefaultTypeInternal _CMsgClientToGCRequestEventPointLogV2_default_instance_;
class CMsgClientToGCRequestH264Support;
class CMsgClientToGCRequestH264SupportDefaultTypeInternal;
extern CMsgClientToGCRequestH264SupportDefaultTypeInternal _CMsgClientToGCRequestH264Support_default_instance_;
class CMsgClientToGCRequestLinaGameResult;
class CMsgClientToGCRequestLinaGameResultDefaultTypeInternal;
extern CMsgClientToGCRequestLinaGameResultDefaultTypeInternal _CMsgClientToGCRequestLinaGameResult_default_instance_;
class CMsgClientToGCRequestLinaGameResultResponse;
class CMsgClientToGCRequestLinaGameResultResponseDefaultTypeInternal;
extern CMsgClientToGCRequestLinaGameResultResponseDefaultTypeInternal _CMsgClientToGCRequestLinaGameResultResponse_default_instance_;
class CMsgClientToGCRequestLinaPlaysRemaining;
class CMsgClientToGCRequestLinaPlaysRemainingDefaultTypeInternal;
extern CMsgClientToGCRequestLinaPlaysRemainingDefaultTypeInternal _CMsgClientToGCRequestLinaPlaysRemaining_default_instance_;
class CMsgClientToGCRequestLinaPlaysRemainingResponse;
class CMsgClientToGCRequestLinaPlaysRemainingResponseDefaultTypeInternal;
extern CMsgClientToGCRequestLinaPlaysRemainingResponseDefaultTypeInternal _CMsgClientToGCRequestLinaPlaysRemainingResponse_default_instance_;
class CMsgClientToGCRequestPlusWeeklyChallengeResult;
class CMsgClientToGCRequestPlusWeeklyChallengeResultDefaultTypeInternal;
extern CMsgClientToGCRequestPlusWeeklyChallengeResultDefaultTypeInternal _CMsgClientToGCRequestPlusWeeklyChallengeResult_default_instance_;
class CMsgClientToGCRequestPlusWeeklyChallengeResultResponse;
class CMsgClientToGCRequestPlusWeeklyChallengeResultResponseDefaultTypeInternal;
extern CMsgClientToGCRequestPlusWeeklyChallengeResultResponseDefaultTypeInternal _CMsgClientToGCRequestPlusWeeklyChallengeResultResponse_default_instance_;
class CMsgClientToGCRequestSlarkGameResult;
class CMsgClientToGCRequestSlarkGameResultDefaultTypeInternal;
extern CMsgClientToGCRequestSlarkGameResultDefaultTypeInternal _CMsgClientToGCRequestSlarkGameResult_default_instance_;
class CMsgClientToGCRequestSlarkGameResultResponse;
class CMsgClientToGCRequestSlarkGameResultResponseDefaultTypeInternal;
extern CMsgClientToGCRequestSlarkGameResultResponseDefaultTypeInternal _CMsgClientToGCRequestSlarkGameResultResponse_default_instance_;
class CMsgClientToGCSelectCompendiumInGamePrediction;
class CMsgClientToGCSelectCompendiumInGamePredictionDefaultTypeInternal;
extern CMsgClientToGCSelectCompendiumInGamePredictionDefaultTypeInternal _CMsgClientToGCSelectCompendiumInGamePrediction_default_instance_;
class CMsgClientToGCSelectCompendiumInGamePredictionResponse;
class CMsgClientToGCSelectCompendiumInGamePredictionResponseDefaultTypeInternal;
extern CMsgClientToGCSelectCompendiumInGamePredictionResponseDefaultTypeInternal _CMsgClientToGCSelectCompendiumInGamePredictionResponse_default_instance_;
class CMsgClientToGCSelectCompendiumInGamePrediction_Prediction;
class CMsgClientToGCSelectCompendiumInGamePrediction_PredictionDefaultTypeInternal;
extern CMsgClientToGCSelectCompendiumInGamePrediction_PredictionDefaultTypeInternal _CMsgClientToGCSelectCompendiumInGamePrediction_Prediction_default_instance_;
class CMsgClientToGCSetAdditionalEquips;
class CMsgClientToGCSetAdditionalEquipsDefaultTypeInternal;
extern CMsgClientToGCSetAdditionalEquipsDefaultTypeInternal _CMsgClientToGCSetAdditionalEquips_default_instance_;
class CMsgClientToGCSetAdditionalEquipsResponse;
class CMsgClientToGCSetAdditionalEquipsResponseDefaultTypeInternal;
extern CMsgClientToGCSetAdditionalEquipsResponseDefaultTypeInternal _CMsgClientToGCSetAdditionalEquipsResponse_default_instance_;
class CMsgClientToGCSetProfileCardSlots;
class CMsgClientToGCSetProfileCardSlotsDefaultTypeInternal;
extern CMsgClientToGCSetProfileCardSlotsDefaultTypeInternal _CMsgClientToGCSetProfileCardSlots_default_instance_;
class CMsgClientToGCSetProfileCardSlots_CardSlot;
class CMsgClientToGCSetProfileCardSlots_CardSlotDefaultTypeInternal;
extern CMsgClientToGCSetProfileCardSlots_CardSlotDefaultTypeInternal _CMsgClientToGCSetProfileCardSlots_CardSlot_default_instance_;
class CMsgClientToGCSocialFeedPostCommentRequest;
class CMsgClientToGCSocialFeedPostCommentRequestDefaultTypeInternal;
extern CMsgClientToGCSocialFeedPostCommentRequestDefaultTypeInternal _CMsgClientToGCSocialFeedPostCommentRequest_default_instance_;
class CMsgClientToGCSocialFeedPostMessageRequest;
class CMsgClientToGCSocialFeedPostMessageRequestDefaultTypeInternal;
extern CMsgClientToGCSocialFeedPostMessageRequestDefaultTypeInternal _CMsgClientToGCSocialFeedPostMessageRequest_default_instance_;
class CMsgClientToGCSocialMatchDetailsRequest;
class CMsgClientToGCSocialMatchDetailsRequestDefaultTypeInternal;
extern CMsgClientToGCSocialMatchDetailsRequestDefaultTypeInternal _CMsgClientToGCSocialMatchDetailsRequest_default_instance_;
class CMsgClientToGCSocialMatchPostCommentRequest;
class CMsgClientToGCSocialMatchPostCommentRequestDefaultTypeInternal;
extern CMsgClientToGCSocialMatchPostCommentRequestDefaultTypeInternal _CMsgClientToGCSocialMatchPostCommentRequest_default_instance_;
class CMsgClientToGCSuspiciousActivity;
class CMsgClientToGCSuspiciousActivityDefaultTypeInternal;
extern CMsgClientToGCSuspiciousActivityDefaultTypeInternal _CMsgClientToGCSuspiciousActivity_default_instance_;
class CMsgClientToGCTeammateStatsRequest;
class CMsgClientToGCTeammateStatsRequestDefaultTypeInternal;
extern CMsgClientToGCTeammateStatsRequestDefaultTypeInternal _CMsgClientToGCTeammateStatsRequest_default_instance_;
class CMsgClientToGCTeammateStatsResponse;
class CMsgClientToGCTeammateStatsResponseDefaultTypeInternal;
extern CMsgClientToGCTeammateStatsResponseDefaultTypeInternal _CMsgClientToGCTeammateStatsResponse_default_instance_;
class CMsgClientToGCTeammateStatsResponse_TeammateStat;
class CMsgClientToGCTeammateStatsResponse_TeammateStatDefaultTypeInternal;
extern CMsgClientToGCTeammateStatsResponse_TeammateStatDefaultTypeInternal _CMsgClientToGCTeammateStatsResponse_TeammateStat_default_instance_;
class CMsgClientToGCTrackDialogResult;
class CMsgClientToGCTrackDialogResultDefaultTypeInternal;
extern CMsgClientToGCTrackDialogResultDefaultTypeInternal _CMsgClientToGCTrackDialogResult_default_instance_;
class CMsgClientToGCTransferSeasonalMMRRequest;
class CMsgClientToGCTransferSeasonalMMRRequestDefaultTypeInternal;
extern CMsgClientToGCTransferSeasonalMMRRequestDefaultTypeInternal _CMsgClientToGCTransferSeasonalMMRRequest_default_instance_;
class CMsgClientToGCTransferSeasonalMMRResponse;
class CMsgClientToGCTransferSeasonalMMRResponseDefaultTypeInternal;
extern CMsgClientToGCTransferSeasonalMMRResponseDefaultTypeInternal _CMsgClientToGCTransferSeasonalMMRResponse_default_instance_;
class CMsgClientToGCVoteForArcana;
class CMsgClientToGCVoteForArcanaDefaultTypeInternal;
extern CMsgClientToGCVoteForArcanaDefaultTypeInternal _CMsgClientToGCVoteForArcana_default_instance_;
class CMsgClientToGCVoteForArcanaResponse;
class CMsgClientToGCVoteForArcanaResponseDefaultTypeInternal;
extern CMsgClientToGCVoteForArcanaResponseDefaultTypeInternal _CMsgClientToGCVoteForArcanaResponse_default_instance_;
class CMsgClientToGCVoteForArcana_MatchVote;
class CMsgClientToGCVoteForArcana_MatchVoteDefaultTypeInternal;
extern CMsgClientToGCVoteForArcana_MatchVoteDefaultTypeInternal _CMsgClientToGCVoteForArcana_MatchVote_default_instance_;
class CMsgClientToGCVoteForMVP;
class CMsgClientToGCVoteForMVPDefaultTypeInternal;
extern CMsgClientToGCVoteForMVPDefaultTypeInternal _CMsgClientToGCVoteForMVP_default_instance_;
class CMsgClientToGCVoteForMVPResponse;
class CMsgClientToGCVoteForMVPResponseDefaultTypeInternal;
extern CMsgClientToGCVoteForMVPResponseDefaultTypeInternal _CMsgClientToGCVoteForMVPResponse_default_instance_;
class CMsgClientToGCWageringRequest;
class CMsgClientToGCWageringRequestDefaultTypeInternal;
extern CMsgClientToGCWageringRequestDefaultTypeInternal _CMsgClientToGCWageringRequest_default_instance_;
class CMsgClientsRejoinChatChannels;
class CMsgClientsRejoinChatChannelsDefaultTypeInternal;
extern CMsgClientsRejoinChatChannelsDefaultTypeInternal _CMsgClientsRejoinChatChannels_default_instance_;
class CMsgDOTAAnchorPhoneNumberRequest;
class CMsgDOTAAnchorPhoneNumberRequestDefaultTypeInternal;
extern CMsgDOTAAnchorPhoneNumberRequestDefaultTypeInternal _CMsgDOTAAnchorPhoneNumberRequest_default_instance_;
class CMsgDOTAAnchorPhoneNumberResponse;
class CMsgDOTAAnchorPhoneNumberResponseDefaultTypeInternal;
extern CMsgDOTAAnchorPhoneNumberResponseDefaultTypeInternal _CMsgDOTAAnchorPhoneNumberResponse_default_instance_;
class CMsgDOTAClaimEventAction;
class CMsgDOTAClaimEventActionDefaultTypeInternal;
extern CMsgDOTAClaimEventActionDefaultTypeInternal _CMsgDOTAClaimEventAction_default_instance_;
class CMsgDOTAClaimEventActionData;
class CMsgDOTAClaimEventActionDataDefaultTypeInternal;
extern CMsgDOTAClaimEventActionDataDefaultTypeInternal _CMsgDOTAClaimEventActionData_default_instance_;
class CMsgDOTAClaimEventActionData_GrantItemGiftData;
class CMsgDOTAClaimEventActionData_GrantItemGiftDataDefaultTypeInternal;
extern CMsgDOTAClaimEventActionData_GrantItemGiftDataDefaultTypeInternal _CMsgDOTAClaimEventActionData_GrantItemGiftData_default_instance_;
class CMsgDOTAClaimEventActionResponse;
class CMsgDOTAClaimEventActionResponseDefaultTypeInternal;
extern CMsgDOTAClaimEventActionResponseDefaultTypeInternal _CMsgDOTAClaimEventActionResponse_default_instance_;
class CMsgDOTAClaimEventActionResponse_GrantedRewardData;
class CMsgDOTAClaimEventActionResponse_GrantedRewardDataDefaultTypeInternal;
extern CMsgDOTAClaimEventActionResponse_GrantedRewardDataDefaultTypeInternal _CMsgDOTAClaimEventActionResponse_GrantedRewardData_default_instance_;
class CMsgDOTAClaimEventActionResponse_LootListRewardData;
class CMsgDOTAClaimEventActionResponse_LootListRewardDataDefaultTypeInternal;
extern CMsgDOTAClaimEventActionResponse_LootListRewardDataDefaultTypeInternal _CMsgDOTAClaimEventActionResponse_LootListRewardData_default_instance_;
class CMsgDOTAClaimEventActionResponse_MysteryItemRewardData;
class CMsgDOTAClaimEventActionResponse_MysteryItemRewardDataDefaultTypeInternal;
extern CMsgDOTAClaimEventActionResponse_MysteryItemRewardDataDefaultTypeInternal _CMsgDOTAClaimEventActionResponse_MysteryItemRewardData_default_instance_;
class CMsgDOTAClearNotifySuccessfulReport;
class CMsgDOTAClearNotifySuccessfulReportDefaultTypeInternal;
extern CMsgDOTAClearNotifySuccessfulReportDefaultTypeInternal _CMsgDOTAClearNotifySuccessfulReport_default_instance_;
class CMsgDOTAClientToGCQuickStatsRequest;
class CMsgDOTAClientToGCQuickStatsRequestDefaultTypeInternal;
extern CMsgDOTAClientToGCQuickStatsRequestDefaultTypeInternal _CMsgDOTAClientToGCQuickStatsRequest_default_instance_;
class CMsgDOTAClientToGCQuickStatsResponse;
class CMsgDOTAClientToGCQuickStatsResponseDefaultTypeInternal;
extern CMsgDOTAClientToGCQuickStatsResponseDefaultTypeInternal _CMsgDOTAClientToGCQuickStatsResponse_default_instance_;
class CMsgDOTAClientToGCQuickStatsResponse_SimpleStats;
class CMsgDOTAClientToGCQuickStatsResponse_SimpleStatsDefaultTypeInternal;
extern CMsgDOTAClientToGCQuickStatsResponse_SimpleStatsDefaultTypeInternal _CMsgDOTAClientToGCQuickStatsResponse_SimpleStats_default_instance_;
class CMsgDOTACompendiumData;
class CMsgDOTACompendiumDataDefaultTypeInternal;
extern CMsgDOTACompendiumDataDefaultTypeInternal _CMsgDOTACompendiumData_default_instance_;
class CMsgDOTACompendiumDataRequest;
class CMsgDOTACompendiumDataRequestDefaultTypeInternal;
extern CMsgDOTACompendiumDataRequestDefaultTypeInternal _CMsgDOTACompendiumDataRequest_default_instance_;
class CMsgDOTACompendiumDataResponse;
class CMsgDOTACompendiumDataResponseDefaultTypeInternal;
extern CMsgDOTACompendiumDataResponseDefaultTypeInternal _CMsgDOTACompendiumDataResponse_default_instance_;
class CMsgDOTACompendiumInGamePredictionResults;
class CMsgDOTACompendiumInGamePredictionResultsDefaultTypeInternal;
extern CMsgDOTACompendiumInGamePredictionResultsDefaultTypeInternal _CMsgDOTACompendiumInGamePredictionResults_default_instance_;
class CMsgDOTACompendiumInGamePredictionResults_PredictionResult;
class CMsgDOTACompendiumInGamePredictionResults_PredictionResultDefaultTypeInternal;
extern CMsgDOTACompendiumInGamePredictionResults_PredictionResultDefaultTypeInternal _CMsgDOTACompendiumInGamePredictionResults_PredictionResult_default_instance_;
class CMsgDOTACompendiumSelection;
class CMsgDOTACompendiumSelectionDefaultTypeInternal;
extern CMsgDOTACompendiumSelectionDefaultTypeInternal _CMsgDOTACompendiumSelection_default_instance_;
class CMsgDOTACompendiumSelectionResponse;
class CMsgDOTACompendiumSelectionResponseDefaultTypeInternal;
extern CMsgDOTACompendiumSelectionResponseDefaultTypeInternal _CMsgDOTACompendiumSelectionResponse_default_instance_;
class CMsgDOTACustomGameClientFinishedLoading;
class CMsgDOTACustomGameClientFinishedLoadingDefaultTypeInternal;
extern CMsgDOTACustomGameClientFinishedLoadingDefaultTypeInternal _CMsgDOTACustomGameClientFinishedLoading_default_instance_;
class CMsgDOTACustomGameListenServerStartedLoading;
class CMsgDOTACustomGameListenServerStartedLoadingDefaultTypeInternal;
extern CMsgDOTACustomGameListenServerStartedLoadingDefaultTypeInternal _CMsgDOTACustomGameListenServerStartedLoading_default_instance_;
class CMsgDOTADPCFeed;
class CMsgDOTADPCFeedDefaultTypeInternal;
extern CMsgDOTADPCFeedDefaultTypeInternal _CMsgDOTADPCFeed_default_instance_;
class CMsgDOTADPCFeed_Element;
class CMsgDOTADPCFeed_ElementDefaultTypeInternal;
extern CMsgDOTADPCFeed_ElementDefaultTypeInternal _CMsgDOTADPCFeed_Element_default_instance_;
class CMsgDOTADPCUserInfo;
class CMsgDOTADPCUserInfoDefaultTypeInternal;
extern CMsgDOTADPCUserInfoDefaultTypeInternal _CMsgDOTADPCUserInfo_default_instance_;
class CMsgDOTADestroyLobbyRequest;
class CMsgDOTADestroyLobbyRequestDefaultTypeInternal;
extern CMsgDOTADestroyLobbyRequestDefaultTypeInternal _CMsgDOTADestroyLobbyRequest_default_instance_;
class CMsgDOTADestroyLobbyResponse;
class CMsgDOTADestroyLobbyResponseDefaultTypeInternal;
extern CMsgDOTADestroyLobbyResponseDefaultTypeInternal _CMsgDOTADestroyLobbyResponse_default_instance_;
class CMsgDOTAEmoticonAccessSDO;
class CMsgDOTAEmoticonAccessSDODefaultTypeInternal;
extern CMsgDOTAEmoticonAccessSDODefaultTypeInternal _CMsgDOTAEmoticonAccessSDO_default_instance_;
class CMsgDOTAFeaturedItems;
class CMsgDOTAFeaturedItemsDefaultTypeInternal;
extern CMsgDOTAFeaturedItemsDefaultTypeInternal _CMsgDOTAFeaturedItems_default_instance_;
class CMsgDOTAFriendRecruitInviteAcceptDecline;
class CMsgDOTAFriendRecruitInviteAcceptDeclineDefaultTypeInternal;
extern CMsgDOTAFriendRecruitInviteAcceptDeclineDefaultTypeInternal _CMsgDOTAFriendRecruitInviteAcceptDecline_default_instance_;
class CMsgDOTAFriendRecruitsRequest;
class CMsgDOTAFriendRecruitsRequestDefaultTypeInternal;
extern CMsgDOTAFriendRecruitsRequestDefaultTypeInternal _CMsgDOTAFriendRecruitsRequest_default_instance_;
class CMsgDOTAFriendRecruitsResponse;
class CMsgDOTAFriendRecruitsResponseDefaultTypeInternal;
extern CMsgDOTAFriendRecruitsResponseDefaultTypeInternal _CMsgDOTAFriendRecruitsResponse_default_instance_;
class CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus;
class CMsgDOTAFriendRecruitsResponse_FriendRecruitStatusDefaultTypeInternal;
extern CMsgDOTAFriendRecruitsResponse_FriendRecruitStatusDefaultTypeInternal _CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus_default_instance_;
class CMsgDOTAGameAutographReward;
class CMsgDOTAGameAutographRewardDefaultTypeInternal;
extern CMsgDOTAGameAutographRewardDefaultTypeInternal _CMsgDOTAGameAutographReward_default_instance_;
class CMsgDOTAGameAutographRewardResponse;
class CMsgDOTAGameAutographRewardResponseDefaultTypeInternal;
extern CMsgDOTAGameAutographRewardResponseDefaultTypeInternal _CMsgDOTAGameAutographRewardResponse_default_instance_;
class CMsgDOTAGetDPCStandingsResponse;
class CMsgDOTAGetDPCStandingsResponseDefaultTypeInternal;
extern CMsgDOTAGetDPCStandingsResponseDefaultTypeInternal _CMsgDOTAGetDPCStandingsResponse_default_instance_;
class CMsgDOTAGetDPCStandingsResponse_TeamInfo;
class CMsgDOTAGetDPCStandingsResponse_TeamInfoDefaultTypeInternal;
extern CMsgDOTAGetDPCStandingsResponse_TeamInfoDefaultTypeInternal _CMsgDOTAGetDPCStandingsResponse_TeamInfo_default_instance_;
class CMsgDOTAGetEventPoints;
class CMsgDOTAGetEventPointsDefaultTypeInternal;
extern CMsgDOTAGetEventPointsDefaultTypeInternal _CMsgDOTAGetEventPoints_default_instance_;
class CMsgDOTAGetEventPointsResponse;
class CMsgDOTAGetEventPointsResponseDefaultTypeInternal;
extern CMsgDOTAGetEventPointsResponseDefaultTypeInternal _CMsgDOTAGetEventPointsResponse_default_instance_;
class CMsgDOTAGetEventPointsResponse_Action;
class CMsgDOTAGetEventPointsResponse_ActionDefaultTypeInternal;
extern CMsgDOTAGetEventPointsResponse_ActionDefaultTypeInternal _CMsgDOTAGetEventPointsResponse_Action_default_instance_;
class CMsgDOTAGetPeriodicResource;
class CMsgDOTAGetPeriodicResourceDefaultTypeInternal;
extern CMsgDOTAGetPeriodicResourceDefaultTypeInternal _CMsgDOTAGetPeriodicResource_default_instance_;
class CMsgDOTAGetPeriodicResourceResponse;
class CMsgDOTAGetPeriodicResourceResponseDefaultTypeInternal;
extern CMsgDOTAGetPeriodicResourceResponseDefaultTypeInternal _CMsgDOTAGetPeriodicResourceResponse_default_instance_;
class CMsgDOTAGetPlayerMatchHistory;
class CMsgDOTAGetPlayerMatchHistoryDefaultTypeInternal;
extern CMsgDOTAGetPlayerMatchHistoryDefaultTypeInternal _CMsgDOTAGetPlayerMatchHistory_default_instance_;
class CMsgDOTAGetPlayerMatchHistoryResponse;
class CMsgDOTAGetPlayerMatchHistoryResponseDefaultTypeInternal;
extern CMsgDOTAGetPlayerMatchHistoryResponseDefaultTypeInternal _CMsgDOTAGetPlayerMatchHistoryResponse_default_instance_;
class CMsgDOTAGetPlayerMatchHistoryResponse_Match;
class CMsgDOTAGetPlayerMatchHistoryResponse_MatchDefaultTypeInternal;
extern CMsgDOTAGetPlayerMatchHistoryResponse_MatchDefaultTypeInternal _CMsgDOTAGetPlayerMatchHistoryResponse_Match_default_instance_;
class CMsgDOTAGetRecentPlayTimeFriendsRequest;
class CMsgDOTAGetRecentPlayTimeFriendsRequestDefaultTypeInternal;
extern CMsgDOTAGetRecentPlayTimeFriendsRequestDefaultTypeInternal _CMsgDOTAGetRecentPlayTimeFriendsRequest_default_instance_;
class CMsgDOTAGetRecentPlayTimeFriendsResponse;
class CMsgDOTAGetRecentPlayTimeFriendsResponseDefaultTypeInternal;
extern CMsgDOTAGetRecentPlayTimeFriendsResponseDefaultTypeInternal _CMsgDOTAGetRecentPlayTimeFriendsResponse_default_instance_;
class CMsgDOTAHallOfFame;
class CMsgDOTAHallOfFameDefaultTypeInternal;
extern CMsgDOTAHallOfFameDefaultTypeInternal _CMsgDOTAHallOfFame_default_instance_;
class CMsgDOTAHallOfFameRequest;
class CMsgDOTAHallOfFameRequestDefaultTypeInternal;
extern CMsgDOTAHallOfFameRequestDefaultTypeInternal _CMsgDOTAHallOfFameRequest_default_instance_;
class CMsgDOTAHallOfFameResponse;
class CMsgDOTAHallOfFameResponseDefaultTypeInternal;
extern CMsgDOTAHallOfFameResponseDefaultTypeInternal _CMsgDOTAHallOfFameResponse_default_instance_;
class CMsgDOTAHallOfFame_FeaturedFarmer;
class CMsgDOTAHallOfFame_FeaturedFarmerDefaultTypeInternal;
extern CMsgDOTAHallOfFame_FeaturedFarmerDefaultTypeInternal _CMsgDOTAHallOfFame_FeaturedFarmer_default_instance_;
class CMsgDOTAHallOfFame_FeaturedPlayer;
class CMsgDOTAHallOfFame_FeaturedPlayerDefaultTypeInternal;
extern CMsgDOTAHallOfFame_FeaturedPlayerDefaultTypeInternal _CMsgDOTAHallOfFame_FeaturedPlayer_default_instance_;
class CMsgDOTAHalloweenHighScoreRequest;
class CMsgDOTAHalloweenHighScoreRequestDefaultTypeInternal;
extern CMsgDOTAHalloweenHighScoreRequestDefaultTypeInternal _CMsgDOTAHalloweenHighScoreRequest_default_instance_;
class CMsgDOTAHalloweenHighScoreResponse;
class CMsgDOTAHalloweenHighScoreResponseDefaultTypeInternal;
extern CMsgDOTAHalloweenHighScoreResponseDefaultTypeInternal _CMsgDOTAHalloweenHighScoreResponse_default_instance_;
class CMsgDOTAHeroFavoritesAdd;
class CMsgDOTAHeroFavoritesAddDefaultTypeInternal;
extern CMsgDOTAHeroFavoritesAddDefaultTypeInternal _CMsgDOTAHeroFavoritesAdd_default_instance_;
class CMsgDOTAHeroFavoritesRemove;
class CMsgDOTAHeroFavoritesRemoveDefaultTypeInternal;
extern CMsgDOTAHeroFavoritesRemoveDefaultTypeInternal _CMsgDOTAHeroFavoritesRemove_default_instance_;
class CMsgDOTAKickedFromMatchmakingQueue;
class CMsgDOTAKickedFromMatchmakingQueueDefaultTypeInternal;
extern CMsgDOTAKickedFromMatchmakingQueueDefaultTypeInternal _CMsgDOTAKickedFromMatchmakingQueue_default_instance_;
class CMsgDOTALastHitChallengeHighScorePost;
class CMsgDOTALastHitChallengeHighScorePostDefaultTypeInternal;
extern CMsgDOTALastHitChallengeHighScorePostDefaultTypeInternal _CMsgDOTALastHitChallengeHighScorePost_default_instance_;
class CMsgDOTALastHitChallengeHighScoreRequest;
class CMsgDOTALastHitChallengeHighScoreRequestDefaultTypeInternal;
extern CMsgDOTALastHitChallengeHighScoreRequestDefaultTypeInternal _CMsgDOTALastHitChallengeHighScoreRequest_default_instance_;
class CMsgDOTALastHitChallengeHighScoreResponse;
class CMsgDOTALastHitChallengeHighScoreResponseDefaultTypeInternal;
extern CMsgDOTALastHitChallengeHighScoreResponseDefaultTypeInternal _CMsgDOTALastHitChallengeHighScoreResponse_default_instance_;
class CMsgDOTALiveLeagueGameUpdate;
class CMsgDOTALiveLeagueGameUpdateDefaultTypeInternal;
extern CMsgDOTALiveLeagueGameUpdateDefaultTypeInternal _CMsgDOTALiveLeagueGameUpdate_default_instance_;
class CMsgDOTALobbyMVPAwarded;
class CMsgDOTALobbyMVPAwardedDefaultTypeInternal;
extern CMsgDOTALobbyMVPAwardedDefaultTypeInternal _CMsgDOTALobbyMVPAwarded_default_instance_;
class CMsgDOTALobbyMVPNotifyRecipient;
class CMsgDOTALobbyMVPNotifyRecipientDefaultTypeInternal;
extern CMsgDOTALobbyMVPNotifyRecipientDefaultTypeInternal _CMsgDOTALobbyMVPNotifyRecipient_default_instance_;
class CMsgDOTALobbyRichPresence;
class CMsgDOTALobbyRichPresenceDefaultTypeInternal;
extern CMsgDOTALobbyRichPresenceDefaultTypeInternal _CMsgDOTALobbyRichPresence_default_instance_;
class CMsgDOTAMatchHistoryFilter;
class CMsgDOTAMatchHistoryFilterDefaultTypeInternal;
extern CMsgDOTAMatchHistoryFilterDefaultTypeInternal _CMsgDOTAMatchHistoryFilter_default_instance_;
class CMsgDOTAMatchVotes;
class CMsgDOTAMatchVotesDefaultTypeInternal;
extern CMsgDOTAMatchVotesDefaultTypeInternal _CMsgDOTAMatchVotes_default_instance_;
class CMsgDOTAMatchVotes_PlayerVote;
class CMsgDOTAMatchVotes_PlayerVoteDefaultTypeInternal;
extern CMsgDOTAMatchVotes_PlayerVoteDefaultTypeInternal _CMsgDOTAMatchVotes_PlayerVote_default_instance_;
class CMsgDOTAMatchmakingStatsRequest;
class CMsgDOTAMatchmakingStatsRequestDefaultTypeInternal;
extern CMsgDOTAMatchmakingStatsRequestDefaultTypeInternal _CMsgDOTAMatchmakingStatsRequest_default_instance_;
class CMsgDOTAMatchmakingStatsResponse;
class CMsgDOTAMatchmakingStatsResponseDefaultTypeInternal;
extern CMsgDOTAMatchmakingStatsResponseDefaultTypeInternal _CMsgDOTAMatchmakingStatsResponse_default_instance_;
class CMsgDOTAMutationList;
class CMsgDOTAMutationListDefaultTypeInternal;
extern CMsgDOTAMutationListDefaultTypeInternal _CMsgDOTAMutationList_default_instance_;
class CMsgDOTAMutationList_Mutation;
class CMsgDOTAMutationList_MutationDefaultTypeInternal;
extern CMsgDOTAMutationList_MutationDefaultTypeInternal _CMsgDOTAMutationList_Mutation_default_instance_;
class CMsgDOTANotifyAccountFlagsChange;
class CMsgDOTANotifyAccountFlagsChangeDefaultTypeInternal;
extern CMsgDOTANotifyAccountFlagsChangeDefaultTypeInternal _CMsgDOTANotifyAccountFlagsChange_default_instance_;
class CMsgDOTAPCBangTimedReward;
class CMsgDOTAPCBangTimedRewardDefaultTypeInternal;
extern CMsgDOTAPCBangTimedRewardDefaultTypeInternal _CMsgDOTAPCBangTimedReward_default_instance_;
class CMsgDOTAPartyRichPresence;
class CMsgDOTAPartyRichPresenceDefaultTypeInternal;
extern CMsgDOTAPartyRichPresenceDefaultTypeInternal _CMsgDOTAPartyRichPresence_default_instance_;
class CMsgDOTAPartyRichPresence_Member;
class CMsgDOTAPartyRichPresence_MemberDefaultTypeInternal;
extern CMsgDOTAPartyRichPresence_MemberDefaultTypeInternal _CMsgDOTAPartyRichPresence_Member_default_instance_;
class CMsgDOTAPartyRichPresence_WeekendTourney;
class CMsgDOTAPartyRichPresence_WeekendTourneyDefaultTypeInternal;
extern CMsgDOTAPartyRichPresence_WeekendTourneyDefaultTypeInternal _CMsgDOTAPartyRichPresence_WeekendTourney_default_instance_;
class CMsgDOTAPeriodicResourceUpdated;
class CMsgDOTAPeriodicResourceUpdatedDefaultTypeInternal;
extern CMsgDOTAPeriodicResourceUpdatedDefaultTypeInternal _CMsgDOTAPeriodicResourceUpdated_default_instance_;
class CMsgDOTAPlayerMatchHistory;
class CMsgDOTAPlayerMatchHistoryDefaultTypeInternal;
extern CMsgDOTAPlayerMatchHistoryDefaultTypeInternal _CMsgDOTAPlayerMatchHistory_default_instance_;
class CMsgDOTAPopup;
class CMsgDOTAPopupDefaultTypeInternal;
extern CMsgDOTAPopupDefaultTypeInternal _CMsgDOTAPopup_default_instance_;
class CMsgDOTAProfileTickets;
class CMsgDOTAProfileTicketsDefaultTypeInternal;
extern CMsgDOTAProfileTicketsDefaultTypeInternal _CMsgDOTAProfileTickets_default_instance_;
class CMsgDOTAProfileTickets_LeaguePass;
class CMsgDOTAProfileTickets_LeaguePassDefaultTypeInternal;
extern CMsgDOTAProfileTickets_LeaguePassDefaultTypeInternal _CMsgDOTAProfileTickets_LeaguePass_default_instance_;
class CMsgDOTARedeemItem;
class CMsgDOTARedeemItemDefaultTypeInternal;
extern CMsgDOTARedeemItemDefaultTypeInternal _CMsgDOTARedeemItem_default_instance_;
class CMsgDOTARedeemItemResponse;
class CMsgDOTARedeemItemResponseDefaultTypeInternal;
extern CMsgDOTARedeemItemResponseDefaultTypeInternal _CMsgDOTARedeemItemResponse_default_instance_;
class CMsgDOTAReportCountsRequest;
class CMsgDOTAReportCountsRequestDefaultTypeInternal;
extern CMsgDOTAReportCountsRequestDefaultTypeInternal _CMsgDOTAReportCountsRequest_default_instance_;
class CMsgDOTAReportCountsResponse;
class CMsgDOTAReportCountsResponseDefaultTypeInternal;
extern CMsgDOTAReportCountsResponseDefaultTypeInternal _CMsgDOTAReportCountsResponse_default_instance_;
class CMsgDOTAReportsRemainingRequest;
class CMsgDOTAReportsRemainingRequestDefaultTypeInternal;
extern CMsgDOTAReportsRemainingRequestDefaultTypeInternal _CMsgDOTAReportsRemainingRequest_default_instance_;
class CMsgDOTAReportsRemainingResponse;
class CMsgDOTAReportsRemainingResponseDefaultTypeInternal;
extern CMsgDOTAReportsRemainingResponseDefaultTypeInternal _CMsgDOTAReportsRemainingResponse_default_instance_;
class CMsgDOTARequestMatches;
class CMsgDOTARequestMatchesDefaultTypeInternal;
extern CMsgDOTARequestMatchesDefaultTypeInternal _CMsgDOTARequestMatches_default_instance_;
class CMsgDOTARequestMatchesResponse;
class CMsgDOTARequestMatchesResponseDefaultTypeInternal;
extern CMsgDOTARequestMatchesResponseDefaultTypeInternal _CMsgDOTARequestMatchesResponse_default_instance_;
class CMsgDOTARequestMatchesResponse_Series;
class CMsgDOTARequestMatchesResponse_SeriesDefaultTypeInternal;
extern CMsgDOTARequestMatchesResponse_SeriesDefaultTypeInternal _CMsgDOTARequestMatchesResponse_Series_default_instance_;
class CMsgDOTARequestSaveGames;
class CMsgDOTARequestSaveGamesDefaultTypeInternal;
extern CMsgDOTARequestSaveGamesDefaultTypeInternal _CMsgDOTARequestSaveGames_default_instance_;
class CMsgDOTARequestSaveGamesResponse;
class CMsgDOTARequestSaveGamesResponseDefaultTypeInternal;
extern CMsgDOTARequestSaveGamesResponseDefaultTypeInternal _CMsgDOTARequestSaveGamesResponse_default_instance_;
class CMsgDOTARewardTutorialPrizes;
class CMsgDOTARewardTutorialPrizesDefaultTypeInternal;
extern CMsgDOTARewardTutorialPrizesDefaultTypeInternal _CMsgDOTARewardTutorialPrizes_default_instance_;
class CMsgDOTASelectionPriorityChoiceRequest;
class CMsgDOTASelectionPriorityChoiceRequestDefaultTypeInternal;
extern CMsgDOTASelectionPriorityChoiceRequestDefaultTypeInternal _CMsgDOTASelectionPriorityChoiceRequest_default_instance_;
class CMsgDOTASelectionPriorityChoiceResponse;
class CMsgDOTASelectionPriorityChoiceResponseDefaultTypeInternal;
extern CMsgDOTASelectionPriorityChoiceResponseDefaultTypeInternal _CMsgDOTASelectionPriorityChoiceResponse_default_instance_;
class CMsgDOTASendFriendRecruits;
class CMsgDOTASendFriendRecruitsDefaultTypeInternal;
extern CMsgDOTASendFriendRecruitsDefaultTypeInternal _CMsgDOTASendFriendRecruits_default_instance_;
class CMsgDOTASetFavoriteTeam;
class CMsgDOTASetFavoriteTeamDefaultTypeInternal;
extern CMsgDOTASetFavoriteTeamDefaultTypeInternal _CMsgDOTASetFavoriteTeam_default_instance_;
class CMsgDOTASetMatchHistoryAccess;
class CMsgDOTASetMatchHistoryAccessDefaultTypeInternal;
extern CMsgDOTASetMatchHistoryAccessDefaultTypeInternal _CMsgDOTASetMatchHistoryAccess_default_instance_;
class CMsgDOTASetMatchHistoryAccessResponse;
class CMsgDOTASetMatchHistoryAccessResponseDefaultTypeInternal;
extern CMsgDOTASetMatchHistoryAccessResponseDefaultTypeInternal _CMsgDOTASetMatchHistoryAccessResponse_default_instance_;
class CMsgDOTASetProfilePrivacy;
class CMsgDOTASetProfilePrivacyDefaultTypeInternal;
extern CMsgDOTASetProfilePrivacyDefaultTypeInternal _CMsgDOTASetProfilePrivacy_default_instance_;
class CMsgDOTASetProfilePrivacyResponse;
class CMsgDOTASetProfilePrivacyResponseDefaultTypeInternal;
extern CMsgDOTASetProfilePrivacyResponseDefaultTypeInternal _CMsgDOTASetProfilePrivacyResponse_default_instance_;
class CMsgDOTAStartDailyHeroChallenge;
class CMsgDOTAStartDailyHeroChallengeDefaultTypeInternal;
extern CMsgDOTAStartDailyHeroChallengeDefaultTypeInternal _CMsgDOTAStartDailyHeroChallenge_default_instance_;
class CMsgDOTAStartTriviaSession;
class CMsgDOTAStartTriviaSessionDefaultTypeInternal;
extern CMsgDOTAStartTriviaSessionDefaultTypeInternal _CMsgDOTAStartTriviaSession_default_instance_;
class CMsgDOTAStartTriviaSessionResponse;
class CMsgDOTAStartTriviaSessionResponseDefaultTypeInternal;
extern CMsgDOTAStartTriviaSessionResponseDefaultTypeInternal _CMsgDOTAStartTriviaSessionResponse_default_instance_;
class CMsgDOTAStorePromoPagesRequest;
class CMsgDOTAStorePromoPagesRequestDefaultTypeInternal;
extern CMsgDOTAStorePromoPagesRequestDefaultTypeInternal _CMsgDOTAStorePromoPagesRequest_default_instance_;
class CMsgDOTAStorePromoPagesResponse;
class CMsgDOTAStorePromoPagesResponseDefaultTypeInternal;
extern CMsgDOTAStorePromoPagesResponseDefaultTypeInternal _CMsgDOTAStorePromoPagesResponse_default_instance_;
class CMsgDOTAStorePromoPagesResponse_PromoPage;
class CMsgDOTAStorePromoPagesResponse_PromoPageDefaultTypeInternal;
extern CMsgDOTAStorePromoPagesResponse_PromoPageDefaultTypeInternal _CMsgDOTAStorePromoPagesResponse_PromoPage_default_instance_;
class CMsgDOTASubmitLobbyMVPVote;
class CMsgDOTASubmitLobbyMVPVoteDefaultTypeInternal;
extern CMsgDOTASubmitLobbyMVPVoteDefaultTypeInternal _CMsgDOTASubmitLobbyMVPVote_default_instance_;
class CMsgDOTASubmitLobbyMVPVoteResponse;
class CMsgDOTASubmitLobbyMVPVoteResponseDefaultTypeInternal;
extern CMsgDOTASubmitLobbyMVPVoteResponseDefaultTypeInternal _CMsgDOTASubmitLobbyMVPVoteResponse_default_instance_;
class CMsgDOTASubmitPlayerReport;
class CMsgDOTASubmitPlayerReportDefaultTypeInternal;
extern CMsgDOTASubmitPlayerReportDefaultTypeInternal _CMsgDOTASubmitPlayerReport_default_instance_;
class CMsgDOTASubmitPlayerReportResponse;
class CMsgDOTASubmitPlayerReportResponseDefaultTypeInternal;
extern CMsgDOTASubmitPlayerReportResponseDefaultTypeInternal _CMsgDOTASubmitPlayerReportResponse_default_instance_;
class CMsgDOTASubmitTriviaQuestionAnswer;
class CMsgDOTASubmitTriviaQuestionAnswerDefaultTypeInternal;
extern CMsgDOTASubmitTriviaQuestionAnswerDefaultTypeInternal _CMsgDOTASubmitTriviaQuestionAnswer_default_instance_;
class CMsgDOTASubmitTriviaQuestionAnswerResponse;
class CMsgDOTASubmitTriviaQuestionAnswerResponseDefaultTypeInternal;
extern CMsgDOTASubmitTriviaQuestionAnswerResponseDefaultTypeInternal _CMsgDOTASubmitTriviaQuestionAnswerResponse_default_instance_;
class CMsgDOTATriviaCurrentQuestions;
class CMsgDOTATriviaCurrentQuestionsDefaultTypeInternal;
extern CMsgDOTATriviaCurrentQuestionsDefaultTypeInternal _CMsgDOTATriviaCurrentQuestions_default_instance_;
class CMsgDOTATriviaQuestion;
class CMsgDOTATriviaQuestionDefaultTypeInternal;
extern CMsgDOTATriviaQuestionDefaultTypeInternal _CMsgDOTATriviaQuestion_default_instance_;
class CMsgDOTATriviaQuestionAnswersSummary;
class CMsgDOTATriviaQuestionAnswersSummaryDefaultTypeInternal;
extern CMsgDOTATriviaQuestionAnswersSummaryDefaultTypeInternal _CMsgDOTATriviaQuestionAnswersSummary_default_instance_;
class CMsgDOTAUnanchorPhoneNumberRequest;
class CMsgDOTAUnanchorPhoneNumberRequestDefaultTypeInternal;
extern CMsgDOTAUnanchorPhoneNumberRequestDefaultTypeInternal _CMsgDOTAUnanchorPhoneNumberRequest_default_instance_;
class CMsgDOTAUnanchorPhoneNumberResponse;
class CMsgDOTAUnanchorPhoneNumberResponseDefaultTypeInternal;
extern CMsgDOTAUnanchorPhoneNumberResponseDefaultTypeInternal _CMsgDOTAUnanchorPhoneNumberResponse_default_instance_;
class CMsgDOTAUpdateMatchManagementStats;
class CMsgDOTAUpdateMatchManagementStatsDefaultTypeInternal;
extern CMsgDOTAUpdateMatchManagementStatsDefaultTypeInternal _CMsgDOTAUpdateMatchManagementStats_default_instance_;
class CMsgDOTAUpdateMatchmakingStats;
class CMsgDOTAUpdateMatchmakingStatsDefaultTypeInternal;
extern CMsgDOTAUpdateMatchmakingStatsDefaultTypeInternal _CMsgDOTAUpdateMatchmakingStats_default_instance_;
class CMsgDOTAWelcome;
class CMsgDOTAWelcomeDefaultTypeInternal;
extern CMsgDOTAWelcomeDefaultTypeInternal _CMsgDOTAWelcome_default_instance_;
class CMsgDOTAWelcome_CExtraMsg;
class CMsgDOTAWelcome_CExtraMsgDefaultTypeInternal;
extern CMsgDOTAWelcome_CExtraMsgDefaultTypeInternal _CMsgDOTAWelcome_CExtraMsg_default_instance_;
class CMsgEventGoals;
class CMsgEventGoalsDefaultTypeInternal;
extern CMsgEventGoalsDefaultTypeInternal _CMsgEventGoals_default_instance_;
class CMsgEventGoals_EventGoal;
class CMsgEventGoals_EventGoalDefaultTypeInternal;
extern CMsgEventGoals_EventGoalDefaultTypeInternal _CMsgEventGoals_EventGoal_default_instance_;
class CMsgEventTipsSummaryRequest;
class CMsgEventTipsSummaryRequestDefaultTypeInternal;
extern CMsgEventTipsSummaryRequestDefaultTypeInternal _CMsgEventTipsSummaryRequest_default_instance_;
class CMsgEventTipsSummaryResponse;
class CMsgEventTipsSummaryResponseDefaultTypeInternal;
extern CMsgEventTipsSummaryResponseDefaultTypeInternal _CMsgEventTipsSummaryResponse_default_instance_;
class CMsgEventTipsSummaryResponse_Tipper;
class CMsgEventTipsSummaryResponse_TipperDefaultTypeInternal;
extern CMsgEventTipsSummaryResponse_TipperDefaultTypeInternal _CMsgEventTipsSummaryResponse_Tipper_default_instance_;
class CMsgFlipLobbyTeams;
class CMsgFlipLobbyTeamsDefaultTypeInternal;
extern CMsgFlipLobbyTeamsDefaultTypeInternal _CMsgFlipLobbyTeams_default_instance_;
class CMsgGCGetHeroStandings;
class CMsgGCGetHeroStandingsDefaultTypeInternal;
extern CMsgGCGetHeroStandingsDefaultTypeInternal _CMsgGCGetHeroStandings_default_instance_;
class CMsgGCGetHeroStandingsResponse;
class CMsgGCGetHeroStandingsResponseDefaultTypeInternal;
extern CMsgGCGetHeroStandingsResponseDefaultTypeInternal _CMsgGCGetHeroStandingsResponse_default_instance_;
class CMsgGCGetHeroStandingsResponse_Hero;
class CMsgGCGetHeroStandingsResponse_HeroDefaultTypeInternal;
extern CMsgGCGetHeroStandingsResponse_HeroDefaultTypeInternal _CMsgGCGetHeroStandingsResponse_Hero_default_instance_;
class CMsgGCGetHeroStatsHistory;
class CMsgGCGetHeroStatsHistoryDefaultTypeInternal;
extern CMsgGCGetHeroStatsHistoryDefaultTypeInternal _CMsgGCGetHeroStatsHistory_default_instance_;
class CMsgGCGetHeroStatsHistoryResponse;
class CMsgGCGetHeroStatsHistoryResponseDefaultTypeInternal;
extern CMsgGCGetHeroStatsHistoryResponseDefaultTypeInternal _CMsgGCGetHeroStatsHistoryResponse_default_instance_;
class CMsgGCGetHeroTimedStats;
class CMsgGCGetHeroTimedStatsDefaultTypeInternal;
extern CMsgGCGetHeroTimedStatsDefaultTypeInternal _CMsgGCGetHeroTimedStats_default_instance_;
class CMsgGCGetHeroTimedStatsResponse;
class CMsgGCGetHeroTimedStatsResponseDefaultTypeInternal;
extern CMsgGCGetHeroTimedStatsResponseDefaultTypeInternal _CMsgGCGetHeroTimedStatsResponse_default_instance_;
class CMsgGCGetHeroTimedStatsResponse_RankChunkedStats;
class CMsgGCGetHeroTimedStatsResponse_RankChunkedStatsDefaultTypeInternal;
extern CMsgGCGetHeroTimedStatsResponse_RankChunkedStatsDefaultTypeInternal _CMsgGCGetHeroTimedStatsResponse_RankChunkedStats_default_instance_;
class CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer;
class CMsgGCGetHeroTimedStatsResponse_TimedStatsContainerDefaultTypeInternal;
extern CMsgGCGetHeroTimedStatsResponse_TimedStatsContainerDefaultTypeInternal _CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer_default_instance_;
class CMsgGCItemEditorReleaseReservation;
class CMsgGCItemEditorReleaseReservationDefaultTypeInternal;
extern CMsgGCItemEditorReleaseReservationDefaultTypeInternal _CMsgGCItemEditorReleaseReservation_default_instance_;
class CMsgGCItemEditorReleaseReservationResponse;
class CMsgGCItemEditorReleaseReservationResponseDefaultTypeInternal;
extern CMsgGCItemEditorReleaseReservationResponseDefaultTypeInternal _CMsgGCItemEditorReleaseReservationResponse_default_instance_;
class CMsgGCItemEditorReservation;
class CMsgGCItemEditorReservationDefaultTypeInternal;
extern CMsgGCItemEditorReservationDefaultTypeInternal _CMsgGCItemEditorReservation_default_instance_;
class CMsgGCItemEditorReservationsRequest;
class CMsgGCItemEditorReservationsRequestDefaultTypeInternal;
extern CMsgGCItemEditorReservationsRequestDefaultTypeInternal _CMsgGCItemEditorReservationsRequest_default_instance_;
class CMsgGCItemEditorReservationsResponse;
class CMsgGCItemEditorReservationsResponseDefaultTypeInternal;
extern CMsgGCItemEditorReservationsResponseDefaultTypeInternal _CMsgGCItemEditorReservationsResponse_default_instance_;
class CMsgGCItemEditorReserveItemDef;
class CMsgGCItemEditorReserveItemDefDefaultTypeInternal;
extern CMsgGCItemEditorReserveItemDefDefaultTypeInternal _CMsgGCItemEditorReserveItemDef_default_instance_;
class CMsgGCItemEditorReserveItemDefResponse;
class CMsgGCItemEditorReserveItemDefResponseDefaultTypeInternal;
extern CMsgGCItemEditorReserveItemDefResponseDefaultTypeInternal _CMsgGCItemEditorReserveItemDefResponse_default_instance_;
class CMsgGCLobbyUpdateBroadcastChannelInfo;
class CMsgGCLobbyUpdateBroadcastChannelInfoDefaultTypeInternal;
extern CMsgGCLobbyUpdateBroadcastChannelInfoDefaultTypeInternal _CMsgGCLobbyUpdateBroadcastChannelInfo_default_instance_;
class CMsgGCMatchDetailsRequest;
class CMsgGCMatchDetailsRequestDefaultTypeInternal;
extern CMsgGCMatchDetailsRequestDefaultTypeInternal _CMsgGCMatchDetailsRequest_default_instance_;
class CMsgGCMatchDetailsResponse;
class CMsgGCMatchDetailsResponseDefaultTypeInternal;
extern CMsgGCMatchDetailsResponseDefaultTypeInternal _CMsgGCMatchDetailsResponse_default_instance_;
class CMsgGCNotificationsMarkReadRequest;
class CMsgGCNotificationsMarkReadRequestDefaultTypeInternal;
extern CMsgGCNotificationsMarkReadRequestDefaultTypeInternal _CMsgGCNotificationsMarkReadRequest_default_instance_;
class CMsgGCNotificationsRequest;
class CMsgGCNotificationsRequestDefaultTypeInternal;
extern CMsgGCNotificationsRequestDefaultTypeInternal _CMsgGCNotificationsRequest_default_instance_;
class CMsgGCNotificationsResponse;
class CMsgGCNotificationsResponseDefaultTypeInternal;
extern CMsgGCNotificationsResponseDefaultTypeInternal _CMsgGCNotificationsResponse_default_instance_;
class CMsgGCNotificationsResponse_Notification;
class CMsgGCNotificationsResponse_NotificationDefaultTypeInternal;
extern CMsgGCNotificationsResponse_NotificationDefaultTypeInternal _CMsgGCNotificationsResponse_Notification_default_instance_;
class CMsgGCPlayerInfoRequest;
class CMsgGCPlayerInfoRequestDefaultTypeInternal;
extern CMsgGCPlayerInfoRequestDefaultTypeInternal _CMsgGCPlayerInfoRequest_default_instance_;
class CMsgGCPlayerInfoRequest_PlayerInfo;
class CMsgGCPlayerInfoRequest_PlayerInfoDefaultTypeInternal;
extern CMsgGCPlayerInfoRequest_PlayerInfoDefaultTypeInternal _CMsgGCPlayerInfoRequest_PlayerInfo_default_instance_;
class CMsgGCPlayerInfoSubmit;
class CMsgGCPlayerInfoSubmitDefaultTypeInternal;
extern CMsgGCPlayerInfoSubmitDefaultTypeInternal _CMsgGCPlayerInfoSubmit_default_instance_;
class CMsgGCPlayerInfoSubmitResponse;
class CMsgGCPlayerInfoSubmitResponseDefaultTypeInternal;
extern CMsgGCPlayerInfoSubmitResponseDefaultTypeInternal _CMsgGCPlayerInfoSubmitResponse_default_instance_;
class CMsgGCRequestItemRecommendations;
class CMsgGCRequestItemRecommendationsDefaultTypeInternal;
extern CMsgGCRequestItemRecommendationsDefaultTypeInternal _CMsgGCRequestItemRecommendations_default_instance_;
class CMsgGCRequestItemRecommendationsResponse;
class CMsgGCRequestItemRecommendationsResponseDefaultTypeInternal;
extern CMsgGCRequestItemRecommendationsResponseDefaultTypeInternal _CMsgGCRequestItemRecommendationsResponse_default_instance_;
class CMsgGCRequestSkillUpRecommendations;
class CMsgGCRequestSkillUpRecommendationsDefaultTypeInternal;
extern CMsgGCRequestSkillUpRecommendationsDefaultTypeInternal _CMsgGCRequestSkillUpRecommendations_default_instance_;
class CMsgGCRequestSkillUpRecommendationsResponse;
class CMsgGCRequestSkillUpRecommendationsResponseDefaultTypeInternal;
extern CMsgGCRequestSkillUpRecommendationsResponseDefaultTypeInternal _CMsgGCRequestSkillUpRecommendationsResponse_default_instance_;
class CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection;
class CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelectionDefaultTypeInternal;
extern CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelectionDefaultTypeInternal _CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection_default_instance_;
class CMsgGCToClientAllStarVotesReply;
class CMsgGCToClientAllStarVotesReplyDefaultTypeInternal;
extern CMsgGCToClientAllStarVotesReplyDefaultTypeInternal _CMsgGCToClientAllStarVotesReply_default_instance_;
class CMsgGCToClientAllStarVotesRequest;
class CMsgGCToClientAllStarVotesRequestDefaultTypeInternal;
extern CMsgGCToClientAllStarVotesRequestDefaultTypeInternal _CMsgGCToClientAllStarVotesRequest_default_instance_;
class CMsgGCToClientAllStarVotesSubmit;
class CMsgGCToClientAllStarVotesSubmitDefaultTypeInternal;
extern CMsgGCToClientAllStarVotesSubmitDefaultTypeInternal _CMsgGCToClientAllStarVotesSubmit_default_instance_;
class CMsgGCToClientAllStarVotesSubmitReply;
class CMsgGCToClientAllStarVotesSubmitReplyDefaultTypeInternal;
extern CMsgGCToClientAllStarVotesSubmitReplyDefaultTypeInternal _CMsgGCToClientAllStarVotesSubmitReply_default_instance_;
class CMsgGCToClientArcanaVotesUpdate;
class CMsgGCToClientArcanaVotesUpdateDefaultTypeInternal;
extern CMsgGCToClientArcanaVotesUpdateDefaultTypeInternal _CMsgGCToClientArcanaVotesUpdate_default_instance_;
class CMsgGCToClientBattlePassRollupListRequest;
class CMsgGCToClientBattlePassRollupListRequestDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollupListRequestDefaultTypeInternal _CMsgGCToClientBattlePassRollupListRequest_default_instance_;
class CMsgGCToClientBattlePassRollupListResponse;
class CMsgGCToClientBattlePassRollupListResponseDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollupListResponseDefaultTypeInternal _CMsgGCToClientBattlePassRollupListResponse_default_instance_;
class CMsgGCToClientBattlePassRollupListResponse_EventInfo;
class CMsgGCToClientBattlePassRollupListResponse_EventInfoDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollupListResponse_EventInfoDefaultTypeInternal _CMsgGCToClientBattlePassRollupListResponse_EventInfo_default_instance_;
class CMsgGCToClientBattlePassRollupRequest;
class CMsgGCToClientBattlePassRollupRequestDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollupRequestDefaultTypeInternal _CMsgGCToClientBattlePassRollupRequest_default_instance_;
class CMsgGCToClientBattlePassRollupResponse;
class CMsgGCToClientBattlePassRollupResponseDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollupResponseDefaultTypeInternal _CMsgGCToClientBattlePassRollupResponse_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016;
class CMsgGCToClientBattlePassRollup_Fall2016DefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016DefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_Achievements;
class CMsgGCToClientBattlePassRollup_Fall2016_AchievementsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_AchievementsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_Achievements_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_BattleCup;
class CMsgGCToClientBattlePassRollup_Fall2016_BattleCupDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_BattleCupDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_BattleCup_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_Bracket;
class CMsgGCToClientBattlePassRollup_Fall2016_BracketDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_BracketDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_Bracket_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge;
class CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallengeDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallengeDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard;
class CMsgGCToClientBattlePassRollup_Fall2016_PlayerCardDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_PlayerCardDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_Predictions;
class CMsgGCToClientBattlePassRollup_Fall2016_PredictionsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_PredictionsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_Predictions_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_Questlines;
class CMsgGCToClientBattlePassRollup_Fall2016_QuestlinesDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_QuestlinesDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_Questlines_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_Wagering;
class CMsgGCToClientBattlePassRollup_Fall2016_WageringDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_WageringDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_Wagering_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016;
class CMsgGCToClientBattlePassRollup_International2016DefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016DefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_Achievements;
class CMsgGCToClientBattlePassRollup_International2016_AchievementsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_AchievementsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_Achievements_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_BattleCup;
class CMsgGCToClientBattlePassRollup_International2016_BattleCupDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_BattleCupDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_BattleCup_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_Bracket;
class CMsgGCToClientBattlePassRollup_International2016_BracketDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_BracketDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_Bracket_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge;
class CMsgGCToClientBattlePassRollup_International2016_FantasyChallengeDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_FantasyChallengeDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_PlayerCard;
class CMsgGCToClientBattlePassRollup_International2016_PlayerCardDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_PlayerCardDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_PlayerCard_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_Predictions;
class CMsgGCToClientBattlePassRollup_International2016_PredictionsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_PredictionsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_Predictions_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_Questlines;
class CMsgGCToClientBattlePassRollup_International2016_QuestlinesDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_QuestlinesDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_Questlines_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_Wagering;
class CMsgGCToClientBattlePassRollup_International2016_WageringDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_WageringDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_Wagering_default_instance_;
class CMsgGCToClientBattlePassRollup_TI7;
class CMsgGCToClientBattlePassRollup_TI7DefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI7DefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI7_default_instance_;
class CMsgGCToClientBattlePassRollup_TI7_Achievements;
class CMsgGCToClientBattlePassRollup_TI7_AchievementsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI7_AchievementsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI7_Achievements_default_instance_;
class CMsgGCToClientBattlePassRollup_TI7_BattleCup;
class CMsgGCToClientBattlePassRollup_TI7_BattleCupDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI7_BattleCupDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI7_BattleCup_default_instance_;
class CMsgGCToClientBattlePassRollup_TI7_Bracket;
class CMsgGCToClientBattlePassRollup_TI7_BracketDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI7_BracketDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI7_Bracket_default_instance_;
class CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge;
class CMsgGCToClientBattlePassRollup_TI7_FantasyChallengeDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI7_FantasyChallengeDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge_default_instance_;
class CMsgGCToClientBattlePassRollup_TI7_PlayerCard;
class CMsgGCToClientBattlePassRollup_TI7_PlayerCardDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI7_PlayerCardDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI7_PlayerCard_default_instance_;
class CMsgGCToClientBattlePassRollup_TI7_Predictions;
class CMsgGCToClientBattlePassRollup_TI7_PredictionsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI7_PredictionsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI7_Predictions_default_instance_;
class CMsgGCToClientBattlePassRollup_TI7_Questlines;
class CMsgGCToClientBattlePassRollup_TI7_QuestlinesDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI7_QuestlinesDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI7_Questlines_default_instance_;
class CMsgGCToClientBattlePassRollup_TI7_Wagering;
class CMsgGCToClientBattlePassRollup_TI7_WageringDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI7_WageringDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI7_Wagering_default_instance_;
class CMsgGCToClientBattlePassRollup_TI8;
class CMsgGCToClientBattlePassRollup_TI8DefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI8DefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI8_default_instance_;
class CMsgGCToClientBattlePassRollup_TI8_Achievements;
class CMsgGCToClientBattlePassRollup_TI8_AchievementsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI8_AchievementsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI8_Achievements_default_instance_;
class CMsgGCToClientBattlePassRollup_TI8_Bracket;
class CMsgGCToClientBattlePassRollup_TI8_BracketDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI8_BracketDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI8_Bracket_default_instance_;
class CMsgGCToClientBattlePassRollup_TI8_CavernCrawl;
class CMsgGCToClientBattlePassRollup_TI8_CavernCrawlDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI8_CavernCrawlDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI8_CavernCrawl_default_instance_;
class CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge;
class CMsgGCToClientBattlePassRollup_TI8_FantasyChallengeDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI8_FantasyChallengeDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge_default_instance_;
class CMsgGCToClientBattlePassRollup_TI8_PlayerCard;
class CMsgGCToClientBattlePassRollup_TI8_PlayerCardDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI8_PlayerCardDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI8_PlayerCard_default_instance_;
class CMsgGCToClientBattlePassRollup_TI8_Predictions;
class CMsgGCToClientBattlePassRollup_TI8_PredictionsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI8_PredictionsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI8_Predictions_default_instance_;
class CMsgGCToClientBattlePassRollup_TI8_Wagering;
class CMsgGCToClientBattlePassRollup_TI8_WageringDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_TI8_WageringDefaultTypeInternal _CMsgGCToClientBattlePassRollup_TI8_Wagering_default_instance_;
class CMsgGCToClientBattlePassRollup_Winter2017;
class CMsgGCToClientBattlePassRollup_Winter2017DefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Winter2017DefaultTypeInternal _CMsgGCToClientBattlePassRollup_Winter2017_default_instance_;
class CMsgGCToClientBattlePassRollup_Winter2017_Achievements;
class CMsgGCToClientBattlePassRollup_Winter2017_AchievementsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Winter2017_AchievementsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Winter2017_Achievements_default_instance_;
class CMsgGCToClientBattlePassRollup_Winter2017_BattleCup;
class CMsgGCToClientBattlePassRollup_Winter2017_BattleCupDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Winter2017_BattleCupDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Winter2017_BattleCup_default_instance_;
class CMsgGCToClientBattlePassRollup_Winter2017_Bracket;
class CMsgGCToClientBattlePassRollup_Winter2017_BracketDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Winter2017_BracketDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Winter2017_Bracket_default_instance_;
class CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge;
class CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallengeDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallengeDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge_default_instance_;
class CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard;
class CMsgGCToClientBattlePassRollup_Winter2017_PlayerCardDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Winter2017_PlayerCardDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard_default_instance_;
class CMsgGCToClientBattlePassRollup_Winter2017_Predictions;
class CMsgGCToClientBattlePassRollup_Winter2017_PredictionsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Winter2017_PredictionsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Winter2017_Predictions_default_instance_;
class CMsgGCToClientBattlePassRollup_Winter2017_Questlines;
class CMsgGCToClientBattlePassRollup_Winter2017_QuestlinesDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Winter2017_QuestlinesDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Winter2017_Questlines_default_instance_;
class CMsgGCToClientBattlePassRollup_Winter2017_Wagering;
class CMsgGCToClientBattlePassRollup_Winter2017_WageringDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Winter2017_WageringDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Winter2017_Wagering_default_instance_;
class CMsgGCToClientCavernCrawlMapPathCompleted;
class CMsgGCToClientCavernCrawlMapPathCompletedDefaultTypeInternal;
extern CMsgGCToClientCavernCrawlMapPathCompletedDefaultTypeInternal _CMsgGCToClientCavernCrawlMapPathCompleted_default_instance_;
class CMsgGCToClientCommendNotification;
class CMsgGCToClientCommendNotificationDefaultTypeInternal;
extern CMsgGCToClientCommendNotificationDefaultTypeInternal _CMsgGCToClientCommendNotification_default_instance_;
class CMsgGCToClientCustomGamePlayerCountResponse;
class CMsgGCToClientCustomGamePlayerCountResponseDefaultTypeInternal;
extern CMsgGCToClientCustomGamePlayerCountResponseDefaultTypeInternal _CMsgGCToClientCustomGamePlayerCountResponse_default_instance_;
class CMsgGCToClientCustomGamesFriendsPlayedResponse;
class CMsgGCToClientCustomGamesFriendsPlayedResponseDefaultTypeInternal;
extern CMsgGCToClientCustomGamesFriendsPlayedResponseDefaultTypeInternal _CMsgGCToClientCustomGamesFriendsPlayedResponse_default_instance_;
class CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame;
class CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGameDefaultTypeInternal;
extern CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGameDefaultTypeInternal _CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame_default_instance_;
class CMsgGCToClientEmoticonData;
class CMsgGCToClientEmoticonDataDefaultTypeInternal;
extern CMsgGCToClientEmoticonDataDefaultTypeInternal _CMsgGCToClientEmoticonData_default_instance_;
class CMsgGCToClientEventStatusChanged;
class CMsgGCToClientEventStatusChangedDefaultTypeInternal;
extern CMsgGCToClientEventStatusChangedDefaultTypeInternal _CMsgGCToClientEventStatusChanged_default_instance_;
class CMsgGCToClientFriendsPlayedCustomGameResponse;
class CMsgGCToClientFriendsPlayedCustomGameResponseDefaultTypeInternal;
extern CMsgGCToClientFriendsPlayedCustomGameResponseDefaultTypeInternal _CMsgGCToClientFriendsPlayedCustomGameResponse_default_instance_;
class CMsgGCToClientHeroStatueCreateResult;
class CMsgGCToClientHeroStatueCreateResultDefaultTypeInternal;
extern CMsgGCToClientHeroStatueCreateResultDefaultTypeInternal _CMsgGCToClientHeroStatueCreateResult_default_instance_;
class CMsgGCToClientMatchSignedOut;
class CMsgGCToClientMatchSignedOutDefaultTypeInternal;
extern CMsgGCToClientMatchSignedOutDefaultTypeInternal _CMsgGCToClientMatchSignedOut_default_instance_;
class CMsgGCToClientPlayerStatsResponse;
class CMsgGCToClientPlayerStatsResponseDefaultTypeInternal;
extern CMsgGCToClientPlayerStatsResponseDefaultTypeInternal _CMsgGCToClientPlayerStatsResponse_default_instance_;
class CMsgGCToClientPlaytestStatus;
class CMsgGCToClientPlaytestStatusDefaultTypeInternal;
extern CMsgGCToClientPlaytestStatusDefaultTypeInternal _CMsgGCToClientPlaytestStatus_default_instance_;
class CMsgGCToClientQuestProgressUpdated;
class CMsgGCToClientQuestProgressUpdatedDefaultTypeInternal;
extern CMsgGCToClientQuestProgressUpdatedDefaultTypeInternal _CMsgGCToClientQuestProgressUpdated_default_instance_;
class CMsgGCToClientQuestProgressUpdated_Challenge;
class CMsgGCToClientQuestProgressUpdated_ChallengeDefaultTypeInternal;
extern CMsgGCToClientQuestProgressUpdated_ChallengeDefaultTypeInternal _CMsgGCToClientQuestProgressUpdated_Challenge_default_instance_;
class CMsgGCToClientRecordContestVoteResponse;
class CMsgGCToClientRecordContestVoteResponseDefaultTypeInternal;
extern CMsgGCToClientRecordContestVoteResponseDefaultTypeInternal _CMsgGCToClientRecordContestVoteResponse_default_instance_;
class CMsgGCToClientSocialFeedPostCommentResponse;
class CMsgGCToClientSocialFeedPostCommentResponseDefaultTypeInternal;
extern CMsgGCToClientSocialFeedPostCommentResponseDefaultTypeInternal _CMsgGCToClientSocialFeedPostCommentResponse_default_instance_;
class CMsgGCToClientSocialFeedPostMessageResponse;
class CMsgGCToClientSocialFeedPostMessageResponseDefaultTypeInternal;
extern CMsgGCToClientSocialFeedPostMessageResponseDefaultTypeInternal _CMsgGCToClientSocialFeedPostMessageResponse_default_instance_;
class CMsgGCToClientSocialMatchDetailsResponse;
class CMsgGCToClientSocialMatchDetailsResponseDefaultTypeInternal;
extern CMsgGCToClientSocialMatchDetailsResponseDefaultTypeInternal _CMsgGCToClientSocialMatchDetailsResponse_default_instance_;
class CMsgGCToClientSocialMatchDetailsResponse_Comment;
class CMsgGCToClientSocialMatchDetailsResponse_CommentDefaultTypeInternal;
extern CMsgGCToClientSocialMatchDetailsResponse_CommentDefaultTypeInternal _CMsgGCToClientSocialMatchDetailsResponse_Comment_default_instance_;
class CMsgGCToClientSocialMatchPostCommentResponse;
class CMsgGCToClientSocialMatchPostCommentResponseDefaultTypeInternal;
extern CMsgGCToClientSocialMatchPostCommentResponseDefaultTypeInternal _CMsgGCToClientSocialMatchPostCommentResponse_default_instance_;
class CMsgGCToClientTipNotification;
class CMsgGCToClientTipNotificationDefaultTypeInternal;
extern CMsgGCToClientTipNotificationDefaultTypeInternal _CMsgGCToClientTipNotification_default_instance_;
class CMsgGCToClientTournamentItemDrop;
class CMsgGCToClientTournamentItemDropDefaultTypeInternal;
extern CMsgGCToClientTournamentItemDropDefaultTypeInternal _CMsgGCToClientTournamentItemDrop_default_instance_;
class CMsgGCToClientTrophyAwarded;
class CMsgGCToClientTrophyAwardedDefaultTypeInternal;
extern CMsgGCToClientTrophyAwardedDefaultTypeInternal _CMsgGCToClientTrophyAwarded_default_instance_;
class CMsgGCToClientWageringResponse;
class CMsgGCToClientWageringResponseDefaultTypeInternal;
extern CMsgGCToClientWageringResponseDefaultTypeInternal _CMsgGCToClientWageringResponse_default_instance_;
class CMsgGCToClientWageringUpdate;
class CMsgGCToClientWageringUpdateDefaultTypeInternal;
extern CMsgGCToClientWageringUpdateDefaultTypeInternal _CMsgGCToClientWageringUpdate_default_instance_;
class CMsgGCToGCLeaguePredictions;
class CMsgGCToGCLeaguePredictionsDefaultTypeInternal;
extern CMsgGCToGCLeaguePredictionsDefaultTypeInternal _CMsgGCToGCLeaguePredictions_default_instance_;
class CMsgGCToServerMatchDetailsResponse;
class CMsgGCToServerMatchDetailsResponseDefaultTypeInternal;
extern CMsgGCToServerMatchDetailsResponseDefaultTypeInternal _CMsgGCToServerMatchDetailsResponse_default_instance_;
class CMsgGCWatchDownloadedReplay;
class CMsgGCWatchDownloadedReplayDefaultTypeInternal;
extern CMsgGCWatchDownloadedReplayDefaultTypeInternal _CMsgGCWatchDownloadedReplay_default_instance_;
class CMsgGlobalHeroAverages;
class CMsgGlobalHeroAveragesDefaultTypeInternal;
extern CMsgGlobalHeroAveragesDefaultTypeInternal _CMsgGlobalHeroAverages_default_instance_;
class CMsgHeroGlobalDataAllHeroes;
class CMsgHeroGlobalDataAllHeroesDefaultTypeInternal;
extern CMsgHeroGlobalDataAllHeroesDefaultTypeInternal _CMsgHeroGlobalDataAllHeroes_default_instance_;
class CMsgHeroGlobalDataRequest;
class CMsgHeroGlobalDataRequestDefaultTypeInternal;
extern CMsgHeroGlobalDataRequestDefaultTypeInternal _CMsgHeroGlobalDataRequest_default_instance_;
class CMsgHeroGlobalDataResponse;
class CMsgHeroGlobalDataResponseDefaultTypeInternal;
extern CMsgHeroGlobalDataResponseDefaultTypeInternal _CMsgHeroGlobalDataResponse_default_instance_;
class CMsgHeroGlobalDataResponse_GraphData;
class CMsgHeroGlobalDataResponse_GraphDataDefaultTypeInternal;
extern CMsgHeroGlobalDataResponse_GraphDataDefaultTypeInternal _CMsgHeroGlobalDataResponse_GraphData_default_instance_;
class CMsgHeroGlobalDataResponse_HeroDataPerRankChunk;
class CMsgHeroGlobalDataResponse_HeroDataPerRankChunkDefaultTypeInternal;
extern CMsgHeroGlobalDataResponse_HeroDataPerRankChunkDefaultTypeInternal _CMsgHeroGlobalDataResponse_HeroDataPerRankChunk_default_instance_;
class CMsgHeroGlobalDataResponse_WeekData;
class CMsgHeroGlobalDataResponse_WeekDataDefaultTypeInternal;
extern CMsgHeroGlobalDataResponse_WeekDataDefaultTypeInternal _CMsgHeroGlobalDataResponse_WeekData_default_instance_;
class CMsgInitialQuestionnaireResponse;
class CMsgInitialQuestionnaireResponseDefaultTypeInternal;
extern CMsgInitialQuestionnaireResponseDefaultTypeInternal _CMsgInitialQuestionnaireResponse_default_instance_;
class CMsgMVPVotesForMatch;
class CMsgMVPVotesForMatchDefaultTypeInternal;
extern CMsgMVPVotesForMatchDefaultTypeInternal _CMsgMVPVotesForMatch_default_instance_;
class CMsgMVPVotesForMatch_Player;
class CMsgMVPVotesForMatch_PlayerDefaultTypeInternal;
extern CMsgMVPVotesForMatch_PlayerDefaultTypeInternal _CMsgMVPVotesForMatch_Player_default_instance_;
class CMsgMakeOffering;
class CMsgMakeOfferingDefaultTypeInternal;
extern CMsgMakeOfferingDefaultTypeInternal _CMsgMakeOffering_default_instance_;
class CMsgMatchVoteResponse;
class CMsgMatchVoteResponseDefaultTypeInternal;
extern CMsgMatchVoteResponseDefaultTypeInternal _CMsgMatchVoteResponse_default_instance_;
class CMsgMatchmakingMatchGroupInfo;
class CMsgMatchmakingMatchGroupInfoDefaultTypeInternal;
extern CMsgMatchmakingMatchGroupInfoDefaultTypeInternal _CMsgMatchmakingMatchGroupInfo_default_instance_;
class CMsgPerfectWorldUserLookupRequest;
class CMsgPerfectWorldUserLookupRequestDefaultTypeInternal;
extern CMsgPerfectWorldUserLookupRequestDefaultTypeInternal _CMsgPerfectWorldUserLookupRequest_default_instance_;
class CMsgPerfectWorldUserLookupResponse;
class CMsgPerfectWorldUserLookupResponseDefaultTypeInternal;
extern CMsgPerfectWorldUserLookupResponseDefaultTypeInternal _CMsgPerfectWorldUserLookupResponse_default_instance_;
class CMsgPlayerConductScorecard;
class CMsgPlayerConductScorecardDefaultTypeInternal;
extern CMsgPlayerConductScorecardDefaultTypeInternal _CMsgPlayerConductScorecard_default_instance_;
class CMsgPlayerConductScorecardRequest;
class CMsgPlayerConductScorecardRequestDefaultTypeInternal;
extern CMsgPlayerConductScorecardRequestDefaultTypeInternal _CMsgPlayerConductScorecardRequest_default_instance_;
class CMsgPredictionRankings;
class CMsgPredictionRankingsDefaultTypeInternal;
extern CMsgPredictionRankingsDefaultTypeInternal _CMsgPredictionRankings_default_instance_;
class CMsgPredictionRankings_Prediction;
class CMsgPredictionRankings_PredictionDefaultTypeInternal;
extern CMsgPredictionRankings_PredictionDefaultTypeInternal _CMsgPredictionRankings_Prediction_default_instance_;
class CMsgPredictionRankings_PredictionLine;
class CMsgPredictionRankings_PredictionLineDefaultTypeInternal;
extern CMsgPredictionRankings_PredictionLineDefaultTypeInternal _CMsgPredictionRankings_PredictionLine_default_instance_;
class CMsgPredictionResults;
class CMsgPredictionResultsDefaultTypeInternal;
extern CMsgPredictionResultsDefaultTypeInternal _CMsgPredictionResults_default_instance_;
class CMsgPredictionResults_Result;
class CMsgPredictionResults_ResultDefaultTypeInternal;
extern CMsgPredictionResults_ResultDefaultTypeInternal _CMsgPredictionResults_Result_default_instance_;
class CMsgPredictionResults_ResultBreakdown;
class CMsgPredictionResults_ResultBreakdownDefaultTypeInternal;
extern CMsgPredictionResults_ResultBreakdownDefaultTypeInternal _CMsgPredictionResults_ResultBreakdown_default_instance_;
class CMsgPresentedClientTerminateDlg;
class CMsgPresentedClientTerminateDlgDefaultTypeInternal;
extern CMsgPresentedClientTerminateDlgDefaultTypeInternal _CMsgPresentedClientTerminateDlg_default_instance_;
class CMsgPrivateMetadataKeyRequest;
class CMsgPrivateMetadataKeyRequestDefaultTypeInternal;
extern CMsgPrivateMetadataKeyRequestDefaultTypeInternal _CMsgPrivateMetadataKeyRequest_default_instance_;
class CMsgPrivateMetadataKeyResponse;
class CMsgPrivateMetadataKeyResponseDefaultTypeInternal;
extern CMsgPrivateMetadataKeyResponseDefaultTypeInternal _CMsgPrivateMetadataKeyResponse_default_instance_;
class CMsgProfileRequest;
class CMsgProfileRequestDefaultTypeInternal;
extern CMsgProfileRequestDefaultTypeInternal _CMsgProfileRequest_default_instance_;
class CMsgProfileResponse;
class CMsgProfileResponseDefaultTypeInternal;
extern CMsgProfileResponseDefaultTypeInternal _CMsgProfileResponse_default_instance_;
class CMsgProfileResponse_FeaturedHero;
class CMsgProfileResponse_FeaturedHeroDefaultTypeInternal;
extern CMsgProfileResponse_FeaturedHeroDefaultTypeInternal _CMsgProfileResponse_FeaturedHero_default_instance_;
class CMsgProfileResponse_MatchInfo;
class CMsgProfileResponse_MatchInfoDefaultTypeInternal;
extern CMsgProfileResponse_MatchInfoDefaultTypeInternal _CMsgProfileResponse_MatchInfo_default_instance_;
class CMsgProfileUpdate;
class CMsgProfileUpdateDefaultTypeInternal;
extern CMsgProfileUpdateDefaultTypeInternal _CMsgProfileUpdate_default_instance_;
class CMsgProfileUpdateResponse;
class CMsgProfileUpdateResponseDefaultTypeInternal;
extern CMsgProfileUpdateResponseDefaultTypeInternal _CMsgProfileUpdateResponse_default_instance_;
class CMsgPurchaseHeroRandomRelic;
class CMsgPurchaseHeroRandomRelicDefaultTypeInternal;
extern CMsgPurchaseHeroRandomRelicDefaultTypeInternal _CMsgPurchaseHeroRandomRelic_default_instance_;
class CMsgPurchaseHeroRandomRelicResponse;
class CMsgPurchaseHeroRandomRelicResponseDefaultTypeInternal;
extern CMsgPurchaseHeroRandomRelicResponseDefaultTypeInternal _CMsgPurchaseHeroRandomRelicResponse_default_instance_;
class CMsgPurchaseHeroRelic;
class CMsgPurchaseHeroRelicDefaultTypeInternal;
extern CMsgPurchaseHeroRelicDefaultTypeInternal _CMsgPurchaseHeroRelic_default_instance_;
class CMsgPurchaseHeroRelicResponse;
class CMsgPurchaseHeroRelicResponseDefaultTypeInternal;
extern CMsgPurchaseHeroRelicResponseDefaultTypeInternal _CMsgPurchaseHeroRelicResponse_default_instance_;
class CMsgPurchaseItemWithEventPoints;
class CMsgPurchaseItemWithEventPointsDefaultTypeInternal;
extern CMsgPurchaseItemWithEventPointsDefaultTypeInternal _CMsgPurchaseItemWithEventPoints_default_instance_;
class CMsgPurchaseItemWithEventPointsResponse;
class CMsgPurchaseItemWithEventPointsResponseDefaultTypeInternal;
extern CMsgPurchaseItemWithEventPointsResponseDefaultTypeInternal _CMsgPurchaseItemWithEventPointsResponse_default_instance_;
class CMsgRefreshPartnerAccountLink;
class CMsgRefreshPartnerAccountLinkDefaultTypeInternal;
extern CMsgRefreshPartnerAccountLinkDefaultTypeInternal _CMsgRefreshPartnerAccountLink_default_instance_;
class CMsgRequestLeaguePrizePool;
class CMsgRequestLeaguePrizePoolDefaultTypeInternal;
extern CMsgRequestLeaguePrizePoolDefaultTypeInternal _CMsgRequestLeaguePrizePool_default_instance_;
class CMsgRequestLeaguePrizePoolResponse;
class CMsgRequestLeaguePrizePoolResponseDefaultTypeInternal;
extern CMsgRequestLeaguePrizePoolResponseDefaultTypeInternal _CMsgRequestLeaguePrizePoolResponse_default_instance_;
class CMsgRequestOfferings;
class CMsgRequestOfferingsDefaultTypeInternal;
extern CMsgRequestOfferingsDefaultTypeInternal _CMsgRequestOfferings_default_instance_;
class CMsgRequestOfferingsResponse;
class CMsgRequestOfferingsResponseDefaultTypeInternal;
extern CMsgRequestOfferingsResponseDefaultTypeInternal _CMsgRequestOfferingsResponse_default_instance_;
class CMsgRequestOfferingsResponse_NewYearsOffering;
class CMsgRequestOfferingsResponse_NewYearsOfferingDefaultTypeInternal;
extern CMsgRequestOfferingsResponse_NewYearsOfferingDefaultTypeInternal _CMsgRequestOfferingsResponse_NewYearsOffering_default_instance_;
class CMsgResetMapLocations;
class CMsgResetMapLocationsDefaultTypeInternal;
extern CMsgResetMapLocationsDefaultTypeInternal _CMsgResetMapLocations_default_instance_;
class CMsgResetMapLocationsResponse;
class CMsgResetMapLocationsResponseDefaultTypeInternal;
extern CMsgResetMapLocationsResponseDefaultTypeInternal _CMsgResetMapLocationsResponse_default_instance_;
class CMsgRetrieveMatchVote;
class CMsgRetrieveMatchVoteDefaultTypeInternal;
extern CMsgRetrieveMatchVoteDefaultTypeInternal _CMsgRetrieveMatchVote_default_instance_;
class CMsgServerToGCMatchDetailsRequest;
class CMsgServerToGCMatchDetailsRequestDefaultTypeInternal;
extern CMsgServerToGCMatchDetailsRequestDefaultTypeInternal _CMsgServerToGCMatchDetailsRequest_default_instance_;
class CMsgSetMapLocationState;
class CMsgSetMapLocationStateDefaultTypeInternal;
extern CMsgSetMapLocationStateDefaultTypeInternal _CMsgSetMapLocationState_default_instance_;
class CMsgSetMapLocationStateResponse;
class CMsgSetMapLocationStateResponseDefaultTypeInternal;
extern CMsgSetMapLocationStateResponseDefaultTypeInternal _CMsgSetMapLocationStateResponse_default_instance_;
class CMsgSocialFeedCommentsRequest;
class CMsgSocialFeedCommentsRequestDefaultTypeInternal;
extern CMsgSocialFeedCommentsRequestDefaultTypeInternal _CMsgSocialFeedCommentsRequest_default_instance_;
class CMsgSocialFeedCommentsResponse;
class CMsgSocialFeedCommentsResponseDefaultTypeInternal;
extern CMsgSocialFeedCommentsResponseDefaultTypeInternal _CMsgSocialFeedCommentsResponse_default_instance_;
class CMsgSocialFeedCommentsResponse_FeedComment;
class CMsgSocialFeedCommentsResponse_FeedCommentDefaultTypeInternal;
extern CMsgSocialFeedCommentsResponse_FeedCommentDefaultTypeInternal _CMsgSocialFeedCommentsResponse_FeedComment_default_instance_;
class CMsgSocialFeedRequest;
class CMsgSocialFeedRequestDefaultTypeInternal;
extern CMsgSocialFeedRequestDefaultTypeInternal _CMsgSocialFeedRequest_default_instance_;
class CMsgSocialFeedResponse;
class CMsgSocialFeedResponseDefaultTypeInternal;
extern CMsgSocialFeedResponseDefaultTypeInternal _CMsgSocialFeedResponse_default_instance_;
class CMsgSocialFeedResponse_FeedEvent;
class CMsgSocialFeedResponse_FeedEventDefaultTypeInternal;
extern CMsgSocialFeedResponse_FeedEventDefaultTypeInternal _CMsgSocialFeedResponse_FeedEvent_default_instance_;
class CMsgTalentWinRates;
class CMsgTalentWinRatesDefaultTypeInternal;
extern CMsgTalentWinRatesDefaultTypeInternal _CMsgTalentWinRates_default_instance_;
class CMsgUpgradeLeagueItem;
class CMsgUpgradeLeagueItemDefaultTypeInternal;
extern CMsgUpgradeLeagueItemDefaultTypeInternal _CMsgUpgradeLeagueItem_default_instance_;
class CMsgUpgradeLeagueItemResponse;
class CMsgUpgradeLeagueItemResponseDefaultTypeInternal;
extern CMsgUpgradeLeagueItemResponseDefaultTypeInternal _CMsgUpgradeLeagueItemResponse_default_instance_;
class CSODOTAGameHeroFavorites;
class CSODOTAGameHeroFavoritesDefaultTypeInternal;
extern CSODOTAGameHeroFavoritesDefaultTypeInternal _CSODOTAGameHeroFavorites_default_instance_;
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::dota::CMatchPlayerTimedStatAverages* Arena::CreateMaybeMessage<::proto::dota::CMatchPlayerTimedStatAverages>(Arena*);
template<> ::proto::dota::CMsgActivatePlusFreeTrialRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgActivatePlusFreeTrialRequest>(Arena*);
template<> ::proto::dota::CMsgActivatePlusFreeTrialResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgActivatePlusFreeTrialResponse>(Arena*);
template<> ::proto::dota::CMsgArcanaVotes* Arena::CreateMaybeMessage<::proto::dota::CMsgArcanaVotes>(Arena*);
template<> ::proto::dota::CMsgArcanaVotes_Match* Arena::CreateMaybeMessage<::proto::dota::CMsgArcanaVotes_Match>(Arena*);
template<> ::proto::dota::CMsgBalancedShuffleLobby* Arena::CreateMaybeMessage<::proto::dota::CMsgBalancedShuffleLobby>(Arena*);
template<> ::proto::dota::CMsgCastMatchVote* Arena::CreateMaybeMessage<::proto::dota::CMsgCastMatchVote>(Arena*);
template<> ::proto::dota::CMsgClientProvideSurveyResult* Arena::CreateMaybeMessage<::proto::dota::CMsgClientProvideSurveyResult>(Arena*);
template<> ::proto::dota::CMsgClientProvideSurveyResult_Response* Arena::CreateMaybeMessage<::proto::dota::CMsgClientProvideSurveyResult_Response>(Arena*);
template<> ::proto::dota::CMsgClientSuspended* Arena::CreateMaybeMessage<::proto::dota::CMsgClientSuspended>(Arena*);
template<> ::proto::dota::CMsgClientToGCAddTI6TreeProgress* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCAddTI6TreeProgress>(Arena*);
template<> ::proto::dota::CMsgClientToGCApplyGemCombiner* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCApplyGemCombiner>(Arena*);
template<> ::proto::dota::CMsgClientToGCCavernCrawlClaimRoom* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCavernCrawlClaimRoom>(Arena*);
template<> ::proto::dota::CMsgClientToGCCavernCrawlClaimRoomResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCavernCrawlClaimRoomResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCCavernCrawlGetClaimedRoomCount* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCavernCrawlGetClaimedRoomCount>(Arena*);
template<> ::proto::dota::CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCCavernCrawlRequestMapState* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCavernCrawlRequestMapState>(Arena*);
template<> ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem>(Arena*);
template<> ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge>(Arena*);
template<> ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnPath* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCavernCrawlUseItemOnPath>(Arena*);
template<> ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnPathResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCavernCrawlUseItemOnPathResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnRoom* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCavernCrawlUseItemOnRoom>(Arena*);
template<> ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnRoomResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCavernCrawlUseItemOnRoomResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCClaimEventActionUsingItem* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCClaimEventActionUsingItem>(Arena*);
template<> ::proto::dota::CMsgClientToGCClaimEventActionUsingItemResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCClaimEventActionUsingItemResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCCreateHeroStatue* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCreateHeroStatue>(Arena*);
template<> ::proto::dota::CMsgClientToGCCreatePlayerCardPack* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCreatePlayerCardPack>(Arena*);
template<> ::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCCustomGamePlayerCountRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCustomGamePlayerCountRequest>(Arena*);
template<> ::proto::dota::CMsgClientToGCCustomGamesFriendsPlayedRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCCustomGamesFriendsPlayedRequest>(Arena*);
template<> ::proto::dota::CMsgClientToGCEmoticonDataRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCEmoticonDataRequest>(Arena*);
template<> ::proto::dota::CMsgClientToGCFriendsPlayedCustomGameRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCFriendsPlayedCustomGameRequest>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetAdditionalEquips* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetAdditionalEquips>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetAdditionalEquipsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetAdditionalEquipsResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetAllHeroOrder* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetAllHeroOrder>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetAllHeroOrderResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetAllHeroOrderResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetAllHeroProgress* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetAllHeroProgress>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetAllHeroProgressResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetAllHeroProgressResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetEventGoals* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetEventGoals>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetProfileCard* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetProfileCard>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetProfileCardStats* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetProfileCardStats>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetProfileTickets* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetProfileTickets>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetQuestProgress* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetQuestProgress>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetQuestProgressResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetQuestProgressResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetTrophyList* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetTrophyList>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetTrophyListResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetTrophyListResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy>(Arena*);
template<> ::proto::dota::CMsgClientToGCGiveTip* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGiveTip>(Arena*);
template<> ::proto::dota::CMsgClientToGCGiveTipResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCGiveTipResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCH264Unsupported* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCH264Unsupported>(Arena*);
template<> ::proto::dota::CMsgClientToGCHasPlayerVotedForMVP* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCHasPlayerVotedForMVP>(Arena*);
template<> ::proto::dota::CMsgClientToGCHasPlayerVotedForMVPResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCHasPlayerVotedForMVPResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCJoinPlaytest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCJoinPlaytest>(Arena*);
template<> ::proto::dota::CMsgClientToGCJoinPlaytestResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCJoinPlaytestResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCMarkNotificationListRead* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCMarkNotificationListRead>(Arena*);
template<> ::proto::dota::CMsgClientToGCOpenPlayerCardPack* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCOpenPlayerCardPack>(Arena*);
template<> ::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCPlayerCardSpecificPurchaseRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCPlayerCardSpecificPurchaseRequest>(Arena*);
template<> ::proto::dota::CMsgClientToGCPlayerCardSpecificPurchaseResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCPlayerCardSpecificPurchaseResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCPlayerStatsRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCPlayerStatsRequest>(Arena*);
template<> ::proto::dota::CMsgClientToGCPublishUserStat* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCPublishUserStat>(Arena*);
template<> ::proto::dota::CMsgClientToGCRecordContestVote* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRecordContestVote>(Arena*);
template<> ::proto::dota::CMsgClientToGCRecycleHeroRelic* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRecycleHeroRelic>(Arena*);
template<> ::proto::dota::CMsgClientToGCRecycleHeroRelicResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRecycleHeroRelicResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCRecyclePlayerCard* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRecyclePlayerCard>(Arena*);
template<> ::proto::dota::CMsgClientToGCRecyclePlayerCardResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRecyclePlayerCardResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestArcanaVotesRemaining* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestArcanaVotesRemaining>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2_LogEntry* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2_LogEntry>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestEventPointLogV2* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestEventPointLogV2>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestH264Support* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestH264Support>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestLinaGameResult* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestLinaGameResult>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestLinaGameResultResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestLinaGameResultResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestLinaPlaysRemaining* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestLinaPlaysRemaining>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestLinaPlaysRemainingResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestLinaPlaysRemainingResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestPlusWeeklyChallengeResult* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestPlusWeeklyChallengeResult>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestPlusWeeklyChallengeResultResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestPlusWeeklyChallengeResultResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestSlarkGameResult* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestSlarkGameResult>(Arena*);
template<> ::proto::dota::CMsgClientToGCRequestSlarkGameResultResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestSlarkGameResultResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction>(Arena*);
template<> ::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction>(Arena*);
template<> ::proto::dota::CMsgClientToGCSetAdditionalEquips* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCSetAdditionalEquips>(Arena*);
template<> ::proto::dota::CMsgClientToGCSetAdditionalEquipsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCSetAdditionalEquipsResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCSetProfileCardSlots* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCSetProfileCardSlots>(Arena*);
template<> ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot>(Arena*);
template<> ::proto::dota::CMsgClientToGCSocialFeedPostCommentRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCSocialFeedPostCommentRequest>(Arena*);
template<> ::proto::dota::CMsgClientToGCSocialFeedPostMessageRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCSocialFeedPostMessageRequest>(Arena*);
template<> ::proto::dota::CMsgClientToGCSocialMatchDetailsRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCSocialMatchDetailsRequest>(Arena*);
template<> ::proto::dota::CMsgClientToGCSocialMatchPostCommentRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCSocialMatchPostCommentRequest>(Arena*);
template<> ::proto::dota::CMsgClientToGCSuspiciousActivity* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCSuspiciousActivity>(Arena*);
template<> ::proto::dota::CMsgClientToGCTeammateStatsRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCTeammateStatsRequest>(Arena*);
template<> ::proto::dota::CMsgClientToGCTeammateStatsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCTeammateStatsResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat>(Arena*);
template<> ::proto::dota::CMsgClientToGCTrackDialogResult* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCTrackDialogResult>(Arena*);
template<> ::proto::dota::CMsgClientToGCTransferSeasonalMMRRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCTransferSeasonalMMRRequest>(Arena*);
template<> ::proto::dota::CMsgClientToGCTransferSeasonalMMRResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCTransferSeasonalMMRResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCVoteForArcana* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCVoteForArcana>(Arena*);
template<> ::proto::dota::CMsgClientToGCVoteForArcanaResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCVoteForArcanaResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCVoteForArcana_MatchVote>(Arena*);
template<> ::proto::dota::CMsgClientToGCVoteForMVP* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCVoteForMVP>(Arena*);
template<> ::proto::dota::CMsgClientToGCVoteForMVPResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCVoteForMVPResponse>(Arena*);
template<> ::proto::dota::CMsgClientToGCWageringRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgClientToGCWageringRequest>(Arena*);
template<> ::proto::dota::CMsgClientsRejoinChatChannels* Arena::CreateMaybeMessage<::proto::dota::CMsgClientsRejoinChatChannels>(Arena*);
template<> ::proto::dota::CMsgDOTAAnchorPhoneNumberRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAAnchorPhoneNumberRequest>(Arena*);
template<> ::proto::dota::CMsgDOTAAnchorPhoneNumberResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAAnchorPhoneNumberResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAClaimEventAction* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAClaimEventAction>(Arena*);
template<> ::proto::dota::CMsgDOTAClaimEventActionData* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAClaimEventActionData>(Arena*);
template<> ::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData>(Arena*);
template<> ::proto::dota::CMsgDOTAClaimEventActionResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAClaimEventActionResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData>(Arena*);
template<> ::proto::dota::CMsgDOTAClaimEventActionResponse_LootListRewardData* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAClaimEventActionResponse_LootListRewardData>(Arena*);
template<> ::proto::dota::CMsgDOTAClaimEventActionResponse_MysteryItemRewardData* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAClaimEventActionResponse_MysteryItemRewardData>(Arena*);
template<> ::proto::dota::CMsgDOTAClearNotifySuccessfulReport* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAClearNotifySuccessfulReport>(Arena*);
template<> ::proto::dota::CMsgDOTAClientToGCQuickStatsRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAClientToGCQuickStatsRequest>(Arena*);
template<> ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAClientToGCQuickStatsResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats>(Arena*);
template<> ::proto::dota::CMsgDOTACompendiumData* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTACompendiumData>(Arena*);
template<> ::proto::dota::CMsgDOTACompendiumDataRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTACompendiumDataRequest>(Arena*);
template<> ::proto::dota::CMsgDOTACompendiumDataResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTACompendiumDataResponse>(Arena*);
template<> ::proto::dota::CMsgDOTACompendiumInGamePredictionResults* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTACompendiumInGamePredictionResults>(Arena*);
template<> ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult>(Arena*);
template<> ::proto::dota::CMsgDOTACompendiumSelection* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTACompendiumSelection>(Arena*);
template<> ::proto::dota::CMsgDOTACompendiumSelectionResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTACompendiumSelectionResponse>(Arena*);
template<> ::proto::dota::CMsgDOTACustomGameClientFinishedLoading* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTACustomGameClientFinishedLoading>(Arena*);
template<> ::proto::dota::CMsgDOTACustomGameListenServerStartedLoading* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTACustomGameListenServerStartedLoading>(Arena*);
template<> ::proto::dota::CMsgDOTADPCFeed* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTADPCFeed>(Arena*);
template<> ::proto::dota::CMsgDOTADPCFeed_Element* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTADPCFeed_Element>(Arena*);
template<> ::proto::dota::CMsgDOTADPCUserInfo* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTADPCUserInfo>(Arena*);
template<> ::proto::dota::CMsgDOTADestroyLobbyRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTADestroyLobbyRequest>(Arena*);
template<> ::proto::dota::CMsgDOTADestroyLobbyResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTADestroyLobbyResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAEmoticonAccessSDO* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAEmoticonAccessSDO>(Arena*);
template<> ::proto::dota::CMsgDOTAFeaturedItems* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAFeaturedItems>(Arena*);
template<> ::proto::dota::CMsgDOTAFriendRecruitInviteAcceptDecline* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAFriendRecruitInviteAcceptDecline>(Arena*);
template<> ::proto::dota::CMsgDOTAFriendRecruitsRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAFriendRecruitsRequest>(Arena*);
template<> ::proto::dota::CMsgDOTAFriendRecruitsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAFriendRecruitsResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus>(Arena*);
template<> ::proto::dota::CMsgDOTAGameAutographReward* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGameAutographReward>(Arena*);
template<> ::proto::dota::CMsgDOTAGameAutographRewardResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGameAutographRewardResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAGetDPCStandingsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGetDPCStandingsResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAGetDPCStandingsResponse_TeamInfo* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGetDPCStandingsResponse_TeamInfo>(Arena*);
template<> ::proto::dota::CMsgDOTAGetEventPoints* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGetEventPoints>(Arena*);
template<> ::proto::dota::CMsgDOTAGetEventPointsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGetEventPointsResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAGetEventPointsResponse_Action* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGetEventPointsResponse_Action>(Arena*);
template<> ::proto::dota::CMsgDOTAGetPeriodicResource* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGetPeriodicResource>(Arena*);
template<> ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGetPeriodicResourceResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAGetPlayerMatchHistory* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGetPlayerMatchHistory>(Arena*);
template<> ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match>(Arena*);
template<> ::proto::dota::CMsgDOTAGetRecentPlayTimeFriendsRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGetRecentPlayTimeFriendsRequest>(Arena*);
template<> ::proto::dota::CMsgDOTAGetRecentPlayTimeFriendsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGetRecentPlayTimeFriendsResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAHallOfFame* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAHallOfFame>(Arena*);
template<> ::proto::dota::CMsgDOTAHallOfFameRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAHallOfFameRequest>(Arena*);
template<> ::proto::dota::CMsgDOTAHallOfFameResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAHallOfFameResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer>(Arena*);
template<> ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer>(Arena*);
template<> ::proto::dota::CMsgDOTAHalloweenHighScoreRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAHalloweenHighScoreRequest>(Arena*);
template<> ::proto::dota::CMsgDOTAHalloweenHighScoreResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAHalloweenHighScoreResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAHeroFavoritesAdd* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAHeroFavoritesAdd>(Arena*);
template<> ::proto::dota::CMsgDOTAHeroFavoritesRemove* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAHeroFavoritesRemove>(Arena*);
template<> ::proto::dota::CMsgDOTAKickedFromMatchmakingQueue* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAKickedFromMatchmakingQueue>(Arena*);
template<> ::proto::dota::CMsgDOTALastHitChallengeHighScorePost* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTALastHitChallengeHighScorePost>(Arena*);
template<> ::proto::dota::CMsgDOTALastHitChallengeHighScoreRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTALastHitChallengeHighScoreRequest>(Arena*);
template<> ::proto::dota::CMsgDOTALastHitChallengeHighScoreResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTALastHitChallengeHighScoreResponse>(Arena*);
template<> ::proto::dota::CMsgDOTALiveLeagueGameUpdate* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTALiveLeagueGameUpdate>(Arena*);
template<> ::proto::dota::CMsgDOTALobbyMVPAwarded* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTALobbyMVPAwarded>(Arena*);
template<> ::proto::dota::CMsgDOTALobbyMVPNotifyRecipient* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTALobbyMVPNotifyRecipient>(Arena*);
template<> ::proto::dota::CMsgDOTALobbyRichPresence* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTALobbyRichPresence>(Arena*);
template<> ::proto::dota::CMsgDOTAMatchHistoryFilter* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAMatchHistoryFilter>(Arena*);
template<> ::proto::dota::CMsgDOTAMatchVotes* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAMatchVotes>(Arena*);
template<> ::proto::dota::CMsgDOTAMatchVotes_PlayerVote* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAMatchVotes_PlayerVote>(Arena*);
template<> ::proto::dota::CMsgDOTAMatchmakingStatsRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAMatchmakingStatsRequest>(Arena*);
template<> ::proto::dota::CMsgDOTAMatchmakingStatsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAMatchmakingStatsResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAMutationList* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAMutationList>(Arena*);
template<> ::proto::dota::CMsgDOTAMutationList_Mutation* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAMutationList_Mutation>(Arena*);
template<> ::proto::dota::CMsgDOTANotifyAccountFlagsChange* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTANotifyAccountFlagsChange>(Arena*);
template<> ::proto::dota::CMsgDOTAPCBangTimedReward* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAPCBangTimedReward>(Arena*);
template<> ::proto::dota::CMsgDOTAPartyRichPresence* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAPartyRichPresence>(Arena*);
template<> ::proto::dota::CMsgDOTAPartyRichPresence_Member* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAPartyRichPresence_Member>(Arena*);
template<> ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney>(Arena*);
template<> ::proto::dota::CMsgDOTAPeriodicResourceUpdated* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAPeriodicResourceUpdated>(Arena*);
template<> ::proto::dota::CMsgDOTAPlayerMatchHistory* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAPlayerMatchHistory>(Arena*);
template<> ::proto::dota::CMsgDOTAPopup* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAPopup>(Arena*);
template<> ::proto::dota::CMsgDOTAProfileTickets* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAProfileTickets>(Arena*);
template<> ::proto::dota::CMsgDOTAProfileTickets_LeaguePass* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAProfileTickets_LeaguePass>(Arena*);
template<> ::proto::dota::CMsgDOTARedeemItem* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARedeemItem>(Arena*);
template<> ::proto::dota::CMsgDOTARedeemItemResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARedeemItemResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAReportCountsRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAReportCountsRequest>(Arena*);
template<> ::proto::dota::CMsgDOTAReportCountsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAReportCountsResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAReportsRemainingRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAReportsRemainingRequest>(Arena*);
template<> ::proto::dota::CMsgDOTAReportsRemainingResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAReportsRemainingResponse>(Arena*);
template<> ::proto::dota::CMsgDOTARequestMatches* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARequestMatches>(Arena*);
template<> ::proto::dota::CMsgDOTARequestMatchesResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARequestMatchesResponse>(Arena*);
template<> ::proto::dota::CMsgDOTARequestMatchesResponse_Series* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARequestMatchesResponse_Series>(Arena*);
template<> ::proto::dota::CMsgDOTARequestSaveGames* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARequestSaveGames>(Arena*);
template<> ::proto::dota::CMsgDOTARequestSaveGamesResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARequestSaveGamesResponse>(Arena*);
template<> ::proto::dota::CMsgDOTARewardTutorialPrizes* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARewardTutorialPrizes>(Arena*);
template<> ::proto::dota::CMsgDOTASelectionPriorityChoiceRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASelectionPriorityChoiceRequest>(Arena*);
template<> ::proto::dota::CMsgDOTASelectionPriorityChoiceResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASelectionPriorityChoiceResponse>(Arena*);
template<> ::proto::dota::CMsgDOTASendFriendRecruits* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASendFriendRecruits>(Arena*);
template<> ::proto::dota::CMsgDOTASetFavoriteTeam* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASetFavoriteTeam>(Arena*);
template<> ::proto::dota::CMsgDOTASetMatchHistoryAccess* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASetMatchHistoryAccess>(Arena*);
template<> ::proto::dota::CMsgDOTASetMatchHistoryAccessResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASetMatchHistoryAccessResponse>(Arena*);
template<> ::proto::dota::CMsgDOTASetProfilePrivacy* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASetProfilePrivacy>(Arena*);
template<> ::proto::dota::CMsgDOTASetProfilePrivacyResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASetProfilePrivacyResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAStartDailyHeroChallenge* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAStartDailyHeroChallenge>(Arena*);
template<> ::proto::dota::CMsgDOTAStartTriviaSession* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAStartTriviaSession>(Arena*);
template<> ::proto::dota::CMsgDOTAStartTriviaSessionResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAStartTriviaSessionResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAStorePromoPagesRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAStorePromoPagesRequest>(Arena*);
template<> ::proto::dota::CMsgDOTAStorePromoPagesResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAStorePromoPagesResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage>(Arena*);
template<> ::proto::dota::CMsgDOTASubmitLobbyMVPVote* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASubmitLobbyMVPVote>(Arena*);
template<> ::proto::dota::CMsgDOTASubmitLobbyMVPVoteResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASubmitLobbyMVPVoteResponse>(Arena*);
template<> ::proto::dota::CMsgDOTASubmitPlayerReport* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASubmitPlayerReport>(Arena*);
template<> ::proto::dota::CMsgDOTASubmitPlayerReportResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASubmitPlayerReportResponse>(Arena*);
template<> ::proto::dota::CMsgDOTASubmitTriviaQuestionAnswer* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASubmitTriviaQuestionAnswer>(Arena*);
template<> ::proto::dota::CMsgDOTASubmitTriviaQuestionAnswerResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTASubmitTriviaQuestionAnswerResponse>(Arena*);
template<> ::proto::dota::CMsgDOTATriviaCurrentQuestions* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTATriviaCurrentQuestions>(Arena*);
template<> ::proto::dota::CMsgDOTATriviaQuestion* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTATriviaQuestion>(Arena*);
template<> ::proto::dota::CMsgDOTATriviaQuestionAnswersSummary* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTATriviaQuestionAnswersSummary>(Arena*);
template<> ::proto::dota::CMsgDOTAUnanchorPhoneNumberRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAUnanchorPhoneNumberRequest>(Arena*);
template<> ::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAUpdateMatchManagementStats* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAUpdateMatchManagementStats>(Arena*);
template<> ::proto::dota::CMsgDOTAUpdateMatchmakingStats* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAUpdateMatchmakingStats>(Arena*);
template<> ::proto::dota::CMsgDOTAWelcome* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAWelcome>(Arena*);
template<> ::proto::dota::CMsgDOTAWelcome_CExtraMsg* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAWelcome_CExtraMsg>(Arena*);
template<> ::proto::dota::CMsgEventGoals* Arena::CreateMaybeMessage<::proto::dota::CMsgEventGoals>(Arena*);
template<> ::proto::dota::CMsgEventGoals_EventGoal* Arena::CreateMaybeMessage<::proto::dota::CMsgEventGoals_EventGoal>(Arena*);
template<> ::proto::dota::CMsgEventTipsSummaryRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgEventTipsSummaryRequest>(Arena*);
template<> ::proto::dota::CMsgEventTipsSummaryResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgEventTipsSummaryResponse>(Arena*);
template<> ::proto::dota::CMsgEventTipsSummaryResponse_Tipper* Arena::CreateMaybeMessage<::proto::dota::CMsgEventTipsSummaryResponse_Tipper>(Arena*);
template<> ::proto::dota::CMsgFlipLobbyTeams* Arena::CreateMaybeMessage<::proto::dota::CMsgFlipLobbyTeams>(Arena*);
template<> ::proto::dota::CMsgGCGetHeroStandings* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetHeroStandings>(Arena*);
template<> ::proto::dota::CMsgGCGetHeroStandingsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetHeroStandingsResponse>(Arena*);
template<> ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetHeroStandingsResponse_Hero>(Arena*);
template<> ::proto::dota::CMsgGCGetHeroStatsHistory* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetHeroStatsHistory>(Arena*);
template<> ::proto::dota::CMsgGCGetHeroStatsHistoryResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetHeroStatsHistoryResponse>(Arena*);
template<> ::proto::dota::CMsgGCGetHeroTimedStats* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetHeroTimedStats>(Arena*);
template<> ::proto::dota::CMsgGCGetHeroTimedStatsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetHeroTimedStatsResponse>(Arena*);
template<> ::proto::dota::CMsgGCGetHeroTimedStatsResponse_RankChunkedStats* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetHeroTimedStatsResponse_RankChunkedStats>(Arena*);
template<> ::proto::dota::CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer>(Arena*);
template<> ::proto::dota::CMsgGCItemEditorReleaseReservation* Arena::CreateMaybeMessage<::proto::dota::CMsgGCItemEditorReleaseReservation>(Arena*);
template<> ::proto::dota::CMsgGCItemEditorReleaseReservationResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCItemEditorReleaseReservationResponse>(Arena*);
template<> ::proto::dota::CMsgGCItemEditorReservation* Arena::CreateMaybeMessage<::proto::dota::CMsgGCItemEditorReservation>(Arena*);
template<> ::proto::dota::CMsgGCItemEditorReservationsRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgGCItemEditorReservationsRequest>(Arena*);
template<> ::proto::dota::CMsgGCItemEditorReservationsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCItemEditorReservationsResponse>(Arena*);
template<> ::proto::dota::CMsgGCItemEditorReserveItemDef* Arena::CreateMaybeMessage<::proto::dota::CMsgGCItemEditorReserveItemDef>(Arena*);
template<> ::proto::dota::CMsgGCItemEditorReserveItemDefResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCItemEditorReserveItemDefResponse>(Arena*);
template<> ::proto::dota::CMsgGCLobbyUpdateBroadcastChannelInfo* Arena::CreateMaybeMessage<::proto::dota::CMsgGCLobbyUpdateBroadcastChannelInfo>(Arena*);
template<> ::proto::dota::CMsgGCMatchDetailsRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMatchDetailsRequest>(Arena*);
template<> ::proto::dota::CMsgGCMatchDetailsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMatchDetailsResponse>(Arena*);
template<> ::proto::dota::CMsgGCNotificationsMarkReadRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgGCNotificationsMarkReadRequest>(Arena*);
template<> ::proto::dota::CMsgGCNotificationsRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgGCNotificationsRequest>(Arena*);
template<> ::proto::dota::CMsgGCNotificationsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCNotificationsResponse>(Arena*);
template<> ::proto::dota::CMsgGCNotificationsResponse_Notification* Arena::CreateMaybeMessage<::proto::dota::CMsgGCNotificationsResponse_Notification>(Arena*);
template<> ::proto::dota::CMsgGCPlayerInfoRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgGCPlayerInfoRequest>(Arena*);
template<> ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo* Arena::CreateMaybeMessage<::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo>(Arena*);
template<> ::proto::dota::CMsgGCPlayerInfoSubmit* Arena::CreateMaybeMessage<::proto::dota::CMsgGCPlayerInfoSubmit>(Arena*);
template<> ::proto::dota::CMsgGCPlayerInfoSubmitResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCPlayerInfoSubmitResponse>(Arena*);
template<> ::proto::dota::CMsgGCRequestItemRecommendations* Arena::CreateMaybeMessage<::proto::dota::CMsgGCRequestItemRecommendations>(Arena*);
template<> ::proto::dota::CMsgGCRequestItemRecommendationsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCRequestItemRecommendationsResponse>(Arena*);
template<> ::proto::dota::CMsgGCRequestSkillUpRecommendations* Arena::CreateMaybeMessage<::proto::dota::CMsgGCRequestSkillUpRecommendations>(Arena*);
template<> ::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse>(Arena*);
template<> ::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection* Arena::CreateMaybeMessage<::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection>(Arena*);
template<> ::proto::dota::CMsgGCToClientAllStarVotesReply* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientAllStarVotesReply>(Arena*);
template<> ::proto::dota::CMsgGCToClientAllStarVotesRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientAllStarVotesRequest>(Arena*);
template<> ::proto::dota::CMsgGCToClientAllStarVotesSubmit* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientAllStarVotesSubmit>(Arena*);
template<> ::proto::dota::CMsgGCToClientAllStarVotesSubmitReply* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientAllStarVotesSubmitReply>(Arena*);
template<> ::proto::dota::CMsgGCToClientArcanaVotesUpdate* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientArcanaVotesUpdate>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollupListRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollupListRequest>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollupListResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollupListResponse>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollupListResponse_EventInfo* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollupListResponse_EventInfo>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollupRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollupRequest>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollupResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollupResponse>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI7* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_PlayerCard* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_PlayerCard>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Questlines* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Questlines>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI8* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_PlayerCard* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8_PlayerCard>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Questlines* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Questlines>(Arena*);
template<> ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering>(Arena*);
template<> ::proto::dota::CMsgGCToClientCavernCrawlMapPathCompleted* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientCavernCrawlMapPathCompleted>(Arena*);
template<> ::proto::dota::CMsgGCToClientCommendNotification* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientCommendNotification>(Arena*);
template<> ::proto::dota::CMsgGCToClientCustomGamePlayerCountResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientCustomGamePlayerCountResponse>(Arena*);
template<> ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse>(Arena*);
template<> ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame>(Arena*);
template<> ::proto::dota::CMsgGCToClientEmoticonData* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientEmoticonData>(Arena*);
template<> ::proto::dota::CMsgGCToClientEventStatusChanged* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientEventStatusChanged>(Arena*);
template<> ::proto::dota::CMsgGCToClientFriendsPlayedCustomGameResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientFriendsPlayedCustomGameResponse>(Arena*);
template<> ::proto::dota::CMsgGCToClientHeroStatueCreateResult* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientHeroStatueCreateResult>(Arena*);
template<> ::proto::dota::CMsgGCToClientMatchSignedOut* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientMatchSignedOut>(Arena*);
template<> ::proto::dota::CMsgGCToClientPlayerStatsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientPlayerStatsResponse>(Arena*);
template<> ::proto::dota::CMsgGCToClientPlaytestStatus* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientPlaytestStatus>(Arena*);
template<> ::proto::dota::CMsgGCToClientQuestProgressUpdated* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientQuestProgressUpdated>(Arena*);
template<> ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge>(Arena*);
template<> ::proto::dota::CMsgGCToClientRecordContestVoteResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientRecordContestVoteResponse>(Arena*);
template<> ::proto::dota::CMsgGCToClientSocialFeedPostCommentResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientSocialFeedPostCommentResponse>(Arena*);
template<> ::proto::dota::CMsgGCToClientSocialFeedPostMessageResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientSocialFeedPostMessageResponse>(Arena*);
template<> ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientSocialMatchDetailsResponse>(Arena*);
template<> ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment>(Arena*);
template<> ::proto::dota::CMsgGCToClientSocialMatchPostCommentResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientSocialMatchPostCommentResponse>(Arena*);
template<> ::proto::dota::CMsgGCToClientTipNotification* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientTipNotification>(Arena*);
template<> ::proto::dota::CMsgGCToClientTournamentItemDrop* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientTournamentItemDrop>(Arena*);
template<> ::proto::dota::CMsgGCToClientTrophyAwarded* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientTrophyAwarded>(Arena*);
template<> ::proto::dota::CMsgGCToClientWageringResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientWageringResponse>(Arena*);
template<> ::proto::dota::CMsgGCToClientWageringUpdate* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToClientWageringUpdate>(Arena*);
template<> ::proto::dota::CMsgGCToGCLeaguePredictions* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToGCLeaguePredictions>(Arena*);
template<> ::proto::dota::CMsgGCToServerMatchDetailsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToServerMatchDetailsResponse>(Arena*);
template<> ::proto::dota::CMsgGCWatchDownloadedReplay* Arena::CreateMaybeMessage<::proto::dota::CMsgGCWatchDownloadedReplay>(Arena*);
template<> ::proto::dota::CMsgGlobalHeroAverages* Arena::CreateMaybeMessage<::proto::dota::CMsgGlobalHeroAverages>(Arena*);
template<> ::proto::dota::CMsgHeroGlobalDataAllHeroes* Arena::CreateMaybeMessage<::proto::dota::CMsgHeroGlobalDataAllHeroes>(Arena*);
template<> ::proto::dota::CMsgHeroGlobalDataRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgHeroGlobalDataRequest>(Arena*);
template<> ::proto::dota::CMsgHeroGlobalDataResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgHeroGlobalDataResponse>(Arena*);
template<> ::proto::dota::CMsgHeroGlobalDataResponse_GraphData* Arena::CreateMaybeMessage<::proto::dota::CMsgHeroGlobalDataResponse_GraphData>(Arena*);
template<> ::proto::dota::CMsgHeroGlobalDataResponse_HeroDataPerRankChunk* Arena::CreateMaybeMessage<::proto::dota::CMsgHeroGlobalDataResponse_HeroDataPerRankChunk>(Arena*);
template<> ::proto::dota::CMsgHeroGlobalDataResponse_WeekData* Arena::CreateMaybeMessage<::proto::dota::CMsgHeroGlobalDataResponse_WeekData>(Arena*);
template<> ::proto::dota::CMsgInitialQuestionnaireResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgInitialQuestionnaireResponse>(Arena*);
template<> ::proto::dota::CMsgMVPVotesForMatch* Arena::CreateMaybeMessage<::proto::dota::CMsgMVPVotesForMatch>(Arena*);
template<> ::proto::dota::CMsgMVPVotesForMatch_Player* Arena::CreateMaybeMessage<::proto::dota::CMsgMVPVotesForMatch_Player>(Arena*);
template<> ::proto::dota::CMsgMakeOffering* Arena::CreateMaybeMessage<::proto::dota::CMsgMakeOffering>(Arena*);
template<> ::proto::dota::CMsgMatchVoteResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgMatchVoteResponse>(Arena*);
template<> ::proto::dota::CMsgMatchmakingMatchGroupInfo* Arena::CreateMaybeMessage<::proto::dota::CMsgMatchmakingMatchGroupInfo>(Arena*);
template<> ::proto::dota::CMsgPerfectWorldUserLookupRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgPerfectWorldUserLookupRequest>(Arena*);
template<> ::proto::dota::CMsgPerfectWorldUserLookupResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgPerfectWorldUserLookupResponse>(Arena*);
template<> ::proto::dota::CMsgPlayerConductScorecard* Arena::CreateMaybeMessage<::proto::dota::CMsgPlayerConductScorecard>(Arena*);
template<> ::proto::dota::CMsgPlayerConductScorecardRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgPlayerConductScorecardRequest>(Arena*);
template<> ::proto::dota::CMsgPredictionRankings* Arena::CreateMaybeMessage<::proto::dota::CMsgPredictionRankings>(Arena*);
template<> ::proto::dota::CMsgPredictionRankings_Prediction* Arena::CreateMaybeMessage<::proto::dota::CMsgPredictionRankings_Prediction>(Arena*);
template<> ::proto::dota::CMsgPredictionRankings_PredictionLine* Arena::CreateMaybeMessage<::proto::dota::CMsgPredictionRankings_PredictionLine>(Arena*);
template<> ::proto::dota::CMsgPredictionResults* Arena::CreateMaybeMessage<::proto::dota::CMsgPredictionResults>(Arena*);
template<> ::proto::dota::CMsgPredictionResults_Result* Arena::CreateMaybeMessage<::proto::dota::CMsgPredictionResults_Result>(Arena*);
template<> ::proto::dota::CMsgPredictionResults_ResultBreakdown* Arena::CreateMaybeMessage<::proto::dota::CMsgPredictionResults_ResultBreakdown>(Arena*);
template<> ::proto::dota::CMsgPresentedClientTerminateDlg* Arena::CreateMaybeMessage<::proto::dota::CMsgPresentedClientTerminateDlg>(Arena*);
template<> ::proto::dota::CMsgPrivateMetadataKeyRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgPrivateMetadataKeyRequest>(Arena*);
template<> ::proto::dota::CMsgPrivateMetadataKeyResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgPrivateMetadataKeyResponse>(Arena*);
template<> ::proto::dota::CMsgProfileRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgProfileRequest>(Arena*);
template<> ::proto::dota::CMsgProfileResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgProfileResponse>(Arena*);
template<> ::proto::dota::CMsgProfileResponse_FeaturedHero* Arena::CreateMaybeMessage<::proto::dota::CMsgProfileResponse_FeaturedHero>(Arena*);
template<> ::proto::dota::CMsgProfileResponse_MatchInfo* Arena::CreateMaybeMessage<::proto::dota::CMsgProfileResponse_MatchInfo>(Arena*);
template<> ::proto::dota::CMsgProfileUpdate* Arena::CreateMaybeMessage<::proto::dota::CMsgProfileUpdate>(Arena*);
template<> ::proto::dota::CMsgProfileUpdateResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgProfileUpdateResponse>(Arena*);
template<> ::proto::dota::CMsgPurchaseHeroRandomRelic* Arena::CreateMaybeMessage<::proto::dota::CMsgPurchaseHeroRandomRelic>(Arena*);
template<> ::proto::dota::CMsgPurchaseHeroRandomRelicResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgPurchaseHeroRandomRelicResponse>(Arena*);
template<> ::proto::dota::CMsgPurchaseHeroRelic* Arena::CreateMaybeMessage<::proto::dota::CMsgPurchaseHeroRelic>(Arena*);
template<> ::proto::dota::CMsgPurchaseHeroRelicResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgPurchaseHeroRelicResponse>(Arena*);
template<> ::proto::dota::CMsgPurchaseItemWithEventPoints* Arena::CreateMaybeMessage<::proto::dota::CMsgPurchaseItemWithEventPoints>(Arena*);
template<> ::proto::dota::CMsgPurchaseItemWithEventPointsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgPurchaseItemWithEventPointsResponse>(Arena*);
template<> ::proto::dota::CMsgRefreshPartnerAccountLink* Arena::CreateMaybeMessage<::proto::dota::CMsgRefreshPartnerAccountLink>(Arena*);
template<> ::proto::dota::CMsgRequestLeaguePrizePool* Arena::CreateMaybeMessage<::proto::dota::CMsgRequestLeaguePrizePool>(Arena*);
template<> ::proto::dota::CMsgRequestLeaguePrizePoolResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgRequestLeaguePrizePoolResponse>(Arena*);
template<> ::proto::dota::CMsgRequestOfferings* Arena::CreateMaybeMessage<::proto::dota::CMsgRequestOfferings>(Arena*);
template<> ::proto::dota::CMsgRequestOfferingsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgRequestOfferingsResponse>(Arena*);
template<> ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering* Arena::CreateMaybeMessage<::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering>(Arena*);
template<> ::proto::dota::CMsgResetMapLocations* Arena::CreateMaybeMessage<::proto::dota::CMsgResetMapLocations>(Arena*);
template<> ::proto::dota::CMsgResetMapLocationsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgResetMapLocationsResponse>(Arena*);
template<> ::proto::dota::CMsgRetrieveMatchVote* Arena::CreateMaybeMessage<::proto::dota::CMsgRetrieveMatchVote>(Arena*);
template<> ::proto::dota::CMsgServerToGCMatchDetailsRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCMatchDetailsRequest>(Arena*);
template<> ::proto::dota::CMsgSetMapLocationState* Arena::CreateMaybeMessage<::proto::dota::CMsgSetMapLocationState>(Arena*);
template<> ::proto::dota::CMsgSetMapLocationStateResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgSetMapLocationStateResponse>(Arena*);
template<> ::proto::dota::CMsgSocialFeedCommentsRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgSocialFeedCommentsRequest>(Arena*);
template<> ::proto::dota::CMsgSocialFeedCommentsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgSocialFeedCommentsResponse>(Arena*);
template<> ::proto::dota::CMsgSocialFeedCommentsResponse_FeedComment* Arena::CreateMaybeMessage<::proto::dota::CMsgSocialFeedCommentsResponse_FeedComment>(Arena*);
template<> ::proto::dota::CMsgSocialFeedRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgSocialFeedRequest>(Arena*);
template<> ::proto::dota::CMsgSocialFeedResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgSocialFeedResponse>(Arena*);
template<> ::proto::dota::CMsgSocialFeedResponse_FeedEvent* Arena::CreateMaybeMessage<::proto::dota::CMsgSocialFeedResponse_FeedEvent>(Arena*);
template<> ::proto::dota::CMsgTalentWinRates* Arena::CreateMaybeMessage<::proto::dota::CMsgTalentWinRates>(Arena*);
template<> ::proto::dota::CMsgUpgradeLeagueItem* Arena::CreateMaybeMessage<::proto::dota::CMsgUpgradeLeagueItem>(Arena*);
template<> ::proto::dota::CMsgUpgradeLeagueItemResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgUpgradeLeagueItemResponse>(Arena*);
template<> ::proto::dota::CSODOTAGameHeroFavorites* Arena::CreateMaybeMessage<::proto::dota::CSODOTAGameHeroFavorites>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace dota {

enum CMsgDOTARequestMatches_SkillLevel {
  CMsgDOTARequestMatches_SkillLevel_Any = 0,
  CMsgDOTARequestMatches_SkillLevel_Normal = 1,
  CMsgDOTARequestMatches_SkillLevel_High = 2,
  CMsgDOTARequestMatches_SkillLevel_VeryHigh = 3
};
bool CMsgDOTARequestMatches_SkillLevel_IsValid(int value);
const CMsgDOTARequestMatches_SkillLevel CMsgDOTARequestMatches_SkillLevel_SkillLevel_MIN = CMsgDOTARequestMatches_SkillLevel_Any;
const CMsgDOTARequestMatches_SkillLevel CMsgDOTARequestMatches_SkillLevel_SkillLevel_MAX = CMsgDOTARequestMatches_SkillLevel_VeryHigh;
const int CMsgDOTARequestMatches_SkillLevel_SkillLevel_ARRAYSIZE = CMsgDOTARequestMatches_SkillLevel_SkillLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTARequestMatches_SkillLevel_descriptor();
inline const ::std::string& CMsgDOTARequestMatches_SkillLevel_Name(CMsgDOTARequestMatches_SkillLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTARequestMatches_SkillLevel_descriptor(), value);
}
inline bool CMsgDOTARequestMatches_SkillLevel_Parse(
    const ::std::string& name, CMsgDOTARequestMatches_SkillLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTARequestMatches_SkillLevel>(
    CMsgDOTARequestMatches_SkillLevel_descriptor(), name, value);
}
enum CMsgDOTAGetDPCStandingsResponse_EStatus {
  CMsgDOTAGetDPCStandingsResponse_EStatus_DEFAULT = 0,
  CMsgDOTAGetDPCStandingsResponse_EStatus_CLINCHED = 1,
  CMsgDOTAGetDPCStandingsResponse_EStatus_ELIMINATED = 2
};
bool CMsgDOTAGetDPCStandingsResponse_EStatus_IsValid(int value);
const CMsgDOTAGetDPCStandingsResponse_EStatus CMsgDOTAGetDPCStandingsResponse_EStatus_EStatus_MIN = CMsgDOTAGetDPCStandingsResponse_EStatus_DEFAULT;
const CMsgDOTAGetDPCStandingsResponse_EStatus CMsgDOTAGetDPCStandingsResponse_EStatus_EStatus_MAX = CMsgDOTAGetDPCStandingsResponse_EStatus_ELIMINATED;
const int CMsgDOTAGetDPCStandingsResponse_EStatus_EStatus_ARRAYSIZE = CMsgDOTAGetDPCStandingsResponse_EStatus_EStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAGetDPCStandingsResponse_EStatus_descriptor();
inline const ::std::string& CMsgDOTAGetDPCStandingsResponse_EStatus_Name(CMsgDOTAGetDPCStandingsResponse_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAGetDPCStandingsResponse_EStatus_descriptor(), value);
}
inline bool CMsgDOTAGetDPCStandingsResponse_EStatus_Parse(
    const ::std::string& name, CMsgDOTAGetDPCStandingsResponse_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAGetDPCStandingsResponse_EStatus>(
    CMsgDOTAGetDPCStandingsResponse_EStatus_descriptor(), name, value);
}
enum CMsgDOTAPopup_PopupID {
  CMsgDOTAPopup_PopupID_NONE = -1,
  CMsgDOTAPopup_PopupID_KICKED_FROM_LOBBY = 0,
  CMsgDOTAPopup_PopupID_KICKED_FROM_PARTY = 1,
  CMsgDOTAPopup_PopupID_KICKED_FROM_TEAM = 2,
  CMsgDOTAPopup_PopupID_TEAM_WAS_DISBANDED = 3,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_MATCH = 4,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_FINDING = 5,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FULL = 6,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD = 7,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD_CURRENT = 8,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAILED_TEAM_MEMBER = 9,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_GAME = 10,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_GET_PARTY = 11,
  CMsgDOTAPopup_PopupID_MATCHMAKING_DISABLED = 12,
  CMsgDOTAPopup_PopupID_INVITE_DENIED = 13,
  CMsgDOTAPopup_PopupID_PARTY_FULL = 14,
  CMsgDOTAPopup_PopupID_MADE_ADMIN = 15,
  CMsgDOTAPopup_PopupID_NEED_TO_PURCHASE = 16,
  CMsgDOTAPopup_PopupID_SIGNON_MESSAGE = 17,
  CMsgDOTAPopup_PopupID_GUILD_KICKED = 18,
  CMsgDOTAPopup_PopupID_MATCHMAKING_REGION_OFFLINE = 19,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_NOT_FOUND = 21,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_LOBBY_ID = 22,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_MATCH_ID = 23,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM = 24,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_DIRE_TEAM = 25,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_SQL_UPDATE_FAILED = 26,
  CMsgDOTAPopup_PopupID_NOT_LEAGUE_ADMIN = 27,
  CMsgDOTAPopup_PopupID_IN_ANOTHER_GAME = 29,
  CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_ANOTHER_GAME = 30,
  CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_LOW_PRIORITY = 31,
  CMsgDOTAPopup_PopupID_CLIENT_OUT_OF_DATE = 32,
  CMsgDOTAPopup_PopupID_SAVE_GAME_CORRUPT = 38,
  CMsgDOTAPopup_PopupID_INSUFFICIENT_INGOTS = 39,
  CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL = 42,
  CMsgDOTAPopup_PopupID_PARTY_LEADER_JOINED_LOBBY = 44,
  CMsgDOTAPopup_PopupID_WEEKEND_TOURNEY_UNMATCHED = 48,
  CMsgDOTAPopup_PopupID_POST_MATCH_SURVEY = 49,
  CMsgDOTAPopup_PopupID_TROPHY_AWARDED = 50,
  CMsgDOTAPopup_PopupID_TROPHY_LEVEL_UP = 51,
  CMsgDOTAPopup_PopupID_ALL_HERO_CHALLENGE_PROGRESS = 52,
  CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL = 53,
  CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL_IN_PARTY = 54,
  CMsgDOTAPopup_PopupID_TARGET_ENGINE_MISMATCH = 55,
  CMsgDOTAPopup_PopupID_VAC_NOT_VERIFIED = 56,
  CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_STARTING = 57,
  CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_ENDING = 58,
  CMsgDOTAPopup_PopupID_LOBBY_FULL = 62,
  CMsgDOTAPopup_PopupID_EVENT_POINTS_EARNED = 63,
  CMsgDOTAPopup_PopupID_CUSTOM_GAME_INCORRECT_VERSION = 64,
  CMsgDOTAPopup_PopupID_LIMITED_USER_CHAT = 66,
  CMsgDOTAPopup_PopupID_EVENT_PREMIUM_POINTS_EARNED = 67,
  CMsgDOTAPopup_PopupID_LOBBY_MVP_AWARDED = 68,
  CMsgDOTAPopup_PopupID_LOW_BADGE_LEVEL_CHAT = 71,
  CMsgDOTAPopup_PopupID_LOW_WINS_CHAT = 72,
  CMsgDOTAPopup_PopupID_UNVERIFIED_USER_CHAT = 73,
  CMsgDOTAPopup_PopupID_PARTY_STARTED_FINDING_EVENT_MATCH = 74,
  CMsgDOTAPopup_PopupID_GENERIC_INFO = 69,
  CMsgDOTAPopup_PopupID_GENERIC_ERROR = 70,
  CMsgDOTAPopup_PopupID_RANK_TIER_UPDATED = 75,
  CMsgDOTAPopup_PopupID_CUSTOM_GAME_COOLDOWN_RESTRICTED = 76
};
bool CMsgDOTAPopup_PopupID_IsValid(int value);
const CMsgDOTAPopup_PopupID CMsgDOTAPopup_PopupID_PopupID_MIN = CMsgDOTAPopup_PopupID_NONE;
const CMsgDOTAPopup_PopupID CMsgDOTAPopup_PopupID_PopupID_MAX = CMsgDOTAPopup_PopupID_CUSTOM_GAME_COOLDOWN_RESTRICTED;
const int CMsgDOTAPopup_PopupID_PopupID_ARRAYSIZE = CMsgDOTAPopup_PopupID_PopupID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAPopup_PopupID_descriptor();
inline const ::std::string& CMsgDOTAPopup_PopupID_Name(CMsgDOTAPopup_PopupID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAPopup_PopupID_descriptor(), value);
}
inline bool CMsgDOTAPopup_PopupID_Parse(
    const ::std::string& name, CMsgDOTAPopup_PopupID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAPopup_PopupID>(
    CMsgDOTAPopup_PopupID_descriptor(), name, value);
}
enum CMsgDOTAFriendRecruitsResponse_EResult {
  CMsgDOTAFriendRecruitsResponse_EResult_SUCCESS = 0,
  CMsgDOTAFriendRecruitsResponse_EResult_ERROR_UNSPECIFIED = 1
};
bool CMsgDOTAFriendRecruitsResponse_EResult_IsValid(int value);
const CMsgDOTAFriendRecruitsResponse_EResult CMsgDOTAFriendRecruitsResponse_EResult_EResult_MIN = CMsgDOTAFriendRecruitsResponse_EResult_SUCCESS;
const CMsgDOTAFriendRecruitsResponse_EResult CMsgDOTAFriendRecruitsResponse_EResult_EResult_MAX = CMsgDOTAFriendRecruitsResponse_EResult_ERROR_UNSPECIFIED;
const int CMsgDOTAFriendRecruitsResponse_EResult_EResult_ARRAYSIZE = CMsgDOTAFriendRecruitsResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAFriendRecruitsResponse_EResult_descriptor();
inline const ::std::string& CMsgDOTAFriendRecruitsResponse_EResult_Name(CMsgDOTAFriendRecruitsResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAFriendRecruitsResponse_EResult_descriptor(), value);
}
inline bool CMsgDOTAFriendRecruitsResponse_EResult_Parse(
    const ::std::string& name, CMsgDOTAFriendRecruitsResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAFriendRecruitsResponse_EResult>(
    CMsgDOTAFriendRecruitsResponse_EResult_descriptor(), name, value);
}
enum CMsgDOTAClaimEventActionResponse_ResultCode {
  CMsgDOTAClaimEventActionResponse_ResultCode_Success = 0,
  CMsgDOTAClaimEventActionResponse_ResultCode_InvalidEvent = 1,
  CMsgDOTAClaimEventActionResponse_ResultCode_EventNotActive = 2,
  CMsgDOTAClaimEventActionResponse_ResultCode_InvalidAction = 3,
  CMsgDOTAClaimEventActionResponse_ResultCode_ServerError = 4,
  CMsgDOTAClaimEventActionResponse_ResultCode_InsufficientPoints = 5,
  CMsgDOTAClaimEventActionResponse_ResultCode_InsufficentLevel = 6,
  CMsgDOTAClaimEventActionResponse_ResultCode_AlreadyClaimed = 7,
  CMsgDOTAClaimEventActionResponse_ResultCode_SDOLockFailure = 8,
  CMsgDOTAClaimEventActionResponse_ResultCode_SDOLoadFailure = 9,
  CMsgDOTAClaimEventActionResponse_ResultCode_EventNotOwned = 10,
  CMsgDOTAClaimEventActionResponse_ResultCode_Timeout = 11,
  CMsgDOTAClaimEventActionResponse_ResultCode_RequiresPlusSubscription = 12,
  CMsgDOTAClaimEventActionResponse_ResultCode_InvalidItem = 13
};
bool CMsgDOTAClaimEventActionResponse_ResultCode_IsValid(int value);
const CMsgDOTAClaimEventActionResponse_ResultCode CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_MIN = CMsgDOTAClaimEventActionResponse_ResultCode_Success;
const CMsgDOTAClaimEventActionResponse_ResultCode CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_MAX = CMsgDOTAClaimEventActionResponse_ResultCode_InvalidItem;
const int CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_ARRAYSIZE = CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAClaimEventActionResponse_ResultCode_descriptor();
inline const ::std::string& CMsgDOTAClaimEventActionResponse_ResultCode_Name(CMsgDOTAClaimEventActionResponse_ResultCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAClaimEventActionResponse_ResultCode_descriptor(), value);
}
inline bool CMsgDOTAClaimEventActionResponse_ResultCode_Parse(
    const ::std::string& name, CMsgDOTAClaimEventActionResponse_ResultCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAClaimEventActionResponse_ResultCode>(
    CMsgDOTAClaimEventActionResponse_ResultCode_descriptor(), name, value);
}
enum CMsgGCNotificationsResponse_EResult {
  CMsgGCNotificationsResponse_EResult_SUCCESS = 0,
  CMsgGCNotificationsResponse_EResult_ERROR_UNSPECIFIED = 1
};
bool CMsgGCNotificationsResponse_EResult_IsValid(int value);
const CMsgGCNotificationsResponse_EResult CMsgGCNotificationsResponse_EResult_EResult_MIN = CMsgGCNotificationsResponse_EResult_SUCCESS;
const CMsgGCNotificationsResponse_EResult CMsgGCNotificationsResponse_EResult_EResult_MAX = CMsgGCNotificationsResponse_EResult_ERROR_UNSPECIFIED;
const int CMsgGCNotificationsResponse_EResult_EResult_ARRAYSIZE = CMsgGCNotificationsResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCNotificationsResponse_EResult_descriptor();
inline const ::std::string& CMsgGCNotificationsResponse_EResult_Name(CMsgGCNotificationsResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCNotificationsResponse_EResult_descriptor(), value);
}
inline bool CMsgGCNotificationsResponse_EResult_Parse(
    const ::std::string& name, CMsgGCNotificationsResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCNotificationsResponse_EResult>(
    CMsgGCNotificationsResponse_EResult_descriptor(), name, value);
}
enum CMsgGCPlayerInfoSubmitResponse_EResult {
  CMsgGCPlayerInfoSubmitResponse_EResult_SUCCESS = 0,
  CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_UNSPECIFIED = 1,
  CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_INFO_LOCKED = 2
};
bool CMsgGCPlayerInfoSubmitResponse_EResult_IsValid(int value);
const CMsgGCPlayerInfoSubmitResponse_EResult CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MIN = CMsgGCPlayerInfoSubmitResponse_EResult_SUCCESS;
const CMsgGCPlayerInfoSubmitResponse_EResult CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MAX = CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_INFO_LOCKED;
const int CMsgGCPlayerInfoSubmitResponse_EResult_EResult_ARRAYSIZE = CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCPlayerInfoSubmitResponse_EResult_descriptor();
inline const ::std::string& CMsgGCPlayerInfoSubmitResponse_EResult_Name(CMsgGCPlayerInfoSubmitResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCPlayerInfoSubmitResponse_EResult_descriptor(), value);
}
inline bool CMsgGCPlayerInfoSubmitResponse_EResult_Parse(
    const ::std::string& name, CMsgGCPlayerInfoSubmitResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCPlayerInfoSubmitResponse_EResult>(
    CMsgGCPlayerInfoSubmitResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCVoteForArcanaResponse_Result {
  CMsgClientToGCVoteForArcanaResponse_Result_SUCCEEDED = 0,
  CMsgClientToGCVoteForArcanaResponse_Result_VOTING_NOT_ENABLED_FOR_ROUND = 1,
  CMsgClientToGCVoteForArcanaResponse_Result_UNKNOWN_FAILURE = 2
};
bool CMsgClientToGCVoteForArcanaResponse_Result_IsValid(int value);
const CMsgClientToGCVoteForArcanaResponse_Result CMsgClientToGCVoteForArcanaResponse_Result_Result_MIN = CMsgClientToGCVoteForArcanaResponse_Result_SUCCEEDED;
const CMsgClientToGCVoteForArcanaResponse_Result CMsgClientToGCVoteForArcanaResponse_Result_Result_MAX = CMsgClientToGCVoteForArcanaResponse_Result_UNKNOWN_FAILURE;
const int CMsgClientToGCVoteForArcanaResponse_Result_Result_ARRAYSIZE = CMsgClientToGCVoteForArcanaResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCVoteForArcanaResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCVoteForArcanaResponse_Result_Name(CMsgClientToGCVoteForArcanaResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCVoteForArcanaResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCVoteForArcanaResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCVoteForArcanaResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCVoteForArcanaResponse_Result>(
    CMsgClientToGCVoteForArcanaResponse_Result_descriptor(), name, value);
}
enum CMsgArcanaVotes_VotingState {
  CMsgArcanaVotes_VotingState_FINISHED = 0,
  CMsgArcanaVotes_VotingState_IN_PROGRESS = 1,
  CMsgArcanaVotes_VotingState_IN_FUTURE = 2
};
bool CMsgArcanaVotes_VotingState_IsValid(int value);
const CMsgArcanaVotes_VotingState CMsgArcanaVotes_VotingState_VotingState_MIN = CMsgArcanaVotes_VotingState_FINISHED;
const CMsgArcanaVotes_VotingState CMsgArcanaVotes_VotingState_VotingState_MAX = CMsgArcanaVotes_VotingState_IN_FUTURE;
const int CMsgArcanaVotes_VotingState_VotingState_ARRAYSIZE = CMsgArcanaVotes_VotingState_VotingState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgArcanaVotes_VotingState_descriptor();
inline const ::std::string& CMsgArcanaVotes_VotingState_Name(CMsgArcanaVotes_VotingState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgArcanaVotes_VotingState_descriptor(), value);
}
inline bool CMsgArcanaVotes_VotingState_Parse(
    const ::std::string& name, CMsgArcanaVotes_VotingState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgArcanaVotes_VotingState>(
    CMsgArcanaVotes_VotingState_descriptor(), name, value);
}
enum CMsgDOTARedeemItemResponse_EResultCode {
  CMsgDOTARedeemItemResponse_EResultCode_k_Succeeded = 0,
  CMsgDOTARedeemItemResponse_EResultCode_k_Failed = 1
};
bool CMsgDOTARedeemItemResponse_EResultCode_IsValid(int value);
const CMsgDOTARedeemItemResponse_EResultCode CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MIN = CMsgDOTARedeemItemResponse_EResultCode_k_Succeeded;
const CMsgDOTARedeemItemResponse_EResultCode CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MAX = CMsgDOTARedeemItemResponse_EResultCode_k_Failed;
const int CMsgDOTARedeemItemResponse_EResultCode_EResultCode_ARRAYSIZE = CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTARedeemItemResponse_EResultCode_descriptor();
inline const ::std::string& CMsgDOTARedeemItemResponse_EResultCode_Name(CMsgDOTARedeemItemResponse_EResultCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTARedeemItemResponse_EResultCode_descriptor(), value);
}
inline bool CMsgDOTARedeemItemResponse_EResultCode_Parse(
    const ::std::string& name, CMsgDOTARedeemItemResponse_EResultCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTARedeemItemResponse_EResultCode>(
    CMsgDOTARedeemItemResponse_EResultCode_descriptor(), name, value);
}
enum CMsgPerfectWorldUserLookupResponse_EResultCode {
  CMsgPerfectWorldUserLookupResponse_EResultCode_SUCCESS_ACCOUNT_FOUND = 0,
  CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_UNKNOWN = 1,
  CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_USER_NAME_WRONG_FORMAT = 2,
  CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND = 3,
  CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND = 4
};
bool CMsgPerfectWorldUserLookupResponse_EResultCode_IsValid(int value);
const CMsgPerfectWorldUserLookupResponse_EResultCode CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MIN = CMsgPerfectWorldUserLookupResponse_EResultCode_SUCCESS_ACCOUNT_FOUND;
const CMsgPerfectWorldUserLookupResponse_EResultCode CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MAX = CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND;
const int CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_ARRAYSIZE = CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor();
inline const ::std::string& CMsgPerfectWorldUserLookupResponse_EResultCode_Name(CMsgPerfectWorldUserLookupResponse_EResultCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor(), value);
}
inline bool CMsgPerfectWorldUserLookupResponse_EResultCode_Parse(
    const ::std::string& name, CMsgPerfectWorldUserLookupResponse_EResultCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgPerfectWorldUserLookupResponse_EResultCode>(
    CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor(), name, value);
}
enum CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult {
  CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_SUCCESS = 0,
  CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_INVALID_MATCH = 1,
  CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_PREDICTIONS_ARE_CLOSED = 2,
  CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_OTHER_ERROR = 3
};
bool CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_IsValid(int value);
const CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MIN = CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_SUCCESS;
const CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MAX = CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_OTHER_ERROR;
const int CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor();
inline const ::std::string& CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_Name(CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor(), value);
}
inline bool CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_Parse(
    const ::std::string& name, CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult>(
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCOpenPlayerCardPackResponse_Result {
  CMsgClientToGCOpenPlayerCardPackResponse_Result_SUCCESS = 1,
  CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_INTERNAL = 2,
  CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_TO_FIND_PACK = 3,
  CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_ITEM_NOT_CARD_PACK = 4,
  CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_CARD_CREATE = 5
};
bool CMsgClientToGCOpenPlayerCardPackResponse_Result_IsValid(int value);
const CMsgClientToGCOpenPlayerCardPackResponse_Result CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MIN = CMsgClientToGCOpenPlayerCardPackResponse_Result_SUCCESS;
const CMsgClientToGCOpenPlayerCardPackResponse_Result CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MAX = CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_CARD_CREATE;
const int CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_ARRAYSIZE = CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCOpenPlayerCardPackResponse_Result_Name(CMsgClientToGCOpenPlayerCardPackResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCOpenPlayerCardPackResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCOpenPlayerCardPackResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCOpenPlayerCardPackResponse_Result>(
    CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCRecyclePlayerCardResponse_Result {
  CMsgClientToGCRecyclePlayerCardResponse_Result_SUCCESS = 1,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_INTERNAL = 2,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_FAILED_TO_FIND_PLAYER_CARD = 3,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_ITEM_NOT_PLAYER_CARD = 4,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_FAILED_DUST_CARD_CREATE = 5,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_CARD_LOCKED = 6
};
bool CMsgClientToGCRecyclePlayerCardResponse_Result_IsValid(int value);
const CMsgClientToGCRecyclePlayerCardResponse_Result CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MIN = CMsgClientToGCRecyclePlayerCardResponse_Result_SUCCESS;
const CMsgClientToGCRecyclePlayerCardResponse_Result CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MAX = CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_CARD_LOCKED;
const int CMsgClientToGCRecyclePlayerCardResponse_Result_Result_ARRAYSIZE = CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCRecyclePlayerCardResponse_Result_Name(CMsgClientToGCRecyclePlayerCardResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCRecyclePlayerCardResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCRecyclePlayerCardResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCRecyclePlayerCardResponse_Result>(
    CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCCreatePlayerCardPackResponse_Result {
  CMsgClientToGCCreatePlayerCardPackResponse_Result_SUCCESS = 1,
  CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_INTERNAL = 2,
  CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_INSUFFICIENT_DUST = 3,
  CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_ITEM_NOT_DUST_ITEM = 4,
  CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_FAILED_CARD_PACK_CREATE = 5
};
bool CMsgClientToGCCreatePlayerCardPackResponse_Result_IsValid(int value);
const CMsgClientToGCCreatePlayerCardPackResponse_Result CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MIN = CMsgClientToGCCreatePlayerCardPackResponse_Result_SUCCESS;
const CMsgClientToGCCreatePlayerCardPackResponse_Result CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MAX = CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_FAILED_CARD_PACK_CREATE;
const int CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_ARRAYSIZE = CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCCreatePlayerCardPackResponse_Result_Name(CMsgClientToGCCreatePlayerCardPackResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCCreatePlayerCardPackResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCCreatePlayerCardPackResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCCreatePlayerCardPackResponse_Result>(
    CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCGiveTipResponse_Result {
  CMsgClientToGCGiveTipResponse_Result_SUCCESS = 0,
  CMsgClientToGCGiveTipResponse_Result_ERROR_ALREADY_TIPPED = 1,
  CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_MATCH_ID = 2,
  CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_EVENT_ID = 3,
  CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_MATCH_TIME = 4,
  CMsgClientToGCGiveTipResponse_Result_ERROR_NOT_WINNER = 5,
  CMsgClientToGCGiveTipResponse_Result_ERROR_UNOWNED_EVENT = 6,
  CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_LOBBY_TYPE = 7,
  CMsgClientToGCGiveTipResponse_Result_ERROR_UNKNOWN = 8
};
bool CMsgClientToGCGiveTipResponse_Result_IsValid(int value);
const CMsgClientToGCGiveTipResponse_Result CMsgClientToGCGiveTipResponse_Result_Result_MIN = CMsgClientToGCGiveTipResponse_Result_SUCCESS;
const CMsgClientToGCGiveTipResponse_Result CMsgClientToGCGiveTipResponse_Result_Result_MAX = CMsgClientToGCGiveTipResponse_Result_ERROR_UNKNOWN;
const int CMsgClientToGCGiveTipResponse_Result_Result_ARRAYSIZE = CMsgClientToGCGiveTipResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCGiveTipResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCGiveTipResponse_Result_Name(CMsgClientToGCGiveTipResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCGiveTipResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCGiveTipResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCGiveTipResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCGiveTipResponse_Result>(
    CMsgClientToGCGiveTipResponse_Result_descriptor(), name, value);
}
enum CMsgDOTAAnchorPhoneNumberResponse_Result {
  CMsgDOTAAnchorPhoneNumberResponse_Result_SUCCESS = 0,
  CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_UNKNOWN = 1,
  CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_NO_STEAM_PHONE = 2,
  CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_ALREADY_IN_USE = 3,
  CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_COOLDOWN_ACTIVE = 4
};
bool CMsgDOTAAnchorPhoneNumberResponse_Result_IsValid(int value);
const CMsgDOTAAnchorPhoneNumberResponse_Result CMsgDOTAAnchorPhoneNumberResponse_Result_Result_MIN = CMsgDOTAAnchorPhoneNumberResponse_Result_SUCCESS;
const CMsgDOTAAnchorPhoneNumberResponse_Result CMsgDOTAAnchorPhoneNumberResponse_Result_Result_MAX = CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_COOLDOWN_ACTIVE;
const int CMsgDOTAAnchorPhoneNumberResponse_Result_Result_ARRAYSIZE = CMsgDOTAAnchorPhoneNumberResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAAnchorPhoneNumberResponse_Result_descriptor();
inline const ::std::string& CMsgDOTAAnchorPhoneNumberResponse_Result_Name(CMsgDOTAAnchorPhoneNumberResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAAnchorPhoneNumberResponse_Result_descriptor(), value);
}
inline bool CMsgDOTAAnchorPhoneNumberResponse_Result_Parse(
    const ::std::string& name, CMsgDOTAAnchorPhoneNumberResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAAnchorPhoneNumberResponse_Result>(
    CMsgDOTAAnchorPhoneNumberResponse_Result_descriptor(), name, value);
}
enum CMsgDOTAUnanchorPhoneNumberResponse_Result {
  CMsgDOTAUnanchorPhoneNumberResponse_Result_SUCCESS = 0,
  CMsgDOTAUnanchorPhoneNumberResponse_Result_ERROR_UNKNOWN = 1
};
bool CMsgDOTAUnanchorPhoneNumberResponse_Result_IsValid(int value);
const CMsgDOTAUnanchorPhoneNumberResponse_Result CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_MIN = CMsgDOTAUnanchorPhoneNumberResponse_Result_SUCCESS;
const CMsgDOTAUnanchorPhoneNumberResponse_Result CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_MAX = CMsgDOTAUnanchorPhoneNumberResponse_Result_ERROR_UNKNOWN;
const int CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_ARRAYSIZE = CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAUnanchorPhoneNumberResponse_Result_descriptor();
inline const ::std::string& CMsgDOTAUnanchorPhoneNumberResponse_Result_Name(CMsgDOTAUnanchorPhoneNumberResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAUnanchorPhoneNumberResponse_Result_descriptor(), value);
}
inline bool CMsgDOTAUnanchorPhoneNumberResponse_Result_Parse(
    const ::std::string& name, CMsgDOTAUnanchorPhoneNumberResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAUnanchorPhoneNumberResponse_Result>(
    CMsgDOTAUnanchorPhoneNumberResponse_Result_descriptor(), name, value);
}
enum CMsgGCToClientAllStarVotesSubmitReply_Result {
  CMsgGCToClientAllStarVotesSubmitReply_Result_SUCCESS = 1,
  CMsgGCToClientAllStarVotesSubmitReply_Result_ERROR_INTERNAL = 2,
  CMsgGCToClientAllStarVotesSubmitReply_Result_ERROR_INVALID_EVENT_ID = 3,
  CMsgGCToClientAllStarVotesSubmitReply_Result_ERROR_INVALID_ACCOUNT_ID = 4,
  CMsgGCToClientAllStarVotesSubmitReply_Result_ERROR_SELECTIONS_LOCKED = 5
};
bool CMsgGCToClientAllStarVotesSubmitReply_Result_IsValid(int value);
const CMsgGCToClientAllStarVotesSubmitReply_Result CMsgGCToClientAllStarVotesSubmitReply_Result_Result_MIN = CMsgGCToClientAllStarVotesSubmitReply_Result_SUCCESS;
const CMsgGCToClientAllStarVotesSubmitReply_Result CMsgGCToClientAllStarVotesSubmitReply_Result_Result_MAX = CMsgGCToClientAllStarVotesSubmitReply_Result_ERROR_SELECTIONS_LOCKED;
const int CMsgGCToClientAllStarVotesSubmitReply_Result_Result_ARRAYSIZE = CMsgGCToClientAllStarVotesSubmitReply_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCToClientAllStarVotesSubmitReply_Result_descriptor();
inline const ::std::string& CMsgGCToClientAllStarVotesSubmitReply_Result_Name(CMsgGCToClientAllStarVotesSubmitReply_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCToClientAllStarVotesSubmitReply_Result_descriptor(), value);
}
inline bool CMsgGCToClientAllStarVotesSubmitReply_Result_Parse(
    const ::std::string& name, CMsgGCToClientAllStarVotesSubmitReply_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCToClientAllStarVotesSubmitReply_Result>(
    CMsgGCToClientAllStarVotesSubmitReply_Result_descriptor(), name, value);
}
enum CMsgDOTASelectionPriorityChoiceResponse_Result {
  CMsgDOTASelectionPriorityChoiceResponse_Result_SUCCESS = 0,
  CMsgDOTASelectionPriorityChoiceResponse_Result_ERROR_UNKNOWN = 1
};
bool CMsgDOTASelectionPriorityChoiceResponse_Result_IsValid(int value);
const CMsgDOTASelectionPriorityChoiceResponse_Result CMsgDOTASelectionPriorityChoiceResponse_Result_Result_MIN = CMsgDOTASelectionPriorityChoiceResponse_Result_SUCCESS;
const CMsgDOTASelectionPriorityChoiceResponse_Result CMsgDOTASelectionPriorityChoiceResponse_Result_Result_MAX = CMsgDOTASelectionPriorityChoiceResponse_Result_ERROR_UNKNOWN;
const int CMsgDOTASelectionPriorityChoiceResponse_Result_Result_ARRAYSIZE = CMsgDOTASelectionPriorityChoiceResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTASelectionPriorityChoiceResponse_Result_descriptor();
inline const ::std::string& CMsgDOTASelectionPriorityChoiceResponse_Result_Name(CMsgDOTASelectionPriorityChoiceResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTASelectionPriorityChoiceResponse_Result_descriptor(), value);
}
inline bool CMsgDOTASelectionPriorityChoiceResponse_Result_Parse(
    const ::std::string& name, CMsgDOTASelectionPriorityChoiceResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTASelectionPriorityChoiceResponse_Result>(
    CMsgDOTASelectionPriorityChoiceResponse_Result_descriptor(), name, value);
}
enum CMsgDOTAGameAutographRewardResponse_Result {
  CMsgDOTAGameAutographRewardResponse_Result_SUCCESS = 0,
  CMsgDOTAGameAutographRewardResponse_Result_ERROR_UNKNOWN = 1
};
bool CMsgDOTAGameAutographRewardResponse_Result_IsValid(int value);
const CMsgDOTAGameAutographRewardResponse_Result CMsgDOTAGameAutographRewardResponse_Result_Result_MIN = CMsgDOTAGameAutographRewardResponse_Result_SUCCESS;
const CMsgDOTAGameAutographRewardResponse_Result CMsgDOTAGameAutographRewardResponse_Result_Result_MAX = CMsgDOTAGameAutographRewardResponse_Result_ERROR_UNKNOWN;
const int CMsgDOTAGameAutographRewardResponse_Result_Result_ARRAYSIZE = CMsgDOTAGameAutographRewardResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAGameAutographRewardResponse_Result_descriptor();
inline const ::std::string& CMsgDOTAGameAutographRewardResponse_Result_Name(CMsgDOTAGameAutographRewardResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAGameAutographRewardResponse_Result_descriptor(), value);
}
inline bool CMsgDOTAGameAutographRewardResponse_Result_Parse(
    const ::std::string& name, CMsgDOTAGameAutographRewardResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAGameAutographRewardResponse_Result>(
    CMsgDOTAGameAutographRewardResponse_Result_descriptor(), name, value);
}
enum CMsgDOTADestroyLobbyResponse_Result {
  CMsgDOTADestroyLobbyResponse_Result_SUCCESS = 0,
  CMsgDOTADestroyLobbyResponse_Result_ERROR_UNKNOWN = 1
};
bool CMsgDOTADestroyLobbyResponse_Result_IsValid(int value);
const CMsgDOTADestroyLobbyResponse_Result CMsgDOTADestroyLobbyResponse_Result_Result_MIN = CMsgDOTADestroyLobbyResponse_Result_SUCCESS;
const CMsgDOTADestroyLobbyResponse_Result CMsgDOTADestroyLobbyResponse_Result_Result_MAX = CMsgDOTADestroyLobbyResponse_Result_ERROR_UNKNOWN;
const int CMsgDOTADestroyLobbyResponse_Result_Result_ARRAYSIZE = CMsgDOTADestroyLobbyResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTADestroyLobbyResponse_Result_descriptor();
inline const ::std::string& CMsgDOTADestroyLobbyResponse_Result_Name(CMsgDOTADestroyLobbyResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTADestroyLobbyResponse_Result_descriptor(), value);
}
inline bool CMsgDOTADestroyLobbyResponse_Result_Parse(
    const ::std::string& name, CMsgDOTADestroyLobbyResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTADestroyLobbyResponse_Result>(
    CMsgDOTADestroyLobbyResponse_Result_descriptor(), name, value);
}
enum CMsgPurchaseItemWithEventPointsResponse_Result {
  CMsgPurchaseItemWithEventPointsResponse_Result_SUCCESS = 0,
  CMsgPurchaseItemWithEventPointsResponse_Result_UNKNOWN_EVENT = 1,
  CMsgPurchaseItemWithEventPointsResponse_Result_UNKNOWN_ITEM = 2,
  CMsgPurchaseItemWithEventPointsResponse_Result_BAD_QUANTITY = 3,
  CMsgPurchaseItemWithEventPointsResponse_Result_NOT_PURCHASEABLE = 4,
  CMsgPurchaseItemWithEventPointsResponse_Result_SDO_LOAD_FAILED = 5,
  CMsgPurchaseItemWithEventPointsResponse_Result_NOT_ENOUGH_POINTS = 6,
  CMsgPurchaseItemWithEventPointsResponse_Result_SQL_ERROR = 7,
  CMsgPurchaseItemWithEventPointsResponse_Result_FAILED_TO_SEND = 8,
  CMsgPurchaseItemWithEventPointsResponse_Result_SERVER_ERROR = 9,
  CMsgPurchaseItemWithEventPointsResponse_Result_NOT_ALLOWED = 10,
  CMsgPurchaseItemWithEventPointsResponse_Result_CANCELLED = 11,
  CMsgPurchaseItemWithEventPointsResponse_Result_CLIENT_ERROR = 12
};
bool CMsgPurchaseItemWithEventPointsResponse_Result_IsValid(int value);
const CMsgPurchaseItemWithEventPointsResponse_Result CMsgPurchaseItemWithEventPointsResponse_Result_Result_MIN = CMsgPurchaseItemWithEventPointsResponse_Result_SUCCESS;
const CMsgPurchaseItemWithEventPointsResponse_Result CMsgPurchaseItemWithEventPointsResponse_Result_Result_MAX = CMsgPurchaseItemWithEventPointsResponse_Result_CLIENT_ERROR;
const int CMsgPurchaseItemWithEventPointsResponse_Result_Result_ARRAYSIZE = CMsgPurchaseItemWithEventPointsResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgPurchaseItemWithEventPointsResponse_Result_descriptor();
inline const ::std::string& CMsgPurchaseItemWithEventPointsResponse_Result_Name(CMsgPurchaseItemWithEventPointsResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgPurchaseItemWithEventPointsResponse_Result_descriptor(), value);
}
inline bool CMsgPurchaseItemWithEventPointsResponse_Result_Parse(
    const ::std::string& name, CMsgPurchaseItemWithEventPointsResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgPurchaseItemWithEventPointsResponse_Result>(
    CMsgPurchaseItemWithEventPointsResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCRecycleHeroRelicResponse_Result {
  CMsgClientToGCRecycleHeroRelicResponse_Result_SUCCESS = 1,
  CMsgClientToGCRecycleHeroRelicResponse_Result_ERROR_INTERNAL = 2,
  CMsgClientToGCRecycleHeroRelicResponse_Result_ERROR_FAILED_TO_FIND_HERO_RELIC = 3,
  CMsgClientToGCRecycleHeroRelicResponse_Result_ERROR_ITEM_NOT_HERO_RELIC = 4,
  CMsgClientToGCRecycleHeroRelicResponse_Result_ERROR_FAILED_EVENT_NOT_OWNED = 5
};
bool CMsgClientToGCRecycleHeroRelicResponse_Result_IsValid(int value);
const CMsgClientToGCRecycleHeroRelicResponse_Result CMsgClientToGCRecycleHeroRelicResponse_Result_Result_MIN = CMsgClientToGCRecycleHeroRelicResponse_Result_SUCCESS;
const CMsgClientToGCRecycleHeroRelicResponse_Result CMsgClientToGCRecycleHeroRelicResponse_Result_Result_MAX = CMsgClientToGCRecycleHeroRelicResponse_Result_ERROR_FAILED_EVENT_NOT_OWNED;
const int CMsgClientToGCRecycleHeroRelicResponse_Result_Result_ARRAYSIZE = CMsgClientToGCRecycleHeroRelicResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCRecycleHeroRelicResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCRecycleHeroRelicResponse_Result_Name(CMsgClientToGCRecycleHeroRelicResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCRecycleHeroRelicResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCRecycleHeroRelicResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCRecycleHeroRelicResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCRecycleHeroRelicResponse_Result>(
    CMsgClientToGCRecycleHeroRelicResponse_Result_descriptor(), name, value);
}
enum CMsgProfileResponse_EResponse {
  CMsgProfileResponse_EResponse_k_eInternalError = 0,
  CMsgProfileResponse_EResponse_k_eSuccess = 1,
  CMsgProfileResponse_EResponse_k_eTooBusy = 2,
  CMsgProfileResponse_EResponse_k_eDisabled = 3
};
bool CMsgProfileResponse_EResponse_IsValid(int value);
const CMsgProfileResponse_EResponse CMsgProfileResponse_EResponse_EResponse_MIN = CMsgProfileResponse_EResponse_k_eInternalError;
const CMsgProfileResponse_EResponse CMsgProfileResponse_EResponse_EResponse_MAX = CMsgProfileResponse_EResponse_k_eDisabled;
const int CMsgProfileResponse_EResponse_EResponse_ARRAYSIZE = CMsgProfileResponse_EResponse_EResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgProfileResponse_EResponse_descriptor();
inline const ::std::string& CMsgProfileResponse_EResponse_Name(CMsgProfileResponse_EResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgProfileResponse_EResponse_descriptor(), value);
}
inline bool CMsgProfileResponse_EResponse_Parse(
    const ::std::string& name, CMsgProfileResponse_EResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgProfileResponse_EResponse>(
    CMsgProfileResponse_EResponse_descriptor(), name, value);
}
enum CMsgProfileUpdateResponse_Result {
  CMsgProfileUpdateResponse_Result_SUCCESS = 0,
  CMsgProfileUpdateResponse_Result_FAILURE = 1
};
bool CMsgProfileUpdateResponse_Result_IsValid(int value);
const CMsgProfileUpdateResponse_Result CMsgProfileUpdateResponse_Result_Result_MIN = CMsgProfileUpdateResponse_Result_SUCCESS;
const CMsgProfileUpdateResponse_Result CMsgProfileUpdateResponse_Result_Result_MAX = CMsgProfileUpdateResponse_Result_FAILURE;
const int CMsgProfileUpdateResponse_Result_Result_ARRAYSIZE = CMsgProfileUpdateResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgProfileUpdateResponse_Result_descriptor();
inline const ::std::string& CMsgProfileUpdateResponse_Result_Name(CMsgProfileUpdateResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgProfileUpdateResponse_Result_descriptor(), value);
}
inline bool CMsgProfileUpdateResponse_Result_Parse(
    const ::std::string& name, CMsgProfileUpdateResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgProfileUpdateResponse_Result>(
    CMsgProfileUpdateResponse_Result_descriptor(), name, value);
}
enum CMsgActivatePlusFreeTrialResponse_Result {
  CMsgActivatePlusFreeTrialResponse_Result_SUCCESS = 0,
  CMsgActivatePlusFreeTrialResponse_Result_ERROR_GENERIC = 1,
  CMsgActivatePlusFreeTrialResponse_Result_ERROR_ALREADY_IN_FREE_TRIAL = 2,
  CMsgActivatePlusFreeTrialResponse_Result_ERROR_ALREADY_USED_FREE_TRIAL = 3,
  CMsgActivatePlusFreeTrialResponse_Result_ERROR_OFFER_NOT_VALID = 4
};
bool CMsgActivatePlusFreeTrialResponse_Result_IsValid(int value);
const CMsgActivatePlusFreeTrialResponse_Result CMsgActivatePlusFreeTrialResponse_Result_Result_MIN = CMsgActivatePlusFreeTrialResponse_Result_SUCCESS;
const CMsgActivatePlusFreeTrialResponse_Result CMsgActivatePlusFreeTrialResponse_Result_Result_MAX = CMsgActivatePlusFreeTrialResponse_Result_ERROR_OFFER_NOT_VALID;
const int CMsgActivatePlusFreeTrialResponse_Result_Result_ARRAYSIZE = CMsgActivatePlusFreeTrialResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgActivatePlusFreeTrialResponse_Result_descriptor();
inline const ::std::string& CMsgActivatePlusFreeTrialResponse_Result_Name(CMsgActivatePlusFreeTrialResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgActivatePlusFreeTrialResponse_Result_descriptor(), value);
}
inline bool CMsgActivatePlusFreeTrialResponse_Result_Parse(
    const ::std::string& name, CMsgActivatePlusFreeTrialResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgActivatePlusFreeTrialResponse_Result>(
    CMsgActivatePlusFreeTrialResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCCavernCrawlClaimRoomResponse_Result {
  CMsgClientToGCCavernCrawlClaimRoomResponse_Result_SUCCESS = 0,
  CMsgClientToGCCavernCrawlClaimRoomResponse_Result_ERROR_UNKNOWN = 1,
  CMsgClientToGCCavernCrawlClaimRoomResponse_Result_RECEIVED_ULTRA_RARE_REWARD = 2
};
bool CMsgClientToGCCavernCrawlClaimRoomResponse_Result_IsValid(int value);
const CMsgClientToGCCavernCrawlClaimRoomResponse_Result CMsgClientToGCCavernCrawlClaimRoomResponse_Result_Result_MIN = CMsgClientToGCCavernCrawlClaimRoomResponse_Result_SUCCESS;
const CMsgClientToGCCavernCrawlClaimRoomResponse_Result CMsgClientToGCCavernCrawlClaimRoomResponse_Result_Result_MAX = CMsgClientToGCCavernCrawlClaimRoomResponse_Result_RECEIVED_ULTRA_RARE_REWARD;
const int CMsgClientToGCCavernCrawlClaimRoomResponse_Result_Result_ARRAYSIZE = CMsgClientToGCCavernCrawlClaimRoomResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCCavernCrawlClaimRoomResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCCavernCrawlClaimRoomResponse_Result_Name(CMsgClientToGCCavernCrawlClaimRoomResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCCavernCrawlClaimRoomResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCCavernCrawlClaimRoomResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCCavernCrawlClaimRoomResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCCavernCrawlClaimRoomResponse_Result>(
    CMsgClientToGCCavernCrawlClaimRoomResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result {
  CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_SUCCESS = 0,
  CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_ERROR_UNKNOWN = 1,
  CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_RECEIVED_ULTRA_RARE_REWARD = 2
};
bool CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_IsValid(int value);
const CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_Result_MIN = CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_SUCCESS;
const CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_Result_MAX = CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_RECEIVED_ULTRA_RARE_REWARD;
const int CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_Result_ARRAYSIZE = CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_Name(CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result>(
    CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result {
  CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_SUCCESS = 0,
  CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_ERROR_UNKNOWN = 1,
  CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_RECEIVED_ULTRA_RARE_REWARD = 2
};
bool CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_IsValid(int value);
const CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_Result_MIN = CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_SUCCESS;
const CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_Result_MAX = CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_RECEIVED_ULTRA_RARE_REWARD;
const int CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_Result_ARRAYSIZE = CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_Name(CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result>(
    CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCCavernCrawlRequestMapStateResponse_Result {
  CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_SUCCESS = 0,
  CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_ERROR_UNKNOWN = 1,
  CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_EVENT_NOT_OWNED = 2
};
bool CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_IsValid(int value);
const CMsgClientToGCCavernCrawlRequestMapStateResponse_Result CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_Result_MIN = CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_SUCCESS;
const CMsgClientToGCCavernCrawlRequestMapStateResponse_Result CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_Result_MAX = CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_EVENT_NOT_OWNED;
const int CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_Result_ARRAYSIZE = CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_Name(CMsgClientToGCCavernCrawlRequestMapStateResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCCavernCrawlRequestMapStateResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCCavernCrawlRequestMapStateResponse_Result>(
    CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result {
  CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_SUCCESS = 0,
  CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_ERROR_UNKNOWN = 1,
  CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_EVENT_NOT_OWNED = 2
};
bool CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_IsValid(int value);
const CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_Result_MIN = CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_SUCCESS;
const CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_Result_MAX = CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_EVENT_NOT_OWNED;
const int CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_Result_ARRAYSIZE = CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_Name(CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result>(
    CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_descriptor(), name, value);
}
enum CMsgSocialFeedResponse_Result {
  CMsgSocialFeedResponse_Result_SUCCESS = 0,
  CMsgSocialFeedResponse_Result_FAILED_TO_LOAD_FRIENDS = 1,
  CMsgSocialFeedResponse_Result_FAILED_TO_LOAD_FEED_DATA = 2,
  CMsgSocialFeedResponse_Result_FAILED_TO_LOAD_FEED_ENTRY = 3,
  CMsgSocialFeedResponse_Result_FAILED_TO_LOAD_COMMENTS = 4,
  CMsgSocialFeedResponse_Result_FAILED_TOO_MANY_REQUESTS = 5
};
bool CMsgSocialFeedResponse_Result_IsValid(int value);
const CMsgSocialFeedResponse_Result CMsgSocialFeedResponse_Result_Result_MIN = CMsgSocialFeedResponse_Result_SUCCESS;
const CMsgSocialFeedResponse_Result CMsgSocialFeedResponse_Result_Result_MAX = CMsgSocialFeedResponse_Result_FAILED_TOO_MANY_REQUESTS;
const int CMsgSocialFeedResponse_Result_Result_ARRAYSIZE = CMsgSocialFeedResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgSocialFeedResponse_Result_descriptor();
inline const ::std::string& CMsgSocialFeedResponse_Result_Name(CMsgSocialFeedResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgSocialFeedResponse_Result_descriptor(), value);
}
inline bool CMsgSocialFeedResponse_Result_Parse(
    const ::std::string& name, CMsgSocialFeedResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgSocialFeedResponse_Result>(
    CMsgSocialFeedResponse_Result_descriptor(), name, value);
}
enum CMsgSocialFeedCommentsResponse_Result {
  CMsgSocialFeedCommentsResponse_Result_SUCCESS = 0,
  CMsgSocialFeedCommentsResponse_Result_FAILED_TOO_MANY_REQUESTS = 1,
  CMsgSocialFeedCommentsResponse_Result_FAILED_TO_LOAD_COMMENTS = 2
};
bool CMsgSocialFeedCommentsResponse_Result_IsValid(int value);
const CMsgSocialFeedCommentsResponse_Result CMsgSocialFeedCommentsResponse_Result_Result_MIN = CMsgSocialFeedCommentsResponse_Result_SUCCESS;
const CMsgSocialFeedCommentsResponse_Result CMsgSocialFeedCommentsResponse_Result_Result_MAX = CMsgSocialFeedCommentsResponse_Result_FAILED_TO_LOAD_COMMENTS;
const int CMsgSocialFeedCommentsResponse_Result_Result_ARRAYSIZE = CMsgSocialFeedCommentsResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgSocialFeedCommentsResponse_Result_descriptor();
inline const ::std::string& CMsgSocialFeedCommentsResponse_Result_Name(CMsgSocialFeedCommentsResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgSocialFeedCommentsResponse_Result_descriptor(), value);
}
inline bool CMsgSocialFeedCommentsResponse_Result_Parse(
    const ::std::string& name, CMsgSocialFeedCommentsResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgSocialFeedCommentsResponse_Result>(
    CMsgSocialFeedCommentsResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result {
  CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_SUCCESS = 1,
  CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_ERROR_INTERNAL = 2,
  CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_ERROR_INSUFFICIENT_DUST = 3,
  CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_ERROR_ITEM_NOT_DUST_ITEM = 4,
  CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_ERROR_FAILED_CARD_PACK_CREATE = 5
};
bool CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_IsValid(int value);
const CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_Result_MIN = CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_SUCCESS;
const CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_Result_MAX = CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_ERROR_FAILED_CARD_PACK_CREATE;
const int CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_Result_ARRAYSIZE = CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_Name(CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result>(
    CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_descriptor(), name, value);
}
enum CMsgGCToClientRecordContestVoteResponse_EResult {
  CMsgGCToClientRecordContestVoteResponse_EResult_SUCCESS = 0,
  CMsgGCToClientRecordContestVoteResponse_EResult_FAILED_EVENT_NOT_OWNED = 1,
  CMsgGCToClientRecordContestVoteResponse_EResult_FAILED_SQL_INSERT_FAILED = 2
};
bool CMsgGCToClientRecordContestVoteResponse_EResult_IsValid(int value);
const CMsgGCToClientRecordContestVoteResponse_EResult CMsgGCToClientRecordContestVoteResponse_EResult_EResult_MIN = CMsgGCToClientRecordContestVoteResponse_EResult_SUCCESS;
const CMsgGCToClientRecordContestVoteResponse_EResult CMsgGCToClientRecordContestVoteResponse_EResult_EResult_MAX = CMsgGCToClientRecordContestVoteResponse_EResult_FAILED_SQL_INSERT_FAILED;
const int CMsgGCToClientRecordContestVoteResponse_EResult_EResult_ARRAYSIZE = CMsgGCToClientRecordContestVoteResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCToClientRecordContestVoteResponse_EResult_descriptor();
inline const ::std::string& CMsgGCToClientRecordContestVoteResponse_EResult_Name(CMsgGCToClientRecordContestVoteResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCToClientRecordContestVoteResponse_EResult_descriptor(), value);
}
inline bool CMsgGCToClientRecordContestVoteResponse_EResult_Parse(
    const ::std::string& name, CMsgGCToClientRecordContestVoteResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCToClientRecordContestVoteResponse_EResult>(
    CMsgGCToClientRecordContestVoteResponse_EResult_descriptor(), name, value);
}
enum CMsgDOTADPCFeed_EFeedElementType {
  CMsgDOTADPCFeed_EFeedElementType_FEED_SERIES_RESULT = 1,
  CMsgDOTADPCFeed_EFeedElementType_FEED_MATCH_POPULAR = 2,
  CMsgDOTADPCFeed_EFeedElementType_FEED_TEAM_UPCOMING_MATCH = 3,
  CMsgDOTADPCFeed_EFeedElementType_FEED_TEAM_LEAGUE_RESULT = 4,
  CMsgDOTADPCFeed_EFeedElementType_FEED_TEAM_ADD_PLAYER = 5,
  CMsgDOTADPCFeed_EFeedElementType_FEED_TEAM_REMOVE_PLAYER = 6,
  CMsgDOTADPCFeed_EFeedElementType_FEED_TEAM_DISBAND = 7,
  CMsgDOTADPCFeed_EFeedElementType_FEED_LEAGUE_UPCOMING = 8,
  CMsgDOTADPCFeed_EFeedElementType_FEED_LEAGUE_CONCLUDED = 9,
  CMsgDOTADPCFeed_EFeedElementType_FEED_DPC_STANDINGS = 10,
  CMsgDOTADPCFeed_EFeedElementType_FEED_ALERT_PREDICTIONS = 11,
  CMsgDOTADPCFeed_EFeedElementType_FEED_ALERT_FANTASY = 12,
  CMsgDOTADPCFeed_EFeedElementType_FEED_LEAGUE_LIVE_MATCH = 13
};
bool CMsgDOTADPCFeed_EFeedElementType_IsValid(int value);
const CMsgDOTADPCFeed_EFeedElementType CMsgDOTADPCFeed_EFeedElementType_EFeedElementType_MIN = CMsgDOTADPCFeed_EFeedElementType_FEED_SERIES_RESULT;
const CMsgDOTADPCFeed_EFeedElementType CMsgDOTADPCFeed_EFeedElementType_EFeedElementType_MAX = CMsgDOTADPCFeed_EFeedElementType_FEED_LEAGUE_LIVE_MATCH;
const int CMsgDOTADPCFeed_EFeedElementType_EFeedElementType_ARRAYSIZE = CMsgDOTADPCFeed_EFeedElementType_EFeedElementType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTADPCFeed_EFeedElementType_descriptor();
inline const ::std::string& CMsgDOTADPCFeed_EFeedElementType_Name(CMsgDOTADPCFeed_EFeedElementType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTADPCFeed_EFeedElementType_descriptor(), value);
}
inline bool CMsgDOTADPCFeed_EFeedElementType_Parse(
    const ::std::string& name, CMsgDOTADPCFeed_EFeedElementType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTADPCFeed_EFeedElementType>(
    CMsgDOTADPCFeed_EFeedElementType_descriptor(), name, value);
}
enum DOTA_WatchReplayType {
  DOTA_WATCH_REPLAY_NORMAL = 0,
  DOTA_WATCH_REPLAY_HIGHLIGHTS = 1
};
bool DOTA_WatchReplayType_IsValid(int value);
const DOTA_WatchReplayType DOTA_WatchReplayType_MIN = DOTA_WATCH_REPLAY_NORMAL;
const DOTA_WatchReplayType DOTA_WatchReplayType_MAX = DOTA_WATCH_REPLAY_HIGHLIGHTS;
const int DOTA_WatchReplayType_ARRAYSIZE = DOTA_WatchReplayType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_WatchReplayType_descriptor();
inline const ::std::string& DOTA_WatchReplayType_Name(DOTA_WatchReplayType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_WatchReplayType_descriptor(), value);
}
inline bool DOTA_WatchReplayType_Parse(
    const ::std::string& name, DOTA_WatchReplayType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_WatchReplayType>(
    DOTA_WatchReplayType_descriptor(), name, value);
}
enum EItemEditorReservationResult {
  k_EItemEditorReservationResult_OK = 1,
  k_EItemEditorReservationResult_AlreadyExists = 2,
  k_EItemEditorReservationResult_Reserved = 3,
  k_EItemEditorReservationResult_TimedOut = 4
};
bool EItemEditorReservationResult_IsValid(int value);
const EItemEditorReservationResult EItemEditorReservationResult_MIN = k_EItemEditorReservationResult_OK;
const EItemEditorReservationResult EItemEditorReservationResult_MAX = k_EItemEditorReservationResult_TimedOut;
const int EItemEditorReservationResult_ARRAYSIZE = EItemEditorReservationResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* EItemEditorReservationResult_descriptor();
inline const ::std::string& EItemEditorReservationResult_Name(EItemEditorReservationResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    EItemEditorReservationResult_descriptor(), value);
}
inline bool EItemEditorReservationResult_Parse(
    const ::std::string& name, EItemEditorReservationResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EItemEditorReservationResult>(
    EItemEditorReservationResult_descriptor(), name, value);
}
enum EFeaturedHeroTextField {
  k_EFeaturedHeroTextField_NewHero = 0,
  k_EFeaturedHeroTextField_NewItem = 1,
  k_EFeaturedHeroTextField_ItemSetDescription = 2,
  k_EFeaturedHeroTextField_ItemDescription = 3,
  k_EFeaturedHeroTextField_Hype = 4,
  k_EFeaturedHeroTextField_HeroWinLoss = 5,
  k_EFeaturedHeroTextField_FrequentlyPlayedHero = 6,
  k_EFeaturedHeroTextField_FeaturedItem = 7,
  k_EFeaturedHeroTextField_PopularItem = 8,
  k_EFeaturedHeroTextField_SaleItem = 9,
  k_EFeaturedHeroTextField_SaleDiscount = 10,
  k_EFeaturedHeroTextField_Container = 11
};
bool EFeaturedHeroTextField_IsValid(int value);
const EFeaturedHeroTextField EFeaturedHeroTextField_MIN = k_EFeaturedHeroTextField_NewHero;
const EFeaturedHeroTextField EFeaturedHeroTextField_MAX = k_EFeaturedHeroTextField_Container;
const int EFeaturedHeroTextField_ARRAYSIZE = EFeaturedHeroTextField_MAX + 1;

const ::google::protobuf::EnumDescriptor* EFeaturedHeroTextField_descriptor();
inline const ::std::string& EFeaturedHeroTextField_Name(EFeaturedHeroTextField value) {
  return ::google::protobuf::internal::NameOfEnum(
    EFeaturedHeroTextField_descriptor(), value);
}
inline bool EFeaturedHeroTextField_Parse(
    const ::std::string& name, EFeaturedHeroTextField* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EFeaturedHeroTextField>(
    EFeaturedHeroTextField_descriptor(), name, value);
}
enum EFeaturedHeroDataType {
  k_EFeaturedHeroDataType_HeroID = 0,
  k_EFeaturedHeroDataType_ItemDef = 1,
  k_EFeaturedHeroDataType_HypeString = 2,
  k_EFeaturedHeroDataType_StartTimestamp = 3,
  k_EFeaturedHeroDataType_ExpireTimestamp = 4,
  k_EFeaturedHeroDataType_HeroWins = 5,
  k_EFeaturedHeroDataType_HeroLosses = 6,
  k_EFeaturedHeroDataType_SaleDiscount = 7,
  k_EFeaturedHeroDataType_ContainerItemDef = 8
};
bool EFeaturedHeroDataType_IsValid(int value);
const EFeaturedHeroDataType EFeaturedHeroDataType_MIN = k_EFeaturedHeroDataType_HeroID;
const EFeaturedHeroDataType EFeaturedHeroDataType_MAX = k_EFeaturedHeroDataType_ContainerItemDef;
const int EFeaturedHeroDataType_ARRAYSIZE = EFeaturedHeroDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EFeaturedHeroDataType_descriptor();
inline const ::std::string& EFeaturedHeroDataType_Name(EFeaturedHeroDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EFeaturedHeroDataType_descriptor(), value);
}
inline bool EFeaturedHeroDataType_Parse(
    const ::std::string& name, EFeaturedHeroDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EFeaturedHeroDataType>(
    EFeaturedHeroDataType_descriptor(), name, value);
}
enum EWeekendTourneyRichPresenceEvent {
  k_EWeekendTourneyRichPresenceEvent_None = 0,
  k_EWeekendTourneyRichPresenceEvent_StartedMatch = 1,
  k_EWeekendTourneyRichPresenceEvent_WonMatch = 2,
  k_EWeekendTourneyRichPresenceEvent_Eliminated = 3
};
bool EWeekendTourneyRichPresenceEvent_IsValid(int value);
const EWeekendTourneyRichPresenceEvent EWeekendTourneyRichPresenceEvent_MIN = k_EWeekendTourneyRichPresenceEvent_None;
const EWeekendTourneyRichPresenceEvent EWeekendTourneyRichPresenceEvent_MAX = k_EWeekendTourneyRichPresenceEvent_Eliminated;
const int EWeekendTourneyRichPresenceEvent_ARRAYSIZE = EWeekendTourneyRichPresenceEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* EWeekendTourneyRichPresenceEvent_descriptor();
inline const ::std::string& EWeekendTourneyRichPresenceEvent_Name(EWeekendTourneyRichPresenceEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    EWeekendTourneyRichPresenceEvent_descriptor(), value);
}
inline bool EWeekendTourneyRichPresenceEvent_Parse(
    const ::std::string& name, EWeekendTourneyRichPresenceEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EWeekendTourneyRichPresenceEvent>(
    EWeekendTourneyRichPresenceEvent_descriptor(), name, value);
}
enum EDOTATriviaQuestionCategory {
  k_EDOTATriviaQuestionCategory_AbilityIcon = 0,
  k_EDOTATriviaQuestionCategory_AbilityCooldown = 1,
  k_EDOTATriviaQuestionCategory_HeroAttributes = 2,
  k_EDOTATriviaQuestionCategory_HeroMovementSpeed = 3,
  k_EDOTATriviaQuestionCategory_TalentTree = 4,
  k_EDOTATriviaQuestionCategory_HeroStats = 5,
  k_EDOTATriviaQuestionCategory_ItemPrice = 6,
  k_EDOTATriviaQuestionCategory_AbilitySound = 7,
  k_EDOTATriviaQuestionCategory_InvokerSpells = 8,
  k_EDOTATriviaQuestionCategory_AbilityManaCost = 9,
  k_EDOTATriviaQuestionCategory_HeroAttackSound = 10,
  k_EDOTATriviaQuestionCategory_AbilityName = 11,
  k_EDOTATriviaQuestionCategory_ItemComponents = 12,
  k_EDOTATriviaQuestionCategory_ItemLore = 13
};
bool EDOTATriviaQuestionCategory_IsValid(int value);
const EDOTATriviaQuestionCategory EDOTATriviaQuestionCategory_MIN = k_EDOTATriviaQuestionCategory_AbilityIcon;
const EDOTATriviaQuestionCategory EDOTATriviaQuestionCategory_MAX = k_EDOTATriviaQuestionCategory_ItemLore;
const int EDOTATriviaQuestionCategory_ARRAYSIZE = EDOTATriviaQuestionCategory_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDOTATriviaQuestionCategory_descriptor();
inline const ::std::string& EDOTATriviaQuestionCategory_Name(EDOTATriviaQuestionCategory value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDOTATriviaQuestionCategory_descriptor(), value);
}
inline bool EDOTATriviaQuestionCategory_Parse(
    const ::std::string& name, EDOTATriviaQuestionCategory* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDOTATriviaQuestionCategory>(
    EDOTATriviaQuestionCategory_descriptor(), name, value);
}
enum EDOTATriviaAnswerResult {
  k_EDOTATriviaAnswerResult_Success = 0,
  k_EDOTATriviaAnswerResult_InvalidQuestion = 1,
  k_EDOTATriviaAnswerResult_InvalidAnswer = 2,
  k_EDOTATriviaAnswerResult_QuestionLocked = 3,
  k_EDOTATriviaAnswerResult_AlreadyAnswered = 4,
  k_EDOTATriviaAnswerResult_TriviaDisabled = 5
};
bool EDOTATriviaAnswerResult_IsValid(int value);
const EDOTATriviaAnswerResult EDOTATriviaAnswerResult_MIN = k_EDOTATriviaAnswerResult_Success;
const EDOTATriviaAnswerResult EDOTATriviaAnswerResult_MAX = k_EDOTATriviaAnswerResult_TriviaDisabled;
const int EDOTATriviaAnswerResult_ARRAYSIZE = EDOTATriviaAnswerResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDOTATriviaAnswerResult_descriptor();
inline const ::std::string& EDOTATriviaAnswerResult_Name(EDOTATriviaAnswerResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDOTATriviaAnswerResult_descriptor(), value);
}
inline bool EDOTATriviaAnswerResult_Parse(
    const ::std::string& name, EDOTATriviaAnswerResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDOTATriviaAnswerResult>(
    EDOTATriviaAnswerResult_descriptor(), name, value);
}
enum EPurchaseHeroRelicResult {
  k_EPurchaseHeroRelicResult_Success = 0,
  k_EPurchaseHeroRelicResult_FailedToSend = 1,
  k_EPurchaseHeroRelicResult_NotEnoughPoints = 2,
  k_EPurchaseHeroRelicResult_InternalServerError = 3,
  k_EPurchaseHeroRelicResult_PurchaseNotAllowed = 4,
  k_EPurchaseHeroRelicResult_InvalidRelic = 5,
  k_EPurchaseHeroRelicResult_AlreadyOwned = 6
};
bool EPurchaseHeroRelicResult_IsValid(int value);
const EPurchaseHeroRelicResult EPurchaseHeroRelicResult_MIN = k_EPurchaseHeroRelicResult_Success;
const EPurchaseHeroRelicResult EPurchaseHeroRelicResult_MAX = k_EPurchaseHeroRelicResult_AlreadyOwned;
const int EPurchaseHeroRelicResult_ARRAYSIZE = EPurchaseHeroRelicResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPurchaseHeroRelicResult_descriptor();
inline const ::std::string& EPurchaseHeroRelicResult_Name(EPurchaseHeroRelicResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPurchaseHeroRelicResult_descriptor(), value);
}
inline bool EPurchaseHeroRelicResult_Parse(
    const ::std::string& name, EPurchaseHeroRelicResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPurchaseHeroRelicResult>(
    EPurchaseHeroRelicResult_descriptor(), name, value);
}
// ===================================================================

class CMsgClientSuspended final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientSuspended) */ {
 public:
  CMsgClientSuspended();
  virtual ~CMsgClientSuspended();

  CMsgClientSuspended(const CMsgClientSuspended& from);

  inline CMsgClientSuspended& operator=(const CMsgClientSuspended& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientSuspended(CMsgClientSuspended&& from) noexcept
    : CMsgClientSuspended() {
    *this = ::std::move(from);
  }

  inline CMsgClientSuspended& operator=(CMsgClientSuspended&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientSuspended& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientSuspended* internal_default_instance() {
    return reinterpret_cast<const CMsgClientSuspended*>(
               &_CMsgClientSuspended_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CMsgClientSuspended* other);
  friend void swap(CMsgClientSuspended& a, CMsgClientSuspended& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientSuspended* New() const final {
    return CreateMaybeMessage<CMsgClientSuspended>(nullptr);
  }

  CMsgClientSuspended* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientSuspended>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientSuspended& from);
  void MergeFrom(const CMsgClientSuspended& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientSuspended* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 time_end = 1;
  bool has_time_end() const;
  void clear_time_end();
  static const int kTimeEndFieldNumber = 1;
  ::google::protobuf::uint32 time_end() const;
  void set_time_end(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientSuspended)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 time_end_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgBalancedShuffleLobby final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgBalancedShuffleLobby) */ {
 public:
  CMsgBalancedShuffleLobby();
  virtual ~CMsgBalancedShuffleLobby();

  CMsgBalancedShuffleLobby(const CMsgBalancedShuffleLobby& from);

  inline CMsgBalancedShuffleLobby& operator=(const CMsgBalancedShuffleLobby& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgBalancedShuffleLobby(CMsgBalancedShuffleLobby&& from) noexcept
    : CMsgBalancedShuffleLobby() {
    *this = ::std::move(from);
  }

  inline CMsgBalancedShuffleLobby& operator=(CMsgBalancedShuffleLobby&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgBalancedShuffleLobby& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgBalancedShuffleLobby* internal_default_instance() {
    return reinterpret_cast<const CMsgBalancedShuffleLobby*>(
               &_CMsgBalancedShuffleLobby_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CMsgBalancedShuffleLobby* other);
  friend void swap(CMsgBalancedShuffleLobby& a, CMsgBalancedShuffleLobby& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgBalancedShuffleLobby* New() const final {
    return CreateMaybeMessage<CMsgBalancedShuffleLobby>(nullptr);
  }

  CMsgBalancedShuffleLobby* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBalancedShuffleLobby>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgBalancedShuffleLobby& from);
  void MergeFrom(const CMsgBalancedShuffleLobby& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBalancedShuffleLobby* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgBalancedShuffleLobby)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgInitialQuestionnaireResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgInitialQuestionnaireResponse) */ {
 public:
  CMsgInitialQuestionnaireResponse();
  virtual ~CMsgInitialQuestionnaireResponse();

  CMsgInitialQuestionnaireResponse(const CMsgInitialQuestionnaireResponse& from);

  inline CMsgInitialQuestionnaireResponse& operator=(const CMsgInitialQuestionnaireResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgInitialQuestionnaireResponse(CMsgInitialQuestionnaireResponse&& from) noexcept
    : CMsgInitialQuestionnaireResponse() {
    *this = ::std::move(from);
  }

  inline CMsgInitialQuestionnaireResponse& operator=(CMsgInitialQuestionnaireResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgInitialQuestionnaireResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgInitialQuestionnaireResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgInitialQuestionnaireResponse*>(
               &_CMsgInitialQuestionnaireResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CMsgInitialQuestionnaireResponse* other);
  friend void swap(CMsgInitialQuestionnaireResponse& a, CMsgInitialQuestionnaireResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgInitialQuestionnaireResponse* New() const final {
    return CreateMaybeMessage<CMsgInitialQuestionnaireResponse>(nullptr);
  }

  CMsgInitialQuestionnaireResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgInitialQuestionnaireResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgInitialQuestionnaireResponse& from);
  void MergeFrom(const CMsgInitialQuestionnaireResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgInitialQuestionnaireResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 initial_skill = 1;
  bool has_initial_skill() const;
  void clear_initial_skill();
  static const int kInitialSkillFieldNumber = 1;
  ::google::protobuf::uint32 initial_skill() const;
  void set_initial_skill(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgInitialQuestionnaireResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 initial_skill_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAPlayerMatchHistory final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPlayerMatchHistory) */ {
 public:
  CMsgDOTAPlayerMatchHistory();
  virtual ~CMsgDOTAPlayerMatchHistory();

  CMsgDOTAPlayerMatchHistory(const CMsgDOTAPlayerMatchHistory& from);

  inline CMsgDOTAPlayerMatchHistory& operator=(const CMsgDOTAPlayerMatchHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAPlayerMatchHistory(CMsgDOTAPlayerMatchHistory&& from) noexcept
    : CMsgDOTAPlayerMatchHistory() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAPlayerMatchHistory& operator=(CMsgDOTAPlayerMatchHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAPlayerMatchHistory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAPlayerMatchHistory* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPlayerMatchHistory*>(
               &_CMsgDOTAPlayerMatchHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CMsgDOTAPlayerMatchHistory* other);
  friend void swap(CMsgDOTAPlayerMatchHistory& a, CMsgDOTAPlayerMatchHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAPlayerMatchHistory* New() const final {
    return CreateMaybeMessage<CMsgDOTAPlayerMatchHistory>(nullptr);
  }

  CMsgDOTAPlayerMatchHistory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAPlayerMatchHistory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAPlayerMatchHistory& from);
  void MergeFrom(const CMsgDOTAPlayerMatchHistory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAPlayerMatchHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 match_ids = 1;
  int match_ids_size() const;
  void clear_match_ids();
  static const int kMatchIdsFieldNumber = 1;
  ::google::protobuf::uint64 match_ids(int index) const;
  void set_match_ids(int index, ::google::protobuf::uint64 value);
  void add_match_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      match_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_match_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPlayerMatchHistory)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > match_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchHistoryFilter final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAMatchHistoryFilter) */ {
 public:
  CMsgDOTAMatchHistoryFilter();
  virtual ~CMsgDOTAMatchHistoryFilter();

  CMsgDOTAMatchHistoryFilter(const CMsgDOTAMatchHistoryFilter& from);

  inline CMsgDOTAMatchHistoryFilter& operator=(const CMsgDOTAMatchHistoryFilter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAMatchHistoryFilter(CMsgDOTAMatchHistoryFilter&& from) noexcept
    : CMsgDOTAMatchHistoryFilter() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAMatchHistoryFilter& operator=(CMsgDOTAMatchHistoryFilter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAMatchHistoryFilter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAMatchHistoryFilter* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAMatchHistoryFilter*>(
               &_CMsgDOTAMatchHistoryFilter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CMsgDOTAMatchHistoryFilter* other);
  friend void swap(CMsgDOTAMatchHistoryFilter& a, CMsgDOTAMatchHistoryFilter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAMatchHistoryFilter* New() const final {
    return CreateMaybeMessage<CMsgDOTAMatchHistoryFilter>(nullptr);
  }

  CMsgDOTAMatchHistoryFilter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAMatchHistoryFilter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAMatchHistoryFilter& from);
  void MergeFrom(const CMsgDOTAMatchHistoryFilter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAMatchHistoryFilter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 match_ids = 1;
  int match_ids_size() const;
  void clear_match_ids();
  static const int kMatchIdsFieldNumber = 1;
  ::google::protobuf::uint64 match_ids(int index) const;
  void set_match_ids(int index, ::google::protobuf::uint64 value);
  void add_match_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      match_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_match_ids();

  // optional uint64 newest_match_id_at_last_query = 2;
  bool has_newest_match_id_at_last_query() const;
  void clear_newest_match_id_at_last_query();
  static const int kNewestMatchIdAtLastQueryFieldNumber = 2;
  ::google::protobuf::uint64 newest_match_id_at_last_query() const;
  void set_newest_match_id_at_last_query(::google::protobuf::uint64 value);

  // optional uint32 time_last_query = 3;
  bool has_time_last_query() const;
  void clear_time_last_query();
  static const int kTimeLastQueryFieldNumber = 3;
  ::google::protobuf::uint32 time_last_query() const;
  void set_time_last_query(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAMatchHistoryFilter)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > match_ids_;
  ::google::protobuf::uint64 newest_match_id_at_last_query_;
  ::google::protobuf::uint32 time_last_query_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARequestMatches final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestMatches) */ {
 public:
  CMsgDOTARequestMatches();
  virtual ~CMsgDOTARequestMatches();

  CMsgDOTARequestMatches(const CMsgDOTARequestMatches& from);

  inline CMsgDOTARequestMatches& operator=(const CMsgDOTARequestMatches& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARequestMatches(CMsgDOTARequestMatches&& from) noexcept
    : CMsgDOTARequestMatches() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARequestMatches& operator=(CMsgDOTARequestMatches&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARequestMatches& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARequestMatches* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestMatches*>(
               &_CMsgDOTARequestMatches_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CMsgDOTARequestMatches* other);
  friend void swap(CMsgDOTARequestMatches& a, CMsgDOTARequestMatches& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestMatches* New() const final {
    return CreateMaybeMessage<CMsgDOTARequestMatches>(nullptr);
  }

  CMsgDOTARequestMatches* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARequestMatches>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARequestMatches& from);
  void MergeFrom(const CMsgDOTARequestMatches& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARequestMatches* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARequestMatches_SkillLevel SkillLevel;
  static const SkillLevel Any =
    CMsgDOTARequestMatches_SkillLevel_Any;
  static const SkillLevel Normal =
    CMsgDOTARequestMatches_SkillLevel_Normal;
  static const SkillLevel High =
    CMsgDOTARequestMatches_SkillLevel_High;
  static const SkillLevel VeryHigh =
    CMsgDOTARequestMatches_SkillLevel_VeryHigh;
  static inline bool SkillLevel_IsValid(int value) {
    return CMsgDOTARequestMatches_SkillLevel_IsValid(value);
  }
  static const SkillLevel SkillLevel_MIN =
    CMsgDOTARequestMatches_SkillLevel_SkillLevel_MIN;
  static const SkillLevel SkillLevel_MAX =
    CMsgDOTARequestMatches_SkillLevel_SkillLevel_MAX;
  static const int SkillLevel_ARRAYSIZE =
    CMsgDOTARequestMatches_SkillLevel_SkillLevel_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SkillLevel_descriptor() {
    return CMsgDOTARequestMatches_SkillLevel_descriptor();
  }
  static inline const ::std::string& SkillLevel_Name(SkillLevel value) {
    return CMsgDOTARequestMatches_SkillLevel_Name(value);
  }
  static inline bool SkillLevel_Parse(const ::std::string& name,
      SkillLevel* value) {
    return CMsgDOTARequestMatches_SkillLevel_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 game_mode = 3;
  bool has_game_mode() const;
  void clear_game_mode();
  static const int kGameModeFieldNumber = 3;
  ::google::protobuf::uint32 game_mode() const;
  void set_game_mode(::google::protobuf::uint32 value);

  // optional fixed32 date_min = 6;
  bool has_date_min() const;
  void clear_date_min();
  static const int kDateMinFieldNumber = 6;
  ::google::protobuf::uint32 date_min() const;
  void set_date_min(::google::protobuf::uint32 value);

  // optional fixed32 date_max = 7;
  bool has_date_max() const;
  void clear_date_max();
  static const int kDateMaxFieldNumber = 7;
  ::google::protobuf::uint32 date_max() const;
  void set_date_max(::google::protobuf::uint32 value);

  // optional uint64 start_at_match_id = 11;
  bool has_start_at_match_id() const;
  void clear_start_at_match_id();
  static const int kStartAtMatchIdFieldNumber = 11;
  ::google::protobuf::uint64 start_at_match_id() const;
  void set_start_at_match_id(::google::protobuf::uint64 value);

  // optional uint32 matches_requested = 10;
  bool has_matches_requested() const;
  void clear_matches_requested();
  static const int kMatchesRequestedFieldNumber = 10;
  ::google::protobuf::uint32 matches_requested() const;
  void set_matches_requested(::google::protobuf::uint32 value);

  // optional fixed32 min_players = 12;
  bool has_min_players() const;
  void clear_min_players();
  static const int kMinPlayersFieldNumber = 12;
  ::google::protobuf::uint32 min_players() const;
  void set_min_players(::google::protobuf::uint32 value);

  // optional uint32 request_id = 13;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 13;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // optional uint32 account_id = 15;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 15;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 team_id = 18;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 18;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // optional uint32 league_id = 16;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 16;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional .proto.dota.CMsgDOTARequestMatches.SkillLevel skill = 17 [default = Any];
  bool has_skill() const;
  void clear_skill();
  static const int kSkillFieldNumber = 17;
  ::proto::dota::CMsgDOTARequestMatches_SkillLevel skill() const;
  void set_skill(::proto::dota::CMsgDOTARequestMatches_SkillLevel value);

  // optional uint64 custom_game_id = 20;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 20;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestMatches)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 game_mode_;
  ::google::protobuf::uint32 date_min_;
  ::google::protobuf::uint32 date_max_;
  ::google::protobuf::uint64 start_at_match_id_;
  ::google::protobuf::uint32 matches_requested_;
  ::google::protobuf::uint32 min_players_;
  ::google::protobuf::uint32 request_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 league_id_;
  int skill_;
  ::google::protobuf::uint64 custom_game_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARequestMatchesResponse_Series final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestMatchesResponse.Series) */ {
 public:
  CMsgDOTARequestMatchesResponse_Series();
  virtual ~CMsgDOTARequestMatchesResponse_Series();

  CMsgDOTARequestMatchesResponse_Series(const CMsgDOTARequestMatchesResponse_Series& from);

  inline CMsgDOTARequestMatchesResponse_Series& operator=(const CMsgDOTARequestMatchesResponse_Series& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARequestMatchesResponse_Series(CMsgDOTARequestMatchesResponse_Series&& from) noexcept
    : CMsgDOTARequestMatchesResponse_Series() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARequestMatchesResponse_Series& operator=(CMsgDOTARequestMatchesResponse_Series&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARequestMatchesResponse_Series& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARequestMatchesResponse_Series* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestMatchesResponse_Series*>(
               &_CMsgDOTARequestMatchesResponse_Series_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CMsgDOTARequestMatchesResponse_Series* other);
  friend void swap(CMsgDOTARequestMatchesResponse_Series& a, CMsgDOTARequestMatchesResponse_Series& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestMatchesResponse_Series* New() const final {
    return CreateMaybeMessage<CMsgDOTARequestMatchesResponse_Series>(nullptr);
  }

  CMsgDOTARequestMatchesResponse_Series* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARequestMatchesResponse_Series>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARequestMatchesResponse_Series& from);
  void MergeFrom(const CMsgDOTARequestMatchesResponse_Series& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARequestMatchesResponse_Series* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAMatch matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  ::proto::dota::CMsgDOTAMatch* mutable_matches(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
      mutable_matches();
  const ::proto::dota::CMsgDOTAMatch& matches(int index) const;
  ::proto::dota::CMsgDOTAMatch* add_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
      matches() const;

  // optional uint32 series_id = 2;
  bool has_series_id() const;
  void clear_series_id();
  static const int kSeriesIdFieldNumber = 2;
  ::google::protobuf::uint32 series_id() const;
  void set_series_id(::google::protobuf::uint32 value);

  // optional uint32 series_type = 3;
  bool has_series_type() const;
  void clear_series_type();
  static const int kSeriesTypeFieldNumber = 3;
  ::google::protobuf::uint32 series_type() const;
  void set_series_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestMatchesResponse.Series)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch > matches_;
  ::google::protobuf::uint32 series_id_;
  ::google::protobuf::uint32 series_type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARequestMatchesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestMatchesResponse) */ {
 public:
  CMsgDOTARequestMatchesResponse();
  virtual ~CMsgDOTARequestMatchesResponse();

  CMsgDOTARequestMatchesResponse(const CMsgDOTARequestMatchesResponse& from);

  inline CMsgDOTARequestMatchesResponse& operator=(const CMsgDOTARequestMatchesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARequestMatchesResponse(CMsgDOTARequestMatchesResponse&& from) noexcept
    : CMsgDOTARequestMatchesResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARequestMatchesResponse& operator=(CMsgDOTARequestMatchesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARequestMatchesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARequestMatchesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestMatchesResponse*>(
               &_CMsgDOTARequestMatchesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CMsgDOTARequestMatchesResponse* other);
  friend void swap(CMsgDOTARequestMatchesResponse& a, CMsgDOTARequestMatchesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestMatchesResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTARequestMatchesResponse>(nullptr);
  }

  CMsgDOTARequestMatchesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARequestMatchesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARequestMatchesResponse& from);
  void MergeFrom(const CMsgDOTARequestMatchesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARequestMatchesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARequestMatchesResponse_Series Series;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAMatch matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  ::proto::dota::CMsgDOTAMatch* mutable_matches(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
      mutable_matches();
  const ::proto::dota::CMsgDOTAMatch& matches(int index) const;
  ::proto::dota::CMsgDOTAMatch* add_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
      matches() const;

  // repeated .proto.dota.CMsgDOTARequestMatchesResponse.Series series = 2;
  int series_size() const;
  void clear_series();
  static const int kSeriesFieldNumber = 2;
  ::proto::dota::CMsgDOTARequestMatchesResponse_Series* mutable_series(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestMatchesResponse_Series >*
      mutable_series();
  const ::proto::dota::CMsgDOTARequestMatchesResponse_Series& series(int index) const;
  ::proto::dota::CMsgDOTARequestMatchesResponse_Series* add_series();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestMatchesResponse_Series >&
      series() const;

  // optional uint32 request_id = 3;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // optional uint32 total_results = 4;
  bool has_total_results() const;
  void clear_total_results();
  static const int kTotalResultsFieldNumber = 4;
  ::google::protobuf::uint32 total_results() const;
  void set_total_results(::google::protobuf::uint32 value);

  // optional uint32 results_remaining = 5;
  bool has_results_remaining() const;
  void clear_results_remaining();
  static const int kResultsRemainingFieldNumber = 5;
  ::google::protobuf::uint32 results_remaining() const;
  void set_results_remaining(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestMatchesResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch > matches_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestMatchesResponse_Series > series_;
  ::google::protobuf::uint32 request_id_;
  ::google::protobuf::uint32 total_results_;
  ::google::protobuf::uint32 results_remaining_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGetDPCStandingsResponse_TeamInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo) */ {
 public:
  CMsgDOTAGetDPCStandingsResponse_TeamInfo();
  virtual ~CMsgDOTAGetDPCStandingsResponse_TeamInfo();

  CMsgDOTAGetDPCStandingsResponse_TeamInfo(const CMsgDOTAGetDPCStandingsResponse_TeamInfo& from);

  inline CMsgDOTAGetDPCStandingsResponse_TeamInfo& operator=(const CMsgDOTAGetDPCStandingsResponse_TeamInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGetDPCStandingsResponse_TeamInfo(CMsgDOTAGetDPCStandingsResponse_TeamInfo&& from) noexcept
    : CMsgDOTAGetDPCStandingsResponse_TeamInfo() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGetDPCStandingsResponse_TeamInfo& operator=(CMsgDOTAGetDPCStandingsResponse_TeamInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGetDPCStandingsResponse_TeamInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGetDPCStandingsResponse_TeamInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetDPCStandingsResponse_TeamInfo*>(
               &_CMsgDOTAGetDPCStandingsResponse_TeamInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CMsgDOTAGetDPCStandingsResponse_TeamInfo* other);
  friend void swap(CMsgDOTAGetDPCStandingsResponse_TeamInfo& a, CMsgDOTAGetDPCStandingsResponse_TeamInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetDPCStandingsResponse_TeamInfo* New() const final {
    return CreateMaybeMessage<CMsgDOTAGetDPCStandingsResponse_TeamInfo>(nullptr);
  }

  CMsgDOTAGetDPCStandingsResponse_TeamInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGetDPCStandingsResponse_TeamInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGetDPCStandingsResponse_TeamInfo& from);
  void MergeFrom(const CMsgDOTAGetDPCStandingsResponse_TeamInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGetDPCStandingsResponse_TeamInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string team_name = 2;
  bool has_team_name() const;
  void clear_team_name();
  static const int kTeamNameFieldNumber = 2;
  const ::std::string& team_name() const;
  void set_team_name(const ::std::string& value);
  #if LANG_CXX11
  void set_team_name(::std::string&& value);
  #endif
  void set_team_name(const char* value);
  void set_team_name(const char* value, size_t size);
  ::std::string* mutable_team_name();
  ::std::string* release_team_name();
  void set_allocated_team_name(::std::string* team_name);

  // optional string team_logo_url = 4;
  bool has_team_logo_url() const;
  void clear_team_logo_url();
  static const int kTeamLogoUrlFieldNumber = 4;
  const ::std::string& team_logo_url() const;
  void set_team_logo_url(const ::std::string& value);
  #if LANG_CXX11
  void set_team_logo_url(::std::string&& value);
  #endif
  void set_team_logo_url(const char* value);
  void set_team_logo_url(const char* value, size_t size);
  ::std::string* mutable_team_logo_url();
  ::std::string* release_team_logo_url();
  void set_allocated_team_logo_url(::std::string* team_logo_url);

  // optional uint32 team_id = 1;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // optional uint32 dpc_points = 3;
  bool has_dpc_points() const;
  void clear_dpc_points();
  static const int kDpcPointsFieldNumber = 3;
  ::google::protobuf::uint32 dpc_points() const;
  void set_dpc_points(::google::protobuf::uint32 value);

  // optional .proto.dota.CMsgDOTAGetDPCStandingsResponse.EStatus status = 5 [default = DEFAULT];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  ::proto::dota::CMsgDOTAGetDPCStandingsResponse_EStatus status() const;
  void set_status(::proto::dota::CMsgDOTAGetDPCStandingsResponse_EStatus value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr team_name_;
  ::google::protobuf::internal::ArenaStringPtr team_logo_url_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 dpc_points_;
  int status_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGetDPCStandingsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetDPCStandingsResponse) */ {
 public:
  CMsgDOTAGetDPCStandingsResponse();
  virtual ~CMsgDOTAGetDPCStandingsResponse();

  CMsgDOTAGetDPCStandingsResponse(const CMsgDOTAGetDPCStandingsResponse& from);

  inline CMsgDOTAGetDPCStandingsResponse& operator=(const CMsgDOTAGetDPCStandingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGetDPCStandingsResponse(CMsgDOTAGetDPCStandingsResponse&& from) noexcept
    : CMsgDOTAGetDPCStandingsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGetDPCStandingsResponse& operator=(CMsgDOTAGetDPCStandingsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGetDPCStandingsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGetDPCStandingsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetDPCStandingsResponse*>(
               &_CMsgDOTAGetDPCStandingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CMsgDOTAGetDPCStandingsResponse* other);
  friend void swap(CMsgDOTAGetDPCStandingsResponse& a, CMsgDOTAGetDPCStandingsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetDPCStandingsResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAGetDPCStandingsResponse>(nullptr);
  }

  CMsgDOTAGetDPCStandingsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGetDPCStandingsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGetDPCStandingsResponse& from);
  void MergeFrom(const CMsgDOTAGetDPCStandingsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGetDPCStandingsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGetDPCStandingsResponse_TeamInfo TeamInfo;

  typedef CMsgDOTAGetDPCStandingsResponse_EStatus EStatus;
  static const EStatus DEFAULT =
    CMsgDOTAGetDPCStandingsResponse_EStatus_DEFAULT;
  static const EStatus CLINCHED =
    CMsgDOTAGetDPCStandingsResponse_EStatus_CLINCHED;
  static const EStatus ELIMINATED =
    CMsgDOTAGetDPCStandingsResponse_EStatus_ELIMINATED;
  static inline bool EStatus_IsValid(int value) {
    return CMsgDOTAGetDPCStandingsResponse_EStatus_IsValid(value);
  }
  static const EStatus EStatus_MIN =
    CMsgDOTAGetDPCStandingsResponse_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMsgDOTAGetDPCStandingsResponse_EStatus_EStatus_MAX;
  static const int EStatus_ARRAYSIZE =
    CMsgDOTAGetDPCStandingsResponse_EStatus_EStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMsgDOTAGetDPCStandingsResponse_EStatus_descriptor();
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMsgDOTAGetDPCStandingsResponse_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMsgDOTAGetDPCStandingsResponse_EStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo standings = 1;
  int standings_size() const;
  void clear_standings();
  static const int kStandingsFieldNumber = 1;
  ::proto::dota::CMsgDOTAGetDPCStandingsResponse_TeamInfo* mutable_standings(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetDPCStandingsResponse_TeamInfo >*
      mutable_standings();
  const ::proto::dota::CMsgDOTAGetDPCStandingsResponse_TeamInfo& standings(int index) const;
  ::proto::dota::CMsgDOTAGetDPCStandingsResponse_TeamInfo* add_standings();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetDPCStandingsResponse_TeamInfo >&
      standings() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetDPCStandingsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetDPCStandingsResponse_TeamInfo > standings_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAPopup final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPopup) */ {
 public:
  CMsgDOTAPopup();
  virtual ~CMsgDOTAPopup();

  CMsgDOTAPopup(const CMsgDOTAPopup& from);

  inline CMsgDOTAPopup& operator=(const CMsgDOTAPopup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAPopup(CMsgDOTAPopup&& from) noexcept
    : CMsgDOTAPopup() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAPopup& operator=(CMsgDOTAPopup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAPopup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAPopup* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPopup*>(
               &_CMsgDOTAPopup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CMsgDOTAPopup* other);
  friend void swap(CMsgDOTAPopup& a, CMsgDOTAPopup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAPopup* New() const final {
    return CreateMaybeMessage<CMsgDOTAPopup>(nullptr);
  }

  CMsgDOTAPopup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAPopup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAPopup& from);
  void MergeFrom(const CMsgDOTAPopup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAPopup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAPopup_PopupID PopupID;
  static const PopupID NONE =
    CMsgDOTAPopup_PopupID_NONE;
  static const PopupID KICKED_FROM_LOBBY =
    CMsgDOTAPopup_PopupID_KICKED_FROM_LOBBY;
  static const PopupID KICKED_FROM_PARTY =
    CMsgDOTAPopup_PopupID_KICKED_FROM_PARTY;
  static const PopupID KICKED_FROM_TEAM =
    CMsgDOTAPopup_PopupID_KICKED_FROM_TEAM;
  static const PopupID TEAM_WAS_DISBANDED =
    CMsgDOTAPopup_PopupID_TEAM_WAS_DISBANDED;
  static const PopupID TEAM_MATCHMAKE_ALREADY_MATCH =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_MATCH;
  static const PopupID TEAM_MATCHMAKE_ALREADY_FINDING =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_FINDING;
  static const PopupID TEAM_MATCHMAKE_FULL =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FULL;
  static const PopupID TEAM_MATCHMAKE_FAIL_ADD =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD;
  static const PopupID TEAM_MATCHMAKE_FAIL_ADD_CURRENT =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD_CURRENT;
  static const PopupID TEAM_MATCHMAKE_FAILED_TEAM_MEMBER =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAILED_TEAM_MEMBER;
  static const PopupID TEAM_MATCHMAKE_ALREADY_GAME =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_GAME;
  static const PopupID TEAM_MATCHMAKE_FAIL_GET_PARTY =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_GET_PARTY;
  static const PopupID MATCHMAKING_DISABLED =
    CMsgDOTAPopup_PopupID_MATCHMAKING_DISABLED;
  static const PopupID INVITE_DENIED =
    CMsgDOTAPopup_PopupID_INVITE_DENIED;
  static const PopupID PARTY_FULL =
    CMsgDOTAPopup_PopupID_PARTY_FULL;
  static const PopupID MADE_ADMIN =
    CMsgDOTAPopup_PopupID_MADE_ADMIN;
  static const PopupID NEED_TO_PURCHASE =
    CMsgDOTAPopup_PopupID_NEED_TO_PURCHASE;
  static const PopupID SIGNON_MESSAGE =
    CMsgDOTAPopup_PopupID_SIGNON_MESSAGE;
  static const PopupID GUILD_KICKED =
    CMsgDOTAPopup_PopupID_GUILD_KICKED;
  static const PopupID MATCHMAKING_REGION_OFFLINE =
    CMsgDOTAPopup_PopupID_MATCHMAKING_REGION_OFFLINE;
  static const PopupID TOURNAMENT_GAME_NOT_FOUND =
    CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_NOT_FOUND;
  static const PopupID TOURNAMENT_GAME_HAS_LOBBY_ID =
    CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_LOBBY_ID;
  static const PopupID TOURNAMENT_GAME_HAS_MATCH_ID =
    CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_MATCH_ID;
  static const PopupID TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM =
    CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM;
  static const PopupID TOURNAMENT_GAME_HAS_NO_DIRE_TEAM =
    CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_DIRE_TEAM;
  static const PopupID TOURNAMENT_GAME_SQL_UPDATE_FAILED =
    CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_SQL_UPDATE_FAILED;
  static const PopupID NOT_LEAGUE_ADMIN =
    CMsgDOTAPopup_PopupID_NOT_LEAGUE_ADMIN;
  static const PopupID IN_ANOTHER_GAME =
    CMsgDOTAPopup_PopupID_IN_ANOTHER_GAME;
  static const PopupID PARTY_MEMBER_IN_ANOTHER_GAME =
    CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_ANOTHER_GAME;
  static const PopupID PARTY_MEMBER_IN_LOW_PRIORITY =
    CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_LOW_PRIORITY;
  static const PopupID CLIENT_OUT_OF_DATE =
    CMsgDOTAPopup_PopupID_CLIENT_OUT_OF_DATE;
  static const PopupID SAVE_GAME_CORRUPT =
    CMsgDOTAPopup_PopupID_SAVE_GAME_CORRUPT;
  static const PopupID INSUFFICIENT_INGOTS =
    CMsgDOTAPopup_PopupID_INSUFFICIENT_INGOTS;
  static const PopupID COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL =
    CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL;
  static const PopupID PARTY_LEADER_JOINED_LOBBY =
    CMsgDOTAPopup_PopupID_PARTY_LEADER_JOINED_LOBBY;
  static const PopupID WEEKEND_TOURNEY_UNMATCHED =
    CMsgDOTAPopup_PopupID_WEEKEND_TOURNEY_UNMATCHED;
  static const PopupID POST_MATCH_SURVEY =
    CMsgDOTAPopup_PopupID_POST_MATCH_SURVEY;
  static const PopupID TROPHY_AWARDED =
    CMsgDOTAPopup_PopupID_TROPHY_AWARDED;
  static const PopupID TROPHY_LEVEL_UP =
    CMsgDOTAPopup_PopupID_TROPHY_LEVEL_UP;
  static const PopupID ALL_HERO_CHALLENGE_PROGRESS =
    CMsgDOTAPopup_PopupID_ALL_HERO_CHALLENGE_PROGRESS;
  static const PopupID NEED_INITIAL_SKILL =
    CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL;
  static const PopupID NEED_INITIAL_SKILL_IN_PARTY =
    CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL_IN_PARTY;
  static const PopupID TARGET_ENGINE_MISMATCH =
    CMsgDOTAPopup_PopupID_TARGET_ENGINE_MISMATCH;
  static const PopupID VAC_NOT_VERIFIED =
    CMsgDOTAPopup_PopupID_VAC_NOT_VERIFIED;
  static const PopupID KICKED_FROM_QUEUE_EVENT_STARTING =
    CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_STARTING;
  static const PopupID KICKED_FROM_QUEUE_EVENT_ENDING =
    CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_ENDING;
  static const PopupID LOBBY_FULL =
    CMsgDOTAPopup_PopupID_LOBBY_FULL;
  static const PopupID EVENT_POINTS_EARNED =
    CMsgDOTAPopup_PopupID_EVENT_POINTS_EARNED;
  static const PopupID CUSTOM_GAME_INCORRECT_VERSION =
    CMsgDOTAPopup_PopupID_CUSTOM_GAME_INCORRECT_VERSION;
  static const PopupID LIMITED_USER_CHAT =
    CMsgDOTAPopup_PopupID_LIMITED_USER_CHAT;
  static const PopupID EVENT_PREMIUM_POINTS_EARNED =
    CMsgDOTAPopup_PopupID_EVENT_PREMIUM_POINTS_EARNED;
  static const PopupID LOBBY_MVP_AWARDED =
    CMsgDOTAPopup_PopupID_LOBBY_MVP_AWARDED;
  static const PopupID LOW_BADGE_LEVEL_CHAT =
    CMsgDOTAPopup_PopupID_LOW_BADGE_LEVEL_CHAT;
  static const PopupID LOW_WINS_CHAT =
    CMsgDOTAPopup_PopupID_LOW_WINS_CHAT;
  static const PopupID UNVERIFIED_USER_CHAT =
    CMsgDOTAPopup_PopupID_UNVERIFIED_USER_CHAT;
  static const PopupID PARTY_STARTED_FINDING_EVENT_MATCH =
    CMsgDOTAPopup_PopupID_PARTY_STARTED_FINDING_EVENT_MATCH;
  static const PopupID GENERIC_INFO =
    CMsgDOTAPopup_PopupID_GENERIC_INFO;
  static const PopupID GENERIC_ERROR =
    CMsgDOTAPopup_PopupID_GENERIC_ERROR;
  static const PopupID RANK_TIER_UPDATED =
    CMsgDOTAPopup_PopupID_RANK_TIER_UPDATED;
  static const PopupID CUSTOM_GAME_COOLDOWN_RESTRICTED =
    CMsgDOTAPopup_PopupID_CUSTOM_GAME_COOLDOWN_RESTRICTED;
  static inline bool PopupID_IsValid(int value) {
    return CMsgDOTAPopup_PopupID_IsValid(value);
  }
  static const PopupID PopupID_MIN =
    CMsgDOTAPopup_PopupID_PopupID_MIN;
  static const PopupID PopupID_MAX =
    CMsgDOTAPopup_PopupID_PopupID_MAX;
  static const int PopupID_ARRAYSIZE =
    CMsgDOTAPopup_PopupID_PopupID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PopupID_descriptor() {
    return CMsgDOTAPopup_PopupID_descriptor();
  }
  static inline const ::std::string& PopupID_Name(PopupID value) {
    return CMsgDOTAPopup_PopupID_Name(value);
  }
  static inline bool PopupID_Parse(const ::std::string& name,
      PopupID* value) {
    return CMsgDOTAPopup_PopupID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string var_names = 7;
  int var_names_size() const;
  void clear_var_names();
  static const int kVarNamesFieldNumber = 7;
  const ::std::string& var_names(int index) const;
  ::std::string* mutable_var_names(int index);
  void set_var_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_var_names(int index, ::std::string&& value);
  #endif
  void set_var_names(int index, const char* value);
  void set_var_names(int index, const char* value, size_t size);
  ::std::string* add_var_names();
  void add_var_names(const ::std::string& value);
  #if LANG_CXX11
  void add_var_names(::std::string&& value);
  #endif
  void add_var_names(const char* value);
  void add_var_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& var_names() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_var_names();

  // repeated string var_values = 8;
  int var_values_size() const;
  void clear_var_values();
  static const int kVarValuesFieldNumber = 8;
  const ::std::string& var_values(int index) const;
  ::std::string* mutable_var_values(int index);
  void set_var_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_var_values(int index, ::std::string&& value);
  #endif
  void set_var_values(int index, const char* value);
  void set_var_values(int index, const char* value, size_t size);
  ::std::string* add_var_values();
  void add_var_values(const ::std::string& value);
  #if LANG_CXX11
  void add_var_values(::std::string&& value);
  #endif
  void add_var_values(const char* value);
  void add_var_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& var_values() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_var_values();

  // optional string custom_text = 2;
  bool has_custom_text() const;
  void clear_custom_text();
  static const int kCustomTextFieldNumber = 2;
  const ::std::string& custom_text() const;
  void set_custom_text(const ::std::string& value);
  #if LANG_CXX11
  void set_custom_text(::std::string&& value);
  #endif
  void set_custom_text(const char* value);
  void set_custom_text(const char* value, size_t size);
  ::std::string* mutable_custom_text();
  ::std::string* release_custom_text();
  void set_allocated_custom_text(::std::string* custom_text);

  // optional bytes popup_data = 4;
  bool has_popup_data() const;
  void clear_popup_data();
  static const int kPopupDataFieldNumber = 4;
  const ::std::string& popup_data() const;
  void set_popup_data(const ::std::string& value);
  #if LANG_CXX11
  void set_popup_data(::std::string&& value);
  #endif
  void set_popup_data(const char* value);
  void set_popup_data(const void* value, size_t size);
  ::std::string* mutable_popup_data();
  ::std::string* release_popup_data();
  void set_allocated_popup_data(::std::string* popup_data);

  // optional string loc_token_header = 5;
  bool has_loc_token_header() const;
  void clear_loc_token_header();
  static const int kLocTokenHeaderFieldNumber = 5;
  const ::std::string& loc_token_header() const;
  void set_loc_token_header(const ::std::string& value);
  #if LANG_CXX11
  void set_loc_token_header(::std::string&& value);
  #endif
  void set_loc_token_header(const char* value);
  void set_loc_token_header(const char* value, size_t size);
  ::std::string* mutable_loc_token_header();
  ::std::string* release_loc_token_header();
  void set_allocated_loc_token_header(::std::string* loc_token_header);

  // optional string loc_token_msg = 6;
  bool has_loc_token_msg() const;
  void clear_loc_token_msg();
  static const int kLocTokenMsgFieldNumber = 6;
  const ::std::string& loc_token_msg() const;
  void set_loc_token_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_loc_token_msg(::std::string&& value);
  #endif
  void set_loc_token_msg(const char* value);
  void set_loc_token_msg(const char* value, size_t size);
  ::std::string* mutable_loc_token_msg();
  ::std::string* release_loc_token_msg();
  void set_allocated_loc_token_msg(::std::string* loc_token_msg);

  // optional string debug_text = 9;
  bool has_debug_text() const;
  void clear_debug_text();
  static const int kDebugTextFieldNumber = 9;
  const ::std::string& debug_text() const;
  void set_debug_text(const ::std::string& value);
  #if LANG_CXX11
  void set_debug_text(::std::string&& value);
  #endif
  void set_debug_text(const char* value);
  void set_debug_text(const char* value, size_t size);
  ::std::string* mutable_debug_text();
  ::std::string* release_debug_text();
  void set_allocated_debug_text(::std::string* debug_text);

  // optional sint32 int_data = 3;
  bool has_int_data() const;
  void clear_int_data();
  static const int kIntDataFieldNumber = 3;
  ::google::protobuf::int32 int_data() const;
  void set_int_data(::google::protobuf::int32 value);

  // optional .proto.dota.CMsgDOTAPopup.PopupID id = 1 [default = NONE];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::proto::dota::CMsgDOTAPopup_PopupID id() const;
  void set_id(::proto::dota::CMsgDOTAPopup_PopupID value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPopup)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> var_names_;
  ::google::protobuf::RepeatedPtrField<::std::string> var_values_;
  ::google::protobuf::internal::ArenaStringPtr custom_text_;
  ::google::protobuf::internal::ArenaStringPtr popup_data_;
  ::google::protobuf::internal::ArenaStringPtr loc_token_header_;
  ::google::protobuf::internal::ArenaStringPtr loc_token_msg_;
  ::google::protobuf::internal::ArenaStringPtr debug_text_;
  ::google::protobuf::int32 int_data_;
  int id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAReportsRemainingRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAReportsRemainingRequest) */ {
 public:
  CMsgDOTAReportsRemainingRequest();
  virtual ~CMsgDOTAReportsRemainingRequest();

  CMsgDOTAReportsRemainingRequest(const CMsgDOTAReportsRemainingRequest& from);

  inline CMsgDOTAReportsRemainingRequest& operator=(const CMsgDOTAReportsRemainingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAReportsRemainingRequest(CMsgDOTAReportsRemainingRequest&& from) noexcept
    : CMsgDOTAReportsRemainingRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAReportsRemainingRequest& operator=(CMsgDOTAReportsRemainingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAReportsRemainingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAReportsRemainingRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAReportsRemainingRequest*>(
               &_CMsgDOTAReportsRemainingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CMsgDOTAReportsRemainingRequest* other);
  friend void swap(CMsgDOTAReportsRemainingRequest& a, CMsgDOTAReportsRemainingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAReportsRemainingRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTAReportsRemainingRequest>(nullptr);
  }

  CMsgDOTAReportsRemainingRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAReportsRemainingRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAReportsRemainingRequest& from);
  void MergeFrom(const CMsgDOTAReportsRemainingRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAReportsRemainingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAReportsRemainingRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAReportsRemainingResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAReportsRemainingResponse) */ {
 public:
  CMsgDOTAReportsRemainingResponse();
  virtual ~CMsgDOTAReportsRemainingResponse();

  CMsgDOTAReportsRemainingResponse(const CMsgDOTAReportsRemainingResponse& from);

  inline CMsgDOTAReportsRemainingResponse& operator=(const CMsgDOTAReportsRemainingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAReportsRemainingResponse(CMsgDOTAReportsRemainingResponse&& from) noexcept
    : CMsgDOTAReportsRemainingResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAReportsRemainingResponse& operator=(CMsgDOTAReportsRemainingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAReportsRemainingResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAReportsRemainingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAReportsRemainingResponse*>(
               &_CMsgDOTAReportsRemainingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CMsgDOTAReportsRemainingResponse* other);
  friend void swap(CMsgDOTAReportsRemainingResponse& a, CMsgDOTAReportsRemainingResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAReportsRemainingResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAReportsRemainingResponse>(nullptr);
  }

  CMsgDOTAReportsRemainingResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAReportsRemainingResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAReportsRemainingResponse& from);
  void MergeFrom(const CMsgDOTAReportsRemainingResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAReportsRemainingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num_positive_reports_remaining = 1;
  bool has_num_positive_reports_remaining() const;
  void clear_num_positive_reports_remaining();
  static const int kNumPositiveReportsRemainingFieldNumber = 1;
  ::google::protobuf::uint32 num_positive_reports_remaining() const;
  void set_num_positive_reports_remaining(::google::protobuf::uint32 value);

  // optional uint32 num_negative_reports_remaining = 2;
  bool has_num_negative_reports_remaining() const;
  void clear_num_negative_reports_remaining();
  static const int kNumNegativeReportsRemainingFieldNumber = 2;
  ::google::protobuf::uint32 num_negative_reports_remaining() const;
  void set_num_negative_reports_remaining(::google::protobuf::uint32 value);

  // optional uint32 num_positive_reports_total = 3;
  bool has_num_positive_reports_total() const;
  void clear_num_positive_reports_total();
  static const int kNumPositiveReportsTotalFieldNumber = 3;
  ::google::protobuf::uint32 num_positive_reports_total() const;
  void set_num_positive_reports_total(::google::protobuf::uint32 value);

  // optional uint32 num_negative_reports_total = 4;
  bool has_num_negative_reports_total() const;
  void clear_num_negative_reports_total();
  static const int kNumNegativeReportsTotalFieldNumber = 4;
  ::google::protobuf::uint32 num_negative_reports_total() const;
  void set_num_negative_reports_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAReportsRemainingResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 num_positive_reports_remaining_;
  ::google::protobuf::uint32 num_negative_reports_remaining_;
  ::google::protobuf::uint32 num_positive_reports_total_;
  ::google::protobuf::uint32 num_negative_reports_total_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitPlayerReport final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASubmitPlayerReport) */ {
 public:
  CMsgDOTASubmitPlayerReport();
  virtual ~CMsgDOTASubmitPlayerReport();

  CMsgDOTASubmitPlayerReport(const CMsgDOTASubmitPlayerReport& from);

  inline CMsgDOTASubmitPlayerReport& operator=(const CMsgDOTASubmitPlayerReport& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASubmitPlayerReport(CMsgDOTASubmitPlayerReport&& from) noexcept
    : CMsgDOTASubmitPlayerReport() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASubmitPlayerReport& operator=(CMsgDOTASubmitPlayerReport&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASubmitPlayerReport& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASubmitPlayerReport* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASubmitPlayerReport*>(
               &_CMsgDOTASubmitPlayerReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CMsgDOTASubmitPlayerReport* other);
  friend void swap(CMsgDOTASubmitPlayerReport& a, CMsgDOTASubmitPlayerReport& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASubmitPlayerReport* New() const final {
    return CreateMaybeMessage<CMsgDOTASubmitPlayerReport>(nullptr);
  }

  CMsgDOTASubmitPlayerReport* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASubmitPlayerReport>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASubmitPlayerReport& from);
  void MergeFrom(const CMsgDOTASubmitPlayerReport& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASubmitPlayerReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string comment = 5;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 5;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 target_account_id() const;
  void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 report_flags = 2;
  bool has_report_flags() const;
  void clear_report_flags();
  static const int kReportFlagsFieldNumber = 2;
  ::google::protobuf::uint32 report_flags() const;
  void set_report_flags(::google::protobuf::uint32 value);

  // optional uint64 lobby_id = 4;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 4;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASubmitPlayerReport)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 report_flags_;
  ::google::protobuf::uint64 lobby_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitPlayerReportResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASubmitPlayerReportResponse) */ {
 public:
  CMsgDOTASubmitPlayerReportResponse();
  virtual ~CMsgDOTASubmitPlayerReportResponse();

  CMsgDOTASubmitPlayerReportResponse(const CMsgDOTASubmitPlayerReportResponse& from);

  inline CMsgDOTASubmitPlayerReportResponse& operator=(const CMsgDOTASubmitPlayerReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASubmitPlayerReportResponse(CMsgDOTASubmitPlayerReportResponse&& from) noexcept
    : CMsgDOTASubmitPlayerReportResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASubmitPlayerReportResponse& operator=(CMsgDOTASubmitPlayerReportResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASubmitPlayerReportResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASubmitPlayerReportResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASubmitPlayerReportResponse*>(
               &_CMsgDOTASubmitPlayerReportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CMsgDOTASubmitPlayerReportResponse* other);
  friend void swap(CMsgDOTASubmitPlayerReportResponse& a, CMsgDOTASubmitPlayerReportResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASubmitPlayerReportResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTASubmitPlayerReportResponse>(nullptr);
  }

  CMsgDOTASubmitPlayerReportResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASubmitPlayerReportResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASubmitPlayerReportResponse& from);
  void MergeFrom(const CMsgDOTASubmitPlayerReportResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASubmitPlayerReportResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string debug_message = 4;
  bool has_debug_message() const;
  void clear_debug_message();
  static const int kDebugMessageFieldNumber = 4;
  const ::std::string& debug_message() const;
  void set_debug_message(const ::std::string& value);
  #if LANG_CXX11
  void set_debug_message(::std::string&& value);
  #endif
  void set_debug_message(const char* value);
  void set_debug_message(const char* value, size_t size);
  ::std::string* mutable_debug_message();
  ::std::string* release_debug_message();
  void set_allocated_debug_message(::std::string* debug_message);

  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 target_account_id() const;
  void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 report_flags = 2;
  bool has_report_flags() const;
  void clear_report_flags();
  static const int kReportFlagsFieldNumber = 2;
  ::google::protobuf::uint32 report_flags() const;
  void set_report_flags(::google::protobuf::uint32 value);

  // optional uint32 result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASubmitPlayerReportResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr debug_message_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 report_flags_;
  ::google::protobuf::uint32 result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAReportCountsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAReportCountsRequest) */ {
 public:
  CMsgDOTAReportCountsRequest();
  virtual ~CMsgDOTAReportCountsRequest();

  CMsgDOTAReportCountsRequest(const CMsgDOTAReportCountsRequest& from);

  inline CMsgDOTAReportCountsRequest& operator=(const CMsgDOTAReportCountsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAReportCountsRequest(CMsgDOTAReportCountsRequest&& from) noexcept
    : CMsgDOTAReportCountsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAReportCountsRequest& operator=(CMsgDOTAReportCountsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAReportCountsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAReportCountsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAReportCountsRequest*>(
               &_CMsgDOTAReportCountsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(CMsgDOTAReportCountsRequest* other);
  friend void swap(CMsgDOTAReportCountsRequest& a, CMsgDOTAReportCountsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAReportCountsRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTAReportCountsRequest>(nullptr);
  }

  CMsgDOTAReportCountsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAReportCountsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAReportCountsRequest& from);
  void MergeFrom(const CMsgDOTAReportCountsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAReportCountsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 target_account_id() const;
  void set_target_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAReportCountsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAReportCountsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAReportCountsResponse) */ {
 public:
  CMsgDOTAReportCountsResponse();
  virtual ~CMsgDOTAReportCountsResponse();

  CMsgDOTAReportCountsResponse(const CMsgDOTAReportCountsResponse& from);

  inline CMsgDOTAReportCountsResponse& operator=(const CMsgDOTAReportCountsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAReportCountsResponse(CMsgDOTAReportCountsResponse&& from) noexcept
    : CMsgDOTAReportCountsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAReportCountsResponse& operator=(CMsgDOTAReportCountsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAReportCountsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAReportCountsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAReportCountsResponse*>(
               &_CMsgDOTAReportCountsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CMsgDOTAReportCountsResponse* other);
  friend void swap(CMsgDOTAReportCountsResponse& a, CMsgDOTAReportCountsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAReportCountsResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAReportCountsResponse>(nullptr);
  }

  CMsgDOTAReportCountsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAReportCountsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAReportCountsResponse& from);
  void MergeFrom(const CMsgDOTAReportCountsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAReportCountsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 target_account_id() const;
  void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 leadership_count = 2;
  bool has_leadership_count() const;
  void clear_leadership_count();
  static const int kLeadershipCountFieldNumber = 2;
  ::google::protobuf::uint32 leadership_count() const;
  void set_leadership_count(::google::protobuf::uint32 value);

  // optional uint32 teaching_count = 3;
  bool has_teaching_count() const;
  void clear_teaching_count();
  static const int kTeachingCountFieldNumber = 3;
  ::google::protobuf::uint32 teaching_count() const;
  void set_teaching_count(::google::protobuf::uint32 value);

  // optional uint32 friendly_count = 4;
  bool has_friendly_count() const;
  void clear_friendly_count();
  static const int kFriendlyCountFieldNumber = 4;
  ::google::protobuf::uint32 friendly_count() const;
  void set_friendly_count(::google::protobuf::uint32 value);

  // optional uint32 forgiving_count = 5;
  bool has_forgiving_count() const;
  void clear_forgiving_count();
  static const int kForgivingCountFieldNumber = 5;
  ::google::protobuf::uint32 forgiving_count() const;
  void set_forgiving_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAReportCountsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 leadership_count_;
  ::google::protobuf::uint32 teaching_count_;
  ::google::protobuf::uint32 friendly_count_;
  ::google::protobuf::uint32 forgiving_count_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitLobbyMVPVote final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASubmitLobbyMVPVote) */ {
 public:
  CMsgDOTASubmitLobbyMVPVote();
  virtual ~CMsgDOTASubmitLobbyMVPVote();

  CMsgDOTASubmitLobbyMVPVote(const CMsgDOTASubmitLobbyMVPVote& from);

  inline CMsgDOTASubmitLobbyMVPVote& operator=(const CMsgDOTASubmitLobbyMVPVote& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASubmitLobbyMVPVote(CMsgDOTASubmitLobbyMVPVote&& from) noexcept
    : CMsgDOTASubmitLobbyMVPVote() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASubmitLobbyMVPVote& operator=(CMsgDOTASubmitLobbyMVPVote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASubmitLobbyMVPVote& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASubmitLobbyMVPVote* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASubmitLobbyMVPVote*>(
               &_CMsgDOTASubmitLobbyMVPVote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CMsgDOTASubmitLobbyMVPVote* other);
  friend void swap(CMsgDOTASubmitLobbyMVPVote& a, CMsgDOTASubmitLobbyMVPVote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASubmitLobbyMVPVote* New() const final {
    return CreateMaybeMessage<CMsgDOTASubmitLobbyMVPVote>(nullptr);
  }

  CMsgDOTASubmitLobbyMVPVote* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASubmitLobbyMVPVote>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASubmitLobbyMVPVote& from);
  void MergeFrom(const CMsgDOTASubmitLobbyMVPVote& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASubmitLobbyMVPVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 target_account_id() const;
  void set_target_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASubmitLobbyMVPVote)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitLobbyMVPVoteResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASubmitLobbyMVPVoteResponse) */ {
 public:
  CMsgDOTASubmitLobbyMVPVoteResponse();
  virtual ~CMsgDOTASubmitLobbyMVPVoteResponse();

  CMsgDOTASubmitLobbyMVPVoteResponse(const CMsgDOTASubmitLobbyMVPVoteResponse& from);

  inline CMsgDOTASubmitLobbyMVPVoteResponse& operator=(const CMsgDOTASubmitLobbyMVPVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASubmitLobbyMVPVoteResponse(CMsgDOTASubmitLobbyMVPVoteResponse&& from) noexcept
    : CMsgDOTASubmitLobbyMVPVoteResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASubmitLobbyMVPVoteResponse& operator=(CMsgDOTASubmitLobbyMVPVoteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASubmitLobbyMVPVoteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASubmitLobbyMVPVoteResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASubmitLobbyMVPVoteResponse*>(
               &_CMsgDOTASubmitLobbyMVPVoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(CMsgDOTASubmitLobbyMVPVoteResponse* other);
  friend void swap(CMsgDOTASubmitLobbyMVPVoteResponse& a, CMsgDOTASubmitLobbyMVPVoteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASubmitLobbyMVPVoteResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTASubmitLobbyMVPVoteResponse>(nullptr);
  }

  CMsgDOTASubmitLobbyMVPVoteResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASubmitLobbyMVPVoteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASubmitLobbyMVPVoteResponse& from);
  void MergeFrom(const CMsgDOTASubmitLobbyMVPVoteResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASubmitLobbyMVPVoteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 target_account_id() const;
  void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 eresult = 2;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 2;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASubmitLobbyMVPVoteResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 eresult_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTALobbyMVPNotifyRecipient final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALobbyMVPNotifyRecipient) */ {
 public:
  CMsgDOTALobbyMVPNotifyRecipient();
  virtual ~CMsgDOTALobbyMVPNotifyRecipient();

  CMsgDOTALobbyMVPNotifyRecipient(const CMsgDOTALobbyMVPNotifyRecipient& from);

  inline CMsgDOTALobbyMVPNotifyRecipient& operator=(const CMsgDOTALobbyMVPNotifyRecipient& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTALobbyMVPNotifyRecipient(CMsgDOTALobbyMVPNotifyRecipient&& from) noexcept
    : CMsgDOTALobbyMVPNotifyRecipient() {
    *this = ::std::move(from);
  }

  inline CMsgDOTALobbyMVPNotifyRecipient& operator=(CMsgDOTALobbyMVPNotifyRecipient&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTALobbyMVPNotifyRecipient& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTALobbyMVPNotifyRecipient* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALobbyMVPNotifyRecipient*>(
               &_CMsgDOTALobbyMVPNotifyRecipient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(CMsgDOTALobbyMVPNotifyRecipient* other);
  friend void swap(CMsgDOTALobbyMVPNotifyRecipient& a, CMsgDOTALobbyMVPNotifyRecipient& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTALobbyMVPNotifyRecipient* New() const final {
    return CreateMaybeMessage<CMsgDOTALobbyMVPNotifyRecipient>(nullptr);
  }

  CMsgDOTALobbyMVPNotifyRecipient* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTALobbyMVPNotifyRecipient>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTALobbyMVPNotifyRecipient& from);
  void MergeFrom(const CMsgDOTALobbyMVPNotifyRecipient& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTALobbyMVPNotifyRecipient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 voter_account_id = 1;
  bool has_voter_account_id() const;
  void clear_voter_account_id();
  static const int kVoterAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 voter_account_id() const;
  void set_voter_account_id(::google::protobuf::uint32 value);

  // optional uint32 recipient_account_id = 2;
  bool has_recipient_account_id() const;
  void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 recipient_account_id() const;
  void set_recipient_account_id(::google::protobuf::uint32 value);

  // optional uint32 num_votes = 3;
  bool has_num_votes() const;
  void clear_num_votes();
  static const int kNumVotesFieldNumber = 3;
  ::google::protobuf::uint32 num_votes() const;
  void set_num_votes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALobbyMVPNotifyRecipient)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 voter_account_id_;
  ::google::protobuf::uint32 recipient_account_id_;
  ::google::protobuf::uint32 num_votes_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTALobbyMVPAwarded final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALobbyMVPAwarded) */ {
 public:
  CMsgDOTALobbyMVPAwarded();
  virtual ~CMsgDOTALobbyMVPAwarded();

  CMsgDOTALobbyMVPAwarded(const CMsgDOTALobbyMVPAwarded& from);

  inline CMsgDOTALobbyMVPAwarded& operator=(const CMsgDOTALobbyMVPAwarded& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTALobbyMVPAwarded(CMsgDOTALobbyMVPAwarded&& from) noexcept
    : CMsgDOTALobbyMVPAwarded() {
    *this = ::std::move(from);
  }

  inline CMsgDOTALobbyMVPAwarded& operator=(CMsgDOTALobbyMVPAwarded&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTALobbyMVPAwarded& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTALobbyMVPAwarded* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALobbyMVPAwarded*>(
               &_CMsgDOTALobbyMVPAwarded_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(CMsgDOTALobbyMVPAwarded* other);
  friend void swap(CMsgDOTALobbyMVPAwarded& a, CMsgDOTALobbyMVPAwarded& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTALobbyMVPAwarded* New() const final {
    return CreateMaybeMessage<CMsgDOTALobbyMVPAwarded>(nullptr);
  }

  CMsgDOTALobbyMVPAwarded* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTALobbyMVPAwarded>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTALobbyMVPAwarded& from);
  void MergeFrom(const CMsgDOTALobbyMVPAwarded& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTALobbyMVPAwarded* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mvp_account_id = 1;
  bool has_mvp_account_id() const;
  void clear_mvp_account_id();
  static const int kMvpAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 mvp_account_id() const;
  void set_mvp_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALobbyMVPAwarded)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 mvp_account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAKickedFromMatchmakingQueue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAKickedFromMatchmakingQueue) */ {
 public:
  CMsgDOTAKickedFromMatchmakingQueue();
  virtual ~CMsgDOTAKickedFromMatchmakingQueue();

  CMsgDOTAKickedFromMatchmakingQueue(const CMsgDOTAKickedFromMatchmakingQueue& from);

  inline CMsgDOTAKickedFromMatchmakingQueue& operator=(const CMsgDOTAKickedFromMatchmakingQueue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAKickedFromMatchmakingQueue(CMsgDOTAKickedFromMatchmakingQueue&& from) noexcept
    : CMsgDOTAKickedFromMatchmakingQueue() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAKickedFromMatchmakingQueue& operator=(CMsgDOTAKickedFromMatchmakingQueue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAKickedFromMatchmakingQueue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAKickedFromMatchmakingQueue* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAKickedFromMatchmakingQueue*>(
               &_CMsgDOTAKickedFromMatchmakingQueue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(CMsgDOTAKickedFromMatchmakingQueue* other);
  friend void swap(CMsgDOTAKickedFromMatchmakingQueue& a, CMsgDOTAKickedFromMatchmakingQueue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAKickedFromMatchmakingQueue* New() const final {
    return CreateMaybeMessage<CMsgDOTAKickedFromMatchmakingQueue>(nullptr);
  }

  CMsgDOTAKickedFromMatchmakingQueue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAKickedFromMatchmakingQueue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAKickedFromMatchmakingQueue& from);
  void MergeFrom(const CMsgDOTAKickedFromMatchmakingQueue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAKickedFromMatchmakingQueue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.MatchType match_type = 1 [default = MATCH_TYPE_CASUAL];
  bool has_match_type() const;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::dota::MatchType match_type() const;
  void set_match_type(::proto::dota::MatchType value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAKickedFromMatchmakingQueue)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int match_type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARequestSaveGames final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestSaveGames) */ {
 public:
  CMsgDOTARequestSaveGames();
  virtual ~CMsgDOTARequestSaveGames();

  CMsgDOTARequestSaveGames(const CMsgDOTARequestSaveGames& from);

  inline CMsgDOTARequestSaveGames& operator=(const CMsgDOTARequestSaveGames& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARequestSaveGames(CMsgDOTARequestSaveGames&& from) noexcept
    : CMsgDOTARequestSaveGames() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARequestSaveGames& operator=(CMsgDOTARequestSaveGames&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARequestSaveGames& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARequestSaveGames* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestSaveGames*>(
               &_CMsgDOTARequestSaveGames_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(CMsgDOTARequestSaveGames* other);
  friend void swap(CMsgDOTARequestSaveGames& a, CMsgDOTARequestSaveGames& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestSaveGames* New() const final {
    return CreateMaybeMessage<CMsgDOTARequestSaveGames>(nullptr);
  }

  CMsgDOTARequestSaveGames* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARequestSaveGames>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARequestSaveGames& from);
  void MergeFrom(const CMsgDOTARequestSaveGames& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARequestSaveGames* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_region = 1;
  bool has_server_region() const;
  void clear_server_region();
  static const int kServerRegionFieldNumber = 1;
  ::google::protobuf::uint32 server_region() const;
  void set_server_region(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestSaveGames)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 server_region_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARequestSaveGamesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestSaveGamesResponse) */ {
 public:
  CMsgDOTARequestSaveGamesResponse();
  virtual ~CMsgDOTARequestSaveGamesResponse();

  CMsgDOTARequestSaveGamesResponse(const CMsgDOTARequestSaveGamesResponse& from);

  inline CMsgDOTARequestSaveGamesResponse& operator=(const CMsgDOTARequestSaveGamesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARequestSaveGamesResponse(CMsgDOTARequestSaveGamesResponse&& from) noexcept
    : CMsgDOTARequestSaveGamesResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARequestSaveGamesResponse& operator=(CMsgDOTARequestSaveGamesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARequestSaveGamesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARequestSaveGamesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestSaveGamesResponse*>(
               &_CMsgDOTARequestSaveGamesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(CMsgDOTARequestSaveGamesResponse* other);
  friend void swap(CMsgDOTARequestSaveGamesResponse& a, CMsgDOTARequestSaveGamesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestSaveGamesResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTARequestSaveGamesResponse>(nullptr);
  }

  CMsgDOTARequestSaveGamesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARequestSaveGamesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARequestSaveGamesResponse& from);
  void MergeFrom(const CMsgDOTARequestSaveGamesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARequestSaveGamesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTASaveGame save_games = 2;
  int save_games_size() const;
  void clear_save_games();
  static const int kSaveGamesFieldNumber = 2;
  ::proto::dota::CDOTASaveGame* mutable_save_games(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTASaveGame >*
      mutable_save_games();
  const ::proto::dota::CDOTASaveGame& save_games(int index) const;
  ::proto::dota::CDOTASaveGame* add_save_games();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTASaveGame >&
      save_games() const;

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestSaveGamesResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTASaveGame > save_games_;
  ::google::protobuf::uint64 steam_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMatchDetailsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMatchDetailsRequest) */ {
 public:
  CMsgGCMatchDetailsRequest();
  virtual ~CMsgGCMatchDetailsRequest();

  CMsgGCMatchDetailsRequest(const CMsgGCMatchDetailsRequest& from);

  inline CMsgGCMatchDetailsRequest& operator=(const CMsgGCMatchDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMatchDetailsRequest(CMsgGCMatchDetailsRequest&& from) noexcept
    : CMsgGCMatchDetailsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCMatchDetailsRequest& operator=(CMsgGCMatchDetailsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMatchDetailsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMatchDetailsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMatchDetailsRequest*>(
               &_CMsgGCMatchDetailsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(CMsgGCMatchDetailsRequest* other);
  friend void swap(CMsgGCMatchDetailsRequest& a, CMsgGCMatchDetailsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMatchDetailsRequest* New() const final {
    return CreateMaybeMessage<CMsgGCMatchDetailsRequest>(nullptr);
  }

  CMsgGCMatchDetailsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMatchDetailsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMatchDetailsRequest& from);
  void MergeFrom(const CMsgGCMatchDetailsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMatchDetailsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMatchDetailsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMatchDetailsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMatchDetailsResponse) */ {
 public:
  CMsgGCMatchDetailsResponse();
  virtual ~CMsgGCMatchDetailsResponse();

  CMsgGCMatchDetailsResponse(const CMsgGCMatchDetailsResponse& from);

  inline CMsgGCMatchDetailsResponse& operator=(const CMsgGCMatchDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMatchDetailsResponse(CMsgGCMatchDetailsResponse&& from) noexcept
    : CMsgGCMatchDetailsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCMatchDetailsResponse& operator=(CMsgGCMatchDetailsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMatchDetailsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMatchDetailsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMatchDetailsResponse*>(
               &_CMsgGCMatchDetailsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(CMsgGCMatchDetailsResponse* other);
  friend void swap(CMsgGCMatchDetailsResponse& a, CMsgGCMatchDetailsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMatchDetailsResponse* New() const final {
    return CreateMaybeMessage<CMsgGCMatchDetailsResponse>(nullptr);
  }

  CMsgGCMatchDetailsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMatchDetailsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMatchDetailsResponse& from);
  void MergeFrom(const CMsgGCMatchDetailsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMatchDetailsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAMatch match = 2;
  bool has_match() const;
  void clear_match();
  static const int kMatchFieldNumber = 2;
  const ::proto::dota::CMsgDOTAMatch& match() const;
  ::proto::dota::CMsgDOTAMatch* release_match();
  ::proto::dota::CMsgDOTAMatch* mutable_match();
  void set_allocated_match(::proto::dota::CMsgDOTAMatch* match);

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional .proto.dota.DOTAMatchVote vote = 3 [default = DOTAMatchVote_INVALID];
  bool has_vote() const;
  void clear_vote();
  static const int kVoteFieldNumber = 3;
  ::proto::dota::DOTAMatchVote vote() const;
  void set_vote(::proto::dota::DOTAMatchVote value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMatchDetailsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTAMatch* match_;
  ::google::protobuf::uint32 result_;
  int vote_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchDetailsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCMatchDetailsRequest) */ {
 public:
  CMsgServerToGCMatchDetailsRequest();
  virtual ~CMsgServerToGCMatchDetailsRequest();

  CMsgServerToGCMatchDetailsRequest(const CMsgServerToGCMatchDetailsRequest& from);

  inline CMsgServerToGCMatchDetailsRequest& operator=(const CMsgServerToGCMatchDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCMatchDetailsRequest(CMsgServerToGCMatchDetailsRequest&& from) noexcept
    : CMsgServerToGCMatchDetailsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCMatchDetailsRequest& operator=(CMsgServerToGCMatchDetailsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCMatchDetailsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCMatchDetailsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCMatchDetailsRequest*>(
               &_CMsgServerToGCMatchDetailsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(CMsgServerToGCMatchDetailsRequest* other);
  friend void swap(CMsgServerToGCMatchDetailsRequest& a, CMsgServerToGCMatchDetailsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCMatchDetailsRequest* New() const final {
    return CreateMaybeMessage<CMsgServerToGCMatchDetailsRequest>(nullptr);
  }

  CMsgServerToGCMatchDetailsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCMatchDetailsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCMatchDetailsRequest& from);
  void MergeFrom(const CMsgServerToGCMatchDetailsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCMatchDetailsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 match_ids = 1;
  int match_ids_size() const;
  void clear_match_ids();
  static const int kMatchIdsFieldNumber = 1;
  ::google::protobuf::uint64 match_ids(int index) const;
  void set_match_ids(int index, ::google::protobuf::uint64 value);
  void add_match_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      match_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_match_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCMatchDetailsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > match_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToServerMatchDetailsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToServerMatchDetailsResponse) */ {
 public:
  CMsgGCToServerMatchDetailsResponse();
  virtual ~CMsgGCToServerMatchDetailsResponse();

  CMsgGCToServerMatchDetailsResponse(const CMsgGCToServerMatchDetailsResponse& from);

  inline CMsgGCToServerMatchDetailsResponse& operator=(const CMsgGCToServerMatchDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToServerMatchDetailsResponse(CMsgGCToServerMatchDetailsResponse&& from) noexcept
    : CMsgGCToServerMatchDetailsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToServerMatchDetailsResponse& operator=(CMsgGCToServerMatchDetailsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToServerMatchDetailsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToServerMatchDetailsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToServerMatchDetailsResponse*>(
               &_CMsgGCToServerMatchDetailsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(CMsgGCToServerMatchDetailsResponse* other);
  friend void swap(CMsgGCToServerMatchDetailsResponse& a, CMsgGCToServerMatchDetailsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToServerMatchDetailsResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToServerMatchDetailsResponse>(nullptr);
  }

  CMsgGCToServerMatchDetailsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToServerMatchDetailsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToServerMatchDetailsResponse& from);
  void MergeFrom(const CMsgGCToServerMatchDetailsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToServerMatchDetailsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAMatch matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  ::proto::dota::CMsgDOTAMatch* mutable_matches(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
      mutable_matches();
  const ::proto::dota::CMsgDOTAMatch& matches(int index) const;
  ::proto::dota::CMsgDOTAMatch* add_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
      matches() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToServerMatchDetailsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch > matches_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileTickets_LeaguePass final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAProfileTickets.LeaguePass) */ {
 public:
  CMsgDOTAProfileTickets_LeaguePass();
  virtual ~CMsgDOTAProfileTickets_LeaguePass();

  CMsgDOTAProfileTickets_LeaguePass(const CMsgDOTAProfileTickets_LeaguePass& from);

  inline CMsgDOTAProfileTickets_LeaguePass& operator=(const CMsgDOTAProfileTickets_LeaguePass& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAProfileTickets_LeaguePass(CMsgDOTAProfileTickets_LeaguePass&& from) noexcept
    : CMsgDOTAProfileTickets_LeaguePass() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAProfileTickets_LeaguePass& operator=(CMsgDOTAProfileTickets_LeaguePass&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAProfileTickets_LeaguePass& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAProfileTickets_LeaguePass* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAProfileTickets_LeaguePass*>(
               &_CMsgDOTAProfileTickets_LeaguePass_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(CMsgDOTAProfileTickets_LeaguePass* other);
  friend void swap(CMsgDOTAProfileTickets_LeaguePass& a, CMsgDOTAProfileTickets_LeaguePass& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAProfileTickets_LeaguePass* New() const final {
    return CreateMaybeMessage<CMsgDOTAProfileTickets_LeaguePass>(nullptr);
  }

  CMsgDOTAProfileTickets_LeaguePass* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAProfileTickets_LeaguePass>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAProfileTickets_LeaguePass& from);
  void MergeFrom(const CMsgDOTAProfileTickets_LeaguePass& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAProfileTickets_LeaguePass* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 item_def = 2;
  bool has_item_def() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 2;
  ::google::protobuf::uint32 item_def() const;
  void set_item_def(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAProfileTickets.LeaguePass)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 item_def_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileTickets final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAProfileTickets) */ {
 public:
  CMsgDOTAProfileTickets();
  virtual ~CMsgDOTAProfileTickets();

  CMsgDOTAProfileTickets(const CMsgDOTAProfileTickets& from);

  inline CMsgDOTAProfileTickets& operator=(const CMsgDOTAProfileTickets& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAProfileTickets(CMsgDOTAProfileTickets&& from) noexcept
    : CMsgDOTAProfileTickets() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAProfileTickets& operator=(CMsgDOTAProfileTickets&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAProfileTickets& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAProfileTickets* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAProfileTickets*>(
               &_CMsgDOTAProfileTickets_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(CMsgDOTAProfileTickets* other);
  friend void swap(CMsgDOTAProfileTickets& a, CMsgDOTAProfileTickets& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAProfileTickets* New() const final {
    return CreateMaybeMessage<CMsgDOTAProfileTickets>(nullptr);
  }

  CMsgDOTAProfileTickets* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAProfileTickets>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAProfileTickets& from);
  void MergeFrom(const CMsgDOTAProfileTickets& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAProfileTickets* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAProfileTickets_LeaguePass LeaguePass;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAProfileTickets.LeaguePass league_passes = 3;
  int league_passes_size() const;
  void clear_league_passes();
  static const int kLeaguePassesFieldNumber = 3;
  ::proto::dota::CMsgDOTAProfileTickets_LeaguePass* mutable_league_passes(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_LeaguePass >*
      mutable_league_passes();
  const ::proto::dota::CMsgDOTAProfileTickets_LeaguePass& league_passes(int index) const;
  ::proto::dota::CMsgDOTAProfileTickets_LeaguePass* add_league_passes();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_LeaguePass >&
      league_passes() const;

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAProfileTickets)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_LeaguePass > league_passes_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetProfileTickets final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetProfileTickets) */ {
 public:
  CMsgClientToGCGetProfileTickets();
  virtual ~CMsgClientToGCGetProfileTickets();

  CMsgClientToGCGetProfileTickets(const CMsgClientToGCGetProfileTickets& from);

  inline CMsgClientToGCGetProfileTickets& operator=(const CMsgClientToGCGetProfileTickets& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetProfileTickets(CMsgClientToGCGetProfileTickets&& from) noexcept
    : CMsgClientToGCGetProfileTickets() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetProfileTickets& operator=(CMsgClientToGCGetProfileTickets&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetProfileTickets& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetProfileTickets* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetProfileTickets*>(
               &_CMsgClientToGCGetProfileTickets_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(CMsgClientToGCGetProfileTickets* other);
  friend void swap(CMsgClientToGCGetProfileTickets& a, CMsgClientToGCGetProfileTickets& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetProfileTickets* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetProfileTickets>(nullptr);
  }

  CMsgClientToGCGetProfileTickets* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetProfileTickets>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetProfileTickets& from);
  void MergeFrom(const CMsgClientToGCGetProfileTickets& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetProfileTickets* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetProfileTickets)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAClearNotifySuccessfulReport final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClearNotifySuccessfulReport) */ {
 public:
  CMsgDOTAClearNotifySuccessfulReport();
  virtual ~CMsgDOTAClearNotifySuccessfulReport();

  CMsgDOTAClearNotifySuccessfulReport(const CMsgDOTAClearNotifySuccessfulReport& from);

  inline CMsgDOTAClearNotifySuccessfulReport& operator=(const CMsgDOTAClearNotifySuccessfulReport& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAClearNotifySuccessfulReport(CMsgDOTAClearNotifySuccessfulReport&& from) noexcept
    : CMsgDOTAClearNotifySuccessfulReport() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAClearNotifySuccessfulReport& operator=(CMsgDOTAClearNotifySuccessfulReport&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAClearNotifySuccessfulReport& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAClearNotifySuccessfulReport* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClearNotifySuccessfulReport*>(
               &_CMsgDOTAClearNotifySuccessfulReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(CMsgDOTAClearNotifySuccessfulReport* other);
  friend void swap(CMsgDOTAClearNotifySuccessfulReport& a, CMsgDOTAClearNotifySuccessfulReport& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAClearNotifySuccessfulReport* New() const final {
    return CreateMaybeMessage<CMsgDOTAClearNotifySuccessfulReport>(nullptr);
  }

  CMsgDOTAClearNotifySuccessfulReport* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAClearNotifySuccessfulReport>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAClearNotifySuccessfulReport& from);
  void MergeFrom(const CMsgDOTAClearNotifySuccessfulReport& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAClearNotifySuccessfulReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClearNotifySuccessfulReport)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAWelcome_CExtraMsg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAWelcome.CExtraMsg) */ {
 public:
  CMsgDOTAWelcome_CExtraMsg();
  virtual ~CMsgDOTAWelcome_CExtraMsg();

  CMsgDOTAWelcome_CExtraMsg(const CMsgDOTAWelcome_CExtraMsg& from);

  inline CMsgDOTAWelcome_CExtraMsg& operator=(const CMsgDOTAWelcome_CExtraMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAWelcome_CExtraMsg(CMsgDOTAWelcome_CExtraMsg&& from) noexcept
    : CMsgDOTAWelcome_CExtraMsg() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAWelcome_CExtraMsg& operator=(CMsgDOTAWelcome_CExtraMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAWelcome_CExtraMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAWelcome_CExtraMsg* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAWelcome_CExtraMsg*>(
               &_CMsgDOTAWelcome_CExtraMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(CMsgDOTAWelcome_CExtraMsg* other);
  friend void swap(CMsgDOTAWelcome_CExtraMsg& a, CMsgDOTAWelcome_CExtraMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAWelcome_CExtraMsg* New() const final {
    return CreateMaybeMessage<CMsgDOTAWelcome_CExtraMsg>(nullptr);
  }

  CMsgDOTAWelcome_CExtraMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAWelcome_CExtraMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAWelcome_CExtraMsg& from);
  void MergeFrom(const CMsgDOTAWelcome_CExtraMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAWelcome_CExtraMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes contents = 2;
  bool has_contents() const;
  void clear_contents();
  static const int kContentsFieldNumber = 2;
  const ::std::string& contents() const;
  void set_contents(const ::std::string& value);
  #if LANG_CXX11
  void set_contents(::std::string&& value);
  #endif
  void set_contents(const char* value);
  void set_contents(const void* value, size_t size);
  ::std::string* mutable_contents();
  ::std::string* release_contents();
  void set_allocated_contents(::std::string* contents);

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAWelcome.CExtraMsg)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr contents_;
  ::google::protobuf::uint32 id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAWelcome final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAWelcome) */ {
 public:
  CMsgDOTAWelcome();
  virtual ~CMsgDOTAWelcome();

  CMsgDOTAWelcome(const CMsgDOTAWelcome& from);

  inline CMsgDOTAWelcome& operator=(const CMsgDOTAWelcome& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAWelcome(CMsgDOTAWelcome&& from) noexcept
    : CMsgDOTAWelcome() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAWelcome& operator=(CMsgDOTAWelcome&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAWelcome& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAWelcome* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAWelcome*>(
               &_CMsgDOTAWelcome_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(CMsgDOTAWelcome* other);
  friend void swap(CMsgDOTAWelcome& a, CMsgDOTAWelcome& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAWelcome* New() const final {
    return CreateMaybeMessage<CMsgDOTAWelcome>(nullptr);
  }

  CMsgDOTAWelcome* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAWelcome>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAWelcome& from);
  void MergeFrom(const CMsgDOTAWelcome& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAWelcome* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAWelcome_CExtraMsg CExtraMsg;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAWelcome.CExtraMsg extra_messages = 26;
  int extra_messages_size() const;
  void clear_extra_messages();
  static const int kExtraMessagesFieldNumber = 26;
  ::proto::dota::CMsgDOTAWelcome_CExtraMsg* mutable_extra_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_CExtraMsg >*
      mutable_extra_messages();
  const ::proto::dota::CMsgDOTAWelcome_CExtraMsg& extra_messages(int index) const;
  ::proto::dota::CMsgDOTAWelcome_CExtraMsg* add_extra_messages();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_CExtraMsg >&
      extra_messages() const;

  // optional uint32 store_item_hash = 5;
  bool has_store_item_hash() const;
  void clear_store_item_hash();
  static const int kStoreItemHashFieldNumber = 5;
  ::google::protobuf::uint32 store_item_hash() const;
  void set_store_item_hash(::google::protobuf::uint32 value);

  // optional uint32 timeplayedconsecutively = 6;
  bool has_timeplayedconsecutively() const;
  void clear_timeplayedconsecutively();
  static const int kTimeplayedconsecutivelyFieldNumber = 6;
  ::google::protobuf::uint32 timeplayedconsecutively() const;
  void set_timeplayedconsecutively(::google::protobuf::uint32 value);

  // optional .proto.dota.PartnerAccountType partner_account_type = 8 [default = PARTNER_NONE];
  bool has_partner_account_type() const;
  void clear_partner_account_type();
  static const int kPartnerAccountTypeFieldNumber = 8;
  ::proto::dota::PartnerAccountType partner_account_type() const;
  void set_partner_account_type(::proto::dota::PartnerAccountType value);

  // optional uint32 partner_account_state = 11;
  bool has_partner_account_state() const;
  void clear_partner_account_state();
  static const int kPartnerAccountStateFieldNumber = 11;
  ::google::protobuf::uint32 partner_account_state() const;
  void set_partner_account_state(::google::protobuf::uint32 value);

  // optional uint32 last_time_played = 12;
  bool has_last_time_played() const;
  void clear_last_time_played();
  static const int kLastTimePlayedFieldNumber = 12;
  ::google::protobuf::uint32 last_time_played() const;
  void set_last_time_played(::google::protobuf::uint32 value);

  // optional uint32 last_ip_address = 13;
  bool has_last_ip_address() const;
  void clear_last_ip_address();
  static const int kLastIpAddressFieldNumber = 13;
  ::google::protobuf::uint32 last_ip_address() const;
  void set_last_ip_address(::google::protobuf::uint32 value);

  // optional uint32 shutdownlawterminateminutes = 15;
  bool has_shutdownlawterminateminutes() const;
  void clear_shutdownlawterminateminutes();
  static const int kShutdownlawterminateminutesFieldNumber = 15;
  ::google::protobuf::uint32 shutdownlawterminateminutes() const;
  void set_shutdownlawterminateminutes(::google::protobuf::uint32 value);

  // optional uint32 banned_word_list_version = 16;
  bool has_banned_word_list_version() const;
  void clear_banned_word_list_version();
  static const int kBannedWordListVersionFieldNumber = 16;
  ::google::protobuf::uint32 banned_word_list_version() const;
  void set_banned_word_list_version(::google::protobuf::uint32 value);

  // optional bool allow_3rd_party_match_history = 7;
  bool has_allow_3rd_party_match_history() const;
  void clear_allow_3rd_party_match_history();
  static const int kAllow3RdPartyMatchHistoryFieldNumber = 7;
  bool allow_3rd_party_match_history() const;
  void set_allow_3rd_party_match_history(bool value);

  // optional bool profile_private = 17;
  bool has_profile_private() const;
  void clear_profile_private();
  static const int kProfilePrivateFieldNumber = 17;
  bool profile_private() const;
  void set_profile_private(bool value);

  // optional bool should_request_player_origin = 20;
  bool has_should_request_player_origin() const;
  void clear_should_request_player_origin();
  static const int kShouldRequestPlayerOriginFieldNumber = 20;
  bool should_request_player_origin() const;
  void set_should_request_player_origin(bool value);

  // optional bool is_perfect_world_test_account = 24;
  bool has_is_perfect_world_test_account() const;
  void clear_is_perfect_world_test_account();
  static const int kIsPerfectWorldTestAccountFieldNumber = 24;
  bool is_perfect_world_test_account() const;
  void set_is_perfect_world_test_account(bool value);

  // optional uint32 currency = 18;
  bool has_currency() const;
  void clear_currency();
  static const int kCurrencyFieldNumber = 18;
  ::google::protobuf::uint32 currency() const;
  void set_currency(::google::protobuf::uint32 value);

  // optional uint32 pwrd_cyber_cafe_id = 19;
  bool has_pwrd_cyber_cafe_id() const;
  void clear_pwrd_cyber_cafe_id();
  static const int kPwrdCyberCafeIdFieldNumber = 19;
  ::google::protobuf::uint32 pwrd_cyber_cafe_id() const;
  void set_pwrd_cyber_cafe_id(::google::protobuf::uint32 value);

  // optional uint32 gc_socache_file_version = 22;
  bool has_gc_socache_file_version() const;
  void clear_gc_socache_file_version();
  static const int kGcSocacheFileVersionFieldNumber = 22;
  ::google::protobuf::uint32 gc_socache_file_version() const;
  void set_gc_socache_file_version(::google::protobuf::uint32 value);

  // optional uint64 compendium_unlocks = 21;
  bool has_compendium_unlocks() const;
  void clear_compendium_unlocks();
  static const int kCompendiumUnlocksFieldNumber = 21;
  ::google::protobuf::uint64 compendium_unlocks() const;
  void set_compendium_unlocks(::google::protobuf::uint64 value);

  // optional uint64 minimum_recent_item_id = 27;
  bool has_minimum_recent_item_id() const;
  void clear_minimum_recent_item_id();
  static const int kMinimumRecentItemIdFieldNumber = 27;
  ::google::protobuf::uint64 minimum_recent_item_id() const;
  void set_minimum_recent_item_id(::google::protobuf::uint64 value);

  // optional .proto.dota.EEvent active_event = 28 [default = EVENT_ID_NONE];
  bool has_active_event() const;
  void clear_active_event();
  static const int kActiveEventFieldNumber = 28;
  ::proto::dota::EEvent active_event() const;
  void set_active_event(::proto::dota::EEvent value);

  // optional uint32 additional_user_message = 29;
  bool has_additional_user_message() const;
  void clear_additional_user_message();
  static const int kAdditionalUserMessageFieldNumber = 29;
  ::google::protobuf::uint32 additional_user_message() const;
  void set_additional_user_message(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAWelcome)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_CExtraMsg > extra_messages_;
  ::google::protobuf::uint32 store_item_hash_;
  ::google::protobuf::uint32 timeplayedconsecutively_;
  int partner_account_type_;
  ::google::protobuf::uint32 partner_account_state_;
  ::google::protobuf::uint32 last_time_played_;
  ::google::protobuf::uint32 last_ip_address_;
  ::google::protobuf::uint32 shutdownlawterminateminutes_;
  ::google::protobuf::uint32 banned_word_list_version_;
  bool allow_3rd_party_match_history_;
  bool profile_private_;
  bool should_request_player_origin_;
  bool is_perfect_world_test_account_;
  ::google::protobuf::uint32 currency_;
  ::google::protobuf::uint32 pwrd_cyber_cafe_id_;
  ::google::protobuf::uint32 gc_socache_file_version_;
  ::google::protobuf::uint64 compendium_unlocks_;
  ::google::protobuf::uint64 minimum_recent_item_id_;
  int active_event_;
  ::google::protobuf::uint32 additional_user_message_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CSODOTAGameHeroFavorites final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSODOTAGameHeroFavorites) */ {
 public:
  CSODOTAGameHeroFavorites();
  virtual ~CSODOTAGameHeroFavorites();

  CSODOTAGameHeroFavorites(const CSODOTAGameHeroFavorites& from);

  inline CSODOTAGameHeroFavorites& operator=(const CSODOTAGameHeroFavorites& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSODOTAGameHeroFavorites(CSODOTAGameHeroFavorites&& from) noexcept
    : CSODOTAGameHeroFavorites() {
    *this = ::std::move(from);
  }

  inline CSODOTAGameHeroFavorites& operator=(CSODOTAGameHeroFavorites&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSODOTAGameHeroFavorites& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSODOTAGameHeroFavorites* internal_default_instance() {
    return reinterpret_cast<const CSODOTAGameHeroFavorites*>(
               &_CSODOTAGameHeroFavorites_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(CSODOTAGameHeroFavorites* other);
  friend void swap(CSODOTAGameHeroFavorites& a, CSODOTAGameHeroFavorites& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSODOTAGameHeroFavorites* New() const final {
    return CreateMaybeMessage<CSODOTAGameHeroFavorites>(nullptr);
  }

  CSODOTAGameHeroFavorites* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSODOTAGameHeroFavorites>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSODOTAGameHeroFavorites& from);
  void MergeFrom(const CSODOTAGameHeroFavorites& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSODOTAGameHeroFavorites* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1 [(.proto.dota.key_field) = true];
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2 [(.proto.dota.key_field) = true];
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSODOTAGameHeroFavorites)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAHeroFavoritesAdd final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHeroFavoritesAdd) */ {
 public:
  CMsgDOTAHeroFavoritesAdd();
  virtual ~CMsgDOTAHeroFavoritesAdd();

  CMsgDOTAHeroFavoritesAdd(const CMsgDOTAHeroFavoritesAdd& from);

  inline CMsgDOTAHeroFavoritesAdd& operator=(const CMsgDOTAHeroFavoritesAdd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAHeroFavoritesAdd(CMsgDOTAHeroFavoritesAdd&& from) noexcept
    : CMsgDOTAHeroFavoritesAdd() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAHeroFavoritesAdd& operator=(CMsgDOTAHeroFavoritesAdd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAHeroFavoritesAdd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAHeroFavoritesAdd* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHeroFavoritesAdd*>(
               &_CMsgDOTAHeroFavoritesAdd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(CMsgDOTAHeroFavoritesAdd* other);
  friend void swap(CMsgDOTAHeroFavoritesAdd& a, CMsgDOTAHeroFavoritesAdd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAHeroFavoritesAdd* New() const final {
    return CreateMaybeMessage<CMsgDOTAHeroFavoritesAdd>(nullptr);
  }

  CMsgDOTAHeroFavoritesAdd* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAHeroFavoritesAdd>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAHeroFavoritesAdd& from);
  void MergeFrom(const CMsgDOTAHeroFavoritesAdd& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAHeroFavoritesAdd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHeroFavoritesAdd)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAHeroFavoritesRemove final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHeroFavoritesRemove) */ {
 public:
  CMsgDOTAHeroFavoritesRemove();
  virtual ~CMsgDOTAHeroFavoritesRemove();

  CMsgDOTAHeroFavoritesRemove(const CMsgDOTAHeroFavoritesRemove& from);

  inline CMsgDOTAHeroFavoritesRemove& operator=(const CMsgDOTAHeroFavoritesRemove& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAHeroFavoritesRemove(CMsgDOTAHeroFavoritesRemove&& from) noexcept
    : CMsgDOTAHeroFavoritesRemove() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAHeroFavoritesRemove& operator=(CMsgDOTAHeroFavoritesRemove&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAHeroFavoritesRemove& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAHeroFavoritesRemove* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHeroFavoritesRemove*>(
               &_CMsgDOTAHeroFavoritesRemove_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(CMsgDOTAHeroFavoritesRemove* other);
  friend void swap(CMsgDOTAHeroFavoritesRemove& a, CMsgDOTAHeroFavoritesRemove& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAHeroFavoritesRemove* New() const final {
    return CreateMaybeMessage<CMsgDOTAHeroFavoritesRemove>(nullptr);
  }

  CMsgDOTAHeroFavoritesRemove* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAHeroFavoritesRemove>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAHeroFavoritesRemove& from);
  void MergeFrom(const CMsgDOTAHeroFavoritesRemove& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAHeroFavoritesRemove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHeroFavoritesRemove)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAFeaturedItems final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFeaturedItems) */ {
 public:
  CMsgDOTAFeaturedItems();
  virtual ~CMsgDOTAFeaturedItems();

  CMsgDOTAFeaturedItems(const CMsgDOTAFeaturedItems& from);

  inline CMsgDOTAFeaturedItems& operator=(const CMsgDOTAFeaturedItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAFeaturedItems(CMsgDOTAFeaturedItems&& from) noexcept
    : CMsgDOTAFeaturedItems() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAFeaturedItems& operator=(CMsgDOTAFeaturedItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAFeaturedItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAFeaturedItems* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFeaturedItems*>(
               &_CMsgDOTAFeaturedItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(CMsgDOTAFeaturedItems* other);
  friend void swap(CMsgDOTAFeaturedItems& a, CMsgDOTAFeaturedItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAFeaturedItems* New() const final {
    return CreateMaybeMessage<CMsgDOTAFeaturedItems>(nullptr);
  }

  CMsgDOTAFeaturedItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAFeaturedItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAFeaturedItems& from);
  void MergeFrom(const CMsgDOTAFeaturedItems& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAFeaturedItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 featured_item_id = 2;
  int featured_item_id_size() const;
  void clear_featured_item_id();
  static const int kFeaturedItemIdFieldNumber = 2;
  ::google::protobuf::uint64 featured_item_id(int index) const;
  void set_featured_item_id(int index, ::google::protobuf::uint64 value);
  void add_featured_item_id(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      featured_item_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_featured_item_id();

  // repeated bytes object_data = 3;
  int object_data_size() const;
  void clear_object_data();
  static const int kObjectDataFieldNumber = 3;
  const ::std::string& object_data(int index) const;
  ::std::string* mutable_object_data(int index);
  void set_object_data(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_object_data(int index, ::std::string&& value);
  #endif
  void set_object_data(int index, const char* value);
  void set_object_data(int index, const void* value, size_t size);
  ::std::string* add_object_data();
  void add_object_data(const ::std::string& value);
  #if LANG_CXX11
  void add_object_data(::std::string&& value);
  #endif
  void add_object_data(const char* value);
  void add_object_data(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& object_data() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_object_data();

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFeaturedItems)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > featured_item_id_;
  ::google::protobuf::RepeatedPtrField<::std::string> object_data_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchVotes_PlayerVote final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAMatchVotes.PlayerVote) */ {
 public:
  CMsgDOTAMatchVotes_PlayerVote();
  virtual ~CMsgDOTAMatchVotes_PlayerVote();

  CMsgDOTAMatchVotes_PlayerVote(const CMsgDOTAMatchVotes_PlayerVote& from);

  inline CMsgDOTAMatchVotes_PlayerVote& operator=(const CMsgDOTAMatchVotes_PlayerVote& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAMatchVotes_PlayerVote(CMsgDOTAMatchVotes_PlayerVote&& from) noexcept
    : CMsgDOTAMatchVotes_PlayerVote() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAMatchVotes_PlayerVote& operator=(CMsgDOTAMatchVotes_PlayerVote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAMatchVotes_PlayerVote& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAMatchVotes_PlayerVote* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAMatchVotes_PlayerVote*>(
               &_CMsgDOTAMatchVotes_PlayerVote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(CMsgDOTAMatchVotes_PlayerVote* other);
  friend void swap(CMsgDOTAMatchVotes_PlayerVote& a, CMsgDOTAMatchVotes_PlayerVote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAMatchVotes_PlayerVote* New() const final {
    return CreateMaybeMessage<CMsgDOTAMatchVotes_PlayerVote>(nullptr);
  }

  CMsgDOTAMatchVotes_PlayerVote* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAMatchVotes_PlayerVote>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAMatchVotes_PlayerVote& from);
  void MergeFrom(const CMsgDOTAMatchVotes_PlayerVote& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAMatchVotes_PlayerVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 vote = 2;
  bool has_vote() const;
  void clear_vote();
  static const int kVoteFieldNumber = 2;
  ::google::protobuf::uint32 vote() const;
  void set_vote(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAMatchVotes.PlayerVote)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 vote_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchVotes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAMatchVotes) */ {
 public:
  CMsgDOTAMatchVotes();
  virtual ~CMsgDOTAMatchVotes();

  CMsgDOTAMatchVotes(const CMsgDOTAMatchVotes& from);

  inline CMsgDOTAMatchVotes& operator=(const CMsgDOTAMatchVotes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAMatchVotes(CMsgDOTAMatchVotes&& from) noexcept
    : CMsgDOTAMatchVotes() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAMatchVotes& operator=(CMsgDOTAMatchVotes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAMatchVotes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAMatchVotes* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAMatchVotes*>(
               &_CMsgDOTAMatchVotes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(CMsgDOTAMatchVotes* other);
  friend void swap(CMsgDOTAMatchVotes& a, CMsgDOTAMatchVotes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAMatchVotes* New() const final {
    return CreateMaybeMessage<CMsgDOTAMatchVotes>(nullptr);
  }

  CMsgDOTAMatchVotes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAMatchVotes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAMatchVotes& from);
  void MergeFrom(const CMsgDOTAMatchVotes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAMatchVotes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAMatchVotes_PlayerVote PlayerVote;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAMatchVotes.PlayerVote votes = 2;
  int votes_size() const;
  void clear_votes();
  static const int kVotesFieldNumber = 2;
  ::proto::dota::CMsgDOTAMatchVotes_PlayerVote* mutable_votes(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatchVotes_PlayerVote >*
      mutable_votes();
  const ::proto::dota::CMsgDOTAMatchVotes_PlayerVote& votes(int index) const;
  ::proto::dota::CMsgDOTAMatchVotes_PlayerVote* add_votes();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatchVotes_PlayerVote >&
      votes() const;

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAMatchVotes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatchVotes_PlayerVote > votes_;
  ::google::protobuf::uint64 match_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgCastMatchVote final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgCastMatchVote) */ {
 public:
  CMsgCastMatchVote();
  virtual ~CMsgCastMatchVote();

  CMsgCastMatchVote(const CMsgCastMatchVote& from);

  inline CMsgCastMatchVote& operator=(const CMsgCastMatchVote& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgCastMatchVote(CMsgCastMatchVote&& from) noexcept
    : CMsgCastMatchVote() {
    *this = ::std::move(from);
  }

  inline CMsgCastMatchVote& operator=(CMsgCastMatchVote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgCastMatchVote& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgCastMatchVote* internal_default_instance() {
    return reinterpret_cast<const CMsgCastMatchVote*>(
               &_CMsgCastMatchVote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(CMsgCastMatchVote* other);
  friend void swap(CMsgCastMatchVote& a, CMsgCastMatchVote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgCastMatchVote* New() const final {
    return CreateMaybeMessage<CMsgCastMatchVote>(nullptr);
  }

  CMsgCastMatchVote* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgCastMatchVote>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgCastMatchVote& from);
  void MergeFrom(const CMsgCastMatchVote& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCastMatchVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional .proto.dota.DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
  bool has_vote() const;
  void clear_vote();
  static const int kVoteFieldNumber = 2;
  ::proto::dota::DOTAMatchVote vote() const;
  void set_vote(::proto::dota::DOTAMatchVote value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgCastMatchVote)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  int vote_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgRetrieveMatchVote final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRetrieveMatchVote) */ {
 public:
  CMsgRetrieveMatchVote();
  virtual ~CMsgRetrieveMatchVote();

  CMsgRetrieveMatchVote(const CMsgRetrieveMatchVote& from);

  inline CMsgRetrieveMatchVote& operator=(const CMsgRetrieveMatchVote& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgRetrieveMatchVote(CMsgRetrieveMatchVote&& from) noexcept
    : CMsgRetrieveMatchVote() {
    *this = ::std::move(from);
  }

  inline CMsgRetrieveMatchVote& operator=(CMsgRetrieveMatchVote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgRetrieveMatchVote& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgRetrieveMatchVote* internal_default_instance() {
    return reinterpret_cast<const CMsgRetrieveMatchVote*>(
               &_CMsgRetrieveMatchVote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(CMsgRetrieveMatchVote* other);
  friend void swap(CMsgRetrieveMatchVote& a, CMsgRetrieveMatchVote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgRetrieveMatchVote* New() const final {
    return CreateMaybeMessage<CMsgRetrieveMatchVote>(nullptr);
  }

  CMsgRetrieveMatchVote* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgRetrieveMatchVote>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgRetrieveMatchVote& from);
  void MergeFrom(const CMsgRetrieveMatchVote& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRetrieveMatchVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 incremental = 2;
  bool has_incremental() const;
  void clear_incremental();
  static const int kIncrementalFieldNumber = 2;
  ::google::protobuf::uint32 incremental() const;
  void set_incremental(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRetrieveMatchVote)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 incremental_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchVoteResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgMatchVoteResponse) */ {
 public:
  CMsgMatchVoteResponse();
  virtual ~CMsgMatchVoteResponse();

  CMsgMatchVoteResponse(const CMsgMatchVoteResponse& from);

  inline CMsgMatchVoteResponse& operator=(const CMsgMatchVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMatchVoteResponse(CMsgMatchVoteResponse&& from) noexcept
    : CMsgMatchVoteResponse() {
    *this = ::std::move(from);
  }

  inline CMsgMatchVoteResponse& operator=(CMsgMatchVoteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgMatchVoteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMatchVoteResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchVoteResponse*>(
               &_CMsgMatchVoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(CMsgMatchVoteResponse* other);
  friend void swap(CMsgMatchVoteResponse& a, CMsgMatchVoteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMatchVoteResponse* New() const final {
    return CreateMaybeMessage<CMsgMatchVoteResponse>(nullptr);
  }

  CMsgMatchVoteResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgMatchVoteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgMatchVoteResponse& from);
  void MergeFrom(const CMsgMatchVoteResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgMatchVoteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
  bool has_vote() const;
  void clear_vote();
  static const int kVoteFieldNumber = 2;
  ::proto::dota::DOTAMatchVote vote() const;
  void set_vote(::proto::dota::DOTAMatchVote value);

  // optional uint32 positive_votes = 3;
  bool has_positive_votes() const;
  void clear_positive_votes();
  static const int kPositiveVotesFieldNumber = 3;
  ::google::protobuf::uint32 positive_votes() const;
  void set_positive_votes(::google::protobuf::uint32 value);

  // optional uint32 negative_votes = 4;
  bool has_negative_votes() const;
  void clear_negative_votes();
  static const int kNegativeVotesFieldNumber = 4;
  ::google::protobuf::uint32 negative_votes() const;
  void set_negative_votes(::google::protobuf::uint32 value);

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgMatchVoteResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int vote_;
  ::google::protobuf::uint32 positive_votes_;
  ::google::protobuf::uint32 negative_votes_;
  ::google::protobuf::uint32 eresult_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFame_FeaturedPlayer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer) */ {
 public:
  CMsgDOTAHallOfFame_FeaturedPlayer();
  virtual ~CMsgDOTAHallOfFame_FeaturedPlayer();

  CMsgDOTAHallOfFame_FeaturedPlayer(const CMsgDOTAHallOfFame_FeaturedPlayer& from);

  inline CMsgDOTAHallOfFame_FeaturedPlayer& operator=(const CMsgDOTAHallOfFame_FeaturedPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAHallOfFame_FeaturedPlayer(CMsgDOTAHallOfFame_FeaturedPlayer&& from) noexcept
    : CMsgDOTAHallOfFame_FeaturedPlayer() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAHallOfFame_FeaturedPlayer& operator=(CMsgDOTAHallOfFame_FeaturedPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAHallOfFame_FeaturedPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAHallOfFame_FeaturedPlayer* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHallOfFame_FeaturedPlayer*>(
               &_CMsgDOTAHallOfFame_FeaturedPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(CMsgDOTAHallOfFame_FeaturedPlayer* other);
  friend void swap(CMsgDOTAHallOfFame_FeaturedPlayer& a, CMsgDOTAHallOfFame_FeaturedPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAHallOfFame_FeaturedPlayer* New() const final {
    return CreateMaybeMessage<CMsgDOTAHallOfFame_FeaturedPlayer>(nullptr);
  }

  CMsgDOTAHallOfFame_FeaturedPlayer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAHallOfFame_FeaturedPlayer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAHallOfFame_FeaturedPlayer& from);
  void MergeFrom(const CMsgDOTAHallOfFame_FeaturedPlayer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAHallOfFame_FeaturedPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional float average_scaled_metric = 3;
  bool has_average_scaled_metric() const;
  void clear_average_scaled_metric();
  static const int kAverageScaledMetricFieldNumber = 3;
  float average_scaled_metric() const;
  void set_average_scaled_metric(float value);

  // optional uint32 num_games = 4;
  bool has_num_games() const;
  void clear_num_games();
  static const int kNumGamesFieldNumber = 4;
  ::google::protobuf::uint32 num_games() const;
  void set_num_games(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  float average_scaled_metric_;
  ::google::protobuf::uint32 num_games_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFame_FeaturedFarmer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer) */ {
 public:
  CMsgDOTAHallOfFame_FeaturedFarmer();
  virtual ~CMsgDOTAHallOfFame_FeaturedFarmer();

  CMsgDOTAHallOfFame_FeaturedFarmer(const CMsgDOTAHallOfFame_FeaturedFarmer& from);

  inline CMsgDOTAHallOfFame_FeaturedFarmer& operator=(const CMsgDOTAHallOfFame_FeaturedFarmer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAHallOfFame_FeaturedFarmer(CMsgDOTAHallOfFame_FeaturedFarmer&& from) noexcept
    : CMsgDOTAHallOfFame_FeaturedFarmer() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAHallOfFame_FeaturedFarmer& operator=(CMsgDOTAHallOfFame_FeaturedFarmer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAHallOfFame_FeaturedFarmer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAHallOfFame_FeaturedFarmer* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHallOfFame_FeaturedFarmer*>(
               &_CMsgDOTAHallOfFame_FeaturedFarmer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(CMsgDOTAHallOfFame_FeaturedFarmer* other);
  friend void swap(CMsgDOTAHallOfFame_FeaturedFarmer& a, CMsgDOTAHallOfFame_FeaturedFarmer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAHallOfFame_FeaturedFarmer* New() const final {
    return CreateMaybeMessage<CMsgDOTAHallOfFame_FeaturedFarmer>(nullptr);
  }

  CMsgDOTAHallOfFame_FeaturedFarmer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAHallOfFame_FeaturedFarmer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAHallOfFame_FeaturedFarmer& from);
  void MergeFrom(const CMsgDOTAHallOfFame_FeaturedFarmer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAHallOfFame_FeaturedFarmer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint64 match_id = 4;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 4;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 gold_per_min = 3;
  bool has_gold_per_min() const;
  void clear_gold_per_min();
  static const int kGoldPerMinFieldNumber = 3;
  ::google::protobuf::uint32 gold_per_min() const;
  void set_gold_per_min(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 gold_per_min_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFame final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHallOfFame) */ {
 public:
  CMsgDOTAHallOfFame();
  virtual ~CMsgDOTAHallOfFame();

  CMsgDOTAHallOfFame(const CMsgDOTAHallOfFame& from);

  inline CMsgDOTAHallOfFame& operator=(const CMsgDOTAHallOfFame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAHallOfFame(CMsgDOTAHallOfFame&& from) noexcept
    : CMsgDOTAHallOfFame() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAHallOfFame& operator=(CMsgDOTAHallOfFame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAHallOfFame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAHallOfFame* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHallOfFame*>(
               &_CMsgDOTAHallOfFame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(CMsgDOTAHallOfFame* other);
  friend void swap(CMsgDOTAHallOfFame& a, CMsgDOTAHallOfFame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAHallOfFame* New() const final {
    return CreateMaybeMessage<CMsgDOTAHallOfFame>(nullptr);
  }

  CMsgDOTAHallOfFame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAHallOfFame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAHallOfFame& from);
  void MergeFrom(const CMsgDOTAHallOfFame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAHallOfFame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAHallOfFame_FeaturedPlayer FeaturedPlayer;
  typedef CMsgDOTAHallOfFame_FeaturedFarmer FeaturedFarmer;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer featured_players = 2;
  int featured_players_size() const;
  void clear_featured_players();
  static const int kFeaturedPlayersFieldNumber = 2;
  ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer* mutable_featured_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer >*
      mutable_featured_players();
  const ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer& featured_players(int index) const;
  ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer* add_featured_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer >&
      featured_players() const;

  // optional .proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer featured_farmer = 3;
  bool has_featured_farmer() const;
  void clear_featured_farmer();
  static const int kFeaturedFarmerFieldNumber = 3;
  const ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer& featured_farmer() const;
  ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* release_featured_farmer();
  ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* mutable_featured_farmer();
  void set_allocated_featured_farmer(::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* featured_farmer);

  // optional uint32 week = 1;
  bool has_week() const;
  void clear_week();
  static const int kWeekFieldNumber = 1;
  ::google::protobuf::uint32 week() const;
  void set_week(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHallOfFame)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer > featured_players_;
  ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* featured_farmer_;
  ::google::protobuf::uint32 week_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFameRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHallOfFameRequest) */ {
 public:
  CMsgDOTAHallOfFameRequest();
  virtual ~CMsgDOTAHallOfFameRequest();

  CMsgDOTAHallOfFameRequest(const CMsgDOTAHallOfFameRequest& from);

  inline CMsgDOTAHallOfFameRequest& operator=(const CMsgDOTAHallOfFameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAHallOfFameRequest(CMsgDOTAHallOfFameRequest&& from) noexcept
    : CMsgDOTAHallOfFameRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAHallOfFameRequest& operator=(CMsgDOTAHallOfFameRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAHallOfFameRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAHallOfFameRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHallOfFameRequest*>(
               &_CMsgDOTAHallOfFameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(CMsgDOTAHallOfFameRequest* other);
  friend void swap(CMsgDOTAHallOfFameRequest& a, CMsgDOTAHallOfFameRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAHallOfFameRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTAHallOfFameRequest>(nullptr);
  }

  CMsgDOTAHallOfFameRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAHallOfFameRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAHallOfFameRequest& from);
  void MergeFrom(const CMsgDOTAHallOfFameRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAHallOfFameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 week = 1;
  bool has_week() const;
  void clear_week();
  static const int kWeekFieldNumber = 1;
  ::google::protobuf::uint32 week() const;
  void set_week(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHallOfFameRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 week_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFameResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHallOfFameResponse) */ {
 public:
  CMsgDOTAHallOfFameResponse();
  virtual ~CMsgDOTAHallOfFameResponse();

  CMsgDOTAHallOfFameResponse(const CMsgDOTAHallOfFameResponse& from);

  inline CMsgDOTAHallOfFameResponse& operator=(const CMsgDOTAHallOfFameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAHallOfFameResponse(CMsgDOTAHallOfFameResponse&& from) noexcept
    : CMsgDOTAHallOfFameResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAHallOfFameResponse& operator=(CMsgDOTAHallOfFameResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAHallOfFameResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAHallOfFameResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHallOfFameResponse*>(
               &_CMsgDOTAHallOfFameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(CMsgDOTAHallOfFameResponse* other);
  friend void swap(CMsgDOTAHallOfFameResponse& a, CMsgDOTAHallOfFameResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAHallOfFameResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAHallOfFameResponse>(nullptr);
  }

  CMsgDOTAHallOfFameResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAHallOfFameResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAHallOfFameResponse& from);
  void MergeFrom(const CMsgDOTAHallOfFameResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAHallOfFameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAHallOfFame hall_of_fame = 1;
  bool has_hall_of_fame() const;
  void clear_hall_of_fame();
  static const int kHallOfFameFieldNumber = 1;
  const ::proto::dota::CMsgDOTAHallOfFame& hall_of_fame() const;
  ::proto::dota::CMsgDOTAHallOfFame* release_hall_of_fame();
  ::proto::dota::CMsgDOTAHallOfFame* mutable_hall_of_fame();
  void set_allocated_hall_of_fame(::proto::dota::CMsgDOTAHallOfFame* hall_of_fame);

  // optional uint32 eresult = 2 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 2;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHallOfFameResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTAHallOfFame* hall_of_fame_;
  ::google::protobuf::uint32 eresult_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAHalloweenHighScoreRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHalloweenHighScoreRequest) */ {
 public:
  CMsgDOTAHalloweenHighScoreRequest();
  virtual ~CMsgDOTAHalloweenHighScoreRequest();

  CMsgDOTAHalloweenHighScoreRequest(const CMsgDOTAHalloweenHighScoreRequest& from);

  inline CMsgDOTAHalloweenHighScoreRequest& operator=(const CMsgDOTAHalloweenHighScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAHalloweenHighScoreRequest(CMsgDOTAHalloweenHighScoreRequest&& from) noexcept
    : CMsgDOTAHalloweenHighScoreRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAHalloweenHighScoreRequest& operator=(CMsgDOTAHalloweenHighScoreRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAHalloweenHighScoreRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAHalloweenHighScoreRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHalloweenHighScoreRequest*>(
               &_CMsgDOTAHalloweenHighScoreRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(CMsgDOTAHalloweenHighScoreRequest* other);
  friend void swap(CMsgDOTAHalloweenHighScoreRequest& a, CMsgDOTAHalloweenHighScoreRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAHalloweenHighScoreRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTAHalloweenHighScoreRequest>(nullptr);
  }

  CMsgDOTAHalloweenHighScoreRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAHalloweenHighScoreRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAHalloweenHighScoreRequest& from);
  void MergeFrom(const CMsgDOTAHalloweenHighScoreRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAHalloweenHighScoreRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 round = 1 [default = -1];
  bool has_round() const;
  void clear_round();
  static const int kRoundFieldNumber = 1;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHalloweenHighScoreRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 round_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAHalloweenHighScoreResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHalloweenHighScoreResponse) */ {
 public:
  CMsgDOTAHalloweenHighScoreResponse();
  virtual ~CMsgDOTAHalloweenHighScoreResponse();

  CMsgDOTAHalloweenHighScoreResponse(const CMsgDOTAHalloweenHighScoreResponse& from);

  inline CMsgDOTAHalloweenHighScoreResponse& operator=(const CMsgDOTAHalloweenHighScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAHalloweenHighScoreResponse(CMsgDOTAHalloweenHighScoreResponse&& from) noexcept
    : CMsgDOTAHalloweenHighScoreResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAHalloweenHighScoreResponse& operator=(CMsgDOTAHalloweenHighScoreResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAHalloweenHighScoreResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAHalloweenHighScoreResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHalloweenHighScoreResponse*>(
               &_CMsgDOTAHalloweenHighScoreResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(CMsgDOTAHalloweenHighScoreResponse* other);
  friend void swap(CMsgDOTAHalloweenHighScoreResponse& a, CMsgDOTAHalloweenHighScoreResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAHalloweenHighScoreResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAHalloweenHighScoreResponse>(nullptr);
  }

  CMsgDOTAHalloweenHighScoreResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAHalloweenHighScoreResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAHalloweenHighScoreResponse& from);
  void MergeFrom(const CMsgDOTAHalloweenHighScoreResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAHalloweenHighScoreResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAMatch match = 2;
  bool has_match() const;
  void clear_match();
  static const int kMatchFieldNumber = 2;
  const ::proto::dota::CMsgDOTAMatch& match() const;
  ::proto::dota::CMsgDOTAMatch* release_match();
  ::proto::dota::CMsgDOTAMatch* mutable_match();
  void set_allocated_match(::proto::dota::CMsgDOTAMatch* match);

  // optional uint32 score = 1;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 eresult = 3;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 3;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // optional int32 round = 4;
  bool has_round() const;
  void clear_round();
  static const int kRoundFieldNumber = 4;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHalloweenHighScoreResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTAMatch* match_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::int32 round_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAStorePromoPagesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAStorePromoPagesRequest) */ {
 public:
  CMsgDOTAStorePromoPagesRequest();
  virtual ~CMsgDOTAStorePromoPagesRequest();

  CMsgDOTAStorePromoPagesRequest(const CMsgDOTAStorePromoPagesRequest& from);

  inline CMsgDOTAStorePromoPagesRequest& operator=(const CMsgDOTAStorePromoPagesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAStorePromoPagesRequest(CMsgDOTAStorePromoPagesRequest&& from) noexcept
    : CMsgDOTAStorePromoPagesRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAStorePromoPagesRequest& operator=(CMsgDOTAStorePromoPagesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAStorePromoPagesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAStorePromoPagesRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAStorePromoPagesRequest*>(
               &_CMsgDOTAStorePromoPagesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(CMsgDOTAStorePromoPagesRequest* other);
  friend void swap(CMsgDOTAStorePromoPagesRequest& a, CMsgDOTAStorePromoPagesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAStorePromoPagesRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTAStorePromoPagesRequest>(nullptr);
  }

  CMsgDOTAStorePromoPagesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAStorePromoPagesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAStorePromoPagesRequest& from);
  void MergeFrom(const CMsgDOTAStorePromoPagesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAStorePromoPagesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version_seen = 1;
  bool has_version_seen() const;
  void clear_version_seen();
  static const int kVersionSeenFieldNumber = 1;
  ::google::protobuf::uint32 version_seen() const;
  void set_version_seen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAStorePromoPagesRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 version_seen_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAStorePromoPagesResponse_PromoPage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage) */ {
 public:
  CMsgDOTAStorePromoPagesResponse_PromoPage();
  virtual ~CMsgDOTAStorePromoPagesResponse_PromoPage();

  CMsgDOTAStorePromoPagesResponse_PromoPage(const CMsgDOTAStorePromoPagesResponse_PromoPage& from);

  inline CMsgDOTAStorePromoPagesResponse_PromoPage& operator=(const CMsgDOTAStorePromoPagesResponse_PromoPage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAStorePromoPagesResponse_PromoPage(CMsgDOTAStorePromoPagesResponse_PromoPage&& from) noexcept
    : CMsgDOTAStorePromoPagesResponse_PromoPage() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAStorePromoPagesResponse_PromoPage& operator=(CMsgDOTAStorePromoPagesResponse_PromoPage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAStorePromoPagesResponse_PromoPage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAStorePromoPagesResponse_PromoPage* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAStorePromoPagesResponse_PromoPage*>(
               &_CMsgDOTAStorePromoPagesResponse_PromoPage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(CMsgDOTAStorePromoPagesResponse_PromoPage* other);
  friend void swap(CMsgDOTAStorePromoPagesResponse_PromoPage& a, CMsgDOTAStorePromoPagesResponse_PromoPage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAStorePromoPagesResponse_PromoPage* New() const final {
    return CreateMaybeMessage<CMsgDOTAStorePromoPagesResponse_PromoPage>(nullptr);
  }

  CMsgDOTAStorePromoPagesResponse_PromoPage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAStorePromoPagesResponse_PromoPage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAStorePromoPagesResponse_PromoPage& from);
  void MergeFrom(const CMsgDOTAStorePromoPagesResponse_PromoPage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAStorePromoPagesResponse_PromoPage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string url = 3;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional uint32 promo_id = 1;
  bool has_promo_id() const;
  void clear_promo_id();
  static const int kPromoIdFieldNumber = 1;
  ::google::protobuf::uint32 promo_id() const;
  void set_promo_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 promo_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAStorePromoPagesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAStorePromoPagesResponse) */ {
 public:
  CMsgDOTAStorePromoPagesResponse();
  virtual ~CMsgDOTAStorePromoPagesResponse();

  CMsgDOTAStorePromoPagesResponse(const CMsgDOTAStorePromoPagesResponse& from);

  inline CMsgDOTAStorePromoPagesResponse& operator=(const CMsgDOTAStorePromoPagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAStorePromoPagesResponse(CMsgDOTAStorePromoPagesResponse&& from) noexcept
    : CMsgDOTAStorePromoPagesResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAStorePromoPagesResponse& operator=(CMsgDOTAStorePromoPagesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAStorePromoPagesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAStorePromoPagesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAStorePromoPagesResponse*>(
               &_CMsgDOTAStorePromoPagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(CMsgDOTAStorePromoPagesResponse* other);
  friend void swap(CMsgDOTAStorePromoPagesResponse& a, CMsgDOTAStorePromoPagesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAStorePromoPagesResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAStorePromoPagesResponse>(nullptr);
  }

  CMsgDOTAStorePromoPagesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAStorePromoPagesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAStorePromoPagesResponse& from);
  void MergeFrom(const CMsgDOTAStorePromoPagesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAStorePromoPagesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAStorePromoPagesResponse_PromoPage PromoPage;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage pages = 1;
  int pages_size() const;
  void clear_pages();
  static const int kPagesFieldNumber = 1;
  ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage* mutable_pages(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage >*
      mutable_pages();
  const ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage& pages(int index) const;
  ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage* add_pages();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage >&
      pages() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAStorePromoPagesResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage > pages_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchmakingMatchGroupInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgMatchmakingMatchGroupInfo) */ {
 public:
  CMsgMatchmakingMatchGroupInfo();
  virtual ~CMsgMatchmakingMatchGroupInfo();

  CMsgMatchmakingMatchGroupInfo(const CMsgMatchmakingMatchGroupInfo& from);

  inline CMsgMatchmakingMatchGroupInfo& operator=(const CMsgMatchmakingMatchGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMatchmakingMatchGroupInfo(CMsgMatchmakingMatchGroupInfo&& from) noexcept
    : CMsgMatchmakingMatchGroupInfo() {
    *this = ::std::move(from);
  }

  inline CMsgMatchmakingMatchGroupInfo& operator=(CMsgMatchmakingMatchGroupInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgMatchmakingMatchGroupInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMatchmakingMatchGroupInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchmakingMatchGroupInfo*>(
               &_CMsgMatchmakingMatchGroupInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(CMsgMatchmakingMatchGroupInfo* other);
  friend void swap(CMsgMatchmakingMatchGroupInfo& a, CMsgMatchmakingMatchGroupInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMatchmakingMatchGroupInfo* New() const final {
    return CreateMaybeMessage<CMsgMatchmakingMatchGroupInfo>(nullptr);
  }

  CMsgMatchmakingMatchGroupInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgMatchmakingMatchGroupInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgMatchmakingMatchGroupInfo& from);
  void MergeFrom(const CMsgMatchmakingMatchGroupInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgMatchmakingMatchGroupInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 players_searching = 1;
  bool has_players_searching() const;
  void clear_players_searching();
  static const int kPlayersSearchingFieldNumber = 1;
  ::google::protobuf::uint32 players_searching() const;
  void set_players_searching(::google::protobuf::uint32 value);

  // optional sint32 auto_region_select_ping_penalty = 2;
  bool has_auto_region_select_ping_penalty() const;
  void clear_auto_region_select_ping_penalty();
  static const int kAutoRegionSelectPingPenaltyFieldNumber = 2;
  ::google::protobuf::int32 auto_region_select_ping_penalty() const;
  void set_auto_region_select_ping_penalty(::google::protobuf::int32 value);

  // optional .proto.dota.EMatchGroupServerStatus status = 3 [default = k_EMatchGroupServerStatus_OK];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::proto::dota::EMatchGroupServerStatus status() const;
  void set_status(::proto::dota::EMatchGroupServerStatus value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgMatchmakingMatchGroupInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 players_searching_;
  ::google::protobuf::int32 auto_region_select_ping_penalty_;
  int status_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchmakingStatsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAMatchmakingStatsRequest) */ {
 public:
  CMsgDOTAMatchmakingStatsRequest();
  virtual ~CMsgDOTAMatchmakingStatsRequest();

  CMsgDOTAMatchmakingStatsRequest(const CMsgDOTAMatchmakingStatsRequest& from);

  inline CMsgDOTAMatchmakingStatsRequest& operator=(const CMsgDOTAMatchmakingStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAMatchmakingStatsRequest(CMsgDOTAMatchmakingStatsRequest&& from) noexcept
    : CMsgDOTAMatchmakingStatsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAMatchmakingStatsRequest& operator=(CMsgDOTAMatchmakingStatsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAMatchmakingStatsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAMatchmakingStatsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAMatchmakingStatsRequest*>(
               &_CMsgDOTAMatchmakingStatsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(CMsgDOTAMatchmakingStatsRequest* other);
  friend void swap(CMsgDOTAMatchmakingStatsRequest& a, CMsgDOTAMatchmakingStatsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAMatchmakingStatsRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTAMatchmakingStatsRequest>(nullptr);
  }

  CMsgDOTAMatchmakingStatsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAMatchmakingStatsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAMatchmakingStatsRequest& from);
  void MergeFrom(const CMsgDOTAMatchmakingStatsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAMatchmakingStatsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAMatchmakingStatsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchmakingStatsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAMatchmakingStatsResponse) */ {
 public:
  CMsgDOTAMatchmakingStatsResponse();
  virtual ~CMsgDOTAMatchmakingStatsResponse();

  CMsgDOTAMatchmakingStatsResponse(const CMsgDOTAMatchmakingStatsResponse& from);

  inline CMsgDOTAMatchmakingStatsResponse& operator=(const CMsgDOTAMatchmakingStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAMatchmakingStatsResponse(CMsgDOTAMatchmakingStatsResponse&& from) noexcept
    : CMsgDOTAMatchmakingStatsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAMatchmakingStatsResponse& operator=(CMsgDOTAMatchmakingStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAMatchmakingStatsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAMatchmakingStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAMatchmakingStatsResponse*>(
               &_CMsgDOTAMatchmakingStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(CMsgDOTAMatchmakingStatsResponse* other);
  friend void swap(CMsgDOTAMatchmakingStatsResponse& a, CMsgDOTAMatchmakingStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAMatchmakingStatsResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAMatchmakingStatsResponse>(nullptr);
  }

  CMsgDOTAMatchmakingStatsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAMatchmakingStatsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAMatchmakingStatsResponse& from);
  void MergeFrom(const CMsgDOTAMatchmakingStatsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAMatchmakingStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 legacy_searching_players_by_group_source2 = 7;
  int legacy_searching_players_by_group_source2_size() const;
  void clear_legacy_searching_players_by_group_source2();
  static const int kLegacySearchingPlayersByGroupSource2FieldNumber = 7;
  ::google::protobuf::uint32 legacy_searching_players_by_group_source2(int index) const;
  void set_legacy_searching_players_by_group_source2(int index, ::google::protobuf::uint32 value);
  void add_legacy_searching_players_by_group_source2(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      legacy_searching_players_by_group_source2() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_legacy_searching_players_by_group_source2();

  // repeated .proto.dota.CMsgMatchmakingMatchGroupInfo match_groups = 8;
  int match_groups_size() const;
  void clear_match_groups();
  static const int kMatchGroupsFieldNumber = 8;
  ::proto::dota::CMsgMatchmakingMatchGroupInfo* mutable_match_groups(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMatchmakingMatchGroupInfo >*
      mutable_match_groups();
  const ::proto::dota::CMsgMatchmakingMatchGroupInfo& match_groups(int index) const;
  ::proto::dota::CMsgMatchmakingMatchGroupInfo* add_match_groups();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMatchmakingMatchGroupInfo >&
      match_groups() const;

  // optional uint32 matchgroups_version = 1;
  bool has_matchgroups_version() const;
  void clear_matchgroups_version();
  static const int kMatchgroupsVersionFieldNumber = 1;
  ::google::protobuf::uint32 matchgroups_version() const;
  void set_matchgroups_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAMatchmakingStatsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > legacy_searching_players_by_group_source2_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMatchmakingMatchGroupInfo > match_groups_;
  ::google::protobuf::uint32 matchgroups_version_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAUpdateMatchmakingStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAUpdateMatchmakingStats) */ {
 public:
  CMsgDOTAUpdateMatchmakingStats();
  virtual ~CMsgDOTAUpdateMatchmakingStats();

  CMsgDOTAUpdateMatchmakingStats(const CMsgDOTAUpdateMatchmakingStats& from);

  inline CMsgDOTAUpdateMatchmakingStats& operator=(const CMsgDOTAUpdateMatchmakingStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAUpdateMatchmakingStats(CMsgDOTAUpdateMatchmakingStats&& from) noexcept
    : CMsgDOTAUpdateMatchmakingStats() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAUpdateMatchmakingStats& operator=(CMsgDOTAUpdateMatchmakingStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAUpdateMatchmakingStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAUpdateMatchmakingStats* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAUpdateMatchmakingStats*>(
               &_CMsgDOTAUpdateMatchmakingStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(CMsgDOTAUpdateMatchmakingStats* other);
  friend void swap(CMsgDOTAUpdateMatchmakingStats& a, CMsgDOTAUpdateMatchmakingStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAUpdateMatchmakingStats* New() const final {
    return CreateMaybeMessage<CMsgDOTAUpdateMatchmakingStats>(nullptr);
  }

  CMsgDOTAUpdateMatchmakingStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAUpdateMatchmakingStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAUpdateMatchmakingStats& from);
  void MergeFrom(const CMsgDOTAUpdateMatchmakingStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAUpdateMatchmakingStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAMatchmakingStatsResponse stats = 1;
  bool has_stats() const;
  void clear_stats();
  static const int kStatsFieldNumber = 1;
  const ::proto::dota::CMsgDOTAMatchmakingStatsResponse& stats() const;
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* release_stats();
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* mutable_stats();
  void set_allocated_stats(::proto::dota::CMsgDOTAMatchmakingStatsResponse* stats);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAUpdateMatchmakingStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* stats_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAUpdateMatchManagementStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAUpdateMatchManagementStats) */ {
 public:
  CMsgDOTAUpdateMatchManagementStats();
  virtual ~CMsgDOTAUpdateMatchManagementStats();

  CMsgDOTAUpdateMatchManagementStats(const CMsgDOTAUpdateMatchManagementStats& from);

  inline CMsgDOTAUpdateMatchManagementStats& operator=(const CMsgDOTAUpdateMatchManagementStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAUpdateMatchManagementStats(CMsgDOTAUpdateMatchManagementStats&& from) noexcept
    : CMsgDOTAUpdateMatchManagementStats() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAUpdateMatchManagementStats& operator=(CMsgDOTAUpdateMatchManagementStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAUpdateMatchManagementStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAUpdateMatchManagementStats* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAUpdateMatchManagementStats*>(
               &_CMsgDOTAUpdateMatchManagementStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(CMsgDOTAUpdateMatchManagementStats* other);
  friend void swap(CMsgDOTAUpdateMatchManagementStats& a, CMsgDOTAUpdateMatchManagementStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAUpdateMatchManagementStats* New() const final {
    return CreateMaybeMessage<CMsgDOTAUpdateMatchManagementStats>(nullptr);
  }

  CMsgDOTAUpdateMatchManagementStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAUpdateMatchManagementStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAUpdateMatchManagementStats& from);
  void MergeFrom(const CMsgDOTAUpdateMatchManagementStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAUpdateMatchManagementStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAMatchmakingStatsResponse stats = 1;
  bool has_stats() const;
  void clear_stats();
  static const int kStatsFieldNumber = 1;
  const ::proto::dota::CMsgDOTAMatchmakingStatsResponse& stats() const;
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* release_stats();
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* mutable_stats();
  void set_allocated_stats(::proto::dota::CMsgDOTAMatchmakingStatsResponse* stats);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAUpdateMatchManagementStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* stats_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASetMatchHistoryAccess final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASetMatchHistoryAccess) */ {
 public:
  CMsgDOTASetMatchHistoryAccess();
  virtual ~CMsgDOTASetMatchHistoryAccess();

  CMsgDOTASetMatchHistoryAccess(const CMsgDOTASetMatchHistoryAccess& from);

  inline CMsgDOTASetMatchHistoryAccess& operator=(const CMsgDOTASetMatchHistoryAccess& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASetMatchHistoryAccess(CMsgDOTASetMatchHistoryAccess&& from) noexcept
    : CMsgDOTASetMatchHistoryAccess() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASetMatchHistoryAccess& operator=(CMsgDOTASetMatchHistoryAccess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASetMatchHistoryAccess& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASetMatchHistoryAccess* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASetMatchHistoryAccess*>(
               &_CMsgDOTASetMatchHistoryAccess_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(CMsgDOTASetMatchHistoryAccess* other);
  friend void swap(CMsgDOTASetMatchHistoryAccess& a, CMsgDOTASetMatchHistoryAccess& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASetMatchHistoryAccess* New() const final {
    return CreateMaybeMessage<CMsgDOTASetMatchHistoryAccess>(nullptr);
  }

  CMsgDOTASetMatchHistoryAccess* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASetMatchHistoryAccess>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASetMatchHistoryAccess& from);
  void MergeFrom(const CMsgDOTASetMatchHistoryAccess& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASetMatchHistoryAccess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool allow_3rd_party_match_history = 1;
  bool has_allow_3rd_party_match_history() const;
  void clear_allow_3rd_party_match_history();
  static const int kAllow3RdPartyMatchHistoryFieldNumber = 1;
  bool allow_3rd_party_match_history() const;
  void set_allow_3rd_party_match_history(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASetMatchHistoryAccess)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool allow_3rd_party_match_history_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASetMatchHistoryAccessResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASetMatchHistoryAccessResponse) */ {
 public:
  CMsgDOTASetMatchHistoryAccessResponse();
  virtual ~CMsgDOTASetMatchHistoryAccessResponse();

  CMsgDOTASetMatchHistoryAccessResponse(const CMsgDOTASetMatchHistoryAccessResponse& from);

  inline CMsgDOTASetMatchHistoryAccessResponse& operator=(const CMsgDOTASetMatchHistoryAccessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASetMatchHistoryAccessResponse(CMsgDOTASetMatchHistoryAccessResponse&& from) noexcept
    : CMsgDOTASetMatchHistoryAccessResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASetMatchHistoryAccessResponse& operator=(CMsgDOTASetMatchHistoryAccessResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASetMatchHistoryAccessResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASetMatchHistoryAccessResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASetMatchHistoryAccessResponse*>(
               &_CMsgDOTASetMatchHistoryAccessResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(CMsgDOTASetMatchHistoryAccessResponse* other);
  friend void swap(CMsgDOTASetMatchHistoryAccessResponse& a, CMsgDOTASetMatchHistoryAccessResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASetMatchHistoryAccessResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTASetMatchHistoryAccessResponse>(nullptr);
  }

  CMsgDOTASetMatchHistoryAccessResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASetMatchHistoryAccessResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASetMatchHistoryAccessResponse& from);
  void MergeFrom(const CMsgDOTASetMatchHistoryAccessResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASetMatchHistoryAccessResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASetMatchHistoryAccessResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTANotifyAccountFlagsChange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTANotifyAccountFlagsChange) */ {
 public:
  CMsgDOTANotifyAccountFlagsChange();
  virtual ~CMsgDOTANotifyAccountFlagsChange();

  CMsgDOTANotifyAccountFlagsChange(const CMsgDOTANotifyAccountFlagsChange& from);

  inline CMsgDOTANotifyAccountFlagsChange& operator=(const CMsgDOTANotifyAccountFlagsChange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTANotifyAccountFlagsChange(CMsgDOTANotifyAccountFlagsChange&& from) noexcept
    : CMsgDOTANotifyAccountFlagsChange() {
    *this = ::std::move(from);
  }

  inline CMsgDOTANotifyAccountFlagsChange& operator=(CMsgDOTANotifyAccountFlagsChange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTANotifyAccountFlagsChange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTANotifyAccountFlagsChange* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTANotifyAccountFlagsChange*>(
               &_CMsgDOTANotifyAccountFlagsChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(CMsgDOTANotifyAccountFlagsChange* other);
  friend void swap(CMsgDOTANotifyAccountFlagsChange& a, CMsgDOTANotifyAccountFlagsChange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTANotifyAccountFlagsChange* New() const final {
    return CreateMaybeMessage<CMsgDOTANotifyAccountFlagsChange>(nullptr);
  }

  CMsgDOTANotifyAccountFlagsChange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTANotifyAccountFlagsChange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTANotifyAccountFlagsChange& from);
  void MergeFrom(const CMsgDOTANotifyAccountFlagsChange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTANotifyAccountFlagsChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 accountid = 1;
  bool has_accountid() const;
  void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // optional uint32 account_flags = 2;
  bool has_account_flags() const;
  void clear_account_flags();
  static const int kAccountFlagsFieldNumber = 2;
  ::google::protobuf::uint32 account_flags() const;
  void set_account_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTANotifyAccountFlagsChange)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 account_flags_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASetProfilePrivacy final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASetProfilePrivacy) */ {
 public:
  CMsgDOTASetProfilePrivacy();
  virtual ~CMsgDOTASetProfilePrivacy();

  CMsgDOTASetProfilePrivacy(const CMsgDOTASetProfilePrivacy& from);

  inline CMsgDOTASetProfilePrivacy& operator=(const CMsgDOTASetProfilePrivacy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASetProfilePrivacy(CMsgDOTASetProfilePrivacy&& from) noexcept
    : CMsgDOTASetProfilePrivacy() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASetProfilePrivacy& operator=(CMsgDOTASetProfilePrivacy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASetProfilePrivacy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASetProfilePrivacy* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASetProfilePrivacy*>(
               &_CMsgDOTASetProfilePrivacy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(CMsgDOTASetProfilePrivacy* other);
  friend void swap(CMsgDOTASetProfilePrivacy& a, CMsgDOTASetProfilePrivacy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASetProfilePrivacy* New() const final {
    return CreateMaybeMessage<CMsgDOTASetProfilePrivacy>(nullptr);
  }

  CMsgDOTASetProfilePrivacy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASetProfilePrivacy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASetProfilePrivacy& from);
  void MergeFrom(const CMsgDOTASetProfilePrivacy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASetProfilePrivacy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool profile_private = 1;
  bool has_profile_private() const;
  void clear_profile_private();
  static const int kProfilePrivateFieldNumber = 1;
  bool profile_private() const;
  void set_profile_private(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASetProfilePrivacy)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool profile_private_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASetProfilePrivacyResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASetProfilePrivacyResponse) */ {
 public:
  CMsgDOTASetProfilePrivacyResponse();
  virtual ~CMsgDOTASetProfilePrivacyResponse();

  CMsgDOTASetProfilePrivacyResponse(const CMsgDOTASetProfilePrivacyResponse& from);

  inline CMsgDOTASetProfilePrivacyResponse& operator=(const CMsgDOTASetProfilePrivacyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASetProfilePrivacyResponse(CMsgDOTASetProfilePrivacyResponse&& from) noexcept
    : CMsgDOTASetProfilePrivacyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASetProfilePrivacyResponse& operator=(CMsgDOTASetProfilePrivacyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASetProfilePrivacyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASetProfilePrivacyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASetProfilePrivacyResponse*>(
               &_CMsgDOTASetProfilePrivacyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(CMsgDOTASetProfilePrivacyResponse* other);
  friend void swap(CMsgDOTASetProfilePrivacyResponse& a, CMsgDOTASetProfilePrivacyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASetProfilePrivacyResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTASetProfilePrivacyResponse>(nullptr);
  }

  CMsgDOTASetProfilePrivacyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASetProfilePrivacyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASetProfilePrivacyResponse& from);
  void MergeFrom(const CMsgDOTASetProfilePrivacyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASetProfilePrivacyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASetProfilePrivacyResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgUpgradeLeagueItem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgUpgradeLeagueItem) */ {
 public:
  CMsgUpgradeLeagueItem();
  virtual ~CMsgUpgradeLeagueItem();

  CMsgUpgradeLeagueItem(const CMsgUpgradeLeagueItem& from);

  inline CMsgUpgradeLeagueItem& operator=(const CMsgUpgradeLeagueItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgUpgradeLeagueItem(CMsgUpgradeLeagueItem&& from) noexcept
    : CMsgUpgradeLeagueItem() {
    *this = ::std::move(from);
  }

  inline CMsgUpgradeLeagueItem& operator=(CMsgUpgradeLeagueItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgUpgradeLeagueItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgUpgradeLeagueItem* internal_default_instance() {
    return reinterpret_cast<const CMsgUpgradeLeagueItem*>(
               &_CMsgUpgradeLeagueItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(CMsgUpgradeLeagueItem* other);
  friend void swap(CMsgUpgradeLeagueItem& a, CMsgUpgradeLeagueItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgUpgradeLeagueItem* New() const final {
    return CreateMaybeMessage<CMsgUpgradeLeagueItem>(nullptr);
  }

  CMsgUpgradeLeagueItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgUpgradeLeagueItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgUpgradeLeagueItem& from);
  void MergeFrom(const CMsgUpgradeLeagueItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgUpgradeLeagueItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 league_id = 2;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 2;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgUpgradeLeagueItem)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 league_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgUpgradeLeagueItemResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgUpgradeLeagueItemResponse) */ {
 public:
  CMsgUpgradeLeagueItemResponse();
  virtual ~CMsgUpgradeLeagueItemResponse();

  CMsgUpgradeLeagueItemResponse(const CMsgUpgradeLeagueItemResponse& from);

  inline CMsgUpgradeLeagueItemResponse& operator=(const CMsgUpgradeLeagueItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgUpgradeLeagueItemResponse(CMsgUpgradeLeagueItemResponse&& from) noexcept
    : CMsgUpgradeLeagueItemResponse() {
    *this = ::std::move(from);
  }

  inline CMsgUpgradeLeagueItemResponse& operator=(CMsgUpgradeLeagueItemResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgUpgradeLeagueItemResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgUpgradeLeagueItemResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgUpgradeLeagueItemResponse*>(
               &_CMsgUpgradeLeagueItemResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(CMsgUpgradeLeagueItemResponse* other);
  friend void swap(CMsgUpgradeLeagueItemResponse& a, CMsgUpgradeLeagueItemResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgUpgradeLeagueItemResponse* New() const final {
    return CreateMaybeMessage<CMsgUpgradeLeagueItemResponse>(nullptr);
  }

  CMsgUpgradeLeagueItemResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgUpgradeLeagueItemResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgUpgradeLeagueItemResponse& from);
  void MergeFrom(const CMsgUpgradeLeagueItemResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgUpgradeLeagueItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgUpgradeLeagueItemResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCWatchDownloadedReplay final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCWatchDownloadedReplay) */ {
 public:
  CMsgGCWatchDownloadedReplay();
  virtual ~CMsgGCWatchDownloadedReplay();

  CMsgGCWatchDownloadedReplay(const CMsgGCWatchDownloadedReplay& from);

  inline CMsgGCWatchDownloadedReplay& operator=(const CMsgGCWatchDownloadedReplay& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCWatchDownloadedReplay(CMsgGCWatchDownloadedReplay&& from) noexcept
    : CMsgGCWatchDownloadedReplay() {
    *this = ::std::move(from);
  }

  inline CMsgGCWatchDownloadedReplay& operator=(CMsgGCWatchDownloadedReplay&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCWatchDownloadedReplay& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCWatchDownloadedReplay* internal_default_instance() {
    return reinterpret_cast<const CMsgGCWatchDownloadedReplay*>(
               &_CMsgGCWatchDownloadedReplay_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(CMsgGCWatchDownloadedReplay* other);
  friend void swap(CMsgGCWatchDownloadedReplay& a, CMsgGCWatchDownloadedReplay& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCWatchDownloadedReplay* New() const final {
    return CreateMaybeMessage<CMsgGCWatchDownloadedReplay>(nullptr);
  }

  CMsgGCWatchDownloadedReplay* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCWatchDownloadedReplay>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCWatchDownloadedReplay& from);
  void MergeFrom(const CMsgGCWatchDownloadedReplay& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCWatchDownloadedReplay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional .proto.dota.DOTA_WatchReplayType watch_type = 2 [default = DOTA_WATCH_REPLAY_NORMAL];
  bool has_watch_type() const;
  void clear_watch_type();
  static const int kWatchTypeFieldNumber = 2;
  ::proto::dota::DOTA_WatchReplayType watch_type() const;
  void set_watch_type(::proto::dota::DOTA_WatchReplayType value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCWatchDownloadedReplay)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  int watch_type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgSetMapLocationState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSetMapLocationState) */ {
 public:
  CMsgSetMapLocationState();
  virtual ~CMsgSetMapLocationState();

  CMsgSetMapLocationState(const CMsgSetMapLocationState& from);

  inline CMsgSetMapLocationState& operator=(const CMsgSetMapLocationState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSetMapLocationState(CMsgSetMapLocationState&& from) noexcept
    : CMsgSetMapLocationState() {
    *this = ::std::move(from);
  }

  inline CMsgSetMapLocationState& operator=(CMsgSetMapLocationState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSetMapLocationState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSetMapLocationState* internal_default_instance() {
    return reinterpret_cast<const CMsgSetMapLocationState*>(
               &_CMsgSetMapLocationState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(CMsgSetMapLocationState* other);
  friend void swap(CMsgSetMapLocationState& a, CMsgSetMapLocationState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSetMapLocationState* New() const final {
    return CreateMaybeMessage<CMsgSetMapLocationState>(nullptr);
  }

  CMsgSetMapLocationState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSetMapLocationState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSetMapLocationState& from);
  void MergeFrom(const CMsgSetMapLocationState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSetMapLocationState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 location_id = 1;
  bool has_location_id() const;
  void clear_location_id();
  static const int kLocationIdFieldNumber = 1;
  ::google::protobuf::int32 location_id() const;
  void set_location_id(::google::protobuf::int32 value);

  // optional bool completed = 2;
  bool has_completed() const;
  void clear_completed();
  static const int kCompletedFieldNumber = 2;
  bool completed() const;
  void set_completed(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSetMapLocationState)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 location_id_;
  bool completed_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgSetMapLocationStateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSetMapLocationStateResponse) */ {
 public:
  CMsgSetMapLocationStateResponse();
  virtual ~CMsgSetMapLocationStateResponse();

  CMsgSetMapLocationStateResponse(const CMsgSetMapLocationStateResponse& from);

  inline CMsgSetMapLocationStateResponse& operator=(const CMsgSetMapLocationStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSetMapLocationStateResponse(CMsgSetMapLocationStateResponse&& from) noexcept
    : CMsgSetMapLocationStateResponse() {
    *this = ::std::move(from);
  }

  inline CMsgSetMapLocationStateResponse& operator=(CMsgSetMapLocationStateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSetMapLocationStateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSetMapLocationStateResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgSetMapLocationStateResponse*>(
               &_CMsgSetMapLocationStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(CMsgSetMapLocationStateResponse* other);
  friend void swap(CMsgSetMapLocationStateResponse& a, CMsgSetMapLocationStateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSetMapLocationStateResponse* New() const final {
    return CreateMaybeMessage<CMsgSetMapLocationStateResponse>(nullptr);
  }

  CMsgSetMapLocationStateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSetMapLocationStateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSetMapLocationStateResponse& from);
  void MergeFrom(const CMsgSetMapLocationStateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSetMapLocationStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSetMapLocationStateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgResetMapLocations final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgResetMapLocations) */ {
 public:
  CMsgResetMapLocations();
  virtual ~CMsgResetMapLocations();

  CMsgResetMapLocations(const CMsgResetMapLocations& from);

  inline CMsgResetMapLocations& operator=(const CMsgResetMapLocations& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgResetMapLocations(CMsgResetMapLocations&& from) noexcept
    : CMsgResetMapLocations() {
    *this = ::std::move(from);
  }

  inline CMsgResetMapLocations& operator=(CMsgResetMapLocations&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgResetMapLocations& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgResetMapLocations* internal_default_instance() {
    return reinterpret_cast<const CMsgResetMapLocations*>(
               &_CMsgResetMapLocations_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(CMsgResetMapLocations* other);
  friend void swap(CMsgResetMapLocations& a, CMsgResetMapLocations& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgResetMapLocations* New() const final {
    return CreateMaybeMessage<CMsgResetMapLocations>(nullptr);
  }

  CMsgResetMapLocations* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgResetMapLocations>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgResetMapLocations& from);
  void MergeFrom(const CMsgResetMapLocations& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgResetMapLocations* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgResetMapLocations)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgResetMapLocationsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgResetMapLocationsResponse) */ {
 public:
  CMsgResetMapLocationsResponse();
  virtual ~CMsgResetMapLocationsResponse();

  CMsgResetMapLocationsResponse(const CMsgResetMapLocationsResponse& from);

  inline CMsgResetMapLocationsResponse& operator=(const CMsgResetMapLocationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgResetMapLocationsResponse(CMsgResetMapLocationsResponse&& from) noexcept
    : CMsgResetMapLocationsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgResetMapLocationsResponse& operator=(CMsgResetMapLocationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgResetMapLocationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgResetMapLocationsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgResetMapLocationsResponse*>(
               &_CMsgResetMapLocationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(CMsgResetMapLocationsResponse* other);
  friend void swap(CMsgResetMapLocationsResponse& a, CMsgResetMapLocationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgResetMapLocationsResponse* New() const final {
    return CreateMaybeMessage<CMsgResetMapLocationsResponse>(nullptr);
  }

  CMsgResetMapLocationsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgResetMapLocationsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgResetMapLocationsResponse& from);
  void MergeFrom(const CMsgResetMapLocationsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgResetMapLocationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgResetMapLocationsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgRefreshPartnerAccountLink final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRefreshPartnerAccountLink) */ {
 public:
  CMsgRefreshPartnerAccountLink();
  virtual ~CMsgRefreshPartnerAccountLink();

  CMsgRefreshPartnerAccountLink(const CMsgRefreshPartnerAccountLink& from);

  inline CMsgRefreshPartnerAccountLink& operator=(const CMsgRefreshPartnerAccountLink& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgRefreshPartnerAccountLink(CMsgRefreshPartnerAccountLink&& from) noexcept
    : CMsgRefreshPartnerAccountLink() {
    *this = ::std::move(from);
  }

  inline CMsgRefreshPartnerAccountLink& operator=(CMsgRefreshPartnerAccountLink&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgRefreshPartnerAccountLink& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgRefreshPartnerAccountLink* internal_default_instance() {
    return reinterpret_cast<const CMsgRefreshPartnerAccountLink*>(
               &_CMsgRefreshPartnerAccountLink_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(CMsgRefreshPartnerAccountLink* other);
  friend void swap(CMsgRefreshPartnerAccountLink& a, CMsgRefreshPartnerAccountLink& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgRefreshPartnerAccountLink* New() const final {
    return CreateMaybeMessage<CMsgRefreshPartnerAccountLink>(nullptr);
  }

  CMsgRefreshPartnerAccountLink* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgRefreshPartnerAccountLink>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgRefreshPartnerAccountLink& from);
  void MergeFrom(const CMsgRefreshPartnerAccountLink& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRefreshPartnerAccountLink* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 partner_type = 1;
  bool has_partner_type() const;
  void clear_partner_type();
  static const int kPartnerTypeFieldNumber = 1;
  ::google::protobuf::int32 partner_type() const;
  void set_partner_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRefreshPartnerAccountLink)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 partner_type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientsRejoinChatChannels final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientsRejoinChatChannels) */ {
 public:
  CMsgClientsRejoinChatChannels();
  virtual ~CMsgClientsRejoinChatChannels();

  CMsgClientsRejoinChatChannels(const CMsgClientsRejoinChatChannels& from);

  inline CMsgClientsRejoinChatChannels& operator=(const CMsgClientsRejoinChatChannels& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientsRejoinChatChannels(CMsgClientsRejoinChatChannels&& from) noexcept
    : CMsgClientsRejoinChatChannels() {
    *this = ::std::move(from);
  }

  inline CMsgClientsRejoinChatChannels& operator=(CMsgClientsRejoinChatChannels&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientsRejoinChatChannels& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientsRejoinChatChannels* internal_default_instance() {
    return reinterpret_cast<const CMsgClientsRejoinChatChannels*>(
               &_CMsgClientsRejoinChatChannels_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(CMsgClientsRejoinChatChannels* other);
  friend void swap(CMsgClientsRejoinChatChannels& a, CMsgClientsRejoinChatChannels& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientsRejoinChatChannels* New() const final {
    return CreateMaybeMessage<CMsgClientsRejoinChatChannels>(nullptr);
  }

  CMsgClientsRejoinChatChannels* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientsRejoinChatChannels>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientsRejoinChatChannels& from);
  void MergeFrom(const CMsgClientsRejoinChatChannels& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientsRejoinChatChannels* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientsRejoinChatChannels)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASendFriendRecruits final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASendFriendRecruits) */ {
 public:
  CMsgDOTASendFriendRecruits();
  virtual ~CMsgDOTASendFriendRecruits();

  CMsgDOTASendFriendRecruits(const CMsgDOTASendFriendRecruits& from);

  inline CMsgDOTASendFriendRecruits& operator=(const CMsgDOTASendFriendRecruits& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASendFriendRecruits(CMsgDOTASendFriendRecruits&& from) noexcept
    : CMsgDOTASendFriendRecruits() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASendFriendRecruits& operator=(CMsgDOTASendFriendRecruits&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASendFriendRecruits& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASendFriendRecruits* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASendFriendRecruits*>(
               &_CMsgDOTASendFriendRecruits_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(CMsgDOTASendFriendRecruits* other);
  friend void swap(CMsgDOTASendFriendRecruits& a, CMsgDOTASendFriendRecruits& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASendFriendRecruits* New() const final {
    return CreateMaybeMessage<CMsgDOTASendFriendRecruits>(nullptr);
  }

  CMsgDOTASendFriendRecruits* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASendFriendRecruits>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASendFriendRecruits& from);
  void MergeFrom(const CMsgDOTASendFriendRecruits& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASendFriendRecruits* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 recruits = 1;
  int recruits_size() const;
  void clear_recruits();
  static const int kRecruitsFieldNumber = 1;
  ::google::protobuf::uint32 recruits(int index) const;
  void set_recruits(int index, ::google::protobuf::uint32 value);
  void add_recruits(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      recruits() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_recruits();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASendFriendRecruits)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > recruits_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFriendRecruitsRequest) */ {
 public:
  CMsgDOTAFriendRecruitsRequest();
  virtual ~CMsgDOTAFriendRecruitsRequest();

  CMsgDOTAFriendRecruitsRequest(const CMsgDOTAFriendRecruitsRequest& from);

  inline CMsgDOTAFriendRecruitsRequest& operator=(const CMsgDOTAFriendRecruitsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAFriendRecruitsRequest(CMsgDOTAFriendRecruitsRequest&& from) noexcept
    : CMsgDOTAFriendRecruitsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAFriendRecruitsRequest& operator=(CMsgDOTAFriendRecruitsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAFriendRecruitsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAFriendRecruitsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFriendRecruitsRequest*>(
               &_CMsgDOTAFriendRecruitsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(CMsgDOTAFriendRecruitsRequest* other);
  friend void swap(CMsgDOTAFriendRecruitsRequest& a, CMsgDOTAFriendRecruitsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAFriendRecruitsRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTAFriendRecruitsRequest>(nullptr);
  }

  CMsgDOTAFriendRecruitsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAFriendRecruitsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAFriendRecruitsRequest& from);
  void MergeFrom(const CMsgDOTAFriendRecruitsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAFriendRecruitsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFriendRecruitsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus) */ {
 public:
  CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus();
  virtual ~CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus();

  CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from);

  inline CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& operator=(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus(CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus&& from) noexcept
    : CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& operator=(CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus*>(
               &_CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* other);
  friend void swap(CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& a, CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* New() const final {
    return CreateMaybeMessage<CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus>(nullptr);
  }

  CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from);
  void MergeFrom(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 levels_earned = 3;
  bool has_levels_earned() const;
  void clear_levels_earned();
  static const int kLevelsEarnedFieldNumber = 3;
  ::google::protobuf::uint32 levels_earned() const;
  void set_levels_earned(::google::protobuf::uint32 value);

  // optional bool bonus = 4;
  bool has_bonus() const;
  void clear_bonus();
  static const int kBonusFieldNumber = 4;
  bool bonus() const;
  void set_bonus(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 levels_earned_;
  bool bonus_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFriendRecruitsResponse) */ {
 public:
  CMsgDOTAFriendRecruitsResponse();
  virtual ~CMsgDOTAFriendRecruitsResponse();

  CMsgDOTAFriendRecruitsResponse(const CMsgDOTAFriendRecruitsResponse& from);

  inline CMsgDOTAFriendRecruitsResponse& operator=(const CMsgDOTAFriendRecruitsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAFriendRecruitsResponse(CMsgDOTAFriendRecruitsResponse&& from) noexcept
    : CMsgDOTAFriendRecruitsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAFriendRecruitsResponse& operator=(CMsgDOTAFriendRecruitsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAFriendRecruitsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAFriendRecruitsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFriendRecruitsResponse*>(
               &_CMsgDOTAFriendRecruitsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(CMsgDOTAFriendRecruitsResponse* other);
  friend void swap(CMsgDOTAFriendRecruitsResponse& a, CMsgDOTAFriendRecruitsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAFriendRecruitsResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAFriendRecruitsResponse>(nullptr);
  }

  CMsgDOTAFriendRecruitsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAFriendRecruitsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAFriendRecruitsResponse& from);
  void MergeFrom(const CMsgDOTAFriendRecruitsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAFriendRecruitsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus FriendRecruitStatus;

  typedef CMsgDOTAFriendRecruitsResponse_EResult EResult;
  static const EResult SUCCESS =
    CMsgDOTAFriendRecruitsResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED =
    CMsgDOTAFriendRecruitsResponse_EResult_ERROR_UNSPECIFIED;
  static inline bool EResult_IsValid(int value) {
    return CMsgDOTAFriendRecruitsResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgDOTAFriendRecruitsResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgDOTAFriendRecruitsResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgDOTAFriendRecruitsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgDOTAFriendRecruitsResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgDOTAFriendRecruitsResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgDOTAFriendRecruitsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruits = 2;
  int recruits_size() const;
  void clear_recruits();
  static const int kRecruitsFieldNumber = 2;
  ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* mutable_recruits(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
      mutable_recruits();
  const ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& recruits(int index) const;
  ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* add_recruits();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
      recruits() const;

  // repeated .proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruiters = 3;
  int recruiters_size() const;
  void clear_recruiters();
  static const int kRecruitersFieldNumber = 3;
  ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* mutable_recruiters(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
      mutable_recruiters();
  const ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& recruiters(int index) const;
  ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* add_recruiters();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
      recruiters() const;

  // optional .proto.dota.CMsgDOTAFriendRecruitsResponse.EResult result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult result() const;
  void set_result(::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFriendRecruitsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus > recruits_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus > recruiters_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitInviteAcceptDecline final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFriendRecruitInviteAcceptDecline) */ {
 public:
  CMsgDOTAFriendRecruitInviteAcceptDecline();
  virtual ~CMsgDOTAFriendRecruitInviteAcceptDecline();

  CMsgDOTAFriendRecruitInviteAcceptDecline(const CMsgDOTAFriendRecruitInviteAcceptDecline& from);

  inline CMsgDOTAFriendRecruitInviteAcceptDecline& operator=(const CMsgDOTAFriendRecruitInviteAcceptDecline& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAFriendRecruitInviteAcceptDecline(CMsgDOTAFriendRecruitInviteAcceptDecline&& from) noexcept
    : CMsgDOTAFriendRecruitInviteAcceptDecline() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAFriendRecruitInviteAcceptDecline& operator=(CMsgDOTAFriendRecruitInviteAcceptDecline&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAFriendRecruitInviteAcceptDecline& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAFriendRecruitInviteAcceptDecline* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFriendRecruitInviteAcceptDecline*>(
               &_CMsgDOTAFriendRecruitInviteAcceptDecline_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(CMsgDOTAFriendRecruitInviteAcceptDecline* other);
  friend void swap(CMsgDOTAFriendRecruitInviteAcceptDecline& a, CMsgDOTAFriendRecruitInviteAcceptDecline& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAFriendRecruitInviteAcceptDecline* New() const final {
    return CreateMaybeMessage<CMsgDOTAFriendRecruitInviteAcceptDecline>(nullptr);
  }

  CMsgDOTAFriendRecruitInviteAcceptDecline* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAFriendRecruitInviteAcceptDecline>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAFriendRecruitInviteAcceptDecline& from);
  void MergeFrom(const CMsgDOTAFriendRecruitInviteAcceptDecline& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAFriendRecruitInviteAcceptDecline* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool accepted = 1;
  bool has_accepted() const;
  void clear_accepted();
  static const int kAcceptedFieldNumber = 1;
  bool accepted() const;
  void set_accepted(bool value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFriendRecruitInviteAcceptDecline)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool accepted_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgRequestLeaguePrizePool final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRequestLeaguePrizePool) */ {
 public:
  CMsgRequestLeaguePrizePool();
  virtual ~CMsgRequestLeaguePrizePool();

  CMsgRequestLeaguePrizePool(const CMsgRequestLeaguePrizePool& from);

  inline CMsgRequestLeaguePrizePool& operator=(const CMsgRequestLeaguePrizePool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgRequestLeaguePrizePool(CMsgRequestLeaguePrizePool&& from) noexcept
    : CMsgRequestLeaguePrizePool() {
    *this = ::std::move(from);
  }

  inline CMsgRequestLeaguePrizePool& operator=(CMsgRequestLeaguePrizePool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgRequestLeaguePrizePool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgRequestLeaguePrizePool* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestLeaguePrizePool*>(
               &_CMsgRequestLeaguePrizePool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(CMsgRequestLeaguePrizePool* other);
  friend void swap(CMsgRequestLeaguePrizePool& a, CMsgRequestLeaguePrizePool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgRequestLeaguePrizePool* New() const final {
    return CreateMaybeMessage<CMsgRequestLeaguePrizePool>(nullptr);
  }

  CMsgRequestLeaguePrizePool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgRequestLeaguePrizePool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgRequestLeaguePrizePool& from);
  void MergeFrom(const CMsgRequestLeaguePrizePool& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRequestLeaguePrizePool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRequestLeaguePrizePool)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgRequestLeaguePrizePoolResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRequestLeaguePrizePoolResponse) */ {
 public:
  CMsgRequestLeaguePrizePoolResponse();
  virtual ~CMsgRequestLeaguePrizePoolResponse();

  CMsgRequestLeaguePrizePoolResponse(const CMsgRequestLeaguePrizePoolResponse& from);

  inline CMsgRequestLeaguePrizePoolResponse& operator=(const CMsgRequestLeaguePrizePoolResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgRequestLeaguePrizePoolResponse(CMsgRequestLeaguePrizePoolResponse&& from) noexcept
    : CMsgRequestLeaguePrizePoolResponse() {
    *this = ::std::move(from);
  }

  inline CMsgRequestLeaguePrizePoolResponse& operator=(CMsgRequestLeaguePrizePoolResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgRequestLeaguePrizePoolResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgRequestLeaguePrizePoolResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestLeaguePrizePoolResponse*>(
               &_CMsgRequestLeaguePrizePoolResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(CMsgRequestLeaguePrizePoolResponse* other);
  friend void swap(CMsgRequestLeaguePrizePoolResponse& a, CMsgRequestLeaguePrizePoolResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgRequestLeaguePrizePoolResponse* New() const final {
    return CreateMaybeMessage<CMsgRequestLeaguePrizePoolResponse>(nullptr);
  }

  CMsgRequestLeaguePrizePoolResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgRequestLeaguePrizePoolResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgRequestLeaguePrizePoolResponse& from);
  void MergeFrom(const CMsgRequestLeaguePrizePoolResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRequestLeaguePrizePoolResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 prize_pool = 2;
  bool has_prize_pool() const;
  void clear_prize_pool();
  static const int kPrizePoolFieldNumber = 2;
  ::google::protobuf::uint32 prize_pool() const;
  void set_prize_pool(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRequestLeaguePrizePoolResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 prize_pool_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStandings final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroStandings) */ {
 public:
  CMsgGCGetHeroStandings();
  virtual ~CMsgGCGetHeroStandings();

  CMsgGCGetHeroStandings(const CMsgGCGetHeroStandings& from);

  inline CMsgGCGetHeroStandings& operator=(const CMsgGCGetHeroStandings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetHeroStandings(CMsgGCGetHeroStandings&& from) noexcept
    : CMsgGCGetHeroStandings() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetHeroStandings& operator=(CMsgGCGetHeroStandings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetHeroStandings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetHeroStandings* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroStandings*>(
               &_CMsgGCGetHeroStandings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(CMsgGCGetHeroStandings* other);
  friend void swap(CMsgGCGetHeroStandings& a, CMsgGCGetHeroStandings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroStandings* New() const final {
    return CreateMaybeMessage<CMsgGCGetHeroStandings>(nullptr);
  }

  CMsgGCGetHeroStandings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetHeroStandings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetHeroStandings& from);
  void MergeFrom(const CMsgGCGetHeroStandings& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetHeroStandings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroStandings)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStandingsResponse_Hero final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroStandingsResponse.Hero) */ {
 public:
  CMsgGCGetHeroStandingsResponse_Hero();
  virtual ~CMsgGCGetHeroStandingsResponse_Hero();

  CMsgGCGetHeroStandingsResponse_Hero(const CMsgGCGetHeroStandingsResponse_Hero& from);

  inline CMsgGCGetHeroStandingsResponse_Hero& operator=(const CMsgGCGetHeroStandingsResponse_Hero& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetHeroStandingsResponse_Hero(CMsgGCGetHeroStandingsResponse_Hero&& from) noexcept
    : CMsgGCGetHeroStandingsResponse_Hero() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetHeroStandingsResponse_Hero& operator=(CMsgGCGetHeroStandingsResponse_Hero&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetHeroStandingsResponse_Hero& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetHeroStandingsResponse_Hero* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroStandingsResponse_Hero*>(
               &_CMsgGCGetHeroStandingsResponse_Hero_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(CMsgGCGetHeroStandingsResponse_Hero* other);
  friend void swap(CMsgGCGetHeroStandingsResponse_Hero& a, CMsgGCGetHeroStandingsResponse_Hero& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroStandingsResponse_Hero* New() const final {
    return CreateMaybeMessage<CMsgGCGetHeroStandingsResponse_Hero>(nullptr);
  }

  CMsgGCGetHeroStandingsResponse_Hero* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetHeroStandingsResponse_Hero>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetHeroStandingsResponse_Hero& from);
  void MergeFrom(const CMsgGCGetHeroStandingsResponse_Hero& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetHeroStandingsResponse_Hero* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 wins = 2;
  bool has_wins() const;
  void clear_wins();
  static const int kWinsFieldNumber = 2;
  ::google::protobuf::uint32 wins() const;
  void set_wins(::google::protobuf::uint32 value);

  // optional uint32 losses = 3;
  bool has_losses() const;
  void clear_losses();
  static const int kLossesFieldNumber = 3;
  ::google::protobuf::uint32 losses() const;
  void set_losses(::google::protobuf::uint32 value);

  // optional uint32 win_streak = 4;
  bool has_win_streak() const;
  void clear_win_streak();
  static const int kWinStreakFieldNumber = 4;
  ::google::protobuf::uint32 win_streak() const;
  void set_win_streak(::google::protobuf::uint32 value);

  // optional uint32 best_win_streak = 5;
  bool has_best_win_streak() const;
  void clear_best_win_streak();
  static const int kBestWinStreakFieldNumber = 5;
  ::google::protobuf::uint32 best_win_streak() const;
  void set_best_win_streak(::google::protobuf::uint32 value);

  // optional float avg_kills = 6;
  bool has_avg_kills() const;
  void clear_avg_kills();
  static const int kAvgKillsFieldNumber = 6;
  float avg_kills() const;
  void set_avg_kills(float value);

  // optional float avg_deaths = 7;
  bool has_avg_deaths() const;
  void clear_avg_deaths();
  static const int kAvgDeathsFieldNumber = 7;
  float avg_deaths() const;
  void set_avg_deaths(float value);

  // optional float avg_assists = 8;
  bool has_avg_assists() const;
  void clear_avg_assists();
  static const int kAvgAssistsFieldNumber = 8;
  float avg_assists() const;
  void set_avg_assists(float value);

  // optional float avg_gpm = 9;
  bool has_avg_gpm() const;
  void clear_avg_gpm();
  static const int kAvgGpmFieldNumber = 9;
  float avg_gpm() const;
  void set_avg_gpm(float value);

  // optional float avg_xpm = 10;
  bool has_avg_xpm() const;
  void clear_avg_xpm();
  static const int kAvgXpmFieldNumber = 10;
  float avg_xpm() const;
  void set_avg_xpm(float value);

  // optional uint32 best_kills = 11;
  bool has_best_kills() const;
  void clear_best_kills();
  static const int kBestKillsFieldNumber = 11;
  ::google::protobuf::uint32 best_kills() const;
  void set_best_kills(::google::protobuf::uint32 value);

  // optional uint32 best_assists = 12;
  bool has_best_assists() const;
  void clear_best_assists();
  static const int kBestAssistsFieldNumber = 12;
  ::google::protobuf::uint32 best_assists() const;
  void set_best_assists(::google::protobuf::uint32 value);

  // optional uint32 best_gpm = 13;
  bool has_best_gpm() const;
  void clear_best_gpm();
  static const int kBestGpmFieldNumber = 13;
  ::google::protobuf::uint32 best_gpm() const;
  void set_best_gpm(::google::protobuf::uint32 value);

  // optional uint32 best_xpm = 14;
  bool has_best_xpm() const;
  void clear_best_xpm();
  static const int kBestXpmFieldNumber = 14;
  ::google::protobuf::uint32 best_xpm() const;
  void set_best_xpm(::google::protobuf::uint32 value);

  // optional float performance = 15;
  bool has_performance() const;
  void clear_performance();
  static const int kPerformanceFieldNumber = 15;
  float performance() const;
  void set_performance(float value);

  // optional uint32 wins_with_ally = 16;
  bool has_wins_with_ally() const;
  void clear_wins_with_ally();
  static const int kWinsWithAllyFieldNumber = 16;
  ::google::protobuf::uint32 wins_with_ally() const;
  void set_wins_with_ally(::google::protobuf::uint32 value);

  // optional uint32 losses_with_ally = 17;
  bool has_losses_with_ally() const;
  void clear_losses_with_ally();
  static const int kLossesWithAllyFieldNumber = 17;
  ::google::protobuf::uint32 losses_with_ally() const;
  void set_losses_with_ally(::google::protobuf::uint32 value);

  // optional uint32 wins_against_enemy = 18;
  bool has_wins_against_enemy() const;
  void clear_wins_against_enemy();
  static const int kWinsAgainstEnemyFieldNumber = 18;
  ::google::protobuf::uint32 wins_against_enemy() const;
  void set_wins_against_enemy(::google::protobuf::uint32 value);

  // optional uint32 losses_against_enemy = 19;
  bool has_losses_against_enemy() const;
  void clear_losses_against_enemy();
  static const int kLossesAgainstEnemyFieldNumber = 19;
  ::google::protobuf::uint32 losses_against_enemy() const;
  void set_losses_against_enemy(::google::protobuf::uint32 value);

  // optional uint32 networth_peak = 20;
  bool has_networth_peak() const;
  void clear_networth_peak();
  static const int kNetworthPeakFieldNumber = 20;
  ::google::protobuf::uint32 networth_peak() const;
  void set_networth_peak(::google::protobuf::uint32 value);

  // optional uint32 lasthit_peak = 21;
  bool has_lasthit_peak() const;
  void clear_lasthit_peak();
  static const int kLasthitPeakFieldNumber = 21;
  ::google::protobuf::uint32 lasthit_peak() const;
  void set_lasthit_peak(::google::protobuf::uint32 value);

  // optional uint32 deny_peak = 22;
  bool has_deny_peak() const;
  void clear_deny_peak();
  static const int kDenyPeakFieldNumber = 22;
  ::google::protobuf::uint32 deny_peak() const;
  void set_deny_peak(::google::protobuf::uint32 value);

  // optional uint32 damage_peak = 23;
  bool has_damage_peak() const;
  void clear_damage_peak();
  static const int kDamagePeakFieldNumber = 23;
  ::google::protobuf::uint32 damage_peak() const;
  void set_damage_peak(::google::protobuf::uint32 value);

  // optional uint32 longest_game_peak = 24;
  bool has_longest_game_peak() const;
  void clear_longest_game_peak();
  static const int kLongestGamePeakFieldNumber = 24;
  ::google::protobuf::uint32 longest_game_peak() const;
  void set_longest_game_peak(::google::protobuf::uint32 value);

  // optional uint32 healing_peak = 25;
  bool has_healing_peak() const;
  void clear_healing_peak();
  static const int kHealingPeakFieldNumber = 25;
  ::google::protobuf::uint32 healing_peak() const;
  void set_healing_peak(::google::protobuf::uint32 value);

  // optional float avg_lasthits = 26;
  bool has_avg_lasthits() const;
  void clear_avg_lasthits();
  static const int kAvgLasthitsFieldNumber = 26;
  float avg_lasthits() const;
  void set_avg_lasthits(float value);

  // optional float avg_denies = 27;
  bool has_avg_denies() const;
  void clear_avg_denies();
  static const int kAvgDeniesFieldNumber = 27;
  float avg_denies() const;
  void set_avg_denies(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroStandingsResponse.Hero)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 losses_;
  ::google::protobuf::uint32 win_streak_;
  ::google::protobuf::uint32 best_win_streak_;
  float avg_kills_;
  float avg_deaths_;
  float avg_assists_;
  float avg_gpm_;
  float avg_xpm_;
  ::google::protobuf::uint32 best_kills_;
  ::google::protobuf::uint32 best_assists_;
  ::google::protobuf::uint32 best_gpm_;
  ::google::protobuf::uint32 best_xpm_;
  float performance_;
  ::google::protobuf::uint32 wins_with_ally_;
  ::google::protobuf::uint32 losses_with_ally_;
  ::google::protobuf::uint32 wins_against_enemy_;
  ::google::protobuf::uint32 losses_against_enemy_;
  ::google::protobuf::uint32 networth_peak_;
  ::google::protobuf::uint32 lasthit_peak_;
  ::google::protobuf::uint32 deny_peak_;
  ::google::protobuf::uint32 damage_peak_;
  ::google::protobuf::uint32 longest_game_peak_;
  ::google::protobuf::uint32 healing_peak_;
  float avg_lasthits_;
  float avg_denies_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStandingsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroStandingsResponse) */ {
 public:
  CMsgGCGetHeroStandingsResponse();
  virtual ~CMsgGCGetHeroStandingsResponse();

  CMsgGCGetHeroStandingsResponse(const CMsgGCGetHeroStandingsResponse& from);

  inline CMsgGCGetHeroStandingsResponse& operator=(const CMsgGCGetHeroStandingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetHeroStandingsResponse(CMsgGCGetHeroStandingsResponse&& from) noexcept
    : CMsgGCGetHeroStandingsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetHeroStandingsResponse& operator=(CMsgGCGetHeroStandingsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetHeroStandingsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetHeroStandingsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroStandingsResponse*>(
               &_CMsgGCGetHeroStandingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(CMsgGCGetHeroStandingsResponse* other);
  friend void swap(CMsgGCGetHeroStandingsResponse& a, CMsgGCGetHeroStandingsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroStandingsResponse* New() const final {
    return CreateMaybeMessage<CMsgGCGetHeroStandingsResponse>(nullptr);
  }

  CMsgGCGetHeroStandingsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetHeroStandingsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetHeroStandingsResponse& from);
  void MergeFrom(const CMsgGCGetHeroStandingsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetHeroStandingsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCGetHeroStandingsResponse_Hero Hero;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCGetHeroStandingsResponse.Hero standings = 1;
  int standings_size() const;
  void clear_standings();
  static const int kStandingsFieldNumber = 1;
  ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero* mutable_standings(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero >*
      mutable_standings();
  const ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero& standings(int index) const;
  ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero* add_standings();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero >&
      standings() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroStandingsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero > standings_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroTimedStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroTimedStats) */ {
 public:
  CMsgGCGetHeroTimedStats();
  virtual ~CMsgGCGetHeroTimedStats();

  CMsgGCGetHeroTimedStats(const CMsgGCGetHeroTimedStats& from);

  inline CMsgGCGetHeroTimedStats& operator=(const CMsgGCGetHeroTimedStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetHeroTimedStats(CMsgGCGetHeroTimedStats&& from) noexcept
    : CMsgGCGetHeroTimedStats() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetHeroTimedStats& operator=(CMsgGCGetHeroTimedStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetHeroTimedStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetHeroTimedStats* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroTimedStats*>(
               &_CMsgGCGetHeroTimedStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(CMsgGCGetHeroTimedStats* other);
  friend void swap(CMsgGCGetHeroTimedStats& a, CMsgGCGetHeroTimedStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroTimedStats* New() const final {
    return CreateMaybeMessage<CMsgGCGetHeroTimedStats>(nullptr);
  }

  CMsgGCGetHeroTimedStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetHeroTimedStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetHeroTimedStats& from);
  void MergeFrom(const CMsgGCGetHeroTimedStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetHeroTimedStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroTimedStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMatchPlayerTimedStatAverages final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMatchPlayerTimedStatAverages) */ {
 public:
  CMatchPlayerTimedStatAverages();
  virtual ~CMatchPlayerTimedStatAverages();

  CMatchPlayerTimedStatAverages(const CMatchPlayerTimedStatAverages& from);

  inline CMatchPlayerTimedStatAverages& operator=(const CMatchPlayerTimedStatAverages& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMatchPlayerTimedStatAverages(CMatchPlayerTimedStatAverages&& from) noexcept
    : CMatchPlayerTimedStatAverages() {
    *this = ::std::move(from);
  }

  inline CMatchPlayerTimedStatAverages& operator=(CMatchPlayerTimedStatAverages&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMatchPlayerTimedStatAverages& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMatchPlayerTimedStatAverages* internal_default_instance() {
    return reinterpret_cast<const CMatchPlayerTimedStatAverages*>(
               &_CMatchPlayerTimedStatAverages_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  void Swap(CMatchPlayerTimedStatAverages* other);
  friend void swap(CMatchPlayerTimedStatAverages& a, CMatchPlayerTimedStatAverages& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMatchPlayerTimedStatAverages* New() const final {
    return CreateMaybeMessage<CMatchPlayerTimedStatAverages>(nullptr);
  }

  CMatchPlayerTimedStatAverages* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMatchPlayerTimedStatAverages>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMatchPlayerTimedStatAverages& from);
  void MergeFrom(const CMatchPlayerTimedStatAverages& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMatchPlayerTimedStatAverages* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float kills = 2;
  bool has_kills() const;
  void clear_kills();
  static const int kKillsFieldNumber = 2;
  float kills() const;
  void set_kills(float value);

  // optional float deaths = 3;
  bool has_deaths() const;
  void clear_deaths();
  static const int kDeathsFieldNumber = 3;
  float deaths() const;
  void set_deaths(float value);

  // optional float assists = 4;
  bool has_assists() const;
  void clear_assists();
  static const int kAssistsFieldNumber = 4;
  float assists() const;
  void set_assists(float value);

  // optional float net_worth = 5;
  bool has_net_worth() const;
  void clear_net_worth();
  static const int kNetWorthFieldNumber = 5;
  float net_worth() const;
  void set_net_worth(float value);

  // optional float last_hits = 6;
  bool has_last_hits() const;
  void clear_last_hits();
  static const int kLastHitsFieldNumber = 6;
  float last_hits() const;
  void set_last_hits(float value);

  // optional float denies = 7;
  bool has_denies() const;
  void clear_denies();
  static const int kDeniesFieldNumber = 7;
  float denies() const;
  void set_denies(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMatchPlayerTimedStatAverages)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float kills_;
  float deaths_;
  float assists_;
  float net_worth_;
  float last_hits_;
  float denies_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer) */ {
 public:
  CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer();
  virtual ~CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer();

  CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer(const CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer& from);

  inline CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer& operator=(const CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer(CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer&& from) noexcept
    : CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer& operator=(CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer*>(
               &_CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  void Swap(CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer* other);
  friend void swap(CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer& a, CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer* New() const final {
    return CreateMaybeMessage<CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer>(nullptr);
  }

  CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer& from);
  void MergeFrom(const CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMatchPlayerTimedStatAverages all_stats = 2;
  bool has_all_stats() const;
  void clear_all_stats();
  static const int kAllStatsFieldNumber = 2;
  const ::proto::dota::CMatchPlayerTimedStatAverages& all_stats() const;
  ::proto::dota::CMatchPlayerTimedStatAverages* release_all_stats();
  ::proto::dota::CMatchPlayerTimedStatAverages* mutable_all_stats();
  void set_allocated_all_stats(::proto::dota::CMatchPlayerTimedStatAverages* all_stats);

  // optional .proto.dota.CMatchPlayerTimedStatAverages winning_stats = 3;
  bool has_winning_stats() const;
  void clear_winning_stats();
  static const int kWinningStatsFieldNumber = 3;
  const ::proto::dota::CMatchPlayerTimedStatAverages& winning_stats() const;
  ::proto::dota::CMatchPlayerTimedStatAverages* release_winning_stats();
  ::proto::dota::CMatchPlayerTimedStatAverages* mutable_winning_stats();
  void set_allocated_winning_stats(::proto::dota::CMatchPlayerTimedStatAverages* winning_stats);

  // optional .proto.dota.CMatchPlayerTimedStatAverages losing_stats = 4;
  bool has_losing_stats() const;
  void clear_losing_stats();
  static const int kLosingStatsFieldNumber = 4;
  const ::proto::dota::CMatchPlayerTimedStatAverages& losing_stats() const;
  ::proto::dota::CMatchPlayerTimedStatAverages* release_losing_stats();
  ::proto::dota::CMatchPlayerTimedStatAverages* mutable_losing_stats();
  void set_allocated_losing_stats(::proto::dota::CMatchPlayerTimedStatAverages* losing_stats);

  // optional uint32 time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMatchPlayerTimedStatAverages* all_stats_;
  ::proto::dota::CMatchPlayerTimedStatAverages* winning_stats_;
  ::proto::dota::CMatchPlayerTimedStatAverages* losing_stats_;
  ::google::protobuf::uint32 time_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroTimedStatsResponse_RankChunkedStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroTimedStatsResponse.RankChunkedStats) */ {
 public:
  CMsgGCGetHeroTimedStatsResponse_RankChunkedStats();
  virtual ~CMsgGCGetHeroTimedStatsResponse_RankChunkedStats();

  CMsgGCGetHeroTimedStatsResponse_RankChunkedStats(const CMsgGCGetHeroTimedStatsResponse_RankChunkedStats& from);

  inline CMsgGCGetHeroTimedStatsResponse_RankChunkedStats& operator=(const CMsgGCGetHeroTimedStatsResponse_RankChunkedStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetHeroTimedStatsResponse_RankChunkedStats(CMsgGCGetHeroTimedStatsResponse_RankChunkedStats&& from) noexcept
    : CMsgGCGetHeroTimedStatsResponse_RankChunkedStats() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetHeroTimedStatsResponse_RankChunkedStats& operator=(CMsgGCGetHeroTimedStatsResponse_RankChunkedStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetHeroTimedStatsResponse_RankChunkedStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetHeroTimedStatsResponse_RankChunkedStats* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroTimedStatsResponse_RankChunkedStats*>(
               &_CMsgGCGetHeroTimedStatsResponse_RankChunkedStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  void Swap(CMsgGCGetHeroTimedStatsResponse_RankChunkedStats* other);
  friend void swap(CMsgGCGetHeroTimedStatsResponse_RankChunkedStats& a, CMsgGCGetHeroTimedStatsResponse_RankChunkedStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroTimedStatsResponse_RankChunkedStats* New() const final {
    return CreateMaybeMessage<CMsgGCGetHeroTimedStatsResponse_RankChunkedStats>(nullptr);
  }

  CMsgGCGetHeroTimedStatsResponse_RankChunkedStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetHeroTimedStatsResponse_RankChunkedStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetHeroTimedStatsResponse_RankChunkedStats& from);
  void MergeFrom(const CMsgGCGetHeroTimedStatsResponse_RankChunkedStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetHeroTimedStatsResponse_RankChunkedStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer timed_stats = 2;
  int timed_stats_size() const;
  void clear_timed_stats();
  static const int kTimedStatsFieldNumber = 2;
  ::proto::dota::CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer* mutable_timed_stats(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer >*
      mutable_timed_stats();
  const ::proto::dota::CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer& timed_stats(int index) const;
  ::proto::dota::CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer* add_timed_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer >&
      timed_stats() const;

  // optional uint32 rank_chunk = 1;
  bool has_rank_chunk() const;
  void clear_rank_chunk();
  static const int kRankChunkFieldNumber = 1;
  ::google::protobuf::uint32 rank_chunk() const;
  void set_rank_chunk(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroTimedStatsResponse.RankChunkedStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer > timed_stats_;
  ::google::protobuf::uint32 rank_chunk_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroTimedStatsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroTimedStatsResponse) */ {
 public:
  CMsgGCGetHeroTimedStatsResponse();
  virtual ~CMsgGCGetHeroTimedStatsResponse();

  CMsgGCGetHeroTimedStatsResponse(const CMsgGCGetHeroTimedStatsResponse& from);

  inline CMsgGCGetHeroTimedStatsResponse& operator=(const CMsgGCGetHeroTimedStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetHeroTimedStatsResponse(CMsgGCGetHeroTimedStatsResponse&& from) noexcept
    : CMsgGCGetHeroTimedStatsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetHeroTimedStatsResponse& operator=(CMsgGCGetHeroTimedStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetHeroTimedStatsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetHeroTimedStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroTimedStatsResponse*>(
               &_CMsgGCGetHeroTimedStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  void Swap(CMsgGCGetHeroTimedStatsResponse* other);
  friend void swap(CMsgGCGetHeroTimedStatsResponse& a, CMsgGCGetHeroTimedStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroTimedStatsResponse* New() const final {
    return CreateMaybeMessage<CMsgGCGetHeroTimedStatsResponse>(nullptr);
  }

  CMsgGCGetHeroTimedStatsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetHeroTimedStatsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetHeroTimedStatsResponse& from);
  void MergeFrom(const CMsgGCGetHeroTimedStatsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetHeroTimedStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer TimedStatsContainer;
  typedef CMsgGCGetHeroTimedStatsResponse_RankChunkedStats RankChunkedStats;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCGetHeroTimedStatsResponse.RankChunkedStats rank_chunked_stats = 2;
  int rank_chunked_stats_size() const;
  void clear_rank_chunked_stats();
  static const int kRankChunkedStatsFieldNumber = 2;
  ::proto::dota::CMsgGCGetHeroTimedStatsResponse_RankChunkedStats* mutable_rank_chunked_stats(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroTimedStatsResponse_RankChunkedStats >*
      mutable_rank_chunked_stats();
  const ::proto::dota::CMsgGCGetHeroTimedStatsResponse_RankChunkedStats& rank_chunked_stats(int index) const;
  ::proto::dota::CMsgGCGetHeroTimedStatsResponse_RankChunkedStats* add_rank_chunked_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroTimedStatsResponse_RankChunkedStats >&
      rank_chunked_stats() const;

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroTimedStatsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroTimedStatsResponse_RankChunkedStats > rank_chunked_stats_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReservationsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReservationsRequest) */ {
 public:
  CMsgGCItemEditorReservationsRequest();
  virtual ~CMsgGCItemEditorReservationsRequest();

  CMsgGCItemEditorReservationsRequest(const CMsgGCItemEditorReservationsRequest& from);

  inline CMsgGCItemEditorReservationsRequest& operator=(const CMsgGCItemEditorReservationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCItemEditorReservationsRequest(CMsgGCItemEditorReservationsRequest&& from) noexcept
    : CMsgGCItemEditorReservationsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCItemEditorReservationsRequest& operator=(CMsgGCItemEditorReservationsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCItemEditorReservationsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCItemEditorReservationsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReservationsRequest*>(
               &_CMsgGCItemEditorReservationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  void Swap(CMsgGCItemEditorReservationsRequest* other);
  friend void swap(CMsgGCItemEditorReservationsRequest& a, CMsgGCItemEditorReservationsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReservationsRequest* New() const final {
    return CreateMaybeMessage<CMsgGCItemEditorReservationsRequest>(nullptr);
  }

  CMsgGCItemEditorReservationsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCItemEditorReservationsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCItemEditorReservationsRequest& from);
  void MergeFrom(const CMsgGCItemEditorReservationsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCItemEditorReservationsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReservationsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReservation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReservation) */ {
 public:
  CMsgGCItemEditorReservation();
  virtual ~CMsgGCItemEditorReservation();

  CMsgGCItemEditorReservation(const CMsgGCItemEditorReservation& from);

  inline CMsgGCItemEditorReservation& operator=(const CMsgGCItemEditorReservation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCItemEditorReservation(CMsgGCItemEditorReservation&& from) noexcept
    : CMsgGCItemEditorReservation() {
    *this = ::std::move(from);
  }

  inline CMsgGCItemEditorReservation& operator=(CMsgGCItemEditorReservation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCItemEditorReservation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCItemEditorReservation* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReservation*>(
               &_CMsgGCItemEditorReservation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  void Swap(CMsgGCItemEditorReservation* other);
  friend void swap(CMsgGCItemEditorReservation& a, CMsgGCItemEditorReservation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReservation* New() const final {
    return CreateMaybeMessage<CMsgGCItemEditorReservation>(nullptr);
  }

  CMsgGCItemEditorReservation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCItemEditorReservation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCItemEditorReservation& from);
  void MergeFrom(const CMsgGCItemEditorReservation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCItemEditorReservation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReservation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 def_index_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReservationsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReservationsResponse) */ {
 public:
  CMsgGCItemEditorReservationsResponse();
  virtual ~CMsgGCItemEditorReservationsResponse();

  CMsgGCItemEditorReservationsResponse(const CMsgGCItemEditorReservationsResponse& from);

  inline CMsgGCItemEditorReservationsResponse& operator=(const CMsgGCItemEditorReservationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCItemEditorReservationsResponse(CMsgGCItemEditorReservationsResponse&& from) noexcept
    : CMsgGCItemEditorReservationsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCItemEditorReservationsResponse& operator=(CMsgGCItemEditorReservationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCItemEditorReservationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCItemEditorReservationsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReservationsResponse*>(
               &_CMsgGCItemEditorReservationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  void Swap(CMsgGCItemEditorReservationsResponse* other);
  friend void swap(CMsgGCItemEditorReservationsResponse& a, CMsgGCItemEditorReservationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReservationsResponse* New() const final {
    return CreateMaybeMessage<CMsgGCItemEditorReservationsResponse>(nullptr);
  }

  CMsgGCItemEditorReservationsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCItemEditorReservationsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCItemEditorReservationsResponse& from);
  void MergeFrom(const CMsgGCItemEditorReservationsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCItemEditorReservationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCItemEditorReservation reservations = 1;
  int reservations_size() const;
  void clear_reservations();
  static const int kReservationsFieldNumber = 1;
  ::proto::dota::CMsgGCItemEditorReservation* mutable_reservations(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCItemEditorReservation >*
      mutable_reservations();
  const ::proto::dota::CMsgGCItemEditorReservation& reservations(int index) const;
  ::proto::dota::CMsgGCItemEditorReservation* add_reservations();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCItemEditorReservation >&
      reservations() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReservationsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCItemEditorReservation > reservations_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReserveItemDef final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReserveItemDef) */ {
 public:
  CMsgGCItemEditorReserveItemDef();
  virtual ~CMsgGCItemEditorReserveItemDef();

  CMsgGCItemEditorReserveItemDef(const CMsgGCItemEditorReserveItemDef& from);

  inline CMsgGCItemEditorReserveItemDef& operator=(const CMsgGCItemEditorReserveItemDef& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCItemEditorReserveItemDef(CMsgGCItemEditorReserveItemDef&& from) noexcept
    : CMsgGCItemEditorReserveItemDef() {
    *this = ::std::move(from);
  }

  inline CMsgGCItemEditorReserveItemDef& operator=(CMsgGCItemEditorReserveItemDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCItemEditorReserveItemDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCItemEditorReserveItemDef* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReserveItemDef*>(
               &_CMsgGCItemEditorReserveItemDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  void Swap(CMsgGCItemEditorReserveItemDef* other);
  friend void swap(CMsgGCItemEditorReserveItemDef& a, CMsgGCItemEditorReserveItemDef& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReserveItemDef* New() const final {
    return CreateMaybeMessage<CMsgGCItemEditorReserveItemDef>(nullptr);
  }

  CMsgGCItemEditorReserveItemDef* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCItemEditorReserveItemDef>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCItemEditorReserveItemDef& from);
  void MergeFrom(const CMsgGCItemEditorReserveItemDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCItemEditorReserveItemDef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string username = 2;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReserveItemDef)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 def_index_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReserveItemDefResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReserveItemDefResponse) */ {
 public:
  CMsgGCItemEditorReserveItemDefResponse();
  virtual ~CMsgGCItemEditorReserveItemDefResponse();

  CMsgGCItemEditorReserveItemDefResponse(const CMsgGCItemEditorReserveItemDefResponse& from);

  inline CMsgGCItemEditorReserveItemDefResponse& operator=(const CMsgGCItemEditorReserveItemDefResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCItemEditorReserveItemDefResponse(CMsgGCItemEditorReserveItemDefResponse&& from) noexcept
    : CMsgGCItemEditorReserveItemDefResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCItemEditorReserveItemDefResponse& operator=(CMsgGCItemEditorReserveItemDefResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCItemEditorReserveItemDefResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCItemEditorReserveItemDefResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReserveItemDefResponse*>(
               &_CMsgGCItemEditorReserveItemDefResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  void Swap(CMsgGCItemEditorReserveItemDefResponse* other);
  friend void swap(CMsgGCItemEditorReserveItemDefResponse& a, CMsgGCItemEditorReserveItemDefResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReserveItemDefResponse* New() const final {
    return CreateMaybeMessage<CMsgGCItemEditorReserveItemDefResponse>(nullptr);
  }

  CMsgGCItemEditorReserveItemDefResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCItemEditorReserveItemDefResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCItemEditorReserveItemDefResponse& from);
  void MergeFrom(const CMsgGCItemEditorReserveItemDefResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCItemEditorReserveItemDefResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string username = 2;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // optional uint32 result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReserveItemDefResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReleaseReservation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReleaseReservation) */ {
 public:
  CMsgGCItemEditorReleaseReservation();
  virtual ~CMsgGCItemEditorReleaseReservation();

  CMsgGCItemEditorReleaseReservation(const CMsgGCItemEditorReleaseReservation& from);

  inline CMsgGCItemEditorReleaseReservation& operator=(const CMsgGCItemEditorReleaseReservation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCItemEditorReleaseReservation(CMsgGCItemEditorReleaseReservation&& from) noexcept
    : CMsgGCItemEditorReleaseReservation() {
    *this = ::std::move(from);
  }

  inline CMsgGCItemEditorReleaseReservation& operator=(CMsgGCItemEditorReleaseReservation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCItemEditorReleaseReservation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCItemEditorReleaseReservation* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReleaseReservation*>(
               &_CMsgGCItemEditorReleaseReservation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  void Swap(CMsgGCItemEditorReleaseReservation* other);
  friend void swap(CMsgGCItemEditorReleaseReservation& a, CMsgGCItemEditorReleaseReservation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReleaseReservation* New() const final {
    return CreateMaybeMessage<CMsgGCItemEditorReleaseReservation>(nullptr);
  }

  CMsgGCItemEditorReleaseReservation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCItemEditorReleaseReservation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCItemEditorReleaseReservation& from);
  void MergeFrom(const CMsgGCItemEditorReleaseReservation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCItemEditorReleaseReservation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string username = 2;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReleaseReservation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 def_index_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReleaseReservationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReleaseReservationResponse) */ {
 public:
  CMsgGCItemEditorReleaseReservationResponse();
  virtual ~CMsgGCItemEditorReleaseReservationResponse();

  CMsgGCItemEditorReleaseReservationResponse(const CMsgGCItemEditorReleaseReservationResponse& from);

  inline CMsgGCItemEditorReleaseReservationResponse& operator=(const CMsgGCItemEditorReleaseReservationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCItemEditorReleaseReservationResponse(CMsgGCItemEditorReleaseReservationResponse&& from) noexcept
    : CMsgGCItemEditorReleaseReservationResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCItemEditorReleaseReservationResponse& operator=(CMsgGCItemEditorReleaseReservationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCItemEditorReleaseReservationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCItemEditorReleaseReservationResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReleaseReservationResponse*>(
               &_CMsgGCItemEditorReleaseReservationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  void Swap(CMsgGCItemEditorReleaseReservationResponse* other);
  friend void swap(CMsgGCItemEditorReleaseReservationResponse& a, CMsgGCItemEditorReleaseReservationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReleaseReservationResponse* New() const final {
    return CreateMaybeMessage<CMsgGCItemEditorReleaseReservationResponse>(nullptr);
  }

  CMsgGCItemEditorReleaseReservationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCItemEditorReleaseReservationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCItemEditorReleaseReservationResponse& from);
  void MergeFrom(const CMsgGCItemEditorReleaseReservationResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCItemEditorReleaseReservationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // optional bool released = 2;
  bool has_released() const;
  void clear_released();
  static const int kReleasedFieldNumber = 2;
  bool released() const;
  void set_released(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReleaseReservationResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 def_index_;
  bool released_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARewardTutorialPrizes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARewardTutorialPrizes) */ {
 public:
  CMsgDOTARewardTutorialPrizes();
  virtual ~CMsgDOTARewardTutorialPrizes();

  CMsgDOTARewardTutorialPrizes(const CMsgDOTARewardTutorialPrizes& from);

  inline CMsgDOTARewardTutorialPrizes& operator=(const CMsgDOTARewardTutorialPrizes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARewardTutorialPrizes(CMsgDOTARewardTutorialPrizes&& from) noexcept
    : CMsgDOTARewardTutorialPrizes() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARewardTutorialPrizes& operator=(CMsgDOTARewardTutorialPrizes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARewardTutorialPrizes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARewardTutorialPrizes* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARewardTutorialPrizes*>(
               &_CMsgDOTARewardTutorialPrizes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  void Swap(CMsgDOTARewardTutorialPrizes* other);
  friend void swap(CMsgDOTARewardTutorialPrizes& a, CMsgDOTARewardTutorialPrizes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARewardTutorialPrizes* New() const final {
    return CreateMaybeMessage<CMsgDOTARewardTutorialPrizes>(nullptr);
  }

  CMsgDOTARewardTutorialPrizes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARewardTutorialPrizes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARewardTutorialPrizes& from);
  void MergeFrom(const CMsgDOTARewardTutorialPrizes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARewardTutorialPrizes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 location_id = 1;
  bool has_location_id() const;
  void clear_location_id();
  static const int kLocationIdFieldNumber = 1;
  ::google::protobuf::uint32 location_id() const;
  void set_location_id(::google::protobuf::uint32 value);

  // optional bool tracking_only = 2;
  bool has_tracking_only() const;
  void clear_tracking_only();
  static const int kTrackingOnlyFieldNumber = 2;
  bool tracking_only() const;
  void set_tracking_only(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARewardTutorialPrizes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 location_id_;
  bool tracking_only_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTALastHitChallengeHighScorePost final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALastHitChallengeHighScorePost) */ {
 public:
  CMsgDOTALastHitChallengeHighScorePost();
  virtual ~CMsgDOTALastHitChallengeHighScorePost();

  CMsgDOTALastHitChallengeHighScorePost(const CMsgDOTALastHitChallengeHighScorePost& from);

  inline CMsgDOTALastHitChallengeHighScorePost& operator=(const CMsgDOTALastHitChallengeHighScorePost& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTALastHitChallengeHighScorePost(CMsgDOTALastHitChallengeHighScorePost&& from) noexcept
    : CMsgDOTALastHitChallengeHighScorePost() {
    *this = ::std::move(from);
  }

  inline CMsgDOTALastHitChallengeHighScorePost& operator=(CMsgDOTALastHitChallengeHighScorePost&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTALastHitChallengeHighScorePost& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTALastHitChallengeHighScorePost* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALastHitChallengeHighScorePost*>(
               &_CMsgDOTALastHitChallengeHighScorePost_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  void Swap(CMsgDOTALastHitChallengeHighScorePost* other);
  friend void swap(CMsgDOTALastHitChallengeHighScorePost& a, CMsgDOTALastHitChallengeHighScorePost& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTALastHitChallengeHighScorePost* New() const final {
    return CreateMaybeMessage<CMsgDOTALastHitChallengeHighScorePost>(nullptr);
  }

  CMsgDOTALastHitChallengeHighScorePost* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTALastHitChallengeHighScorePost>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTALastHitChallengeHighScorePost& from);
  void MergeFrom(const CMsgDOTALastHitChallengeHighScorePost& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTALastHitChallengeHighScorePost* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 high_score = 2;
  bool has_high_score() const;
  void clear_high_score();
  static const int kHighScoreFieldNumber = 2;
  ::google::protobuf::uint32 high_score() const;
  void set_high_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALastHitChallengeHighScorePost)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 high_score_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTALastHitChallengeHighScoreRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALastHitChallengeHighScoreRequest) */ {
 public:
  CMsgDOTALastHitChallengeHighScoreRequest();
  virtual ~CMsgDOTALastHitChallengeHighScoreRequest();

  CMsgDOTALastHitChallengeHighScoreRequest(const CMsgDOTALastHitChallengeHighScoreRequest& from);

  inline CMsgDOTALastHitChallengeHighScoreRequest& operator=(const CMsgDOTALastHitChallengeHighScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTALastHitChallengeHighScoreRequest(CMsgDOTALastHitChallengeHighScoreRequest&& from) noexcept
    : CMsgDOTALastHitChallengeHighScoreRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTALastHitChallengeHighScoreRequest& operator=(CMsgDOTALastHitChallengeHighScoreRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTALastHitChallengeHighScoreRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTALastHitChallengeHighScoreRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALastHitChallengeHighScoreRequest*>(
               &_CMsgDOTALastHitChallengeHighScoreRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  void Swap(CMsgDOTALastHitChallengeHighScoreRequest* other);
  friend void swap(CMsgDOTALastHitChallengeHighScoreRequest& a, CMsgDOTALastHitChallengeHighScoreRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTALastHitChallengeHighScoreRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTALastHitChallengeHighScoreRequest>(nullptr);
  }

  CMsgDOTALastHitChallengeHighScoreRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTALastHitChallengeHighScoreRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTALastHitChallengeHighScoreRequest& from);
  void MergeFrom(const CMsgDOTALastHitChallengeHighScoreRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTALastHitChallengeHighScoreRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALastHitChallengeHighScoreRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTALastHitChallengeHighScoreResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALastHitChallengeHighScoreResponse) */ {
 public:
  CMsgDOTALastHitChallengeHighScoreResponse();
  virtual ~CMsgDOTALastHitChallengeHighScoreResponse();

  CMsgDOTALastHitChallengeHighScoreResponse(const CMsgDOTALastHitChallengeHighScoreResponse& from);

  inline CMsgDOTALastHitChallengeHighScoreResponse& operator=(const CMsgDOTALastHitChallengeHighScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTALastHitChallengeHighScoreResponse(CMsgDOTALastHitChallengeHighScoreResponse&& from) noexcept
    : CMsgDOTALastHitChallengeHighScoreResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTALastHitChallengeHighScoreResponse& operator=(CMsgDOTALastHitChallengeHighScoreResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTALastHitChallengeHighScoreResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTALastHitChallengeHighScoreResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALastHitChallengeHighScoreResponse*>(
               &_CMsgDOTALastHitChallengeHighScoreResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  void Swap(CMsgDOTALastHitChallengeHighScoreResponse* other);
  friend void swap(CMsgDOTALastHitChallengeHighScoreResponse& a, CMsgDOTALastHitChallengeHighScoreResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTALastHitChallengeHighScoreResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTALastHitChallengeHighScoreResponse>(nullptr);
  }

  CMsgDOTALastHitChallengeHighScoreResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTALastHitChallengeHighScoreResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTALastHitChallengeHighScoreResponse& from);
  void MergeFrom(const CMsgDOTALastHitChallengeHighScoreResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTALastHitChallengeHighScoreResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 score = 1;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 eresult = 2;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 2;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALastHitChallengeHighScoreResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 eresult_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgFlipLobbyTeams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgFlipLobbyTeams) */ {
 public:
  CMsgFlipLobbyTeams();
  virtual ~CMsgFlipLobbyTeams();

  CMsgFlipLobbyTeams(const CMsgFlipLobbyTeams& from);

  inline CMsgFlipLobbyTeams& operator=(const CMsgFlipLobbyTeams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgFlipLobbyTeams(CMsgFlipLobbyTeams&& from) noexcept
    : CMsgFlipLobbyTeams() {
    *this = ::std::move(from);
  }

  inline CMsgFlipLobbyTeams& operator=(CMsgFlipLobbyTeams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgFlipLobbyTeams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgFlipLobbyTeams* internal_default_instance() {
    return reinterpret_cast<const CMsgFlipLobbyTeams*>(
               &_CMsgFlipLobbyTeams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  void Swap(CMsgFlipLobbyTeams* other);
  friend void swap(CMsgFlipLobbyTeams& a, CMsgFlipLobbyTeams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgFlipLobbyTeams* New() const final {
    return CreateMaybeMessage<CMsgFlipLobbyTeams>(nullptr);
  }

  CMsgFlipLobbyTeams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgFlipLobbyTeams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgFlipLobbyTeams& from);
  void MergeFrom(const CMsgFlipLobbyTeams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgFlipLobbyTeams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgFlipLobbyTeams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPresentedClientTerminateDlg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPresentedClientTerminateDlg) */ {
 public:
  CMsgPresentedClientTerminateDlg();
  virtual ~CMsgPresentedClientTerminateDlg();

  CMsgPresentedClientTerminateDlg(const CMsgPresentedClientTerminateDlg& from);

  inline CMsgPresentedClientTerminateDlg& operator=(const CMsgPresentedClientTerminateDlg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPresentedClientTerminateDlg(CMsgPresentedClientTerminateDlg&& from) noexcept
    : CMsgPresentedClientTerminateDlg() {
    *this = ::std::move(from);
  }

  inline CMsgPresentedClientTerminateDlg& operator=(CMsgPresentedClientTerminateDlg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPresentedClientTerminateDlg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPresentedClientTerminateDlg* internal_default_instance() {
    return reinterpret_cast<const CMsgPresentedClientTerminateDlg*>(
               &_CMsgPresentedClientTerminateDlg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  void Swap(CMsgPresentedClientTerminateDlg* other);
  friend void swap(CMsgPresentedClientTerminateDlg& a, CMsgPresentedClientTerminateDlg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPresentedClientTerminateDlg* New() const final {
    return CreateMaybeMessage<CMsgPresentedClientTerminateDlg>(nullptr);
  }

  CMsgPresentedClientTerminateDlg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPresentedClientTerminateDlg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPresentedClientTerminateDlg& from);
  void MergeFrom(const CMsgPresentedClientTerminateDlg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPresentedClientTerminateDlg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPresentedClientTerminateDlg)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCLobbyUpdateBroadcastChannelInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo) */ {
 public:
  CMsgGCLobbyUpdateBroadcastChannelInfo();
  virtual ~CMsgGCLobbyUpdateBroadcastChannelInfo();

  CMsgGCLobbyUpdateBroadcastChannelInfo(const CMsgGCLobbyUpdateBroadcastChannelInfo& from);

  inline CMsgGCLobbyUpdateBroadcastChannelInfo& operator=(const CMsgGCLobbyUpdateBroadcastChannelInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCLobbyUpdateBroadcastChannelInfo(CMsgGCLobbyUpdateBroadcastChannelInfo&& from) noexcept
    : CMsgGCLobbyUpdateBroadcastChannelInfo() {
    *this = ::std::move(from);
  }

  inline CMsgGCLobbyUpdateBroadcastChannelInfo& operator=(CMsgGCLobbyUpdateBroadcastChannelInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCLobbyUpdateBroadcastChannelInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCLobbyUpdateBroadcastChannelInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGCLobbyUpdateBroadcastChannelInfo*>(
               &_CMsgGCLobbyUpdateBroadcastChannelInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  void Swap(CMsgGCLobbyUpdateBroadcastChannelInfo* other);
  friend void swap(CMsgGCLobbyUpdateBroadcastChannelInfo& a, CMsgGCLobbyUpdateBroadcastChannelInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCLobbyUpdateBroadcastChannelInfo* New() const final {
    return CreateMaybeMessage<CMsgGCLobbyUpdateBroadcastChannelInfo>(nullptr);
  }

  CMsgGCLobbyUpdateBroadcastChannelInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCLobbyUpdateBroadcastChannelInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCLobbyUpdateBroadcastChannelInfo& from);
  void MergeFrom(const CMsgGCLobbyUpdateBroadcastChannelInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCLobbyUpdateBroadcastChannelInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string country_code = 2;
  bool has_country_code() const;
  void clear_country_code();
  static const int kCountryCodeFieldNumber = 2;
  const ::std::string& country_code() const;
  void set_country_code(const ::std::string& value);
  #if LANG_CXX11
  void set_country_code(::std::string&& value);
  #endif
  void set_country_code(const char* value);
  void set_country_code(const char* value, size_t size);
  ::std::string* mutable_country_code();
  ::std::string* release_country_code();
  void set_allocated_country_code(::std::string* country_code);

  // optional string description = 3;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string language_code = 4;
  bool has_language_code() const;
  void clear_language_code();
  static const int kLanguageCodeFieldNumber = 4;
  const ::std::string& language_code() const;
  void set_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_language_code(::std::string&& value);
  #endif
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  ::std::string* mutable_language_code();
  ::std::string* release_language_code();
  void set_allocated_language_code(::std::string* language_code);

  // optional uint32 channel_id = 1;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr country_code_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr language_code_;
  ::google::protobuf::uint32 channel_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAClaimEventActionData_GrantItemGiftData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData) */ {
 public:
  CMsgDOTAClaimEventActionData_GrantItemGiftData();
  virtual ~CMsgDOTAClaimEventActionData_GrantItemGiftData();

  CMsgDOTAClaimEventActionData_GrantItemGiftData(const CMsgDOTAClaimEventActionData_GrantItemGiftData& from);

  inline CMsgDOTAClaimEventActionData_GrantItemGiftData& operator=(const CMsgDOTAClaimEventActionData_GrantItemGiftData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAClaimEventActionData_GrantItemGiftData(CMsgDOTAClaimEventActionData_GrantItemGiftData&& from) noexcept
    : CMsgDOTAClaimEventActionData_GrantItemGiftData() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAClaimEventActionData_GrantItemGiftData& operator=(CMsgDOTAClaimEventActionData_GrantItemGiftData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAClaimEventActionData_GrantItemGiftData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAClaimEventActionData_GrantItemGiftData* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClaimEventActionData_GrantItemGiftData*>(
               &_CMsgDOTAClaimEventActionData_GrantItemGiftData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  void Swap(CMsgDOTAClaimEventActionData_GrantItemGiftData* other);
  friend void swap(CMsgDOTAClaimEventActionData_GrantItemGiftData& a, CMsgDOTAClaimEventActionData_GrantItemGiftData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAClaimEventActionData_GrantItemGiftData* New() const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventActionData_GrantItemGiftData>(nullptr);
  }

  CMsgDOTAClaimEventActionData_GrantItemGiftData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventActionData_GrantItemGiftData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAClaimEventActionData_GrantItemGiftData& from);
  void MergeFrom(const CMsgDOTAClaimEventActionData_GrantItemGiftData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAClaimEventActionData_GrantItemGiftData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gift_message = 2;
  bool has_gift_message() const;
  void clear_gift_message();
  static const int kGiftMessageFieldNumber = 2;
  const ::std::string& gift_message() const;
  void set_gift_message(const ::std::string& value);
  #if LANG_CXX11
  void set_gift_message(::std::string&& value);
  #endif
  void set_gift_message(const char* value);
  void set_gift_message(const char* value, size_t size);
  ::std::string* mutable_gift_message();
  ::std::string* release_gift_message();
  void set_allocated_gift_message(::std::string* gift_message);

  // optional uint32 give_to_account_id = 1;
  bool has_give_to_account_id() const;
  void clear_give_to_account_id();
  static const int kGiveToAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 give_to_account_id() const;
  void set_give_to_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gift_message_;
  ::google::protobuf::uint32 give_to_account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAClaimEventActionData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClaimEventActionData) */ {
 public:
  CMsgDOTAClaimEventActionData();
  virtual ~CMsgDOTAClaimEventActionData();

  CMsgDOTAClaimEventActionData(const CMsgDOTAClaimEventActionData& from);

  inline CMsgDOTAClaimEventActionData& operator=(const CMsgDOTAClaimEventActionData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAClaimEventActionData(CMsgDOTAClaimEventActionData&& from) noexcept
    : CMsgDOTAClaimEventActionData() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAClaimEventActionData& operator=(CMsgDOTAClaimEventActionData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAClaimEventActionData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAClaimEventActionData* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClaimEventActionData*>(
               &_CMsgDOTAClaimEventActionData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  void Swap(CMsgDOTAClaimEventActionData* other);
  friend void swap(CMsgDOTAClaimEventActionData& a, CMsgDOTAClaimEventActionData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAClaimEventActionData* New() const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventActionData>(nullptr);
  }

  CMsgDOTAClaimEventActionData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventActionData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAClaimEventActionData& from);
  void MergeFrom(const CMsgDOTAClaimEventActionData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAClaimEventActionData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAClaimEventActionData_GrantItemGiftData GrantItemGiftData;

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData grant_item_gift_data = 4;
  bool has_grant_item_gift_data() const;
  void clear_grant_item_gift_data();
  static const int kGrantItemGiftDataFieldNumber = 4;
  const ::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData& grant_item_gift_data() const;
  ::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData* release_grant_item_gift_data();
  ::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData* mutable_grant_item_gift_data();
  void set_allocated_grant_item_gift_data(::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData* grant_item_gift_data);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClaimEventActionData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData* grant_item_gift_data_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAClaimEventAction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClaimEventAction) */ {
 public:
  CMsgDOTAClaimEventAction();
  virtual ~CMsgDOTAClaimEventAction();

  CMsgDOTAClaimEventAction(const CMsgDOTAClaimEventAction& from);

  inline CMsgDOTAClaimEventAction& operator=(const CMsgDOTAClaimEventAction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAClaimEventAction(CMsgDOTAClaimEventAction&& from) noexcept
    : CMsgDOTAClaimEventAction() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAClaimEventAction& operator=(CMsgDOTAClaimEventAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAClaimEventAction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAClaimEventAction* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClaimEventAction*>(
               &_CMsgDOTAClaimEventAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  void Swap(CMsgDOTAClaimEventAction* other);
  friend void swap(CMsgDOTAClaimEventAction& a, CMsgDOTAClaimEventAction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAClaimEventAction* New() const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventAction>(nullptr);
  }

  CMsgDOTAClaimEventAction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventAction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAClaimEventAction& from);
  void MergeFrom(const CMsgDOTAClaimEventAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAClaimEventAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAClaimEventActionData data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::proto::dota::CMsgDOTAClaimEventActionData& data() const;
  ::proto::dota::CMsgDOTAClaimEventActionData* release_data();
  ::proto::dota::CMsgDOTAClaimEventActionData* mutable_data();
  void set_allocated_data(::proto::dota::CMsgDOTAClaimEventActionData* data);

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 action_id = 2;
  bool has_action_id() const;
  void clear_action_id();
  static const int kActionIdFieldNumber = 2;
  ::google::protobuf::uint32 action_id() const;
  void set_action_id(::google::protobuf::uint32 value);

  // optional uint32 quantity = 3;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 3;
  ::google::protobuf::uint32 quantity() const;
  void set_quantity(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClaimEventAction)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTAClaimEventActionData* data_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 action_id_;
  ::google::protobuf::uint32 quantity_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAClaimEventActionResponse_MysteryItemRewardData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClaimEventActionResponse.MysteryItemRewardData) */ {
 public:
  CMsgDOTAClaimEventActionResponse_MysteryItemRewardData();
  virtual ~CMsgDOTAClaimEventActionResponse_MysteryItemRewardData();

  CMsgDOTAClaimEventActionResponse_MysteryItemRewardData(const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& from);

  inline CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& operator=(const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAClaimEventActionResponse_MysteryItemRewardData(CMsgDOTAClaimEventActionResponse_MysteryItemRewardData&& from) noexcept
    : CMsgDOTAClaimEventActionResponse_MysteryItemRewardData() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& operator=(CMsgDOTAClaimEventActionResponse_MysteryItemRewardData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData*>(
               &_CMsgDOTAClaimEventActionResponse_MysteryItemRewardData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  void Swap(CMsgDOTAClaimEventActionResponse_MysteryItemRewardData* other);
  friend void swap(CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& a, CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAClaimEventActionResponse_MysteryItemRewardData* New() const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventActionResponse_MysteryItemRewardData>(nullptr);
  }

  CMsgDOTAClaimEventActionResponse_MysteryItemRewardData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventActionResponse_MysteryItemRewardData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& from);
  void MergeFrom(const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAClaimEventActionResponse_MysteryItemRewardData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 item_def = 1;
  bool has_item_def() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 1;
  ::google::protobuf::uint32 item_def() const;
  void set_item_def(::google::protobuf::uint32 value);

  // optional uint32 item_category = 2;
  bool has_item_category() const;
  void clear_item_category();
  static const int kItemCategoryFieldNumber = 2;
  ::google::protobuf::uint32 item_category() const;
  void set_item_category(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClaimEventActionResponse.MysteryItemRewardData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 item_category_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAClaimEventActionResponse_LootListRewardData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData) */ {
 public:
  CMsgDOTAClaimEventActionResponse_LootListRewardData();
  virtual ~CMsgDOTAClaimEventActionResponse_LootListRewardData();

  CMsgDOTAClaimEventActionResponse_LootListRewardData(const CMsgDOTAClaimEventActionResponse_LootListRewardData& from);

  inline CMsgDOTAClaimEventActionResponse_LootListRewardData& operator=(const CMsgDOTAClaimEventActionResponse_LootListRewardData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAClaimEventActionResponse_LootListRewardData(CMsgDOTAClaimEventActionResponse_LootListRewardData&& from) noexcept
    : CMsgDOTAClaimEventActionResponse_LootListRewardData() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAClaimEventActionResponse_LootListRewardData& operator=(CMsgDOTAClaimEventActionResponse_LootListRewardData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAClaimEventActionResponse_LootListRewardData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAClaimEventActionResponse_LootListRewardData* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClaimEventActionResponse_LootListRewardData*>(
               &_CMsgDOTAClaimEventActionResponse_LootListRewardData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  void Swap(CMsgDOTAClaimEventActionResponse_LootListRewardData* other);
  friend void swap(CMsgDOTAClaimEventActionResponse_LootListRewardData& a, CMsgDOTAClaimEventActionResponse_LootListRewardData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAClaimEventActionResponse_LootListRewardData* New() const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventActionResponse_LootListRewardData>(nullptr);
  }

  CMsgDOTAClaimEventActionResponse_LootListRewardData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventActionResponse_LootListRewardData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAClaimEventActionResponse_LootListRewardData& from);
  void MergeFrom(const CMsgDOTAClaimEventActionResponse_LootListRewardData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAClaimEventActionResponse_LootListRewardData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 item_def = 1;
  int item_def_size() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 1;
  ::google::protobuf::uint32 item_def(int index) const;
  void set_item_def(int index, ::google::protobuf::uint32 value);
  void add_item_def(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      item_def() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_item_def();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > item_def_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAClaimEventActionResponse_GrantedRewardData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData) */ {
 public:
  CMsgDOTAClaimEventActionResponse_GrantedRewardData();
  virtual ~CMsgDOTAClaimEventActionResponse_GrantedRewardData();

  CMsgDOTAClaimEventActionResponse_GrantedRewardData(const CMsgDOTAClaimEventActionResponse_GrantedRewardData& from);

  inline CMsgDOTAClaimEventActionResponse_GrantedRewardData& operator=(const CMsgDOTAClaimEventActionResponse_GrantedRewardData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAClaimEventActionResponse_GrantedRewardData(CMsgDOTAClaimEventActionResponse_GrantedRewardData&& from) noexcept
    : CMsgDOTAClaimEventActionResponse_GrantedRewardData() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAClaimEventActionResponse_GrantedRewardData& operator=(CMsgDOTAClaimEventActionResponse_GrantedRewardData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAClaimEventActionResponse_GrantedRewardData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAClaimEventActionResponse_GrantedRewardData* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClaimEventActionResponse_GrantedRewardData*>(
               &_CMsgDOTAClaimEventActionResponse_GrantedRewardData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  void Swap(CMsgDOTAClaimEventActionResponse_GrantedRewardData* other);
  friend void swap(CMsgDOTAClaimEventActionResponse_GrantedRewardData& a, CMsgDOTAClaimEventActionResponse_GrantedRewardData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAClaimEventActionResponse_GrantedRewardData* New() const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventActionResponse_GrantedRewardData>(nullptr);
  }

  CMsgDOTAClaimEventActionResponse_GrantedRewardData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventActionResponse_GrantedRewardData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAClaimEventActionResponse_GrantedRewardData& from);
  void MergeFrom(const CMsgDOTAClaimEventActionResponse_GrantedRewardData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAClaimEventActionResponse_GrantedRewardData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reward_data = 4;
  bool has_reward_data() const;
  void clear_reward_data();
  static const int kRewardDataFieldNumber = 4;
  const ::std::string& reward_data() const;
  void set_reward_data(const ::std::string& value);
  #if LANG_CXX11
  void set_reward_data(::std::string&& value);
  #endif
  void set_reward_data(const char* value);
  void set_reward_data(const void* value, size_t size);
  ::std::string* mutable_reward_data();
  ::std::string* release_reward_data();
  void set_allocated_reward_data(::std::string* reward_data);

  // optional uint32 grant_index = 1;
  bool has_grant_index() const;
  void clear_grant_index();
  static const int kGrantIndexFieldNumber = 1;
  ::google::protobuf::uint32 grant_index() const;
  void set_grant_index(::google::protobuf::uint32 value);

  // optional uint32 score_index = 2;
  bool has_score_index() const;
  void clear_score_index();
  static const int kScoreIndexFieldNumber = 2;
  ::google::protobuf::uint32 score_index() const;
  void set_score_index(::google::protobuf::uint32 value);

  // optional uint32 reward_index = 3;
  bool has_reward_index() const;
  void clear_reward_index();
  static const int kRewardIndexFieldNumber = 3;
  ::google::protobuf::uint32 reward_index() const;
  void set_reward_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr reward_data_;
  ::google::protobuf::uint32 grant_index_;
  ::google::protobuf::uint32 score_index_;
  ::google::protobuf::uint32 reward_index_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAClaimEventActionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClaimEventActionResponse) */ {
 public:
  CMsgDOTAClaimEventActionResponse();
  virtual ~CMsgDOTAClaimEventActionResponse();

  CMsgDOTAClaimEventActionResponse(const CMsgDOTAClaimEventActionResponse& from);

  inline CMsgDOTAClaimEventActionResponse& operator=(const CMsgDOTAClaimEventActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAClaimEventActionResponse(CMsgDOTAClaimEventActionResponse&& from) noexcept
    : CMsgDOTAClaimEventActionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAClaimEventActionResponse& operator=(CMsgDOTAClaimEventActionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAClaimEventActionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAClaimEventActionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClaimEventActionResponse*>(
               &_CMsgDOTAClaimEventActionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  void Swap(CMsgDOTAClaimEventActionResponse* other);
  friend void swap(CMsgDOTAClaimEventActionResponse& a, CMsgDOTAClaimEventActionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAClaimEventActionResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventActionResponse>(nullptr);
  }

  CMsgDOTAClaimEventActionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAClaimEventActionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAClaimEventActionResponse& from);
  void MergeFrom(const CMsgDOTAClaimEventActionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAClaimEventActionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAClaimEventActionResponse_MysteryItemRewardData MysteryItemRewardData;
  typedef CMsgDOTAClaimEventActionResponse_LootListRewardData LootListRewardData;
  typedef CMsgDOTAClaimEventActionResponse_GrantedRewardData GrantedRewardData;

  typedef CMsgDOTAClaimEventActionResponse_ResultCode ResultCode;
  static const ResultCode Success =
    CMsgDOTAClaimEventActionResponse_ResultCode_Success;
  static const ResultCode InvalidEvent =
    CMsgDOTAClaimEventActionResponse_ResultCode_InvalidEvent;
  static const ResultCode EventNotActive =
    CMsgDOTAClaimEventActionResponse_ResultCode_EventNotActive;
  static const ResultCode InvalidAction =
    CMsgDOTAClaimEventActionResponse_ResultCode_InvalidAction;
  static const ResultCode ServerError =
    CMsgDOTAClaimEventActionResponse_ResultCode_ServerError;
  static const ResultCode InsufficientPoints =
    CMsgDOTAClaimEventActionResponse_ResultCode_InsufficientPoints;
  static const ResultCode InsufficentLevel =
    CMsgDOTAClaimEventActionResponse_ResultCode_InsufficentLevel;
  static const ResultCode AlreadyClaimed =
    CMsgDOTAClaimEventActionResponse_ResultCode_AlreadyClaimed;
  static const ResultCode SDOLockFailure =
    CMsgDOTAClaimEventActionResponse_ResultCode_SDOLockFailure;
  static const ResultCode SDOLoadFailure =
    CMsgDOTAClaimEventActionResponse_ResultCode_SDOLoadFailure;
  static const ResultCode EventNotOwned =
    CMsgDOTAClaimEventActionResponse_ResultCode_EventNotOwned;
  static const ResultCode Timeout =
    CMsgDOTAClaimEventActionResponse_ResultCode_Timeout;
  static const ResultCode RequiresPlusSubscription =
    CMsgDOTAClaimEventActionResponse_ResultCode_RequiresPlusSubscription;
  static const ResultCode InvalidItem =
    CMsgDOTAClaimEventActionResponse_ResultCode_InvalidItem;
  static inline bool ResultCode_IsValid(int value) {
    return CMsgDOTAClaimEventActionResponse_ResultCode_IsValid(value);
  }
  static const ResultCode ResultCode_MIN =
    CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_MIN;
  static const ResultCode ResultCode_MAX =
    CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_MAX;
  static const int ResultCode_ARRAYSIZE =
    CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResultCode_descriptor() {
    return CMsgDOTAClaimEventActionResponse_ResultCode_descriptor();
  }
  static inline const ::std::string& ResultCode_Name(ResultCode value) {
    return CMsgDOTAClaimEventActionResponse_ResultCode_Name(value);
  }
  static inline bool ResultCode_Parse(const ::std::string& name,
      ResultCode* value) {
    return CMsgDOTAClaimEventActionResponse_ResultCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData reward_results = 2;
  int reward_results_size() const;
  void clear_reward_results();
  static const int kRewardResultsFieldNumber = 2;
  ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData* mutable_reward_results(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData >*
      mutable_reward_results();
  const ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData& reward_results(int index) const;
  ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData* add_reward_results();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData >&
      reward_results() const;

  // optional .proto.dota.CMsgDOTAClaimEventActionResponse.ResultCode result = 1 [default = Success];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode result() const;
  void set_result(::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClaimEventActionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData > reward_results_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCClaimEventActionUsingItem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCClaimEventActionUsingItem) */ {
 public:
  CMsgClientToGCClaimEventActionUsingItem();
  virtual ~CMsgClientToGCClaimEventActionUsingItem();

  CMsgClientToGCClaimEventActionUsingItem(const CMsgClientToGCClaimEventActionUsingItem& from);

  inline CMsgClientToGCClaimEventActionUsingItem& operator=(const CMsgClientToGCClaimEventActionUsingItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCClaimEventActionUsingItem(CMsgClientToGCClaimEventActionUsingItem&& from) noexcept
    : CMsgClientToGCClaimEventActionUsingItem() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCClaimEventActionUsingItem& operator=(CMsgClientToGCClaimEventActionUsingItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCClaimEventActionUsingItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCClaimEventActionUsingItem* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCClaimEventActionUsingItem*>(
               &_CMsgClientToGCClaimEventActionUsingItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  void Swap(CMsgClientToGCClaimEventActionUsingItem* other);
  friend void swap(CMsgClientToGCClaimEventActionUsingItem& a, CMsgClientToGCClaimEventActionUsingItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCClaimEventActionUsingItem* New() const final {
    return CreateMaybeMessage<CMsgClientToGCClaimEventActionUsingItem>(nullptr);
  }

  CMsgClientToGCClaimEventActionUsingItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCClaimEventActionUsingItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCClaimEventActionUsingItem& from);
  void MergeFrom(const CMsgClientToGCClaimEventActionUsingItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCClaimEventActionUsingItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 action_id = 2;
  bool has_action_id() const;
  void clear_action_id();
  static const int kActionIdFieldNumber = 2;
  ::google::protobuf::uint32 action_id() const;
  void set_action_id(::google::protobuf::uint32 value);

  // optional uint64 item_id = 3;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCClaimEventActionUsingItem)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 action_id_;
  ::google::protobuf::uint64 item_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCClaimEventActionUsingItemResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCClaimEventActionUsingItemResponse) */ {
 public:
  CMsgClientToGCClaimEventActionUsingItemResponse();
  virtual ~CMsgClientToGCClaimEventActionUsingItemResponse();

  CMsgClientToGCClaimEventActionUsingItemResponse(const CMsgClientToGCClaimEventActionUsingItemResponse& from);

  inline CMsgClientToGCClaimEventActionUsingItemResponse& operator=(const CMsgClientToGCClaimEventActionUsingItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCClaimEventActionUsingItemResponse(CMsgClientToGCClaimEventActionUsingItemResponse&& from) noexcept
    : CMsgClientToGCClaimEventActionUsingItemResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCClaimEventActionUsingItemResponse& operator=(CMsgClientToGCClaimEventActionUsingItemResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCClaimEventActionUsingItemResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCClaimEventActionUsingItemResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCClaimEventActionUsingItemResponse*>(
               &_CMsgClientToGCClaimEventActionUsingItemResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  void Swap(CMsgClientToGCClaimEventActionUsingItemResponse* other);
  friend void swap(CMsgClientToGCClaimEventActionUsingItemResponse& a, CMsgClientToGCClaimEventActionUsingItemResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCClaimEventActionUsingItemResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCClaimEventActionUsingItemResponse>(nullptr);
  }

  CMsgClientToGCClaimEventActionUsingItemResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCClaimEventActionUsingItemResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCClaimEventActionUsingItemResponse& from);
  void MergeFrom(const CMsgClientToGCClaimEventActionUsingItemResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCClaimEventActionUsingItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAClaimEventActionResponse action_results = 1;
  bool has_action_results() const;
  void clear_action_results();
  static const int kActionResultsFieldNumber = 1;
  const ::proto::dota::CMsgDOTAClaimEventActionResponse& action_results() const;
  ::proto::dota::CMsgDOTAClaimEventActionResponse* release_action_results();
  ::proto::dota::CMsgDOTAClaimEventActionResponse* mutable_action_results();
  void set_allocated_action_results(::proto::dota::CMsgDOTAClaimEventActionResponse* action_results);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCClaimEventActionUsingItemResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTAClaimEventActionResponse* action_results_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGetEventPoints final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetEventPoints) */ {
 public:
  CMsgDOTAGetEventPoints();
  virtual ~CMsgDOTAGetEventPoints();

  CMsgDOTAGetEventPoints(const CMsgDOTAGetEventPoints& from);

  inline CMsgDOTAGetEventPoints& operator=(const CMsgDOTAGetEventPoints& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGetEventPoints(CMsgDOTAGetEventPoints&& from) noexcept
    : CMsgDOTAGetEventPoints() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGetEventPoints& operator=(CMsgDOTAGetEventPoints&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGetEventPoints& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGetEventPoints* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetEventPoints*>(
               &_CMsgDOTAGetEventPoints_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  void Swap(CMsgDOTAGetEventPoints* other);
  friend void swap(CMsgDOTAGetEventPoints& a, CMsgDOTAGetEventPoints& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetEventPoints* New() const final {
    return CreateMaybeMessage<CMsgDOTAGetEventPoints>(nullptr);
  }

  CMsgDOTAGetEventPoints* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGetEventPoints>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGetEventPoints& from);
  void MergeFrom(const CMsgDOTAGetEventPoints& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGetEventPoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetEventPoints)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGetEventPointsResponse_Action final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetEventPointsResponse.Action) */ {
 public:
  CMsgDOTAGetEventPointsResponse_Action();
  virtual ~CMsgDOTAGetEventPointsResponse_Action();

  CMsgDOTAGetEventPointsResponse_Action(const CMsgDOTAGetEventPointsResponse_Action& from);

  inline CMsgDOTAGetEventPointsResponse_Action& operator=(const CMsgDOTAGetEventPointsResponse_Action& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGetEventPointsResponse_Action(CMsgDOTAGetEventPointsResponse_Action&& from) noexcept
    : CMsgDOTAGetEventPointsResponse_Action() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGetEventPointsResponse_Action& operator=(CMsgDOTAGetEventPointsResponse_Action&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGetEventPointsResponse_Action& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGetEventPointsResponse_Action* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetEventPointsResponse_Action*>(
               &_CMsgDOTAGetEventPointsResponse_Action_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  void Swap(CMsgDOTAGetEventPointsResponse_Action* other);
  friend void swap(CMsgDOTAGetEventPointsResponse_Action& a, CMsgDOTAGetEventPointsResponse_Action& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetEventPointsResponse_Action* New() const final {
    return CreateMaybeMessage<CMsgDOTAGetEventPointsResponse_Action>(nullptr);
  }

  CMsgDOTAGetEventPointsResponse_Action* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGetEventPointsResponse_Action>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGetEventPointsResponse_Action& from);
  void MergeFrom(const CMsgDOTAGetEventPointsResponse_Action& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGetEventPointsResponse_Action* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 action_id = 1;
  bool has_action_id() const;
  void clear_action_id();
  static const int kActionIdFieldNumber = 1;
  ::google::protobuf::uint32 action_id() const;
  void set_action_id(::google::protobuf::uint32 value);

  // optional uint32 times_completed = 2 [default = 1];
  bool has_times_completed() const;
  void clear_times_completed();
  static const int kTimesCompletedFieldNumber = 2;
  ::google::protobuf::uint32 times_completed() const;
  void set_times_completed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetEventPointsResponse.Action)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 action_id_;
  ::google::protobuf::uint32 times_completed_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGetEventPointsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetEventPointsResponse) */ {
 public:
  CMsgDOTAGetEventPointsResponse();
  virtual ~CMsgDOTAGetEventPointsResponse();

  CMsgDOTAGetEventPointsResponse(const CMsgDOTAGetEventPointsResponse& from);

  inline CMsgDOTAGetEventPointsResponse& operator=(const CMsgDOTAGetEventPointsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGetEventPointsResponse(CMsgDOTAGetEventPointsResponse&& from) noexcept
    : CMsgDOTAGetEventPointsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGetEventPointsResponse& operator=(CMsgDOTAGetEventPointsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGetEventPointsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGetEventPointsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetEventPointsResponse*>(
               &_CMsgDOTAGetEventPointsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  void Swap(CMsgDOTAGetEventPointsResponse* other);
  friend void swap(CMsgDOTAGetEventPointsResponse& a, CMsgDOTAGetEventPointsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetEventPointsResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAGetEventPointsResponse>(nullptr);
  }

  CMsgDOTAGetEventPointsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGetEventPointsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGetEventPointsResponse& from);
  void MergeFrom(const CMsgDOTAGetEventPointsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGetEventPointsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGetEventPointsResponse_Action Action;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAGetEventPointsResponse.Action completed_actions = 6;
  int completed_actions_size() const;
  void clear_completed_actions();
  static const int kCompletedActionsFieldNumber = 6;
  ::proto::dota::CMsgDOTAGetEventPointsResponse_Action* mutable_completed_actions(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetEventPointsResponse_Action >*
      mutable_completed_actions();
  const ::proto::dota::CMsgDOTAGetEventPointsResponse_Action& completed_actions(int index) const;
  ::proto::dota::CMsgDOTAGetEventPointsResponse_Action* add_completed_actions();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetEventPointsResponse_Action >&
      completed_actions() const;

  // optional uint32 total_points = 1;
  bool has_total_points() const;
  void clear_total_points();
  static const int kTotalPointsFieldNumber = 1;
  ::google::protobuf::uint32 total_points() const;
  void set_total_points(::google::protobuf::uint32 value);

  // optional uint32 total_premium_points = 2;
  bool has_total_premium_points() const;
  void clear_total_premium_points();
  static const int kTotalPremiumPointsFieldNumber = 2;
  ::google::protobuf::uint32 total_premium_points() const;
  void set_total_premium_points(::google::protobuf::uint32 value);

  // optional uint32 event_id = 3;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 3;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 points = 4;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 4;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // optional uint32 premium_points = 5;
  bool has_premium_points() const;
  void clear_premium_points();
  static const int kPremiumPointsFieldNumber = 5;
  ::google::protobuf::uint32 premium_points() const;
  void set_premium_points(::google::protobuf::uint32 value);

  // optional uint32 account_id = 7;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 7;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional bool owned = 8;
  bool has_owned() const;
  void clear_owned();
  static const int kOwnedFieldNumber = 8;
  bool owned() const;
  void set_owned(bool value);

  // optional uint32 audit_action = 9;
  bool has_audit_action() const;
  void clear_audit_action();
  static const int kAuditActionFieldNumber = 9;
  ::google::protobuf::uint32 audit_action() const;
  void set_audit_action(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetEventPointsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetEventPointsResponse_Action > completed_actions_;
  ::google::protobuf::uint32 total_points_;
  ::google::protobuf::uint32 total_premium_points_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 points_;
  ::google::protobuf::uint32 premium_points_;
  ::google::protobuf::uint32 account_id_;
  bool owned_;
  ::google::protobuf::uint32 audit_action_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPeriodicResource final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetPeriodicResource) */ {
 public:
  CMsgDOTAGetPeriodicResource();
  virtual ~CMsgDOTAGetPeriodicResource();

  CMsgDOTAGetPeriodicResource(const CMsgDOTAGetPeriodicResource& from);

  inline CMsgDOTAGetPeriodicResource& operator=(const CMsgDOTAGetPeriodicResource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGetPeriodicResource(CMsgDOTAGetPeriodicResource&& from) noexcept
    : CMsgDOTAGetPeriodicResource() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGetPeriodicResource& operator=(CMsgDOTAGetPeriodicResource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGetPeriodicResource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGetPeriodicResource* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetPeriodicResource*>(
               &_CMsgDOTAGetPeriodicResource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  void Swap(CMsgDOTAGetPeriodicResource* other);
  friend void swap(CMsgDOTAGetPeriodicResource& a, CMsgDOTAGetPeriodicResource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetPeriodicResource* New() const final {
    return CreateMaybeMessage<CMsgDOTAGetPeriodicResource>(nullptr);
  }

  CMsgDOTAGetPeriodicResource* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGetPeriodicResource>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGetPeriodicResource& from);
  void MergeFrom(const CMsgDOTAGetPeriodicResource& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGetPeriodicResource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 periodic_resource_id = 2;
  bool has_periodic_resource_id() const;
  void clear_periodic_resource_id();
  static const int kPeriodicResourceIdFieldNumber = 2;
  ::google::protobuf::uint32 periodic_resource_id() const;
  void set_periodic_resource_id(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetPeriodicResource)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 periodic_resource_id_;
  ::google::protobuf::uint32 timestamp_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPeriodicResourceResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetPeriodicResourceResponse) */ {
 public:
  CMsgDOTAGetPeriodicResourceResponse();
  virtual ~CMsgDOTAGetPeriodicResourceResponse();

  CMsgDOTAGetPeriodicResourceResponse(const CMsgDOTAGetPeriodicResourceResponse& from);

  inline CMsgDOTAGetPeriodicResourceResponse& operator=(const CMsgDOTAGetPeriodicResourceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGetPeriodicResourceResponse(CMsgDOTAGetPeriodicResourceResponse&& from) noexcept
    : CMsgDOTAGetPeriodicResourceResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGetPeriodicResourceResponse& operator=(CMsgDOTAGetPeriodicResourceResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGetPeriodicResourceResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGetPeriodicResourceResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetPeriodicResourceResponse*>(
               &_CMsgDOTAGetPeriodicResourceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  void Swap(CMsgDOTAGetPeriodicResourceResponse* other);
  friend void swap(CMsgDOTAGetPeriodicResourceResponse& a, CMsgDOTAGetPeriodicResourceResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetPeriodicResourceResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAGetPeriodicResourceResponse>(nullptr);
  }

  CMsgDOTAGetPeriodicResourceResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGetPeriodicResourceResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGetPeriodicResourceResponse& from);
  void MergeFrom(const CMsgDOTAGetPeriodicResourceResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGetPeriodicResourceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 periodic_resource_max = 1;
  bool has_periodic_resource_max() const;
  void clear_periodic_resource_max();
  static const int kPeriodicResourceMaxFieldNumber = 1;
  ::google::protobuf::uint32 periodic_resource_max() const;
  void set_periodic_resource_max(::google::protobuf::uint32 value);

  // optional uint32 periodic_resource_used = 2;
  bool has_periodic_resource_used() const;
  void clear_periodic_resource_used();
  static const int kPeriodicResourceUsedFieldNumber = 2;
  ::google::protobuf::uint32 periodic_resource_used() const;
  void set_periodic_resource_used(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetPeriodicResourceResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 periodic_resource_max_;
  ::google::protobuf::uint32 periodic_resource_used_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAPeriodicResourceUpdated final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPeriodicResourceUpdated) */ {
 public:
  CMsgDOTAPeriodicResourceUpdated();
  virtual ~CMsgDOTAPeriodicResourceUpdated();

  CMsgDOTAPeriodicResourceUpdated(const CMsgDOTAPeriodicResourceUpdated& from);

  inline CMsgDOTAPeriodicResourceUpdated& operator=(const CMsgDOTAPeriodicResourceUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAPeriodicResourceUpdated(CMsgDOTAPeriodicResourceUpdated&& from) noexcept
    : CMsgDOTAPeriodicResourceUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAPeriodicResourceUpdated& operator=(CMsgDOTAPeriodicResourceUpdated&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAPeriodicResourceUpdated& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAPeriodicResourceUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPeriodicResourceUpdated*>(
               &_CMsgDOTAPeriodicResourceUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  void Swap(CMsgDOTAPeriodicResourceUpdated* other);
  friend void swap(CMsgDOTAPeriodicResourceUpdated& a, CMsgDOTAPeriodicResourceUpdated& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAPeriodicResourceUpdated* New() const final {
    return CreateMaybeMessage<CMsgDOTAPeriodicResourceUpdated>(nullptr);
  }

  CMsgDOTAPeriodicResourceUpdated* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAPeriodicResourceUpdated>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAPeriodicResourceUpdated& from);
  void MergeFrom(const CMsgDOTAPeriodicResourceUpdated& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAPeriodicResourceUpdated* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAGetPeriodicResource periodic_resource_key = 1;
  bool has_periodic_resource_key() const;
  void clear_periodic_resource_key();
  static const int kPeriodicResourceKeyFieldNumber = 1;
  const ::proto::dota::CMsgDOTAGetPeriodicResource& periodic_resource_key() const;
  ::proto::dota::CMsgDOTAGetPeriodicResource* release_periodic_resource_key();
  ::proto::dota::CMsgDOTAGetPeriodicResource* mutable_periodic_resource_key();
  void set_allocated_periodic_resource_key(::proto::dota::CMsgDOTAGetPeriodicResource* periodic_resource_key);

  // optional .proto.dota.CMsgDOTAGetPeriodicResourceResponse periodic_resource_value = 2;
  bool has_periodic_resource_value() const;
  void clear_periodic_resource_value();
  static const int kPeriodicResourceValueFieldNumber = 2;
  const ::proto::dota::CMsgDOTAGetPeriodicResourceResponse& periodic_resource_value() const;
  ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* release_periodic_resource_value();
  ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* mutable_periodic_resource_value();
  void set_allocated_periodic_resource_value(::proto::dota::CMsgDOTAGetPeriodicResourceResponse* periodic_resource_value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPeriodicResourceUpdated)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTAGetPeriodicResource* periodic_resource_key_;
  ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* periodic_resource_value_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTALiveLeagueGameUpdate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALiveLeagueGameUpdate) */ {
 public:
  CMsgDOTALiveLeagueGameUpdate();
  virtual ~CMsgDOTALiveLeagueGameUpdate();

  CMsgDOTALiveLeagueGameUpdate(const CMsgDOTALiveLeagueGameUpdate& from);

  inline CMsgDOTALiveLeagueGameUpdate& operator=(const CMsgDOTALiveLeagueGameUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTALiveLeagueGameUpdate(CMsgDOTALiveLeagueGameUpdate&& from) noexcept
    : CMsgDOTALiveLeagueGameUpdate() {
    *this = ::std::move(from);
  }

  inline CMsgDOTALiveLeagueGameUpdate& operator=(CMsgDOTALiveLeagueGameUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTALiveLeagueGameUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTALiveLeagueGameUpdate* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALiveLeagueGameUpdate*>(
               &_CMsgDOTALiveLeagueGameUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  void Swap(CMsgDOTALiveLeagueGameUpdate* other);
  friend void swap(CMsgDOTALiveLeagueGameUpdate& a, CMsgDOTALiveLeagueGameUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTALiveLeagueGameUpdate* New() const final {
    return CreateMaybeMessage<CMsgDOTALiveLeagueGameUpdate>(nullptr);
  }

  CMsgDOTALiveLeagueGameUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTALiveLeagueGameUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTALiveLeagueGameUpdate& from);
  void MergeFrom(const CMsgDOTALiveLeagueGameUpdate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTALiveLeagueGameUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 live_league_games = 1;
  bool has_live_league_games() const;
  void clear_live_league_games();
  static const int kLiveLeagueGamesFieldNumber = 1;
  ::google::protobuf::uint32 live_league_games() const;
  void set_live_league_games(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALiveLeagueGameUpdate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 live_league_games_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumSelection final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumSelection) */ {
 public:
  CMsgDOTACompendiumSelection();
  virtual ~CMsgDOTACompendiumSelection();

  CMsgDOTACompendiumSelection(const CMsgDOTACompendiumSelection& from);

  inline CMsgDOTACompendiumSelection& operator=(const CMsgDOTACompendiumSelection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTACompendiumSelection(CMsgDOTACompendiumSelection&& from) noexcept
    : CMsgDOTACompendiumSelection() {
    *this = ::std::move(from);
  }

  inline CMsgDOTACompendiumSelection& operator=(CMsgDOTACompendiumSelection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTACompendiumSelection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTACompendiumSelection* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumSelection*>(
               &_CMsgDOTACompendiumSelection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  void Swap(CMsgDOTACompendiumSelection* other);
  friend void swap(CMsgDOTACompendiumSelection& a, CMsgDOTACompendiumSelection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumSelection* New() const final {
    return CreateMaybeMessage<CMsgDOTACompendiumSelection>(nullptr);
  }

  CMsgDOTACompendiumSelection* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTACompendiumSelection>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTACompendiumSelection& from);
  void MergeFrom(const CMsgDOTACompendiumSelection& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTACompendiumSelection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 selection_index = 1;
  bool has_selection_index() const;
  void clear_selection_index();
  static const int kSelectionIndexFieldNumber = 1;
  ::google::protobuf::uint32 selection_index() const;
  void set_selection_index(::google::protobuf::uint32 value);

  // optional uint32 selection = 2;
  bool has_selection() const;
  void clear_selection();
  static const int kSelectionFieldNumber = 2;
  ::google::protobuf::uint32 selection() const;
  void set_selection(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 3;
  bool has_leagueid() const;
  void clear_leagueid();
  static const int kLeagueidFieldNumber = 3;
  ::google::protobuf::uint32 leagueid() const;
  void set_leagueid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumSelection)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 selection_index_;
  ::google::protobuf::uint32 selection_;
  ::google::protobuf::uint32 leagueid_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumSelectionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumSelectionResponse) */ {
 public:
  CMsgDOTACompendiumSelectionResponse();
  virtual ~CMsgDOTACompendiumSelectionResponse();

  CMsgDOTACompendiumSelectionResponse(const CMsgDOTACompendiumSelectionResponse& from);

  inline CMsgDOTACompendiumSelectionResponse& operator=(const CMsgDOTACompendiumSelectionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTACompendiumSelectionResponse(CMsgDOTACompendiumSelectionResponse&& from) noexcept
    : CMsgDOTACompendiumSelectionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTACompendiumSelectionResponse& operator=(CMsgDOTACompendiumSelectionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTACompendiumSelectionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTACompendiumSelectionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumSelectionResponse*>(
               &_CMsgDOTACompendiumSelectionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    118;

  void Swap(CMsgDOTACompendiumSelectionResponse* other);
  friend void swap(CMsgDOTACompendiumSelectionResponse& a, CMsgDOTACompendiumSelectionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumSelectionResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTACompendiumSelectionResponse>(nullptr);
  }

  CMsgDOTACompendiumSelectionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTACompendiumSelectionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTACompendiumSelectionResponse& from);
  void MergeFrom(const CMsgDOTACompendiumSelectionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTACompendiumSelectionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTACompendiumSelection extra_selections = 2;
  int extra_selections_size() const;
  void clear_extra_selections();
  static const int kExtraSelectionsFieldNumber = 2;
  ::proto::dota::CMsgDOTACompendiumSelection* mutable_extra_selections(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >*
      mutable_extra_selections();
  const ::proto::dota::CMsgDOTACompendiumSelection& extra_selections(int index) const;
  ::proto::dota::CMsgDOTACompendiumSelection* add_extra_selections();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >&
      extra_selections() const;

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumSelectionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection > extra_selections_;
  ::google::protobuf::uint32 eresult_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumData) */ {
 public:
  CMsgDOTACompendiumData();
  virtual ~CMsgDOTACompendiumData();

  CMsgDOTACompendiumData(const CMsgDOTACompendiumData& from);

  inline CMsgDOTACompendiumData& operator=(const CMsgDOTACompendiumData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTACompendiumData(CMsgDOTACompendiumData&& from) noexcept
    : CMsgDOTACompendiumData() {
    *this = ::std::move(from);
  }

  inline CMsgDOTACompendiumData& operator=(CMsgDOTACompendiumData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTACompendiumData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTACompendiumData* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumData*>(
               &_CMsgDOTACompendiumData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    119;

  void Swap(CMsgDOTACompendiumData* other);
  friend void swap(CMsgDOTACompendiumData& a, CMsgDOTACompendiumData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumData* New() const final {
    return CreateMaybeMessage<CMsgDOTACompendiumData>(nullptr);
  }

  CMsgDOTACompendiumData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTACompendiumData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTACompendiumData& from);
  void MergeFrom(const CMsgDOTACompendiumData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTACompendiumData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTACompendiumSelection selections = 1;
  int selections_size() const;
  void clear_selections();
  static const int kSelectionsFieldNumber = 1;
  ::proto::dota::CMsgDOTACompendiumSelection* mutable_selections(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >*
      mutable_selections();
  const ::proto::dota::CMsgDOTACompendiumSelection& selections(int index) const;
  ::proto::dota::CMsgDOTACompendiumSelection* add_selections();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >&
      selections() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection > selections_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumDataRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumDataRequest) */ {
 public:
  CMsgDOTACompendiumDataRequest();
  virtual ~CMsgDOTACompendiumDataRequest();

  CMsgDOTACompendiumDataRequest(const CMsgDOTACompendiumDataRequest& from);

  inline CMsgDOTACompendiumDataRequest& operator=(const CMsgDOTACompendiumDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTACompendiumDataRequest(CMsgDOTACompendiumDataRequest&& from) noexcept
    : CMsgDOTACompendiumDataRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTACompendiumDataRequest& operator=(CMsgDOTACompendiumDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTACompendiumDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTACompendiumDataRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumDataRequest*>(
               &_CMsgDOTACompendiumDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    120;

  void Swap(CMsgDOTACompendiumDataRequest* other);
  friend void swap(CMsgDOTACompendiumDataRequest& a, CMsgDOTACompendiumDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumDataRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTACompendiumDataRequest>(nullptr);
  }

  CMsgDOTACompendiumDataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTACompendiumDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTACompendiumDataRequest& from);
  void MergeFrom(const CMsgDOTACompendiumDataRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTACompendiumDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 2;
  bool has_leagueid() const;
  void clear_leagueid();
  static const int kLeagueidFieldNumber = 2;
  ::google::protobuf::uint32 leagueid() const;
  void set_leagueid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumDataRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 leagueid_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumDataResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumDataResponse) */ {
 public:
  CMsgDOTACompendiumDataResponse();
  virtual ~CMsgDOTACompendiumDataResponse();

  CMsgDOTACompendiumDataResponse(const CMsgDOTACompendiumDataResponse& from);

  inline CMsgDOTACompendiumDataResponse& operator=(const CMsgDOTACompendiumDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTACompendiumDataResponse(CMsgDOTACompendiumDataResponse&& from) noexcept
    : CMsgDOTACompendiumDataResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTACompendiumDataResponse& operator=(CMsgDOTACompendiumDataResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTACompendiumDataResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTACompendiumDataResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumDataResponse*>(
               &_CMsgDOTACompendiumDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    121;

  void Swap(CMsgDOTACompendiumDataResponse* other);
  friend void swap(CMsgDOTACompendiumDataResponse& a, CMsgDOTACompendiumDataResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumDataResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTACompendiumDataResponse>(nullptr);
  }

  CMsgDOTACompendiumDataResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTACompendiumDataResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTACompendiumDataResponse& from);
  void MergeFrom(const CMsgDOTACompendiumDataResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTACompendiumDataResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTACompendiumData compendium_data = 4;
  bool has_compendium_data() const;
  void clear_compendium_data();
  static const int kCompendiumDataFieldNumber = 4;
  const ::proto::dota::CMsgDOTACompendiumData& compendium_data() const;
  ::proto::dota::CMsgDOTACompendiumData* release_compendium_data();
  ::proto::dota::CMsgDOTACompendiumData* mutable_compendium_data();
  void set_allocated_compendium_data(::proto::dota::CMsgDOTACompendiumData* compendium_data);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 2;
  bool has_leagueid() const;
  void clear_leagueid();
  static const int kLeagueidFieldNumber = 2;
  ::google::protobuf::uint32 leagueid() const;
  void set_leagueid(::google::protobuf::uint32 value);

  // optional uint32 result = 3 [default = 2];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumDataResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTACompendiumData* compendium_data_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 leagueid_;
  ::google::protobuf::uint32 result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPlayerMatchHistory final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetPlayerMatchHistory) */ {
 public:
  CMsgDOTAGetPlayerMatchHistory();
  virtual ~CMsgDOTAGetPlayerMatchHistory();

  CMsgDOTAGetPlayerMatchHistory(const CMsgDOTAGetPlayerMatchHistory& from);

  inline CMsgDOTAGetPlayerMatchHistory& operator=(const CMsgDOTAGetPlayerMatchHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGetPlayerMatchHistory(CMsgDOTAGetPlayerMatchHistory&& from) noexcept
    : CMsgDOTAGetPlayerMatchHistory() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGetPlayerMatchHistory& operator=(CMsgDOTAGetPlayerMatchHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGetPlayerMatchHistory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGetPlayerMatchHistory* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetPlayerMatchHistory*>(
               &_CMsgDOTAGetPlayerMatchHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    122;

  void Swap(CMsgDOTAGetPlayerMatchHistory* other);
  friend void swap(CMsgDOTAGetPlayerMatchHistory& a, CMsgDOTAGetPlayerMatchHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetPlayerMatchHistory* New() const final {
    return CreateMaybeMessage<CMsgDOTAGetPlayerMatchHistory>(nullptr);
  }

  CMsgDOTAGetPlayerMatchHistory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGetPlayerMatchHistory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGetPlayerMatchHistory& from);
  void MergeFrom(const CMsgDOTAGetPlayerMatchHistory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGetPlayerMatchHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 start_at_match_id = 2;
  bool has_start_at_match_id() const;
  void clear_start_at_match_id();
  static const int kStartAtMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 start_at_match_id() const;
  void set_start_at_match_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 matches_requested = 3;
  bool has_matches_requested() const;
  void clear_matches_requested();
  static const int kMatchesRequestedFieldNumber = 3;
  ::google::protobuf::uint32 matches_requested() const;
  void set_matches_requested(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 4;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 request_id = 5;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 5;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // optional bool include_practice_matches = 7;
  bool has_include_practice_matches() const;
  void clear_include_practice_matches();
  static const int kIncludePracticeMatchesFieldNumber = 7;
  bool include_practice_matches() const;
  void set_include_practice_matches(bool value);

  // optional bool include_custom_games = 8;
  bool has_include_custom_games() const;
  void clear_include_custom_games();
  static const int kIncludeCustomGamesFieldNumber = 8;
  bool include_custom_games() const;
  void set_include_custom_games(bool value);

  // optional bool include_event_games = 9;
  bool has_include_event_games() const;
  void clear_include_event_games();
  static const int kIncludeEventGamesFieldNumber = 9;
  bool include_event_games() const;
  void set_include_event_games(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetPlayerMatchHistory)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 start_at_match_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 matches_requested_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 request_id_;
  bool include_practice_matches_;
  bool include_custom_games_;
  bool include_event_games_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPlayerMatchHistoryResponse_Match final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match) */ {
 public:
  CMsgDOTAGetPlayerMatchHistoryResponse_Match();
  virtual ~CMsgDOTAGetPlayerMatchHistoryResponse_Match();

  CMsgDOTAGetPlayerMatchHistoryResponse_Match(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from);

  inline CMsgDOTAGetPlayerMatchHistoryResponse_Match& operator=(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGetPlayerMatchHistoryResponse_Match(CMsgDOTAGetPlayerMatchHistoryResponse_Match&& from) noexcept
    : CMsgDOTAGetPlayerMatchHistoryResponse_Match() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGetPlayerMatchHistoryResponse_Match& operator=(CMsgDOTAGetPlayerMatchHistoryResponse_Match&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGetPlayerMatchHistoryResponse_Match& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGetPlayerMatchHistoryResponse_Match* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetPlayerMatchHistoryResponse_Match*>(
               &_CMsgDOTAGetPlayerMatchHistoryResponse_Match_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    123;

  void Swap(CMsgDOTAGetPlayerMatchHistoryResponse_Match* other);
  friend void swap(CMsgDOTAGetPlayerMatchHistoryResponse_Match& a, CMsgDOTAGetPlayerMatchHistoryResponse_Match& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetPlayerMatchHistoryResponse_Match* New() const final {
    return CreateMaybeMessage<CMsgDOTAGetPlayerMatchHistoryResponse_Match>(nullptr);
  }

  CMsgDOTAGetPlayerMatchHistoryResponse_Match* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGetPlayerMatchHistoryResponse_Match>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from);
  void MergeFrom(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGetPlayerMatchHistoryResponse_Match* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string team_name = 20;
  bool has_team_name() const;
  void clear_team_name();
  static const int kTeamNameFieldNumber = 20;
  const ::std::string& team_name() const;
  void set_team_name(const ::std::string& value);
  #if LANG_CXX11
  void set_team_name(::std::string&& value);
  #endif
  void set_team_name(const char* value);
  void set_team_name(const char* value, size_t size);
  ::std::string* mutable_team_name();
  ::std::string* release_team_name();
  void set_allocated_team_name(::std::string* team_name);

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 start_time = 2;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 3;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 game_mode = 5;
  bool has_game_mode() const;
  void clear_game_mode();
  static const int kGameModeFieldNumber = 5;
  ::google::protobuf::uint32 game_mode() const;
  void set_game_mode(::google::protobuf::uint32 value);

  // optional int32 rank_change = 6;
  bool has_rank_change() const;
  void clear_rank_change();
  static const int kRankChangeFieldNumber = 6;
  ::google::protobuf::int32 rank_change() const;
  void set_rank_change(::google::protobuf::int32 value);

  // optional uint32 previous_rank = 7;
  bool has_previous_rank() const;
  void clear_previous_rank();
  static const int kPreviousRankFieldNumber = 7;
  ::google::protobuf::uint32 previous_rank() const;
  void set_previous_rank(::google::protobuf::uint32 value);

  // optional uint32 lobby_type = 8;
  bool has_lobby_type() const;
  void clear_lobby_type();
  static const int kLobbyTypeFieldNumber = 8;
  ::google::protobuf::uint32 lobby_type() const;
  void set_lobby_type(::google::protobuf::uint32 value);

  // optional bool winner = 4;
  bool has_winner() const;
  void clear_winner();
  static const int kWinnerFieldNumber = 4;
  bool winner() const;
  void set_winner(bool value);

  // optional bool solo_rank = 9;
  bool has_solo_rank() const;
  void clear_solo_rank();
  static const int kSoloRankFieldNumber = 9;
  bool solo_rank() const;
  void set_solo_rank(bool value);

  // optional bool abandon = 10;
  bool has_abandon() const;
  void clear_abandon();
  static const int kAbandonFieldNumber = 10;
  bool abandon() const;
  void set_abandon(bool value);

  // optional bool active_plus_subscription = 13;
  bool has_active_plus_subscription() const;
  void clear_active_plus_subscription();
  static const int kActivePlusSubscriptionFieldNumber = 13;
  bool active_plus_subscription() const;
  void set_active_plus_subscription(bool value);

  // optional uint32 duration = 11;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 11;
  ::google::protobuf::uint32 duration() const;
  void set_duration(::google::protobuf::uint32 value);

  // optional uint32 engine = 12;
  bool has_engine() const;
  void clear_engine();
  static const int kEngineFieldNumber = 12;
  ::google::protobuf::uint32 engine() const;
  void set_engine(::google::protobuf::uint32 value);

  // optional bool seasonal_rank = 14;
  bool has_seasonal_rank() const;
  void clear_seasonal_rank();
  static const int kSeasonalRankFieldNumber = 14;
  bool seasonal_rank() const;
  void set_seasonal_rank(bool value);

  // optional uint32 tourney_id = 15;
  bool has_tourney_id() const;
  void clear_tourney_id();
  static const int kTourneyIdFieldNumber = 15;
  ::google::protobuf::uint32 tourney_id() const;
  void set_tourney_id(::google::protobuf::uint32 value);

  // optional uint32 tourney_round = 16;
  bool has_tourney_round() const;
  void clear_tourney_round();
  static const int kTourneyRoundFieldNumber = 16;
  ::google::protobuf::uint32 tourney_round() const;
  void set_tourney_round(::google::protobuf::uint32 value);

  // optional uint32 tourney_tier = 17;
  bool has_tourney_tier() const;
  void clear_tourney_tier();
  static const int kTourneyTierFieldNumber = 17;
  ::google::protobuf::uint32 tourney_tier() const;
  void set_tourney_tier(::google::protobuf::uint32 value);

  // optional uint32 tourney_division = 18;
  bool has_tourney_division() const;
  void clear_tourney_division();
  static const int kTourneyDivisionFieldNumber = 18;
  ::google::protobuf::uint32 tourney_division() const;
  void set_tourney_division(::google::protobuf::uint32 value);

  // optional uint64 ugc_team_ui_logo = 21;
  bool has_ugc_team_ui_logo() const;
  void clear_ugc_team_ui_logo();
  static const int kUgcTeamUiLogoFieldNumber = 21;
  ::google::protobuf::uint64 ugc_team_ui_logo() const;
  void set_ugc_team_ui_logo(::google::protobuf::uint64 value);

  // optional uint32 team_id = 19;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 19;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr team_name_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 game_mode_;
  ::google::protobuf::int32 rank_change_;
  ::google::protobuf::uint32 previous_rank_;
  ::google::protobuf::uint32 lobby_type_;
  bool winner_;
  bool solo_rank_;
  bool abandon_;
  bool active_plus_subscription_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 engine_;
  bool seasonal_rank_;
  ::google::protobuf::uint32 tourney_id_;
  ::google::protobuf::uint32 tourney_round_;
  ::google::protobuf::uint32 tourney_tier_;
  ::google::protobuf::uint32 tourney_division_;
  ::google::protobuf::uint64 ugc_team_ui_logo_;
  ::google::protobuf::uint32 team_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPlayerMatchHistoryResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse) */ {
 public:
  CMsgDOTAGetPlayerMatchHistoryResponse();
  virtual ~CMsgDOTAGetPlayerMatchHistoryResponse();

  CMsgDOTAGetPlayerMatchHistoryResponse(const CMsgDOTAGetPlayerMatchHistoryResponse& from);

  inline CMsgDOTAGetPlayerMatchHistoryResponse& operator=(const CMsgDOTAGetPlayerMatchHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGetPlayerMatchHistoryResponse(CMsgDOTAGetPlayerMatchHistoryResponse&& from) noexcept
    : CMsgDOTAGetPlayerMatchHistoryResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGetPlayerMatchHistoryResponse& operator=(CMsgDOTAGetPlayerMatchHistoryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGetPlayerMatchHistoryResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGetPlayerMatchHistoryResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetPlayerMatchHistoryResponse*>(
               &_CMsgDOTAGetPlayerMatchHistoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    124;

  void Swap(CMsgDOTAGetPlayerMatchHistoryResponse* other);
  friend void swap(CMsgDOTAGetPlayerMatchHistoryResponse& a, CMsgDOTAGetPlayerMatchHistoryResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetPlayerMatchHistoryResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAGetPlayerMatchHistoryResponse>(nullptr);
  }

  CMsgDOTAGetPlayerMatchHistoryResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGetPlayerMatchHistoryResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGetPlayerMatchHistoryResponse& from);
  void MergeFrom(const CMsgDOTAGetPlayerMatchHistoryResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGetPlayerMatchHistoryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGetPlayerMatchHistoryResponse_Match Match;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match* mutable_matches(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match >*
      mutable_matches();
  const ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match& matches(int index) const;
  ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match* add_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match >&
      matches() const;

  // optional uint32 request_id = 2;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 2;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match > matches_;
  ::google::protobuf::uint32 request_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAStartDailyHeroChallenge final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAStartDailyHeroChallenge) */ {
 public:
  CMsgDOTAStartDailyHeroChallenge();
  virtual ~CMsgDOTAStartDailyHeroChallenge();

  CMsgDOTAStartDailyHeroChallenge(const CMsgDOTAStartDailyHeroChallenge& from);

  inline CMsgDOTAStartDailyHeroChallenge& operator=(const CMsgDOTAStartDailyHeroChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAStartDailyHeroChallenge(CMsgDOTAStartDailyHeroChallenge&& from) noexcept
    : CMsgDOTAStartDailyHeroChallenge() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAStartDailyHeroChallenge& operator=(CMsgDOTAStartDailyHeroChallenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAStartDailyHeroChallenge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAStartDailyHeroChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAStartDailyHeroChallenge*>(
               &_CMsgDOTAStartDailyHeroChallenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    125;

  void Swap(CMsgDOTAStartDailyHeroChallenge* other);
  friend void swap(CMsgDOTAStartDailyHeroChallenge& a, CMsgDOTAStartDailyHeroChallenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAStartDailyHeroChallenge* New() const final {
    return CreateMaybeMessage<CMsgDOTAStartDailyHeroChallenge>(nullptr);
  }

  CMsgDOTAStartDailyHeroChallenge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAStartDailyHeroChallenge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAStartDailyHeroChallenge& from);
  void MergeFrom(const CMsgDOTAStartDailyHeroChallenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAStartDailyHeroChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAStartDailyHeroChallenge)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCNotificationsRequest) */ {
 public:
  CMsgGCNotificationsRequest();
  virtual ~CMsgGCNotificationsRequest();

  CMsgGCNotificationsRequest(const CMsgGCNotificationsRequest& from);

  inline CMsgGCNotificationsRequest& operator=(const CMsgGCNotificationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCNotificationsRequest(CMsgGCNotificationsRequest&& from) noexcept
    : CMsgGCNotificationsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCNotificationsRequest& operator=(CMsgGCNotificationsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCNotificationsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCNotificationsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCNotificationsRequest*>(
               &_CMsgGCNotificationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    126;

  void Swap(CMsgGCNotificationsRequest* other);
  friend void swap(CMsgGCNotificationsRequest& a, CMsgGCNotificationsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCNotificationsRequest* New() const final {
    return CreateMaybeMessage<CMsgGCNotificationsRequest>(nullptr);
  }

  CMsgGCNotificationsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCNotificationsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCNotificationsRequest& from);
  void MergeFrom(const CMsgGCNotificationsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCNotificationsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCNotificationsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsResponse_Notification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCNotificationsResponse.Notification) */ {
 public:
  CMsgGCNotificationsResponse_Notification();
  virtual ~CMsgGCNotificationsResponse_Notification();

  CMsgGCNotificationsResponse_Notification(const CMsgGCNotificationsResponse_Notification& from);

  inline CMsgGCNotificationsResponse_Notification& operator=(const CMsgGCNotificationsResponse_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCNotificationsResponse_Notification(CMsgGCNotificationsResponse_Notification&& from) noexcept
    : CMsgGCNotificationsResponse_Notification() {
    *this = ::std::move(from);
  }

  inline CMsgGCNotificationsResponse_Notification& operator=(CMsgGCNotificationsResponse_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCNotificationsResponse_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCNotificationsResponse_Notification* internal_default_instance() {
    return reinterpret_cast<const CMsgGCNotificationsResponse_Notification*>(
               &_CMsgGCNotificationsResponse_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    127;

  void Swap(CMsgGCNotificationsResponse_Notification* other);
  friend void swap(CMsgGCNotificationsResponse_Notification& a, CMsgGCNotificationsResponse_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCNotificationsResponse_Notification* New() const final {
    return CreateMaybeMessage<CMsgGCNotificationsResponse_Notification>(nullptr);
  }

  CMsgGCNotificationsResponse_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCNotificationsResponse_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCNotificationsResponse_Notification& from);
  void MergeFrom(const CMsgGCNotificationsResponse_Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCNotificationsResponse_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 7;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 7;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 reference_a = 4;
  bool has_reference_a() const;
  void clear_reference_a();
  static const int kReferenceAFieldNumber = 4;
  ::google::protobuf::uint32 reference_a() const;
  void set_reference_a(::google::protobuf::uint32 value);

  // optional uint32 reference_b = 5;
  bool has_reference_b() const;
  void clear_reference_b();
  static const int kReferenceBFieldNumber = 5;
  ::google::protobuf::uint32 reference_b() const;
  void set_reference_b(::google::protobuf::uint32 value);

  // optional uint32 reference_c = 6;
  bool has_reference_c() const;
  void clear_reference_c();
  static const int kReferenceCFieldNumber = 6;
  ::google::protobuf::uint32 reference_c() const;
  void set_reference_c(::google::protobuf::uint32 value);

  // optional bool unread = 8;
  bool has_unread() const;
  void clear_unread();
  static const int kUnreadFieldNumber = 8;
  bool unread() const;
  void set_unread(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCNotificationsResponse.Notification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 reference_a_;
  ::google::protobuf::uint32 reference_b_;
  ::google::protobuf::uint32 reference_c_;
  bool unread_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCNotificationsResponse) */ {
 public:
  CMsgGCNotificationsResponse();
  virtual ~CMsgGCNotificationsResponse();

  CMsgGCNotificationsResponse(const CMsgGCNotificationsResponse& from);

  inline CMsgGCNotificationsResponse& operator=(const CMsgGCNotificationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCNotificationsResponse(CMsgGCNotificationsResponse&& from) noexcept
    : CMsgGCNotificationsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCNotificationsResponse& operator=(CMsgGCNotificationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCNotificationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCNotificationsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCNotificationsResponse*>(
               &_CMsgGCNotificationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    128;

  void Swap(CMsgGCNotificationsResponse* other);
  friend void swap(CMsgGCNotificationsResponse& a, CMsgGCNotificationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCNotificationsResponse* New() const final {
    return CreateMaybeMessage<CMsgGCNotificationsResponse>(nullptr);
  }

  CMsgGCNotificationsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCNotificationsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCNotificationsResponse& from);
  void MergeFrom(const CMsgGCNotificationsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCNotificationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCNotificationsResponse_Notification Notification;

  typedef CMsgGCNotificationsResponse_EResult EResult;
  static const EResult SUCCESS =
    CMsgGCNotificationsResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED =
    CMsgGCNotificationsResponse_EResult_ERROR_UNSPECIFIED;
  static inline bool EResult_IsValid(int value) {
    return CMsgGCNotificationsResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgGCNotificationsResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgGCNotificationsResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgGCNotificationsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgGCNotificationsResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgGCNotificationsResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgGCNotificationsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCNotificationsResponse.Notification notifications = 2;
  int notifications_size() const;
  void clear_notifications();
  static const int kNotificationsFieldNumber = 2;
  ::proto::dota::CMsgGCNotificationsResponse_Notification* mutable_notifications(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCNotificationsResponse_Notification >*
      mutable_notifications();
  const ::proto::dota::CMsgGCNotificationsResponse_Notification& notifications(int index) const;
  ::proto::dota::CMsgGCNotificationsResponse_Notification* add_notifications();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCNotificationsResponse_Notification >&
      notifications() const;

  // optional .proto.dota.CMsgGCNotificationsResponse.EResult result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgGCNotificationsResponse_EResult result() const;
  void set_result(::proto::dota::CMsgGCNotificationsResponse_EResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCNotificationsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCNotificationsResponse_Notification > notifications_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsMarkReadRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCNotificationsMarkReadRequest) */ {
 public:
  CMsgGCNotificationsMarkReadRequest();
  virtual ~CMsgGCNotificationsMarkReadRequest();

  CMsgGCNotificationsMarkReadRequest(const CMsgGCNotificationsMarkReadRequest& from);

  inline CMsgGCNotificationsMarkReadRequest& operator=(const CMsgGCNotificationsMarkReadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCNotificationsMarkReadRequest(CMsgGCNotificationsMarkReadRequest&& from) noexcept
    : CMsgGCNotificationsMarkReadRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCNotificationsMarkReadRequest& operator=(CMsgGCNotificationsMarkReadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCNotificationsMarkReadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCNotificationsMarkReadRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCNotificationsMarkReadRequest*>(
               &_CMsgGCNotificationsMarkReadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    129;

  void Swap(CMsgGCNotificationsMarkReadRequest* other);
  friend void swap(CMsgGCNotificationsMarkReadRequest& a, CMsgGCNotificationsMarkReadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCNotificationsMarkReadRequest* New() const final {
    return CreateMaybeMessage<CMsgGCNotificationsMarkReadRequest>(nullptr);
  }

  CMsgGCNotificationsMarkReadRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCNotificationsMarkReadRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCNotificationsMarkReadRequest& from);
  void MergeFrom(const CMsgGCNotificationsMarkReadRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCNotificationsMarkReadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCNotificationsMarkReadRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCMarkNotificationListRead final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCMarkNotificationListRead) */ {
 public:
  CMsgClientToGCMarkNotificationListRead();
  virtual ~CMsgClientToGCMarkNotificationListRead();

  CMsgClientToGCMarkNotificationListRead(const CMsgClientToGCMarkNotificationListRead& from);

  inline CMsgClientToGCMarkNotificationListRead& operator=(const CMsgClientToGCMarkNotificationListRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCMarkNotificationListRead(CMsgClientToGCMarkNotificationListRead&& from) noexcept
    : CMsgClientToGCMarkNotificationListRead() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCMarkNotificationListRead& operator=(CMsgClientToGCMarkNotificationListRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCMarkNotificationListRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCMarkNotificationListRead* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCMarkNotificationListRead*>(
               &_CMsgClientToGCMarkNotificationListRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    130;

  void Swap(CMsgClientToGCMarkNotificationListRead* other);
  friend void swap(CMsgClientToGCMarkNotificationListRead& a, CMsgClientToGCMarkNotificationListRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCMarkNotificationListRead* New() const final {
    return CreateMaybeMessage<CMsgClientToGCMarkNotificationListRead>(nullptr);
  }

  CMsgClientToGCMarkNotificationListRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCMarkNotificationListRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCMarkNotificationListRead& from);
  void MergeFrom(const CMsgClientToGCMarkNotificationListRead& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCMarkNotificationListRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 notification_ids = 1;
  int notification_ids_size() const;
  void clear_notification_ids();
  static const int kNotificationIdsFieldNumber = 1;
  ::google::protobuf::uint64 notification_ids(int index) const;
  void set_notification_ids(int index, ::google::protobuf::uint64 value);
  void add_notification_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      notification_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_notification_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCMarkNotificationListRead)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > notification_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoRequest_PlayerInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo) */ {
 public:
  CMsgGCPlayerInfoRequest_PlayerInfo();
  virtual ~CMsgGCPlayerInfoRequest_PlayerInfo();

  CMsgGCPlayerInfoRequest_PlayerInfo(const CMsgGCPlayerInfoRequest_PlayerInfo& from);

  inline CMsgGCPlayerInfoRequest_PlayerInfo& operator=(const CMsgGCPlayerInfoRequest_PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCPlayerInfoRequest_PlayerInfo(CMsgGCPlayerInfoRequest_PlayerInfo&& from) noexcept
    : CMsgGCPlayerInfoRequest_PlayerInfo() {
    *this = ::std::move(from);
  }

  inline CMsgGCPlayerInfoRequest_PlayerInfo& operator=(CMsgGCPlayerInfoRequest_PlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCPlayerInfoRequest_PlayerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCPlayerInfoRequest_PlayerInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGCPlayerInfoRequest_PlayerInfo*>(
               &_CMsgGCPlayerInfoRequest_PlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    131;

  void Swap(CMsgGCPlayerInfoRequest_PlayerInfo* other);
  friend void swap(CMsgGCPlayerInfoRequest_PlayerInfo& a, CMsgGCPlayerInfoRequest_PlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCPlayerInfoRequest_PlayerInfo* New() const final {
    return CreateMaybeMessage<CMsgGCPlayerInfoRequest_PlayerInfo>(nullptr);
  }

  CMsgGCPlayerInfoRequest_PlayerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCPlayerInfoRequest_PlayerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCPlayerInfoRequest_PlayerInfo& from);
  void MergeFrom(const CMsgGCPlayerInfoRequest_PlayerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCPlayerInfoRequest_PlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 timestamp_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCPlayerInfoRequest) */ {
 public:
  CMsgGCPlayerInfoRequest();
  virtual ~CMsgGCPlayerInfoRequest();

  CMsgGCPlayerInfoRequest(const CMsgGCPlayerInfoRequest& from);

  inline CMsgGCPlayerInfoRequest& operator=(const CMsgGCPlayerInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCPlayerInfoRequest(CMsgGCPlayerInfoRequest&& from) noexcept
    : CMsgGCPlayerInfoRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCPlayerInfoRequest& operator=(CMsgGCPlayerInfoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCPlayerInfoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCPlayerInfoRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCPlayerInfoRequest*>(
               &_CMsgGCPlayerInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    132;

  void Swap(CMsgGCPlayerInfoRequest* other);
  friend void swap(CMsgGCPlayerInfoRequest& a, CMsgGCPlayerInfoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCPlayerInfoRequest* New() const final {
    return CreateMaybeMessage<CMsgGCPlayerInfoRequest>(nullptr);
  }

  CMsgGCPlayerInfoRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCPlayerInfoRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCPlayerInfoRequest& from);
  void MergeFrom(const CMsgGCPlayerInfoRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCPlayerInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCPlayerInfoRequest_PlayerInfo PlayerInfo;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo player_infos = 1;
  int player_infos_size() const;
  void clear_player_infos();
  static const int kPlayerInfosFieldNumber = 1;
  ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo* mutable_player_infos(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo >*
      mutable_player_infos();
  const ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo& player_infos(int index) const;
  ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo* add_player_infos();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo >&
      player_infos() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCPlayerInfoRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo > player_infos_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoSubmit final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCPlayerInfoSubmit) */ {
 public:
  CMsgGCPlayerInfoSubmit();
  virtual ~CMsgGCPlayerInfoSubmit();

  CMsgGCPlayerInfoSubmit(const CMsgGCPlayerInfoSubmit& from);

  inline CMsgGCPlayerInfoSubmit& operator=(const CMsgGCPlayerInfoSubmit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCPlayerInfoSubmit(CMsgGCPlayerInfoSubmit&& from) noexcept
    : CMsgGCPlayerInfoSubmit() {
    *this = ::std::move(from);
  }

  inline CMsgGCPlayerInfoSubmit& operator=(CMsgGCPlayerInfoSubmit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCPlayerInfoSubmit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCPlayerInfoSubmit* internal_default_instance() {
    return reinterpret_cast<const CMsgGCPlayerInfoSubmit*>(
               &_CMsgGCPlayerInfoSubmit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    133;

  void Swap(CMsgGCPlayerInfoSubmit* other);
  friend void swap(CMsgGCPlayerInfoSubmit& a, CMsgGCPlayerInfoSubmit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCPlayerInfoSubmit* New() const final {
    return CreateMaybeMessage<CMsgGCPlayerInfoSubmit>(nullptr);
  }

  CMsgGCPlayerInfoSubmit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCPlayerInfoSubmit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCPlayerInfoSubmit& from);
  void MergeFrom(const CMsgGCPlayerInfoSubmit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCPlayerInfoSubmit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string country_code = 2;
  bool has_country_code() const;
  void clear_country_code();
  static const int kCountryCodeFieldNumber = 2;
  const ::std::string& country_code() const;
  void set_country_code(const ::std::string& value);
  #if LANG_CXX11
  void set_country_code(::std::string&& value);
  #endif
  void set_country_code(const char* value);
  void set_country_code(const char* value, size_t size);
  ::std::string* mutable_country_code();
  ::std::string* release_country_code();
  void set_allocated_country_code(::std::string* country_code);

  // optional string sponsor = 5;
  bool has_sponsor() const;
  void clear_sponsor();
  static const int kSponsorFieldNumber = 5;
  const ::std::string& sponsor() const;
  void set_sponsor(const ::std::string& value);
  #if LANG_CXX11
  void set_sponsor(::std::string&& value);
  #endif
  void set_sponsor(const char* value);
  void set_sponsor(const char* value, size_t size);
  ::std::string* mutable_sponsor();
  ::std::string* release_sponsor();
  void set_allocated_sponsor(::std::string* sponsor);

  // optional uint32 fantasy_role = 3;
  bool has_fantasy_role() const;
  void clear_fantasy_role();
  static const int kFantasyRoleFieldNumber = 3;
  ::google::protobuf::uint32 fantasy_role() const;
  void set_fantasy_role(::google::protobuf::uint32 value);

  // optional uint32 team_id = 4;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 4;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCPlayerInfoSubmit)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr country_code_;
  ::google::protobuf::internal::ArenaStringPtr sponsor_;
  ::google::protobuf::uint32 fantasy_role_;
  ::google::protobuf::uint32 team_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoSubmitResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCPlayerInfoSubmitResponse) */ {
 public:
  CMsgGCPlayerInfoSubmitResponse();
  virtual ~CMsgGCPlayerInfoSubmitResponse();

  CMsgGCPlayerInfoSubmitResponse(const CMsgGCPlayerInfoSubmitResponse& from);

  inline CMsgGCPlayerInfoSubmitResponse& operator=(const CMsgGCPlayerInfoSubmitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCPlayerInfoSubmitResponse(CMsgGCPlayerInfoSubmitResponse&& from) noexcept
    : CMsgGCPlayerInfoSubmitResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCPlayerInfoSubmitResponse& operator=(CMsgGCPlayerInfoSubmitResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCPlayerInfoSubmitResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCPlayerInfoSubmitResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCPlayerInfoSubmitResponse*>(
               &_CMsgGCPlayerInfoSubmitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    134;

  void Swap(CMsgGCPlayerInfoSubmitResponse* other);
  friend void swap(CMsgGCPlayerInfoSubmitResponse& a, CMsgGCPlayerInfoSubmitResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCPlayerInfoSubmitResponse* New() const final {
    return CreateMaybeMessage<CMsgGCPlayerInfoSubmitResponse>(nullptr);
  }

  CMsgGCPlayerInfoSubmitResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCPlayerInfoSubmitResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCPlayerInfoSubmitResponse& from);
  void MergeFrom(const CMsgGCPlayerInfoSubmitResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCPlayerInfoSubmitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCPlayerInfoSubmitResponse_EResult EResult;
  static const EResult SUCCESS =
    CMsgGCPlayerInfoSubmitResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED =
    CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_UNSPECIFIED;
  static const EResult ERROR_INFO_LOCKED =
    CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_INFO_LOCKED;
  static inline bool EResult_IsValid(int value) {
    return CMsgGCPlayerInfoSubmitResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgGCPlayerInfoSubmitResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgGCPlayerInfoSubmitResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgGCPlayerInfoSubmitResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgGCPlayerInfoSubmitResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgGCPlayerInfoSubmitResponse.EResult result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult result() const;
  void set_result(::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCPlayerInfoSubmitResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientProvideSurveyResult_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientProvideSurveyResult.Response) */ {
 public:
  CMsgClientProvideSurveyResult_Response();
  virtual ~CMsgClientProvideSurveyResult_Response();

  CMsgClientProvideSurveyResult_Response(const CMsgClientProvideSurveyResult_Response& from);

  inline CMsgClientProvideSurveyResult_Response& operator=(const CMsgClientProvideSurveyResult_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientProvideSurveyResult_Response(CMsgClientProvideSurveyResult_Response&& from) noexcept
    : CMsgClientProvideSurveyResult_Response() {
    *this = ::std::move(from);
  }

  inline CMsgClientProvideSurveyResult_Response& operator=(CMsgClientProvideSurveyResult_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientProvideSurveyResult_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientProvideSurveyResult_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgClientProvideSurveyResult_Response*>(
               &_CMsgClientProvideSurveyResult_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    135;

  void Swap(CMsgClientProvideSurveyResult_Response* other);
  friend void swap(CMsgClientProvideSurveyResult_Response& a, CMsgClientProvideSurveyResult_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientProvideSurveyResult_Response* New() const final {
    return CreateMaybeMessage<CMsgClientProvideSurveyResult_Response>(nullptr);
  }

  CMsgClientProvideSurveyResult_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientProvideSurveyResult_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientProvideSurveyResult_Response& from);
  void MergeFrom(const CMsgClientProvideSurveyResult_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientProvideSurveyResult_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 question_id = 1;
  bool has_question_id() const;
  void clear_question_id();
  static const int kQuestionIdFieldNumber = 1;
  ::google::protobuf::uint32 question_id() const;
  void set_question_id(::google::protobuf::uint32 value);

  // optional uint32 survey_value = 2;
  bool has_survey_value() const;
  void clear_survey_value();
  static const int kSurveyValueFieldNumber = 2;
  ::google::protobuf::uint32 survey_value() const;
  void set_survey_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientProvideSurveyResult.Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 question_id_;
  ::google::protobuf::uint32 survey_value_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientProvideSurveyResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientProvideSurveyResult) */ {
 public:
  CMsgClientProvideSurveyResult();
  virtual ~CMsgClientProvideSurveyResult();

  CMsgClientProvideSurveyResult(const CMsgClientProvideSurveyResult& from);

  inline CMsgClientProvideSurveyResult& operator=(const CMsgClientProvideSurveyResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientProvideSurveyResult(CMsgClientProvideSurveyResult&& from) noexcept
    : CMsgClientProvideSurveyResult() {
    *this = ::std::move(from);
  }

  inline CMsgClientProvideSurveyResult& operator=(CMsgClientProvideSurveyResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientProvideSurveyResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientProvideSurveyResult* internal_default_instance() {
    return reinterpret_cast<const CMsgClientProvideSurveyResult*>(
               &_CMsgClientProvideSurveyResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    136;

  void Swap(CMsgClientProvideSurveyResult* other);
  friend void swap(CMsgClientProvideSurveyResult& a, CMsgClientProvideSurveyResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientProvideSurveyResult* New() const final {
    return CreateMaybeMessage<CMsgClientProvideSurveyResult>(nullptr);
  }

  CMsgClientProvideSurveyResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientProvideSurveyResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientProvideSurveyResult& from);
  void MergeFrom(const CMsgClientProvideSurveyResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientProvideSurveyResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientProvideSurveyResult_Response Response;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientProvideSurveyResult.Response responses = 1;
  int responses_size() const;
  void clear_responses();
  static const int kResponsesFieldNumber = 1;
  ::proto::dota::CMsgClientProvideSurveyResult_Response* mutable_responses(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientProvideSurveyResult_Response >*
      mutable_responses();
  const ::proto::dota::CMsgClientProvideSurveyResult_Response& responses(int index) const;
  ::proto::dota::CMsgClientProvideSurveyResult_Response* add_responses();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientProvideSurveyResult_Response >&
      responses() const;

  // optional uint64 survey_key = 2;
  bool has_survey_key() const;
  void clear_survey_key();
  static const int kSurveyKeyFieldNumber = 2;
  ::google::protobuf::uint64 survey_key() const;
  void set_survey_key(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientProvideSurveyResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientProvideSurveyResult_Response > responses_;
  ::google::protobuf::uint64 survey_key_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAEmoticonAccessSDO final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAEmoticonAccessSDO) */ {
 public:
  CMsgDOTAEmoticonAccessSDO();
  virtual ~CMsgDOTAEmoticonAccessSDO();

  CMsgDOTAEmoticonAccessSDO(const CMsgDOTAEmoticonAccessSDO& from);

  inline CMsgDOTAEmoticonAccessSDO& operator=(const CMsgDOTAEmoticonAccessSDO& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAEmoticonAccessSDO(CMsgDOTAEmoticonAccessSDO&& from) noexcept
    : CMsgDOTAEmoticonAccessSDO() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAEmoticonAccessSDO& operator=(CMsgDOTAEmoticonAccessSDO&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAEmoticonAccessSDO& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAEmoticonAccessSDO* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAEmoticonAccessSDO*>(
               &_CMsgDOTAEmoticonAccessSDO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    137;

  void Swap(CMsgDOTAEmoticonAccessSDO* other);
  friend void swap(CMsgDOTAEmoticonAccessSDO& a, CMsgDOTAEmoticonAccessSDO& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAEmoticonAccessSDO* New() const final {
    return CreateMaybeMessage<CMsgDOTAEmoticonAccessSDO>(nullptr);
  }

  CMsgDOTAEmoticonAccessSDO* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAEmoticonAccessSDO>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAEmoticonAccessSDO& from);
  void MergeFrom(const CMsgDOTAEmoticonAccessSDO& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAEmoticonAccessSDO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes unlocked_emoticons = 2;
  bool has_unlocked_emoticons() const;
  void clear_unlocked_emoticons();
  static const int kUnlockedEmoticonsFieldNumber = 2;
  const ::std::string& unlocked_emoticons() const;
  void set_unlocked_emoticons(const ::std::string& value);
  #if LANG_CXX11
  void set_unlocked_emoticons(::std::string&& value);
  #endif
  void set_unlocked_emoticons(const char* value);
  void set_unlocked_emoticons(const void* value, size_t size);
  ::std::string* mutable_unlocked_emoticons();
  ::std::string* release_unlocked_emoticons();
  void set_allocated_unlocked_emoticons(::std::string* unlocked_emoticons);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAEmoticonAccessSDO)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr unlocked_emoticons_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCEmoticonDataRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCEmoticonDataRequest) */ {
 public:
  CMsgClientToGCEmoticonDataRequest();
  virtual ~CMsgClientToGCEmoticonDataRequest();

  CMsgClientToGCEmoticonDataRequest(const CMsgClientToGCEmoticonDataRequest& from);

  inline CMsgClientToGCEmoticonDataRequest& operator=(const CMsgClientToGCEmoticonDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCEmoticonDataRequest(CMsgClientToGCEmoticonDataRequest&& from) noexcept
    : CMsgClientToGCEmoticonDataRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCEmoticonDataRequest& operator=(CMsgClientToGCEmoticonDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCEmoticonDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCEmoticonDataRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCEmoticonDataRequest*>(
               &_CMsgClientToGCEmoticonDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    138;

  void Swap(CMsgClientToGCEmoticonDataRequest* other);
  friend void swap(CMsgClientToGCEmoticonDataRequest& a, CMsgClientToGCEmoticonDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCEmoticonDataRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCEmoticonDataRequest>(nullptr);
  }

  CMsgClientToGCEmoticonDataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCEmoticonDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCEmoticonDataRequest& from);
  void MergeFrom(const CMsgClientToGCEmoticonDataRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCEmoticonDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCEmoticonDataRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientEmoticonData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientEmoticonData) */ {
 public:
  CMsgGCToClientEmoticonData();
  virtual ~CMsgGCToClientEmoticonData();

  CMsgGCToClientEmoticonData(const CMsgGCToClientEmoticonData& from);

  inline CMsgGCToClientEmoticonData& operator=(const CMsgGCToClientEmoticonData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientEmoticonData(CMsgGCToClientEmoticonData&& from) noexcept
    : CMsgGCToClientEmoticonData() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientEmoticonData& operator=(CMsgGCToClientEmoticonData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientEmoticonData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientEmoticonData* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientEmoticonData*>(
               &_CMsgGCToClientEmoticonData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    139;

  void Swap(CMsgGCToClientEmoticonData* other);
  friend void swap(CMsgGCToClientEmoticonData& a, CMsgGCToClientEmoticonData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientEmoticonData* New() const final {
    return CreateMaybeMessage<CMsgGCToClientEmoticonData>(nullptr);
  }

  CMsgGCToClientEmoticonData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientEmoticonData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientEmoticonData& from);
  void MergeFrom(const CMsgGCToClientEmoticonData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientEmoticonData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAEmoticonAccessSDO emoticon_access = 1;
  bool has_emoticon_access() const;
  void clear_emoticon_access();
  static const int kEmoticonAccessFieldNumber = 1;
  const ::proto::dota::CMsgDOTAEmoticonAccessSDO& emoticon_access() const;
  ::proto::dota::CMsgDOTAEmoticonAccessSDO* release_emoticon_access();
  ::proto::dota::CMsgDOTAEmoticonAccessSDO* mutable_emoticon_access();
  void set_allocated_emoticon_access(::proto::dota::CMsgDOTAEmoticonAccessSDO* emoticon_access);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientEmoticonData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTAEmoticonAccessSDO* emoticon_access_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCTrackDialogResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCTrackDialogResult) */ {
 public:
  CMsgClientToGCTrackDialogResult();
  virtual ~CMsgClientToGCTrackDialogResult();

  CMsgClientToGCTrackDialogResult(const CMsgClientToGCTrackDialogResult& from);

  inline CMsgClientToGCTrackDialogResult& operator=(const CMsgClientToGCTrackDialogResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCTrackDialogResult(CMsgClientToGCTrackDialogResult&& from) noexcept
    : CMsgClientToGCTrackDialogResult() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCTrackDialogResult& operator=(CMsgClientToGCTrackDialogResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCTrackDialogResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCTrackDialogResult* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCTrackDialogResult*>(
               &_CMsgClientToGCTrackDialogResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    140;

  void Swap(CMsgClientToGCTrackDialogResult* other);
  friend void swap(CMsgClientToGCTrackDialogResult& a, CMsgClientToGCTrackDialogResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCTrackDialogResult* New() const final {
    return CreateMaybeMessage<CMsgClientToGCTrackDialogResult>(nullptr);
  }

  CMsgClientToGCTrackDialogResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCTrackDialogResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCTrackDialogResult& from);
  void MergeFrom(const CMsgClientToGCTrackDialogResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCTrackDialogResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dialog_id = 1;
  bool has_dialog_id() const;
  void clear_dialog_id();
  static const int kDialogIdFieldNumber = 1;
  ::google::protobuf::uint32 dialog_id() const;
  void set_dialog_id(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCTrackDialogResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 dialog_id_;
  ::google::protobuf::uint32 value_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientTournamentItemDrop final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientTournamentItemDrop) */ {
 public:
  CMsgGCToClientTournamentItemDrop();
  virtual ~CMsgGCToClientTournamentItemDrop();

  CMsgGCToClientTournamentItemDrop(const CMsgGCToClientTournamentItemDrop& from);

  inline CMsgGCToClientTournamentItemDrop& operator=(const CMsgGCToClientTournamentItemDrop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientTournamentItemDrop(CMsgGCToClientTournamentItemDrop&& from) noexcept
    : CMsgGCToClientTournamentItemDrop() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientTournamentItemDrop& operator=(CMsgGCToClientTournamentItemDrop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientTournamentItemDrop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientTournamentItemDrop* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientTournamentItemDrop*>(
               &_CMsgGCToClientTournamentItemDrop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    141;

  void Swap(CMsgGCToClientTournamentItemDrop* other);
  friend void swap(CMsgGCToClientTournamentItemDrop& a, CMsgGCToClientTournamentItemDrop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientTournamentItemDrop* New() const final {
    return CreateMaybeMessage<CMsgGCToClientTournamentItemDrop>(nullptr);
  }

  CMsgGCToClientTournamentItemDrop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientTournamentItemDrop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientTournamentItemDrop& from);
  void MergeFrom(const CMsgGCToClientTournamentItemDrop& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientTournamentItemDrop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 item_def = 1;
  bool has_item_def() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 1;
  ::google::protobuf::uint32 item_def() const;
  void set_item_def(::google::protobuf::uint32 value);

  // optional uint32 event_type = 2;
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 2;
  ::google::protobuf::uint32 event_type() const;
  void set_event_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientTournamentItemDrop)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 event_type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetAdditionalEquips final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSetAdditionalEquips) */ {
 public:
  CMsgClientToGCSetAdditionalEquips();
  virtual ~CMsgClientToGCSetAdditionalEquips();

  CMsgClientToGCSetAdditionalEquips(const CMsgClientToGCSetAdditionalEquips& from);

  inline CMsgClientToGCSetAdditionalEquips& operator=(const CMsgClientToGCSetAdditionalEquips& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCSetAdditionalEquips(CMsgClientToGCSetAdditionalEquips&& from) noexcept
    : CMsgClientToGCSetAdditionalEquips() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetAdditionalEquips& operator=(CMsgClientToGCSetAdditionalEquips&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCSetAdditionalEquips& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCSetAdditionalEquips* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetAdditionalEquips*>(
               &_CMsgClientToGCSetAdditionalEquips_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    142;

  void Swap(CMsgClientToGCSetAdditionalEquips* other);
  friend void swap(CMsgClientToGCSetAdditionalEquips& a, CMsgClientToGCSetAdditionalEquips& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSetAdditionalEquips* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSetAdditionalEquips>(nullptr);
  }

  CMsgClientToGCSetAdditionalEquips* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSetAdditionalEquips>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCSetAdditionalEquips& from);
  void MergeFrom(const CMsgClientToGCSetAdditionalEquips& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetAdditionalEquips* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CAdditionalEquipSlot equips = 1;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 1;
  ::proto::dota::CAdditionalEquipSlot* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >*
      mutable_equips();
  const ::proto::dota::CAdditionalEquipSlot& equips(int index) const;
  ::proto::dota::CAdditionalEquipSlot* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >&
      equips() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSetAdditionalEquips)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot > equips_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetAdditionalEquipsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSetAdditionalEquipsResponse) */ {
 public:
  CMsgClientToGCSetAdditionalEquipsResponse();
  virtual ~CMsgClientToGCSetAdditionalEquipsResponse();

  CMsgClientToGCSetAdditionalEquipsResponse(const CMsgClientToGCSetAdditionalEquipsResponse& from);

  inline CMsgClientToGCSetAdditionalEquipsResponse& operator=(const CMsgClientToGCSetAdditionalEquipsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCSetAdditionalEquipsResponse(CMsgClientToGCSetAdditionalEquipsResponse&& from) noexcept
    : CMsgClientToGCSetAdditionalEquipsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetAdditionalEquipsResponse& operator=(CMsgClientToGCSetAdditionalEquipsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCSetAdditionalEquipsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCSetAdditionalEquipsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetAdditionalEquipsResponse*>(
               &_CMsgClientToGCSetAdditionalEquipsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    143;

  void Swap(CMsgClientToGCSetAdditionalEquipsResponse* other);
  friend void swap(CMsgClientToGCSetAdditionalEquipsResponse& a, CMsgClientToGCSetAdditionalEquipsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSetAdditionalEquipsResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSetAdditionalEquipsResponse>(nullptr);
  }

  CMsgClientToGCSetAdditionalEquipsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSetAdditionalEquipsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCSetAdditionalEquipsResponse& from);
  void MergeFrom(const CMsgClientToGCSetAdditionalEquipsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetAdditionalEquipsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSetAdditionalEquipsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAdditionalEquips final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetAdditionalEquips) */ {
 public:
  CMsgClientToGCGetAdditionalEquips();
  virtual ~CMsgClientToGCGetAdditionalEquips();

  CMsgClientToGCGetAdditionalEquips(const CMsgClientToGCGetAdditionalEquips& from);

  inline CMsgClientToGCGetAdditionalEquips& operator=(const CMsgClientToGCGetAdditionalEquips& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetAdditionalEquips(CMsgClientToGCGetAdditionalEquips&& from) noexcept
    : CMsgClientToGCGetAdditionalEquips() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAdditionalEquips& operator=(CMsgClientToGCGetAdditionalEquips&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetAdditionalEquips& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetAdditionalEquips* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAdditionalEquips*>(
               &_CMsgClientToGCGetAdditionalEquips_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    144;

  void Swap(CMsgClientToGCGetAdditionalEquips* other);
  friend void swap(CMsgClientToGCGetAdditionalEquips& a, CMsgClientToGCGetAdditionalEquips& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAdditionalEquips* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetAdditionalEquips>(nullptr);
  }

  CMsgClientToGCGetAdditionalEquips* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAdditionalEquips>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetAdditionalEquips& from);
  void MergeFrom(const CMsgClientToGCGetAdditionalEquips& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAdditionalEquips* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetAdditionalEquips)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAdditionalEquipsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse) */ {
 public:
  CMsgClientToGCGetAdditionalEquipsResponse();
  virtual ~CMsgClientToGCGetAdditionalEquipsResponse();

  CMsgClientToGCGetAdditionalEquipsResponse(const CMsgClientToGCGetAdditionalEquipsResponse& from);

  inline CMsgClientToGCGetAdditionalEquipsResponse& operator=(const CMsgClientToGCGetAdditionalEquipsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetAdditionalEquipsResponse(CMsgClientToGCGetAdditionalEquipsResponse&& from) noexcept
    : CMsgClientToGCGetAdditionalEquipsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAdditionalEquipsResponse& operator=(CMsgClientToGCGetAdditionalEquipsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetAdditionalEquipsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetAdditionalEquipsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAdditionalEquipsResponse*>(
               &_CMsgClientToGCGetAdditionalEquipsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    145;

  void Swap(CMsgClientToGCGetAdditionalEquipsResponse* other);
  friend void swap(CMsgClientToGCGetAdditionalEquipsResponse& a, CMsgClientToGCGetAdditionalEquipsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAdditionalEquipsResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetAdditionalEquipsResponse>(nullptr);
  }

  CMsgClientToGCGetAdditionalEquipsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAdditionalEquipsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetAdditionalEquipsResponse& from);
  void MergeFrom(const CMsgClientToGCGetAdditionalEquipsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAdditionalEquipsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CAdditionalEquipSlot equips = 1;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 1;
  ::proto::dota::CAdditionalEquipSlot* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >*
      mutable_equips();
  const ::proto::dota::CAdditionalEquipSlot& equips(int index) const;
  ::proto::dota::CAdditionalEquipSlot* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >&
      equips() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot > equips_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroOrder final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetAllHeroOrder) */ {
 public:
  CMsgClientToGCGetAllHeroOrder();
  virtual ~CMsgClientToGCGetAllHeroOrder();

  CMsgClientToGCGetAllHeroOrder(const CMsgClientToGCGetAllHeroOrder& from);

  inline CMsgClientToGCGetAllHeroOrder& operator=(const CMsgClientToGCGetAllHeroOrder& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetAllHeroOrder(CMsgClientToGCGetAllHeroOrder&& from) noexcept
    : CMsgClientToGCGetAllHeroOrder() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAllHeroOrder& operator=(CMsgClientToGCGetAllHeroOrder&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetAllHeroOrder& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetAllHeroOrder* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAllHeroOrder*>(
               &_CMsgClientToGCGetAllHeroOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    146;

  void Swap(CMsgClientToGCGetAllHeroOrder* other);
  friend void swap(CMsgClientToGCGetAllHeroOrder& a, CMsgClientToGCGetAllHeroOrder& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAllHeroOrder* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetAllHeroOrder>(nullptr);
  }

  CMsgClientToGCGetAllHeroOrder* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAllHeroOrder>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetAllHeroOrder& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroOrder& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAllHeroOrder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetAllHeroOrder)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroOrderResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetAllHeroOrderResponse) */ {
 public:
  CMsgClientToGCGetAllHeroOrderResponse();
  virtual ~CMsgClientToGCGetAllHeroOrderResponse();

  CMsgClientToGCGetAllHeroOrderResponse(const CMsgClientToGCGetAllHeroOrderResponse& from);

  inline CMsgClientToGCGetAllHeroOrderResponse& operator=(const CMsgClientToGCGetAllHeroOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetAllHeroOrderResponse(CMsgClientToGCGetAllHeroOrderResponse&& from) noexcept
    : CMsgClientToGCGetAllHeroOrderResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAllHeroOrderResponse& operator=(CMsgClientToGCGetAllHeroOrderResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetAllHeroOrderResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetAllHeroOrderResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAllHeroOrderResponse*>(
               &_CMsgClientToGCGetAllHeroOrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    147;

  void Swap(CMsgClientToGCGetAllHeroOrderResponse* other);
  friend void swap(CMsgClientToGCGetAllHeroOrderResponse& a, CMsgClientToGCGetAllHeroOrderResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAllHeroOrderResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetAllHeroOrderResponse>(nullptr);
  }

  CMsgClientToGCGetAllHeroOrderResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAllHeroOrderResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetAllHeroOrderResponse& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroOrderResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAllHeroOrderResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 hero_ids = 1;
  int hero_ids_size() const;
  void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 1;
  ::google::protobuf::uint32 hero_ids(int index) const;
  void set_hero_ids(int index, ::google::protobuf::uint32 value);
  void add_hero_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetAllHeroOrderResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroProgress final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetAllHeroProgress) */ {
 public:
  CMsgClientToGCGetAllHeroProgress();
  virtual ~CMsgClientToGCGetAllHeroProgress();

  CMsgClientToGCGetAllHeroProgress(const CMsgClientToGCGetAllHeroProgress& from);

  inline CMsgClientToGCGetAllHeroProgress& operator=(const CMsgClientToGCGetAllHeroProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetAllHeroProgress(CMsgClientToGCGetAllHeroProgress&& from) noexcept
    : CMsgClientToGCGetAllHeroProgress() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAllHeroProgress& operator=(CMsgClientToGCGetAllHeroProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetAllHeroProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetAllHeroProgress* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAllHeroProgress*>(
               &_CMsgClientToGCGetAllHeroProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    148;

  void Swap(CMsgClientToGCGetAllHeroProgress* other);
  friend void swap(CMsgClientToGCGetAllHeroProgress& a, CMsgClientToGCGetAllHeroProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAllHeroProgress* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetAllHeroProgress>(nullptr);
  }

  CMsgClientToGCGetAllHeroProgress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAllHeroProgress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetAllHeroProgress& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAllHeroProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetAllHeroProgress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroProgressResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetAllHeroProgressResponse) */ {
 public:
  CMsgClientToGCGetAllHeroProgressResponse();
  virtual ~CMsgClientToGCGetAllHeroProgressResponse();

  CMsgClientToGCGetAllHeroProgressResponse(const CMsgClientToGCGetAllHeroProgressResponse& from);

  inline CMsgClientToGCGetAllHeroProgressResponse& operator=(const CMsgClientToGCGetAllHeroProgressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetAllHeroProgressResponse(CMsgClientToGCGetAllHeroProgressResponse&& from) noexcept
    : CMsgClientToGCGetAllHeroProgressResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAllHeroProgressResponse& operator=(CMsgClientToGCGetAllHeroProgressResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetAllHeroProgressResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetAllHeroProgressResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAllHeroProgressResponse*>(
               &_CMsgClientToGCGetAllHeroProgressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    149;

  void Swap(CMsgClientToGCGetAllHeroProgressResponse* other);
  friend void swap(CMsgClientToGCGetAllHeroProgressResponse& a, CMsgClientToGCGetAllHeroProgressResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAllHeroProgressResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetAllHeroProgressResponse>(nullptr);
  }

  CMsgClientToGCGetAllHeroProgressResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAllHeroProgressResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetAllHeroProgressResponse& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroProgressResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAllHeroProgressResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string profile_name = 19;
  bool has_profile_name() const;
  void clear_profile_name();
  static const int kProfileNameFieldNumber = 19;
  const ::std::string& profile_name() const;
  void set_profile_name(const ::std::string& value);
  #if LANG_CXX11
  void set_profile_name(::std::string&& value);
  #endif
  void set_profile_name(const char* value);
  void set_profile_name(const char* value, size_t size);
  ::std::string* mutable_profile_name();
  ::std::string* release_profile_name();
  void set_allocated_profile_name(::std::string* profile_name);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 curr_hero_id = 2;
  bool has_curr_hero_id() const;
  void clear_curr_hero_id();
  static const int kCurrHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 curr_hero_id() const;
  void set_curr_hero_id(::google::protobuf::uint32 value);

  // optional uint32 laps_completed = 3;
  bool has_laps_completed() const;
  void clear_laps_completed();
  static const int kLapsCompletedFieldNumber = 3;
  ::google::protobuf::uint32 laps_completed() const;
  void set_laps_completed(::google::protobuf::uint32 value);

  // optional uint32 curr_hero_games = 4;
  bool has_curr_hero_games() const;
  void clear_curr_hero_games();
  static const int kCurrHeroGamesFieldNumber = 4;
  ::google::protobuf::uint32 curr_hero_games() const;
  void set_curr_hero_games(::google::protobuf::uint32 value);

  // optional uint32 curr_lap_time_started = 5;
  bool has_curr_lap_time_started() const;
  void clear_curr_lap_time_started();
  static const int kCurrLapTimeStartedFieldNumber = 5;
  ::google::protobuf::uint32 curr_lap_time_started() const;
  void set_curr_lap_time_started(::google::protobuf::uint32 value);

  // optional uint32 curr_lap_games = 6;
  bool has_curr_lap_games() const;
  void clear_curr_lap_games();
  static const int kCurrLapGamesFieldNumber = 6;
  ::google::protobuf::uint32 curr_lap_games() const;
  void set_curr_lap_games(::google::protobuf::uint32 value);

  // optional uint32 best_lap_games = 7;
  bool has_best_lap_games() const;
  void clear_best_lap_games();
  static const int kBestLapGamesFieldNumber = 7;
  ::google::protobuf::uint32 best_lap_games() const;
  void set_best_lap_games(::google::protobuf::uint32 value);

  // optional uint32 best_lap_time = 8;
  bool has_best_lap_time() const;
  void clear_best_lap_time();
  static const int kBestLapTimeFieldNumber = 8;
  ::google::protobuf::uint32 best_lap_time() const;
  void set_best_lap_time(::google::protobuf::uint32 value);

  // optional uint32 lap_heroes_completed = 9;
  bool has_lap_heroes_completed() const;
  void clear_lap_heroes_completed();
  static const int kLapHeroesCompletedFieldNumber = 9;
  ::google::protobuf::uint32 lap_heroes_completed() const;
  void set_lap_heroes_completed(::google::protobuf::uint32 value);

  // optional uint32 lap_heroes_remaining = 10;
  bool has_lap_heroes_remaining() const;
  void clear_lap_heroes_remaining();
  static const int kLapHeroesRemainingFieldNumber = 10;
  ::google::protobuf::uint32 lap_heroes_remaining() const;
  void set_lap_heroes_remaining(::google::protobuf::uint32 value);

  // optional uint32 next_hero_id = 11;
  bool has_next_hero_id() const;
  void clear_next_hero_id();
  static const int kNextHeroIdFieldNumber = 11;
  ::google::protobuf::uint32 next_hero_id() const;
  void set_next_hero_id(::google::protobuf::uint32 value);

  // optional uint32 prev_hero_id = 12;
  bool has_prev_hero_id() const;
  void clear_prev_hero_id();
  static const int kPrevHeroIdFieldNumber = 12;
  ::google::protobuf::uint32 prev_hero_id() const;
  void set_prev_hero_id(::google::protobuf::uint32 value);

  // optional uint32 prev_hero_games = 13;
  bool has_prev_hero_games() const;
  void clear_prev_hero_games();
  static const int kPrevHeroGamesFieldNumber = 13;
  ::google::protobuf::uint32 prev_hero_games() const;
  void set_prev_hero_games(::google::protobuf::uint32 value);

  // optional float prev_avg_tries = 14;
  bool has_prev_avg_tries() const;
  void clear_prev_avg_tries();
  static const int kPrevAvgTriesFieldNumber = 14;
  float prev_avg_tries() const;
  void set_prev_avg_tries(float value);

  // optional float curr_avg_tries = 15;
  bool has_curr_avg_tries() const;
  void clear_curr_avg_tries();
  static const int kCurrAvgTriesFieldNumber = 15;
  float curr_avg_tries() const;
  void set_curr_avg_tries(float value);

  // optional float next_avg_tries = 16;
  bool has_next_avg_tries() const;
  void clear_next_avg_tries();
  static const int kNextAvgTriesFieldNumber = 16;
  float next_avg_tries() const;
  void set_next_avg_tries(float value);

  // optional float full_lap_avg_tries = 17;
  bool has_full_lap_avg_tries() const;
  void clear_full_lap_avg_tries();
  static const int kFullLapAvgTriesFieldNumber = 17;
  float full_lap_avg_tries() const;
  void set_full_lap_avg_tries(float value);

  // optional float curr_lap_avg_tries = 18;
  bool has_curr_lap_avg_tries() const;
  void clear_curr_lap_avg_tries();
  static const int kCurrLapAvgTriesFieldNumber = 18;
  float curr_lap_avg_tries() const;
  void set_curr_lap_avg_tries(float value);

  // optional uint32 start_hero_id = 20;
  bool has_start_hero_id() const;
  void clear_start_hero_id();
  static const int kStartHeroIdFieldNumber = 20;
  ::google::protobuf::uint32 start_hero_id() const;
  void set_start_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetAllHeroProgressResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr profile_name_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 curr_hero_id_;
  ::google::protobuf::uint32 laps_completed_;
  ::google::protobuf::uint32 curr_hero_games_;
  ::google::protobuf::uint32 curr_lap_time_started_;
  ::google::protobuf::uint32 curr_lap_games_;
  ::google::protobuf::uint32 best_lap_games_;
  ::google::protobuf::uint32 best_lap_time_;
  ::google::protobuf::uint32 lap_heroes_completed_;
  ::google::protobuf::uint32 lap_heroes_remaining_;
  ::google::protobuf::uint32 next_hero_id_;
  ::google::protobuf::uint32 prev_hero_id_;
  ::google::protobuf::uint32 prev_hero_games_;
  float prev_avg_tries_;
  float curr_avg_tries_;
  float next_avg_tries_;
  float full_lap_avg_tries_;
  float curr_lap_avg_tries_;
  ::google::protobuf::uint32 start_hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetTrophyList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetTrophyList) */ {
 public:
  CMsgClientToGCGetTrophyList();
  virtual ~CMsgClientToGCGetTrophyList();

  CMsgClientToGCGetTrophyList(const CMsgClientToGCGetTrophyList& from);

  inline CMsgClientToGCGetTrophyList& operator=(const CMsgClientToGCGetTrophyList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetTrophyList(CMsgClientToGCGetTrophyList&& from) noexcept
    : CMsgClientToGCGetTrophyList() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetTrophyList& operator=(CMsgClientToGCGetTrophyList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetTrophyList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetTrophyList* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetTrophyList*>(
               &_CMsgClientToGCGetTrophyList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    150;

  void Swap(CMsgClientToGCGetTrophyList* other);
  friend void swap(CMsgClientToGCGetTrophyList& a, CMsgClientToGCGetTrophyList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetTrophyList* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetTrophyList>(nullptr);
  }

  CMsgClientToGCGetTrophyList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetTrophyList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetTrophyList& from);
  void MergeFrom(const CMsgClientToGCGetTrophyList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetTrophyList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetTrophyList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetTrophyListResponse_Trophy final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy) */ {
 public:
  CMsgClientToGCGetTrophyListResponse_Trophy();
  virtual ~CMsgClientToGCGetTrophyListResponse_Trophy();

  CMsgClientToGCGetTrophyListResponse_Trophy(const CMsgClientToGCGetTrophyListResponse_Trophy& from);

  inline CMsgClientToGCGetTrophyListResponse_Trophy& operator=(const CMsgClientToGCGetTrophyListResponse_Trophy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetTrophyListResponse_Trophy(CMsgClientToGCGetTrophyListResponse_Trophy&& from) noexcept
    : CMsgClientToGCGetTrophyListResponse_Trophy() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetTrophyListResponse_Trophy& operator=(CMsgClientToGCGetTrophyListResponse_Trophy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetTrophyListResponse_Trophy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetTrophyListResponse_Trophy* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetTrophyListResponse_Trophy*>(
               &_CMsgClientToGCGetTrophyListResponse_Trophy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    151;

  void Swap(CMsgClientToGCGetTrophyListResponse_Trophy* other);
  friend void swap(CMsgClientToGCGetTrophyListResponse_Trophy& a, CMsgClientToGCGetTrophyListResponse_Trophy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetTrophyListResponse_Trophy* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetTrophyListResponse_Trophy>(nullptr);
  }

  CMsgClientToGCGetTrophyListResponse_Trophy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetTrophyListResponse_Trophy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetTrophyListResponse_Trophy& from);
  void MergeFrom(const CMsgClientToGCGetTrophyListResponse_Trophy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetTrophyListResponse_Trophy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trophy_id = 1;
  bool has_trophy_id() const;
  void clear_trophy_id();
  static const int kTrophyIdFieldNumber = 1;
  ::google::protobuf::uint32 trophy_id() const;
  void set_trophy_id(::google::protobuf::uint32 value);

  // optional uint32 trophy_score = 2;
  bool has_trophy_score() const;
  void clear_trophy_score();
  static const int kTrophyScoreFieldNumber = 2;
  ::google::protobuf::uint32 trophy_score() const;
  void set_trophy_score(::google::protobuf::uint32 value);

  // optional uint32 last_updated = 3;
  bool has_last_updated() const;
  void clear_last_updated();
  static const int kLastUpdatedFieldNumber = 3;
  ::google::protobuf::uint32 last_updated() const;
  void set_last_updated(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 trophy_id_;
  ::google::protobuf::uint32 trophy_score_;
  ::google::protobuf::uint32 last_updated_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetTrophyListResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetTrophyListResponse) */ {
 public:
  CMsgClientToGCGetTrophyListResponse();
  virtual ~CMsgClientToGCGetTrophyListResponse();

  CMsgClientToGCGetTrophyListResponse(const CMsgClientToGCGetTrophyListResponse& from);

  inline CMsgClientToGCGetTrophyListResponse& operator=(const CMsgClientToGCGetTrophyListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetTrophyListResponse(CMsgClientToGCGetTrophyListResponse&& from) noexcept
    : CMsgClientToGCGetTrophyListResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetTrophyListResponse& operator=(CMsgClientToGCGetTrophyListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetTrophyListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetTrophyListResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetTrophyListResponse*>(
               &_CMsgClientToGCGetTrophyListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    152;

  void Swap(CMsgClientToGCGetTrophyListResponse* other);
  friend void swap(CMsgClientToGCGetTrophyListResponse& a, CMsgClientToGCGetTrophyListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetTrophyListResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetTrophyListResponse>(nullptr);
  }

  CMsgClientToGCGetTrophyListResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetTrophyListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetTrophyListResponse& from);
  void MergeFrom(const CMsgClientToGCGetTrophyListResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetTrophyListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetTrophyListResponse_Trophy Trophy;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy trophies = 2;
  int trophies_size() const;
  void clear_trophies();
  static const int kTrophiesFieldNumber = 2;
  ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy* mutable_trophies(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy >*
      mutable_trophies();
  const ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy& trophies(int index) const;
  ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy* add_trophies();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy >&
      trophies() const;

  // optional string profile_name = 3;
  bool has_profile_name() const;
  void clear_profile_name();
  static const int kProfileNameFieldNumber = 3;
  const ::std::string& profile_name() const;
  void set_profile_name(const ::std::string& value);
  #if LANG_CXX11
  void set_profile_name(::std::string&& value);
  #endif
  void set_profile_name(const char* value);
  void set_profile_name(const char* value, size_t size);
  ::std::string* mutable_profile_name();
  ::std::string* release_profile_name();
  void set_allocated_profile_name(::std::string* profile_name);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetTrophyListResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy > trophies_;
  ::google::protobuf::internal::ArenaStringPtr profile_name_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientTrophyAwarded final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientTrophyAwarded) */ {
 public:
  CMsgGCToClientTrophyAwarded();
  virtual ~CMsgGCToClientTrophyAwarded();

  CMsgGCToClientTrophyAwarded(const CMsgGCToClientTrophyAwarded& from);

  inline CMsgGCToClientTrophyAwarded& operator=(const CMsgGCToClientTrophyAwarded& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientTrophyAwarded(CMsgGCToClientTrophyAwarded&& from) noexcept
    : CMsgGCToClientTrophyAwarded() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientTrophyAwarded& operator=(CMsgGCToClientTrophyAwarded&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientTrophyAwarded& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientTrophyAwarded* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientTrophyAwarded*>(
               &_CMsgGCToClientTrophyAwarded_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    153;

  void Swap(CMsgGCToClientTrophyAwarded* other);
  friend void swap(CMsgGCToClientTrophyAwarded& a, CMsgGCToClientTrophyAwarded& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientTrophyAwarded* New() const final {
    return CreateMaybeMessage<CMsgGCToClientTrophyAwarded>(nullptr);
  }

  CMsgGCToClientTrophyAwarded* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientTrophyAwarded>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientTrophyAwarded& from);
  void MergeFrom(const CMsgGCToClientTrophyAwarded& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientTrophyAwarded* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trophy_id = 1;
  bool has_trophy_id() const;
  void clear_trophy_id();
  static const int kTrophyIdFieldNumber = 1;
  ::google::protobuf::uint32 trophy_id() const;
  void set_trophy_id(::google::protobuf::uint32 value);

  // optional uint32 trophy_score = 2;
  bool has_trophy_score() const;
  void clear_trophy_score();
  static const int kTrophyScoreFieldNumber = 2;
  ::google::protobuf::uint32 trophy_score() const;
  void set_trophy_score(::google::protobuf::uint32 value);

  // optional uint32 trophy_old_score = 3;
  bool has_trophy_old_score() const;
  void clear_trophy_old_score();
  static const int kTrophyOldScoreFieldNumber = 3;
  ::google::protobuf::uint32 trophy_old_score() const;
  void set_trophy_old_score(::google::protobuf::uint32 value);

  // optional uint32 last_updated = 4;
  bool has_last_updated() const;
  void clear_last_updated();
  static const int kLastUpdatedFieldNumber = 4;
  ::google::protobuf::uint32 last_updated() const;
  void set_last_updated(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientTrophyAwarded)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 trophy_id_;
  ::google::protobuf::uint32 trophy_score_;
  ::google::protobuf::uint32 trophy_old_score_;
  ::google::protobuf::uint32 last_updated_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetProfileCard final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetProfileCard) */ {
 public:
  CMsgClientToGCGetProfileCard();
  virtual ~CMsgClientToGCGetProfileCard();

  CMsgClientToGCGetProfileCard(const CMsgClientToGCGetProfileCard& from);

  inline CMsgClientToGCGetProfileCard& operator=(const CMsgClientToGCGetProfileCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetProfileCard(CMsgClientToGCGetProfileCard&& from) noexcept
    : CMsgClientToGCGetProfileCard() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetProfileCard& operator=(CMsgClientToGCGetProfileCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetProfileCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetProfileCard* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetProfileCard*>(
               &_CMsgClientToGCGetProfileCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    154;

  void Swap(CMsgClientToGCGetProfileCard* other);
  friend void swap(CMsgClientToGCGetProfileCard& a, CMsgClientToGCGetProfileCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetProfileCard* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetProfileCard>(nullptr);
  }

  CMsgClientToGCGetProfileCard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetProfileCard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetProfileCard& from);
  void MergeFrom(const CMsgClientToGCGetProfileCard& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetProfileCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetProfileCard)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetProfileCardSlots_CardSlot final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot) */ {
 public:
  CMsgClientToGCSetProfileCardSlots_CardSlot();
  virtual ~CMsgClientToGCSetProfileCardSlots_CardSlot();

  CMsgClientToGCSetProfileCardSlots_CardSlot(const CMsgClientToGCSetProfileCardSlots_CardSlot& from);

  inline CMsgClientToGCSetProfileCardSlots_CardSlot& operator=(const CMsgClientToGCSetProfileCardSlots_CardSlot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCSetProfileCardSlots_CardSlot(CMsgClientToGCSetProfileCardSlots_CardSlot&& from) noexcept
    : CMsgClientToGCSetProfileCardSlots_CardSlot() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetProfileCardSlots_CardSlot& operator=(CMsgClientToGCSetProfileCardSlots_CardSlot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCSetProfileCardSlots_CardSlot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCSetProfileCardSlots_CardSlot* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetProfileCardSlots_CardSlot*>(
               &_CMsgClientToGCSetProfileCardSlots_CardSlot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    155;

  void Swap(CMsgClientToGCSetProfileCardSlots_CardSlot* other);
  friend void swap(CMsgClientToGCSetProfileCardSlots_CardSlot& a, CMsgClientToGCSetProfileCardSlots_CardSlot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSetProfileCardSlots_CardSlot* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSetProfileCardSlots_CardSlot>(nullptr);
  }

  CMsgClientToGCSetProfileCardSlots_CardSlot* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSetProfileCardSlots_CardSlot>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCSetProfileCardSlots_CardSlot& from);
  void MergeFrom(const CMsgClientToGCSetProfileCardSlots_CardSlot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetProfileCardSlots_CardSlot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 slot_id = 1;
  bool has_slot_id() const;
  void clear_slot_id();
  static const int kSlotIdFieldNumber = 1;
  ::google::protobuf::uint32 slot_id() const;
  void set_slot_id(::google::protobuf::uint32 value);

  // optional .proto.dota.EProfileCardSlotType slot_type = 2 [default = k_EProfileCardSlotType_Empty];
  bool has_slot_type() const;
  void clear_slot_type();
  static const int kSlotTypeFieldNumber = 2;
  ::proto::dota::EProfileCardSlotType slot_type() const;
  void set_slot_type(::proto::dota::EProfileCardSlotType value);

  // optional uint64 slot_value = 3;
  bool has_slot_value() const;
  void clear_slot_value();
  static const int kSlotValueFieldNumber = 3;
  ::google::protobuf::uint64 slot_value() const;
  void set_slot_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 slot_id_;
  int slot_type_;
  ::google::protobuf::uint64 slot_value_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetProfileCardSlots final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSetProfileCardSlots) */ {
 public:
  CMsgClientToGCSetProfileCardSlots();
  virtual ~CMsgClientToGCSetProfileCardSlots();

  CMsgClientToGCSetProfileCardSlots(const CMsgClientToGCSetProfileCardSlots& from);

  inline CMsgClientToGCSetProfileCardSlots& operator=(const CMsgClientToGCSetProfileCardSlots& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCSetProfileCardSlots(CMsgClientToGCSetProfileCardSlots&& from) noexcept
    : CMsgClientToGCSetProfileCardSlots() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSetProfileCardSlots& operator=(CMsgClientToGCSetProfileCardSlots&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCSetProfileCardSlots& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCSetProfileCardSlots* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetProfileCardSlots*>(
               &_CMsgClientToGCSetProfileCardSlots_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    156;

  void Swap(CMsgClientToGCSetProfileCardSlots* other);
  friend void swap(CMsgClientToGCSetProfileCardSlots& a, CMsgClientToGCSetProfileCardSlots& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSetProfileCardSlots* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSetProfileCardSlots>(nullptr);
  }

  CMsgClientToGCSetProfileCardSlots* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSetProfileCardSlots>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCSetProfileCardSlots& from);
  void MergeFrom(const CMsgClientToGCSetProfileCardSlots& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSetProfileCardSlots* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSetProfileCardSlots_CardSlot CardSlot;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot slots = 1;
  int slots_size() const;
  void clear_slots();
  static const int kSlotsFieldNumber = 1;
  ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot* mutable_slots(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot >*
      mutable_slots();
  const ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot& slots(int index) const;
  ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot* add_slots();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot >&
      slots() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSetProfileCardSlots)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot > slots_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetProfileCardStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetProfileCardStats) */ {
 public:
  CMsgClientToGCGetProfileCardStats();
  virtual ~CMsgClientToGCGetProfileCardStats();

  CMsgClientToGCGetProfileCardStats(const CMsgClientToGCGetProfileCardStats& from);

  inline CMsgClientToGCGetProfileCardStats& operator=(const CMsgClientToGCGetProfileCardStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetProfileCardStats(CMsgClientToGCGetProfileCardStats&& from) noexcept
    : CMsgClientToGCGetProfileCardStats() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetProfileCardStats& operator=(CMsgClientToGCGetProfileCardStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetProfileCardStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetProfileCardStats* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetProfileCardStats*>(
               &_CMsgClientToGCGetProfileCardStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    157;

  void Swap(CMsgClientToGCGetProfileCardStats* other);
  friend void swap(CMsgClientToGCGetProfileCardStats& a, CMsgClientToGCGetProfileCardStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetProfileCardStats* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetProfileCardStats>(nullptr);
  }

  CMsgClientToGCGetProfileCardStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetProfileCardStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetProfileCardStats& from);
  void MergeFrom(const CMsgClientToGCGetProfileCardStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetProfileCardStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetProfileCardStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateHeroStatue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCreateHeroStatue) */ {
 public:
  CMsgClientToGCCreateHeroStatue();
  virtual ~CMsgClientToGCCreateHeroStatue();

  CMsgClientToGCCreateHeroStatue(const CMsgClientToGCCreateHeroStatue& from);

  inline CMsgClientToGCCreateHeroStatue& operator=(const CMsgClientToGCCreateHeroStatue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCreateHeroStatue(CMsgClientToGCCreateHeroStatue&& from) noexcept
    : CMsgClientToGCCreateHeroStatue() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCreateHeroStatue& operator=(CMsgClientToGCCreateHeroStatue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCreateHeroStatue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCreateHeroStatue* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreateHeroStatue*>(
               &_CMsgClientToGCCreateHeroStatue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    158;

  void Swap(CMsgClientToGCCreateHeroStatue* other);
  friend void swap(CMsgClientToGCCreateHeroStatue& a, CMsgClientToGCCreateHeroStatue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCreateHeroStatue* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCreateHeroStatue>(nullptr);
  }

  CMsgClientToGCCreateHeroStatue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCreateHeroStatue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCreateHeroStatue& from);
  void MergeFrom(const CMsgClientToGCCreateHeroStatue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCreateHeroStatue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 wearables = 6;
  int wearables_size() const;
  void clear_wearables();
  static const int kWearablesFieldNumber = 6;
  ::google::protobuf::uint32 wearables(int index) const;
  void set_wearables(int index, ::google::protobuf::uint32 value);
  void add_wearables(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wearables() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wearables();

  // repeated uint32 styles = 8;
  int styles_size() const;
  void clear_styles();
  static const int kStylesFieldNumber = 8;
  ::google::protobuf::uint32 styles(int index) const;
  void set_styles(int index, ::google::protobuf::uint32 value);
  void add_styles(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      styles() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_styles();

  // optional string sequence_name = 4;
  bool has_sequence_name() const;
  void clear_sequence_name();
  static const int kSequenceNameFieldNumber = 4;
  const ::std::string& sequence_name() const;
  void set_sequence_name(const ::std::string& value);
  #if LANG_CXX11
  void set_sequence_name(::std::string&& value);
  #endif
  void set_sequence_name(const char* value);
  void set_sequence_name(const char* value, size_t size);
  ::std::string* mutable_sequence_name();
  ::std::string* release_sequence_name();
  void set_allocated_sequence_name(::std::string* sequence_name);

  // optional string inscription = 7;
  bool has_inscription() const;
  void clear_inscription();
  static const int kInscriptionFieldNumber = 7;
  const ::std::string& inscription() const;
  void set_inscription(const ::std::string& value);
  #if LANG_CXX11
  void set_inscription(::std::string&& value);
  #endif
  void set_inscription(const char* value);
  void set_inscription(const char* value, size_t size);
  ::std::string* mutable_inscription();
  ::std::string* release_inscription();
  void set_allocated_inscription(::std::string* inscription);

  // optional uint64 source_item = 1;
  bool has_source_item() const;
  void clear_source_item();
  static const int kSourceItemFieldNumber = 1;
  ::google::protobuf::uint64 source_item() const;
  void set_source_item(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 3;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional float cycle = 5;
  bool has_cycle() const;
  void clear_cycle();
  static const int kCycleFieldNumber = 5;
  float cycle() const;
  void set_cycle(float value);

  // optional uint64 reforger_item = 9;
  bool has_reforger_item() const;
  void clear_reforger_item();
  static const int kReforgerItemFieldNumber = 9;
  ::google::protobuf::uint64 reforger_item() const;
  void set_reforger_item(::google::protobuf::uint64 value);

  // optional bool tournament_drop = 10;
  bool has_tournament_drop() const;
  void clear_tournament_drop();
  static const int kTournamentDropFieldNumber = 10;
  bool tournament_drop() const;
  void set_tournament_drop(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCreateHeroStatue)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wearables_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > styles_;
  ::google::protobuf::internal::ArenaStringPtr sequence_name_;
  ::google::protobuf::internal::ArenaStringPtr inscription_;
  ::google::protobuf::uint64 source_item_;
  ::google::protobuf::uint32 hero_id_;
  float cycle_;
  ::google::protobuf::uint64 reforger_item_;
  bool tournament_drop_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientHeroStatueCreateResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientHeroStatueCreateResult) */ {
 public:
  CMsgGCToClientHeroStatueCreateResult();
  virtual ~CMsgGCToClientHeroStatueCreateResult();

  CMsgGCToClientHeroStatueCreateResult(const CMsgGCToClientHeroStatueCreateResult& from);

  inline CMsgGCToClientHeroStatueCreateResult& operator=(const CMsgGCToClientHeroStatueCreateResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientHeroStatueCreateResult(CMsgGCToClientHeroStatueCreateResult&& from) noexcept
    : CMsgGCToClientHeroStatueCreateResult() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientHeroStatueCreateResult& operator=(CMsgGCToClientHeroStatueCreateResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientHeroStatueCreateResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientHeroStatueCreateResult* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientHeroStatueCreateResult*>(
               &_CMsgGCToClientHeroStatueCreateResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    159;

  void Swap(CMsgGCToClientHeroStatueCreateResult* other);
  friend void swap(CMsgGCToClientHeroStatueCreateResult& a, CMsgGCToClientHeroStatueCreateResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientHeroStatueCreateResult* New() const final {
    return CreateMaybeMessage<CMsgGCToClientHeroStatueCreateResult>(nullptr);
  }

  CMsgGCToClientHeroStatueCreateResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientHeroStatueCreateResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientHeroStatueCreateResult& from);
  void MergeFrom(const CMsgGCToClientHeroStatueCreateResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientHeroStatueCreateResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 resulting_item = 1;
  bool has_resulting_item() const;
  void clear_resulting_item();
  static const int kResultingItemFieldNumber = 1;
  ::google::protobuf::uint64 resulting_item() const;
  void set_resulting_item(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientHeroStatueCreateResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 resulting_item_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientEventStatusChanged final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientEventStatusChanged) */ {
 public:
  CMsgGCToClientEventStatusChanged();
  virtual ~CMsgGCToClientEventStatusChanged();

  CMsgGCToClientEventStatusChanged(const CMsgGCToClientEventStatusChanged& from);

  inline CMsgGCToClientEventStatusChanged& operator=(const CMsgGCToClientEventStatusChanged& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientEventStatusChanged(CMsgGCToClientEventStatusChanged&& from) noexcept
    : CMsgGCToClientEventStatusChanged() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientEventStatusChanged& operator=(CMsgGCToClientEventStatusChanged&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientEventStatusChanged& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientEventStatusChanged* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientEventStatusChanged*>(
               &_CMsgGCToClientEventStatusChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    160;

  void Swap(CMsgGCToClientEventStatusChanged* other);
  friend void swap(CMsgGCToClientEventStatusChanged& a, CMsgGCToClientEventStatusChanged& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientEventStatusChanged* New() const final {
    return CreateMaybeMessage<CMsgGCToClientEventStatusChanged>(nullptr);
  }

  CMsgGCToClientEventStatusChanged* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientEventStatusChanged>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientEventStatusChanged& from);
  void MergeFrom(const CMsgGCToClientEventStatusChanged& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientEventStatusChanged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent active_event = 2 [default = EVENT_ID_NONE];
  bool has_active_event() const;
  void clear_active_event();
  static const int kActiveEventFieldNumber = 2;
  ::proto::dota::EEvent active_event() const;
  void set_active_event(::proto::dota::EEvent value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientEventStatusChanged)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int active_event_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPlayerStatsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCPlayerStatsRequest) */ {
 public:
  CMsgClientToGCPlayerStatsRequest();
  virtual ~CMsgClientToGCPlayerStatsRequest();

  CMsgClientToGCPlayerStatsRequest(const CMsgClientToGCPlayerStatsRequest& from);

  inline CMsgClientToGCPlayerStatsRequest& operator=(const CMsgClientToGCPlayerStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCPlayerStatsRequest(CMsgClientToGCPlayerStatsRequest&& from) noexcept
    : CMsgClientToGCPlayerStatsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPlayerStatsRequest& operator=(CMsgClientToGCPlayerStatsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCPlayerStatsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCPlayerStatsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPlayerStatsRequest*>(
               &_CMsgClientToGCPlayerStatsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    161;

  void Swap(CMsgClientToGCPlayerStatsRequest* other);
  friend void swap(CMsgClientToGCPlayerStatsRequest& a, CMsgClientToGCPlayerStatsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCPlayerStatsRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCPlayerStatsRequest>(nullptr);
  }

  CMsgClientToGCPlayerStatsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCPlayerStatsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCPlayerStatsRequest& from);
  void MergeFrom(const CMsgClientToGCPlayerStatsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPlayerStatsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCPlayerStatsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientPlayerStatsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientPlayerStatsResponse) */ {
 public:
  CMsgGCToClientPlayerStatsResponse();
  virtual ~CMsgGCToClientPlayerStatsResponse();

  CMsgGCToClientPlayerStatsResponse(const CMsgGCToClientPlayerStatsResponse& from);

  inline CMsgGCToClientPlayerStatsResponse& operator=(const CMsgGCToClientPlayerStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientPlayerStatsResponse(CMsgGCToClientPlayerStatsResponse&& from) noexcept
    : CMsgGCToClientPlayerStatsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientPlayerStatsResponse& operator=(CMsgGCToClientPlayerStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientPlayerStatsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientPlayerStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientPlayerStatsResponse*>(
               &_CMsgGCToClientPlayerStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    162;

  void Swap(CMsgGCToClientPlayerStatsResponse* other);
  friend void swap(CMsgGCToClientPlayerStatsResponse& a, CMsgGCToClientPlayerStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientPlayerStatsResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToClientPlayerStatsResponse>(nullptr);
  }

  CMsgGCToClientPlayerStatsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientPlayerStatsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientPlayerStatsResponse& from);
  void MergeFrom(const CMsgGCToClientPlayerStatsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientPlayerStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float player_stats = 2;
  int player_stats_size() const;
  void clear_player_stats();
  static const int kPlayerStatsFieldNumber = 2;
  float player_stats(int index) const;
  void set_player_stats(int index, float value);
  void add_player_stats(float value);
  const ::google::protobuf::RepeatedField< float >&
      player_stats() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_player_stats();

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 match_count = 3;
  bool has_match_count() const;
  void clear_match_count();
  static const int kMatchCountFieldNumber = 3;
  ::google::protobuf::uint32 match_count() const;
  void set_match_count(::google::protobuf::uint32 value);

  // optional float mean_gpm = 4;
  bool has_mean_gpm() const;
  void clear_mean_gpm();
  static const int kMeanGpmFieldNumber = 4;
  float mean_gpm() const;
  void set_mean_gpm(float value);

  // optional float mean_xppm = 5;
  bool has_mean_xppm() const;
  void clear_mean_xppm();
  static const int kMeanXppmFieldNumber = 5;
  float mean_xppm() const;
  void set_mean_xppm(float value);

  // optional float mean_lasthits = 6;
  bool has_mean_lasthits() const;
  void clear_mean_lasthits();
  static const int kMeanLasthitsFieldNumber = 6;
  float mean_lasthits() const;
  void set_mean_lasthits(float value);

  // optional uint32 rampages = 7;
  bool has_rampages() const;
  void clear_rampages();
  static const int kRampagesFieldNumber = 7;
  ::google::protobuf::uint32 rampages() const;
  void set_rampages(::google::protobuf::uint32 value);

  // optional uint32 triple_kills = 8;
  bool has_triple_kills() const;
  void clear_triple_kills();
  static const int kTripleKillsFieldNumber = 8;
  ::google::protobuf::uint32 triple_kills() const;
  void set_triple_kills(::google::protobuf::uint32 value);

  // optional uint32 first_blood_claimed = 9;
  bool has_first_blood_claimed() const;
  void clear_first_blood_claimed();
  static const int kFirstBloodClaimedFieldNumber = 9;
  ::google::protobuf::uint32 first_blood_claimed() const;
  void set_first_blood_claimed(::google::protobuf::uint32 value);

  // optional uint32 first_blood_given = 10;
  bool has_first_blood_given() const;
  void clear_first_blood_given();
  static const int kFirstBloodGivenFieldNumber = 10;
  ::google::protobuf::uint32 first_blood_given() const;
  void set_first_blood_given(::google::protobuf::uint32 value);

  // optional uint32 couriers_killed = 11;
  bool has_couriers_killed() const;
  void clear_couriers_killed();
  static const int kCouriersKilledFieldNumber = 11;
  ::google::protobuf::uint32 couriers_killed() const;
  void set_couriers_killed(::google::protobuf::uint32 value);

  // optional uint32 aegises_snatched = 12;
  bool has_aegises_snatched() const;
  void clear_aegises_snatched();
  static const int kAegisesSnatchedFieldNumber = 12;
  ::google::protobuf::uint32 aegises_snatched() const;
  void set_aegises_snatched(::google::protobuf::uint32 value);

  // optional uint32 cheeses_eaten = 13;
  bool has_cheeses_eaten() const;
  void clear_cheeses_eaten();
  static const int kCheesesEatenFieldNumber = 13;
  ::google::protobuf::uint32 cheeses_eaten() const;
  void set_cheeses_eaten(::google::protobuf::uint32 value);

  // optional uint32 creeps_stacked = 14;
  bool has_creeps_stacked() const;
  void clear_creeps_stacked();
  static const int kCreepsStackedFieldNumber = 14;
  ::google::protobuf::uint32 creeps_stacked() const;
  void set_creeps_stacked(::google::protobuf::uint32 value);

  // optional float fight_score = 15;
  bool has_fight_score() const;
  void clear_fight_score();
  static const int kFightScoreFieldNumber = 15;
  float fight_score() const;
  void set_fight_score(float value);

  // optional float farm_score = 16;
  bool has_farm_score() const;
  void clear_farm_score();
  static const int kFarmScoreFieldNumber = 16;
  float farm_score() const;
  void set_farm_score(float value);

  // optional float support_score = 17;
  bool has_support_score() const;
  void clear_support_score();
  static const int kSupportScoreFieldNumber = 17;
  float support_score() const;
  void set_support_score(float value);

  // optional float push_score = 18;
  bool has_push_score() const;
  void clear_push_score();
  static const int kPushScoreFieldNumber = 18;
  float push_score() const;
  void set_push_score(float value);

  // optional float versatility_score = 19;
  bool has_versatility_score() const;
  void clear_versatility_score();
  static const int kVersatilityScoreFieldNumber = 19;
  float versatility_score() const;
  void set_versatility_score(float value);

  // optional float mean_networth = 20;
  bool has_mean_networth() const;
  void clear_mean_networth();
  static const int kMeanNetworthFieldNumber = 20;
  float mean_networth() const;
  void set_mean_networth(float value);

  // optional float mean_damage = 21;
  bool has_mean_damage() const;
  void clear_mean_damage();
  static const int kMeanDamageFieldNumber = 21;
  float mean_damage() const;
  void set_mean_damage(float value);

  // optional float mean_heals = 22;
  bool has_mean_heals() const;
  void clear_mean_heals();
  static const int kMeanHealsFieldNumber = 22;
  float mean_heals() const;
  void set_mean_heals(float value);

  // optional uint32 rapiers_purchased = 23;
  bool has_rapiers_purchased() const;
  void clear_rapiers_purchased();
  static const int kRapiersPurchasedFieldNumber = 23;
  ::google::protobuf::uint32 rapiers_purchased() const;
  void set_rapiers_purchased(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientPlayerStatsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< float > player_stats_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 match_count_;
  float mean_gpm_;
  float mean_xppm_;
  float mean_lasthits_;
  ::google::protobuf::uint32 rampages_;
  ::google::protobuf::uint32 triple_kills_;
  ::google::protobuf::uint32 first_blood_claimed_;
  ::google::protobuf::uint32 first_blood_given_;
  ::google::protobuf::uint32 couriers_killed_;
  ::google::protobuf::uint32 aegises_snatched_;
  ::google::protobuf::uint32 cheeses_eaten_;
  ::google::protobuf::uint32 creeps_stacked_;
  float fight_score_;
  float farm_score_;
  float support_score_;
  float push_score_;
  float versatility_score_;
  float mean_networth_;
  float mean_damage_;
  float mean_heals_;
  ::google::protobuf::uint32 rapiers_purchased_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCustomGamePlayerCountRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCustomGamePlayerCountRequest) */ {
 public:
  CMsgClientToGCCustomGamePlayerCountRequest();
  virtual ~CMsgClientToGCCustomGamePlayerCountRequest();

  CMsgClientToGCCustomGamePlayerCountRequest(const CMsgClientToGCCustomGamePlayerCountRequest& from);

  inline CMsgClientToGCCustomGamePlayerCountRequest& operator=(const CMsgClientToGCCustomGamePlayerCountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCustomGamePlayerCountRequest(CMsgClientToGCCustomGamePlayerCountRequest&& from) noexcept
    : CMsgClientToGCCustomGamePlayerCountRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCustomGamePlayerCountRequest& operator=(CMsgClientToGCCustomGamePlayerCountRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCustomGamePlayerCountRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCustomGamePlayerCountRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCustomGamePlayerCountRequest*>(
               &_CMsgClientToGCCustomGamePlayerCountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    163;

  void Swap(CMsgClientToGCCustomGamePlayerCountRequest* other);
  friend void swap(CMsgClientToGCCustomGamePlayerCountRequest& a, CMsgClientToGCCustomGamePlayerCountRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCustomGamePlayerCountRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCustomGamePlayerCountRequest>(nullptr);
  }

  CMsgClientToGCCustomGamePlayerCountRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCustomGamePlayerCountRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCustomGamePlayerCountRequest& from);
  void MergeFrom(const CMsgClientToGCCustomGamePlayerCountRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCustomGamePlayerCountRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCustomGamePlayerCountRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientCustomGamePlayerCountResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse) */ {
 public:
  CMsgGCToClientCustomGamePlayerCountResponse();
  virtual ~CMsgGCToClientCustomGamePlayerCountResponse();

  CMsgGCToClientCustomGamePlayerCountResponse(const CMsgGCToClientCustomGamePlayerCountResponse& from);

  inline CMsgGCToClientCustomGamePlayerCountResponse& operator=(const CMsgGCToClientCustomGamePlayerCountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientCustomGamePlayerCountResponse(CMsgGCToClientCustomGamePlayerCountResponse&& from) noexcept
    : CMsgGCToClientCustomGamePlayerCountResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientCustomGamePlayerCountResponse& operator=(CMsgGCToClientCustomGamePlayerCountResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientCustomGamePlayerCountResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientCustomGamePlayerCountResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientCustomGamePlayerCountResponse*>(
               &_CMsgGCToClientCustomGamePlayerCountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    164;

  void Swap(CMsgGCToClientCustomGamePlayerCountResponse* other);
  friend void swap(CMsgGCToClientCustomGamePlayerCountResponse& a, CMsgGCToClientCustomGamePlayerCountResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientCustomGamePlayerCountResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToClientCustomGamePlayerCountResponse>(nullptr);
  }

  CMsgGCToClientCustomGamePlayerCountResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientCustomGamePlayerCountResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientCustomGamePlayerCountResponse& from);
  void MergeFrom(const CMsgGCToClientCustomGamePlayerCountResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientCustomGamePlayerCountResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // optional uint64 player_count = 2;
  bool has_player_count() const;
  void clear_player_count();
  static const int kPlayerCountFieldNumber = 2;
  ::google::protobuf::uint64 player_count() const;
  void set_player_count(::google::protobuf::uint64 value);

  // optional uint64 spectator_count = 3;
  bool has_spectator_count() const;
  void clear_spectator_count();
  static const int kSpectatorCountFieldNumber = 3;
  ::google::protobuf::uint64 spectator_count() const;
  void set_spectator_count(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint64 player_count_;
  ::google::protobuf::uint64 spectator_count_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCustomGamesFriendsPlayedRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCustomGamesFriendsPlayedRequest) */ {
 public:
  CMsgClientToGCCustomGamesFriendsPlayedRequest();
  virtual ~CMsgClientToGCCustomGamesFriendsPlayedRequest();

  CMsgClientToGCCustomGamesFriendsPlayedRequest(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from);

  inline CMsgClientToGCCustomGamesFriendsPlayedRequest& operator=(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCustomGamesFriendsPlayedRequest(CMsgClientToGCCustomGamesFriendsPlayedRequest&& from) noexcept
    : CMsgClientToGCCustomGamesFriendsPlayedRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCustomGamesFriendsPlayedRequest& operator=(CMsgClientToGCCustomGamesFriendsPlayedRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCustomGamesFriendsPlayedRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCustomGamesFriendsPlayedRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCustomGamesFriendsPlayedRequest*>(
               &_CMsgClientToGCCustomGamesFriendsPlayedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    165;

  void Swap(CMsgClientToGCCustomGamesFriendsPlayedRequest* other);
  friend void swap(CMsgClientToGCCustomGamesFriendsPlayedRequest& a, CMsgClientToGCCustomGamesFriendsPlayedRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCustomGamesFriendsPlayedRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCustomGamesFriendsPlayedRequest>(nullptr);
  }

  CMsgClientToGCCustomGamesFriendsPlayedRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCustomGamesFriendsPlayedRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from);
  void MergeFrom(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCustomGamesFriendsPlayedRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCustomGamesFriendsPlayedRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame) */ {
 public:
  CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame();
  virtual ~CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame();

  CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from);

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& operator=(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame(CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame&& from) noexcept
    : CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& operator=(CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame*>(
               &_CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    166;

  void Swap(CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* other);
  friend void swap(CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& a, CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* New() const final {
    return CreateMaybeMessage<CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame>(nullptr);
  }

  CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from);
  void MergeFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 2;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 2;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // optional uint64 custom_game_id = 1;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  ::google::protobuf::uint64 custom_game_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientCustomGamesFriendsPlayedResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse) */ {
 public:
  CMsgGCToClientCustomGamesFriendsPlayedResponse();
  virtual ~CMsgGCToClientCustomGamesFriendsPlayedResponse();

  CMsgGCToClientCustomGamesFriendsPlayedResponse(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from);

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse& operator=(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientCustomGamesFriendsPlayedResponse(CMsgGCToClientCustomGamesFriendsPlayedResponse&& from) noexcept
    : CMsgGCToClientCustomGamesFriendsPlayedResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse& operator=(CMsgGCToClientCustomGamesFriendsPlayedResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientCustomGamesFriendsPlayedResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientCustomGamesFriendsPlayedResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientCustomGamesFriendsPlayedResponse*>(
               &_CMsgGCToClientCustomGamesFriendsPlayedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    167;

  void Swap(CMsgGCToClientCustomGamesFriendsPlayedResponse* other);
  friend void swap(CMsgGCToClientCustomGamesFriendsPlayedResponse& a, CMsgGCToClientCustomGamesFriendsPlayedResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToClientCustomGamesFriendsPlayedResponse>(nullptr);
  }

  CMsgGCToClientCustomGamesFriendsPlayedResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientCustomGamesFriendsPlayedResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from);
  void MergeFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientCustomGamesFriendsPlayedResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame CustomGame;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame games = 2;
  int games_size() const;
  void clear_games();
  static const int kGamesFieldNumber = 2;
  ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* mutable_games(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >*
      mutable_games();
  const ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& games(int index) const;
  ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* add_games();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >&
      games() const;

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame > games_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialFeedPostCommentRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest) */ {
 public:
  CMsgClientToGCSocialFeedPostCommentRequest();
  virtual ~CMsgClientToGCSocialFeedPostCommentRequest();

  CMsgClientToGCSocialFeedPostCommentRequest(const CMsgClientToGCSocialFeedPostCommentRequest& from);

  inline CMsgClientToGCSocialFeedPostCommentRequest& operator=(const CMsgClientToGCSocialFeedPostCommentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCSocialFeedPostCommentRequest(CMsgClientToGCSocialFeedPostCommentRequest&& from) noexcept
    : CMsgClientToGCSocialFeedPostCommentRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSocialFeedPostCommentRequest& operator=(CMsgClientToGCSocialFeedPostCommentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCSocialFeedPostCommentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCSocialFeedPostCommentRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSocialFeedPostCommentRequest*>(
               &_CMsgClientToGCSocialFeedPostCommentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    168;

  void Swap(CMsgClientToGCSocialFeedPostCommentRequest* other);
  friend void swap(CMsgClientToGCSocialFeedPostCommentRequest& a, CMsgClientToGCSocialFeedPostCommentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSocialFeedPostCommentRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSocialFeedPostCommentRequest>(nullptr);
  }

  CMsgClientToGCSocialFeedPostCommentRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSocialFeedPostCommentRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCSocialFeedPostCommentRequest& from);
  void MergeFrom(const CMsgClientToGCSocialFeedPostCommentRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSocialFeedPostCommentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string comment = 2;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 2;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional uint64 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint64 event_id() const;
  void set_event_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::uint64 event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialFeedPostCommentResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientSocialFeedPostCommentResponse) */ {
 public:
  CMsgGCToClientSocialFeedPostCommentResponse();
  virtual ~CMsgGCToClientSocialFeedPostCommentResponse();

  CMsgGCToClientSocialFeedPostCommentResponse(const CMsgGCToClientSocialFeedPostCommentResponse& from);

  inline CMsgGCToClientSocialFeedPostCommentResponse& operator=(const CMsgGCToClientSocialFeedPostCommentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientSocialFeedPostCommentResponse(CMsgGCToClientSocialFeedPostCommentResponse&& from) noexcept
    : CMsgGCToClientSocialFeedPostCommentResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientSocialFeedPostCommentResponse& operator=(CMsgGCToClientSocialFeedPostCommentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientSocialFeedPostCommentResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientSocialFeedPostCommentResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientSocialFeedPostCommentResponse*>(
               &_CMsgGCToClientSocialFeedPostCommentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    169;

  void Swap(CMsgGCToClientSocialFeedPostCommentResponse* other);
  friend void swap(CMsgGCToClientSocialFeedPostCommentResponse& a, CMsgGCToClientSocialFeedPostCommentResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientSocialFeedPostCommentResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToClientSocialFeedPostCommentResponse>(nullptr);
  }

  CMsgGCToClientSocialFeedPostCommentResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientSocialFeedPostCommentResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientSocialFeedPostCommentResponse& from);
  void MergeFrom(const CMsgGCToClientSocialFeedPostCommentResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientSocialFeedPostCommentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientSocialFeedPostCommentResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool success_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialFeedPostMessageRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest) */ {
 public:
  CMsgClientToGCSocialFeedPostMessageRequest();
  virtual ~CMsgClientToGCSocialFeedPostMessageRequest();

  CMsgClientToGCSocialFeedPostMessageRequest(const CMsgClientToGCSocialFeedPostMessageRequest& from);

  inline CMsgClientToGCSocialFeedPostMessageRequest& operator=(const CMsgClientToGCSocialFeedPostMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCSocialFeedPostMessageRequest(CMsgClientToGCSocialFeedPostMessageRequest&& from) noexcept
    : CMsgClientToGCSocialFeedPostMessageRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSocialFeedPostMessageRequest& operator=(CMsgClientToGCSocialFeedPostMessageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCSocialFeedPostMessageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCSocialFeedPostMessageRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSocialFeedPostMessageRequest*>(
               &_CMsgClientToGCSocialFeedPostMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    170;

  void Swap(CMsgClientToGCSocialFeedPostMessageRequest* other);
  friend void swap(CMsgClientToGCSocialFeedPostMessageRequest& a, CMsgClientToGCSocialFeedPostMessageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSocialFeedPostMessageRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSocialFeedPostMessageRequest>(nullptr);
  }

  CMsgClientToGCSocialFeedPostMessageRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSocialFeedPostMessageRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCSocialFeedPostMessageRequest& from);
  void MergeFrom(const CMsgClientToGCSocialFeedPostMessageRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSocialFeedPostMessageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 match_timestamp = 3;
  bool has_match_timestamp() const;
  void clear_match_timestamp();
  static const int kMatchTimestampFieldNumber = 3;
  ::google::protobuf::uint32 match_timestamp() const;
  void set_match_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 match_timestamp_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialFeedPostMessageResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientSocialFeedPostMessageResponse) */ {
 public:
  CMsgGCToClientSocialFeedPostMessageResponse();
  virtual ~CMsgGCToClientSocialFeedPostMessageResponse();

  CMsgGCToClientSocialFeedPostMessageResponse(const CMsgGCToClientSocialFeedPostMessageResponse& from);

  inline CMsgGCToClientSocialFeedPostMessageResponse& operator=(const CMsgGCToClientSocialFeedPostMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientSocialFeedPostMessageResponse(CMsgGCToClientSocialFeedPostMessageResponse&& from) noexcept
    : CMsgGCToClientSocialFeedPostMessageResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientSocialFeedPostMessageResponse& operator=(CMsgGCToClientSocialFeedPostMessageResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientSocialFeedPostMessageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientSocialFeedPostMessageResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientSocialFeedPostMessageResponse*>(
               &_CMsgGCToClientSocialFeedPostMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    171;

  void Swap(CMsgGCToClientSocialFeedPostMessageResponse* other);
  friend void swap(CMsgGCToClientSocialFeedPostMessageResponse& a, CMsgGCToClientSocialFeedPostMessageResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientSocialFeedPostMessageResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToClientSocialFeedPostMessageResponse>(nullptr);
  }

  CMsgGCToClientSocialFeedPostMessageResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientSocialFeedPostMessageResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientSocialFeedPostMessageResponse& from);
  void MergeFrom(const CMsgGCToClientSocialFeedPostMessageResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientSocialFeedPostMessageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientSocialFeedPostMessageResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool success_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCFriendsPlayedCustomGameRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCFriendsPlayedCustomGameRequest) */ {
 public:
  CMsgClientToGCFriendsPlayedCustomGameRequest();
  virtual ~CMsgClientToGCFriendsPlayedCustomGameRequest();

  CMsgClientToGCFriendsPlayedCustomGameRequest(const CMsgClientToGCFriendsPlayedCustomGameRequest& from);

  inline CMsgClientToGCFriendsPlayedCustomGameRequest& operator=(const CMsgClientToGCFriendsPlayedCustomGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCFriendsPlayedCustomGameRequest(CMsgClientToGCFriendsPlayedCustomGameRequest&& from) noexcept
    : CMsgClientToGCFriendsPlayedCustomGameRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCFriendsPlayedCustomGameRequest& operator=(CMsgClientToGCFriendsPlayedCustomGameRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCFriendsPlayedCustomGameRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCFriendsPlayedCustomGameRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCFriendsPlayedCustomGameRequest*>(
               &_CMsgClientToGCFriendsPlayedCustomGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    172;

  void Swap(CMsgClientToGCFriendsPlayedCustomGameRequest* other);
  friend void swap(CMsgClientToGCFriendsPlayedCustomGameRequest& a, CMsgClientToGCFriendsPlayedCustomGameRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCFriendsPlayedCustomGameRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCFriendsPlayedCustomGameRequest>(nullptr);
  }

  CMsgClientToGCFriendsPlayedCustomGameRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCFriendsPlayedCustomGameRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCFriendsPlayedCustomGameRequest& from);
  void MergeFrom(const CMsgClientToGCFriendsPlayedCustomGameRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCFriendsPlayedCustomGameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCFriendsPlayedCustomGameRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientFriendsPlayedCustomGameResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse) */ {
 public:
  CMsgGCToClientFriendsPlayedCustomGameResponse();
  virtual ~CMsgGCToClientFriendsPlayedCustomGameResponse();

  CMsgGCToClientFriendsPlayedCustomGameResponse(const CMsgGCToClientFriendsPlayedCustomGameResponse& from);

  inline CMsgGCToClientFriendsPlayedCustomGameResponse& operator=(const CMsgGCToClientFriendsPlayedCustomGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientFriendsPlayedCustomGameResponse(CMsgGCToClientFriendsPlayedCustomGameResponse&& from) noexcept
    : CMsgGCToClientFriendsPlayedCustomGameResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientFriendsPlayedCustomGameResponse& operator=(CMsgGCToClientFriendsPlayedCustomGameResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientFriendsPlayedCustomGameResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientFriendsPlayedCustomGameResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientFriendsPlayedCustomGameResponse*>(
               &_CMsgGCToClientFriendsPlayedCustomGameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    173;

  void Swap(CMsgGCToClientFriendsPlayedCustomGameResponse* other);
  friend void swap(CMsgGCToClientFriendsPlayedCustomGameResponse& a, CMsgGCToClientFriendsPlayedCustomGameResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientFriendsPlayedCustomGameResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToClientFriendsPlayedCustomGameResponse>(nullptr);
  }

  CMsgGCToClientFriendsPlayedCustomGameResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientFriendsPlayedCustomGameResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientFriendsPlayedCustomGameResponse& from);
  void MergeFrom(const CMsgGCToClientFriendsPlayedCustomGameResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientFriendsPlayedCustomGameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 2;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 2;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // optional uint64 custom_game_id = 1;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  ::google::protobuf::uint64 custom_game_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialMatchPostCommentRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest) */ {
 public:
  CMsgClientToGCSocialMatchPostCommentRequest();
  virtual ~CMsgClientToGCSocialMatchPostCommentRequest();

  CMsgClientToGCSocialMatchPostCommentRequest(const CMsgClientToGCSocialMatchPostCommentRequest& from);

  inline CMsgClientToGCSocialMatchPostCommentRequest& operator=(const CMsgClientToGCSocialMatchPostCommentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCSocialMatchPostCommentRequest(CMsgClientToGCSocialMatchPostCommentRequest&& from) noexcept
    : CMsgClientToGCSocialMatchPostCommentRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSocialMatchPostCommentRequest& operator=(CMsgClientToGCSocialMatchPostCommentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCSocialMatchPostCommentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCSocialMatchPostCommentRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSocialMatchPostCommentRequest*>(
               &_CMsgClientToGCSocialMatchPostCommentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    174;

  void Swap(CMsgClientToGCSocialMatchPostCommentRequest* other);
  friend void swap(CMsgClientToGCSocialMatchPostCommentRequest& a, CMsgClientToGCSocialMatchPostCommentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSocialMatchPostCommentRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSocialMatchPostCommentRequest>(nullptr);
  }

  CMsgClientToGCSocialMatchPostCommentRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSocialMatchPostCommentRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCSocialMatchPostCommentRequest& from);
  void MergeFrom(const CMsgClientToGCSocialMatchPostCommentRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSocialMatchPostCommentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string comment = 2;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 2;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::uint64 match_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialMatchPostCommentResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientSocialMatchPostCommentResponse) */ {
 public:
  CMsgGCToClientSocialMatchPostCommentResponse();
  virtual ~CMsgGCToClientSocialMatchPostCommentResponse();

  CMsgGCToClientSocialMatchPostCommentResponse(const CMsgGCToClientSocialMatchPostCommentResponse& from);

  inline CMsgGCToClientSocialMatchPostCommentResponse& operator=(const CMsgGCToClientSocialMatchPostCommentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientSocialMatchPostCommentResponse(CMsgGCToClientSocialMatchPostCommentResponse&& from) noexcept
    : CMsgGCToClientSocialMatchPostCommentResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientSocialMatchPostCommentResponse& operator=(CMsgGCToClientSocialMatchPostCommentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientSocialMatchPostCommentResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientSocialMatchPostCommentResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientSocialMatchPostCommentResponse*>(
               &_CMsgGCToClientSocialMatchPostCommentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    175;

  void Swap(CMsgGCToClientSocialMatchPostCommentResponse* other);
  friend void swap(CMsgGCToClientSocialMatchPostCommentResponse& a, CMsgGCToClientSocialMatchPostCommentResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientSocialMatchPostCommentResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToClientSocialMatchPostCommentResponse>(nullptr);
  }

  CMsgGCToClientSocialMatchPostCommentResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientSocialMatchPostCommentResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientSocialMatchPostCommentResponse& from);
  void MergeFrom(const CMsgGCToClientSocialMatchPostCommentResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientSocialMatchPostCommentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientSocialMatchPostCommentResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool success_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialMatchDetailsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSocialMatchDetailsRequest) */ {
 public:
  CMsgClientToGCSocialMatchDetailsRequest();
  virtual ~CMsgClientToGCSocialMatchDetailsRequest();

  CMsgClientToGCSocialMatchDetailsRequest(const CMsgClientToGCSocialMatchDetailsRequest& from);

  inline CMsgClientToGCSocialMatchDetailsRequest& operator=(const CMsgClientToGCSocialMatchDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCSocialMatchDetailsRequest(CMsgClientToGCSocialMatchDetailsRequest&& from) noexcept
    : CMsgClientToGCSocialMatchDetailsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSocialMatchDetailsRequest& operator=(CMsgClientToGCSocialMatchDetailsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCSocialMatchDetailsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCSocialMatchDetailsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSocialMatchDetailsRequest*>(
               &_CMsgClientToGCSocialMatchDetailsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    176;

  void Swap(CMsgClientToGCSocialMatchDetailsRequest* other);
  friend void swap(CMsgClientToGCSocialMatchDetailsRequest& a, CMsgClientToGCSocialMatchDetailsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSocialMatchDetailsRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSocialMatchDetailsRequest>(nullptr);
  }

  CMsgClientToGCSocialMatchDetailsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSocialMatchDetailsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCSocialMatchDetailsRequest& from);
  void MergeFrom(const CMsgClientToGCSocialMatchDetailsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSocialMatchDetailsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 pagination_timestamp = 2;
  bool has_pagination_timestamp() const;
  void clear_pagination_timestamp();
  static const int kPaginationTimestampFieldNumber = 2;
  ::google::protobuf::uint32 pagination_timestamp() const;
  void set_pagination_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSocialMatchDetailsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 pagination_timestamp_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialMatchDetailsResponse_Comment final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment) */ {
 public:
  CMsgGCToClientSocialMatchDetailsResponse_Comment();
  virtual ~CMsgGCToClientSocialMatchDetailsResponse_Comment();

  CMsgGCToClientSocialMatchDetailsResponse_Comment(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from);

  inline CMsgGCToClientSocialMatchDetailsResponse_Comment& operator=(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientSocialMatchDetailsResponse_Comment(CMsgGCToClientSocialMatchDetailsResponse_Comment&& from) noexcept
    : CMsgGCToClientSocialMatchDetailsResponse_Comment() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientSocialMatchDetailsResponse_Comment& operator=(CMsgGCToClientSocialMatchDetailsResponse_Comment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientSocialMatchDetailsResponse_Comment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientSocialMatchDetailsResponse_Comment* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientSocialMatchDetailsResponse_Comment*>(
               &_CMsgGCToClientSocialMatchDetailsResponse_Comment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    177;

  void Swap(CMsgGCToClientSocialMatchDetailsResponse_Comment* other);
  friend void swap(CMsgGCToClientSocialMatchDetailsResponse_Comment& a, CMsgGCToClientSocialMatchDetailsResponse_Comment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientSocialMatchDetailsResponse_Comment* New() const final {
    return CreateMaybeMessage<CMsgGCToClientSocialMatchDetailsResponse_Comment>(nullptr);
  }

  CMsgGCToClientSocialMatchDetailsResponse_Comment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientSocialMatchDetailsResponse_Comment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from);
  void MergeFrom(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientSocialMatchDetailsResponse_Comment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string persona_name = 2;
  bool has_persona_name() const;
  void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  const ::std::string& persona_name() const;
  void set_persona_name(const ::std::string& value);
  #if LANG_CXX11
  void set_persona_name(::std::string&& value);
  #endif
  void set_persona_name(const char* value);
  void set_persona_name(const char* value, size_t size);
  ::std::string* mutable_persona_name();
  ::std::string* release_persona_name();
  void set_allocated_persona_name(::std::string* persona_name);

  // optional string comment = 4;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 4;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr persona_name_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 timestamp_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialMatchDetailsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientSocialMatchDetailsResponse) */ {
 public:
  CMsgGCToClientSocialMatchDetailsResponse();
  virtual ~CMsgGCToClientSocialMatchDetailsResponse();

  CMsgGCToClientSocialMatchDetailsResponse(const CMsgGCToClientSocialMatchDetailsResponse& from);

  inline CMsgGCToClientSocialMatchDetailsResponse& operator=(const CMsgGCToClientSocialMatchDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientSocialMatchDetailsResponse(CMsgGCToClientSocialMatchDetailsResponse&& from) noexcept
    : CMsgGCToClientSocialMatchDetailsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientSocialMatchDetailsResponse& operator=(CMsgGCToClientSocialMatchDetailsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientSocialMatchDetailsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientSocialMatchDetailsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientSocialMatchDetailsResponse*>(
               &_CMsgGCToClientSocialMatchDetailsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    178;

  void Swap(CMsgGCToClientSocialMatchDetailsResponse* other);
  friend void swap(CMsgGCToClientSocialMatchDetailsResponse& a, CMsgGCToClientSocialMatchDetailsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientSocialMatchDetailsResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToClientSocialMatchDetailsResponse>(nullptr);
  }

  CMsgGCToClientSocialMatchDetailsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientSocialMatchDetailsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientSocialMatchDetailsResponse& from);
  void MergeFrom(const CMsgGCToClientSocialMatchDetailsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientSocialMatchDetailsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientSocialMatchDetailsResponse_Comment Comment;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment comments = 2;
  int comments_size() const;
  void clear_comments();
  static const int kCommentsFieldNumber = 2;
  ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment* mutable_comments(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment >*
      mutable_comments();
  const ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment& comments(int index) const;
  ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment* add_comments();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment >&
      comments() const;

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientSocialMatchDetailsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment > comments_;
  bool success_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAPartyRichPresence_Member final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPartyRichPresence.Member) */ {
 public:
  CMsgDOTAPartyRichPresence_Member();
  virtual ~CMsgDOTAPartyRichPresence_Member();

  CMsgDOTAPartyRichPresence_Member(const CMsgDOTAPartyRichPresence_Member& from);

  inline CMsgDOTAPartyRichPresence_Member& operator=(const CMsgDOTAPartyRichPresence_Member& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAPartyRichPresence_Member(CMsgDOTAPartyRichPresence_Member&& from) noexcept
    : CMsgDOTAPartyRichPresence_Member() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAPartyRichPresence_Member& operator=(CMsgDOTAPartyRichPresence_Member&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAPartyRichPresence_Member& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAPartyRichPresence_Member* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPartyRichPresence_Member*>(
               &_CMsgDOTAPartyRichPresence_Member_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    179;

  void Swap(CMsgDOTAPartyRichPresence_Member* other);
  friend void swap(CMsgDOTAPartyRichPresence_Member& a, CMsgDOTAPartyRichPresence_Member& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAPartyRichPresence_Member* New() const final {
    return CreateMaybeMessage<CMsgDOTAPartyRichPresence_Member>(nullptr);
  }

  CMsgDOTAPartyRichPresence_Member* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAPartyRichPresence_Member>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAPartyRichPresence_Member& from);
  void MergeFrom(const CMsgDOTAPartyRichPresence_Member& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAPartyRichPresence_Member* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional bool coach = 2;
  bool has_coach() const;
  void clear_coach();
  static const int kCoachFieldNumber = 2;
  bool coach() const;
  void set_coach(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPartyRichPresence.Member)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  bool coach_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAPartyRichPresence_WeekendTourney final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney) */ {
 public:
  CMsgDOTAPartyRichPresence_WeekendTourney();
  virtual ~CMsgDOTAPartyRichPresence_WeekendTourney();

  CMsgDOTAPartyRichPresence_WeekendTourney(const CMsgDOTAPartyRichPresence_WeekendTourney& from);

  inline CMsgDOTAPartyRichPresence_WeekendTourney& operator=(const CMsgDOTAPartyRichPresence_WeekendTourney& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAPartyRichPresence_WeekendTourney(CMsgDOTAPartyRichPresence_WeekendTourney&& from) noexcept
    : CMsgDOTAPartyRichPresence_WeekendTourney() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAPartyRichPresence_WeekendTourney& operator=(CMsgDOTAPartyRichPresence_WeekendTourney&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAPartyRichPresence_WeekendTourney& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAPartyRichPresence_WeekendTourney* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPartyRichPresence_WeekendTourney*>(
               &_CMsgDOTAPartyRichPresence_WeekendTourney_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    180;

  void Swap(CMsgDOTAPartyRichPresence_WeekendTourney* other);
  friend void swap(CMsgDOTAPartyRichPresence_WeekendTourney& a, CMsgDOTAPartyRichPresence_WeekendTourney& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAPartyRichPresence_WeekendTourney* New() const final {
    return CreateMaybeMessage<CMsgDOTAPartyRichPresence_WeekendTourney>(nullptr);
  }

  CMsgDOTAPartyRichPresence_WeekendTourney* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAPartyRichPresence_WeekendTourney>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAPartyRichPresence_WeekendTourney& from);
  void MergeFrom(const CMsgDOTAPartyRichPresence_WeekendTourney& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAPartyRichPresence_WeekendTourney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 division = 1;
  bool has_division() const;
  void clear_division();
  static const int kDivisionFieldNumber = 1;
  ::google::protobuf::uint32 division() const;
  void set_division(::google::protobuf::uint32 value);

  // optional uint32 skill_level = 2;
  bool has_skill_level() const;
  void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  ::google::protobuf::uint32 skill_level() const;
  void set_skill_level(::google::protobuf::uint32 value);

  // optional uint32 round = 3;
  bool has_round() const;
  void clear_round();
  static const int kRoundFieldNumber = 3;
  ::google::protobuf::uint32 round() const;
  void set_round(::google::protobuf::uint32 value);

  // optional uint32 tournament_id = 4;
  bool has_tournament_id() const;
  void clear_tournament_id();
  static const int kTournamentIdFieldNumber = 4;
  ::google::protobuf::uint32 tournament_id() const;
  void set_tournament_id(::google::protobuf::uint32 value);

  // optional uint32 state_seq_num = 5;
  bool has_state_seq_num() const;
  void clear_state_seq_num();
  static const int kStateSeqNumFieldNumber = 5;
  ::google::protobuf::uint32 state_seq_num() const;
  void set_state_seq_num(::google::protobuf::uint32 value);

  // optional .proto.dota.EWeekendTourneyRichPresenceEvent event = 6 [default = k_EWeekendTourneyRichPresenceEvent_None];
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 6;
  ::proto::dota::EWeekendTourneyRichPresenceEvent event() const;
  void set_event(::proto::dota::EWeekendTourneyRichPresenceEvent value);

  // optional uint32 event_round = 7;
  bool has_event_round() const;
  void clear_event_round();
  static const int kEventRoundFieldNumber = 7;
  ::google::protobuf::uint32 event_round() const;
  void set_event_round(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 division_;
  ::google::protobuf::uint32 skill_level_;
  ::google::protobuf::uint32 round_;
  ::google::protobuf::uint32 tournament_id_;
  ::google::protobuf::uint32 state_seq_num_;
  int event_;
  ::google::protobuf::uint32 event_round_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAPartyRichPresence final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPartyRichPresence) */ {
 public:
  CMsgDOTAPartyRichPresence();
  virtual ~CMsgDOTAPartyRichPresence();

  CMsgDOTAPartyRichPresence(const CMsgDOTAPartyRichPresence& from);

  inline CMsgDOTAPartyRichPresence& operator=(const CMsgDOTAPartyRichPresence& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAPartyRichPresence(CMsgDOTAPartyRichPresence&& from) noexcept
    : CMsgDOTAPartyRichPresence() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAPartyRichPresence& operator=(CMsgDOTAPartyRichPresence&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAPartyRichPresence& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAPartyRichPresence* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPartyRichPresence*>(
               &_CMsgDOTAPartyRichPresence_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    181;

  void Swap(CMsgDOTAPartyRichPresence* other);
  friend void swap(CMsgDOTAPartyRichPresence& a, CMsgDOTAPartyRichPresence& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAPartyRichPresence* New() const final {
    return CreateMaybeMessage<CMsgDOTAPartyRichPresence>(nullptr);
  }

  CMsgDOTAPartyRichPresence* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAPartyRichPresence>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAPartyRichPresence& from);
  void MergeFrom(const CMsgDOTAPartyRichPresence& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAPartyRichPresence* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAPartyRichPresence_Member Member;
  typedef CMsgDOTAPartyRichPresence_WeekendTourney WeekendTourney;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAPartyRichPresence.Member members = 4;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 4;
  ::proto::dota::CMsgDOTAPartyRichPresence_Member* mutable_members(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAPartyRichPresence_Member >*
      mutable_members();
  const ::proto::dota::CMsgDOTAPartyRichPresence_Member& members(int index) const;
  ::proto::dota::CMsgDOTAPartyRichPresence_Member* add_members();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAPartyRichPresence_Member >&
      members() const;

  // optional string team_name = 8;
  bool has_team_name() const;
  void clear_team_name();
  static const int kTeamNameFieldNumber = 8;
  const ::std::string& team_name() const;
  void set_team_name(const ::std::string& value);
  #if LANG_CXX11
  void set_team_name(::std::string&& value);
  #endif
  void set_team_name(const char* value);
  void set_team_name(const char* value, size_t size);
  ::std::string* mutable_team_name();
  ::std::string* release_team_name();
  void set_allocated_team_name(::std::string* team_name);

  // optional .proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney weekend_tourney = 6;
  bool has_weekend_tourney() const;
  void clear_weekend_tourney();
  static const int kWeekendTourneyFieldNumber = 6;
  const ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney& weekend_tourney() const;
  ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* release_weekend_tourney();
  ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* mutable_weekend_tourney();
  void set_allocated_weekend_tourney(::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* weekend_tourney);

  // optional fixed64 party_id = 1;
  bool has_party_id() const;
  void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  ::google::protobuf::uint64 party_id() const;
  void set_party_id(::google::protobuf::uint64 value);

  // optional .proto.dota.CSODOTAParty.State party_state = 2 [default = UI];
  bool has_party_state() const;
  void clear_party_state();
  static const int kPartyStateFieldNumber = 2;
  ::proto::dota::CSODOTAParty_State party_state() const;
  void set_party_state(::proto::dota::CSODOTAParty_State value);

  // optional bool open = 3;
  bool has_open() const;
  void clear_open();
  static const int kOpenFieldNumber = 3;
  bool open() const;
  void set_open(bool value);

  // optional bool low_priority = 5;
  bool has_low_priority() const;
  void clear_low_priority();
  static const int kLowPriorityFieldNumber = 5;
  bool low_priority() const;
  void set_low_priority(bool value);

  // optional uint64 ugc_team_ui_logo = 9;
  bool has_ugc_team_ui_logo() const;
  void clear_ugc_team_ui_logo();
  static const int kUgcTeamUiLogoFieldNumber = 9;
  ::google::protobuf::uint64 ugc_team_ui_logo() const;
  void set_ugc_team_ui_logo(::google::protobuf::uint64 value);

  // optional uint32 team_id = 7;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 7;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPartyRichPresence)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAPartyRichPresence_Member > members_;
  ::google::protobuf::internal::ArenaStringPtr team_name_;
  ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* weekend_tourney_;
  ::google::protobuf::uint64 party_id_;
  int party_state_;
  bool open_;
  bool low_priority_;
  ::google::protobuf::uint64 ugc_team_ui_logo_;
  ::google::protobuf::uint32 team_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTALobbyRichPresence final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALobbyRichPresence) */ {
 public:
  CMsgDOTALobbyRichPresence();
  virtual ~CMsgDOTALobbyRichPresence();

  CMsgDOTALobbyRichPresence(const CMsgDOTALobbyRichPresence& from);

  inline CMsgDOTALobbyRichPresence& operator=(const CMsgDOTALobbyRichPresence& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTALobbyRichPresence(CMsgDOTALobbyRichPresence&& from) noexcept
    : CMsgDOTALobbyRichPresence() {
    *this = ::std::move(from);
  }

  inline CMsgDOTALobbyRichPresence& operator=(CMsgDOTALobbyRichPresence&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTALobbyRichPresence& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTALobbyRichPresence* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALobbyRichPresence*>(
               &_CMsgDOTALobbyRichPresence_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    182;

  void Swap(CMsgDOTALobbyRichPresence* other);
  friend void swap(CMsgDOTALobbyRichPresence& a, CMsgDOTALobbyRichPresence& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTALobbyRichPresence* New() const final {
    return CreateMaybeMessage<CMsgDOTALobbyRichPresence>(nullptr);
  }

  CMsgDOTALobbyRichPresence* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTALobbyRichPresence>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTALobbyRichPresence& from);
  void MergeFrom(const CMsgDOTALobbyRichPresence& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTALobbyRichPresence* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 8;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 8;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional fixed64 lobby_id = 1;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional .proto.dota.CSODOTALobby.State lobby_state = 2 [default = UI];
  bool has_lobby_state() const;
  void clear_lobby_state();
  static const int kLobbyStateFieldNumber = 2;
  ::proto::dota::CSODOTALobby_State lobby_state() const;
  void set_lobby_state(::proto::dota::CSODOTALobby_State value);

  // optional bool password = 3;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  bool password() const;
  void set_password(bool value);

  // optional .proto.dota.DOTA_GameMode game_mode = 4 [default = DOTA_GAMEMODE_NONE];
  bool has_game_mode() const;
  void clear_game_mode();
  static const int kGameModeFieldNumber = 4;
  ::proto::dota::DOTA_GameMode game_mode() const;
  void set_game_mode(::proto::dota::DOTA_GameMode value);

  // optional uint32 member_count = 5;
  bool has_member_count() const;
  void clear_member_count();
  static const int kMemberCountFieldNumber = 5;
  ::google::protobuf::uint32 member_count() const;
  void set_member_count(::google::protobuf::uint32 value);

  // optional fixed64 custom_game_id = 7;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 7;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // optional uint32 max_member_count = 6;
  bool has_max_member_count() const;
  void clear_max_member_count();
  static const int kMaxMemberCountFieldNumber = 6;
  ::google::protobuf::uint32 max_member_count() const;
  void set_max_member_count(::google::protobuf::uint32 value);

  // optional uint32 lobby_type = 9;
  bool has_lobby_type() const;
  void clear_lobby_type();
  static const int kLobbyTypeFieldNumber = 9;
  ::google::protobuf::uint32 lobby_type() const;
  void set_lobby_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALobbyRichPresence)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 lobby_id_;
  int lobby_state_;
  bool password_;
  int game_mode_;
  ::google::protobuf::uint32 member_count_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint32 max_member_count_;
  ::google::protobuf::uint32 lobby_type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTACustomGameListenServerStartedLoading final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACustomGameListenServerStartedLoading) */ {
 public:
  CMsgDOTACustomGameListenServerStartedLoading();
  virtual ~CMsgDOTACustomGameListenServerStartedLoading();

  CMsgDOTACustomGameListenServerStartedLoading(const CMsgDOTACustomGameListenServerStartedLoading& from);

  inline CMsgDOTACustomGameListenServerStartedLoading& operator=(const CMsgDOTACustomGameListenServerStartedLoading& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTACustomGameListenServerStartedLoading(CMsgDOTACustomGameListenServerStartedLoading&& from) noexcept
    : CMsgDOTACustomGameListenServerStartedLoading() {
    *this = ::std::move(from);
  }

  inline CMsgDOTACustomGameListenServerStartedLoading& operator=(CMsgDOTACustomGameListenServerStartedLoading&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTACustomGameListenServerStartedLoading& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTACustomGameListenServerStartedLoading* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACustomGameListenServerStartedLoading*>(
               &_CMsgDOTACustomGameListenServerStartedLoading_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    183;

  void Swap(CMsgDOTACustomGameListenServerStartedLoading* other);
  friend void swap(CMsgDOTACustomGameListenServerStartedLoading& a, CMsgDOTACustomGameListenServerStartedLoading& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTACustomGameListenServerStartedLoading* New() const final {
    return CreateMaybeMessage<CMsgDOTACustomGameListenServerStartedLoading>(nullptr);
  }

  CMsgDOTACustomGameListenServerStartedLoading* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTACustomGameListenServerStartedLoading>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTACustomGameListenServerStartedLoading& from);
  void MergeFrom(const CMsgDOTACustomGameListenServerStartedLoading& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTACustomGameListenServerStartedLoading* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 lobby_members = 3;
  int lobby_members_size() const;
  void clear_lobby_members();
  static const int kLobbyMembersFieldNumber = 3;
  ::google::protobuf::uint32 lobby_members(int index) const;
  void set_lobby_members(int index, ::google::protobuf::uint32 value);
  void add_lobby_members(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      lobby_members() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_lobby_members();

  // optional fixed64 lobby_id = 1;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint64 custom_game_id = 2;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 2;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // optional uint32 start_time = 4;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACustomGameListenServerStartedLoading)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lobby_members_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint32 start_time_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTACustomGameClientFinishedLoading final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACustomGameClientFinishedLoading) */ {
 public:
  CMsgDOTACustomGameClientFinishedLoading();
  virtual ~CMsgDOTACustomGameClientFinishedLoading();

  CMsgDOTACustomGameClientFinishedLoading(const CMsgDOTACustomGameClientFinishedLoading& from);

  inline CMsgDOTACustomGameClientFinishedLoading& operator=(const CMsgDOTACustomGameClientFinishedLoading& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTACustomGameClientFinishedLoading(CMsgDOTACustomGameClientFinishedLoading&& from) noexcept
    : CMsgDOTACustomGameClientFinishedLoading() {
    *this = ::std::move(from);
  }

  inline CMsgDOTACustomGameClientFinishedLoading& operator=(CMsgDOTACustomGameClientFinishedLoading&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTACustomGameClientFinishedLoading& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTACustomGameClientFinishedLoading* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACustomGameClientFinishedLoading*>(
               &_CMsgDOTACustomGameClientFinishedLoading_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    184;

  void Swap(CMsgDOTACustomGameClientFinishedLoading* other);
  friend void swap(CMsgDOTACustomGameClientFinishedLoading& a, CMsgDOTACustomGameClientFinishedLoading& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTACustomGameClientFinishedLoading* New() const final {
    return CreateMaybeMessage<CMsgDOTACustomGameClientFinishedLoading>(nullptr);
  }

  CMsgDOTACustomGameClientFinishedLoading* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTACustomGameClientFinishedLoading>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTACustomGameClientFinishedLoading& from);
  void MergeFrom(const CMsgDOTACustomGameClientFinishedLoading& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTACustomGameClientFinishedLoading* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string result_string = 4;
  bool has_result_string() const;
  void clear_result_string();
  static const int kResultStringFieldNumber = 4;
  const ::std::string& result_string() const;
  void set_result_string(const ::std::string& value);
  #if LANG_CXX11
  void set_result_string(::std::string&& value);
  #endif
  void set_result_string(const char* value);
  void set_result_string(const char* value, size_t size);
  ::std::string* mutable_result_string();
  ::std::string* release_result_string();
  void set_allocated_result_string(::std::string* result_string);

  // optional string comment = 6;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 6;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional fixed64 lobby_id = 1;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint32 loading_duration = 2;
  bool has_loading_duration() const;
  void clear_loading_duration();
  static const int kLoadingDurationFieldNumber = 2;
  ::google::protobuf::uint32 loading_duration() const;
  void set_loading_duration(::google::protobuf::uint32 value);

  // optional sint32 result_code = 3;
  bool has_result_code() const;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 3;
  ::google::protobuf::int32 result_code() const;
  void set_result_code(::google::protobuf::int32 value);

  // optional uint32 signon_states = 5;
  bool has_signon_states() const;
  void clear_signon_states();
  static const int kSignonStatesFieldNumber = 5;
  ::google::protobuf::uint32 signon_states() const;
  void set_signon_states(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACustomGameClientFinishedLoading)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr result_string_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint32 loading_duration_;
  ::google::protobuf::int32 result_code_;
  ::google::protobuf::uint32 signon_states_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCApplyGemCombiner final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCApplyGemCombiner) */ {
 public:
  CMsgClientToGCApplyGemCombiner();
  virtual ~CMsgClientToGCApplyGemCombiner();

  CMsgClientToGCApplyGemCombiner(const CMsgClientToGCApplyGemCombiner& from);

  inline CMsgClientToGCApplyGemCombiner& operator=(const CMsgClientToGCApplyGemCombiner& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCApplyGemCombiner(CMsgClientToGCApplyGemCombiner&& from) noexcept
    : CMsgClientToGCApplyGemCombiner() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCApplyGemCombiner& operator=(CMsgClientToGCApplyGemCombiner&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCApplyGemCombiner& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCApplyGemCombiner* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCApplyGemCombiner*>(
               &_CMsgClientToGCApplyGemCombiner_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    185;

  void Swap(CMsgClientToGCApplyGemCombiner* other);
  friend void swap(CMsgClientToGCApplyGemCombiner& a, CMsgClientToGCApplyGemCombiner& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCApplyGemCombiner* New() const final {
    return CreateMaybeMessage<CMsgClientToGCApplyGemCombiner>(nullptr);
  }

  CMsgClientToGCApplyGemCombiner* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCApplyGemCombiner>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCApplyGemCombiner& from);
  void MergeFrom(const CMsgClientToGCApplyGemCombiner& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCApplyGemCombiner* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id_1 = 1;
  bool has_item_id_1() const;
  void clear_item_id_1();
  static const int kItemId1FieldNumber = 1;
  ::google::protobuf::uint64 item_id_1() const;
  void set_item_id_1(::google::protobuf::uint64 value);

  // optional uint64 item_id_2 = 2;
  bool has_item_id_2() const;
  void clear_item_id_2();
  static const int kItemId2FieldNumber = 2;
  ::google::protobuf::uint64 item_id_2() const;
  void set_item_id_2(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCApplyGemCombiner)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 item_id_1_;
  ::google::protobuf::uint64 item_id_2_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCH264Unsupported final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCH264Unsupported) */ {
 public:
  CMsgClientToGCH264Unsupported();
  virtual ~CMsgClientToGCH264Unsupported();

  CMsgClientToGCH264Unsupported(const CMsgClientToGCH264Unsupported& from);

  inline CMsgClientToGCH264Unsupported& operator=(const CMsgClientToGCH264Unsupported& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCH264Unsupported(CMsgClientToGCH264Unsupported&& from) noexcept
    : CMsgClientToGCH264Unsupported() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCH264Unsupported& operator=(CMsgClientToGCH264Unsupported&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCH264Unsupported& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCH264Unsupported* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCH264Unsupported*>(
               &_CMsgClientToGCH264Unsupported_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    186;

  void Swap(CMsgClientToGCH264Unsupported* other);
  friend void swap(CMsgClientToGCH264Unsupported& a, CMsgClientToGCH264Unsupported& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCH264Unsupported* New() const final {
    return CreateMaybeMessage<CMsgClientToGCH264Unsupported>(nullptr);
  }

  CMsgClientToGCH264Unsupported* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCH264Unsupported>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCH264Unsupported& from);
  void MergeFrom(const CMsgClientToGCH264Unsupported& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCH264Unsupported* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCH264Unsupported)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestH264Support final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestH264Support) */ {
 public:
  CMsgClientToGCRequestH264Support();
  virtual ~CMsgClientToGCRequestH264Support();

  CMsgClientToGCRequestH264Support(const CMsgClientToGCRequestH264Support& from);

  inline CMsgClientToGCRequestH264Support& operator=(const CMsgClientToGCRequestH264Support& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestH264Support(CMsgClientToGCRequestH264Support&& from) noexcept
    : CMsgClientToGCRequestH264Support() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestH264Support& operator=(CMsgClientToGCRequestH264Support&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestH264Support& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestH264Support* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestH264Support*>(
               &_CMsgClientToGCRequestH264Support_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    187;

  void Swap(CMsgClientToGCRequestH264Support* other);
  friend void swap(CMsgClientToGCRequestH264Support& a, CMsgClientToGCRequestH264Support& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestH264Support* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestH264Support>(nullptr);
  }

  CMsgClientToGCRequestH264Support* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestH264Support>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestH264Support& from);
  void MergeFrom(const CMsgClientToGCRequestH264Support& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestH264Support* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestH264Support)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetQuestProgress final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetQuestProgress) */ {
 public:
  CMsgClientToGCGetQuestProgress();
  virtual ~CMsgClientToGCGetQuestProgress();

  CMsgClientToGCGetQuestProgress(const CMsgClientToGCGetQuestProgress& from);

  inline CMsgClientToGCGetQuestProgress& operator=(const CMsgClientToGCGetQuestProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetQuestProgress(CMsgClientToGCGetQuestProgress&& from) noexcept
    : CMsgClientToGCGetQuestProgress() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetQuestProgress& operator=(CMsgClientToGCGetQuestProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetQuestProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetQuestProgress* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetQuestProgress*>(
               &_CMsgClientToGCGetQuestProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    188;

  void Swap(CMsgClientToGCGetQuestProgress* other);
  friend void swap(CMsgClientToGCGetQuestProgress& a, CMsgClientToGCGetQuestProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetQuestProgress* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetQuestProgress>(nullptr);
  }

  CMsgClientToGCGetQuestProgress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetQuestProgress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetQuestProgress& from);
  void MergeFrom(const CMsgClientToGCGetQuestProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetQuestProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 quest_ids = 1;
  int quest_ids_size() const;
  void clear_quest_ids();
  static const int kQuestIdsFieldNumber = 1;
  ::google::protobuf::uint32 quest_ids(int index) const;
  void set_quest_ids(int index, ::google::protobuf::uint32 value);
  void add_quest_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      quest_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_quest_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetQuestProgress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > quest_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetQuestProgressResponse_Challenge final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge) */ {
 public:
  CMsgClientToGCGetQuestProgressResponse_Challenge();
  virtual ~CMsgClientToGCGetQuestProgressResponse_Challenge();

  CMsgClientToGCGetQuestProgressResponse_Challenge(const CMsgClientToGCGetQuestProgressResponse_Challenge& from);

  inline CMsgClientToGCGetQuestProgressResponse_Challenge& operator=(const CMsgClientToGCGetQuestProgressResponse_Challenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetQuestProgressResponse_Challenge(CMsgClientToGCGetQuestProgressResponse_Challenge&& from) noexcept
    : CMsgClientToGCGetQuestProgressResponse_Challenge() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetQuestProgressResponse_Challenge& operator=(CMsgClientToGCGetQuestProgressResponse_Challenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetQuestProgressResponse_Challenge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetQuestProgressResponse_Challenge* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetQuestProgressResponse_Challenge*>(
               &_CMsgClientToGCGetQuestProgressResponse_Challenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    189;

  void Swap(CMsgClientToGCGetQuestProgressResponse_Challenge* other);
  friend void swap(CMsgClientToGCGetQuestProgressResponse_Challenge& a, CMsgClientToGCGetQuestProgressResponse_Challenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetQuestProgressResponse_Challenge* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetQuestProgressResponse_Challenge>(nullptr);
  }

  CMsgClientToGCGetQuestProgressResponse_Challenge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetQuestProgressResponse_Challenge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetQuestProgressResponse_Challenge& from);
  void MergeFrom(const CMsgClientToGCGetQuestProgressResponse_Challenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetQuestProgressResponse_Challenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 challenge_id = 1;
  bool has_challenge_id() const;
  void clear_challenge_id();
  static const int kChallengeIdFieldNumber = 1;
  ::google::protobuf::uint32 challenge_id() const;
  void set_challenge_id(::google::protobuf::uint32 value);

  // optional uint32 time_completed = 2;
  bool has_time_completed() const;
  void clear_time_completed();
  static const int kTimeCompletedFieldNumber = 2;
  ::google::protobuf::uint32 time_completed() const;
  void set_time_completed(::google::protobuf::uint32 value);

  // optional uint32 attempts = 3;
  bool has_attempts() const;
  void clear_attempts();
  static const int kAttemptsFieldNumber = 3;
  ::google::protobuf::uint32 attempts() const;
  void set_attempts(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 4;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 template_id = 5;
  bool has_template_id() const;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 5;
  ::google::protobuf::uint32 template_id() const;
  void set_template_id(::google::protobuf::uint32 value);

  // optional uint32 quest_rank = 6;
  bool has_quest_rank() const;
  void clear_quest_rank();
  static const int kQuestRankFieldNumber = 6;
  ::google::protobuf::uint32 quest_rank() const;
  void set_quest_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 challenge_id_;
  ::google::protobuf::uint32 time_completed_;
  ::google::protobuf::uint32 attempts_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 template_id_;
  ::google::protobuf::uint32 quest_rank_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetQuestProgressResponse_Quest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest) */ {
 public:
  CMsgClientToGCGetQuestProgressResponse_Quest();
  virtual ~CMsgClientToGCGetQuestProgressResponse_Quest();

  CMsgClientToGCGetQuestProgressResponse_Quest(const CMsgClientToGCGetQuestProgressResponse_Quest& from);

  inline CMsgClientToGCGetQuestProgressResponse_Quest& operator=(const CMsgClientToGCGetQuestProgressResponse_Quest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetQuestProgressResponse_Quest(CMsgClientToGCGetQuestProgressResponse_Quest&& from) noexcept
    : CMsgClientToGCGetQuestProgressResponse_Quest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetQuestProgressResponse_Quest& operator=(CMsgClientToGCGetQuestProgressResponse_Quest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetQuestProgressResponse_Quest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetQuestProgressResponse_Quest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetQuestProgressResponse_Quest*>(
               &_CMsgClientToGCGetQuestProgressResponse_Quest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    190;

  void Swap(CMsgClientToGCGetQuestProgressResponse_Quest* other);
  friend void swap(CMsgClientToGCGetQuestProgressResponse_Quest& a, CMsgClientToGCGetQuestProgressResponse_Quest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetQuestProgressResponse_Quest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetQuestProgressResponse_Quest>(nullptr);
  }

  CMsgClientToGCGetQuestProgressResponse_Quest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetQuestProgressResponse_Quest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetQuestProgressResponse_Quest& from);
  void MergeFrom(const CMsgClientToGCGetQuestProgressResponse_Quest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetQuestProgressResponse_Quest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge completed_challenges = 2;
  int completed_challenges_size() const;
  void clear_completed_challenges();
  static const int kCompletedChallengesFieldNumber = 2;
  ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge* mutable_completed_challenges(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge >*
      mutable_completed_challenges();
  const ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge& completed_challenges(int index) const;
  ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge* add_completed_challenges();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge >&
      completed_challenges() const;

  // optional uint32 quest_id = 1;
  bool has_quest_id() const;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge > completed_challenges_;
  ::google::protobuf::uint32 quest_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetQuestProgressResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetQuestProgressResponse) */ {
 public:
  CMsgClientToGCGetQuestProgressResponse();
  virtual ~CMsgClientToGCGetQuestProgressResponse();

  CMsgClientToGCGetQuestProgressResponse(const CMsgClientToGCGetQuestProgressResponse& from);

  inline CMsgClientToGCGetQuestProgressResponse& operator=(const CMsgClientToGCGetQuestProgressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetQuestProgressResponse(CMsgClientToGCGetQuestProgressResponse&& from) noexcept
    : CMsgClientToGCGetQuestProgressResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetQuestProgressResponse& operator=(CMsgClientToGCGetQuestProgressResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetQuestProgressResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetQuestProgressResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetQuestProgressResponse*>(
               &_CMsgClientToGCGetQuestProgressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    191;

  void Swap(CMsgClientToGCGetQuestProgressResponse* other);
  friend void swap(CMsgClientToGCGetQuestProgressResponse& a, CMsgClientToGCGetQuestProgressResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetQuestProgressResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetQuestProgressResponse>(nullptr);
  }

  CMsgClientToGCGetQuestProgressResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetQuestProgressResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetQuestProgressResponse& from);
  void MergeFrom(const CMsgClientToGCGetQuestProgressResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetQuestProgressResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetQuestProgressResponse_Challenge Challenge;
  typedef CMsgClientToGCGetQuestProgressResponse_Quest Quest;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest quests = 2;
  int quests_size() const;
  void clear_quests();
  static const int kQuestsFieldNumber = 2;
  ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest* mutable_quests(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest >*
      mutable_quests();
  const ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest& quests(int index) const;
  ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest* add_quests();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest >&
      quests() const;

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetQuestProgressResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest > quests_;
  bool success_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientMatchSignedOut final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientMatchSignedOut) */ {
 public:
  CMsgGCToClientMatchSignedOut();
  virtual ~CMsgGCToClientMatchSignedOut();

  CMsgGCToClientMatchSignedOut(const CMsgGCToClientMatchSignedOut& from);

  inline CMsgGCToClientMatchSignedOut& operator=(const CMsgGCToClientMatchSignedOut& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientMatchSignedOut(CMsgGCToClientMatchSignedOut&& from) noexcept
    : CMsgGCToClientMatchSignedOut() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientMatchSignedOut& operator=(CMsgGCToClientMatchSignedOut&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientMatchSignedOut& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientMatchSignedOut* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientMatchSignedOut*>(
               &_CMsgGCToClientMatchSignedOut_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    192;

  void Swap(CMsgGCToClientMatchSignedOut* other);
  friend void swap(CMsgGCToClientMatchSignedOut& a, CMsgGCToClientMatchSignedOut& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientMatchSignedOut* New() const final {
    return CreateMaybeMessage<CMsgGCToClientMatchSignedOut>(nullptr);
  }

  CMsgGCToClientMatchSignedOut* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientMatchSignedOut>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientMatchSignedOut& from);
  void MergeFrom(const CMsgGCToClientMatchSignedOut& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientMatchSignedOut* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientMatchSignedOut)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStatsHistory final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroStatsHistory) */ {
 public:
  CMsgGCGetHeroStatsHistory();
  virtual ~CMsgGCGetHeroStatsHistory();

  CMsgGCGetHeroStatsHistory(const CMsgGCGetHeroStatsHistory& from);

  inline CMsgGCGetHeroStatsHistory& operator=(const CMsgGCGetHeroStatsHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetHeroStatsHistory(CMsgGCGetHeroStatsHistory&& from) noexcept
    : CMsgGCGetHeroStatsHistory() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetHeroStatsHistory& operator=(CMsgGCGetHeroStatsHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetHeroStatsHistory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetHeroStatsHistory* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroStatsHistory*>(
               &_CMsgGCGetHeroStatsHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    193;

  void Swap(CMsgGCGetHeroStatsHistory* other);
  friend void swap(CMsgGCGetHeroStatsHistory& a, CMsgGCGetHeroStatsHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroStatsHistory* New() const final {
    return CreateMaybeMessage<CMsgGCGetHeroStatsHistory>(nullptr);
  }

  CMsgGCGetHeroStatsHistory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetHeroStatsHistory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetHeroStatsHistory& from);
  void MergeFrom(const CMsgGCGetHeroStatsHistory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetHeroStatsHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroStatsHistory)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStatsHistoryResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroStatsHistoryResponse) */ {
 public:
  CMsgGCGetHeroStatsHistoryResponse();
  virtual ~CMsgGCGetHeroStatsHistoryResponse();

  CMsgGCGetHeroStatsHistoryResponse(const CMsgGCGetHeroStatsHistoryResponse& from);

  inline CMsgGCGetHeroStatsHistoryResponse& operator=(const CMsgGCGetHeroStatsHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetHeroStatsHistoryResponse(CMsgGCGetHeroStatsHistoryResponse&& from) noexcept
    : CMsgGCGetHeroStatsHistoryResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetHeroStatsHistoryResponse& operator=(CMsgGCGetHeroStatsHistoryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetHeroStatsHistoryResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetHeroStatsHistoryResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroStatsHistoryResponse*>(
               &_CMsgGCGetHeroStatsHistoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    194;

  void Swap(CMsgGCGetHeroStatsHistoryResponse* other);
  friend void swap(CMsgGCGetHeroStatsHistoryResponse& a, CMsgGCGetHeroStatsHistoryResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroStatsHistoryResponse* New() const final {
    return CreateMaybeMessage<CMsgGCGetHeroStatsHistoryResponse>(nullptr);
  }

  CMsgGCGetHeroStatsHistoryResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetHeroStatsHistoryResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetHeroStatsHistoryResponse& from);
  void MergeFrom(const CMsgGCGetHeroStatsHistoryResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetHeroStatsHistoryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTASDOHeroStatsHistory records = 2;
  int records_size() const;
  void clear_records();
  static const int kRecordsFieldNumber = 2;
  ::proto::dota::CMsgDOTASDOHeroStatsHistory* mutable_records(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTASDOHeroStatsHistory >*
      mutable_records();
  const ::proto::dota::CMsgDOTASDOHeroStatsHistory& records(int index) const;
  ::proto::dota::CMsgDOTASDOHeroStatsHistory* add_records();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTASDOHeroStatsHistory >&
      records() const;

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroStatsHistoryResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTASDOHeroStatsHistory > records_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPlayerConductScorecardRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPlayerConductScorecardRequest) */ {
 public:
  CMsgPlayerConductScorecardRequest();
  virtual ~CMsgPlayerConductScorecardRequest();

  CMsgPlayerConductScorecardRequest(const CMsgPlayerConductScorecardRequest& from);

  inline CMsgPlayerConductScorecardRequest& operator=(const CMsgPlayerConductScorecardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPlayerConductScorecardRequest(CMsgPlayerConductScorecardRequest&& from) noexcept
    : CMsgPlayerConductScorecardRequest() {
    *this = ::std::move(from);
  }

  inline CMsgPlayerConductScorecardRequest& operator=(CMsgPlayerConductScorecardRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPlayerConductScorecardRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPlayerConductScorecardRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgPlayerConductScorecardRequest*>(
               &_CMsgPlayerConductScorecardRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    195;

  void Swap(CMsgPlayerConductScorecardRequest* other);
  friend void swap(CMsgPlayerConductScorecardRequest& a, CMsgPlayerConductScorecardRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPlayerConductScorecardRequest* New() const final {
    return CreateMaybeMessage<CMsgPlayerConductScorecardRequest>(nullptr);
  }

  CMsgPlayerConductScorecardRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPlayerConductScorecardRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPlayerConductScorecardRequest& from);
  void MergeFrom(const CMsgPlayerConductScorecardRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPlayerConductScorecardRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPlayerConductScorecardRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPlayerConductScorecard final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPlayerConductScorecard) */ {
 public:
  CMsgPlayerConductScorecard();
  virtual ~CMsgPlayerConductScorecard();

  CMsgPlayerConductScorecard(const CMsgPlayerConductScorecard& from);

  inline CMsgPlayerConductScorecard& operator=(const CMsgPlayerConductScorecard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPlayerConductScorecard(CMsgPlayerConductScorecard&& from) noexcept
    : CMsgPlayerConductScorecard() {
    *this = ::std::move(from);
  }

  inline CMsgPlayerConductScorecard& operator=(CMsgPlayerConductScorecard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPlayerConductScorecard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPlayerConductScorecard* internal_default_instance() {
    return reinterpret_cast<const CMsgPlayerConductScorecard*>(
               &_CMsgPlayerConductScorecard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    196;

  void Swap(CMsgPlayerConductScorecard* other);
  friend void swap(CMsgPlayerConductScorecard& a, CMsgPlayerConductScorecard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPlayerConductScorecard* New() const final {
    return CreateMaybeMessage<CMsgPlayerConductScorecard>(nullptr);
  }

  CMsgPlayerConductScorecard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPlayerConductScorecard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPlayerConductScorecard& from);
  void MergeFrom(const CMsgPlayerConductScorecard& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPlayerConductScorecard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 seq_num = 3;
  bool has_seq_num() const;
  void clear_seq_num();
  static const int kSeqNumFieldNumber = 3;
  ::google::protobuf::uint32 seq_num() const;
  void set_seq_num(::google::protobuf::uint32 value);

  // optional uint32 reasons = 4;
  bool has_reasons() const;
  void clear_reasons();
  static const int kReasonsFieldNumber = 4;
  ::google::protobuf::uint32 reasons() const;
  void set_reasons(::google::protobuf::uint32 value);

  // optional uint32 matches_in_report = 5;
  bool has_matches_in_report() const;
  void clear_matches_in_report();
  static const int kMatchesInReportFieldNumber = 5;
  ::google::protobuf::uint32 matches_in_report() const;
  void set_matches_in_report(::google::protobuf::uint32 value);

  // optional uint32 matches_clean = 6;
  bool has_matches_clean() const;
  void clear_matches_clean();
  static const int kMatchesCleanFieldNumber = 6;
  ::google::protobuf::uint32 matches_clean() const;
  void set_matches_clean(::google::protobuf::uint32 value);

  // optional uint32 matches_reported = 7;
  bool has_matches_reported() const;
  void clear_matches_reported();
  static const int kMatchesReportedFieldNumber = 7;
  ::google::protobuf::uint32 matches_reported() const;
  void set_matches_reported(::google::protobuf::uint32 value);

  // optional uint32 matches_abandoned = 8;
  bool has_matches_abandoned() const;
  void clear_matches_abandoned();
  static const int kMatchesAbandonedFieldNumber = 8;
  ::google::protobuf::uint32 matches_abandoned() const;
  void set_matches_abandoned(::google::protobuf::uint32 value);

  // optional uint32 reports_count = 9;
  bool has_reports_count() const;
  void clear_reports_count();
  static const int kReportsCountFieldNumber = 9;
  ::google::protobuf::uint32 reports_count() const;
  void set_reports_count(::google::protobuf::uint32 value);

  // optional uint32 reports_parties = 10;
  bool has_reports_parties() const;
  void clear_reports_parties();
  static const int kReportsPartiesFieldNumber = 10;
  ::google::protobuf::uint32 reports_parties() const;
  void set_reports_parties(::google::protobuf::uint32 value);

  // optional uint32 commend_count = 11;
  bool has_commend_count() const;
  void clear_commend_count();
  static const int kCommendCountFieldNumber = 11;
  ::google::protobuf::uint32 commend_count() const;
  void set_commend_count(::google::protobuf::uint32 value);

  // optional uint32 date = 14;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 14;
  ::google::protobuf::uint32 date() const;
  void set_date(::google::protobuf::uint32 value);

  // optional uint32 behavior_grade = 15;
  bool has_behavior_grade() const;
  void clear_behavior_grade();
  static const int kBehaviorGradeFieldNumber = 15;
  ::google::protobuf::uint32 behavior_grade() const;
  void set_behavior_grade(::google::protobuf::uint32 value);

  // optional uint32 old_behavior_grade = 16;
  bool has_old_behavior_grade() const;
  void clear_old_behavior_grade();
  static const int kOldBehaviorGradeFieldNumber = 16;
  ::google::protobuf::uint32 old_behavior_grade() const;
  void set_old_behavior_grade(::google::protobuf::uint32 value);

  // optional uint32 raw_behavior_score = 17;
  bool has_raw_behavior_score() const;
  void clear_raw_behavior_score();
  static const int kRawBehaviorScoreFieldNumber = 17;
  ::google::protobuf::uint32 raw_behavior_score() const;
  void set_raw_behavior_score(::google::protobuf::uint32 value);

  // optional uint32 old_raw_behavior_score = 18;
  bool has_old_raw_behavior_score() const;
  void clear_old_raw_behavior_score();
  static const int kOldRawBehaviorScoreFieldNumber = 18;
  ::google::protobuf::uint32 old_raw_behavior_score() const;
  void set_old_raw_behavior_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPlayerConductScorecard)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 seq_num_;
  ::google::protobuf::uint32 reasons_;
  ::google::protobuf::uint32 matches_in_report_;
  ::google::protobuf::uint32 matches_clean_;
  ::google::protobuf::uint32 matches_reported_;
  ::google::protobuf::uint32 matches_abandoned_;
  ::google::protobuf::uint32 reports_count_;
  ::google::protobuf::uint32 reports_parties_;
  ::google::protobuf::uint32 commend_count_;
  ::google::protobuf::uint32 date_;
  ::google::protobuf::uint32 behavior_grade_;
  ::google::protobuf::uint32 old_behavior_grade_;
  ::google::protobuf::uint32 raw_behavior_score_;
  ::google::protobuf::uint32 old_raw_behavior_score_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCWageringRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCWageringRequest) */ {
 public:
  CMsgClientToGCWageringRequest();
  virtual ~CMsgClientToGCWageringRequest();

  CMsgClientToGCWageringRequest(const CMsgClientToGCWageringRequest& from);

  inline CMsgClientToGCWageringRequest& operator=(const CMsgClientToGCWageringRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCWageringRequest(CMsgClientToGCWageringRequest&& from) noexcept
    : CMsgClientToGCWageringRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCWageringRequest& operator=(CMsgClientToGCWageringRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCWageringRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCWageringRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCWageringRequest*>(
               &_CMsgClientToGCWageringRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    197;

  void Swap(CMsgClientToGCWageringRequest* other);
  friend void swap(CMsgClientToGCWageringRequest& a, CMsgClientToGCWageringRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCWageringRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCWageringRequest>(nullptr);
  }

  CMsgClientToGCWageringRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCWageringRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCWageringRequest& from);
  void MergeFrom(const CMsgClientToGCWageringRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCWageringRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCWageringRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientWageringResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientWageringResponse) */ {
 public:
  CMsgGCToClientWageringResponse();
  virtual ~CMsgGCToClientWageringResponse();

  CMsgGCToClientWageringResponse(const CMsgGCToClientWageringResponse& from);

  inline CMsgGCToClientWageringResponse& operator=(const CMsgGCToClientWageringResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientWageringResponse(CMsgGCToClientWageringResponse&& from) noexcept
    : CMsgGCToClientWageringResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientWageringResponse& operator=(CMsgGCToClientWageringResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientWageringResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientWageringResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientWageringResponse*>(
               &_CMsgGCToClientWageringResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    198;

  void Swap(CMsgGCToClientWageringResponse* other);
  friend void swap(CMsgGCToClientWageringResponse& a, CMsgGCToClientWageringResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientWageringResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToClientWageringResponse>(nullptr);
  }

  CMsgGCToClientWageringResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientWageringResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientWageringResponse& from);
  void MergeFrom(const CMsgGCToClientWageringResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientWageringResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 coins_remaining = 1;
  bool has_coins_remaining() const;
  void clear_coins_remaining();
  static const int kCoinsRemainingFieldNumber = 1;
  ::google::protobuf::uint32 coins_remaining() const;
  void set_coins_remaining(::google::protobuf::uint32 value);

  // optional uint32 total_points_won = 2;
  bool has_total_points_won() const;
  void clear_total_points_won();
  static const int kTotalPointsWonFieldNumber = 2;
  ::google::protobuf::uint32 total_points_won() const;
  void set_total_points_won(::google::protobuf::uint32 value);

  // optional uint32 total_points_wagered = 3;
  bool has_total_points_wagered() const;
  void clear_total_points_wagered();
  static const int kTotalPointsWageredFieldNumber = 3;
  ::google::protobuf::uint32 total_points_wagered() const;
  void set_total_points_wagered(::google::protobuf::uint32 value);

  // optional uint32 total_points_tipped = 4;
  bool has_total_points_tipped() const;
  void clear_total_points_tipped();
  static const int kTotalPointsTippedFieldNumber = 4;
  ::google::protobuf::uint32 total_points_tipped() const;
  void set_total_points_tipped(::google::protobuf::uint32 value);

  // optional uint32 success_rate = 5;
  bool has_success_rate() const;
  void clear_success_rate();
  static const int kSuccessRateFieldNumber = 5;
  ::google::protobuf::uint32 success_rate() const;
  void set_success_rate(::google::protobuf::uint32 value);

  // optional uint32 total_games_wagered = 6;
  bool has_total_games_wagered() const;
  void clear_total_games_wagered();
  static const int kTotalGamesWageredFieldNumber = 6;
  ::google::protobuf::uint32 total_games_wagered() const;
  void set_total_games_wagered(::google::protobuf::uint32 value);

  // optional uint32 coins_max = 7;
  bool has_coins_max() const;
  void clear_coins_max();
  static const int kCoinsMaxFieldNumber = 7;
  ::google::protobuf::uint32 coins_max() const;
  void set_coins_max(::google::protobuf::uint32 value);

  // optional uint32 rank_wagers_remaining = 8;
  bool has_rank_wagers_remaining() const;
  void clear_rank_wagers_remaining();
  static const int kRankWagersRemainingFieldNumber = 8;
  ::google::protobuf::uint32 rank_wagers_remaining() const;
  void set_rank_wagers_remaining(::google::protobuf::uint32 value);

  // optional uint32 rank_wagers_max = 9;
  bool has_rank_wagers_max() const;
  void clear_rank_wagers_max();
  static const int kRankWagersMaxFieldNumber = 9;
  ::google::protobuf::uint32 rank_wagers_max() const;
  void set_rank_wagers_max(::google::protobuf::uint32 value);

  // optional uint32 prediction_tokens_remaining = 10;
  bool has_prediction_tokens_remaining() const;
  void clear_prediction_tokens_remaining();
  static const int kPredictionTokensRemainingFieldNumber = 10;
  ::google::protobuf::uint32 prediction_tokens_remaining() const;
  void set_prediction_tokens_remaining(::google::protobuf::uint32 value);

  // optional uint32 prediction_tokens_max = 11;
  bool has_prediction_tokens_max() const;
  void clear_prediction_tokens_max();
  static const int kPredictionTokensMaxFieldNumber = 11;
  ::google::protobuf::uint32 prediction_tokens_max() const;
  void set_prediction_tokens_max(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientWageringResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 coins_remaining_;
  ::google::protobuf::uint32 total_points_won_;
  ::google::protobuf::uint32 total_points_wagered_;
  ::google::protobuf::uint32 total_points_tipped_;
  ::google::protobuf::uint32 success_rate_;
  ::google::protobuf::uint32 total_games_wagered_;
  ::google::protobuf::uint32 coins_max_;
  ::google::protobuf::uint32 rank_wagers_remaining_;
  ::google::protobuf::uint32 rank_wagers_max_;
  ::google::protobuf::uint32 prediction_tokens_remaining_;
  ::google::protobuf::uint32 prediction_tokens_max_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientWageringUpdate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientWageringUpdate) */ {
 public:
  CMsgGCToClientWageringUpdate();
  virtual ~CMsgGCToClientWageringUpdate();

  CMsgGCToClientWageringUpdate(const CMsgGCToClientWageringUpdate& from);

  inline CMsgGCToClientWageringUpdate& operator=(const CMsgGCToClientWageringUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientWageringUpdate(CMsgGCToClientWageringUpdate&& from) noexcept
    : CMsgGCToClientWageringUpdate() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientWageringUpdate& operator=(CMsgGCToClientWageringUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientWageringUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientWageringUpdate* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientWageringUpdate*>(
               &_CMsgGCToClientWageringUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    199;

  void Swap(CMsgGCToClientWageringUpdate* other);
  friend void swap(CMsgGCToClientWageringUpdate& a, CMsgGCToClientWageringUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientWageringUpdate* New() const final {
    return CreateMaybeMessage<CMsgGCToClientWageringUpdate>(nullptr);
  }

  CMsgGCToClientWageringUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientWageringUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientWageringUpdate& from);
  void MergeFrom(const CMsgGCToClientWageringUpdate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientWageringUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgGCToClientWageringResponse wagering_info = 2;
  bool has_wagering_info() const;
  void clear_wagering_info();
  static const int kWageringInfoFieldNumber = 2;
  const ::proto::dota::CMsgGCToClientWageringResponse& wagering_info() const;
  ::proto::dota::CMsgGCToClientWageringResponse* release_wagering_info();
  ::proto::dota::CMsgGCToClientWageringResponse* mutable_wagering_info();
  void set_allocated_wagering_info(::proto::dota::CMsgGCToClientWageringResponse* wagering_info);

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientWageringUpdate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgGCToClientWageringResponse* wagering_info_;
  ::google::protobuf::uint32 event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientArcanaVotesUpdate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientArcanaVotesUpdate) */ {
 public:
  CMsgGCToClientArcanaVotesUpdate();
  virtual ~CMsgGCToClientArcanaVotesUpdate();

  CMsgGCToClientArcanaVotesUpdate(const CMsgGCToClientArcanaVotesUpdate& from);

  inline CMsgGCToClientArcanaVotesUpdate& operator=(const CMsgGCToClientArcanaVotesUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientArcanaVotesUpdate(CMsgGCToClientArcanaVotesUpdate&& from) noexcept
    : CMsgGCToClientArcanaVotesUpdate() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientArcanaVotesUpdate& operator=(CMsgGCToClientArcanaVotesUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientArcanaVotesUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientArcanaVotesUpdate* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientArcanaVotesUpdate*>(
               &_CMsgGCToClientArcanaVotesUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    200;

  void Swap(CMsgGCToClientArcanaVotesUpdate* other);
  friend void swap(CMsgGCToClientArcanaVotesUpdate& a, CMsgGCToClientArcanaVotesUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientArcanaVotesUpdate* New() const final {
    return CreateMaybeMessage<CMsgGCToClientArcanaVotesUpdate>(nullptr);
  }

  CMsgGCToClientArcanaVotesUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientArcanaVotesUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientArcanaVotesUpdate& from);
  void MergeFrom(const CMsgGCToClientArcanaVotesUpdate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientArcanaVotesUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse arcana_votes = 2;
  bool has_arcana_votes() const;
  void clear_arcana_votes();
  static const int kArcanaVotesFieldNumber = 2;
  const ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse& arcana_votes() const;
  ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* release_arcana_votes();
  ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* mutable_arcana_votes();
  void set_allocated_arcana_votes(::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* arcana_votes);

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientArcanaVotesUpdate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* arcana_votes_;
  ::google::protobuf::uint32 event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetEventGoals final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetEventGoals) */ {
 public:
  CMsgClientToGCGetEventGoals();
  virtual ~CMsgClientToGCGetEventGoals();

  CMsgClientToGCGetEventGoals(const CMsgClientToGCGetEventGoals& from);

  inline CMsgClientToGCGetEventGoals& operator=(const CMsgClientToGCGetEventGoals& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGetEventGoals(CMsgClientToGCGetEventGoals&& from) noexcept
    : CMsgClientToGCGetEventGoals() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetEventGoals& operator=(CMsgClientToGCGetEventGoals&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGetEventGoals& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGetEventGoals* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetEventGoals*>(
               &_CMsgClientToGCGetEventGoals_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    201;

  void Swap(CMsgClientToGCGetEventGoals* other);
  friend void swap(CMsgClientToGCGetEventGoals& a, CMsgClientToGCGetEventGoals& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetEventGoals* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetEventGoals>(nullptr);
  }

  CMsgClientToGCGetEventGoals* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetEventGoals>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetEventGoals& from);
  void MergeFrom(const CMsgClientToGCGetEventGoals& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetEventGoals* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.EEvent event_ids = 1;
  int event_ids_size() const;
  void clear_event_ids();
  static const int kEventIdsFieldNumber = 1;
  ::proto::dota::EEvent event_ids(int index) const;
  void set_event_ids(int index, ::proto::dota::EEvent value);
  void add_event_ids(::proto::dota::EEvent value);
  const ::google::protobuf::RepeatedField<int>& event_ids() const;
  ::google::protobuf::RepeatedField<int>* mutable_event_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetEventGoals)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField<int> event_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgEventGoals_EventGoal final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgEventGoals.EventGoal) */ {
 public:
  CMsgEventGoals_EventGoal();
  virtual ~CMsgEventGoals_EventGoal();

  CMsgEventGoals_EventGoal(const CMsgEventGoals_EventGoal& from);

  inline CMsgEventGoals_EventGoal& operator=(const CMsgEventGoals_EventGoal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgEventGoals_EventGoal(CMsgEventGoals_EventGoal&& from) noexcept
    : CMsgEventGoals_EventGoal() {
    *this = ::std::move(from);
  }

  inline CMsgEventGoals_EventGoal& operator=(CMsgEventGoals_EventGoal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgEventGoals_EventGoal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgEventGoals_EventGoal* internal_default_instance() {
    return reinterpret_cast<const CMsgEventGoals_EventGoal*>(
               &_CMsgEventGoals_EventGoal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    202;

  void Swap(CMsgEventGoals_EventGoal* other);
  friend void swap(CMsgEventGoals_EventGoal& a, CMsgEventGoals_EventGoal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgEventGoals_EventGoal* New() const final {
    return CreateMaybeMessage<CMsgEventGoals_EventGoal>(nullptr);
  }

  CMsgEventGoals_EventGoal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgEventGoals_EventGoal>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgEventGoals_EventGoal& from);
  void MergeFrom(const CMsgEventGoals_EventGoal& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgEventGoals_EventGoal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 goal_id = 2;
  bool has_goal_id() const;
  void clear_goal_id();
  static const int kGoalIdFieldNumber = 2;
  ::google::protobuf::uint32 goal_id() const;
  void set_goal_id(::google::protobuf::uint32 value);

  // optional uint64 value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::uint64 value() const;
  void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgEventGoals.EventGoal)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int event_id_;
  ::google::protobuf::uint32 goal_id_;
  ::google::protobuf::uint64 value_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgEventGoals final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgEventGoals) */ {
 public:
  CMsgEventGoals();
  virtual ~CMsgEventGoals();

  CMsgEventGoals(const CMsgEventGoals& from);

  inline CMsgEventGoals& operator=(const CMsgEventGoals& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgEventGoals(CMsgEventGoals&& from) noexcept
    : CMsgEventGoals() {
    *this = ::std::move(from);
  }

  inline CMsgEventGoals& operator=(CMsgEventGoals&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgEventGoals& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgEventGoals* internal_default_instance() {
    return reinterpret_cast<const CMsgEventGoals*>(
               &_CMsgEventGoals_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    203;

  void Swap(CMsgEventGoals* other);
  friend void swap(CMsgEventGoals& a, CMsgEventGoals& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgEventGoals* New() const final {
    return CreateMaybeMessage<CMsgEventGoals>(nullptr);
  }

  CMsgEventGoals* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgEventGoals>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgEventGoals& from);
  void MergeFrom(const CMsgEventGoals& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgEventGoals* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgEventGoals_EventGoal EventGoal;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgEventGoals.EventGoal event_goals = 1;
  int event_goals_size() const;
  void clear_event_goals();
  static const int kEventGoalsFieldNumber = 1;
  ::proto::dota::CMsgEventGoals_EventGoal* mutable_event_goals(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventGoals_EventGoal >*
      mutable_event_goals();
  const ::proto::dota::CMsgEventGoals_EventGoal& event_goals(int index) const;
  ::proto::dota::CMsgEventGoals_EventGoal* add_event_goals();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventGoals_EventGoal >&
      event_goals() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgEventGoals)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventGoals_EventGoal > event_goals_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCLeaguePredictions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToGCLeaguePredictions) */ {
 public:
  CMsgGCToGCLeaguePredictions();
  virtual ~CMsgGCToGCLeaguePredictions();

  CMsgGCToGCLeaguePredictions(const CMsgGCToGCLeaguePredictions& from);

  inline CMsgGCToGCLeaguePredictions& operator=(const CMsgGCToGCLeaguePredictions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToGCLeaguePredictions(CMsgGCToGCLeaguePredictions&& from) noexcept
    : CMsgGCToGCLeaguePredictions() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCLeaguePredictions& operator=(CMsgGCToGCLeaguePredictions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToGCLeaguePredictions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToGCLeaguePredictions* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCLeaguePredictions*>(
               &_CMsgGCToGCLeaguePredictions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    204;

  void Swap(CMsgGCToGCLeaguePredictions* other);
  friend void swap(CMsgGCToGCLeaguePredictions& a, CMsgGCToGCLeaguePredictions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCLeaguePredictions* New() const final {
    return CreateMaybeMessage<CMsgGCToGCLeaguePredictions>(nullptr);
  }

  CMsgGCToGCLeaguePredictions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCLeaguePredictions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToGCLeaguePredictions& from);
  void MergeFrom(const CMsgGCToGCLeaguePredictions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCLeaguePredictions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToGCLeaguePredictions)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPredictionRankings_PredictionLine final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPredictionRankings.PredictionLine) */ {
 public:
  CMsgPredictionRankings_PredictionLine();
  virtual ~CMsgPredictionRankings_PredictionLine();

  CMsgPredictionRankings_PredictionLine(const CMsgPredictionRankings_PredictionLine& from);

  inline CMsgPredictionRankings_PredictionLine& operator=(const CMsgPredictionRankings_PredictionLine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPredictionRankings_PredictionLine(CMsgPredictionRankings_PredictionLine&& from) noexcept
    : CMsgPredictionRankings_PredictionLine() {
    *this = ::std::move(from);
  }

  inline CMsgPredictionRankings_PredictionLine& operator=(CMsgPredictionRankings_PredictionLine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPredictionRankings_PredictionLine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPredictionRankings_PredictionLine* internal_default_instance() {
    return reinterpret_cast<const CMsgPredictionRankings_PredictionLine*>(
               &_CMsgPredictionRankings_PredictionLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    205;

  void Swap(CMsgPredictionRankings_PredictionLine* other);
  friend void swap(CMsgPredictionRankings_PredictionLine& a, CMsgPredictionRankings_PredictionLine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPredictionRankings_PredictionLine* New() const final {
    return CreateMaybeMessage<CMsgPredictionRankings_PredictionLine>(nullptr);
  }

  CMsgPredictionRankings_PredictionLine* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPredictionRankings_PredictionLine>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPredictionRankings_PredictionLine& from);
  void MergeFrom(const CMsgPredictionRankings_PredictionLine& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPredictionRankings_PredictionLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string answer_name = 2;
  bool has_answer_name() const;
  void clear_answer_name();
  static const int kAnswerNameFieldNumber = 2;
  const ::std::string& answer_name() const;
  void set_answer_name(const ::std::string& value);
  #if LANG_CXX11
  void set_answer_name(::std::string&& value);
  #endif
  void set_answer_name(const char* value);
  void set_answer_name(const char* value, size_t size);
  ::std::string* mutable_answer_name();
  ::std::string* release_answer_name();
  void set_allocated_answer_name(::std::string* answer_name);

  // optional uint32 answer_id = 1;
  bool has_answer_id() const;
  void clear_answer_id();
  static const int kAnswerIdFieldNumber = 1;
  ::google::protobuf::uint32 answer_id() const;
  void set_answer_id(::google::protobuf::uint32 value);

  // optional float answer_value = 4;
  bool has_answer_value() const;
  void clear_answer_value();
  static const int kAnswerValueFieldNumber = 4;
  float answer_value() const;
  void set_answer_value(float value);

  // optional uint64 answer_logo = 3;
  bool has_answer_logo() const;
  void clear_answer_logo();
  static const int kAnswerLogoFieldNumber = 3;
  ::google::protobuf::uint64 answer_logo() const;
  void set_answer_logo(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPredictionRankings.PredictionLine)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr answer_name_;
  ::google::protobuf::uint32 answer_id_;
  float answer_value_;
  ::google::protobuf::uint64 answer_logo_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPredictionRankings_Prediction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPredictionRankings.Prediction) */ {
 public:
  CMsgPredictionRankings_Prediction();
  virtual ~CMsgPredictionRankings_Prediction();

  CMsgPredictionRankings_Prediction(const CMsgPredictionRankings_Prediction& from);

  inline CMsgPredictionRankings_Prediction& operator=(const CMsgPredictionRankings_Prediction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPredictionRankings_Prediction(CMsgPredictionRankings_Prediction&& from) noexcept
    : CMsgPredictionRankings_Prediction() {
    *this = ::std::move(from);
  }

  inline CMsgPredictionRankings_Prediction& operator=(CMsgPredictionRankings_Prediction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPredictionRankings_Prediction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPredictionRankings_Prediction* internal_default_instance() {
    return reinterpret_cast<const CMsgPredictionRankings_Prediction*>(
               &_CMsgPredictionRankings_Prediction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    206;

  void Swap(CMsgPredictionRankings_Prediction* other);
  friend void swap(CMsgPredictionRankings_Prediction& a, CMsgPredictionRankings_Prediction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPredictionRankings_Prediction* New() const final {
    return CreateMaybeMessage<CMsgPredictionRankings_Prediction>(nullptr);
  }

  CMsgPredictionRankings_Prediction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPredictionRankings_Prediction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPredictionRankings_Prediction& from);
  void MergeFrom(const CMsgPredictionRankings_Prediction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPredictionRankings_Prediction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgPredictionRankings.PredictionLine prediction_lines = 2;
  int prediction_lines_size() const;
  void clear_prediction_lines();
  static const int kPredictionLinesFieldNumber = 2;
  ::proto::dota::CMsgPredictionRankings_PredictionLine* mutable_prediction_lines(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_PredictionLine >*
      mutable_prediction_lines();
  const ::proto::dota::CMsgPredictionRankings_PredictionLine& prediction_lines(int index) const;
  ::proto::dota::CMsgPredictionRankings_PredictionLine* add_prediction_lines();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_PredictionLine >&
      prediction_lines() const;

  // optional uint32 selection_id = 1;
  bool has_selection_id() const;
  void clear_selection_id();
  static const int kSelectionIdFieldNumber = 1;
  ::google::protobuf::uint32 selection_id() const;
  void set_selection_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPredictionRankings.Prediction)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_PredictionLine > prediction_lines_;
  ::google::protobuf::uint32 selection_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPredictionRankings final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPredictionRankings) */ {
 public:
  CMsgPredictionRankings();
  virtual ~CMsgPredictionRankings();

  CMsgPredictionRankings(const CMsgPredictionRankings& from);

  inline CMsgPredictionRankings& operator=(const CMsgPredictionRankings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPredictionRankings(CMsgPredictionRankings&& from) noexcept
    : CMsgPredictionRankings() {
    *this = ::std::move(from);
  }

  inline CMsgPredictionRankings& operator=(CMsgPredictionRankings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPredictionRankings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPredictionRankings* internal_default_instance() {
    return reinterpret_cast<const CMsgPredictionRankings*>(
               &_CMsgPredictionRankings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    207;

  void Swap(CMsgPredictionRankings* other);
  friend void swap(CMsgPredictionRankings& a, CMsgPredictionRankings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPredictionRankings* New() const final {
    return CreateMaybeMessage<CMsgPredictionRankings>(nullptr);
  }

  CMsgPredictionRankings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPredictionRankings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPredictionRankings& from);
  void MergeFrom(const CMsgPredictionRankings& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPredictionRankings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgPredictionRankings_PredictionLine PredictionLine;
  typedef CMsgPredictionRankings_Prediction Prediction;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgPredictionRankings.Prediction predictions = 1;
  int predictions_size() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 1;
  ::proto::dota::CMsgPredictionRankings_Prediction* mutable_predictions(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_Prediction >*
      mutable_predictions();
  const ::proto::dota::CMsgPredictionRankings_Prediction& predictions(int index) const;
  ::proto::dota::CMsgPredictionRankings_Prediction* add_predictions();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_Prediction >&
      predictions() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPredictionRankings)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_Prediction > predictions_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPredictionResults_ResultBreakdown final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPredictionResults.ResultBreakdown) */ {
 public:
  CMsgPredictionResults_ResultBreakdown();
  virtual ~CMsgPredictionResults_ResultBreakdown();

  CMsgPredictionResults_ResultBreakdown(const CMsgPredictionResults_ResultBreakdown& from);

  inline CMsgPredictionResults_ResultBreakdown& operator=(const CMsgPredictionResults_ResultBreakdown& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPredictionResults_ResultBreakdown(CMsgPredictionResults_ResultBreakdown&& from) noexcept
    : CMsgPredictionResults_ResultBreakdown() {
    *this = ::std::move(from);
  }

  inline CMsgPredictionResults_ResultBreakdown& operator=(CMsgPredictionResults_ResultBreakdown&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPredictionResults_ResultBreakdown& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPredictionResults_ResultBreakdown* internal_default_instance() {
    return reinterpret_cast<const CMsgPredictionResults_ResultBreakdown*>(
               &_CMsgPredictionResults_ResultBreakdown_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    208;

  void Swap(CMsgPredictionResults_ResultBreakdown* other);
  friend void swap(CMsgPredictionResults_ResultBreakdown& a, CMsgPredictionResults_ResultBreakdown& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPredictionResults_ResultBreakdown* New() const final {
    return CreateMaybeMessage<CMsgPredictionResults_ResultBreakdown>(nullptr);
  }

  CMsgPredictionResults_ResultBreakdown* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPredictionResults_ResultBreakdown>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPredictionResults_ResultBreakdown& from);
  void MergeFrom(const CMsgPredictionResults_ResultBreakdown& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPredictionResults_ResultBreakdown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 answer_selection = 2;
  bool has_answer_selection() const;
  void clear_answer_selection();
  static const int kAnswerSelectionFieldNumber = 2;
  ::google::protobuf::uint32 answer_selection() const;
  void set_answer_selection(::google::protobuf::uint32 value);

  // optional float answer_value = 3;
  bool has_answer_value() const;
  void clear_answer_value();
  static const int kAnswerValueFieldNumber = 3;
  float answer_value() const;
  void set_answer_value(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPredictionResults.ResultBreakdown)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 answer_selection_;
  float answer_value_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPredictionResults_Result final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPredictionResults.Result) */ {
 public:
  CMsgPredictionResults_Result();
  virtual ~CMsgPredictionResults_Result();

  CMsgPredictionResults_Result(const CMsgPredictionResults_Result& from);

  inline CMsgPredictionResults_Result& operator=(const CMsgPredictionResults_Result& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPredictionResults_Result(CMsgPredictionResults_Result&& from) noexcept
    : CMsgPredictionResults_Result() {
    *this = ::std::move(from);
  }

  inline CMsgPredictionResults_Result& operator=(CMsgPredictionResults_Result&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPredictionResults_Result& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPredictionResults_Result* internal_default_instance() {
    return reinterpret_cast<const CMsgPredictionResults_Result*>(
               &_CMsgPredictionResults_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    209;

  void Swap(CMsgPredictionResults_Result* other);
  friend void swap(CMsgPredictionResults_Result& a, CMsgPredictionResults_Result& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPredictionResults_Result* New() const final {
    return CreateMaybeMessage<CMsgPredictionResults_Result>(nullptr);
  }

  CMsgPredictionResults_Result* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPredictionResults_Result>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPredictionResults_Result& from);
  void MergeFrom(const CMsgPredictionResults_Result& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPredictionResults_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgPredictionResults.ResultBreakdown result_breakdown = 2;
  int result_breakdown_size() const;
  void clear_result_breakdown();
  static const int kResultBreakdownFieldNumber = 2;
  ::proto::dota::CMsgPredictionResults_ResultBreakdown* mutable_result_breakdown(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_ResultBreakdown >*
      mutable_result_breakdown();
  const ::proto::dota::CMsgPredictionResults_ResultBreakdown& result_breakdown(int index) const;
  ::proto::dota::CMsgPredictionResults_ResultBreakdown* add_result_breakdown();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_ResultBreakdown >&
      result_breakdown() const;

  // optional uint32 selection_id = 1;
  bool has_selection_id() const;
  void clear_selection_id();
  static const int kSelectionIdFieldNumber = 1;
  ::google::protobuf::uint32 selection_id() const;
  void set_selection_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPredictionResults.Result)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_ResultBreakdown > result_breakdown_;
  ::google::protobuf::uint32 selection_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPredictionResults final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPredictionResults) */ {
 public:
  CMsgPredictionResults();
  virtual ~CMsgPredictionResults();

  CMsgPredictionResults(const CMsgPredictionResults& from);

  inline CMsgPredictionResults& operator=(const CMsgPredictionResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPredictionResults(CMsgPredictionResults&& from) noexcept
    : CMsgPredictionResults() {
    *this = ::std::move(from);
  }

  inline CMsgPredictionResults& operator=(CMsgPredictionResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPredictionResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPredictionResults* internal_default_instance() {
    return reinterpret_cast<const CMsgPredictionResults*>(
               &_CMsgPredictionResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    210;

  void Swap(CMsgPredictionResults* other);
  friend void swap(CMsgPredictionResults& a, CMsgPredictionResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPredictionResults* New() const final {
    return CreateMaybeMessage<CMsgPredictionResults>(nullptr);
  }

  CMsgPredictionResults* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPredictionResults>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPredictionResults& from);
  void MergeFrom(const CMsgPredictionResults& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPredictionResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgPredictionResults_ResultBreakdown ResultBreakdown;
  typedef CMsgPredictionResults_Result Result;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgPredictionResults.Result results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  ::proto::dota::CMsgPredictionResults_Result* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_Result >*
      mutable_results();
  const ::proto::dota::CMsgPredictionResults_Result& results(int index) const;
  ::proto::dota::CMsgPredictionResults_Result* add_results();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_Result >&
      results() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPredictionResults)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_Result > results_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSuspiciousActivity final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSuspiciousActivity) */ {
 public:
  CMsgClientToGCSuspiciousActivity();
  virtual ~CMsgClientToGCSuspiciousActivity();

  CMsgClientToGCSuspiciousActivity(const CMsgClientToGCSuspiciousActivity& from);

  inline CMsgClientToGCSuspiciousActivity& operator=(const CMsgClientToGCSuspiciousActivity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCSuspiciousActivity(CMsgClientToGCSuspiciousActivity&& from) noexcept
    : CMsgClientToGCSuspiciousActivity() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSuspiciousActivity& operator=(CMsgClientToGCSuspiciousActivity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCSuspiciousActivity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCSuspiciousActivity* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSuspiciousActivity*>(
               &_CMsgClientToGCSuspiciousActivity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    211;

  void Swap(CMsgClientToGCSuspiciousActivity* other);
  friend void swap(CMsgClientToGCSuspiciousActivity& a, CMsgClientToGCSuspiciousActivity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSuspiciousActivity* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSuspiciousActivity>(nullptr);
  }

  CMsgClientToGCSuspiciousActivity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSuspiciousActivity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCSuspiciousActivity& from);
  void MergeFrom(const CMsgClientToGCSuspiciousActivity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSuspiciousActivity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 app_data = 1;
  bool has_app_data() const;
  void clear_app_data();
  static const int kAppDataFieldNumber = 1;
  ::google::protobuf::uint64 app_data() const;
  void set_app_data(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSuspiciousActivity)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 app_data_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCHasPlayerVotedForMVP final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCHasPlayerVotedForMVP) */ {
 public:
  CMsgClientToGCHasPlayerVotedForMVP();
  virtual ~CMsgClientToGCHasPlayerVotedForMVP();

  CMsgClientToGCHasPlayerVotedForMVP(const CMsgClientToGCHasPlayerVotedForMVP& from);

  inline CMsgClientToGCHasPlayerVotedForMVP& operator=(const CMsgClientToGCHasPlayerVotedForMVP& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCHasPlayerVotedForMVP(CMsgClientToGCHasPlayerVotedForMVP&& from) noexcept
    : CMsgClientToGCHasPlayerVotedForMVP() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCHasPlayerVotedForMVP& operator=(CMsgClientToGCHasPlayerVotedForMVP&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCHasPlayerVotedForMVP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCHasPlayerVotedForMVP* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCHasPlayerVotedForMVP*>(
               &_CMsgClientToGCHasPlayerVotedForMVP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    212;

  void Swap(CMsgClientToGCHasPlayerVotedForMVP* other);
  friend void swap(CMsgClientToGCHasPlayerVotedForMVP& a, CMsgClientToGCHasPlayerVotedForMVP& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCHasPlayerVotedForMVP* New() const final {
    return CreateMaybeMessage<CMsgClientToGCHasPlayerVotedForMVP>(nullptr);
  }

  CMsgClientToGCHasPlayerVotedForMVP* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCHasPlayerVotedForMVP>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCHasPlayerVotedForMVP& from);
  void MergeFrom(const CMsgClientToGCHasPlayerVotedForMVP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCHasPlayerVotedForMVP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCHasPlayerVotedForMVP)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCHasPlayerVotedForMVPResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCHasPlayerVotedForMVPResponse) */ {
 public:
  CMsgClientToGCHasPlayerVotedForMVPResponse();
  virtual ~CMsgClientToGCHasPlayerVotedForMVPResponse();

  CMsgClientToGCHasPlayerVotedForMVPResponse(const CMsgClientToGCHasPlayerVotedForMVPResponse& from);

  inline CMsgClientToGCHasPlayerVotedForMVPResponse& operator=(const CMsgClientToGCHasPlayerVotedForMVPResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCHasPlayerVotedForMVPResponse(CMsgClientToGCHasPlayerVotedForMVPResponse&& from) noexcept
    : CMsgClientToGCHasPlayerVotedForMVPResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCHasPlayerVotedForMVPResponse& operator=(CMsgClientToGCHasPlayerVotedForMVPResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCHasPlayerVotedForMVPResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCHasPlayerVotedForMVPResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCHasPlayerVotedForMVPResponse*>(
               &_CMsgClientToGCHasPlayerVotedForMVPResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    213;

  void Swap(CMsgClientToGCHasPlayerVotedForMVPResponse* other);
  friend void swap(CMsgClientToGCHasPlayerVotedForMVPResponse& a, CMsgClientToGCHasPlayerVotedForMVPResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCHasPlayerVotedForMVPResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCHasPlayerVotedForMVPResponse>(nullptr);
  }

  CMsgClientToGCHasPlayerVotedForMVPResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCHasPlayerVotedForMVPResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCHasPlayerVotedForMVPResponse& from);
  void MergeFrom(const CMsgClientToGCHasPlayerVotedForMVPResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCHasPlayerVotedForMVPResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCHasPlayerVotedForMVPResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForMVP final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCVoteForMVP) */ {
 public:
  CMsgClientToGCVoteForMVP();
  virtual ~CMsgClientToGCVoteForMVP();

  CMsgClientToGCVoteForMVP(const CMsgClientToGCVoteForMVP& from);

  inline CMsgClientToGCVoteForMVP& operator=(const CMsgClientToGCVoteForMVP& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCVoteForMVP(CMsgClientToGCVoteForMVP&& from) noexcept
    : CMsgClientToGCVoteForMVP() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCVoteForMVP& operator=(CMsgClientToGCVoteForMVP&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCVoteForMVP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCVoteForMVP* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCVoteForMVP*>(
               &_CMsgClientToGCVoteForMVP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    214;

  void Swap(CMsgClientToGCVoteForMVP* other);
  friend void swap(CMsgClientToGCVoteForMVP& a, CMsgClientToGCVoteForMVP& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCVoteForMVP* New() const final {
    return CreateMaybeMessage<CMsgClientToGCVoteForMVP>(nullptr);
  }

  CMsgClientToGCVoteForMVP* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCVoteForMVP>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCVoteForMVP& from);
  void MergeFrom(const CMsgClientToGCVoteForMVP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCVoteForMVP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 3;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 3;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCVoteForMVP)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForMVPResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCVoteForMVPResponse) */ {
 public:
  CMsgClientToGCVoteForMVPResponse();
  virtual ~CMsgClientToGCVoteForMVPResponse();

  CMsgClientToGCVoteForMVPResponse(const CMsgClientToGCVoteForMVPResponse& from);

  inline CMsgClientToGCVoteForMVPResponse& operator=(const CMsgClientToGCVoteForMVPResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCVoteForMVPResponse(CMsgClientToGCVoteForMVPResponse&& from) noexcept
    : CMsgClientToGCVoteForMVPResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCVoteForMVPResponse& operator=(CMsgClientToGCVoteForMVPResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCVoteForMVPResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCVoteForMVPResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCVoteForMVPResponse*>(
               &_CMsgClientToGCVoteForMVPResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    215;

  void Swap(CMsgClientToGCVoteForMVPResponse* other);
  friend void swap(CMsgClientToGCVoteForMVPResponse& a, CMsgClientToGCVoteForMVPResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCVoteForMVPResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCVoteForMVPResponse>(nullptr);
  }

  CMsgClientToGCVoteForMVPResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCVoteForMVPResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCVoteForMVPResponse& from);
  void MergeFrom(const CMsgClientToGCVoteForMVPResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCVoteForMVPResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCVoteForMVPResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgMVPVotesForMatch_Player final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgMVPVotesForMatch.Player) */ {
 public:
  CMsgMVPVotesForMatch_Player();
  virtual ~CMsgMVPVotesForMatch_Player();

  CMsgMVPVotesForMatch_Player(const CMsgMVPVotesForMatch_Player& from);

  inline CMsgMVPVotesForMatch_Player& operator=(const CMsgMVPVotesForMatch_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMVPVotesForMatch_Player(CMsgMVPVotesForMatch_Player&& from) noexcept
    : CMsgMVPVotesForMatch_Player() {
    *this = ::std::move(from);
  }

  inline CMsgMVPVotesForMatch_Player& operator=(CMsgMVPVotesForMatch_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgMVPVotesForMatch_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMVPVotesForMatch_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgMVPVotesForMatch_Player*>(
               &_CMsgMVPVotesForMatch_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    216;

  void Swap(CMsgMVPVotesForMatch_Player* other);
  friend void swap(CMsgMVPVotesForMatch_Player& a, CMsgMVPVotesForMatch_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMVPVotesForMatch_Player* New() const final {
    return CreateMaybeMessage<CMsgMVPVotesForMatch_Player>(nullptr);
  }

  CMsgMVPVotesForMatch_Player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgMVPVotesForMatch_Player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgMVPVotesForMatch_Player& from);
  void MergeFrom(const CMsgMVPVotesForMatch_Player& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgMVPVotesForMatch_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 vote_count = 2;
  bool has_vote_count() const;
  void clear_vote_count();
  static const int kVoteCountFieldNumber = 2;
  ::google::protobuf::uint32 vote_count() const;
  void set_vote_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgMVPVotesForMatch.Player)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 vote_count_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgMVPVotesForMatch final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgMVPVotesForMatch) */ {
 public:
  CMsgMVPVotesForMatch();
  virtual ~CMsgMVPVotesForMatch();

  CMsgMVPVotesForMatch(const CMsgMVPVotesForMatch& from);

  inline CMsgMVPVotesForMatch& operator=(const CMsgMVPVotesForMatch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMVPVotesForMatch(CMsgMVPVotesForMatch&& from) noexcept
    : CMsgMVPVotesForMatch() {
    *this = ::std::move(from);
  }

  inline CMsgMVPVotesForMatch& operator=(CMsgMVPVotesForMatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgMVPVotesForMatch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMVPVotesForMatch* internal_default_instance() {
    return reinterpret_cast<const CMsgMVPVotesForMatch*>(
               &_CMsgMVPVotesForMatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    217;

  void Swap(CMsgMVPVotesForMatch* other);
  friend void swap(CMsgMVPVotesForMatch& a, CMsgMVPVotesForMatch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMVPVotesForMatch* New() const final {
    return CreateMaybeMessage<CMsgMVPVotesForMatch>(nullptr);
  }

  CMsgMVPVotesForMatch* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgMVPVotesForMatch>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgMVPVotesForMatch& from);
  void MergeFrom(const CMsgMVPVotesForMatch& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgMVPVotesForMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgMVPVotesForMatch_Player Player;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgMVPVotesForMatch.Player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  ::proto::dota::CMsgMVPVotesForMatch_Player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMVPVotesForMatch_Player >*
      mutable_players();
  const ::proto::dota::CMsgMVPVotesForMatch_Player& players(int index) const;
  ::proto::dota::CMsgMVPVotesForMatch_Player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMVPVotesForMatch_Player >&
      players() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgMVPVotesForMatch)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMVPVotesForMatch_Player > players_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCTeammateStatsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCTeammateStatsRequest) */ {
 public:
  CMsgClientToGCTeammateStatsRequest();
  virtual ~CMsgClientToGCTeammateStatsRequest();

  CMsgClientToGCTeammateStatsRequest(const CMsgClientToGCTeammateStatsRequest& from);

  inline CMsgClientToGCTeammateStatsRequest& operator=(const CMsgClientToGCTeammateStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCTeammateStatsRequest(CMsgClientToGCTeammateStatsRequest&& from) noexcept
    : CMsgClientToGCTeammateStatsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCTeammateStatsRequest& operator=(CMsgClientToGCTeammateStatsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCTeammateStatsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCTeammateStatsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCTeammateStatsRequest*>(
               &_CMsgClientToGCTeammateStatsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    218;

  void Swap(CMsgClientToGCTeammateStatsRequest* other);
  friend void swap(CMsgClientToGCTeammateStatsRequest& a, CMsgClientToGCTeammateStatsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCTeammateStatsRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCTeammateStatsRequest>(nullptr);
  }

  CMsgClientToGCTeammateStatsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCTeammateStatsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCTeammateStatsRequest& from);
  void MergeFrom(const CMsgClientToGCTeammateStatsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCTeammateStatsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCTeammateStatsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCTeammateStatsResponse_TeammateStat final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat) */ {
 public:
  CMsgClientToGCTeammateStatsResponse_TeammateStat();
  virtual ~CMsgClientToGCTeammateStatsResponse_TeammateStat();

  CMsgClientToGCTeammateStatsResponse_TeammateStat(const CMsgClientToGCTeammateStatsResponse_TeammateStat& from);

  inline CMsgClientToGCTeammateStatsResponse_TeammateStat& operator=(const CMsgClientToGCTeammateStatsResponse_TeammateStat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCTeammateStatsResponse_TeammateStat(CMsgClientToGCTeammateStatsResponse_TeammateStat&& from) noexcept
    : CMsgClientToGCTeammateStatsResponse_TeammateStat() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCTeammateStatsResponse_TeammateStat& operator=(CMsgClientToGCTeammateStatsResponse_TeammateStat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCTeammateStatsResponse_TeammateStat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCTeammateStatsResponse_TeammateStat* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCTeammateStatsResponse_TeammateStat*>(
               &_CMsgClientToGCTeammateStatsResponse_TeammateStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    219;

  void Swap(CMsgClientToGCTeammateStatsResponse_TeammateStat* other);
  friend void swap(CMsgClientToGCTeammateStatsResponse_TeammateStat& a, CMsgClientToGCTeammateStatsResponse_TeammateStat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCTeammateStatsResponse_TeammateStat* New() const final {
    return CreateMaybeMessage<CMsgClientToGCTeammateStatsResponse_TeammateStat>(nullptr);
  }

  CMsgClientToGCTeammateStatsResponse_TeammateStat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCTeammateStatsResponse_TeammateStat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCTeammateStatsResponse_TeammateStat& from);
  void MergeFrom(const CMsgClientToGCTeammateStatsResponse_TeammateStat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCTeammateStatsResponse_TeammateStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 games = 2;
  bool has_games() const;
  void clear_games();
  static const int kGamesFieldNumber = 2;
  ::google::protobuf::uint32 games() const;
  void set_games(::google::protobuf::uint32 value);

  // optional uint32 wins = 3;
  bool has_wins() const;
  void clear_wins();
  static const int kWinsFieldNumber = 3;
  ::google::protobuf::uint32 wins() const;
  void set_wins(::google::protobuf::uint32 value);

  // optional uint32 most_recent_game_timestamp = 4;
  bool has_most_recent_game_timestamp() const;
  void clear_most_recent_game_timestamp();
  static const int kMostRecentGameTimestampFieldNumber = 4;
  ::google::protobuf::uint32 most_recent_game_timestamp() const;
  void set_most_recent_game_timestamp(::google::protobuf::uint32 value);

  // optional uint64 most_recent_game_match_id = 5;
  bool has_most_recent_game_match_id() const;
  void clear_most_recent_game_match_id();
  static const int kMostRecentGameMatchIdFieldNumber = 5;
  ::google::protobuf::uint64 most_recent_game_match_id() const;
  void set_most_recent_game_match_id(::google::protobuf::uint64 value);

  // optional float performance = 100;
  bool has_performance() const;
  void clear_performance();
  static const int kPerformanceFieldNumber = 100;
  float performance() const;
  void set_performance(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 games_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 most_recent_game_timestamp_;
  ::google::protobuf::uint64 most_recent_game_match_id_;
  float performance_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCTeammateStatsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCTeammateStatsResponse) */ {
 public:
  CMsgClientToGCTeammateStatsResponse();
  virtual ~CMsgClientToGCTeammateStatsResponse();

  CMsgClientToGCTeammateStatsResponse(const CMsgClientToGCTeammateStatsResponse& from);

  inline CMsgClientToGCTeammateStatsResponse& operator=(const CMsgClientToGCTeammateStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCTeammateStatsResponse(CMsgClientToGCTeammateStatsResponse&& from) noexcept
    : CMsgClientToGCTeammateStatsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCTeammateStatsResponse& operator=(CMsgClientToGCTeammateStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCTeammateStatsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCTeammateStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCTeammateStatsResponse*>(
               &_CMsgClientToGCTeammateStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    220;

  void Swap(CMsgClientToGCTeammateStatsResponse* other);
  friend void swap(CMsgClientToGCTeammateStatsResponse& a, CMsgClientToGCTeammateStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCTeammateStatsResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCTeammateStatsResponse>(nullptr);
  }

  CMsgClientToGCTeammateStatsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCTeammateStatsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCTeammateStatsResponse& from);
  void MergeFrom(const CMsgClientToGCTeammateStatsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCTeammateStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCTeammateStatsResponse_TeammateStat TeammateStat;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat teammate_stats = 2;
  int teammate_stats_size() const;
  void clear_teammate_stats();
  static const int kTeammateStatsFieldNumber = 2;
  ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat* mutable_teammate_stats(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat >*
      mutable_teammate_stats();
  const ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat& teammate_stats(int index) const;
  ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat* add_teammate_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat >&
      teammate_stats() const;

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCTeammateStatsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat > teammate_stats_;
  bool success_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForArcana_MatchVote final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCVoteForArcana.MatchVote) */ {
 public:
  CMsgClientToGCVoteForArcana_MatchVote();
  virtual ~CMsgClientToGCVoteForArcana_MatchVote();

  CMsgClientToGCVoteForArcana_MatchVote(const CMsgClientToGCVoteForArcana_MatchVote& from);

  inline CMsgClientToGCVoteForArcana_MatchVote& operator=(const CMsgClientToGCVoteForArcana_MatchVote& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCVoteForArcana_MatchVote(CMsgClientToGCVoteForArcana_MatchVote&& from) noexcept
    : CMsgClientToGCVoteForArcana_MatchVote() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCVoteForArcana_MatchVote& operator=(CMsgClientToGCVoteForArcana_MatchVote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCVoteForArcana_MatchVote& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCVoteForArcana_MatchVote* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCVoteForArcana_MatchVote*>(
               &_CMsgClientToGCVoteForArcana_MatchVote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    221;

  void Swap(CMsgClientToGCVoteForArcana_MatchVote* other);
  friend void swap(CMsgClientToGCVoteForArcana_MatchVote& a, CMsgClientToGCVoteForArcana_MatchVote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCVoteForArcana_MatchVote* New() const final {
    return CreateMaybeMessage<CMsgClientToGCVoteForArcana_MatchVote>(nullptr);
  }

  CMsgClientToGCVoteForArcana_MatchVote* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCVoteForArcana_MatchVote>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCVoteForArcana_MatchVote& from);
  void MergeFrom(const CMsgClientToGCVoteForArcana_MatchVote& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCVoteForArcana_MatchVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 vote_count = 3;
  bool has_vote_count() const;
  void clear_vote_count();
  static const int kVoteCountFieldNumber = 3;
  ::google::protobuf::uint32 vote_count() const;
  void set_vote_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCVoteForArcana.MatchVote)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 vote_count_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForArcana final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCVoteForArcana) */ {
 public:
  CMsgClientToGCVoteForArcana();
  virtual ~CMsgClientToGCVoteForArcana();

  CMsgClientToGCVoteForArcana(const CMsgClientToGCVoteForArcana& from);

  inline CMsgClientToGCVoteForArcana& operator=(const CMsgClientToGCVoteForArcana& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCVoteForArcana(CMsgClientToGCVoteForArcana&& from) noexcept
    : CMsgClientToGCVoteForArcana() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCVoteForArcana& operator=(CMsgClientToGCVoteForArcana&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCVoteForArcana& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCVoteForArcana* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCVoteForArcana*>(
               &_CMsgClientToGCVoteForArcana_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    222;

  void Swap(CMsgClientToGCVoteForArcana* other);
  friend void swap(CMsgClientToGCVoteForArcana& a, CMsgClientToGCVoteForArcana& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCVoteForArcana* New() const final {
    return CreateMaybeMessage<CMsgClientToGCVoteForArcana>(nullptr);
  }

  CMsgClientToGCVoteForArcana* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCVoteForArcana>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCVoteForArcana& from);
  void MergeFrom(const CMsgClientToGCVoteForArcana& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCVoteForArcana* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCVoteForArcana_MatchVote MatchVote;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCVoteForArcana.MatchVote matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote* mutable_matches(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote >*
      mutable_matches();
  const ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote& matches(int index) const;
  ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote* add_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote >&
      matches() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCVoteForArcana)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote > matches_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForArcanaResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCVoteForArcanaResponse) */ {
 public:
  CMsgClientToGCVoteForArcanaResponse();
  virtual ~CMsgClientToGCVoteForArcanaResponse();

  CMsgClientToGCVoteForArcanaResponse(const CMsgClientToGCVoteForArcanaResponse& from);

  inline CMsgClientToGCVoteForArcanaResponse& operator=(const CMsgClientToGCVoteForArcanaResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCVoteForArcanaResponse(CMsgClientToGCVoteForArcanaResponse&& from) noexcept
    : CMsgClientToGCVoteForArcanaResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCVoteForArcanaResponse& operator=(CMsgClientToGCVoteForArcanaResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCVoteForArcanaResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCVoteForArcanaResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCVoteForArcanaResponse*>(
               &_CMsgClientToGCVoteForArcanaResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    223;

  void Swap(CMsgClientToGCVoteForArcanaResponse* other);
  friend void swap(CMsgClientToGCVoteForArcanaResponse& a, CMsgClientToGCVoteForArcanaResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCVoteForArcanaResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCVoteForArcanaResponse>(nullptr);
  }

  CMsgClientToGCVoteForArcanaResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCVoteForArcanaResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCVoteForArcanaResponse& from);
  void MergeFrom(const CMsgClientToGCVoteForArcanaResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCVoteForArcanaResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCVoteForArcanaResponse_Result Result;
  static const Result SUCCEEDED =
    CMsgClientToGCVoteForArcanaResponse_Result_SUCCEEDED;
  static const Result VOTING_NOT_ENABLED_FOR_ROUND =
    CMsgClientToGCVoteForArcanaResponse_Result_VOTING_NOT_ENABLED_FOR_ROUND;
  static const Result UNKNOWN_FAILURE =
    CMsgClientToGCVoteForArcanaResponse_Result_UNKNOWN_FAILURE;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCVoteForArcanaResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCVoteForArcanaResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCVoteForArcanaResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCVoteForArcanaResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCVoteForArcanaResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCVoteForArcanaResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCVoteForArcanaResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCVoteForArcanaResponse.Result result = 1 [default = SUCCEEDED];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCVoteForArcanaResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgArcanaVotes_Match final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgArcanaVotes.Match) */ {
 public:
  CMsgArcanaVotes_Match();
  virtual ~CMsgArcanaVotes_Match();

  CMsgArcanaVotes_Match(const CMsgArcanaVotes_Match& from);

  inline CMsgArcanaVotes_Match& operator=(const CMsgArcanaVotes_Match& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgArcanaVotes_Match(CMsgArcanaVotes_Match&& from) noexcept
    : CMsgArcanaVotes_Match() {
    *this = ::std::move(from);
  }

  inline CMsgArcanaVotes_Match& operator=(CMsgArcanaVotes_Match&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgArcanaVotes_Match& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgArcanaVotes_Match* internal_default_instance() {
    return reinterpret_cast<const CMsgArcanaVotes_Match*>(
               &_CMsgArcanaVotes_Match_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    224;

  void Swap(CMsgArcanaVotes_Match* other);
  friend void swap(CMsgArcanaVotes_Match& a, CMsgArcanaVotes_Match& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgArcanaVotes_Match* New() const final {
    return CreateMaybeMessage<CMsgArcanaVotes_Match>(nullptr);
  }

  CMsgArcanaVotes_Match* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgArcanaVotes_Match>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgArcanaVotes_Match& from);
  void MergeFrom(const CMsgArcanaVotes_Match& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgArcanaVotes_Match* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id_0 = 2;
  bool has_hero_id_0() const;
  void clear_hero_id_0();
  static const int kHeroId0FieldNumber = 2;
  ::google::protobuf::uint32 hero_id_0() const;
  void set_hero_id_0(::google::protobuf::uint32 value);

  // optional uint32 hero_id_1 = 3;
  bool has_hero_id_1() const;
  void clear_hero_id_1();
  static const int kHeroId1FieldNumber = 3;
  ::google::protobuf::uint32 hero_id_1() const;
  void set_hero_id_1(::google::protobuf::uint32 value);

  // optional uint32 hero_seeding_0 = 4;
  bool has_hero_seeding_0() const;
  void clear_hero_seeding_0();
  static const int kHeroSeeding0FieldNumber = 4;
  ::google::protobuf::uint32 hero_seeding_0() const;
  void set_hero_seeding_0(::google::protobuf::uint32 value);

  // optional uint32 hero_seeding_1 = 5;
  bool has_hero_seeding_1() const;
  void clear_hero_seeding_1();
  static const int kHeroSeeding1FieldNumber = 5;
  ::google::protobuf::uint32 hero_seeding_1() const;
  void set_hero_seeding_1(::google::protobuf::uint32 value);

  // optional uint32 vote_count_0 = 6;
  bool has_vote_count_0() const;
  void clear_vote_count_0();
  static const int kVoteCount0FieldNumber = 6;
  ::google::protobuf::uint32 vote_count_0() const;
  void set_vote_count_0(::google::protobuf::uint32 value);

  // optional uint32 vote_count_1 = 7;
  bool has_vote_count_1() const;
  void clear_vote_count_1();
  static const int kVoteCount1FieldNumber = 7;
  ::google::protobuf::uint32 vote_count_1() const;
  void set_vote_count_1(::google::protobuf::uint32 value);

  // optional uint32 voting_state = 8;
  bool has_voting_state() const;
  void clear_voting_state();
  static const int kVotingStateFieldNumber = 8;
  ::google::protobuf::uint32 voting_state() const;
  void set_voting_state(::google::protobuf::uint32 value);

  // optional uint32 round_number = 9;
  bool has_round_number() const;
  void clear_round_number();
  static const int kRoundNumberFieldNumber = 9;
  ::google::protobuf::uint32 round_number() const;
  void set_round_number(::google::protobuf::uint32 value);

  // optional bool is_votes_hidden = 10;
  bool has_is_votes_hidden() const;
  void clear_is_votes_hidden();
  static const int kIsVotesHiddenFieldNumber = 10;
  bool is_votes_hidden() const;
  void set_is_votes_hidden(bool value);

  // optional uint32 calibration_time_remaining = 11;
  bool has_calibration_time_remaining() const;
  void clear_calibration_time_remaining();
  static const int kCalibrationTimeRemainingFieldNumber = 11;
  ::google::protobuf::uint32 calibration_time_remaining() const;
  void set_calibration_time_remaining(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgArcanaVotes.Match)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 match_id_;
  ::google::protobuf::uint32 hero_id_0_;
  ::google::protobuf::uint32 hero_id_1_;
  ::google::protobuf::uint32 hero_seeding_0_;
  ::google::protobuf::uint32 hero_seeding_1_;
  ::google::protobuf::uint32 vote_count_0_;
  ::google::protobuf::uint32 vote_count_1_;
  ::google::protobuf::uint32 voting_state_;
  ::google::protobuf::uint32 round_number_;
  bool is_votes_hidden_;
  ::google::protobuf::uint32 calibration_time_remaining_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgArcanaVotes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgArcanaVotes) */ {
 public:
  CMsgArcanaVotes();
  virtual ~CMsgArcanaVotes();

  CMsgArcanaVotes(const CMsgArcanaVotes& from);

  inline CMsgArcanaVotes& operator=(const CMsgArcanaVotes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgArcanaVotes(CMsgArcanaVotes&& from) noexcept
    : CMsgArcanaVotes() {
    *this = ::std::move(from);
  }

  inline CMsgArcanaVotes& operator=(CMsgArcanaVotes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgArcanaVotes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgArcanaVotes* internal_default_instance() {
    return reinterpret_cast<const CMsgArcanaVotes*>(
               &_CMsgArcanaVotes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    225;

  void Swap(CMsgArcanaVotes* other);
  friend void swap(CMsgArcanaVotes& a, CMsgArcanaVotes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgArcanaVotes* New() const final {
    return CreateMaybeMessage<CMsgArcanaVotes>(nullptr);
  }

  CMsgArcanaVotes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgArcanaVotes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgArcanaVotes& from);
  void MergeFrom(const CMsgArcanaVotes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgArcanaVotes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgArcanaVotes_Match Match;

  typedef CMsgArcanaVotes_VotingState VotingState;
  static const VotingState FINISHED =
    CMsgArcanaVotes_VotingState_FINISHED;
  static const VotingState IN_PROGRESS =
    CMsgArcanaVotes_VotingState_IN_PROGRESS;
  static const VotingState IN_FUTURE =
    CMsgArcanaVotes_VotingState_IN_FUTURE;
  static inline bool VotingState_IsValid(int value) {
    return CMsgArcanaVotes_VotingState_IsValid(value);
  }
  static const VotingState VotingState_MIN =
    CMsgArcanaVotes_VotingState_VotingState_MIN;
  static const VotingState VotingState_MAX =
    CMsgArcanaVotes_VotingState_VotingState_MAX;
  static const int VotingState_ARRAYSIZE =
    CMsgArcanaVotes_VotingState_VotingState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VotingState_descriptor() {
    return CMsgArcanaVotes_VotingState_descriptor();
  }
  static inline const ::std::string& VotingState_Name(VotingState value) {
    return CMsgArcanaVotes_VotingState_Name(value);
  }
  static inline bool VotingState_Parse(const ::std::string& name,
      VotingState* value) {
    return CMsgArcanaVotes_VotingState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgArcanaVotes.Match matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  ::proto::dota::CMsgArcanaVotes_Match* mutable_matches(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgArcanaVotes_Match >*
      mutable_matches();
  const ::proto::dota::CMsgArcanaVotes_Match& matches(int index) const;
  ::proto::dota::CMsgArcanaVotes_Match* add_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgArcanaVotes_Match >&
      matches() const;

  // optional uint32 round_time_remaining = 2;
  bool has_round_time_remaining() const;
  void clear_round_time_remaining();
  static const int kRoundTimeRemainingFieldNumber = 2;
  ::google::protobuf::uint32 round_time_remaining() const;
  void set_round_time_remaining(::google::protobuf::uint32 value);

  // optional uint32 round_number = 3;
  bool has_round_number() const;
  void clear_round_number();
  static const int kRoundNumberFieldNumber = 3;
  ::google::protobuf::uint32 round_number() const;
  void set_round_number(::google::protobuf::uint32 value);

  // optional uint32 voting_state = 4;
  bool has_voting_state() const;
  void clear_voting_state();
  static const int kVotingStateFieldNumber = 4;
  ::google::protobuf::uint32 voting_state() const;
  void set_voting_state(::google::protobuf::uint32 value);

  // optional bool is_current_round_calibrating = 5;
  bool has_is_current_round_calibrating() const;
  void clear_is_current_round_calibrating();
  static const int kIsCurrentRoundCalibratingFieldNumber = 5;
  bool is_current_round_calibrating() const;
  void set_is_current_round_calibrating(bool value);

  // optional uint32 closest_active_match_id = 6;
  bool has_closest_active_match_id() const;
  void clear_closest_active_match_id();
  static const int kClosestActiveMatchIdFieldNumber = 6;
  ::google::protobuf::uint32 closest_active_match_id() const;
  void set_closest_active_match_id(::google::protobuf::uint32 value);

  // optional uint32 event_id = 7;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 7;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 voting_start_time = 8;
  bool has_voting_start_time() const;
  void clear_voting_start_time();
  static const int kVotingStartTimeFieldNumber = 8;
  ::google::protobuf::uint32 voting_start_time() const;
  void set_voting_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgArcanaVotes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgArcanaVotes_Match > matches_;
  ::google::protobuf::uint32 round_time_remaining_;
  ::google::protobuf::uint32 round_number_;
  ::google::protobuf::uint32 voting_state_;
  bool is_current_round_calibrating_;
  ::google::protobuf::uint32 closest_active_match_id_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 voting_start_time_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestArcanaVotesRemaining final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestArcanaVotesRemaining) */ {
 public:
  CMsgClientToGCRequestArcanaVotesRemaining();
  virtual ~CMsgClientToGCRequestArcanaVotesRemaining();

  CMsgClientToGCRequestArcanaVotesRemaining(const CMsgClientToGCRequestArcanaVotesRemaining& from);

  inline CMsgClientToGCRequestArcanaVotesRemaining& operator=(const CMsgClientToGCRequestArcanaVotesRemaining& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestArcanaVotesRemaining(CMsgClientToGCRequestArcanaVotesRemaining&& from) noexcept
    : CMsgClientToGCRequestArcanaVotesRemaining() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestArcanaVotesRemaining& operator=(CMsgClientToGCRequestArcanaVotesRemaining&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestArcanaVotesRemaining& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestArcanaVotesRemaining* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestArcanaVotesRemaining*>(
               &_CMsgClientToGCRequestArcanaVotesRemaining_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    226;

  void Swap(CMsgClientToGCRequestArcanaVotesRemaining* other);
  friend void swap(CMsgClientToGCRequestArcanaVotesRemaining& a, CMsgClientToGCRequestArcanaVotesRemaining& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestArcanaVotesRemaining* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestArcanaVotesRemaining>(nullptr);
  }

  CMsgClientToGCRequestArcanaVotesRemaining* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestArcanaVotesRemaining>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestArcanaVotesRemaining& from);
  void MergeFrom(const CMsgClientToGCRequestArcanaVotesRemaining& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestArcanaVotesRemaining* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestArcanaVotesRemaining)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote) */ {
 public:
  CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote();
  virtual ~CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote();

  CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote(const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& from);

  inline CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& operator=(const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote(CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote&& from) noexcept
    : CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& operator=(CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote*>(
               &_CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    227;

  void Swap(CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* other);
  friend void swap(CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& a, CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote>(nullptr);
  }

  CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& from);
  void MergeFrom(const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 vote_count = 3;
  bool has_vote_count() const;
  void clear_vote_count();
  static const int kVoteCountFieldNumber = 3;
  ::google::protobuf::uint32 vote_count() const;
  void set_vote_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 vote_count_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestArcanaVotesRemainingResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse) */ {
 public:
  CMsgClientToGCRequestArcanaVotesRemainingResponse();
  virtual ~CMsgClientToGCRequestArcanaVotesRemainingResponse();

  CMsgClientToGCRequestArcanaVotesRemainingResponse(const CMsgClientToGCRequestArcanaVotesRemainingResponse& from);

  inline CMsgClientToGCRequestArcanaVotesRemainingResponse& operator=(const CMsgClientToGCRequestArcanaVotesRemainingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestArcanaVotesRemainingResponse(CMsgClientToGCRequestArcanaVotesRemainingResponse&& from) noexcept
    : CMsgClientToGCRequestArcanaVotesRemainingResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestArcanaVotesRemainingResponse& operator=(CMsgClientToGCRequestArcanaVotesRemainingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestArcanaVotesRemainingResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestArcanaVotesRemainingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestArcanaVotesRemainingResponse*>(
               &_CMsgClientToGCRequestArcanaVotesRemainingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    228;

  void Swap(CMsgClientToGCRequestArcanaVotesRemainingResponse* other);
  friend void swap(CMsgClientToGCRequestArcanaVotesRemainingResponse& a, CMsgClientToGCRequestArcanaVotesRemainingResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestArcanaVotesRemainingResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestArcanaVotesRemainingResponse>(nullptr);
  }

  CMsgClientToGCRequestArcanaVotesRemainingResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestArcanaVotesRemainingResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestArcanaVotesRemainingResponse& from);
  void MergeFrom(const CMsgClientToGCRequestArcanaVotesRemainingResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestArcanaVotesRemainingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote MatchVote;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote matches_previously_voted_for = 4;
  int matches_previously_voted_for_size() const;
  void clear_matches_previously_voted_for();
  static const int kMatchesPreviouslyVotedForFieldNumber = 4;
  ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* mutable_matches_previously_voted_for(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote >*
      mutable_matches_previously_voted_for();
  const ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& matches_previously_voted_for(int index) const;
  ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* add_matches_previously_voted_for();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote >&
      matches_previously_voted_for() const;

  // optional bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // optional uint32 votes_remaining = 2;
  bool has_votes_remaining() const;
  void clear_votes_remaining();
  static const int kVotesRemainingFieldNumber = 2;
  ::google::protobuf::uint32 votes_remaining() const;
  void set_votes_remaining(::google::protobuf::uint32 value);

  // optional uint32 votes_total = 3;
  bool has_votes_total() const;
  void clear_votes_total();
  static const int kVotesTotalFieldNumber = 3;
  ::google::protobuf::uint32 votes_total() const;
  void set_votes_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote > matches_previously_voted_for_;
  bool result_;
  ::google::protobuf::uint32 votes_remaining_;
  ::google::protobuf::uint32 votes_total_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogV2 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogV2) */ {
 public:
  CMsgClientToGCRequestEventPointLogV2();
  virtual ~CMsgClientToGCRequestEventPointLogV2();

  CMsgClientToGCRequestEventPointLogV2(const CMsgClientToGCRequestEventPointLogV2& from);

  inline CMsgClientToGCRequestEventPointLogV2& operator=(const CMsgClientToGCRequestEventPointLogV2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestEventPointLogV2(CMsgClientToGCRequestEventPointLogV2&& from) noexcept
    : CMsgClientToGCRequestEventPointLogV2() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestEventPointLogV2& operator=(CMsgClientToGCRequestEventPointLogV2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestEventPointLogV2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestEventPointLogV2* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogV2*>(
               &_CMsgClientToGCRequestEventPointLogV2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    229;

  void Swap(CMsgClientToGCRequestEventPointLogV2* other);
  friend void swap(CMsgClientToGCRequestEventPointLogV2& a, CMsgClientToGCRequestEventPointLogV2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogV2* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestEventPointLogV2>(nullptr);
  }

  CMsgClientToGCRequestEventPointLogV2* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestEventPointLogV2>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogV2& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogV2& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestEventPointLogV2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogV2)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponseV2_LogEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.LogEntry) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponseV2_LogEntry();
  virtual ~CMsgClientToGCRequestEventPointLogResponseV2_LogEntry();

  CMsgClientToGCRequestEventPointLogResponseV2_LogEntry(const CMsgClientToGCRequestEventPointLogResponseV2_LogEntry& from);

  inline CMsgClientToGCRequestEventPointLogResponseV2_LogEntry& operator=(const CMsgClientToGCRequestEventPointLogResponseV2_LogEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestEventPointLogResponseV2_LogEntry(CMsgClientToGCRequestEventPointLogResponseV2_LogEntry&& from) noexcept
    : CMsgClientToGCRequestEventPointLogResponseV2_LogEntry() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestEventPointLogResponseV2_LogEntry& operator=(CMsgClientToGCRequestEventPointLogResponseV2_LogEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestEventPointLogResponseV2_LogEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestEventPointLogResponseV2_LogEntry* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponseV2_LogEntry*>(
               &_CMsgClientToGCRequestEventPointLogResponseV2_LogEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    230;

  void Swap(CMsgClientToGCRequestEventPointLogResponseV2_LogEntry* other);
  friend void swap(CMsgClientToGCRequestEventPointLogResponseV2_LogEntry& a, CMsgClientToGCRequestEventPointLogResponseV2_LogEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponseV2_LogEntry* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestEventPointLogResponseV2_LogEntry>(nullptr);
  }

  CMsgClientToGCRequestEventPointLogResponseV2_LogEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestEventPointLogResponseV2_LogEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponseV2_LogEntry& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponseV2_LogEntry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponseV2_LogEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 audit_action = 2;
  bool has_audit_action() const;
  void clear_audit_action();
  static const int kAuditActionFieldNumber = 2;
  ::google::protobuf::uint32 audit_action() const;
  void set_audit_action(::google::protobuf::uint32 value);

  // optional uint64 audit_data = 4;
  bool has_audit_data() const;
  void clear_audit_data();
  static const int kAuditDataFieldNumber = 4;
  ::google::protobuf::uint64 audit_data() const;
  void set_audit_data(::google::protobuf::uint64 value);

  // optional int32 event_points = 3;
  bool has_event_points() const;
  void clear_event_points();
  static const int kEventPointsFieldNumber = 3;
  ::google::protobuf::int32 event_points() const;
  void set_event_points(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.LogEntry)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 audit_action_;
  ::google::protobuf::uint64 audit_data_;
  ::google::protobuf::int32 event_points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponseV2 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponseV2();
  virtual ~CMsgClientToGCRequestEventPointLogResponseV2();

  CMsgClientToGCRequestEventPointLogResponseV2(const CMsgClientToGCRequestEventPointLogResponseV2& from);

  inline CMsgClientToGCRequestEventPointLogResponseV2& operator=(const CMsgClientToGCRequestEventPointLogResponseV2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestEventPointLogResponseV2(CMsgClientToGCRequestEventPointLogResponseV2&& from) noexcept
    : CMsgClientToGCRequestEventPointLogResponseV2() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestEventPointLogResponseV2& operator=(CMsgClientToGCRequestEventPointLogResponseV2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestEventPointLogResponseV2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestEventPointLogResponseV2* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponseV2*>(
               &_CMsgClientToGCRequestEventPointLogResponseV2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    231;

  void Swap(CMsgClientToGCRequestEventPointLogResponseV2* other);
  friend void swap(CMsgClientToGCRequestEventPointLogResponseV2& a, CMsgClientToGCRequestEventPointLogResponseV2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponseV2* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestEventPointLogResponseV2>(nullptr);
  }

  CMsgClientToGCRequestEventPointLogResponseV2* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestEventPointLogResponseV2>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponseV2& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponseV2& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponseV2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestEventPointLogResponseV2_LogEntry LogEntry;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.LogEntry log_entries = 3;
  int log_entries_size() const;
  void clear_log_entries();
  static const int kLogEntriesFieldNumber = 3;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2_LogEntry* mutable_log_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2_LogEntry >*
      mutable_log_entries();
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2_LogEntry& log_entries(int index) const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2_LogEntry* add_log_entries();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2_LogEntry >&
      log_entries() const;

  // optional bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // optional .proto.dota.EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2_LogEntry > log_entries_;
  bool result_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPublishUserStat final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCPublishUserStat) */ {
 public:
  CMsgClientToGCPublishUserStat();
  virtual ~CMsgClientToGCPublishUserStat();

  CMsgClientToGCPublishUserStat(const CMsgClientToGCPublishUserStat& from);

  inline CMsgClientToGCPublishUserStat& operator=(const CMsgClientToGCPublishUserStat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCPublishUserStat(CMsgClientToGCPublishUserStat&& from) noexcept
    : CMsgClientToGCPublishUserStat() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPublishUserStat& operator=(CMsgClientToGCPublishUserStat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCPublishUserStat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCPublishUserStat* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPublishUserStat*>(
               &_CMsgClientToGCPublishUserStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    232;

  void Swap(CMsgClientToGCPublishUserStat* other);
  friend void swap(CMsgClientToGCPublishUserStat& a, CMsgClientToGCPublishUserStat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCPublishUserStat* New() const final {
    return CreateMaybeMessage<CMsgClientToGCPublishUserStat>(nullptr);
  }

  CMsgClientToGCPublishUserStat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCPublishUserStat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCPublishUserStat& from);
  void MergeFrom(const CMsgClientToGCPublishUserStat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPublishUserStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 reference_data = 2;
  bool has_reference_data() const;
  void clear_reference_data();
  static const int kReferenceDataFieldNumber = 2;
  ::google::protobuf::uint64 reference_data() const;
  void set_reference_data(::google::protobuf::uint64 value);

  // optional uint32 user_stats_event = 1;
  bool has_user_stats_event() const;
  void clear_user_stats_event();
  static const int kUserStatsEventFieldNumber = 1;
  ::google::protobuf::uint32 user_stats_event() const;
  void set_user_stats_event(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCPublishUserStat)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 reference_data_;
  ::google::protobuf::uint32 user_stats_event_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCAddTI6TreeProgress final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCAddTI6TreeProgress) */ {
 public:
  CMsgClientToGCAddTI6TreeProgress();
  virtual ~CMsgClientToGCAddTI6TreeProgress();

  CMsgClientToGCAddTI6TreeProgress(const CMsgClientToGCAddTI6TreeProgress& from);

  inline CMsgClientToGCAddTI6TreeProgress& operator=(const CMsgClientToGCAddTI6TreeProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCAddTI6TreeProgress(CMsgClientToGCAddTI6TreeProgress&& from) noexcept
    : CMsgClientToGCAddTI6TreeProgress() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCAddTI6TreeProgress& operator=(CMsgClientToGCAddTI6TreeProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCAddTI6TreeProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCAddTI6TreeProgress* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCAddTI6TreeProgress*>(
               &_CMsgClientToGCAddTI6TreeProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    233;

  void Swap(CMsgClientToGCAddTI6TreeProgress* other);
  friend void swap(CMsgClientToGCAddTI6TreeProgress& a, CMsgClientToGCAddTI6TreeProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCAddTI6TreeProgress* New() const final {
    return CreateMaybeMessage<CMsgClientToGCAddTI6TreeProgress>(nullptr);
  }

  CMsgClientToGCAddTI6TreeProgress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCAddTI6TreeProgress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCAddTI6TreeProgress& from);
  void MergeFrom(const CMsgClientToGCAddTI6TreeProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCAddTI6TreeProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trees = 1;
  bool has_trees() const;
  void clear_trees();
  static const int kTreesFieldNumber = 1;
  ::google::protobuf::uint32 trees() const;
  void set_trees(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCAddTI6TreeProgress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 trees_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestLinaPlaysRemaining final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestLinaPlaysRemaining) */ {
 public:
  CMsgClientToGCRequestLinaPlaysRemaining();
  virtual ~CMsgClientToGCRequestLinaPlaysRemaining();

  CMsgClientToGCRequestLinaPlaysRemaining(const CMsgClientToGCRequestLinaPlaysRemaining& from);

  inline CMsgClientToGCRequestLinaPlaysRemaining& operator=(const CMsgClientToGCRequestLinaPlaysRemaining& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestLinaPlaysRemaining(CMsgClientToGCRequestLinaPlaysRemaining&& from) noexcept
    : CMsgClientToGCRequestLinaPlaysRemaining() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestLinaPlaysRemaining& operator=(CMsgClientToGCRequestLinaPlaysRemaining&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestLinaPlaysRemaining& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestLinaPlaysRemaining* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestLinaPlaysRemaining*>(
               &_CMsgClientToGCRequestLinaPlaysRemaining_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    234;

  void Swap(CMsgClientToGCRequestLinaPlaysRemaining* other);
  friend void swap(CMsgClientToGCRequestLinaPlaysRemaining& a, CMsgClientToGCRequestLinaPlaysRemaining& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestLinaPlaysRemaining* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestLinaPlaysRemaining>(nullptr);
  }

  CMsgClientToGCRequestLinaPlaysRemaining* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestLinaPlaysRemaining>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestLinaPlaysRemaining& from);
  void MergeFrom(const CMsgClientToGCRequestLinaPlaysRemaining& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestLinaPlaysRemaining* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestLinaPlaysRemaining)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestLinaPlaysRemainingResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestLinaPlaysRemainingResponse) */ {
 public:
  CMsgClientToGCRequestLinaPlaysRemainingResponse();
  virtual ~CMsgClientToGCRequestLinaPlaysRemainingResponse();

  CMsgClientToGCRequestLinaPlaysRemainingResponse(const CMsgClientToGCRequestLinaPlaysRemainingResponse& from);

  inline CMsgClientToGCRequestLinaPlaysRemainingResponse& operator=(const CMsgClientToGCRequestLinaPlaysRemainingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestLinaPlaysRemainingResponse(CMsgClientToGCRequestLinaPlaysRemainingResponse&& from) noexcept
    : CMsgClientToGCRequestLinaPlaysRemainingResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestLinaPlaysRemainingResponse& operator=(CMsgClientToGCRequestLinaPlaysRemainingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestLinaPlaysRemainingResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestLinaPlaysRemainingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestLinaPlaysRemainingResponse*>(
               &_CMsgClientToGCRequestLinaPlaysRemainingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    235;

  void Swap(CMsgClientToGCRequestLinaPlaysRemainingResponse* other);
  friend void swap(CMsgClientToGCRequestLinaPlaysRemainingResponse& a, CMsgClientToGCRequestLinaPlaysRemainingResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestLinaPlaysRemainingResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestLinaPlaysRemainingResponse>(nullptr);
  }

  CMsgClientToGCRequestLinaPlaysRemainingResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestLinaPlaysRemainingResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestLinaPlaysRemainingResponse& from);
  void MergeFrom(const CMsgClientToGCRequestLinaPlaysRemainingResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestLinaPlaysRemainingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 plays_remaining = 1;
  bool has_plays_remaining() const;
  void clear_plays_remaining();
  static const int kPlaysRemainingFieldNumber = 1;
  ::google::protobuf::uint32 plays_remaining() const;
  void set_plays_remaining(::google::protobuf::uint32 value);

  // optional uint32 plays_total = 2;
  bool has_plays_total() const;
  void clear_plays_total();
  static const int kPlaysTotalFieldNumber = 2;
  ::google::protobuf::uint32 plays_total() const;
  void set_plays_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestLinaPlaysRemainingResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 plays_remaining_;
  ::google::protobuf::uint32 plays_total_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestLinaGameResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestLinaGameResult) */ {
 public:
  CMsgClientToGCRequestLinaGameResult();
  virtual ~CMsgClientToGCRequestLinaGameResult();

  CMsgClientToGCRequestLinaGameResult(const CMsgClientToGCRequestLinaGameResult& from);

  inline CMsgClientToGCRequestLinaGameResult& operator=(const CMsgClientToGCRequestLinaGameResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestLinaGameResult(CMsgClientToGCRequestLinaGameResult&& from) noexcept
    : CMsgClientToGCRequestLinaGameResult() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestLinaGameResult& operator=(CMsgClientToGCRequestLinaGameResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestLinaGameResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestLinaGameResult* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestLinaGameResult*>(
               &_CMsgClientToGCRequestLinaGameResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    236;

  void Swap(CMsgClientToGCRequestLinaGameResult* other);
  friend void swap(CMsgClientToGCRequestLinaGameResult& a, CMsgClientToGCRequestLinaGameResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestLinaGameResult* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestLinaGameResult>(nullptr);
  }

  CMsgClientToGCRequestLinaGameResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestLinaGameResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestLinaGameResult& from);
  void MergeFrom(const CMsgClientToGCRequestLinaGameResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestLinaGameResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 slot_chosen = 2;
  bool has_slot_chosen() const;
  void clear_slot_chosen();
  static const int kSlotChosenFieldNumber = 2;
  ::google::protobuf::uint32 slot_chosen() const;
  void set_slot_chosen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestLinaGameResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int event_id_;
  ::google::protobuf::uint32 slot_chosen_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestLinaGameResultResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestLinaGameResultResponse) */ {
 public:
  CMsgClientToGCRequestLinaGameResultResponse();
  virtual ~CMsgClientToGCRequestLinaGameResultResponse();

  CMsgClientToGCRequestLinaGameResultResponse(const CMsgClientToGCRequestLinaGameResultResponse& from);

  inline CMsgClientToGCRequestLinaGameResultResponse& operator=(const CMsgClientToGCRequestLinaGameResultResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestLinaGameResultResponse(CMsgClientToGCRequestLinaGameResultResponse&& from) noexcept
    : CMsgClientToGCRequestLinaGameResultResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestLinaGameResultResponse& operator=(CMsgClientToGCRequestLinaGameResultResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestLinaGameResultResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestLinaGameResultResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestLinaGameResultResponse*>(
               &_CMsgClientToGCRequestLinaGameResultResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    237;

  void Swap(CMsgClientToGCRequestLinaGameResultResponse* other);
  friend void swap(CMsgClientToGCRequestLinaGameResultResponse& a, CMsgClientToGCRequestLinaGameResultResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestLinaGameResultResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestLinaGameResultResponse>(nullptr);
  }

  CMsgClientToGCRequestLinaGameResultResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestLinaGameResultResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestLinaGameResultResponse& from);
  void MergeFrom(const CMsgClientToGCRequestLinaGameResultResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestLinaGameResultResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestLinaGameResultResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestSlarkGameResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestSlarkGameResult) */ {
 public:
  CMsgClientToGCRequestSlarkGameResult();
  virtual ~CMsgClientToGCRequestSlarkGameResult();

  CMsgClientToGCRequestSlarkGameResult(const CMsgClientToGCRequestSlarkGameResult& from);

  inline CMsgClientToGCRequestSlarkGameResult& operator=(const CMsgClientToGCRequestSlarkGameResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestSlarkGameResult(CMsgClientToGCRequestSlarkGameResult&& from) noexcept
    : CMsgClientToGCRequestSlarkGameResult() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestSlarkGameResult& operator=(CMsgClientToGCRequestSlarkGameResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestSlarkGameResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestSlarkGameResult* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestSlarkGameResult*>(
               &_CMsgClientToGCRequestSlarkGameResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    238;

  void Swap(CMsgClientToGCRequestSlarkGameResult* other);
  friend void swap(CMsgClientToGCRequestSlarkGameResult& a, CMsgClientToGCRequestSlarkGameResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestSlarkGameResult* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestSlarkGameResult>(nullptr);
  }

  CMsgClientToGCRequestSlarkGameResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestSlarkGameResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestSlarkGameResult& from);
  void MergeFrom(const CMsgClientToGCRequestSlarkGameResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestSlarkGameResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 slot_chosen = 2;
  bool has_slot_chosen() const;
  void clear_slot_chosen();
  static const int kSlotChosenFieldNumber = 2;
  ::google::protobuf::uint32 slot_chosen() const;
  void set_slot_chosen(::google::protobuf::uint32 value);

  // optional uint32 week = 3;
  bool has_week() const;
  void clear_week();
  static const int kWeekFieldNumber = 3;
  ::google::protobuf::uint32 week() const;
  void set_week(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestSlarkGameResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int event_id_;
  ::google::protobuf::uint32 slot_chosen_;
  ::google::protobuf::uint32 week_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestSlarkGameResultResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestSlarkGameResultResponse) */ {
 public:
  CMsgClientToGCRequestSlarkGameResultResponse();
  virtual ~CMsgClientToGCRequestSlarkGameResultResponse();

  CMsgClientToGCRequestSlarkGameResultResponse(const CMsgClientToGCRequestSlarkGameResultResponse& from);

  inline CMsgClientToGCRequestSlarkGameResultResponse& operator=(const CMsgClientToGCRequestSlarkGameResultResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestSlarkGameResultResponse(CMsgClientToGCRequestSlarkGameResultResponse&& from) noexcept
    : CMsgClientToGCRequestSlarkGameResultResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestSlarkGameResultResponse& operator=(CMsgClientToGCRequestSlarkGameResultResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestSlarkGameResultResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestSlarkGameResultResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestSlarkGameResultResponse*>(
               &_CMsgClientToGCRequestSlarkGameResultResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    239;

  void Swap(CMsgClientToGCRequestSlarkGameResultResponse* other);
  friend void swap(CMsgClientToGCRequestSlarkGameResultResponse& a, CMsgClientToGCRequestSlarkGameResultResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestSlarkGameResultResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestSlarkGameResultResponse>(nullptr);
  }

  CMsgClientToGCRequestSlarkGameResultResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestSlarkGameResultResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestSlarkGameResultResponse& from);
  void MergeFrom(const CMsgClientToGCRequestSlarkGameResultResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestSlarkGameResultResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 points_won = 1;
  bool has_points_won() const;
  void clear_points_won();
  static const int kPointsWonFieldNumber = 1;
  ::google::protobuf::uint32 points_won() const;
  void set_points_won(::google::protobuf::uint32 value);

  // optional bool aura_won = 2;
  bool has_aura_won() const;
  void clear_aura_won();
  static const int kAuraWonFieldNumber = 2;
  bool aura_won() const;
  void set_aura_won(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestSlarkGameResultResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 points_won_;
  bool aura_won_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientQuestProgressUpdated_Challenge final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge) */ {
 public:
  CMsgGCToClientQuestProgressUpdated_Challenge();
  virtual ~CMsgGCToClientQuestProgressUpdated_Challenge();

  CMsgGCToClientQuestProgressUpdated_Challenge(const CMsgGCToClientQuestProgressUpdated_Challenge& from);

  inline CMsgGCToClientQuestProgressUpdated_Challenge& operator=(const CMsgGCToClientQuestProgressUpdated_Challenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientQuestProgressUpdated_Challenge(CMsgGCToClientQuestProgressUpdated_Challenge&& from) noexcept
    : CMsgGCToClientQuestProgressUpdated_Challenge() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientQuestProgressUpdated_Challenge& operator=(CMsgGCToClientQuestProgressUpdated_Challenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientQuestProgressUpdated_Challenge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientQuestProgressUpdated_Challenge* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientQuestProgressUpdated_Challenge*>(
               &_CMsgGCToClientQuestProgressUpdated_Challenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    240;

  void Swap(CMsgGCToClientQuestProgressUpdated_Challenge* other);
  friend void swap(CMsgGCToClientQuestProgressUpdated_Challenge& a, CMsgGCToClientQuestProgressUpdated_Challenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientQuestProgressUpdated_Challenge* New() const final {
    return CreateMaybeMessage<CMsgGCToClientQuestProgressUpdated_Challenge>(nullptr);
  }

  CMsgGCToClientQuestProgressUpdated_Challenge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientQuestProgressUpdated_Challenge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientQuestProgressUpdated_Challenge& from);
  void MergeFrom(const CMsgGCToClientQuestProgressUpdated_Challenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientQuestProgressUpdated_Challenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 challenge_id = 1;
  bool has_challenge_id() const;
  void clear_challenge_id();
  static const int kChallengeIdFieldNumber = 1;
  ::google::protobuf::uint32 challenge_id() const;
  void set_challenge_id(::google::protobuf::uint32 value);

  // optional uint32 time_completed = 2;
  bool has_time_completed() const;
  void clear_time_completed();
  static const int kTimeCompletedFieldNumber = 2;
  ::google::protobuf::uint32 time_completed() const;
  void set_time_completed(::google::protobuf::uint32 value);

  // optional uint32 attempts = 3;
  bool has_attempts() const;
  void clear_attempts();
  static const int kAttemptsFieldNumber = 3;
  ::google::protobuf::uint32 attempts() const;
  void set_attempts(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 4;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 template_id = 5;
  bool has_template_id() const;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 5;
  ::google::protobuf::uint32 template_id() const;
  void set_template_id(::google::protobuf::uint32 value);

  // optional uint32 quest_rank = 6;
  bool has_quest_rank() const;
  void clear_quest_rank();
  static const int kQuestRankFieldNumber = 6;
  ::google::protobuf::uint32 quest_rank() const;
  void set_quest_rank(::google::protobuf::uint32 value);

  // optional uint32 max_quest_rank = 7;
  bool has_max_quest_rank() const;
  void clear_max_quest_rank();
  static const int kMaxQuestRankFieldNumber = 7;
  ::google::protobuf::uint32 max_quest_rank() const;
  void set_max_quest_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 challenge_id_;
  ::google::protobuf::uint32 time_completed_;
  ::google::protobuf::uint32 attempts_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 template_id_;
  ::google::protobuf::uint32 quest_rank_;
  ::google::protobuf::uint32 max_quest_rank_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientQuestProgressUpdated final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientQuestProgressUpdated) */ {
 public:
  CMsgGCToClientQuestProgressUpdated();
  virtual ~CMsgGCToClientQuestProgressUpdated();

  CMsgGCToClientQuestProgressUpdated(const CMsgGCToClientQuestProgressUpdated& from);

  inline CMsgGCToClientQuestProgressUpdated& operator=(const CMsgGCToClientQuestProgressUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientQuestProgressUpdated(CMsgGCToClientQuestProgressUpdated&& from) noexcept
    : CMsgGCToClientQuestProgressUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientQuestProgressUpdated& operator=(CMsgGCToClientQuestProgressUpdated&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientQuestProgressUpdated& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientQuestProgressUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientQuestProgressUpdated*>(
               &_CMsgGCToClientQuestProgressUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    241;

  void Swap(CMsgGCToClientQuestProgressUpdated* other);
  friend void swap(CMsgGCToClientQuestProgressUpdated& a, CMsgGCToClientQuestProgressUpdated& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientQuestProgressUpdated* New() const final {
    return CreateMaybeMessage<CMsgGCToClientQuestProgressUpdated>(nullptr);
  }

  CMsgGCToClientQuestProgressUpdated* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientQuestProgressUpdated>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientQuestProgressUpdated& from);
  void MergeFrom(const CMsgGCToClientQuestProgressUpdated& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientQuestProgressUpdated* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientQuestProgressUpdated_Challenge Challenge;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge completed_challenges = 2;
  int completed_challenges_size() const;
  void clear_completed_challenges();
  static const int kCompletedChallengesFieldNumber = 2;
  ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge* mutable_completed_challenges(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge >*
      mutable_completed_challenges();
  const ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge& completed_challenges(int index) const;
  ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge* add_completed_challenges();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge >&
      completed_challenges() const;

  // optional uint32 quest_id = 1;
  bool has_quest_id() const;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientQuestProgressUpdated)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge > completed_challenges_;
  ::google::protobuf::uint32 quest_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARedeemItem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARedeemItem) */ {
 public:
  CMsgDOTARedeemItem();
  virtual ~CMsgDOTARedeemItem();

  CMsgDOTARedeemItem(const CMsgDOTARedeemItem& from);

  inline CMsgDOTARedeemItem& operator=(const CMsgDOTARedeemItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARedeemItem(CMsgDOTARedeemItem&& from) noexcept
    : CMsgDOTARedeemItem() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARedeemItem& operator=(CMsgDOTARedeemItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARedeemItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARedeemItem* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARedeemItem*>(
               &_CMsgDOTARedeemItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    242;

  void Swap(CMsgDOTARedeemItem* other);
  friend void swap(CMsgDOTARedeemItem& a, CMsgDOTARedeemItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARedeemItem* New() const final {
    return CreateMaybeMessage<CMsgDOTARedeemItem>(nullptr);
  }

  CMsgDOTARedeemItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARedeemItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARedeemItem& from);
  void MergeFrom(const CMsgDOTARedeemItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARedeemItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 currency_id = 1;
  bool has_currency_id() const;
  void clear_currency_id();
  static const int kCurrencyIdFieldNumber = 1;
  ::google::protobuf::uint64 currency_id() const;
  void set_currency_id(::google::protobuf::uint64 value);

  // optional uint32 purchase_def = 2;
  bool has_purchase_def() const;
  void clear_purchase_def();
  static const int kPurchaseDefFieldNumber = 2;
  ::google::protobuf::uint32 purchase_def() const;
  void set_purchase_def(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARedeemItem)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 currency_id_;
  ::google::protobuf::uint32 purchase_def_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARedeemItemResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARedeemItemResponse) */ {
 public:
  CMsgDOTARedeemItemResponse();
  virtual ~CMsgDOTARedeemItemResponse();

  CMsgDOTARedeemItemResponse(const CMsgDOTARedeemItemResponse& from);

  inline CMsgDOTARedeemItemResponse& operator=(const CMsgDOTARedeemItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARedeemItemResponse(CMsgDOTARedeemItemResponse&& from) noexcept
    : CMsgDOTARedeemItemResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARedeemItemResponse& operator=(CMsgDOTARedeemItemResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARedeemItemResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARedeemItemResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARedeemItemResponse*>(
               &_CMsgDOTARedeemItemResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    243;

  void Swap(CMsgDOTARedeemItemResponse* other);
  friend void swap(CMsgDOTARedeemItemResponse& a, CMsgDOTARedeemItemResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARedeemItemResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTARedeemItemResponse>(nullptr);
  }

  CMsgDOTARedeemItemResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARedeemItemResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARedeemItemResponse& from);
  void MergeFrom(const CMsgDOTARedeemItemResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARedeemItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARedeemItemResponse_EResultCode EResultCode;
  static const EResultCode k_Succeeded =
    CMsgDOTARedeemItemResponse_EResultCode_k_Succeeded;
  static const EResultCode k_Failed =
    CMsgDOTARedeemItemResponse_EResultCode_k_Failed;
  static inline bool EResultCode_IsValid(int value) {
    return CMsgDOTARedeemItemResponse_EResultCode_IsValid(value);
  }
  static const EResultCode EResultCode_MIN =
    CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MIN;
  static const EResultCode EResultCode_MAX =
    CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MAX;
  static const int EResultCode_ARRAYSIZE =
    CMsgDOTARedeemItemResponse_EResultCode_EResultCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResultCode_descriptor() {
    return CMsgDOTARedeemItemResponse_EResultCode_descriptor();
  }
  static inline const ::std::string& EResultCode_Name(EResultCode value) {
    return CMsgDOTARedeemItemResponse_EResultCode_Name(value);
  }
  static inline bool EResultCode_Parse(const ::std::string& name,
      EResultCode* value) {
    return CMsgDOTARedeemItemResponse_EResultCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTARedeemItemResponse.EResultCode response = 1 [default = k_Succeeded];
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 1;
  ::proto::dota::CMsgDOTARedeemItemResponse_EResultCode response() const;
  void set_response(::proto::dota::CMsgDOTARedeemItemResponse_EResultCode value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARedeemItemResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int response_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPerfectWorldUserLookupRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPerfectWorldUserLookupRequest) */ {
 public:
  CMsgPerfectWorldUserLookupRequest();
  virtual ~CMsgPerfectWorldUserLookupRequest();

  CMsgPerfectWorldUserLookupRequest(const CMsgPerfectWorldUserLookupRequest& from);

  inline CMsgPerfectWorldUserLookupRequest& operator=(const CMsgPerfectWorldUserLookupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPerfectWorldUserLookupRequest(CMsgPerfectWorldUserLookupRequest&& from) noexcept
    : CMsgPerfectWorldUserLookupRequest() {
    *this = ::std::move(from);
  }

  inline CMsgPerfectWorldUserLookupRequest& operator=(CMsgPerfectWorldUserLookupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPerfectWorldUserLookupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPerfectWorldUserLookupRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgPerfectWorldUserLookupRequest*>(
               &_CMsgPerfectWorldUserLookupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    244;

  void Swap(CMsgPerfectWorldUserLookupRequest* other);
  friend void swap(CMsgPerfectWorldUserLookupRequest& a, CMsgPerfectWorldUserLookupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPerfectWorldUserLookupRequest* New() const final {
    return CreateMaybeMessage<CMsgPerfectWorldUserLookupRequest>(nullptr);
  }

  CMsgPerfectWorldUserLookupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPerfectWorldUserLookupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPerfectWorldUserLookupRequest& from);
  void MergeFrom(const CMsgPerfectWorldUserLookupRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPerfectWorldUserLookupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_name = 1;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPerfectWorldUserLookupRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPerfectWorldUserLookupResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPerfectWorldUserLookupResponse) */ {
 public:
  CMsgPerfectWorldUserLookupResponse();
  virtual ~CMsgPerfectWorldUserLookupResponse();

  CMsgPerfectWorldUserLookupResponse(const CMsgPerfectWorldUserLookupResponse& from);

  inline CMsgPerfectWorldUserLookupResponse& operator=(const CMsgPerfectWorldUserLookupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPerfectWorldUserLookupResponse(CMsgPerfectWorldUserLookupResponse&& from) noexcept
    : CMsgPerfectWorldUserLookupResponse() {
    *this = ::std::move(from);
  }

  inline CMsgPerfectWorldUserLookupResponse& operator=(CMsgPerfectWorldUserLookupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPerfectWorldUserLookupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPerfectWorldUserLookupResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgPerfectWorldUserLookupResponse*>(
               &_CMsgPerfectWorldUserLookupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    245;

  void Swap(CMsgPerfectWorldUserLookupResponse* other);
  friend void swap(CMsgPerfectWorldUserLookupResponse& a, CMsgPerfectWorldUserLookupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPerfectWorldUserLookupResponse* New() const final {
    return CreateMaybeMessage<CMsgPerfectWorldUserLookupResponse>(nullptr);
  }

  CMsgPerfectWorldUserLookupResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPerfectWorldUserLookupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPerfectWorldUserLookupResponse& from);
  void MergeFrom(const CMsgPerfectWorldUserLookupResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPerfectWorldUserLookupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgPerfectWorldUserLookupResponse_EResultCode EResultCode;
  static const EResultCode SUCCESS_ACCOUNT_FOUND =
    CMsgPerfectWorldUserLookupResponse_EResultCode_SUCCESS_ACCOUNT_FOUND;
  static const EResultCode ERROR_UNKNOWN =
    CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_UNKNOWN;
  static const EResultCode ERROR_USER_NAME_WRONG_FORMAT =
    CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_USER_NAME_WRONG_FORMAT;
  static const EResultCode ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND =
    CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND;
  static const EResultCode ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND =
    CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND;
  static inline bool EResultCode_IsValid(int value) {
    return CMsgPerfectWorldUserLookupResponse_EResultCode_IsValid(value);
  }
  static const EResultCode EResultCode_MIN =
    CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MIN;
  static const EResultCode EResultCode_MAX =
    CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MAX;
  static const int EResultCode_ARRAYSIZE =
    CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResultCode_descriptor() {
    return CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor();
  }
  static inline const ::std::string& EResultCode_Name(EResultCode value) {
    return CMsgPerfectWorldUserLookupResponse_EResultCode_Name(value);
  }
  static inline bool EResultCode_Parse(const ::std::string& name,
      EResultCode* value) {
    return CMsgPerfectWorldUserLookupResponse_EResultCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];
  bool has_result_code() const;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode result_code() const;
  void set_result_code(::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPerfectWorldUserLookupResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_code_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgMakeOffering final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgMakeOffering) */ {
 public:
  CMsgMakeOffering();
  virtual ~CMsgMakeOffering();

  CMsgMakeOffering(const CMsgMakeOffering& from);

  inline CMsgMakeOffering& operator=(const CMsgMakeOffering& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMakeOffering(CMsgMakeOffering&& from) noexcept
    : CMsgMakeOffering() {
    *this = ::std::move(from);
  }

  inline CMsgMakeOffering& operator=(CMsgMakeOffering&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgMakeOffering& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMakeOffering* internal_default_instance() {
    return reinterpret_cast<const CMsgMakeOffering*>(
               &_CMsgMakeOffering_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    246;

  void Swap(CMsgMakeOffering* other);
  friend void swap(CMsgMakeOffering& a, CMsgMakeOffering& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMakeOffering* New() const final {
    return CreateMaybeMessage<CMsgMakeOffering>(nullptr);
  }

  CMsgMakeOffering* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgMakeOffering>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgMakeOffering& from);
  void MergeFrom(const CMsgMakeOffering& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgMakeOffering* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgMakeOffering)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 item_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgRequestOfferings final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRequestOfferings) */ {
 public:
  CMsgRequestOfferings();
  virtual ~CMsgRequestOfferings();

  CMsgRequestOfferings(const CMsgRequestOfferings& from);

  inline CMsgRequestOfferings& operator=(const CMsgRequestOfferings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgRequestOfferings(CMsgRequestOfferings&& from) noexcept
    : CMsgRequestOfferings() {
    *this = ::std::move(from);
  }

  inline CMsgRequestOfferings& operator=(CMsgRequestOfferings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgRequestOfferings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgRequestOfferings* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestOfferings*>(
               &_CMsgRequestOfferings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    247;

  void Swap(CMsgRequestOfferings* other);
  friend void swap(CMsgRequestOfferings& a, CMsgRequestOfferings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgRequestOfferings* New() const final {
    return CreateMaybeMessage<CMsgRequestOfferings>(nullptr);
  }

  CMsgRequestOfferings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgRequestOfferings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgRequestOfferings& from);
  void MergeFrom(const CMsgRequestOfferings& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRequestOfferings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRequestOfferings)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgRequestOfferingsResponse_NewYearsOffering final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering) */ {
 public:
  CMsgRequestOfferingsResponse_NewYearsOffering();
  virtual ~CMsgRequestOfferingsResponse_NewYearsOffering();

  CMsgRequestOfferingsResponse_NewYearsOffering(const CMsgRequestOfferingsResponse_NewYearsOffering& from);

  inline CMsgRequestOfferingsResponse_NewYearsOffering& operator=(const CMsgRequestOfferingsResponse_NewYearsOffering& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgRequestOfferingsResponse_NewYearsOffering(CMsgRequestOfferingsResponse_NewYearsOffering&& from) noexcept
    : CMsgRequestOfferingsResponse_NewYearsOffering() {
    *this = ::std::move(from);
  }

  inline CMsgRequestOfferingsResponse_NewYearsOffering& operator=(CMsgRequestOfferingsResponse_NewYearsOffering&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgRequestOfferingsResponse_NewYearsOffering& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgRequestOfferingsResponse_NewYearsOffering* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestOfferingsResponse_NewYearsOffering*>(
               &_CMsgRequestOfferingsResponse_NewYearsOffering_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    248;

  void Swap(CMsgRequestOfferingsResponse_NewYearsOffering* other);
  friend void swap(CMsgRequestOfferingsResponse_NewYearsOffering& a, CMsgRequestOfferingsResponse_NewYearsOffering& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgRequestOfferingsResponse_NewYearsOffering* New() const final {
    return CreateMaybeMessage<CMsgRequestOfferingsResponse_NewYearsOffering>(nullptr);
  }

  CMsgRequestOfferingsResponse_NewYearsOffering* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgRequestOfferingsResponse_NewYearsOffering>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgRequestOfferingsResponse_NewYearsOffering& from);
  void MergeFrom(const CMsgRequestOfferingsResponse_NewYearsOffering& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRequestOfferingsResponse_NewYearsOffering* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 2;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint32 def_index_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgRequestOfferingsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRequestOfferingsResponse) */ {
 public:
  CMsgRequestOfferingsResponse();
  virtual ~CMsgRequestOfferingsResponse();

  CMsgRequestOfferingsResponse(const CMsgRequestOfferingsResponse& from);

  inline CMsgRequestOfferingsResponse& operator=(const CMsgRequestOfferingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgRequestOfferingsResponse(CMsgRequestOfferingsResponse&& from) noexcept
    : CMsgRequestOfferingsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgRequestOfferingsResponse& operator=(CMsgRequestOfferingsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgRequestOfferingsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgRequestOfferingsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestOfferingsResponse*>(
               &_CMsgRequestOfferingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    249;

  void Swap(CMsgRequestOfferingsResponse* other);
  friend void swap(CMsgRequestOfferingsResponse& a, CMsgRequestOfferingsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgRequestOfferingsResponse* New() const final {
    return CreateMaybeMessage<CMsgRequestOfferingsResponse>(nullptr);
  }

  CMsgRequestOfferingsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgRequestOfferingsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgRequestOfferingsResponse& from);
  void MergeFrom(const CMsgRequestOfferingsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgRequestOfferingsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgRequestOfferingsResponse_NewYearsOffering NewYearsOffering;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;
  int offerings_size() const;
  void clear_offerings();
  static const int kOfferingsFieldNumber = 1;
  ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering* mutable_offerings(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering >*
      mutable_offerings();
  const ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering& offerings(int index) const;
  ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering* add_offerings();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering >&
      offerings() const;

  // optional bool completed = 2;
  bool has_completed() const;
  void clear_completed();
  static const int kCompletedFieldNumber = 2;
  bool completed() const;
  void set_completed(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRequestOfferingsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering > offerings_;
  bool completed_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAPCBangTimedReward final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPCBangTimedReward) */ {
 public:
  CMsgDOTAPCBangTimedReward();
  virtual ~CMsgDOTAPCBangTimedReward();

  CMsgDOTAPCBangTimedReward(const CMsgDOTAPCBangTimedReward& from);

  inline CMsgDOTAPCBangTimedReward& operator=(const CMsgDOTAPCBangTimedReward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAPCBangTimedReward(CMsgDOTAPCBangTimedReward&& from) noexcept
    : CMsgDOTAPCBangTimedReward() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAPCBangTimedReward& operator=(CMsgDOTAPCBangTimedReward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAPCBangTimedReward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAPCBangTimedReward* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPCBangTimedReward*>(
               &_CMsgDOTAPCBangTimedReward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    250;

  void Swap(CMsgDOTAPCBangTimedReward* other);
  friend void swap(CMsgDOTAPCBangTimedReward& a, CMsgDOTAPCBangTimedReward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAPCBangTimedReward* New() const final {
    return CreateMaybeMessage<CMsgDOTAPCBangTimedReward>(nullptr);
  }

  CMsgDOTAPCBangTimedReward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAPCBangTimedReward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAPCBangTimedReward& from);
  void MergeFrom(const CMsgDOTAPCBangTimedReward& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAPCBangTimedReward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string persona = 1;
  bool has_persona() const;
  void clear_persona();
  static const int kPersonaFieldNumber = 1;
  const ::std::string& persona() const;
  void set_persona(const ::std::string& value);
  #if LANG_CXX11
  void set_persona(::std::string&& value);
  #endif
  void set_persona(const char* value);
  void set_persona(const char* value, size_t size);
  ::std::string* mutable_persona();
  ::std::string* release_persona();
  void set_allocated_persona(::std::string* persona);

  // optional string pcbangname = 3;
  bool has_pcbangname() const;
  void clear_pcbangname();
  static const int kPcbangnameFieldNumber = 3;
  const ::std::string& pcbangname() const;
  void set_pcbangname(const ::std::string& value);
  #if LANG_CXX11
  void set_pcbangname(::std::string&& value);
  #endif
  void set_pcbangname(const char* value);
  void set_pcbangname(const char* value, size_t size);
  ::std::string* mutable_pcbangname();
  ::std::string* release_pcbangname();
  void set_allocated_pcbangname(::std::string* pcbangname);

  // optional uint32 itemdef = 2;
  bool has_itemdef() const;
  void clear_itemdef();
  static const int kItemdefFieldNumber = 2;
  ::google::protobuf::uint32 itemdef() const;
  void set_itemdef(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPCBangTimedReward)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr persona_;
  ::google::protobuf::internal::ArenaStringPtr pcbangname_;
  ::google::protobuf::uint32 itemdef_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumInGamePredictionResults_PredictionResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult) */ {
 public:
  CMsgDOTACompendiumInGamePredictionResults_PredictionResult();
  virtual ~CMsgDOTACompendiumInGamePredictionResults_PredictionResult();

  CMsgDOTACompendiumInGamePredictionResults_PredictionResult(const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& from);

  inline CMsgDOTACompendiumInGamePredictionResults_PredictionResult& operator=(const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTACompendiumInGamePredictionResults_PredictionResult(CMsgDOTACompendiumInGamePredictionResults_PredictionResult&& from) noexcept
    : CMsgDOTACompendiumInGamePredictionResults_PredictionResult() {
    *this = ::std::move(from);
  }

  inline CMsgDOTACompendiumInGamePredictionResults_PredictionResult& operator=(CMsgDOTACompendiumInGamePredictionResults_PredictionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTACompendiumInGamePredictionResults_PredictionResult* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumInGamePredictionResults_PredictionResult*>(
               &_CMsgDOTACompendiumInGamePredictionResults_PredictionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    251;

  void Swap(CMsgDOTACompendiumInGamePredictionResults_PredictionResult* other);
  friend void swap(CMsgDOTACompendiumInGamePredictionResults_PredictionResult& a, CMsgDOTACompendiumInGamePredictionResults_PredictionResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumInGamePredictionResults_PredictionResult* New() const final {
    return CreateMaybeMessage<CMsgDOTACompendiumInGamePredictionResults_PredictionResult>(nullptr);
  }

  CMsgDOTACompendiumInGamePredictionResults_PredictionResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTACompendiumInGamePredictionResults_PredictionResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& from);
  void MergeFrom(const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTACompendiumInGamePredictionResults_PredictionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prediction_id = 1;
  bool has_prediction_id() const;
  void clear_prediction_id();
  static const int kPredictionIdFieldNumber = 1;
  ::google::protobuf::uint32 prediction_id() const;
  void set_prediction_id(::google::protobuf::uint32 value);

  // optional uint32 prediction_value = 2;
  bool has_prediction_value() const;
  void clear_prediction_value();
  static const int kPredictionValueFieldNumber = 2;
  ::google::protobuf::uint32 prediction_value() const;
  void set_prediction_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 prediction_id_;
  ::google::protobuf::uint32 prediction_value_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumInGamePredictionResults final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumInGamePredictionResults) */ {
 public:
  CMsgDOTACompendiumInGamePredictionResults();
  virtual ~CMsgDOTACompendiumInGamePredictionResults();

  CMsgDOTACompendiumInGamePredictionResults(const CMsgDOTACompendiumInGamePredictionResults& from);

  inline CMsgDOTACompendiumInGamePredictionResults& operator=(const CMsgDOTACompendiumInGamePredictionResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTACompendiumInGamePredictionResults(CMsgDOTACompendiumInGamePredictionResults&& from) noexcept
    : CMsgDOTACompendiumInGamePredictionResults() {
    *this = ::std::move(from);
  }

  inline CMsgDOTACompendiumInGamePredictionResults& operator=(CMsgDOTACompendiumInGamePredictionResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTACompendiumInGamePredictionResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTACompendiumInGamePredictionResults* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumInGamePredictionResults*>(
               &_CMsgDOTACompendiumInGamePredictionResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    252;

  void Swap(CMsgDOTACompendiumInGamePredictionResults* other);
  friend void swap(CMsgDOTACompendiumInGamePredictionResults& a, CMsgDOTACompendiumInGamePredictionResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumInGamePredictionResults* New() const final {
    return CreateMaybeMessage<CMsgDOTACompendiumInGamePredictionResults>(nullptr);
  }

  CMsgDOTACompendiumInGamePredictionResults* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTACompendiumInGamePredictionResults>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTACompendiumInGamePredictionResults& from);
  void MergeFrom(const CMsgDOTACompendiumInGamePredictionResults& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTACompendiumInGamePredictionResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTACompendiumInGamePredictionResults_PredictionResult PredictionResult;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult >*
      mutable_results();
  const ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult& results(int index) const;
  ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult* add_results();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult >&
      results() const;

  // optional uint32 league_id = 2;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 2;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional bool predictions_closed = 3;
  bool has_predictions_closed() const;
  void clear_predictions_closed();
  static const int kPredictionsClosedFieldNumber = 3;
  bool predictions_closed() const;
  void set_predictions_closed(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumInGamePredictionResults)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult > results_;
  ::google::protobuf::uint32 league_id_;
  bool predictions_closed_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSelectCompendiumInGamePrediction_Prediction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction) */ {
 public:
  CMsgClientToGCSelectCompendiumInGamePrediction_Prediction();
  virtual ~CMsgClientToGCSelectCompendiumInGamePrediction_Prediction();

  CMsgClientToGCSelectCompendiumInGamePrediction_Prediction(const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& from);

  inline CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& operator=(const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCSelectCompendiumInGamePrediction_Prediction(CMsgClientToGCSelectCompendiumInGamePrediction_Prediction&& from) noexcept
    : CMsgClientToGCSelectCompendiumInGamePrediction_Prediction() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& operator=(CMsgClientToGCSelectCompendiumInGamePrediction_Prediction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction*>(
               &_CMsgClientToGCSelectCompendiumInGamePrediction_Prediction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    253;

  void Swap(CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* other);
  friend void swap(CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& a, CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSelectCompendiumInGamePrediction_Prediction>(nullptr);
  }

  CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSelectCompendiumInGamePrediction_Prediction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& from);
  void MergeFrom(const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prediction_id = 1;
  bool has_prediction_id() const;
  void clear_prediction_id();
  static const int kPredictionIdFieldNumber = 1;
  ::google::protobuf::uint32 prediction_id() const;
  void set_prediction_id(::google::protobuf::uint32 value);

  // optional uint32 prediction_value = 2;
  bool has_prediction_value() const;
  void clear_prediction_value();
  static const int kPredictionValueFieldNumber = 2;
  ::google::protobuf::uint32 prediction_value() const;
  void set_prediction_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 prediction_id_;
  ::google::protobuf::uint32 prediction_value_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSelectCompendiumInGamePrediction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction) */ {
 public:
  CMsgClientToGCSelectCompendiumInGamePrediction();
  virtual ~CMsgClientToGCSelectCompendiumInGamePrediction();

  CMsgClientToGCSelectCompendiumInGamePrediction(const CMsgClientToGCSelectCompendiumInGamePrediction& from);

  inline CMsgClientToGCSelectCompendiumInGamePrediction& operator=(const CMsgClientToGCSelectCompendiumInGamePrediction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCSelectCompendiumInGamePrediction(CMsgClientToGCSelectCompendiumInGamePrediction&& from) noexcept
    : CMsgClientToGCSelectCompendiumInGamePrediction() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSelectCompendiumInGamePrediction& operator=(CMsgClientToGCSelectCompendiumInGamePrediction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCSelectCompendiumInGamePrediction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCSelectCompendiumInGamePrediction* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSelectCompendiumInGamePrediction*>(
               &_CMsgClientToGCSelectCompendiumInGamePrediction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    254;

  void Swap(CMsgClientToGCSelectCompendiumInGamePrediction* other);
  friend void swap(CMsgClientToGCSelectCompendiumInGamePrediction& a, CMsgClientToGCSelectCompendiumInGamePrediction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSelectCompendiumInGamePrediction* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSelectCompendiumInGamePrediction>(nullptr);
  }

  CMsgClientToGCSelectCompendiumInGamePrediction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSelectCompendiumInGamePrediction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCSelectCompendiumInGamePrediction& from);
  void MergeFrom(const CMsgClientToGCSelectCompendiumInGamePrediction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSelectCompendiumInGamePrediction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSelectCompendiumInGamePrediction_Prediction Prediction;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction predictions = 2;
  int predictions_size() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 2;
  ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* mutable_predictions(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction >*
      mutable_predictions();
  const ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& predictions(int index) const;
  ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* add_predictions();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction >&
      predictions() const;

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 league_id = 3;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 3;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction > predictions_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 league_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSelectCompendiumInGamePredictionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSelectCompendiumInGamePredictionResponse) */ {
 public:
  CMsgClientToGCSelectCompendiumInGamePredictionResponse();
  virtual ~CMsgClientToGCSelectCompendiumInGamePredictionResponse();

  CMsgClientToGCSelectCompendiumInGamePredictionResponse(const CMsgClientToGCSelectCompendiumInGamePredictionResponse& from);

  inline CMsgClientToGCSelectCompendiumInGamePredictionResponse& operator=(const CMsgClientToGCSelectCompendiumInGamePredictionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCSelectCompendiumInGamePredictionResponse(CMsgClientToGCSelectCompendiumInGamePredictionResponse&& from) noexcept
    : CMsgClientToGCSelectCompendiumInGamePredictionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSelectCompendiumInGamePredictionResponse& operator=(CMsgClientToGCSelectCompendiumInGamePredictionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCSelectCompendiumInGamePredictionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCSelectCompendiumInGamePredictionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSelectCompendiumInGamePredictionResponse*>(
               &_CMsgClientToGCSelectCompendiumInGamePredictionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    255;

  void Swap(CMsgClientToGCSelectCompendiumInGamePredictionResponse* other);
  friend void swap(CMsgClientToGCSelectCompendiumInGamePredictionResponse& a, CMsgClientToGCSelectCompendiumInGamePredictionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSelectCompendiumInGamePredictionResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSelectCompendiumInGamePredictionResponse>(nullptr);
  }

  CMsgClientToGCSelectCompendiumInGamePredictionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSelectCompendiumInGamePredictionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCSelectCompendiumInGamePredictionResponse& from);
  void MergeFrom(const CMsgClientToGCSelectCompendiumInGamePredictionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSelectCompendiumInGamePredictionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult EResult;
  static const EResult SUCCESS =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_SUCCESS;
  static const EResult INVALID_MATCH =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_INVALID_MATCH;
  static const EResult PREDICTIONS_ARE_CLOSED =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_PREDICTIONS_ARE_CLOSED;
  static const EResult OTHER_ERROR =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_OTHER_ERROR;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCSelectCompendiumInGamePredictionResponse.EResult result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult result() const;
  void set_result(::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSelectCompendiumInGamePredictionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCOpenPlayerCardPack final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCOpenPlayerCardPack) */ {
 public:
  CMsgClientToGCOpenPlayerCardPack();
  virtual ~CMsgClientToGCOpenPlayerCardPack();

  CMsgClientToGCOpenPlayerCardPack(const CMsgClientToGCOpenPlayerCardPack& from);

  inline CMsgClientToGCOpenPlayerCardPack& operator=(const CMsgClientToGCOpenPlayerCardPack& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCOpenPlayerCardPack(CMsgClientToGCOpenPlayerCardPack&& from) noexcept
    : CMsgClientToGCOpenPlayerCardPack() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCOpenPlayerCardPack& operator=(CMsgClientToGCOpenPlayerCardPack&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCOpenPlayerCardPack& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCOpenPlayerCardPack* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCOpenPlayerCardPack*>(
               &_CMsgClientToGCOpenPlayerCardPack_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    256;

  void Swap(CMsgClientToGCOpenPlayerCardPack* other);
  friend void swap(CMsgClientToGCOpenPlayerCardPack& a, CMsgClientToGCOpenPlayerCardPack& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCOpenPlayerCardPack* New() const final {
    return CreateMaybeMessage<CMsgClientToGCOpenPlayerCardPack>(nullptr);
  }

  CMsgClientToGCOpenPlayerCardPack* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCOpenPlayerCardPack>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCOpenPlayerCardPack& from);
  void MergeFrom(const CMsgClientToGCOpenPlayerCardPack& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCOpenPlayerCardPack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_card_pack_item_id = 1;
  bool has_player_card_pack_item_id() const;
  void clear_player_card_pack_item_id();
  static const int kPlayerCardPackItemIdFieldNumber = 1;
  ::google::protobuf::uint64 player_card_pack_item_id() const;
  void set_player_card_pack_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCOpenPlayerCardPack)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 player_card_pack_item_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCOpenPlayerCardPackResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse) */ {
 public:
  CMsgClientToGCOpenPlayerCardPackResponse();
  virtual ~CMsgClientToGCOpenPlayerCardPackResponse();

  CMsgClientToGCOpenPlayerCardPackResponse(const CMsgClientToGCOpenPlayerCardPackResponse& from);

  inline CMsgClientToGCOpenPlayerCardPackResponse& operator=(const CMsgClientToGCOpenPlayerCardPackResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCOpenPlayerCardPackResponse(CMsgClientToGCOpenPlayerCardPackResponse&& from) noexcept
    : CMsgClientToGCOpenPlayerCardPackResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCOpenPlayerCardPackResponse& operator=(CMsgClientToGCOpenPlayerCardPackResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCOpenPlayerCardPackResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCOpenPlayerCardPackResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCOpenPlayerCardPackResponse*>(
               &_CMsgClientToGCOpenPlayerCardPackResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    257;

  void Swap(CMsgClientToGCOpenPlayerCardPackResponse* other);
  friend void swap(CMsgClientToGCOpenPlayerCardPackResponse& a, CMsgClientToGCOpenPlayerCardPackResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCOpenPlayerCardPackResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCOpenPlayerCardPackResponse>(nullptr);
  }

  CMsgClientToGCOpenPlayerCardPackResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCOpenPlayerCardPackResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCOpenPlayerCardPackResponse& from);
  void MergeFrom(const CMsgClientToGCOpenPlayerCardPackResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCOpenPlayerCardPackResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCOpenPlayerCardPackResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_SUCCESS;
  static const Result ERROR_INTERNAL =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_INTERNAL;
  static const Result ERROR_FAILED_TO_FIND_PACK =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_TO_FIND_PACK;
  static const Result ERROR_ITEM_NOT_CARD_PACK =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_ITEM_NOT_CARD_PACK;
  static const Result ERROR_FAILED_CARD_CREATE =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_CARD_CREATE;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCOpenPlayerCardPackResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCOpenPlayerCardPackResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCOpenPlayerCardPackResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint64 player_card_item_ids = 2;
  int player_card_item_ids_size() const;
  void clear_player_card_item_ids();
  static const int kPlayerCardItemIdsFieldNumber = 2;
  ::google::protobuf::uint64 player_card_item_ids(int index) const;
  void set_player_card_item_ids(int index, ::google::protobuf::uint64 value);
  void add_player_card_item_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_card_item_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_card_item_ids();

  // optional .proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_card_item_ids_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecyclePlayerCard final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRecyclePlayerCard) */ {
 public:
  CMsgClientToGCRecyclePlayerCard();
  virtual ~CMsgClientToGCRecyclePlayerCard();

  CMsgClientToGCRecyclePlayerCard(const CMsgClientToGCRecyclePlayerCard& from);

  inline CMsgClientToGCRecyclePlayerCard& operator=(const CMsgClientToGCRecyclePlayerCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRecyclePlayerCard(CMsgClientToGCRecyclePlayerCard&& from) noexcept
    : CMsgClientToGCRecyclePlayerCard() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRecyclePlayerCard& operator=(CMsgClientToGCRecyclePlayerCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRecyclePlayerCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRecyclePlayerCard* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRecyclePlayerCard*>(
               &_CMsgClientToGCRecyclePlayerCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    258;

  void Swap(CMsgClientToGCRecyclePlayerCard* other);
  friend void swap(CMsgClientToGCRecyclePlayerCard& a, CMsgClientToGCRecyclePlayerCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRecyclePlayerCard* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRecyclePlayerCard>(nullptr);
  }

  CMsgClientToGCRecyclePlayerCard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRecyclePlayerCard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRecyclePlayerCard& from);
  void MergeFrom(const CMsgClientToGCRecyclePlayerCard& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRecyclePlayerCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 player_card_item_ids = 3;
  int player_card_item_ids_size() const;
  void clear_player_card_item_ids();
  static const int kPlayerCardItemIdsFieldNumber = 3;
  ::google::protobuf::uint64 player_card_item_ids(int index) const;
  void set_player_card_item_ids(int index, ::google::protobuf::uint64 value);
  void add_player_card_item_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_card_item_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_card_item_ids();

  // optional uint32 event_id = 2;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRecyclePlayerCard)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_card_item_ids_;
  ::google::protobuf::uint32 event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecyclePlayerCardResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRecyclePlayerCardResponse) */ {
 public:
  CMsgClientToGCRecyclePlayerCardResponse();
  virtual ~CMsgClientToGCRecyclePlayerCardResponse();

  CMsgClientToGCRecyclePlayerCardResponse(const CMsgClientToGCRecyclePlayerCardResponse& from);

  inline CMsgClientToGCRecyclePlayerCardResponse& operator=(const CMsgClientToGCRecyclePlayerCardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRecyclePlayerCardResponse(CMsgClientToGCRecyclePlayerCardResponse&& from) noexcept
    : CMsgClientToGCRecyclePlayerCardResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRecyclePlayerCardResponse& operator=(CMsgClientToGCRecyclePlayerCardResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRecyclePlayerCardResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRecyclePlayerCardResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRecyclePlayerCardResponse*>(
               &_CMsgClientToGCRecyclePlayerCardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    259;

  void Swap(CMsgClientToGCRecyclePlayerCardResponse* other);
  friend void swap(CMsgClientToGCRecyclePlayerCardResponse& a, CMsgClientToGCRecyclePlayerCardResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRecyclePlayerCardResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRecyclePlayerCardResponse>(nullptr);
  }

  CMsgClientToGCRecyclePlayerCardResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRecyclePlayerCardResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRecyclePlayerCardResponse& from);
  void MergeFrom(const CMsgClientToGCRecyclePlayerCardResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRecyclePlayerCardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRecyclePlayerCardResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCRecyclePlayerCardResponse_Result_SUCCESS;
  static const Result ERROR_INTERNAL =
    CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_INTERNAL;
  static const Result ERROR_FAILED_TO_FIND_PLAYER_CARD =
    CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_FAILED_TO_FIND_PLAYER_CARD;
  static const Result ERROR_ITEM_NOT_PLAYER_CARD =
    CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_ITEM_NOT_PLAYER_CARD;
  static const Result ERROR_FAILED_DUST_CARD_CREATE =
    CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_FAILED_DUST_CARD_CREATE;
  static const Result ERROR_CARD_LOCKED =
    CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_CARD_LOCKED;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCRecyclePlayerCardResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCRecyclePlayerCardResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCRecyclePlayerCardResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCRecyclePlayerCardResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 dust_amount = 2;
  bool has_dust_amount() const;
  void clear_dust_amount();
  static const int kDustAmountFieldNumber = 2;
  ::google::protobuf::uint32 dust_amount() const;
  void set_dust_amount(::google::protobuf::uint32 value);

  // optional .proto.dota.CMsgClientToGCRecyclePlayerCardResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRecyclePlayerCardResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 dust_amount_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreatePlayerCardPack final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCreatePlayerCardPack) */ {
 public:
  CMsgClientToGCCreatePlayerCardPack();
  virtual ~CMsgClientToGCCreatePlayerCardPack();

  CMsgClientToGCCreatePlayerCardPack(const CMsgClientToGCCreatePlayerCardPack& from);

  inline CMsgClientToGCCreatePlayerCardPack& operator=(const CMsgClientToGCCreatePlayerCardPack& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCreatePlayerCardPack(CMsgClientToGCCreatePlayerCardPack&& from) noexcept
    : CMsgClientToGCCreatePlayerCardPack() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCreatePlayerCardPack& operator=(CMsgClientToGCCreatePlayerCardPack&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCreatePlayerCardPack& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCreatePlayerCardPack* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreatePlayerCardPack*>(
               &_CMsgClientToGCCreatePlayerCardPack_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    260;

  void Swap(CMsgClientToGCCreatePlayerCardPack* other);
  friend void swap(CMsgClientToGCCreatePlayerCardPack& a, CMsgClientToGCCreatePlayerCardPack& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCreatePlayerCardPack* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCreatePlayerCardPack>(nullptr);
  }

  CMsgClientToGCCreatePlayerCardPack* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCreatePlayerCardPack>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCreatePlayerCardPack& from);
  void MergeFrom(const CMsgClientToGCCreatePlayerCardPack& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCreatePlayerCardPack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 card_dust_item_id = 1;
  bool has_card_dust_item_id() const;
  void clear_card_dust_item_id();
  static const int kCardDustItemIdFieldNumber = 1;
  ::google::protobuf::uint64 card_dust_item_id() const;
  void set_card_dust_item_id(::google::protobuf::uint64 value);

  // optional uint32 event_id = 2;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional bool premium_pack = 3;
  bool has_premium_pack() const;
  void clear_premium_pack();
  static const int kPremiumPackFieldNumber = 3;
  bool premium_pack() const;
  void set_premium_pack(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCreatePlayerCardPack)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 card_dust_item_id_;
  ::google::protobuf::uint32 event_id_;
  bool premium_pack_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreatePlayerCardPackResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCreatePlayerCardPackResponse) */ {
 public:
  CMsgClientToGCCreatePlayerCardPackResponse();
  virtual ~CMsgClientToGCCreatePlayerCardPackResponse();

  CMsgClientToGCCreatePlayerCardPackResponse(const CMsgClientToGCCreatePlayerCardPackResponse& from);

  inline CMsgClientToGCCreatePlayerCardPackResponse& operator=(const CMsgClientToGCCreatePlayerCardPackResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCreatePlayerCardPackResponse(CMsgClientToGCCreatePlayerCardPackResponse&& from) noexcept
    : CMsgClientToGCCreatePlayerCardPackResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCreatePlayerCardPackResponse& operator=(CMsgClientToGCCreatePlayerCardPackResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCreatePlayerCardPackResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCreatePlayerCardPackResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreatePlayerCardPackResponse*>(
               &_CMsgClientToGCCreatePlayerCardPackResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    261;

  void Swap(CMsgClientToGCCreatePlayerCardPackResponse* other);
  friend void swap(CMsgClientToGCCreatePlayerCardPackResponse& a, CMsgClientToGCCreatePlayerCardPackResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCreatePlayerCardPackResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCreatePlayerCardPackResponse>(nullptr);
  }

  CMsgClientToGCCreatePlayerCardPackResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCreatePlayerCardPackResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCreatePlayerCardPackResponse& from);
  void MergeFrom(const CMsgClientToGCCreatePlayerCardPackResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCreatePlayerCardPackResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCreatePlayerCardPackResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_SUCCESS;
  static const Result ERROR_INTERNAL =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_INTERNAL;
  static const Result ERROR_INSUFFICIENT_DUST =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_INSUFFICIENT_DUST;
  static const Result ERROR_ITEM_NOT_DUST_ITEM =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_ITEM_NOT_DUST_ITEM;
  static const Result ERROR_FAILED_CARD_PACK_CREATE =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_FAILED_CARD_PACK_CREATE;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCCreatePlayerCardPackResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCCreatePlayerCardPackResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCCreatePlayerCardPackResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCCreatePlayerCardPackResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCreatePlayerCardPackResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Questlines final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Questlines();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Questlines();

  CMsgGCToClientBattlePassRollup_International2016_Questlines(const CMsgGCToClientBattlePassRollup_International2016_Questlines& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Questlines& operator=(const CMsgGCToClientBattlePassRollup_International2016_Questlines& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_International2016_Questlines(CMsgGCToClientBattlePassRollup_International2016_Questlines&& from) noexcept
    : CMsgGCToClientBattlePassRollup_International2016_Questlines() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_International2016_Questlines& operator=(CMsgGCToClientBattlePassRollup_International2016_Questlines&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_International2016_Questlines& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_International2016_Questlines* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_Questlines*>(
               &_CMsgGCToClientBattlePassRollup_International2016_Questlines_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    262;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Questlines* other);
  friend void swap(CMsgGCToClientBattlePassRollup_International2016_Questlines& a, CMsgGCToClientBattlePassRollup_International2016_Questlines& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_Questlines* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_Questlines>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_International2016_Questlines* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_Questlines>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Questlines& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Questlines& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_Questlines* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 onestar = 2;
  bool has_onestar() const;
  void clear_onestar();
  static const int kOnestarFieldNumber = 2;
  ::google::protobuf::uint32 onestar() const;
  void set_onestar(::google::protobuf::uint32 value);

  // optional uint32 twostar = 3;
  bool has_twostar() const;
  void clear_twostar();
  static const int kTwostarFieldNumber = 3;
  ::google::protobuf::uint32 twostar() const;
  void set_twostar(::google::protobuf::uint32 value);

  // optional uint32 threestar = 4;
  bool has_threestar() const;
  void clear_threestar();
  static const int kThreestarFieldNumber = 4;
  ::google::protobuf::uint32 threestar() const;
  void set_threestar(::google::protobuf::uint32 value);

  // optional uint32 total = 5;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 5;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 onestar_;
  ::google::protobuf::uint32 twostar_;
  ::google::protobuf::uint32 threestar_;
  ::google::protobuf::uint32 total_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Wagering final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Wagering();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Wagering();

  CMsgGCToClientBattlePassRollup_International2016_Wagering(const CMsgGCToClientBattlePassRollup_International2016_Wagering& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Wagering& operator=(const CMsgGCToClientBattlePassRollup_International2016_Wagering& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_International2016_Wagering(CMsgGCToClientBattlePassRollup_International2016_Wagering&& from) noexcept
    : CMsgGCToClientBattlePassRollup_International2016_Wagering() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_International2016_Wagering& operator=(CMsgGCToClientBattlePassRollup_International2016_Wagering&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_International2016_Wagering& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_International2016_Wagering* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_Wagering*>(
               &_CMsgGCToClientBattlePassRollup_International2016_Wagering_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    263;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Wagering* other);
  friend void swap(CMsgGCToClientBattlePassRollup_International2016_Wagering& a, CMsgGCToClientBattlePassRollup_International2016_Wagering& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_Wagering* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_Wagering>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_International2016_Wagering* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_Wagering>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Wagering& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Wagering& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_Wagering* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 total_wagered = 1;
  bool has_total_wagered() const;
  void clear_total_wagered();
  static const int kTotalWageredFieldNumber = 1;
  ::google::protobuf::uint32 total_wagered() const;
  void set_total_wagered(::google::protobuf::uint32 value);

  // optional uint32 total_won = 2;
  bool has_total_won() const;
  void clear_total_won();
  static const int kTotalWonFieldNumber = 2;
  ::google::protobuf::uint32 total_won() const;
  void set_total_won(::google::protobuf::uint32 value);

  // optional uint32 average_won = 3;
  bool has_average_won() const;
  void clear_average_won();
  static const int kAverageWonFieldNumber = 3;
  ::google::protobuf::uint32 average_won() const;
  void set_average_won(::google::protobuf::uint32 value);

  // optional uint32 success_rate = 4;
  bool has_success_rate() const;
  void clear_success_rate();
  static const int kSuccessRateFieldNumber = 4;
  ::google::protobuf::uint32 success_rate() const;
  void set_success_rate(::google::protobuf::uint32 value);

  // optional uint32 total_tips = 5;
  bool has_total_tips() const;
  void clear_total_tips();
  static const int kTotalTipsFieldNumber = 5;
  ::google::protobuf::uint32 total_tips() const;
  void set_total_tips(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 total_wagered_;
  ::google::protobuf::uint32 total_won_;
  ::google::protobuf::uint32 average_won_;
  ::google::protobuf::uint32 success_rate_;
  ::google::protobuf::uint32 total_tips_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Achievements final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Achievements();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Achievements();

  CMsgGCToClientBattlePassRollup_International2016_Achievements(const CMsgGCToClientBattlePassRollup_International2016_Achievements& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Achievements& operator=(const CMsgGCToClientBattlePassRollup_International2016_Achievements& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_International2016_Achievements(CMsgGCToClientBattlePassRollup_International2016_Achievements&& from) noexcept
    : CMsgGCToClientBattlePassRollup_International2016_Achievements() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_International2016_Achievements& operator=(CMsgGCToClientBattlePassRollup_International2016_Achievements&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_International2016_Achievements& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_International2016_Achievements* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_Achievements*>(
               &_CMsgGCToClientBattlePassRollup_International2016_Achievements_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    264;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Achievements* other);
  friend void swap(CMsgGCToClientBattlePassRollup_International2016_Achievements& a, CMsgGCToClientBattlePassRollup_International2016_Achievements& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_Achievements* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_Achievements>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_International2016_Achievements* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_Achievements>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Achievements& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Achievements& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_Achievements* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 completed = 1;
  bool has_completed() const;
  void clear_completed();
  static const int kCompletedFieldNumber = 1;
  ::google::protobuf::uint32 completed() const;
  void set_completed(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 completed_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_BattleCup final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_BattleCup();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_BattleCup();

  CMsgGCToClientBattlePassRollup_International2016_BattleCup(const CMsgGCToClientBattlePassRollup_International2016_BattleCup& from);

  inline CMsgGCToClientBattlePassRollup_International2016_BattleCup& operator=(const CMsgGCToClientBattlePassRollup_International2016_BattleCup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_International2016_BattleCup(CMsgGCToClientBattlePassRollup_International2016_BattleCup&& from) noexcept
    : CMsgGCToClientBattlePassRollup_International2016_BattleCup() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_International2016_BattleCup& operator=(CMsgGCToClientBattlePassRollup_International2016_BattleCup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_International2016_BattleCup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_International2016_BattleCup* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_BattleCup*>(
               &_CMsgGCToClientBattlePassRollup_International2016_BattleCup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    265;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_BattleCup* other);
  friend void swap(CMsgGCToClientBattlePassRollup_International2016_BattleCup& a, CMsgGCToClientBattlePassRollup_International2016_BattleCup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_BattleCup* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_BattleCup>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_International2016_BattleCup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_BattleCup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_BattleCup& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_BattleCup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_BattleCup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 wins = 1;
  bool has_wins() const;
  void clear_wins();
  static const int kWinsFieldNumber = 1;
  ::google::protobuf::uint32 wins() const;
  void set_wins(::google::protobuf::uint32 value);

  // optional uint32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 score_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Predictions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Predictions();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Predictions();

  CMsgGCToClientBattlePassRollup_International2016_Predictions(const CMsgGCToClientBattlePassRollup_International2016_Predictions& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Predictions& operator=(const CMsgGCToClientBattlePassRollup_International2016_Predictions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_International2016_Predictions(CMsgGCToClientBattlePassRollup_International2016_Predictions&& from) noexcept
    : CMsgGCToClientBattlePassRollup_International2016_Predictions() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_International2016_Predictions& operator=(CMsgGCToClientBattlePassRollup_International2016_Predictions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_International2016_Predictions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_International2016_Predictions* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_Predictions*>(
               &_CMsgGCToClientBattlePassRollup_International2016_Predictions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    266;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Predictions* other);
  friend void swap(CMsgGCToClientBattlePassRollup_International2016_Predictions& a, CMsgGCToClientBattlePassRollup_International2016_Predictions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_Predictions* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_Predictions>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_International2016_Predictions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_Predictions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Predictions& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Predictions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_Predictions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Bracket final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Bracket();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Bracket();

  CMsgGCToClientBattlePassRollup_International2016_Bracket(const CMsgGCToClientBattlePassRollup_International2016_Bracket& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Bracket& operator=(const CMsgGCToClientBattlePassRollup_International2016_Bracket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_International2016_Bracket(CMsgGCToClientBattlePassRollup_International2016_Bracket&& from) noexcept
    : CMsgGCToClientBattlePassRollup_International2016_Bracket() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_International2016_Bracket& operator=(CMsgGCToClientBattlePassRollup_International2016_Bracket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_International2016_Bracket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_International2016_Bracket* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_Bracket*>(
               &_CMsgGCToClientBattlePassRollup_International2016_Bracket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    267;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Bracket* other);
  friend void swap(CMsgGCToClientBattlePassRollup_International2016_Bracket& a, CMsgGCToClientBattlePassRollup_International2016_Bracket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_Bracket* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_Bracket>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_International2016_Bracket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_Bracket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Bracket& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Bracket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_Bracket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 points = 2;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 2;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_PlayerCard final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_PlayerCard();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_PlayerCard();

  CMsgGCToClientBattlePassRollup_International2016_PlayerCard(const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& from);

  inline CMsgGCToClientBattlePassRollup_International2016_PlayerCard& operator=(const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_International2016_PlayerCard(CMsgGCToClientBattlePassRollup_International2016_PlayerCard&& from) noexcept
    : CMsgGCToClientBattlePassRollup_International2016_PlayerCard() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_International2016_PlayerCard& operator=(CMsgGCToClientBattlePassRollup_International2016_PlayerCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_International2016_PlayerCard* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_PlayerCard*>(
               &_CMsgGCToClientBattlePassRollup_International2016_PlayerCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    268;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_PlayerCard* other);
  friend void swap(CMsgGCToClientBattlePassRollup_International2016_PlayerCard& a, CMsgGCToClientBattlePassRollup_International2016_PlayerCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_PlayerCard* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_PlayerCard>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_International2016_PlayerCard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_PlayerCard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_PlayerCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 quality = 2;
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 2;
  ::google::protobuf::uint32 quality() const;
  void set_quality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 quality_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge();

  CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge(const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& from);

  inline CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& operator=(const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge(CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge&& from) noexcept
    : CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& operator=(CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge*>(
               &_CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    269;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* other);
  friend void swap(CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& a, CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float total_score = 1;
  bool has_total_score() const;
  void clear_total_score();
  static const int kTotalScoreFieldNumber = 1;
  float total_score() const;
  void set_total_score(float value);

  // optional float percentile = 2;
  bool has_percentile() const;
  void clear_percentile();
  static const int kPercentileFieldNumber = 2;
  float percentile() const;
  void set_percentile(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float total_score_;
  float percentile_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016();
  virtual ~CMsgGCToClientBattlePassRollup_International2016();

  CMsgGCToClientBattlePassRollup_International2016(const CMsgGCToClientBattlePassRollup_International2016& from);

  inline CMsgGCToClientBattlePassRollup_International2016& operator=(const CMsgGCToClientBattlePassRollup_International2016& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_International2016(CMsgGCToClientBattlePassRollup_International2016&& from) noexcept
    : CMsgGCToClientBattlePassRollup_International2016() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_International2016& operator=(CMsgGCToClientBattlePassRollup_International2016&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_International2016& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_International2016* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016*>(
               &_CMsgGCToClientBattlePassRollup_International2016_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    270;

  void Swap(CMsgGCToClientBattlePassRollup_International2016* other);
  friend void swap(CMsgGCToClientBattlePassRollup_International2016& a, CMsgGCToClientBattlePassRollup_International2016& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_International2016* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_International2016>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientBattlePassRollup_International2016_Questlines Questlines;
  typedef CMsgGCToClientBattlePassRollup_International2016_Wagering Wagering;
  typedef CMsgGCToClientBattlePassRollup_International2016_Achievements Achievements;
  typedef CMsgGCToClientBattlePassRollup_International2016_BattleCup BattleCup;
  typedef CMsgGCToClientBattlePassRollup_International2016_Predictions Predictions;
  typedef CMsgGCToClientBattlePassRollup_International2016_Bracket Bracket;
  typedef CMsgGCToClientBattlePassRollup_International2016_PlayerCard PlayerCard;
  typedef CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge FantasyChallenge;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines questlines = 2;
  int questlines_size() const;
  void clear_questlines();
  static const int kQuestlinesFieldNumber = 2;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines* mutable_questlines(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines >*
      mutable_questlines();
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines& questlines(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines* add_questlines();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines >&
      questlines() const;

  // repeated .proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard player_cards = 8;
  int player_cards_size() const;
  void clear_player_cards();
  static const int kPlayerCardsFieldNumber = 8;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard* mutable_player_cards(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard >*
      mutable_player_cards();
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard& player_cards(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard* add_player_cards();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard >&
      player_cards() const;

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering wagering = 3;
  bool has_wagering() const;
  void clear_wagering();
  static const int kWageringFieldNumber = 3;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering& wagering() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* release_wagering();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* mutable_wagering();
  void set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* wagering);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements achievements = 4;
  bool has_achievements() const;
  void clear_achievements();
  static const int kAchievementsFieldNumber = 4;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements& achievements() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* release_achievements();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* mutable_achievements();
  void set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* achievements);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup battle_cup = 5;
  bool has_battle_cup() const;
  void clear_battle_cup();
  static const int kBattleCupFieldNumber = 5;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup& battle_cup() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* release_battle_cup();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* mutable_battle_cup();
  void set_allocated_battle_cup(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* battle_cup);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions predictions = 6;
  bool has_predictions() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 6;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions& predictions() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* release_predictions();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* mutable_predictions();
  void set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* predictions);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket bracket = 7;
  bool has_bracket() const;
  void clear_bracket();
  static const int kBracketFieldNumber = 7;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket& bracket() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* release_bracket();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* mutable_bracket();
  void set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* bracket);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge fantasy_challenge = 9;
  bool has_fantasy_challenge() const;
  void clear_fantasy_challenge();
  static const int kFantasyChallengeFieldNumber = 9;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& fantasy_challenge() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* release_fantasy_challenge();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* mutable_fantasy_challenge();
  void set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* fantasy_challenge);

  // optional uint32 battle_pass_level = 1;
  bool has_battle_pass_level() const;
  void clear_battle_pass_level();
  static const int kBattlePassLevelFieldNumber = 1;
  ::google::protobuf::uint32 battle_pass_level() const;
  void set_battle_pass_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines > questlines_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard > player_cards_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* wagering_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* achievements_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* battle_cup_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* predictions_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* bracket_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* fantasy_challenge_;
  ::google::protobuf::uint32 battle_pass_level_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_Questlines final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_Questlines();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_Questlines();

  CMsgGCToClientBattlePassRollup_Fall2016_Questlines(const CMsgGCToClientBattlePassRollup_Fall2016_Questlines& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_Questlines& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_Questlines& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Fall2016_Questlines(CMsgGCToClientBattlePassRollup_Fall2016_Questlines&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Fall2016_Questlines() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Fall2016_Questlines& operator=(CMsgGCToClientBattlePassRollup_Fall2016_Questlines&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Fall2016_Questlines& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Fall2016_Questlines* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_Questlines*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_Questlines_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    271;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_Questlines* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Fall2016_Questlines& a, CMsgGCToClientBattlePassRollup_Fall2016_Questlines& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_Questlines* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_Questlines>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Fall2016_Questlines* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_Questlines>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Questlines& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Questlines& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_Questlines* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 onestar = 2;
  bool has_onestar() const;
  void clear_onestar();
  static const int kOnestarFieldNumber = 2;
  ::google::protobuf::uint32 onestar() const;
  void set_onestar(::google::protobuf::uint32 value);

  // optional uint32 twostar = 3;
  bool has_twostar() const;
  void clear_twostar();
  static const int kTwostarFieldNumber = 3;
  ::google::protobuf::uint32 twostar() const;
  void set_twostar(::google::protobuf::uint32 value);

  // optional uint32 threestar = 4;
  bool has_threestar() const;
  void clear_threestar();
  static const int kThreestarFieldNumber = 4;
  ::google::protobuf::uint32 threestar() const;
  void set_threestar(::google::protobuf::uint32 value);

  // optional uint32 total = 5;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 5;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 onestar_;
  ::google::protobuf::uint32 twostar_;
  ::google::protobuf::uint32 threestar_;
  ::google::protobuf::uint32 total_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_Wagering final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_Wagering();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_Wagering();

  CMsgGCToClientBattlePassRollup_Fall2016_Wagering(const CMsgGCToClientBattlePassRollup_Fall2016_Wagering& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_Wagering& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_Wagering& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Fall2016_Wagering(CMsgGCToClientBattlePassRollup_Fall2016_Wagering&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Fall2016_Wagering() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Fall2016_Wagering& operator=(CMsgGCToClientBattlePassRollup_Fall2016_Wagering&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Fall2016_Wagering& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Fall2016_Wagering* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_Wagering*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_Wagering_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    272;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_Wagering* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Fall2016_Wagering& a, CMsgGCToClientBattlePassRollup_Fall2016_Wagering& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_Wagering* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_Wagering>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Fall2016_Wagering* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_Wagering>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Wagering& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Wagering& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_Wagering* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 total_wagered = 1;
  bool has_total_wagered() const;
  void clear_total_wagered();
  static const int kTotalWageredFieldNumber = 1;
  ::google::protobuf::uint32 total_wagered() const;
  void set_total_wagered(::google::protobuf::uint32 value);

  // optional uint32 total_won = 2;
  bool has_total_won() const;
  void clear_total_won();
  static const int kTotalWonFieldNumber = 2;
  ::google::protobuf::uint32 total_won() const;
  void set_total_won(::google::protobuf::uint32 value);

  // optional uint32 average_won = 3;
  bool has_average_won() const;
  void clear_average_won();
  static const int kAverageWonFieldNumber = 3;
  ::google::protobuf::uint32 average_won() const;
  void set_average_won(::google::protobuf::uint32 value);

  // optional uint32 success_rate = 4;
  bool has_success_rate() const;
  void clear_success_rate();
  static const int kSuccessRateFieldNumber = 4;
  ::google::protobuf::uint32 success_rate() const;
  void set_success_rate(::google::protobuf::uint32 value);

  // optional uint32 total_tips = 5;
  bool has_total_tips() const;
  void clear_total_tips();
  static const int kTotalTipsFieldNumber = 5;
  ::google::protobuf::uint32 total_tips() const;
  void set_total_tips(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 total_wagered_;
  ::google::protobuf::uint32 total_won_;
  ::google::protobuf::uint32 average_won_;
  ::google::protobuf::uint32 success_rate_;
  ::google::protobuf::uint32 total_tips_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_Achievements final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_Achievements();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_Achievements();

  CMsgGCToClientBattlePassRollup_Fall2016_Achievements(const CMsgGCToClientBattlePassRollup_Fall2016_Achievements& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_Achievements& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_Achievements& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Fall2016_Achievements(CMsgGCToClientBattlePassRollup_Fall2016_Achievements&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Fall2016_Achievements() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Fall2016_Achievements& operator=(CMsgGCToClientBattlePassRollup_Fall2016_Achievements&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Fall2016_Achievements& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Fall2016_Achievements* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_Achievements*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_Achievements_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    273;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_Achievements* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Fall2016_Achievements& a, CMsgGCToClientBattlePassRollup_Fall2016_Achievements& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_Achievements* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_Achievements>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Fall2016_Achievements* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_Achievements>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Achievements& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Achievements& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_Achievements* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 completed = 1;
  bool has_completed() const;
  void clear_completed();
  static const int kCompletedFieldNumber = 1;
  ::google::protobuf::uint32 completed() const;
  void set_completed(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 completed_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_BattleCup final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_BattleCup();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_BattleCup();

  CMsgGCToClientBattlePassRollup_Fall2016_BattleCup(const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Fall2016_BattleCup(CMsgGCToClientBattlePassRollup_Fall2016_BattleCup&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Fall2016_BattleCup() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& operator=(CMsgGCToClientBattlePassRollup_Fall2016_BattleCup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_BattleCup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    274;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& a, CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_BattleCup>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_BattleCup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 wins = 1;
  bool has_wins() const;
  void clear_wins();
  static const int kWinsFieldNumber = 1;
  ::google::protobuf::uint32 wins() const;
  void set_wins(::google::protobuf::uint32 value);

  // optional uint32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 score_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_Predictions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_Predictions();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_Predictions();

  CMsgGCToClientBattlePassRollup_Fall2016_Predictions(const CMsgGCToClientBattlePassRollup_Fall2016_Predictions& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_Predictions& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_Predictions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Fall2016_Predictions(CMsgGCToClientBattlePassRollup_Fall2016_Predictions&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Fall2016_Predictions() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Fall2016_Predictions& operator=(CMsgGCToClientBattlePassRollup_Fall2016_Predictions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Fall2016_Predictions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Fall2016_Predictions* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_Predictions*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_Predictions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    275;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_Predictions* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Fall2016_Predictions& a, CMsgGCToClientBattlePassRollup_Fall2016_Predictions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_Predictions* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_Predictions>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Fall2016_Predictions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_Predictions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Predictions& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Predictions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_Predictions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_Bracket final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_Bracket();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_Bracket();

  CMsgGCToClientBattlePassRollup_Fall2016_Bracket(const CMsgGCToClientBattlePassRollup_Fall2016_Bracket& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_Bracket& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_Bracket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Fall2016_Bracket(CMsgGCToClientBattlePassRollup_Fall2016_Bracket&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Fall2016_Bracket() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Fall2016_Bracket& operator=(CMsgGCToClientBattlePassRollup_Fall2016_Bracket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Fall2016_Bracket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Fall2016_Bracket* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_Bracket*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_Bracket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    276;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_Bracket* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Fall2016_Bracket& a, CMsgGCToClientBattlePassRollup_Fall2016_Bracket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_Bracket* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_Bracket>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Fall2016_Bracket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_Bracket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Bracket& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Bracket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_Bracket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 points = 2;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 2;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard();

  CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard(const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard(CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& operator=(CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    277;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& a, CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 quality = 2;
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 2;
  ::google::protobuf::uint32 quality() const;
  void set_quality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 quality_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge();

  CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge(const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge(CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& operator=(CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    278;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& a, CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float total_score = 1;
  bool has_total_score() const;
  void clear_total_score();
  static const int kTotalScoreFieldNumber = 1;
  float total_score() const;
  void set_total_score(float value);

  // optional float percentile = 2;
  bool has_percentile() const;
  void clear_percentile();
  static const int kPercentileFieldNumber = 2;
  float percentile() const;
  void set_percentile(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float total_score_;
  float percentile_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016();

  CMsgGCToClientBattlePassRollup_Fall2016(const CMsgGCToClientBattlePassRollup_Fall2016& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016& operator=(const CMsgGCToClientBattlePassRollup_Fall2016& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Fall2016(CMsgGCToClientBattlePassRollup_Fall2016&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Fall2016() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Fall2016& operator=(CMsgGCToClientBattlePassRollup_Fall2016&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Fall2016& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Fall2016* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    279;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Fall2016& a, CMsgGCToClientBattlePassRollup_Fall2016& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Fall2016* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Fall2016>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientBattlePassRollup_Fall2016_Questlines Questlines;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_Wagering Wagering;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_Achievements Achievements;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_BattleCup BattleCup;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_Predictions Predictions;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_Bracket Bracket;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard PlayerCard;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge FantasyChallenge;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines questlines = 2;
  int questlines_size() const;
  void clear_questlines();
  static const int kQuestlinesFieldNumber = 2;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines* mutable_questlines(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines >*
      mutable_questlines();
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines& questlines(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines* add_questlines();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines >&
      questlines() const;

  // repeated .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard player_cards = 8;
  int player_cards_size() const;
  void clear_player_cards();
  static const int kPlayerCardsFieldNumber = 8;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* mutable_player_cards(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard >*
      mutable_player_cards();
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& player_cards(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* add_player_cards();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard >&
      player_cards() const;

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering wagering = 3;
  bool has_wagering() const;
  void clear_wagering();
  static const int kWageringFieldNumber = 3;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering& wagering() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* release_wagering();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* mutable_wagering();
  void set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* wagering);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements achievements = 4;
  bool has_achievements() const;
  void clear_achievements();
  static const int kAchievementsFieldNumber = 4;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements& achievements() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* release_achievements();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* mutable_achievements();
  void set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* achievements);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup battle_cup = 5;
  bool has_battle_cup() const;
  void clear_battle_cup();
  static const int kBattleCupFieldNumber = 5;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& battle_cup() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* release_battle_cup();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* mutable_battle_cup();
  void set_allocated_battle_cup(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* battle_cup);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions predictions = 6;
  bool has_predictions() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 6;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions& predictions() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* release_predictions();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* mutable_predictions();
  void set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* predictions);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket bracket = 7;
  bool has_bracket() const;
  void clear_bracket();
  static const int kBracketFieldNumber = 7;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket& bracket() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* release_bracket();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* mutable_bracket();
  void set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* bracket);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge fantasy_challenge = 9;
  bool has_fantasy_challenge() const;
  void clear_fantasy_challenge();
  static const int kFantasyChallengeFieldNumber = 9;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& fantasy_challenge() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* release_fantasy_challenge();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* mutable_fantasy_challenge();
  void set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* fantasy_challenge);

  // optional uint32 battle_pass_level = 1;
  bool has_battle_pass_level() const;
  void clear_battle_pass_level();
  static const int kBattlePassLevelFieldNumber = 1;
  ::google::protobuf::uint32 battle_pass_level() const;
  void set_battle_pass_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines > questlines_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard > player_cards_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* wagering_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* achievements_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* battle_cup_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* predictions_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* bracket_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* fantasy_challenge_;
  ::google::protobuf::uint32 battle_pass_level_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Winter2017_Questlines final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines) */ {
 public:
  CMsgGCToClientBattlePassRollup_Winter2017_Questlines();
  virtual ~CMsgGCToClientBattlePassRollup_Winter2017_Questlines();

  CMsgGCToClientBattlePassRollup_Winter2017_Questlines(const CMsgGCToClientBattlePassRollup_Winter2017_Questlines& from);

  inline CMsgGCToClientBattlePassRollup_Winter2017_Questlines& operator=(const CMsgGCToClientBattlePassRollup_Winter2017_Questlines& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Winter2017_Questlines(CMsgGCToClientBattlePassRollup_Winter2017_Questlines&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Winter2017_Questlines() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Winter2017_Questlines& operator=(CMsgGCToClientBattlePassRollup_Winter2017_Questlines&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Winter2017_Questlines& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Winter2017_Questlines* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Winter2017_Questlines*>(
               &_CMsgGCToClientBattlePassRollup_Winter2017_Questlines_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    280;

  void Swap(CMsgGCToClientBattlePassRollup_Winter2017_Questlines* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Winter2017_Questlines& a, CMsgGCToClientBattlePassRollup_Winter2017_Questlines& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Winter2017_Questlines* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_Questlines>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Winter2017_Questlines* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_Questlines>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Winter2017_Questlines& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Winter2017_Questlines& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Winter2017_Questlines* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 onestar = 2;
  bool has_onestar() const;
  void clear_onestar();
  static const int kOnestarFieldNumber = 2;
  ::google::protobuf::uint32 onestar() const;
  void set_onestar(::google::protobuf::uint32 value);

  // optional uint32 twostar = 3;
  bool has_twostar() const;
  void clear_twostar();
  static const int kTwostarFieldNumber = 3;
  ::google::protobuf::uint32 twostar() const;
  void set_twostar(::google::protobuf::uint32 value);

  // optional uint32 threestar = 4;
  bool has_threestar() const;
  void clear_threestar();
  static const int kThreestarFieldNumber = 4;
  ::google::protobuf::uint32 threestar() const;
  void set_threestar(::google::protobuf::uint32 value);

  // optional uint32 total = 5;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 5;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 onestar_;
  ::google::protobuf::uint32 twostar_;
  ::google::protobuf::uint32 threestar_;
  ::google::protobuf::uint32 total_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Winter2017_Wagering final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering) */ {
 public:
  CMsgGCToClientBattlePassRollup_Winter2017_Wagering();
  virtual ~CMsgGCToClientBattlePassRollup_Winter2017_Wagering();

  CMsgGCToClientBattlePassRollup_Winter2017_Wagering(const CMsgGCToClientBattlePassRollup_Winter2017_Wagering& from);

  inline CMsgGCToClientBattlePassRollup_Winter2017_Wagering& operator=(const CMsgGCToClientBattlePassRollup_Winter2017_Wagering& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Winter2017_Wagering(CMsgGCToClientBattlePassRollup_Winter2017_Wagering&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Winter2017_Wagering() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Winter2017_Wagering& operator=(CMsgGCToClientBattlePassRollup_Winter2017_Wagering&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Winter2017_Wagering& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Winter2017_Wagering* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Winter2017_Wagering*>(
               &_CMsgGCToClientBattlePassRollup_Winter2017_Wagering_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    281;

  void Swap(CMsgGCToClientBattlePassRollup_Winter2017_Wagering* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Winter2017_Wagering& a, CMsgGCToClientBattlePassRollup_Winter2017_Wagering& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Winter2017_Wagering* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_Wagering>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Winter2017_Wagering* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_Wagering>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Winter2017_Wagering& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Winter2017_Wagering& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Winter2017_Wagering* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 total_wagered = 1;
  bool has_total_wagered() const;
  void clear_total_wagered();
  static const int kTotalWageredFieldNumber = 1;
  ::google::protobuf::uint32 total_wagered() const;
  void set_total_wagered(::google::protobuf::uint32 value);

  // optional uint32 total_won = 2;
  bool has_total_won() const;
  void clear_total_won();
  static const int kTotalWonFieldNumber = 2;
  ::google::protobuf::uint32 total_won() const;
  void set_total_won(::google::protobuf::uint32 value);

  // optional uint32 average_won = 3;
  bool has_average_won() const;
  void clear_average_won();
  static const int kAverageWonFieldNumber = 3;
  ::google::protobuf::uint32 average_won() const;
  void set_average_won(::google::protobuf::uint32 value);

  // optional uint32 success_rate = 4;
  bool has_success_rate() const;
  void clear_success_rate();
  static const int kSuccessRateFieldNumber = 4;
  ::google::protobuf::uint32 success_rate() const;
  void set_success_rate(::google::protobuf::uint32 value);

  // optional uint32 total_tips = 5;
  bool has_total_tips() const;
  void clear_total_tips();
  static const int kTotalTipsFieldNumber = 5;
  ::google::protobuf::uint32 total_tips() const;
  void set_total_tips(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 total_wagered_;
  ::google::protobuf::uint32 total_won_;
  ::google::protobuf::uint32 average_won_;
  ::google::protobuf::uint32 success_rate_;
  ::google::protobuf::uint32 total_tips_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Winter2017_Achievements final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Achievements) */ {
 public:
  CMsgGCToClientBattlePassRollup_Winter2017_Achievements();
  virtual ~CMsgGCToClientBattlePassRollup_Winter2017_Achievements();

  CMsgGCToClientBattlePassRollup_Winter2017_Achievements(const CMsgGCToClientBattlePassRollup_Winter2017_Achievements& from);

  inline CMsgGCToClientBattlePassRollup_Winter2017_Achievements& operator=(const CMsgGCToClientBattlePassRollup_Winter2017_Achievements& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Winter2017_Achievements(CMsgGCToClientBattlePassRollup_Winter2017_Achievements&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Winter2017_Achievements() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Winter2017_Achievements& operator=(CMsgGCToClientBattlePassRollup_Winter2017_Achievements&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Winter2017_Achievements& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Winter2017_Achievements* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Winter2017_Achievements*>(
               &_CMsgGCToClientBattlePassRollup_Winter2017_Achievements_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    282;

  void Swap(CMsgGCToClientBattlePassRollup_Winter2017_Achievements* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Winter2017_Achievements& a, CMsgGCToClientBattlePassRollup_Winter2017_Achievements& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Winter2017_Achievements* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_Achievements>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Winter2017_Achievements* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_Achievements>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Winter2017_Achievements& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Winter2017_Achievements& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Winter2017_Achievements* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 completed = 1;
  bool has_completed() const;
  void clear_completed();
  static const int kCompletedFieldNumber = 1;
  ::google::protobuf::uint32 completed() const;
  void set_completed(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Achievements)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 completed_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Winter2017_BattleCup final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.BattleCup) */ {
 public:
  CMsgGCToClientBattlePassRollup_Winter2017_BattleCup();
  virtual ~CMsgGCToClientBattlePassRollup_Winter2017_BattleCup();

  CMsgGCToClientBattlePassRollup_Winter2017_BattleCup(const CMsgGCToClientBattlePassRollup_Winter2017_BattleCup& from);

  inline CMsgGCToClientBattlePassRollup_Winter2017_BattleCup& operator=(const CMsgGCToClientBattlePassRollup_Winter2017_BattleCup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Winter2017_BattleCup(CMsgGCToClientBattlePassRollup_Winter2017_BattleCup&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Winter2017_BattleCup() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Winter2017_BattleCup& operator=(CMsgGCToClientBattlePassRollup_Winter2017_BattleCup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Winter2017_BattleCup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Winter2017_BattleCup*>(
               &_CMsgGCToClientBattlePassRollup_Winter2017_BattleCup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    283;

  void Swap(CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Winter2017_BattleCup& a, CMsgGCToClientBattlePassRollup_Winter2017_BattleCup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_BattleCup>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_BattleCup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Winter2017_BattleCup& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Winter2017_BattleCup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 wins = 1;
  bool has_wins() const;
  void clear_wins();
  static const int kWinsFieldNumber = 1;
  ::google::protobuf::uint32 wins() const;
  void set_wins(::google::protobuf::uint32 value);

  // optional uint32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.BattleCup)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 score_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Winter2017_Predictions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Predictions) */ {
 public:
  CMsgGCToClientBattlePassRollup_Winter2017_Predictions();
  virtual ~CMsgGCToClientBattlePassRollup_Winter2017_Predictions();

  CMsgGCToClientBattlePassRollup_Winter2017_Predictions(const CMsgGCToClientBattlePassRollup_Winter2017_Predictions& from);

  inline CMsgGCToClientBattlePassRollup_Winter2017_Predictions& operator=(const CMsgGCToClientBattlePassRollup_Winter2017_Predictions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Winter2017_Predictions(CMsgGCToClientBattlePassRollup_Winter2017_Predictions&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Winter2017_Predictions() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Winter2017_Predictions& operator=(CMsgGCToClientBattlePassRollup_Winter2017_Predictions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Winter2017_Predictions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Winter2017_Predictions* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Winter2017_Predictions*>(
               &_CMsgGCToClientBattlePassRollup_Winter2017_Predictions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    284;

  void Swap(CMsgGCToClientBattlePassRollup_Winter2017_Predictions* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Winter2017_Predictions& a, CMsgGCToClientBattlePassRollup_Winter2017_Predictions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Winter2017_Predictions* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_Predictions>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Winter2017_Predictions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_Predictions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Winter2017_Predictions& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Winter2017_Predictions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Winter2017_Predictions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Predictions)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Winter2017_Bracket final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Bracket) */ {
 public:
  CMsgGCToClientBattlePassRollup_Winter2017_Bracket();
  virtual ~CMsgGCToClientBattlePassRollup_Winter2017_Bracket();

  CMsgGCToClientBattlePassRollup_Winter2017_Bracket(const CMsgGCToClientBattlePassRollup_Winter2017_Bracket& from);

  inline CMsgGCToClientBattlePassRollup_Winter2017_Bracket& operator=(const CMsgGCToClientBattlePassRollup_Winter2017_Bracket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Winter2017_Bracket(CMsgGCToClientBattlePassRollup_Winter2017_Bracket&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Winter2017_Bracket() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Winter2017_Bracket& operator=(CMsgGCToClientBattlePassRollup_Winter2017_Bracket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Winter2017_Bracket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Winter2017_Bracket* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Winter2017_Bracket*>(
               &_CMsgGCToClientBattlePassRollup_Winter2017_Bracket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    285;

  void Swap(CMsgGCToClientBattlePassRollup_Winter2017_Bracket* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Winter2017_Bracket& a, CMsgGCToClientBattlePassRollup_Winter2017_Bracket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Winter2017_Bracket* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_Bracket>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Winter2017_Bracket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_Bracket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Winter2017_Bracket& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Winter2017_Bracket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Winter2017_Bracket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 points = 2;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 2;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Bracket)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.PlayerCard) */ {
 public:
  CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard();
  virtual ~CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard();

  CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard(const CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard& from);

  inline CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard& operator=(const CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard(CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard& operator=(CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard*>(
               &_CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    286;

  void Swap(CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard& a, CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 quality = 2;
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 2;
  ::google::protobuf::uint32 quality() const;
  void set_quality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.PlayerCard)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 quality_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.FantasyChallenge) */ {
 public:
  CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge();
  virtual ~CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge();

  CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge(const CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge& from);

  inline CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge& operator=(const CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge(CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge& operator=(CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge*>(
               &_CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    287;

  void Swap(CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge& a, CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float total_score = 1;
  bool has_total_score() const;
  void clear_total_score();
  static const int kTotalScoreFieldNumber = 1;
  float total_score() const;
  void set_total_score(float value);

  // optional float percentile = 2;
  bool has_percentile() const;
  void clear_percentile();
  static const int kPercentileFieldNumber = 2;
  float percentile() const;
  void set_percentile(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.FantasyChallenge)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float total_score_;
  float percentile_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Winter2017 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017) */ {
 public:
  CMsgGCToClientBattlePassRollup_Winter2017();
  virtual ~CMsgGCToClientBattlePassRollup_Winter2017();

  CMsgGCToClientBattlePassRollup_Winter2017(const CMsgGCToClientBattlePassRollup_Winter2017& from);

  inline CMsgGCToClientBattlePassRollup_Winter2017& operator=(const CMsgGCToClientBattlePassRollup_Winter2017& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_Winter2017(CMsgGCToClientBattlePassRollup_Winter2017&& from) noexcept
    : CMsgGCToClientBattlePassRollup_Winter2017() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_Winter2017& operator=(CMsgGCToClientBattlePassRollup_Winter2017&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_Winter2017& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_Winter2017* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Winter2017*>(
               &_CMsgGCToClientBattlePassRollup_Winter2017_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    288;

  void Swap(CMsgGCToClientBattlePassRollup_Winter2017* other);
  friend void swap(CMsgGCToClientBattlePassRollup_Winter2017& a, CMsgGCToClientBattlePassRollup_Winter2017& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Winter2017* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_Winter2017* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_Winter2017>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Winter2017& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Winter2017& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Winter2017* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientBattlePassRollup_Winter2017_Questlines Questlines;
  typedef CMsgGCToClientBattlePassRollup_Winter2017_Wagering Wagering;
  typedef CMsgGCToClientBattlePassRollup_Winter2017_Achievements Achievements;
  typedef CMsgGCToClientBattlePassRollup_Winter2017_BattleCup BattleCup;
  typedef CMsgGCToClientBattlePassRollup_Winter2017_Predictions Predictions;
  typedef CMsgGCToClientBattlePassRollup_Winter2017_Bracket Bracket;
  typedef CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard PlayerCard;
  typedef CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge FantasyChallenge;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines questlines = 2;
  int questlines_size() const;
  void clear_questlines();
  static const int kQuestlinesFieldNumber = 2;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Questlines* mutable_questlines(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Questlines >*
      mutable_questlines();
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Questlines& questlines(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Questlines* add_questlines();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Questlines >&
      questlines() const;

  // repeated .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.PlayerCard player_cards = 8;
  int player_cards_size() const;
  void clear_player_cards();
  static const int kPlayerCardsFieldNumber = 8;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard* mutable_player_cards(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard >*
      mutable_player_cards();
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard& player_cards(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard* add_player_cards();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard >&
      player_cards() const;

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering wagering = 3;
  bool has_wagering() const;
  void clear_wagering();
  static const int kWageringFieldNumber = 3;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering& wagering() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering* release_wagering();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering* mutable_wagering();
  void set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering* wagering);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Achievements achievements = 4;
  bool has_achievements() const;
  void clear_achievements();
  static const int kAchievementsFieldNumber = 4;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements& achievements() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements* release_achievements();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements* mutable_achievements();
  void set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements* achievements);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.BattleCup battle_cup = 5;
  bool has_battle_cup() const;
  void clear_battle_cup();
  static const int kBattleCupFieldNumber = 5;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup& battle_cup() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* release_battle_cup();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* mutable_battle_cup();
  void set_allocated_battle_cup(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* battle_cup);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Predictions predictions = 6;
  bool has_predictions() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 6;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions& predictions() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions* release_predictions();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions* mutable_predictions();
  void set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions* predictions);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Bracket bracket = 7;
  bool has_bracket() const;
  void clear_bracket();
  static const int kBracketFieldNumber = 7;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket& bracket() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket* release_bracket();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket* mutable_bracket();
  void set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket* bracket);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.FantasyChallenge fantasy_challenge = 9;
  bool has_fantasy_challenge() const;
  void clear_fantasy_challenge();
  static const int kFantasyChallengeFieldNumber = 9;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge& fantasy_challenge() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* release_fantasy_challenge();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* mutable_fantasy_challenge();
  void set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* fantasy_challenge);

  // optional uint32 battle_pass_level = 1;
  bool has_battle_pass_level() const;
  void clear_battle_pass_level();
  static const int kBattlePassLevelFieldNumber = 1;
  ::google::protobuf::uint32 battle_pass_level() const;
  void set_battle_pass_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Questlines > questlines_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard > player_cards_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering* wagering_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements* achievements_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* battle_cup_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions* predictions_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket* bracket_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* fantasy_challenge_;
  ::google::protobuf::uint32 battle_pass_level_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI7_Questlines final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI7_Questlines();
  virtual ~CMsgGCToClientBattlePassRollup_TI7_Questlines();

  CMsgGCToClientBattlePassRollup_TI7_Questlines(const CMsgGCToClientBattlePassRollup_TI7_Questlines& from);

  inline CMsgGCToClientBattlePassRollup_TI7_Questlines& operator=(const CMsgGCToClientBattlePassRollup_TI7_Questlines& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI7_Questlines(CMsgGCToClientBattlePassRollup_TI7_Questlines&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI7_Questlines() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI7_Questlines& operator=(CMsgGCToClientBattlePassRollup_TI7_Questlines&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI7_Questlines& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI7_Questlines* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI7_Questlines*>(
               &_CMsgGCToClientBattlePassRollup_TI7_Questlines_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    289;

  void Swap(CMsgGCToClientBattlePassRollup_TI7_Questlines* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI7_Questlines& a, CMsgGCToClientBattlePassRollup_TI7_Questlines& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI7_Questlines* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_Questlines>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI7_Questlines* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_Questlines>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI7_Questlines& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI7_Questlines& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI7_Questlines* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 onestar = 2;
  bool has_onestar() const;
  void clear_onestar();
  static const int kOnestarFieldNumber = 2;
  ::google::protobuf::uint32 onestar() const;
  void set_onestar(::google::protobuf::uint32 value);

  // optional uint32 twostar = 3;
  bool has_twostar() const;
  void clear_twostar();
  static const int kTwostarFieldNumber = 3;
  ::google::protobuf::uint32 twostar() const;
  void set_twostar(::google::protobuf::uint32 value);

  // optional uint32 threestar = 4;
  bool has_threestar() const;
  void clear_threestar();
  static const int kThreestarFieldNumber = 4;
  ::google::protobuf::uint32 threestar() const;
  void set_threestar(::google::protobuf::uint32 value);

  // optional uint32 total = 5;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 5;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 onestar_;
  ::google::protobuf::uint32 twostar_;
  ::google::protobuf::uint32 threestar_;
  ::google::protobuf::uint32 total_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI7_Wagering final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI7_Wagering();
  virtual ~CMsgGCToClientBattlePassRollup_TI7_Wagering();

  CMsgGCToClientBattlePassRollup_TI7_Wagering(const CMsgGCToClientBattlePassRollup_TI7_Wagering& from);

  inline CMsgGCToClientBattlePassRollup_TI7_Wagering& operator=(const CMsgGCToClientBattlePassRollup_TI7_Wagering& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI7_Wagering(CMsgGCToClientBattlePassRollup_TI7_Wagering&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI7_Wagering() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI7_Wagering& operator=(CMsgGCToClientBattlePassRollup_TI7_Wagering&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI7_Wagering& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI7_Wagering* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI7_Wagering*>(
               &_CMsgGCToClientBattlePassRollup_TI7_Wagering_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    290;

  void Swap(CMsgGCToClientBattlePassRollup_TI7_Wagering* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI7_Wagering& a, CMsgGCToClientBattlePassRollup_TI7_Wagering& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI7_Wagering* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_Wagering>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI7_Wagering* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_Wagering>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI7_Wagering& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI7_Wagering& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI7_Wagering* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 total_wagered = 1;
  bool has_total_wagered() const;
  void clear_total_wagered();
  static const int kTotalWageredFieldNumber = 1;
  ::google::protobuf::uint32 total_wagered() const;
  void set_total_wagered(::google::protobuf::uint32 value);

  // optional uint32 total_won = 2;
  bool has_total_won() const;
  void clear_total_won();
  static const int kTotalWonFieldNumber = 2;
  ::google::protobuf::uint32 total_won() const;
  void set_total_won(::google::protobuf::uint32 value);

  // optional uint32 average_won = 3;
  bool has_average_won() const;
  void clear_average_won();
  static const int kAverageWonFieldNumber = 3;
  ::google::protobuf::uint32 average_won() const;
  void set_average_won(::google::protobuf::uint32 value);

  // optional uint32 success_rate = 4;
  bool has_success_rate() const;
  void clear_success_rate();
  static const int kSuccessRateFieldNumber = 4;
  ::google::protobuf::uint32 success_rate() const;
  void set_success_rate(::google::protobuf::uint32 value);

  // optional uint32 total_tips = 5;
  bool has_total_tips() const;
  void clear_total_tips();
  static const int kTotalTipsFieldNumber = 5;
  ::google::protobuf::uint32 total_tips() const;
  void set_total_tips(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 total_wagered_;
  ::google::protobuf::uint32 total_won_;
  ::google::protobuf::uint32 average_won_;
  ::google::protobuf::uint32 success_rate_;
  ::google::protobuf::uint32 total_tips_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI7_Achievements final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Achievements) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI7_Achievements();
  virtual ~CMsgGCToClientBattlePassRollup_TI7_Achievements();

  CMsgGCToClientBattlePassRollup_TI7_Achievements(const CMsgGCToClientBattlePassRollup_TI7_Achievements& from);

  inline CMsgGCToClientBattlePassRollup_TI7_Achievements& operator=(const CMsgGCToClientBattlePassRollup_TI7_Achievements& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI7_Achievements(CMsgGCToClientBattlePassRollup_TI7_Achievements&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI7_Achievements() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI7_Achievements& operator=(CMsgGCToClientBattlePassRollup_TI7_Achievements&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI7_Achievements& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI7_Achievements* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI7_Achievements*>(
               &_CMsgGCToClientBattlePassRollup_TI7_Achievements_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    291;

  void Swap(CMsgGCToClientBattlePassRollup_TI7_Achievements* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI7_Achievements& a, CMsgGCToClientBattlePassRollup_TI7_Achievements& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI7_Achievements* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_Achievements>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI7_Achievements* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_Achievements>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI7_Achievements& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI7_Achievements& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI7_Achievements* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 completed = 1;
  bool has_completed() const;
  void clear_completed();
  static const int kCompletedFieldNumber = 1;
  ::google::protobuf::uint32 completed() const;
  void set_completed(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Achievements)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 completed_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI7_BattleCup final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI7.BattleCup) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI7_BattleCup();
  virtual ~CMsgGCToClientBattlePassRollup_TI7_BattleCup();

  CMsgGCToClientBattlePassRollup_TI7_BattleCup(const CMsgGCToClientBattlePassRollup_TI7_BattleCup& from);

  inline CMsgGCToClientBattlePassRollup_TI7_BattleCup& operator=(const CMsgGCToClientBattlePassRollup_TI7_BattleCup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI7_BattleCup(CMsgGCToClientBattlePassRollup_TI7_BattleCup&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI7_BattleCup() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI7_BattleCup& operator=(CMsgGCToClientBattlePassRollup_TI7_BattleCup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI7_BattleCup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI7_BattleCup* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI7_BattleCup*>(
               &_CMsgGCToClientBattlePassRollup_TI7_BattleCup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    292;

  void Swap(CMsgGCToClientBattlePassRollup_TI7_BattleCup* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI7_BattleCup& a, CMsgGCToClientBattlePassRollup_TI7_BattleCup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI7_BattleCup* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_BattleCup>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI7_BattleCup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_BattleCup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI7_BattleCup& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI7_BattleCup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI7_BattleCup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 wins = 1;
  bool has_wins() const;
  void clear_wins();
  static const int kWinsFieldNumber = 1;
  ::google::protobuf::uint32 wins() const;
  void set_wins(::google::protobuf::uint32 value);

  // optional uint32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI7.BattleCup)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 score_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI7_Predictions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Predictions) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI7_Predictions();
  virtual ~CMsgGCToClientBattlePassRollup_TI7_Predictions();

  CMsgGCToClientBattlePassRollup_TI7_Predictions(const CMsgGCToClientBattlePassRollup_TI7_Predictions& from);

  inline CMsgGCToClientBattlePassRollup_TI7_Predictions& operator=(const CMsgGCToClientBattlePassRollup_TI7_Predictions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI7_Predictions(CMsgGCToClientBattlePassRollup_TI7_Predictions&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI7_Predictions() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI7_Predictions& operator=(CMsgGCToClientBattlePassRollup_TI7_Predictions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI7_Predictions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI7_Predictions* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI7_Predictions*>(
               &_CMsgGCToClientBattlePassRollup_TI7_Predictions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    293;

  void Swap(CMsgGCToClientBattlePassRollup_TI7_Predictions* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI7_Predictions& a, CMsgGCToClientBattlePassRollup_TI7_Predictions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI7_Predictions* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_Predictions>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI7_Predictions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_Predictions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI7_Predictions& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI7_Predictions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI7_Predictions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Predictions)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI7_Bracket final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Bracket) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI7_Bracket();
  virtual ~CMsgGCToClientBattlePassRollup_TI7_Bracket();

  CMsgGCToClientBattlePassRollup_TI7_Bracket(const CMsgGCToClientBattlePassRollup_TI7_Bracket& from);

  inline CMsgGCToClientBattlePassRollup_TI7_Bracket& operator=(const CMsgGCToClientBattlePassRollup_TI7_Bracket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI7_Bracket(CMsgGCToClientBattlePassRollup_TI7_Bracket&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI7_Bracket() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI7_Bracket& operator=(CMsgGCToClientBattlePassRollup_TI7_Bracket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI7_Bracket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI7_Bracket* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI7_Bracket*>(
               &_CMsgGCToClientBattlePassRollup_TI7_Bracket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    294;

  void Swap(CMsgGCToClientBattlePassRollup_TI7_Bracket* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI7_Bracket& a, CMsgGCToClientBattlePassRollup_TI7_Bracket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI7_Bracket* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_Bracket>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI7_Bracket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_Bracket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI7_Bracket& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI7_Bracket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI7_Bracket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 points = 2;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 2;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Bracket)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI7_PlayerCard final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI7.PlayerCard) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI7_PlayerCard();
  virtual ~CMsgGCToClientBattlePassRollup_TI7_PlayerCard();

  CMsgGCToClientBattlePassRollup_TI7_PlayerCard(const CMsgGCToClientBattlePassRollup_TI7_PlayerCard& from);

  inline CMsgGCToClientBattlePassRollup_TI7_PlayerCard& operator=(const CMsgGCToClientBattlePassRollup_TI7_PlayerCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI7_PlayerCard(CMsgGCToClientBattlePassRollup_TI7_PlayerCard&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI7_PlayerCard() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI7_PlayerCard& operator=(CMsgGCToClientBattlePassRollup_TI7_PlayerCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI7_PlayerCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI7_PlayerCard* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI7_PlayerCard*>(
               &_CMsgGCToClientBattlePassRollup_TI7_PlayerCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    295;

  void Swap(CMsgGCToClientBattlePassRollup_TI7_PlayerCard* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI7_PlayerCard& a, CMsgGCToClientBattlePassRollup_TI7_PlayerCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI7_PlayerCard* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_PlayerCard>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI7_PlayerCard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_PlayerCard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI7_PlayerCard& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI7_PlayerCard& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI7_PlayerCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 quality = 2;
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 2;
  ::google::protobuf::uint32 quality() const;
  void set_quality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI7.PlayerCard)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 quality_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI7.FantasyChallenge) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge();
  virtual ~CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge();

  CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge(const CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge& from);

  inline CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge& operator=(const CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge(CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge& operator=(CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge*>(
               &_CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    296;

  void Swap(CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge& a, CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float total_score = 1;
  bool has_total_score() const;
  void clear_total_score();
  static const int kTotalScoreFieldNumber = 1;
  float total_score() const;
  void set_total_score(float value);

  // optional float percentile = 2;
  bool has_percentile() const;
  void clear_percentile();
  static const int kPercentileFieldNumber = 2;
  float percentile() const;
  void set_percentile(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI7.FantasyChallenge)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float total_score_;
  float percentile_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI7 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI7) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI7();
  virtual ~CMsgGCToClientBattlePassRollup_TI7();

  CMsgGCToClientBattlePassRollup_TI7(const CMsgGCToClientBattlePassRollup_TI7& from);

  inline CMsgGCToClientBattlePassRollup_TI7& operator=(const CMsgGCToClientBattlePassRollup_TI7& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI7(CMsgGCToClientBattlePassRollup_TI7&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI7() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI7& operator=(CMsgGCToClientBattlePassRollup_TI7&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI7& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI7* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI7*>(
               &_CMsgGCToClientBattlePassRollup_TI7_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    297;

  void Swap(CMsgGCToClientBattlePassRollup_TI7* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI7& a, CMsgGCToClientBattlePassRollup_TI7& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI7* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI7* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI7>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI7& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI7& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI7* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientBattlePassRollup_TI7_Questlines Questlines;
  typedef CMsgGCToClientBattlePassRollup_TI7_Wagering Wagering;
  typedef CMsgGCToClientBattlePassRollup_TI7_Achievements Achievements;
  typedef CMsgGCToClientBattlePassRollup_TI7_BattleCup BattleCup;
  typedef CMsgGCToClientBattlePassRollup_TI7_Predictions Predictions;
  typedef CMsgGCToClientBattlePassRollup_TI7_Bracket Bracket;
  typedef CMsgGCToClientBattlePassRollup_TI7_PlayerCard PlayerCard;
  typedef CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge FantasyChallenge;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines questlines = 2;
  int questlines_size() const;
  void clear_questlines();
  static const int kQuestlinesFieldNumber = 2;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Questlines* mutable_questlines(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Questlines >*
      mutable_questlines();
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Questlines& questlines(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Questlines* add_questlines();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Questlines >&
      questlines() const;

  // repeated .proto.dota.CMsgGCToClientBattlePassRollup_TI7.PlayerCard player_cards = 8;
  int player_cards_size() const;
  void clear_player_cards();
  static const int kPlayerCardsFieldNumber = 8;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_PlayerCard* mutable_player_cards(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_PlayerCard >*
      mutable_player_cards();
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_PlayerCard& player_cards(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_PlayerCard* add_player_cards();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_PlayerCard >&
      player_cards() const;

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering wagering = 3;
  bool has_wagering() const;
  void clear_wagering();
  static const int kWageringFieldNumber = 3;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering& wagering() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering* release_wagering();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering* mutable_wagering();
  void set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering* wagering);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7.Achievements achievements = 4;
  bool has_achievements() const;
  void clear_achievements();
  static const int kAchievementsFieldNumber = 4;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements& achievements() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements* release_achievements();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements* mutable_achievements();
  void set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements* achievements);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7.BattleCup battle_cup = 5;
  bool has_battle_cup() const;
  void clear_battle_cup();
  static const int kBattleCupFieldNumber = 5;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup& battle_cup() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup* release_battle_cup();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup* mutable_battle_cup();
  void set_allocated_battle_cup(::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup* battle_cup);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7.Predictions predictions = 6;
  bool has_predictions() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 6;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions& predictions() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions* release_predictions();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions* mutable_predictions();
  void set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions* predictions);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7.Bracket bracket = 7;
  bool has_bracket() const;
  void clear_bracket();
  static const int kBracketFieldNumber = 7;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket& bracket() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket* release_bracket();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket* mutable_bracket();
  void set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket* bracket);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7.FantasyChallenge fantasy_challenge = 9;
  bool has_fantasy_challenge() const;
  void clear_fantasy_challenge();
  static const int kFantasyChallengeFieldNumber = 9;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge& fantasy_challenge() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* release_fantasy_challenge();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* mutable_fantasy_challenge();
  void set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* fantasy_challenge);

  // optional uint32 battle_pass_level = 1;
  bool has_battle_pass_level() const;
  void clear_battle_pass_level();
  static const int kBattlePassLevelFieldNumber = 1;
  ::google::protobuf::uint32 battle_pass_level() const;
  void set_battle_pass_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI7)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Questlines > questlines_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_PlayerCard > player_cards_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering* wagering_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements* achievements_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup* battle_cup_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions* predictions_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket* bracket_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* fantasy_challenge_;
  ::google::protobuf::uint32 battle_pass_level_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI8_CavernCrawl final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI8.CavernCrawl) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI8_CavernCrawl();
  virtual ~CMsgGCToClientBattlePassRollup_TI8_CavernCrawl();

  CMsgGCToClientBattlePassRollup_TI8_CavernCrawl(const CMsgGCToClientBattlePassRollup_TI8_CavernCrawl& from);

  inline CMsgGCToClientBattlePassRollup_TI8_CavernCrawl& operator=(const CMsgGCToClientBattlePassRollup_TI8_CavernCrawl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI8_CavernCrawl(CMsgGCToClientBattlePassRollup_TI8_CavernCrawl&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI8_CavernCrawl() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI8_CavernCrawl& operator=(CMsgGCToClientBattlePassRollup_TI8_CavernCrawl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI8_CavernCrawl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI8_CavernCrawl*>(
               &_CMsgGCToClientBattlePassRollup_TI8_CavernCrawl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    298;

  void Swap(CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI8_CavernCrawl& a, CMsgGCToClientBattlePassRollup_TI8_CavernCrawl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_CavernCrawl>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_CavernCrawl>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI8_CavernCrawl& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI8_CavernCrawl& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rooms_cleared = 1;
  bool has_rooms_cleared() const;
  void clear_rooms_cleared();
  static const int kRoomsClearedFieldNumber = 1;
  ::google::protobuf::uint32 rooms_cleared() const;
  void set_rooms_cleared(::google::protobuf::uint32 value);

  // optional bool carry_completed = 2;
  bool has_carry_completed() const;
  void clear_carry_completed();
  static const int kCarryCompletedFieldNumber = 2;
  bool carry_completed() const;
  void set_carry_completed(bool value);

  // optional bool support_completed = 3;
  bool has_support_completed() const;
  void clear_support_completed();
  static const int kSupportCompletedFieldNumber = 3;
  bool support_completed() const;
  void set_support_completed(bool value);

  // optional bool utility_completed = 4;
  bool has_utility_completed() const;
  void clear_utility_completed();
  static const int kUtilityCompletedFieldNumber = 4;
  bool utility_completed() const;
  void set_utility_completed(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI8.CavernCrawl)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 rooms_cleared_;
  bool carry_completed_;
  bool support_completed_;
  bool utility_completed_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI8_Wagering final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI8_Wagering();
  virtual ~CMsgGCToClientBattlePassRollup_TI8_Wagering();

  CMsgGCToClientBattlePassRollup_TI8_Wagering(const CMsgGCToClientBattlePassRollup_TI8_Wagering& from);

  inline CMsgGCToClientBattlePassRollup_TI8_Wagering& operator=(const CMsgGCToClientBattlePassRollup_TI8_Wagering& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI8_Wagering(CMsgGCToClientBattlePassRollup_TI8_Wagering&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI8_Wagering() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI8_Wagering& operator=(CMsgGCToClientBattlePassRollup_TI8_Wagering&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI8_Wagering& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI8_Wagering* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI8_Wagering*>(
               &_CMsgGCToClientBattlePassRollup_TI8_Wagering_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    299;

  void Swap(CMsgGCToClientBattlePassRollup_TI8_Wagering* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI8_Wagering& a, CMsgGCToClientBattlePassRollup_TI8_Wagering& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI8_Wagering* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_Wagering>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI8_Wagering* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_Wagering>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI8_Wagering& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI8_Wagering& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI8_Wagering* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 total_wagered = 1;
  bool has_total_wagered() const;
  void clear_total_wagered();
  static const int kTotalWageredFieldNumber = 1;
  ::google::protobuf::uint32 total_wagered() const;
  void set_total_wagered(::google::protobuf::uint32 value);

  // optional uint32 total_won = 2;
  bool has_total_won() const;
  void clear_total_won();
  static const int kTotalWonFieldNumber = 2;
  ::google::protobuf::uint32 total_won() const;
  void set_total_won(::google::protobuf::uint32 value);

  // optional uint32 average_won = 3;
  bool has_average_won() const;
  void clear_average_won();
  static const int kAverageWonFieldNumber = 3;
  ::google::protobuf::uint32 average_won() const;
  void set_average_won(::google::protobuf::uint32 value);

  // optional uint32 success_rate = 4;
  bool has_success_rate() const;
  void clear_success_rate();
  static const int kSuccessRateFieldNumber = 4;
  ::google::protobuf::uint32 success_rate() const;
  void set_success_rate(::google::protobuf::uint32 value);

  // optional uint32 total_tips = 5;
  bool has_total_tips() const;
  void clear_total_tips();
  static const int kTotalTipsFieldNumber = 5;
  ::google::protobuf::uint32 total_tips() const;
  void set_total_tips(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 total_wagered_;
  ::google::protobuf::uint32 total_won_;
  ::google::protobuf::uint32 average_won_;
  ::google::protobuf::uint32 success_rate_;
  ::google::protobuf::uint32 total_tips_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI8_Achievements final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Achievements) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI8_Achievements();
  virtual ~CMsgGCToClientBattlePassRollup_TI8_Achievements();

  CMsgGCToClientBattlePassRollup_TI8_Achievements(const CMsgGCToClientBattlePassRollup_TI8_Achievements& from);

  inline CMsgGCToClientBattlePassRollup_TI8_Achievements& operator=(const CMsgGCToClientBattlePassRollup_TI8_Achievements& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI8_Achievements(CMsgGCToClientBattlePassRollup_TI8_Achievements&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI8_Achievements() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI8_Achievements& operator=(CMsgGCToClientBattlePassRollup_TI8_Achievements&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI8_Achievements& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI8_Achievements* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI8_Achievements*>(
               &_CMsgGCToClientBattlePassRollup_TI8_Achievements_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    300;

  void Swap(CMsgGCToClientBattlePassRollup_TI8_Achievements* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI8_Achievements& a, CMsgGCToClientBattlePassRollup_TI8_Achievements& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI8_Achievements* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_Achievements>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI8_Achievements* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_Achievements>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI8_Achievements& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI8_Achievements& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI8_Achievements* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 completed = 1;
  bool has_completed() const;
  void clear_completed();
  static const int kCompletedFieldNumber = 1;
  ::google::protobuf::uint32 completed() const;
  void set_completed(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Achievements)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 completed_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI8_Predictions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Predictions) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI8_Predictions();
  virtual ~CMsgGCToClientBattlePassRollup_TI8_Predictions();

  CMsgGCToClientBattlePassRollup_TI8_Predictions(const CMsgGCToClientBattlePassRollup_TI8_Predictions& from);

  inline CMsgGCToClientBattlePassRollup_TI8_Predictions& operator=(const CMsgGCToClientBattlePassRollup_TI8_Predictions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI8_Predictions(CMsgGCToClientBattlePassRollup_TI8_Predictions&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI8_Predictions() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI8_Predictions& operator=(CMsgGCToClientBattlePassRollup_TI8_Predictions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI8_Predictions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI8_Predictions* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI8_Predictions*>(
               &_CMsgGCToClientBattlePassRollup_TI8_Predictions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    301;

  void Swap(CMsgGCToClientBattlePassRollup_TI8_Predictions* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI8_Predictions& a, CMsgGCToClientBattlePassRollup_TI8_Predictions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI8_Predictions* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_Predictions>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI8_Predictions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_Predictions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI8_Predictions& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI8_Predictions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI8_Predictions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Predictions)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI8_Bracket final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Bracket) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI8_Bracket();
  virtual ~CMsgGCToClientBattlePassRollup_TI8_Bracket();

  CMsgGCToClientBattlePassRollup_TI8_Bracket(const CMsgGCToClientBattlePassRollup_TI8_Bracket& from);

  inline CMsgGCToClientBattlePassRollup_TI8_Bracket& operator=(const CMsgGCToClientBattlePassRollup_TI8_Bracket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI8_Bracket(CMsgGCToClientBattlePassRollup_TI8_Bracket&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI8_Bracket() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI8_Bracket& operator=(CMsgGCToClientBattlePassRollup_TI8_Bracket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI8_Bracket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI8_Bracket* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI8_Bracket*>(
               &_CMsgGCToClientBattlePassRollup_TI8_Bracket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    302;

  void Swap(CMsgGCToClientBattlePassRollup_TI8_Bracket* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI8_Bracket& a, CMsgGCToClientBattlePassRollup_TI8_Bracket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI8_Bracket* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_Bracket>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI8_Bracket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_Bracket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI8_Bracket& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI8_Bracket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI8_Bracket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 points = 2;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 2;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Bracket)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI8_PlayerCard final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI8.PlayerCard) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI8_PlayerCard();
  virtual ~CMsgGCToClientBattlePassRollup_TI8_PlayerCard();

  CMsgGCToClientBattlePassRollup_TI8_PlayerCard(const CMsgGCToClientBattlePassRollup_TI8_PlayerCard& from);

  inline CMsgGCToClientBattlePassRollup_TI8_PlayerCard& operator=(const CMsgGCToClientBattlePassRollup_TI8_PlayerCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI8_PlayerCard(CMsgGCToClientBattlePassRollup_TI8_PlayerCard&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI8_PlayerCard() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI8_PlayerCard& operator=(CMsgGCToClientBattlePassRollup_TI8_PlayerCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI8_PlayerCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI8_PlayerCard* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI8_PlayerCard*>(
               &_CMsgGCToClientBattlePassRollup_TI8_PlayerCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    303;

  void Swap(CMsgGCToClientBattlePassRollup_TI8_PlayerCard* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI8_PlayerCard& a, CMsgGCToClientBattlePassRollup_TI8_PlayerCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI8_PlayerCard* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_PlayerCard>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI8_PlayerCard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_PlayerCard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI8_PlayerCard& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI8_PlayerCard& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI8_PlayerCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 quality = 2;
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 2;
  ::google::protobuf::uint32 quality() const;
  void set_quality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI8.PlayerCard)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 quality_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI8.FantasyChallenge) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge();
  virtual ~CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge();

  CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge(const CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge& from);

  inline CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge& operator=(const CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge(CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge& operator=(CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge*>(
               &_CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    304;

  void Swap(CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge& a, CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float total_score = 1;
  bool has_total_score() const;
  void clear_total_score();
  static const int kTotalScoreFieldNumber = 1;
  float total_score() const;
  void set_total_score(float value);

  // optional float percentile = 2;
  bool has_percentile() const;
  void clear_percentile();
  static const int kPercentileFieldNumber = 2;
  float percentile() const;
  void set_percentile(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI8.FantasyChallenge)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float total_score_;
  float percentile_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_TI8 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_TI8) */ {
 public:
  CMsgGCToClientBattlePassRollup_TI8();
  virtual ~CMsgGCToClientBattlePassRollup_TI8();

  CMsgGCToClientBattlePassRollup_TI8(const CMsgGCToClientBattlePassRollup_TI8& from);

  inline CMsgGCToClientBattlePassRollup_TI8& operator=(const CMsgGCToClientBattlePassRollup_TI8& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollup_TI8(CMsgGCToClientBattlePassRollup_TI8&& from) noexcept
    : CMsgGCToClientBattlePassRollup_TI8() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollup_TI8& operator=(CMsgGCToClientBattlePassRollup_TI8&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollup_TI8& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollup_TI8* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_TI8*>(
               &_CMsgGCToClientBattlePassRollup_TI8_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    305;

  void Swap(CMsgGCToClientBattlePassRollup_TI8* other);
  friend void swap(CMsgGCToClientBattlePassRollup_TI8& a, CMsgGCToClientBattlePassRollup_TI8& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_TI8* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8>(nullptr);
  }

  CMsgGCToClientBattlePassRollup_TI8* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollup_TI8>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_TI8& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_TI8& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollup_TI8* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientBattlePassRollup_TI8_CavernCrawl CavernCrawl;
  typedef CMsgGCToClientBattlePassRollup_TI8_Wagering Wagering;
  typedef CMsgGCToClientBattlePassRollup_TI8_Achievements Achievements;
  typedef CMsgGCToClientBattlePassRollup_TI8_Predictions Predictions;
  typedef CMsgGCToClientBattlePassRollup_TI8_Bracket Bracket;
  typedef CMsgGCToClientBattlePassRollup_TI8_PlayerCard PlayerCard;
  typedef CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge FantasyChallenge;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientBattlePassRollup_TI8.PlayerCard player_cards = 8;
  int player_cards_size() const;
  void clear_player_cards();
  static const int kPlayerCardsFieldNumber = 8;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_PlayerCard* mutable_player_cards(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_PlayerCard >*
      mutable_player_cards();
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_PlayerCard& player_cards(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_PlayerCard* add_player_cards();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_PlayerCard >&
      player_cards() const;

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8.CavernCrawl cavern_crawl = 2;
  bool has_cavern_crawl() const;
  void clear_cavern_crawl();
  static const int kCavernCrawlFieldNumber = 2;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl& cavern_crawl() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* release_cavern_crawl();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* mutable_cavern_crawl();
  void set_allocated_cavern_crawl(::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* cavern_crawl);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering wagering = 3;
  bool has_wagering() const;
  void clear_wagering();
  static const int kWageringFieldNumber = 3;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering& wagering() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering* release_wagering();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering* mutable_wagering();
  void set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering* wagering);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8.Achievements achievements = 4;
  bool has_achievements() const;
  void clear_achievements();
  static const int kAchievementsFieldNumber = 4;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements& achievements() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements* release_achievements();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements* mutable_achievements();
  void set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements* achievements);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8.Predictions predictions = 6;
  bool has_predictions() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 6;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions& predictions() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions* release_predictions();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions* mutable_predictions();
  void set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions* predictions);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8.Bracket bracket = 7;
  bool has_bracket() const;
  void clear_bracket();
  static const int kBracketFieldNumber = 7;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket& bracket() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket* release_bracket();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket* mutable_bracket();
  void set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket* bracket);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8.FantasyChallenge fantasy_challenge = 9;
  bool has_fantasy_challenge() const;
  void clear_fantasy_challenge();
  static const int kFantasyChallengeFieldNumber = 9;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge& fantasy_challenge() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* release_fantasy_challenge();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* mutable_fantasy_challenge();
  void set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* fantasy_challenge);

  // optional uint32 battle_pass_level = 1;
  bool has_battle_pass_level() const;
  void clear_battle_pass_level();
  static const int kBattlePassLevelFieldNumber = 1;
  ::google::protobuf::uint32 battle_pass_level() const;
  void set_battle_pass_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_TI8)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_PlayerCard > player_cards_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* cavern_crawl_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering* wagering_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements* achievements_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions* predictions_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket* bracket_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* fantasy_challenge_;
  ::google::protobuf::uint32 battle_pass_level_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollupRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollupRequest) */ {
 public:
  CMsgGCToClientBattlePassRollupRequest();
  virtual ~CMsgGCToClientBattlePassRollupRequest();

  CMsgGCToClientBattlePassRollupRequest(const CMsgGCToClientBattlePassRollupRequest& from);

  inline CMsgGCToClientBattlePassRollupRequest& operator=(const CMsgGCToClientBattlePassRollupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollupRequest(CMsgGCToClientBattlePassRollupRequest&& from) noexcept
    : CMsgGCToClientBattlePassRollupRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollupRequest& operator=(CMsgGCToClientBattlePassRollupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollupRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollupRequest*>(
               &_CMsgGCToClientBattlePassRollupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    306;

  void Swap(CMsgGCToClientBattlePassRollupRequest* other);
  friend void swap(CMsgGCToClientBattlePassRollupRequest& a, CMsgGCToClientBattlePassRollupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollupRequest* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollupRequest>(nullptr);
  }

  CMsgGCToClientBattlePassRollupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollupRequest& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollupRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollupRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollupResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollupResponse) */ {
 public:
  CMsgGCToClientBattlePassRollupResponse();
  virtual ~CMsgGCToClientBattlePassRollupResponse();

  CMsgGCToClientBattlePassRollupResponse(const CMsgGCToClientBattlePassRollupResponse& from);

  inline CMsgGCToClientBattlePassRollupResponse& operator=(const CMsgGCToClientBattlePassRollupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollupResponse(CMsgGCToClientBattlePassRollupResponse&& from) noexcept
    : CMsgGCToClientBattlePassRollupResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollupResponse& operator=(CMsgGCToClientBattlePassRollupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollupResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollupResponse*>(
               &_CMsgGCToClientBattlePassRollupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    307;

  void Swap(CMsgGCToClientBattlePassRollupResponse* other);
  friend void swap(CMsgGCToClientBattlePassRollupResponse& a, CMsgGCToClientBattlePassRollupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollupResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollupResponse>(nullptr);
  }

  CMsgGCToClientBattlePassRollupResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollupResponse& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollupResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016 event_ti6 = 1;
  bool has_event_ti6() const;
  void clear_event_ti6();
  static const int kEventTi6FieldNumber = 1;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016& event_ti6() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* release_event_ti6();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* mutable_event_ti6();
  void set_allocated_event_ti6(::proto::dota::CMsgGCToClientBattlePassRollup_International2016* event_ti6);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016 event_fall2016 = 2;
  bool has_event_fall2016() const;
  void clear_event_fall2016();
  static const int kEventFall2016FieldNumber = 2;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016& event_fall2016() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* release_event_fall2016();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* mutable_event_fall2016();
  void set_allocated_event_fall2016(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* event_fall2016);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017 event_winter2017 = 3;
  bool has_event_winter2017() const;
  void clear_event_winter2017();
  static const int kEventWinter2017FieldNumber = 3;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017& event_winter2017() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017* release_event_winter2017();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017* mutable_event_winter2017();
  void set_allocated_event_winter2017(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017* event_winter2017);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7 event_ti7 = 4;
  bool has_event_ti7() const;
  void clear_event_ti7();
  static const int kEventTi7FieldNumber = 4;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7& event_ti7() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7* release_event_ti7();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7* mutable_event_ti7();
  void set_allocated_event_ti7(::proto::dota::CMsgGCToClientBattlePassRollup_TI7* event_ti7);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8 event_ti8 = 5;
  bool has_event_ti8() const;
  void clear_event_ti8();
  static const int kEventTi8FieldNumber = 5;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8& event_ti8() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8* release_event_ti8();
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8* mutable_event_ti8();
  void set_allocated_event_ti8(::proto::dota::CMsgGCToClientBattlePassRollup_TI8* event_ti8);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollupResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* event_ti6_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* event_fall2016_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017* event_winter2017_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7* event_ti7_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8* event_ti8_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollupListRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollupListRequest) */ {
 public:
  CMsgGCToClientBattlePassRollupListRequest();
  virtual ~CMsgGCToClientBattlePassRollupListRequest();

  CMsgGCToClientBattlePassRollupListRequest(const CMsgGCToClientBattlePassRollupListRequest& from);

  inline CMsgGCToClientBattlePassRollupListRequest& operator=(const CMsgGCToClientBattlePassRollupListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollupListRequest(CMsgGCToClientBattlePassRollupListRequest&& from) noexcept
    : CMsgGCToClientBattlePassRollupListRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollupListRequest& operator=(CMsgGCToClientBattlePassRollupListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollupListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollupListRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollupListRequest*>(
               &_CMsgGCToClientBattlePassRollupListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    308;

  void Swap(CMsgGCToClientBattlePassRollupListRequest* other);
  friend void swap(CMsgGCToClientBattlePassRollupListRequest& a, CMsgGCToClientBattlePassRollupListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollupListRequest* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollupListRequest>(nullptr);
  }

  CMsgGCToClientBattlePassRollupListRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollupListRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollupListRequest& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollupListRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollupListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollupListRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollupListResponse_EventInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollupListResponse.EventInfo) */ {
 public:
  CMsgGCToClientBattlePassRollupListResponse_EventInfo();
  virtual ~CMsgGCToClientBattlePassRollupListResponse_EventInfo();

  CMsgGCToClientBattlePassRollupListResponse_EventInfo(const CMsgGCToClientBattlePassRollupListResponse_EventInfo& from);

  inline CMsgGCToClientBattlePassRollupListResponse_EventInfo& operator=(const CMsgGCToClientBattlePassRollupListResponse_EventInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollupListResponse_EventInfo(CMsgGCToClientBattlePassRollupListResponse_EventInfo&& from) noexcept
    : CMsgGCToClientBattlePassRollupListResponse_EventInfo() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollupListResponse_EventInfo& operator=(CMsgGCToClientBattlePassRollupListResponse_EventInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollupListResponse_EventInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollupListResponse_EventInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollupListResponse_EventInfo*>(
               &_CMsgGCToClientBattlePassRollupListResponse_EventInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    309;

  void Swap(CMsgGCToClientBattlePassRollupListResponse_EventInfo* other);
  friend void swap(CMsgGCToClientBattlePassRollupListResponse_EventInfo& a, CMsgGCToClientBattlePassRollupListResponse_EventInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollupListResponse_EventInfo* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollupListResponse_EventInfo>(nullptr);
  }

  CMsgGCToClientBattlePassRollupListResponse_EventInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollupListResponse_EventInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollupListResponse_EventInfo& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollupListResponse_EventInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollupListResponse_EventInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollupListResponse.EventInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 level_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollupListResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollupListResponse) */ {
 public:
  CMsgGCToClientBattlePassRollupListResponse();
  virtual ~CMsgGCToClientBattlePassRollupListResponse();

  CMsgGCToClientBattlePassRollupListResponse(const CMsgGCToClientBattlePassRollupListResponse& from);

  inline CMsgGCToClientBattlePassRollupListResponse& operator=(const CMsgGCToClientBattlePassRollupListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientBattlePassRollupListResponse(CMsgGCToClientBattlePassRollupListResponse&& from) noexcept
    : CMsgGCToClientBattlePassRollupListResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientBattlePassRollupListResponse& operator=(CMsgGCToClientBattlePassRollupListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientBattlePassRollupListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientBattlePassRollupListResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollupListResponse*>(
               &_CMsgGCToClientBattlePassRollupListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    310;

  void Swap(CMsgGCToClientBattlePassRollupListResponse* other);
  friend void swap(CMsgGCToClientBattlePassRollupListResponse& a, CMsgGCToClientBattlePassRollupListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollupListResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollupListResponse>(nullptr);
  }

  CMsgGCToClientBattlePassRollupListResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientBattlePassRollupListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientBattlePassRollupListResponse& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollupListResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientBattlePassRollupListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientBattlePassRollupListResponse_EventInfo EventInfo;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientBattlePassRollupListResponse.EventInfo event_info = 1;
  int event_info_size() const;
  void clear_event_info();
  static const int kEventInfoFieldNumber = 1;
  ::proto::dota::CMsgGCToClientBattlePassRollupListResponse_EventInfo* mutable_event_info(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollupListResponse_EventInfo >*
      mutable_event_info();
  const ::proto::dota::CMsgGCToClientBattlePassRollupListResponse_EventInfo& event_info(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollupListResponse_EventInfo* add_event_info();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollupListResponse_EventInfo >&
      event_info() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollupListResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollupListResponse_EventInfo > event_info_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCTransferSeasonalMMRRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCTransferSeasonalMMRRequest) */ {
 public:
  CMsgClientToGCTransferSeasonalMMRRequest();
  virtual ~CMsgClientToGCTransferSeasonalMMRRequest();

  CMsgClientToGCTransferSeasonalMMRRequest(const CMsgClientToGCTransferSeasonalMMRRequest& from);

  inline CMsgClientToGCTransferSeasonalMMRRequest& operator=(const CMsgClientToGCTransferSeasonalMMRRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCTransferSeasonalMMRRequest(CMsgClientToGCTransferSeasonalMMRRequest&& from) noexcept
    : CMsgClientToGCTransferSeasonalMMRRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCTransferSeasonalMMRRequest& operator=(CMsgClientToGCTransferSeasonalMMRRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCTransferSeasonalMMRRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCTransferSeasonalMMRRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCTransferSeasonalMMRRequest*>(
               &_CMsgClientToGCTransferSeasonalMMRRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    311;

  void Swap(CMsgClientToGCTransferSeasonalMMRRequest* other);
  friend void swap(CMsgClientToGCTransferSeasonalMMRRequest& a, CMsgClientToGCTransferSeasonalMMRRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCTransferSeasonalMMRRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCTransferSeasonalMMRRequest>(nullptr);
  }

  CMsgClientToGCTransferSeasonalMMRRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCTransferSeasonalMMRRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCTransferSeasonalMMRRequest& from);
  void MergeFrom(const CMsgClientToGCTransferSeasonalMMRRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCTransferSeasonalMMRRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_party = 1;
  bool has_is_party() const;
  void clear_is_party();
  static const int kIsPartyFieldNumber = 1;
  bool is_party() const;
  void set_is_party(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCTransferSeasonalMMRRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool is_party_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCTransferSeasonalMMRResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCTransferSeasonalMMRResponse) */ {
 public:
  CMsgClientToGCTransferSeasonalMMRResponse();
  virtual ~CMsgClientToGCTransferSeasonalMMRResponse();

  CMsgClientToGCTransferSeasonalMMRResponse(const CMsgClientToGCTransferSeasonalMMRResponse& from);

  inline CMsgClientToGCTransferSeasonalMMRResponse& operator=(const CMsgClientToGCTransferSeasonalMMRResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCTransferSeasonalMMRResponse(CMsgClientToGCTransferSeasonalMMRResponse&& from) noexcept
    : CMsgClientToGCTransferSeasonalMMRResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCTransferSeasonalMMRResponse& operator=(CMsgClientToGCTransferSeasonalMMRResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCTransferSeasonalMMRResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCTransferSeasonalMMRResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCTransferSeasonalMMRResponse*>(
               &_CMsgClientToGCTransferSeasonalMMRResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    312;

  void Swap(CMsgClientToGCTransferSeasonalMMRResponse* other);
  friend void swap(CMsgClientToGCTransferSeasonalMMRResponse& a, CMsgClientToGCTransferSeasonalMMRResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCTransferSeasonalMMRResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCTransferSeasonalMMRResponse>(nullptr);
  }

  CMsgClientToGCTransferSeasonalMMRResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCTransferSeasonalMMRResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCTransferSeasonalMMRResponse& from);
  void MergeFrom(const CMsgClientToGCTransferSeasonalMMRResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCTransferSeasonalMMRResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCTransferSeasonalMMRResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool success_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientPlaytestStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientPlaytestStatus) */ {
 public:
  CMsgGCToClientPlaytestStatus();
  virtual ~CMsgGCToClientPlaytestStatus();

  CMsgGCToClientPlaytestStatus(const CMsgGCToClientPlaytestStatus& from);

  inline CMsgGCToClientPlaytestStatus& operator=(const CMsgGCToClientPlaytestStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientPlaytestStatus(CMsgGCToClientPlaytestStatus&& from) noexcept
    : CMsgGCToClientPlaytestStatus() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientPlaytestStatus& operator=(CMsgGCToClientPlaytestStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientPlaytestStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientPlaytestStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientPlaytestStatus*>(
               &_CMsgGCToClientPlaytestStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    313;

  void Swap(CMsgGCToClientPlaytestStatus* other);
  friend void swap(CMsgGCToClientPlaytestStatus& a, CMsgGCToClientPlaytestStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientPlaytestStatus* New() const final {
    return CreateMaybeMessage<CMsgGCToClientPlaytestStatus>(nullptr);
  }

  CMsgGCToClientPlaytestStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientPlaytestStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientPlaytestStatus& from);
  void MergeFrom(const CMsgGCToClientPlaytestStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientPlaytestStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool active = 1;
  bool has_active() const;
  void clear_active();
  static const int kActiveFieldNumber = 1;
  bool active() const;
  void set_active(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientPlaytestStatus)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool active_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCJoinPlaytest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCJoinPlaytest) */ {
 public:
  CMsgClientToGCJoinPlaytest();
  virtual ~CMsgClientToGCJoinPlaytest();

  CMsgClientToGCJoinPlaytest(const CMsgClientToGCJoinPlaytest& from);

  inline CMsgClientToGCJoinPlaytest& operator=(const CMsgClientToGCJoinPlaytest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCJoinPlaytest(CMsgClientToGCJoinPlaytest&& from) noexcept
    : CMsgClientToGCJoinPlaytest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCJoinPlaytest& operator=(CMsgClientToGCJoinPlaytest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCJoinPlaytest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCJoinPlaytest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCJoinPlaytest*>(
               &_CMsgClientToGCJoinPlaytest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    314;

  void Swap(CMsgClientToGCJoinPlaytest* other);
  friend void swap(CMsgClientToGCJoinPlaytest& a, CMsgClientToGCJoinPlaytest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCJoinPlaytest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCJoinPlaytest>(nullptr);
  }

  CMsgClientToGCJoinPlaytest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCJoinPlaytest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCJoinPlaytest& from);
  void MergeFrom(const CMsgClientToGCJoinPlaytest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCJoinPlaytest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 client_version = 1;
  bool has_client_version() const;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 1;
  ::google::protobuf::uint32 client_version() const;
  void set_client_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCJoinPlaytest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 client_version_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCJoinPlaytestResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCJoinPlaytestResponse) */ {
 public:
  CMsgClientToGCJoinPlaytestResponse();
  virtual ~CMsgClientToGCJoinPlaytestResponse();

  CMsgClientToGCJoinPlaytestResponse(const CMsgClientToGCJoinPlaytestResponse& from);

  inline CMsgClientToGCJoinPlaytestResponse& operator=(const CMsgClientToGCJoinPlaytestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCJoinPlaytestResponse(CMsgClientToGCJoinPlaytestResponse&& from) noexcept
    : CMsgClientToGCJoinPlaytestResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCJoinPlaytestResponse& operator=(CMsgClientToGCJoinPlaytestResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCJoinPlaytestResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCJoinPlaytestResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCJoinPlaytestResponse*>(
               &_CMsgClientToGCJoinPlaytestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    315;

  void Swap(CMsgClientToGCJoinPlaytestResponse* other);
  friend void swap(CMsgClientToGCJoinPlaytestResponse& a, CMsgClientToGCJoinPlaytestResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCJoinPlaytestResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCJoinPlaytestResponse>(nullptr);
  }

  CMsgClientToGCJoinPlaytestResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCJoinPlaytestResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCJoinPlaytestResponse& from);
  void MergeFrom(const CMsgClientToGCJoinPlaytestResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCJoinPlaytestResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCJoinPlaytestResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASetFavoriteTeam final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASetFavoriteTeam) */ {
 public:
  CMsgDOTASetFavoriteTeam();
  virtual ~CMsgDOTASetFavoriteTeam();

  CMsgDOTASetFavoriteTeam(const CMsgDOTASetFavoriteTeam& from);

  inline CMsgDOTASetFavoriteTeam& operator=(const CMsgDOTASetFavoriteTeam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASetFavoriteTeam(CMsgDOTASetFavoriteTeam&& from) noexcept
    : CMsgDOTASetFavoriteTeam() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASetFavoriteTeam& operator=(CMsgDOTASetFavoriteTeam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASetFavoriteTeam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASetFavoriteTeam* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASetFavoriteTeam*>(
               &_CMsgDOTASetFavoriteTeam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    316;

  void Swap(CMsgDOTASetFavoriteTeam* other);
  friend void swap(CMsgDOTASetFavoriteTeam& a, CMsgDOTASetFavoriteTeam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASetFavoriteTeam* New() const final {
    return CreateMaybeMessage<CMsgDOTASetFavoriteTeam>(nullptr);
  }

  CMsgDOTASetFavoriteTeam* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASetFavoriteTeam>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASetFavoriteTeam& from);
  void MergeFrom(const CMsgDOTASetFavoriteTeam& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASetFavoriteTeam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // optional uint32 event_id = 2;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASetFavoriteTeam)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTATriviaQuestion final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTATriviaQuestion) */ {
 public:
  CMsgDOTATriviaQuestion();
  virtual ~CMsgDOTATriviaQuestion();

  CMsgDOTATriviaQuestion(const CMsgDOTATriviaQuestion& from);

  inline CMsgDOTATriviaQuestion& operator=(const CMsgDOTATriviaQuestion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTATriviaQuestion(CMsgDOTATriviaQuestion&& from) noexcept
    : CMsgDOTATriviaQuestion() {
    *this = ::std::move(from);
  }

  inline CMsgDOTATriviaQuestion& operator=(CMsgDOTATriviaQuestion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTATriviaQuestion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTATriviaQuestion* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTATriviaQuestion*>(
               &_CMsgDOTATriviaQuestion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    317;

  void Swap(CMsgDOTATriviaQuestion* other);
  friend void swap(CMsgDOTATriviaQuestion& a, CMsgDOTATriviaQuestion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTATriviaQuestion* New() const final {
    return CreateMaybeMessage<CMsgDOTATriviaQuestion>(nullptr);
  }

  CMsgDOTATriviaQuestion* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTATriviaQuestion>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTATriviaQuestion& from);
  void MergeFrom(const CMsgDOTATriviaQuestion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTATriviaQuestion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string answer_values = 5;
  int answer_values_size() const;
  void clear_answer_values();
  static const int kAnswerValuesFieldNumber = 5;
  const ::std::string& answer_values(int index) const;
  ::std::string* mutable_answer_values(int index);
  void set_answer_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_answer_values(int index, ::std::string&& value);
  #endif
  void set_answer_values(int index, const char* value);
  void set_answer_values(int index, const char* value, size_t size);
  ::std::string* add_answer_values();
  void add_answer_values(const ::std::string& value);
  #if LANG_CXX11
  void add_answer_values(::std::string&& value);
  #endif
  void add_answer_values(const char* value);
  void add_answer_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& answer_values() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_answer_values();

  // optional string question_value = 4;
  bool has_question_value() const;
  void clear_question_value();
  static const int kQuestionValueFieldNumber = 4;
  const ::std::string& question_value() const;
  void set_question_value(const ::std::string& value);
  #if LANG_CXX11
  void set_question_value(::std::string&& value);
  #endif
  void set_question_value(const char* value);
  void set_question_value(const char* value, size_t size);
  ::std::string* mutable_question_value();
  ::std::string* release_question_value();
  void set_allocated_question_value(::std::string* question_value);

  // optional uint32 question_id = 1;
  bool has_question_id() const;
  void clear_question_id();
  static const int kQuestionIdFieldNumber = 1;
  ::google::protobuf::uint32 question_id() const;
  void set_question_id(::google::protobuf::uint32 value);

  // optional .proto.dota.EDOTATriviaQuestionCategory category = 2 [default = k_EDOTATriviaQuestionCategory_AbilityIcon];
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 2;
  ::proto::dota::EDOTATriviaQuestionCategory category() const;
  void set_category(::proto::dota::EDOTATriviaQuestionCategory value);

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 correct_answer_index = 6;
  bool has_correct_answer_index() const;
  void clear_correct_answer_index();
  static const int kCorrectAnswerIndexFieldNumber = 6;
  ::google::protobuf::uint32 correct_answer_index() const;
  void set_correct_answer_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTATriviaQuestion)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> answer_values_;
  ::google::protobuf::internal::ArenaStringPtr question_value_;
  ::google::protobuf::uint32 question_id_;
  int category_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 correct_answer_index_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTATriviaCurrentQuestions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTATriviaCurrentQuestions) */ {
 public:
  CMsgDOTATriviaCurrentQuestions();
  virtual ~CMsgDOTATriviaCurrentQuestions();

  CMsgDOTATriviaCurrentQuestions(const CMsgDOTATriviaCurrentQuestions& from);

  inline CMsgDOTATriviaCurrentQuestions& operator=(const CMsgDOTATriviaCurrentQuestions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTATriviaCurrentQuestions(CMsgDOTATriviaCurrentQuestions&& from) noexcept
    : CMsgDOTATriviaCurrentQuestions() {
    *this = ::std::move(from);
  }

  inline CMsgDOTATriviaCurrentQuestions& operator=(CMsgDOTATriviaCurrentQuestions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTATriviaCurrentQuestions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTATriviaCurrentQuestions* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTATriviaCurrentQuestions*>(
               &_CMsgDOTATriviaCurrentQuestions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    318;

  void Swap(CMsgDOTATriviaCurrentQuestions* other);
  friend void swap(CMsgDOTATriviaCurrentQuestions& a, CMsgDOTATriviaCurrentQuestions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTATriviaCurrentQuestions* New() const final {
    return CreateMaybeMessage<CMsgDOTATriviaCurrentQuestions>(nullptr);
  }

  CMsgDOTATriviaCurrentQuestions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTATriviaCurrentQuestions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTATriviaCurrentQuestions& from);
  void MergeFrom(const CMsgDOTATriviaCurrentQuestions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTATriviaCurrentQuestions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTATriviaQuestion questions = 1;
  int questions_size() const;
  void clear_questions();
  static const int kQuestionsFieldNumber = 1;
  ::proto::dota::CMsgDOTATriviaQuestion* mutable_questions(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTATriviaQuestion >*
      mutable_questions();
  const ::proto::dota::CMsgDOTATriviaQuestion& questions(int index) const;
  ::proto::dota::CMsgDOTATriviaQuestion* add_questions();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTATriviaQuestion >&
      questions() const;

  // optional bool trivia_enabled = 2;
  bool has_trivia_enabled() const;
  void clear_trivia_enabled();
  static const int kTriviaEnabledFieldNumber = 2;
  bool trivia_enabled() const;
  void set_trivia_enabled(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTATriviaCurrentQuestions)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTATriviaQuestion > questions_;
  bool trivia_enabled_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTATriviaQuestionAnswersSummary final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTATriviaQuestionAnswersSummary) */ {
 public:
  CMsgDOTATriviaQuestionAnswersSummary();
  virtual ~CMsgDOTATriviaQuestionAnswersSummary();

  CMsgDOTATriviaQuestionAnswersSummary(const CMsgDOTATriviaQuestionAnswersSummary& from);

  inline CMsgDOTATriviaQuestionAnswersSummary& operator=(const CMsgDOTATriviaQuestionAnswersSummary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTATriviaQuestionAnswersSummary(CMsgDOTATriviaQuestionAnswersSummary&& from) noexcept
    : CMsgDOTATriviaQuestionAnswersSummary() {
    *this = ::std::move(from);
  }

  inline CMsgDOTATriviaQuestionAnswersSummary& operator=(CMsgDOTATriviaQuestionAnswersSummary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTATriviaQuestionAnswersSummary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTATriviaQuestionAnswersSummary* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTATriviaQuestionAnswersSummary*>(
               &_CMsgDOTATriviaQuestionAnswersSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    319;

  void Swap(CMsgDOTATriviaQuestionAnswersSummary* other);
  friend void swap(CMsgDOTATriviaQuestionAnswersSummary& a, CMsgDOTATriviaQuestionAnswersSummary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTATriviaQuestionAnswersSummary* New() const final {
    return CreateMaybeMessage<CMsgDOTATriviaQuestionAnswersSummary>(nullptr);
  }

  CMsgDOTATriviaQuestionAnswersSummary* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTATriviaQuestionAnswersSummary>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTATriviaQuestionAnswersSummary& from);
  void MergeFrom(const CMsgDOTATriviaQuestionAnswersSummary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTATriviaQuestionAnswersSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 picked_count = 2;
  int picked_count_size() const;
  void clear_picked_count();
  static const int kPickedCountFieldNumber = 2;
  ::google::protobuf::uint32 picked_count(int index) const;
  void set_picked_count(int index, ::google::protobuf::uint32 value);
  void add_picked_count(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      picked_count() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_picked_count();

  // optional bool summary_available = 1;
  bool has_summary_available() const;
  void clear_summary_available();
  static const int kSummaryAvailableFieldNumber = 1;
  bool summary_available() const;
  void set_summary_available(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTATriviaQuestionAnswersSummary)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > picked_count_;
  bool summary_available_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitTriviaQuestionAnswer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASubmitTriviaQuestionAnswer) */ {
 public:
  CMsgDOTASubmitTriviaQuestionAnswer();
  virtual ~CMsgDOTASubmitTriviaQuestionAnswer();

  CMsgDOTASubmitTriviaQuestionAnswer(const CMsgDOTASubmitTriviaQuestionAnswer& from);

  inline CMsgDOTASubmitTriviaQuestionAnswer& operator=(const CMsgDOTASubmitTriviaQuestionAnswer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASubmitTriviaQuestionAnswer(CMsgDOTASubmitTriviaQuestionAnswer&& from) noexcept
    : CMsgDOTASubmitTriviaQuestionAnswer() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASubmitTriviaQuestionAnswer& operator=(CMsgDOTASubmitTriviaQuestionAnswer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASubmitTriviaQuestionAnswer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASubmitTriviaQuestionAnswer* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASubmitTriviaQuestionAnswer*>(
               &_CMsgDOTASubmitTriviaQuestionAnswer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    320;

  void Swap(CMsgDOTASubmitTriviaQuestionAnswer* other);
  friend void swap(CMsgDOTASubmitTriviaQuestionAnswer& a, CMsgDOTASubmitTriviaQuestionAnswer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASubmitTriviaQuestionAnswer* New() const final {
    return CreateMaybeMessage<CMsgDOTASubmitTriviaQuestionAnswer>(nullptr);
  }

  CMsgDOTASubmitTriviaQuestionAnswer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASubmitTriviaQuestionAnswer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASubmitTriviaQuestionAnswer& from);
  void MergeFrom(const CMsgDOTASubmitTriviaQuestionAnswer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASubmitTriviaQuestionAnswer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 question_id = 1;
  bool has_question_id() const;
  void clear_question_id();
  static const int kQuestionIdFieldNumber = 1;
  ::google::protobuf::uint32 question_id() const;
  void set_question_id(::google::protobuf::uint32 value);

  // optional uint32 answer_index = 2;
  bool has_answer_index() const;
  void clear_answer_index();
  static const int kAnswerIndexFieldNumber = 2;
  ::google::protobuf::uint32 answer_index() const;
  void set_answer_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASubmitTriviaQuestionAnswer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 question_id_;
  ::google::protobuf::uint32 answer_index_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitTriviaQuestionAnswerResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASubmitTriviaQuestionAnswerResponse) */ {
 public:
  CMsgDOTASubmitTriviaQuestionAnswerResponse();
  virtual ~CMsgDOTASubmitTriviaQuestionAnswerResponse();

  CMsgDOTASubmitTriviaQuestionAnswerResponse(const CMsgDOTASubmitTriviaQuestionAnswerResponse& from);

  inline CMsgDOTASubmitTriviaQuestionAnswerResponse& operator=(const CMsgDOTASubmitTriviaQuestionAnswerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASubmitTriviaQuestionAnswerResponse(CMsgDOTASubmitTriviaQuestionAnswerResponse&& from) noexcept
    : CMsgDOTASubmitTriviaQuestionAnswerResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASubmitTriviaQuestionAnswerResponse& operator=(CMsgDOTASubmitTriviaQuestionAnswerResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASubmitTriviaQuestionAnswerResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASubmitTriviaQuestionAnswerResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASubmitTriviaQuestionAnswerResponse*>(
               &_CMsgDOTASubmitTriviaQuestionAnswerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    321;

  void Swap(CMsgDOTASubmitTriviaQuestionAnswerResponse* other);
  friend void swap(CMsgDOTASubmitTriviaQuestionAnswerResponse& a, CMsgDOTASubmitTriviaQuestionAnswerResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASubmitTriviaQuestionAnswerResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTASubmitTriviaQuestionAnswerResponse>(nullptr);
  }

  CMsgDOTASubmitTriviaQuestionAnswerResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASubmitTriviaQuestionAnswerResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASubmitTriviaQuestionAnswerResponse& from);
  void MergeFrom(const CMsgDOTASubmitTriviaQuestionAnswerResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASubmitTriviaQuestionAnswerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EDOTATriviaAnswerResult result = 1 [default = k_EDOTATriviaAnswerResult_Success];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::EDOTATriviaAnswerResult result() const;
  void set_result(::proto::dota::EDOTATriviaAnswerResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASubmitTriviaQuestionAnswerResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAStartTriviaSession final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAStartTriviaSession) */ {
 public:
  CMsgDOTAStartTriviaSession();
  virtual ~CMsgDOTAStartTriviaSession();

  CMsgDOTAStartTriviaSession(const CMsgDOTAStartTriviaSession& from);

  inline CMsgDOTAStartTriviaSession& operator=(const CMsgDOTAStartTriviaSession& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAStartTriviaSession(CMsgDOTAStartTriviaSession&& from) noexcept
    : CMsgDOTAStartTriviaSession() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAStartTriviaSession& operator=(CMsgDOTAStartTriviaSession&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAStartTriviaSession& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAStartTriviaSession* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAStartTriviaSession*>(
               &_CMsgDOTAStartTriviaSession_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    322;

  void Swap(CMsgDOTAStartTriviaSession* other);
  friend void swap(CMsgDOTAStartTriviaSession& a, CMsgDOTAStartTriviaSession& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAStartTriviaSession* New() const final {
    return CreateMaybeMessage<CMsgDOTAStartTriviaSession>(nullptr);
  }

  CMsgDOTAStartTriviaSession* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAStartTriviaSession>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAStartTriviaSession& from);
  void MergeFrom(const CMsgDOTAStartTriviaSession& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAStartTriviaSession* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAStartTriviaSession)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAStartTriviaSessionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAStartTriviaSessionResponse) */ {
 public:
  CMsgDOTAStartTriviaSessionResponse();
  virtual ~CMsgDOTAStartTriviaSessionResponse();

  CMsgDOTAStartTriviaSessionResponse(const CMsgDOTAStartTriviaSessionResponse& from);

  inline CMsgDOTAStartTriviaSessionResponse& operator=(const CMsgDOTAStartTriviaSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAStartTriviaSessionResponse(CMsgDOTAStartTriviaSessionResponse&& from) noexcept
    : CMsgDOTAStartTriviaSessionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAStartTriviaSessionResponse& operator=(CMsgDOTAStartTriviaSessionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAStartTriviaSessionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAStartTriviaSessionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAStartTriviaSessionResponse*>(
               &_CMsgDOTAStartTriviaSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    323;

  void Swap(CMsgDOTAStartTriviaSessionResponse* other);
  friend void swap(CMsgDOTAStartTriviaSessionResponse& a, CMsgDOTAStartTriviaSessionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAStartTriviaSessionResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAStartTriviaSessionResponse>(nullptr);
  }

  CMsgDOTAStartTriviaSessionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAStartTriviaSessionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAStartTriviaSessionResponse& from);
  void MergeFrom(const CMsgDOTAStartTriviaSessionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAStartTriviaSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool trivia_enabled = 1;
  bool has_trivia_enabled() const;
  void clear_trivia_enabled();
  static const int kTriviaEnabledFieldNumber = 1;
  bool trivia_enabled() const;
  void set_trivia_enabled(bool value);

  // optional uint32 current_timestamp = 2;
  bool has_current_timestamp() const;
  void clear_current_timestamp();
  static const int kCurrentTimestampFieldNumber = 2;
  ::google::protobuf::uint32 current_timestamp() const;
  void set_current_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAStartTriviaSessionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool trivia_enabled_;
  ::google::protobuf::uint32 current_timestamp_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGiveTip final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGiveTip) */ {
 public:
  CMsgClientToGCGiveTip();
  virtual ~CMsgClientToGCGiveTip();

  CMsgClientToGCGiveTip(const CMsgClientToGCGiveTip& from);

  inline CMsgClientToGCGiveTip& operator=(const CMsgClientToGCGiveTip& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGiveTip(CMsgClientToGCGiveTip&& from) noexcept
    : CMsgClientToGCGiveTip() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGiveTip& operator=(CMsgClientToGCGiveTip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGiveTip& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGiveTip* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGiveTip*>(
               &_CMsgClientToGCGiveTip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    324;

  void Swap(CMsgClientToGCGiveTip* other);
  friend void swap(CMsgClientToGCGiveTip& a, CMsgClientToGCGiveTip& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGiveTip* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGiveTip>(nullptr);
  }

  CMsgClientToGCGiveTip* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGiveTip>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGiveTip& from);
  void MergeFrom(const CMsgClientToGCGiveTip& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGiveTip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 recipient_account_id = 1;
  bool has_recipient_account_id() const;
  void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 recipient_account_id() const;
  void set_recipient_account_id(::google::protobuf::uint32 value);

  // optional uint32 event_id = 3;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 3;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGiveTip)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 recipient_account_id_;
  ::google::protobuf::uint32 event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGiveTipResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGiveTipResponse) */ {
 public:
  CMsgClientToGCGiveTipResponse();
  virtual ~CMsgClientToGCGiveTipResponse();

  CMsgClientToGCGiveTipResponse(const CMsgClientToGCGiveTipResponse& from);

  inline CMsgClientToGCGiveTipResponse& operator=(const CMsgClientToGCGiveTipResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCGiveTipResponse(CMsgClientToGCGiveTipResponse&& from) noexcept
    : CMsgClientToGCGiveTipResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGiveTipResponse& operator=(CMsgClientToGCGiveTipResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCGiveTipResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCGiveTipResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGiveTipResponse*>(
               &_CMsgClientToGCGiveTipResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    325;

  void Swap(CMsgClientToGCGiveTipResponse* other);
  friend void swap(CMsgClientToGCGiveTipResponse& a, CMsgClientToGCGiveTipResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGiveTipResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGiveTipResponse>(nullptr);
  }

  CMsgClientToGCGiveTipResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGiveTipResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCGiveTipResponse& from);
  void MergeFrom(const CMsgClientToGCGiveTipResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGiveTipResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGiveTipResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCGiveTipResponse_Result_SUCCESS;
  static const Result ERROR_ALREADY_TIPPED =
    CMsgClientToGCGiveTipResponse_Result_ERROR_ALREADY_TIPPED;
  static const Result ERROR_INVALID_MATCH_ID =
    CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_MATCH_ID;
  static const Result ERROR_INVALID_EVENT_ID =
    CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_EVENT_ID;
  static const Result ERROR_INVALID_MATCH_TIME =
    CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_MATCH_TIME;
  static const Result ERROR_NOT_WINNER =
    CMsgClientToGCGiveTipResponse_Result_ERROR_NOT_WINNER;
  static const Result ERROR_UNOWNED_EVENT =
    CMsgClientToGCGiveTipResponse_Result_ERROR_UNOWNED_EVENT;
  static const Result ERROR_INVALID_LOBBY_TYPE =
    CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_LOBBY_TYPE;
  static const Result ERROR_UNKNOWN =
    CMsgClientToGCGiveTipResponse_Result_ERROR_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCGiveTipResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCGiveTipResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCGiveTipResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCGiveTipResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCGiveTipResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCGiveTipResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCGiveTipResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCGiveTipResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCGiveTipResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCGiveTipResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGiveTipResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAAnchorPhoneNumberRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAAnchorPhoneNumberRequest) */ {
 public:
  CMsgDOTAAnchorPhoneNumberRequest();
  virtual ~CMsgDOTAAnchorPhoneNumberRequest();

  CMsgDOTAAnchorPhoneNumberRequest(const CMsgDOTAAnchorPhoneNumberRequest& from);

  inline CMsgDOTAAnchorPhoneNumberRequest& operator=(const CMsgDOTAAnchorPhoneNumberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAAnchorPhoneNumberRequest(CMsgDOTAAnchorPhoneNumberRequest&& from) noexcept
    : CMsgDOTAAnchorPhoneNumberRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAAnchorPhoneNumberRequest& operator=(CMsgDOTAAnchorPhoneNumberRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAAnchorPhoneNumberRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAAnchorPhoneNumberRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAAnchorPhoneNumberRequest*>(
               &_CMsgDOTAAnchorPhoneNumberRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    326;

  void Swap(CMsgDOTAAnchorPhoneNumberRequest* other);
  friend void swap(CMsgDOTAAnchorPhoneNumberRequest& a, CMsgDOTAAnchorPhoneNumberRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAAnchorPhoneNumberRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTAAnchorPhoneNumberRequest>(nullptr);
  }

  CMsgDOTAAnchorPhoneNumberRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAAnchorPhoneNumberRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAAnchorPhoneNumberRequest& from);
  void MergeFrom(const CMsgDOTAAnchorPhoneNumberRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAAnchorPhoneNumberRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAAnchorPhoneNumberRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAAnchorPhoneNumberResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAAnchorPhoneNumberResponse) */ {
 public:
  CMsgDOTAAnchorPhoneNumberResponse();
  virtual ~CMsgDOTAAnchorPhoneNumberResponse();

  CMsgDOTAAnchorPhoneNumberResponse(const CMsgDOTAAnchorPhoneNumberResponse& from);

  inline CMsgDOTAAnchorPhoneNumberResponse& operator=(const CMsgDOTAAnchorPhoneNumberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAAnchorPhoneNumberResponse(CMsgDOTAAnchorPhoneNumberResponse&& from) noexcept
    : CMsgDOTAAnchorPhoneNumberResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAAnchorPhoneNumberResponse& operator=(CMsgDOTAAnchorPhoneNumberResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAAnchorPhoneNumberResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAAnchorPhoneNumberResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAAnchorPhoneNumberResponse*>(
               &_CMsgDOTAAnchorPhoneNumberResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    327;

  void Swap(CMsgDOTAAnchorPhoneNumberResponse* other);
  friend void swap(CMsgDOTAAnchorPhoneNumberResponse& a, CMsgDOTAAnchorPhoneNumberResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAAnchorPhoneNumberResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAAnchorPhoneNumberResponse>(nullptr);
  }

  CMsgDOTAAnchorPhoneNumberResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAAnchorPhoneNumberResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAAnchorPhoneNumberResponse& from);
  void MergeFrom(const CMsgDOTAAnchorPhoneNumberResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAAnchorPhoneNumberResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAAnchorPhoneNumberResponse_Result Result;
  static const Result SUCCESS =
    CMsgDOTAAnchorPhoneNumberResponse_Result_SUCCESS;
  static const Result ERROR_UNKNOWN =
    CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_UNKNOWN;
  static const Result ERROR_NO_STEAM_PHONE =
    CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_NO_STEAM_PHONE;
  static const Result ERROR_ALREADY_IN_USE =
    CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_ALREADY_IN_USE;
  static const Result ERROR_COOLDOWN_ACTIVE =
    CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_COOLDOWN_ACTIVE;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTAAnchorPhoneNumberResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTAAnchorPhoneNumberResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTAAnchorPhoneNumberResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTAAnchorPhoneNumberResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTAAnchorPhoneNumberResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTAAnchorPhoneNumberResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTAAnchorPhoneNumberResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAAnchorPhoneNumberResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result result() const;
  void set_result(::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAAnchorPhoneNumberResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAUnanchorPhoneNumberRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAUnanchorPhoneNumberRequest) */ {
 public:
  CMsgDOTAUnanchorPhoneNumberRequest();
  virtual ~CMsgDOTAUnanchorPhoneNumberRequest();

  CMsgDOTAUnanchorPhoneNumberRequest(const CMsgDOTAUnanchorPhoneNumberRequest& from);

  inline CMsgDOTAUnanchorPhoneNumberRequest& operator=(const CMsgDOTAUnanchorPhoneNumberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAUnanchorPhoneNumberRequest(CMsgDOTAUnanchorPhoneNumberRequest&& from) noexcept
    : CMsgDOTAUnanchorPhoneNumberRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAUnanchorPhoneNumberRequest& operator=(CMsgDOTAUnanchorPhoneNumberRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAUnanchorPhoneNumberRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAUnanchorPhoneNumberRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAUnanchorPhoneNumberRequest*>(
               &_CMsgDOTAUnanchorPhoneNumberRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    328;

  void Swap(CMsgDOTAUnanchorPhoneNumberRequest* other);
  friend void swap(CMsgDOTAUnanchorPhoneNumberRequest& a, CMsgDOTAUnanchorPhoneNumberRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAUnanchorPhoneNumberRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTAUnanchorPhoneNumberRequest>(nullptr);
  }

  CMsgDOTAUnanchorPhoneNumberRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAUnanchorPhoneNumberRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAUnanchorPhoneNumberRequest& from);
  void MergeFrom(const CMsgDOTAUnanchorPhoneNumberRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAUnanchorPhoneNumberRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAUnanchorPhoneNumberRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAUnanchorPhoneNumberResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAUnanchorPhoneNumberResponse) */ {
 public:
  CMsgDOTAUnanchorPhoneNumberResponse();
  virtual ~CMsgDOTAUnanchorPhoneNumberResponse();

  CMsgDOTAUnanchorPhoneNumberResponse(const CMsgDOTAUnanchorPhoneNumberResponse& from);

  inline CMsgDOTAUnanchorPhoneNumberResponse& operator=(const CMsgDOTAUnanchorPhoneNumberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAUnanchorPhoneNumberResponse(CMsgDOTAUnanchorPhoneNumberResponse&& from) noexcept
    : CMsgDOTAUnanchorPhoneNumberResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAUnanchorPhoneNumberResponse& operator=(CMsgDOTAUnanchorPhoneNumberResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAUnanchorPhoneNumberResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAUnanchorPhoneNumberResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAUnanchorPhoneNumberResponse*>(
               &_CMsgDOTAUnanchorPhoneNumberResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    329;

  void Swap(CMsgDOTAUnanchorPhoneNumberResponse* other);
  friend void swap(CMsgDOTAUnanchorPhoneNumberResponse& a, CMsgDOTAUnanchorPhoneNumberResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAUnanchorPhoneNumberResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAUnanchorPhoneNumberResponse>(nullptr);
  }

  CMsgDOTAUnanchorPhoneNumberResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAUnanchorPhoneNumberResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAUnanchorPhoneNumberResponse& from);
  void MergeFrom(const CMsgDOTAUnanchorPhoneNumberResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAUnanchorPhoneNumberResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAUnanchorPhoneNumberResponse_Result Result;
  static const Result SUCCESS =
    CMsgDOTAUnanchorPhoneNumberResponse_Result_SUCCESS;
  static const Result ERROR_UNKNOWN =
    CMsgDOTAUnanchorPhoneNumberResponse_Result_ERROR_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTAUnanchorPhoneNumberResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTAUnanchorPhoneNumberResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTAUnanchorPhoneNumberResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTAUnanchorPhoneNumberResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAUnanchorPhoneNumberResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result result() const;
  void set_result(::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAUnanchorPhoneNumberResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientTipNotification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientTipNotification) */ {
 public:
  CMsgGCToClientTipNotification();
  virtual ~CMsgGCToClientTipNotification();

  CMsgGCToClientTipNotification(const CMsgGCToClientTipNotification& from);

  inline CMsgGCToClientTipNotification& operator=(const CMsgGCToClientTipNotification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientTipNotification(CMsgGCToClientTipNotification&& from) noexcept
    : CMsgGCToClientTipNotification() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientTipNotification& operator=(CMsgGCToClientTipNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientTipNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientTipNotification* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientTipNotification*>(
               &_CMsgGCToClientTipNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    330;

  void Swap(CMsgGCToClientTipNotification* other);
  friend void swap(CMsgGCToClientTipNotification& a, CMsgGCToClientTipNotification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientTipNotification* New() const final {
    return CreateMaybeMessage<CMsgGCToClientTipNotification>(nullptr);
  }

  CMsgGCToClientTipNotification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientTipNotification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientTipNotification& from);
  void MergeFrom(const CMsgGCToClientTipNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientTipNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tipper_name = 2;
  bool has_tipper_name() const;
  void clear_tipper_name();
  static const int kTipperNameFieldNumber = 2;
  const ::std::string& tipper_name() const;
  void set_tipper_name(const ::std::string& value);
  #if LANG_CXX11
  void set_tipper_name(::std::string&& value);
  #endif
  void set_tipper_name(const char* value);
  void set_tipper_name(const char* value, size_t size);
  ::std::string* mutable_tipper_name();
  ::std::string* release_tipper_name();
  void set_allocated_tipper_name(::std::string* tipper_name);

  // optional string recipient_name = 4;
  bool has_recipient_name() const;
  void clear_recipient_name();
  static const int kRecipientNameFieldNumber = 4;
  const ::std::string& recipient_name() const;
  void set_recipient_name(const ::std::string& value);
  #if LANG_CXX11
  void set_recipient_name(::std::string&& value);
  #endif
  void set_recipient_name(const char* value);
  void set_recipient_name(const char* value, size_t size);
  ::std::string* mutable_recipient_name();
  ::std::string* release_recipient_name();
  void set_allocated_recipient_name(::std::string* recipient_name);

  // optional uint32 tipper_account_id = 1;
  bool has_tipper_account_id() const;
  void clear_tipper_account_id();
  static const int kTipperAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 tipper_account_id() const;
  void set_tipper_account_id(::google::protobuf::uint32 value);

  // optional uint32 recipient_account_id = 3;
  bool has_recipient_account_id() const;
  void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 3;
  ::google::protobuf::uint32 recipient_account_id() const;
  void set_recipient_account_id(::google::protobuf::uint32 value);

  // optional uint32 event_id = 5;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 5;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientTipNotification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tipper_name_;
  ::google::protobuf::internal::ArenaStringPtr recipient_name_;
  ::google::protobuf::uint32 tipper_account_id_;
  ::google::protobuf::uint32 recipient_account_id_;
  ::google::protobuf::uint32 event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientCommendNotification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientCommendNotification) */ {
 public:
  CMsgGCToClientCommendNotification();
  virtual ~CMsgGCToClientCommendNotification();

  CMsgGCToClientCommendNotification(const CMsgGCToClientCommendNotification& from);

  inline CMsgGCToClientCommendNotification& operator=(const CMsgGCToClientCommendNotification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientCommendNotification(CMsgGCToClientCommendNotification&& from) noexcept
    : CMsgGCToClientCommendNotification() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientCommendNotification& operator=(CMsgGCToClientCommendNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientCommendNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientCommendNotification* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientCommendNotification*>(
               &_CMsgGCToClientCommendNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    331;

  void Swap(CMsgGCToClientCommendNotification* other);
  friend void swap(CMsgGCToClientCommendNotification& a, CMsgGCToClientCommendNotification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientCommendNotification* New() const final {
    return CreateMaybeMessage<CMsgGCToClientCommendNotification>(nullptr);
  }

  CMsgGCToClientCommendNotification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientCommendNotification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientCommendNotification& from);
  void MergeFrom(const CMsgGCToClientCommendNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientCommendNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string commender_name = 2;
  bool has_commender_name() const;
  void clear_commender_name();
  static const int kCommenderNameFieldNumber = 2;
  const ::std::string& commender_name() const;
  void set_commender_name(const ::std::string& value);
  #if LANG_CXX11
  void set_commender_name(::std::string&& value);
  #endif
  void set_commender_name(const char* value);
  void set_commender_name(const char* value, size_t size);
  ::std::string* mutable_commender_name();
  ::std::string* release_commender_name();
  void set_allocated_commender_name(::std::string* commender_name);

  // optional uint32 commender_account_id = 1;
  bool has_commender_account_id() const;
  void clear_commender_account_id();
  static const int kCommenderAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 commender_account_id() const;
  void set_commender_account_id(::google::protobuf::uint32 value);

  // optional uint32 flags = 3;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientCommendNotification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr commender_name_;
  ::google::protobuf::uint32 commender_account_id_;
  ::google::protobuf::uint32 flags_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientAllStarVotesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientAllStarVotesRequest) */ {
 public:
  CMsgGCToClientAllStarVotesRequest();
  virtual ~CMsgGCToClientAllStarVotesRequest();

  CMsgGCToClientAllStarVotesRequest(const CMsgGCToClientAllStarVotesRequest& from);

  inline CMsgGCToClientAllStarVotesRequest& operator=(const CMsgGCToClientAllStarVotesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientAllStarVotesRequest(CMsgGCToClientAllStarVotesRequest&& from) noexcept
    : CMsgGCToClientAllStarVotesRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientAllStarVotesRequest& operator=(CMsgGCToClientAllStarVotesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientAllStarVotesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientAllStarVotesRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientAllStarVotesRequest*>(
               &_CMsgGCToClientAllStarVotesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    332;

  void Swap(CMsgGCToClientAllStarVotesRequest* other);
  friend void swap(CMsgGCToClientAllStarVotesRequest& a, CMsgGCToClientAllStarVotesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientAllStarVotesRequest* New() const final {
    return CreateMaybeMessage<CMsgGCToClientAllStarVotesRequest>(nullptr);
  }

  CMsgGCToClientAllStarVotesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientAllStarVotesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientAllStarVotesRequest& from);
  void MergeFrom(const CMsgGCToClientAllStarVotesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientAllStarVotesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientAllStarVotesRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientAllStarVotesReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientAllStarVotesReply) */ {
 public:
  CMsgGCToClientAllStarVotesReply();
  virtual ~CMsgGCToClientAllStarVotesReply();

  CMsgGCToClientAllStarVotesReply(const CMsgGCToClientAllStarVotesReply& from);

  inline CMsgGCToClientAllStarVotesReply& operator=(const CMsgGCToClientAllStarVotesReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientAllStarVotesReply(CMsgGCToClientAllStarVotesReply&& from) noexcept
    : CMsgGCToClientAllStarVotesReply() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientAllStarVotesReply& operator=(CMsgGCToClientAllStarVotesReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientAllStarVotesReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientAllStarVotesReply* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientAllStarVotesReply*>(
               &_CMsgGCToClientAllStarVotesReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    333;

  void Swap(CMsgGCToClientAllStarVotesReply* other);
  friend void swap(CMsgGCToClientAllStarVotesReply& a, CMsgGCToClientAllStarVotesReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientAllStarVotesReply* New() const final {
    return CreateMaybeMessage<CMsgGCToClientAllStarVotesReply>(nullptr);
  }

  CMsgGCToClientAllStarVotesReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientAllStarVotesReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientAllStarVotesReply& from);
  void MergeFrom(const CMsgGCToClientAllStarVotesReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientAllStarVotesReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 player_account_ids = 1;
  int player_account_ids_size() const;
  void clear_player_account_ids();
  static const int kPlayerAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 player_account_ids(int index) const;
  void set_player_account_ids(int index, ::google::protobuf::uint32 value);
  void add_player_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      player_account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_player_account_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientAllStarVotesReply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > player_account_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientAllStarVotesSubmit final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientAllStarVotesSubmit) */ {
 public:
  CMsgGCToClientAllStarVotesSubmit();
  virtual ~CMsgGCToClientAllStarVotesSubmit();

  CMsgGCToClientAllStarVotesSubmit(const CMsgGCToClientAllStarVotesSubmit& from);

  inline CMsgGCToClientAllStarVotesSubmit& operator=(const CMsgGCToClientAllStarVotesSubmit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientAllStarVotesSubmit(CMsgGCToClientAllStarVotesSubmit&& from) noexcept
    : CMsgGCToClientAllStarVotesSubmit() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientAllStarVotesSubmit& operator=(CMsgGCToClientAllStarVotesSubmit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientAllStarVotesSubmit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientAllStarVotesSubmit* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientAllStarVotesSubmit*>(
               &_CMsgGCToClientAllStarVotesSubmit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    334;

  void Swap(CMsgGCToClientAllStarVotesSubmit* other);
  friend void swap(CMsgGCToClientAllStarVotesSubmit& a, CMsgGCToClientAllStarVotesSubmit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientAllStarVotesSubmit* New() const final {
    return CreateMaybeMessage<CMsgGCToClientAllStarVotesSubmit>(nullptr);
  }

  CMsgGCToClientAllStarVotesSubmit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientAllStarVotesSubmit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientAllStarVotesSubmit& from);
  void MergeFrom(const CMsgGCToClientAllStarVotesSubmit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientAllStarVotesSubmit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 player_account_ids = 2;
  int player_account_ids_size() const;
  void clear_player_account_ids();
  static const int kPlayerAccountIdsFieldNumber = 2;
  ::google::protobuf::uint32 player_account_ids(int index) const;
  void set_player_account_ids(int index, ::google::protobuf::uint32 value);
  void add_player_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      player_account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_player_account_ids();

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientAllStarVotesSubmit)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > player_account_ids_;
  ::google::protobuf::uint32 event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientAllStarVotesSubmitReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientAllStarVotesSubmitReply) */ {
 public:
  CMsgGCToClientAllStarVotesSubmitReply();
  virtual ~CMsgGCToClientAllStarVotesSubmitReply();

  CMsgGCToClientAllStarVotesSubmitReply(const CMsgGCToClientAllStarVotesSubmitReply& from);

  inline CMsgGCToClientAllStarVotesSubmitReply& operator=(const CMsgGCToClientAllStarVotesSubmitReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientAllStarVotesSubmitReply(CMsgGCToClientAllStarVotesSubmitReply&& from) noexcept
    : CMsgGCToClientAllStarVotesSubmitReply() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientAllStarVotesSubmitReply& operator=(CMsgGCToClientAllStarVotesSubmitReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientAllStarVotesSubmitReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientAllStarVotesSubmitReply* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientAllStarVotesSubmitReply*>(
               &_CMsgGCToClientAllStarVotesSubmitReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    335;

  void Swap(CMsgGCToClientAllStarVotesSubmitReply* other);
  friend void swap(CMsgGCToClientAllStarVotesSubmitReply& a, CMsgGCToClientAllStarVotesSubmitReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientAllStarVotesSubmitReply* New() const final {
    return CreateMaybeMessage<CMsgGCToClientAllStarVotesSubmitReply>(nullptr);
  }

  CMsgGCToClientAllStarVotesSubmitReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientAllStarVotesSubmitReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientAllStarVotesSubmitReply& from);
  void MergeFrom(const CMsgGCToClientAllStarVotesSubmitReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientAllStarVotesSubmitReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientAllStarVotesSubmitReply_Result Result;
  static const Result SUCCESS =
    CMsgGCToClientAllStarVotesSubmitReply_Result_SUCCESS;
  static const Result ERROR_INTERNAL =
    CMsgGCToClientAllStarVotesSubmitReply_Result_ERROR_INTERNAL;
  static const Result ERROR_INVALID_EVENT_ID =
    CMsgGCToClientAllStarVotesSubmitReply_Result_ERROR_INVALID_EVENT_ID;
  static const Result ERROR_INVALID_ACCOUNT_ID =
    CMsgGCToClientAllStarVotesSubmitReply_Result_ERROR_INVALID_ACCOUNT_ID;
  static const Result ERROR_SELECTIONS_LOCKED =
    CMsgGCToClientAllStarVotesSubmitReply_Result_ERROR_SELECTIONS_LOCKED;
  static inline bool Result_IsValid(int value) {
    return CMsgGCToClientAllStarVotesSubmitReply_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgGCToClientAllStarVotesSubmitReply_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgGCToClientAllStarVotesSubmitReply_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgGCToClientAllStarVotesSubmitReply_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgGCToClientAllStarVotesSubmitReply_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgGCToClientAllStarVotesSubmitReply_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgGCToClientAllStarVotesSubmitReply_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgGCToClientAllStarVotesSubmitReply.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgGCToClientAllStarVotesSubmitReply_Result result() const;
  void set_result(::proto::dota::CMsgGCToClientAllStarVotesSubmitReply_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientAllStarVotesSubmitReply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAClientToGCQuickStatsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClientToGCQuickStatsRequest) */ {
 public:
  CMsgDOTAClientToGCQuickStatsRequest();
  virtual ~CMsgDOTAClientToGCQuickStatsRequest();

  CMsgDOTAClientToGCQuickStatsRequest(const CMsgDOTAClientToGCQuickStatsRequest& from);

  inline CMsgDOTAClientToGCQuickStatsRequest& operator=(const CMsgDOTAClientToGCQuickStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAClientToGCQuickStatsRequest(CMsgDOTAClientToGCQuickStatsRequest&& from) noexcept
    : CMsgDOTAClientToGCQuickStatsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAClientToGCQuickStatsRequest& operator=(CMsgDOTAClientToGCQuickStatsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAClientToGCQuickStatsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAClientToGCQuickStatsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClientToGCQuickStatsRequest*>(
               &_CMsgDOTAClientToGCQuickStatsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    336;

  void Swap(CMsgDOTAClientToGCQuickStatsRequest* other);
  friend void swap(CMsgDOTAClientToGCQuickStatsRequest& a, CMsgDOTAClientToGCQuickStatsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAClientToGCQuickStatsRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTAClientToGCQuickStatsRequest>(nullptr);
  }

  CMsgDOTAClientToGCQuickStatsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAClientToGCQuickStatsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAClientToGCQuickStatsRequest& from);
  void MergeFrom(const CMsgDOTAClientToGCQuickStatsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAClientToGCQuickStatsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_account_id = 1;
  bool has_player_account_id() const;
  void clear_player_account_id();
  static const int kPlayerAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 player_account_id() const;
  void set_player_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 item_id = 3;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // optional uint32 league_id = 4;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 4;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClientToGCQuickStatsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 player_account_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 league_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAClientToGCQuickStatsResponse_SimpleStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats) */ {
 public:
  CMsgDOTAClientToGCQuickStatsResponse_SimpleStats();
  virtual ~CMsgDOTAClientToGCQuickStatsResponse_SimpleStats();

  CMsgDOTAClientToGCQuickStatsResponse_SimpleStats(const CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& from);

  inline CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& operator=(const CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAClientToGCQuickStatsResponse_SimpleStats(CMsgDOTAClientToGCQuickStatsResponse_SimpleStats&& from) noexcept
    : CMsgDOTAClientToGCQuickStatsResponse_SimpleStats() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& operator=(CMsgDOTAClientToGCQuickStatsResponse_SimpleStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClientToGCQuickStatsResponse_SimpleStats*>(
               &_CMsgDOTAClientToGCQuickStatsResponse_SimpleStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    337;

  void Swap(CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* other);
  friend void swap(CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& a, CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* New() const final {
    return CreateMaybeMessage<CMsgDOTAClientToGCQuickStatsResponse_SimpleStats>(nullptr);
  }

  CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAClientToGCQuickStatsResponse_SimpleStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& from);
  void MergeFrom(const CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float win_percent = 1;
  bool has_win_percent() const;
  void clear_win_percent();
  static const int kWinPercentFieldNumber = 1;
  float win_percent() const;
  void set_win_percent(float value);

  // optional float pick_percent = 2;
  bool has_pick_percent() const;
  void clear_pick_percent();
  static const int kPickPercentFieldNumber = 2;
  float pick_percent() const;
  void set_pick_percent(float value);

  // optional uint32 win_count = 3;
  bool has_win_count() const;
  void clear_win_count();
  static const int kWinCountFieldNumber = 3;
  ::google::protobuf::uint32 win_count() const;
  void set_win_count(::google::protobuf::uint32 value);

  // optional uint32 pick_count = 4;
  bool has_pick_count() const;
  void clear_pick_count();
  static const int kPickCountFieldNumber = 4;
  ::google::protobuf::uint32 pick_count() const;
  void set_pick_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float win_percent_;
  float pick_percent_;
  ::google::protobuf::uint32 win_count_;
  ::google::protobuf::uint32 pick_count_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAClientToGCQuickStatsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClientToGCQuickStatsResponse) */ {
 public:
  CMsgDOTAClientToGCQuickStatsResponse();
  virtual ~CMsgDOTAClientToGCQuickStatsResponse();

  CMsgDOTAClientToGCQuickStatsResponse(const CMsgDOTAClientToGCQuickStatsResponse& from);

  inline CMsgDOTAClientToGCQuickStatsResponse& operator=(const CMsgDOTAClientToGCQuickStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAClientToGCQuickStatsResponse(CMsgDOTAClientToGCQuickStatsResponse&& from) noexcept
    : CMsgDOTAClientToGCQuickStatsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAClientToGCQuickStatsResponse& operator=(CMsgDOTAClientToGCQuickStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAClientToGCQuickStatsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAClientToGCQuickStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClientToGCQuickStatsResponse*>(
               &_CMsgDOTAClientToGCQuickStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    338;

  void Swap(CMsgDOTAClientToGCQuickStatsResponse* other);
  friend void swap(CMsgDOTAClientToGCQuickStatsResponse& a, CMsgDOTAClientToGCQuickStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAClientToGCQuickStatsResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAClientToGCQuickStatsResponse>(nullptr);
  }

  CMsgDOTAClientToGCQuickStatsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAClientToGCQuickStatsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAClientToGCQuickStatsResponse& from);
  void MergeFrom(const CMsgDOTAClientToGCQuickStatsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAClientToGCQuickStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAClientToGCQuickStatsResponse_SimpleStats SimpleStats;

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAClientToGCQuickStatsRequest original_request = 1;
  bool has_original_request() const;
  void clear_original_request();
  static const int kOriginalRequestFieldNumber = 1;
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsRequest& original_request() const;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsRequest* release_original_request();
  ::proto::dota::CMsgDOTAClientToGCQuickStatsRequest* mutable_original_request();
  void set_allocated_original_request(::proto::dota::CMsgDOTAClientToGCQuickStatsRequest* original_request);

  // optional .proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats hero_stats = 2;
  bool has_hero_stats() const;
  void clear_hero_stats();
  static const int kHeroStatsFieldNumber = 2;
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& hero_stats() const;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* release_hero_stats();
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* mutable_hero_stats();
  void set_allocated_hero_stats(::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* hero_stats);

  // optional .proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats item_stats = 3;
  bool has_item_stats() const;
  void clear_item_stats();
  static const int kItemStatsFieldNumber = 3;
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& item_stats() const;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* release_item_stats();
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* mutable_item_stats();
  void set_allocated_item_stats(::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* item_stats);

  // optional .proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats item_hero_stats = 4;
  bool has_item_hero_stats() const;
  void clear_item_hero_stats();
  static const int kItemHeroStatsFieldNumber = 4;
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& item_hero_stats() const;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* release_item_hero_stats();
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* mutable_item_hero_stats();
  void set_allocated_item_hero_stats(::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* item_hero_stats);

  // optional .proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats item_player_stats = 5;
  bool has_item_player_stats() const;
  void clear_item_player_stats();
  static const int kItemPlayerStatsFieldNumber = 5;
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& item_player_stats() const;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* release_item_player_stats();
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* mutable_item_player_stats();
  void set_allocated_item_player_stats(::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* item_player_stats);

  // optional .proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats hero_player_stats = 6;
  bool has_hero_player_stats() const;
  void clear_hero_player_stats();
  static const int kHeroPlayerStatsFieldNumber = 6;
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& hero_player_stats() const;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* release_hero_player_stats();
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* mutable_hero_player_stats();
  void set_allocated_hero_player_stats(::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* hero_player_stats);

  // optional .proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats full_set_stats = 7;
  bool has_full_set_stats() const;
  void clear_full_set_stats();
  static const int kFullSetStatsFieldNumber = 7;
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& full_set_stats() const;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* release_full_set_stats();
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* mutable_full_set_stats();
  void set_allocated_full_set_stats(::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* full_set_stats);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClientToGCQuickStatsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsRequest* original_request_;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* hero_stats_;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* item_stats_;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* item_hero_stats_;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* item_player_stats_;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* hero_player_stats_;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* full_set_stats_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASelectionPriorityChoiceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASelectionPriorityChoiceRequest) */ {
 public:
  CMsgDOTASelectionPriorityChoiceRequest();
  virtual ~CMsgDOTASelectionPriorityChoiceRequest();

  CMsgDOTASelectionPriorityChoiceRequest(const CMsgDOTASelectionPriorityChoiceRequest& from);

  inline CMsgDOTASelectionPriorityChoiceRequest& operator=(const CMsgDOTASelectionPriorityChoiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASelectionPriorityChoiceRequest(CMsgDOTASelectionPriorityChoiceRequest&& from) noexcept
    : CMsgDOTASelectionPriorityChoiceRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASelectionPriorityChoiceRequest& operator=(CMsgDOTASelectionPriorityChoiceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASelectionPriorityChoiceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASelectionPriorityChoiceRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASelectionPriorityChoiceRequest*>(
               &_CMsgDOTASelectionPriorityChoiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    339;

  void Swap(CMsgDOTASelectionPriorityChoiceRequest* other);
  friend void swap(CMsgDOTASelectionPriorityChoiceRequest& a, CMsgDOTASelectionPriorityChoiceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASelectionPriorityChoiceRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTASelectionPriorityChoiceRequest>(nullptr);
  }

  CMsgDOTASelectionPriorityChoiceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASelectionPriorityChoiceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASelectionPriorityChoiceRequest& from);
  void MergeFrom(const CMsgDOTASelectionPriorityChoiceRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASelectionPriorityChoiceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.DOTASelectionPriorityChoice choice = 1 [default = k_DOTASelectionPriorityChoice_Invalid];
  bool has_choice() const;
  void clear_choice();
  static const int kChoiceFieldNumber = 1;
  ::proto::dota::DOTASelectionPriorityChoice choice() const;
  void set_choice(::proto::dota::DOTASelectionPriorityChoice value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASelectionPriorityChoiceRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int choice_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTASelectionPriorityChoiceResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASelectionPriorityChoiceResponse) */ {
 public:
  CMsgDOTASelectionPriorityChoiceResponse();
  virtual ~CMsgDOTASelectionPriorityChoiceResponse();

  CMsgDOTASelectionPriorityChoiceResponse(const CMsgDOTASelectionPriorityChoiceResponse& from);

  inline CMsgDOTASelectionPriorityChoiceResponse& operator=(const CMsgDOTASelectionPriorityChoiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTASelectionPriorityChoiceResponse(CMsgDOTASelectionPriorityChoiceResponse&& from) noexcept
    : CMsgDOTASelectionPriorityChoiceResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTASelectionPriorityChoiceResponse& operator=(CMsgDOTASelectionPriorityChoiceResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTASelectionPriorityChoiceResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTASelectionPriorityChoiceResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASelectionPriorityChoiceResponse*>(
               &_CMsgDOTASelectionPriorityChoiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    340;

  void Swap(CMsgDOTASelectionPriorityChoiceResponse* other);
  friend void swap(CMsgDOTASelectionPriorityChoiceResponse& a, CMsgDOTASelectionPriorityChoiceResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTASelectionPriorityChoiceResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTASelectionPriorityChoiceResponse>(nullptr);
  }

  CMsgDOTASelectionPriorityChoiceResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTASelectionPriorityChoiceResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTASelectionPriorityChoiceResponse& from);
  void MergeFrom(const CMsgDOTASelectionPriorityChoiceResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTASelectionPriorityChoiceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTASelectionPriorityChoiceResponse_Result Result;
  static const Result SUCCESS =
    CMsgDOTASelectionPriorityChoiceResponse_Result_SUCCESS;
  static const Result ERROR_UNKNOWN =
    CMsgDOTASelectionPriorityChoiceResponse_Result_ERROR_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTASelectionPriorityChoiceResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTASelectionPriorityChoiceResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTASelectionPriorityChoiceResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTASelectionPriorityChoiceResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTASelectionPriorityChoiceResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTASelectionPriorityChoiceResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTASelectionPriorityChoiceResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTASelectionPriorityChoiceResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgDOTASelectionPriorityChoiceResponse_Result result() const;
  void set_result(::proto::dota::CMsgDOTASelectionPriorityChoiceResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASelectionPriorityChoiceResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGameAutographReward final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGameAutographReward) */ {
 public:
  CMsgDOTAGameAutographReward();
  virtual ~CMsgDOTAGameAutographReward();

  CMsgDOTAGameAutographReward(const CMsgDOTAGameAutographReward& from);

  inline CMsgDOTAGameAutographReward& operator=(const CMsgDOTAGameAutographReward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGameAutographReward(CMsgDOTAGameAutographReward&& from) noexcept
    : CMsgDOTAGameAutographReward() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGameAutographReward& operator=(CMsgDOTAGameAutographReward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGameAutographReward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGameAutographReward* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGameAutographReward*>(
               &_CMsgDOTAGameAutographReward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    341;

  void Swap(CMsgDOTAGameAutographReward* other);
  friend void swap(CMsgDOTAGameAutographReward& a, CMsgDOTAGameAutographReward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGameAutographReward* New() const final {
    return CreateMaybeMessage<CMsgDOTAGameAutographReward>(nullptr);
  }

  CMsgDOTAGameAutographReward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGameAutographReward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGameAutographReward& from);
  void MergeFrom(const CMsgDOTAGameAutographReward& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGameAutographReward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string badge_id = 1;
  bool has_badge_id() const;
  void clear_badge_id();
  static const int kBadgeIdFieldNumber = 1;
  const ::std::string& badge_id() const;
  void set_badge_id(const ::std::string& value);
  #if LANG_CXX11
  void set_badge_id(::std::string&& value);
  #endif
  void set_badge_id(const char* value);
  void set_badge_id(const char* value, size_t size);
  ::std::string* mutable_badge_id();
  ::std::string* release_badge_id();
  void set_allocated_badge_id(::std::string* badge_id);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGameAutographReward)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr badge_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGameAutographRewardResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGameAutographRewardResponse) */ {
 public:
  CMsgDOTAGameAutographRewardResponse();
  virtual ~CMsgDOTAGameAutographRewardResponse();

  CMsgDOTAGameAutographRewardResponse(const CMsgDOTAGameAutographRewardResponse& from);

  inline CMsgDOTAGameAutographRewardResponse& operator=(const CMsgDOTAGameAutographRewardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGameAutographRewardResponse(CMsgDOTAGameAutographRewardResponse&& from) noexcept
    : CMsgDOTAGameAutographRewardResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGameAutographRewardResponse& operator=(CMsgDOTAGameAutographRewardResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGameAutographRewardResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGameAutographRewardResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGameAutographRewardResponse*>(
               &_CMsgDOTAGameAutographRewardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    342;

  void Swap(CMsgDOTAGameAutographRewardResponse* other);
  friend void swap(CMsgDOTAGameAutographRewardResponse& a, CMsgDOTAGameAutographRewardResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGameAutographRewardResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAGameAutographRewardResponse>(nullptr);
  }

  CMsgDOTAGameAutographRewardResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGameAutographRewardResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGameAutographRewardResponse& from);
  void MergeFrom(const CMsgDOTAGameAutographRewardResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGameAutographRewardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGameAutographRewardResponse_Result Result;
  static const Result SUCCESS =
    CMsgDOTAGameAutographRewardResponse_Result_SUCCESS;
  static const Result ERROR_UNKNOWN =
    CMsgDOTAGameAutographRewardResponse_Result_ERROR_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTAGameAutographRewardResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTAGameAutographRewardResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTAGameAutographRewardResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTAGameAutographRewardResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTAGameAutographRewardResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTAGameAutographRewardResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTAGameAutographRewardResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAGameAutographRewardResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgDOTAGameAutographRewardResponse_Result result() const;
  void set_result(::proto::dota::CMsgDOTAGameAutographRewardResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGameAutographRewardResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTADestroyLobbyRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTADestroyLobbyRequest) */ {
 public:
  CMsgDOTADestroyLobbyRequest();
  virtual ~CMsgDOTADestroyLobbyRequest();

  CMsgDOTADestroyLobbyRequest(const CMsgDOTADestroyLobbyRequest& from);

  inline CMsgDOTADestroyLobbyRequest& operator=(const CMsgDOTADestroyLobbyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTADestroyLobbyRequest(CMsgDOTADestroyLobbyRequest&& from) noexcept
    : CMsgDOTADestroyLobbyRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTADestroyLobbyRequest& operator=(CMsgDOTADestroyLobbyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTADestroyLobbyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTADestroyLobbyRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTADestroyLobbyRequest*>(
               &_CMsgDOTADestroyLobbyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    343;

  void Swap(CMsgDOTADestroyLobbyRequest* other);
  friend void swap(CMsgDOTADestroyLobbyRequest& a, CMsgDOTADestroyLobbyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTADestroyLobbyRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTADestroyLobbyRequest>(nullptr);
  }

  CMsgDOTADestroyLobbyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTADestroyLobbyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTADestroyLobbyRequest& from);
  void MergeFrom(const CMsgDOTADestroyLobbyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTADestroyLobbyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTADestroyLobbyRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTADestroyLobbyResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTADestroyLobbyResponse) */ {
 public:
  CMsgDOTADestroyLobbyResponse();
  virtual ~CMsgDOTADestroyLobbyResponse();

  CMsgDOTADestroyLobbyResponse(const CMsgDOTADestroyLobbyResponse& from);

  inline CMsgDOTADestroyLobbyResponse& operator=(const CMsgDOTADestroyLobbyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTADestroyLobbyResponse(CMsgDOTADestroyLobbyResponse&& from) noexcept
    : CMsgDOTADestroyLobbyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTADestroyLobbyResponse& operator=(CMsgDOTADestroyLobbyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTADestroyLobbyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTADestroyLobbyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTADestroyLobbyResponse*>(
               &_CMsgDOTADestroyLobbyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    344;

  void Swap(CMsgDOTADestroyLobbyResponse* other);
  friend void swap(CMsgDOTADestroyLobbyResponse& a, CMsgDOTADestroyLobbyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTADestroyLobbyResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTADestroyLobbyResponse>(nullptr);
  }

  CMsgDOTADestroyLobbyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTADestroyLobbyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTADestroyLobbyResponse& from);
  void MergeFrom(const CMsgDOTADestroyLobbyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTADestroyLobbyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTADestroyLobbyResponse_Result Result;
  static const Result SUCCESS =
    CMsgDOTADestroyLobbyResponse_Result_SUCCESS;
  static const Result ERROR_UNKNOWN =
    CMsgDOTADestroyLobbyResponse_Result_ERROR_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTADestroyLobbyResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTADestroyLobbyResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTADestroyLobbyResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTADestroyLobbyResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTADestroyLobbyResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTADestroyLobbyResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTADestroyLobbyResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTADestroyLobbyResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgDOTADestroyLobbyResponse_Result result() const;
  void set_result(::proto::dota::CMsgDOTADestroyLobbyResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTADestroyLobbyResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGetRecentPlayTimeFriendsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetRecentPlayTimeFriendsRequest) */ {
 public:
  CMsgDOTAGetRecentPlayTimeFriendsRequest();
  virtual ~CMsgDOTAGetRecentPlayTimeFriendsRequest();

  CMsgDOTAGetRecentPlayTimeFriendsRequest(const CMsgDOTAGetRecentPlayTimeFriendsRequest& from);

  inline CMsgDOTAGetRecentPlayTimeFriendsRequest& operator=(const CMsgDOTAGetRecentPlayTimeFriendsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGetRecentPlayTimeFriendsRequest(CMsgDOTAGetRecentPlayTimeFriendsRequest&& from) noexcept
    : CMsgDOTAGetRecentPlayTimeFriendsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGetRecentPlayTimeFriendsRequest& operator=(CMsgDOTAGetRecentPlayTimeFriendsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGetRecentPlayTimeFriendsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGetRecentPlayTimeFriendsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetRecentPlayTimeFriendsRequest*>(
               &_CMsgDOTAGetRecentPlayTimeFriendsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    345;

  void Swap(CMsgDOTAGetRecentPlayTimeFriendsRequest* other);
  friend void swap(CMsgDOTAGetRecentPlayTimeFriendsRequest& a, CMsgDOTAGetRecentPlayTimeFriendsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetRecentPlayTimeFriendsRequest* New() const final {
    return CreateMaybeMessage<CMsgDOTAGetRecentPlayTimeFriendsRequest>(nullptr);
  }

  CMsgDOTAGetRecentPlayTimeFriendsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGetRecentPlayTimeFriendsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGetRecentPlayTimeFriendsRequest& from);
  void MergeFrom(const CMsgDOTAGetRecentPlayTimeFriendsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGetRecentPlayTimeFriendsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetRecentPlayTimeFriendsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGetRecentPlayTimeFriendsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetRecentPlayTimeFriendsResponse) */ {
 public:
  CMsgDOTAGetRecentPlayTimeFriendsResponse();
  virtual ~CMsgDOTAGetRecentPlayTimeFriendsResponse();

  CMsgDOTAGetRecentPlayTimeFriendsResponse(const CMsgDOTAGetRecentPlayTimeFriendsResponse& from);

  inline CMsgDOTAGetRecentPlayTimeFriendsResponse& operator=(const CMsgDOTAGetRecentPlayTimeFriendsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGetRecentPlayTimeFriendsResponse(CMsgDOTAGetRecentPlayTimeFriendsResponse&& from) noexcept
    : CMsgDOTAGetRecentPlayTimeFriendsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGetRecentPlayTimeFriendsResponse& operator=(CMsgDOTAGetRecentPlayTimeFriendsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGetRecentPlayTimeFriendsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGetRecentPlayTimeFriendsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetRecentPlayTimeFriendsResponse*>(
               &_CMsgDOTAGetRecentPlayTimeFriendsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    346;

  void Swap(CMsgDOTAGetRecentPlayTimeFriendsResponse* other);
  friend void swap(CMsgDOTAGetRecentPlayTimeFriendsResponse& a, CMsgDOTAGetRecentPlayTimeFriendsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetRecentPlayTimeFriendsResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAGetRecentPlayTimeFriendsResponse>(nullptr);
  }

  CMsgDOTAGetRecentPlayTimeFriendsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGetRecentPlayTimeFriendsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGetRecentPlayTimeFriendsResponse& from);
  void MergeFrom(const CMsgDOTAGetRecentPlayTimeFriendsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGetRecentPlayTimeFriendsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 account_ids = 1;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetRecentPlayTimeFriendsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPurchaseItemWithEventPoints final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPurchaseItemWithEventPoints) */ {
 public:
  CMsgPurchaseItemWithEventPoints();
  virtual ~CMsgPurchaseItemWithEventPoints();

  CMsgPurchaseItemWithEventPoints(const CMsgPurchaseItemWithEventPoints& from);

  inline CMsgPurchaseItemWithEventPoints& operator=(const CMsgPurchaseItemWithEventPoints& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPurchaseItemWithEventPoints(CMsgPurchaseItemWithEventPoints&& from) noexcept
    : CMsgPurchaseItemWithEventPoints() {
    *this = ::std::move(from);
  }

  inline CMsgPurchaseItemWithEventPoints& operator=(CMsgPurchaseItemWithEventPoints&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPurchaseItemWithEventPoints& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPurchaseItemWithEventPoints* internal_default_instance() {
    return reinterpret_cast<const CMsgPurchaseItemWithEventPoints*>(
               &_CMsgPurchaseItemWithEventPoints_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    347;

  void Swap(CMsgPurchaseItemWithEventPoints* other);
  friend void swap(CMsgPurchaseItemWithEventPoints& a, CMsgPurchaseItemWithEventPoints& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPurchaseItemWithEventPoints* New() const final {
    return CreateMaybeMessage<CMsgPurchaseItemWithEventPoints>(nullptr);
  }

  CMsgPurchaseItemWithEventPoints* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPurchaseItemWithEventPoints>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPurchaseItemWithEventPoints& from);
  void MergeFrom(const CMsgPurchaseItemWithEventPoints& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPurchaseItemWithEventPoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 item_def = 1;
  bool has_item_def() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 1;
  ::google::protobuf::uint32 item_def() const;
  void set_item_def(::google::protobuf::uint32 value);

  // optional uint32 quantity = 2;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 2;
  ::google::protobuf::uint32 quantity() const;
  void set_quantity(::google::protobuf::uint32 value);

  // optional .proto.dota.EEvent event_id = 3 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 3;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional bool use_premium_points = 4;
  bool has_use_premium_points() const;
  void clear_use_premium_points();
  static const int kUsePremiumPointsFieldNumber = 4;
  bool use_premium_points() const;
  void set_use_premium_points(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPurchaseItemWithEventPoints)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 quantity_;
  int event_id_;
  bool use_premium_points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPurchaseItemWithEventPointsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPurchaseItemWithEventPointsResponse) */ {
 public:
  CMsgPurchaseItemWithEventPointsResponse();
  virtual ~CMsgPurchaseItemWithEventPointsResponse();

  CMsgPurchaseItemWithEventPointsResponse(const CMsgPurchaseItemWithEventPointsResponse& from);

  inline CMsgPurchaseItemWithEventPointsResponse& operator=(const CMsgPurchaseItemWithEventPointsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPurchaseItemWithEventPointsResponse(CMsgPurchaseItemWithEventPointsResponse&& from) noexcept
    : CMsgPurchaseItemWithEventPointsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgPurchaseItemWithEventPointsResponse& operator=(CMsgPurchaseItemWithEventPointsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPurchaseItemWithEventPointsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPurchaseItemWithEventPointsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgPurchaseItemWithEventPointsResponse*>(
               &_CMsgPurchaseItemWithEventPointsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    348;

  void Swap(CMsgPurchaseItemWithEventPointsResponse* other);
  friend void swap(CMsgPurchaseItemWithEventPointsResponse& a, CMsgPurchaseItemWithEventPointsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPurchaseItemWithEventPointsResponse* New() const final {
    return CreateMaybeMessage<CMsgPurchaseItemWithEventPointsResponse>(nullptr);
  }

  CMsgPurchaseItemWithEventPointsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPurchaseItemWithEventPointsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPurchaseItemWithEventPointsResponse& from);
  void MergeFrom(const CMsgPurchaseItemWithEventPointsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPurchaseItemWithEventPointsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgPurchaseItemWithEventPointsResponse_Result Result;
  static const Result SUCCESS =
    CMsgPurchaseItemWithEventPointsResponse_Result_SUCCESS;
  static const Result UNKNOWN_EVENT =
    CMsgPurchaseItemWithEventPointsResponse_Result_UNKNOWN_EVENT;
  static const Result UNKNOWN_ITEM =
    CMsgPurchaseItemWithEventPointsResponse_Result_UNKNOWN_ITEM;
  static const Result BAD_QUANTITY =
    CMsgPurchaseItemWithEventPointsResponse_Result_BAD_QUANTITY;
  static const Result NOT_PURCHASEABLE =
    CMsgPurchaseItemWithEventPointsResponse_Result_NOT_PURCHASEABLE;
  static const Result SDO_LOAD_FAILED =
    CMsgPurchaseItemWithEventPointsResponse_Result_SDO_LOAD_FAILED;
  static const Result NOT_ENOUGH_POINTS =
    CMsgPurchaseItemWithEventPointsResponse_Result_NOT_ENOUGH_POINTS;
  static const Result SQL_ERROR =
    CMsgPurchaseItemWithEventPointsResponse_Result_SQL_ERROR;
  static const Result FAILED_TO_SEND =
    CMsgPurchaseItemWithEventPointsResponse_Result_FAILED_TO_SEND;
  static const Result SERVER_ERROR =
    CMsgPurchaseItemWithEventPointsResponse_Result_SERVER_ERROR;
  static const Result NOT_ALLOWED =
    CMsgPurchaseItemWithEventPointsResponse_Result_NOT_ALLOWED;
  static const Result CANCELLED =
    CMsgPurchaseItemWithEventPointsResponse_Result_CANCELLED;
  static const Result CLIENT_ERROR =
    CMsgPurchaseItemWithEventPointsResponse_Result_CLIENT_ERROR;
  static inline bool Result_IsValid(int value) {
    return CMsgPurchaseItemWithEventPointsResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgPurchaseItemWithEventPointsResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgPurchaseItemWithEventPointsResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgPurchaseItemWithEventPointsResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgPurchaseItemWithEventPointsResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgPurchaseItemWithEventPointsResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgPurchaseItemWithEventPointsResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgPurchaseItemWithEventPointsResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgPurchaseItemWithEventPointsResponse_Result result() const;
  void set_result(::proto::dota::CMsgPurchaseItemWithEventPointsResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPurchaseItemWithEventPointsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCRequestItemRecommendations final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCRequestItemRecommendations) */ {
 public:
  CMsgGCRequestItemRecommendations();
  virtual ~CMsgGCRequestItemRecommendations();

  CMsgGCRequestItemRecommendations(const CMsgGCRequestItemRecommendations& from);

  inline CMsgGCRequestItemRecommendations& operator=(const CMsgGCRequestItemRecommendations& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCRequestItemRecommendations(CMsgGCRequestItemRecommendations&& from) noexcept
    : CMsgGCRequestItemRecommendations() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestItemRecommendations& operator=(CMsgGCRequestItemRecommendations&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCRequestItemRecommendations& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCRequestItemRecommendations* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestItemRecommendations*>(
               &_CMsgGCRequestItemRecommendations_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    349;

  void Swap(CMsgGCRequestItemRecommendations* other);
  friend void swap(CMsgGCRequestItemRecommendations& a, CMsgGCRequestItemRecommendations& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRequestItemRecommendations* New() const final {
    return CreateMaybeMessage<CMsgGCRequestItemRecommendations>(nullptr);
  }

  CMsgGCRequestItemRecommendations* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCRequestItemRecommendations>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCRequestItemRecommendations& from);
  void MergeFrom(const CMsgGCRequestItemRecommendations& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRequestItemRecommendations* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 allied_hero_ids = 3;
  int allied_hero_ids_size() const;
  void clear_allied_hero_ids();
  static const int kAlliedHeroIdsFieldNumber = 3;
  ::google::protobuf::uint32 allied_hero_ids(int index) const;
  void set_allied_hero_ids(int index, ::google::protobuf::uint32 value);
  void add_allied_hero_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      allied_hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_allied_hero_ids();

  // repeated uint32 enemy_hero_ids = 4;
  int enemy_hero_ids_size() const;
  void clear_enemy_hero_ids();
  static const int kEnemyHeroIdsFieldNumber = 4;
  ::google::protobuf::uint32 enemy_hero_ids(int index) const;
  void set_enemy_hero_ids(int index, ::google::protobuf::uint32 value);
  void add_enemy_hero_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      enemy_hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_enemy_hero_ids();

  // repeated uint32 inventory_items = 5;
  int inventory_items_size() const;
  void clear_inventory_items();
  static const int kInventoryItemsFieldNumber = 5;
  ::google::protobuf::uint32 inventory_items(int index) const;
  void set_inventory_items(int index, ::google::protobuf::uint32 value);
  void add_inventory_items(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      inventory_items() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_inventory_items();

  // optional uint32 mmr = 1;
  bool has_mmr() const;
  void clear_mmr();
  static const int kMmrFieldNumber = 1;
  ::google::protobuf::uint32 mmr() const;
  void set_mmr(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional int32 game_time = 6;
  bool has_game_time() const;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 6;
  ::google::protobuf::int32 game_time() const;
  void set_game_time(::google::protobuf::int32 value);

  // optional uint32 gold = 7;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 7;
  ::google::protobuf::uint32 gold() const;
  void set_gold(::google::protobuf::uint32 value);

  // optional uint32 net_worth = 8;
  bool has_net_worth() const;
  void clear_net_worth();
  static const int kNetWorthFieldNumber = 8;
  ::google::protobuf::uint32 net_worth() const;
  void set_net_worth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCRequestItemRecommendations)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > allied_hero_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > enemy_hero_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > inventory_items_;
  ::google::protobuf::uint32 mmr_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::int32 game_time_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 net_worth_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCRequestItemRecommendationsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCRequestItemRecommendationsResponse) */ {
 public:
  CMsgGCRequestItemRecommendationsResponse();
  virtual ~CMsgGCRequestItemRecommendationsResponse();

  CMsgGCRequestItemRecommendationsResponse(const CMsgGCRequestItemRecommendationsResponse& from);

  inline CMsgGCRequestItemRecommendationsResponse& operator=(const CMsgGCRequestItemRecommendationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCRequestItemRecommendationsResponse(CMsgGCRequestItemRecommendationsResponse&& from) noexcept
    : CMsgGCRequestItemRecommendationsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestItemRecommendationsResponse& operator=(CMsgGCRequestItemRecommendationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCRequestItemRecommendationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCRequestItemRecommendationsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestItemRecommendationsResponse*>(
               &_CMsgGCRequestItemRecommendationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    350;

  void Swap(CMsgGCRequestItemRecommendationsResponse* other);
  friend void swap(CMsgGCRequestItemRecommendationsResponse& a, CMsgGCRequestItemRecommendationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRequestItemRecommendationsResponse* New() const final {
    return CreateMaybeMessage<CMsgGCRequestItemRecommendationsResponse>(nullptr);
  }

  CMsgGCRequestItemRecommendationsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCRequestItemRecommendationsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCRequestItemRecommendationsResponse& from);
  void MergeFrom(const CMsgGCRequestItemRecommendationsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRequestItemRecommendationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 recommended_item_ids = 1;
  int recommended_item_ids_size() const;
  void clear_recommended_item_ids();
  static const int kRecommendedItemIdsFieldNumber = 1;
  ::google::protobuf::uint32 recommended_item_ids(int index) const;
  void set_recommended_item_ids(int index, ::google::protobuf::uint32 value);
  void add_recommended_item_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      recommended_item_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_recommended_item_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCRequestItemRecommendationsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > recommended_item_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCRequestSkillUpRecommendations final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCRequestSkillUpRecommendations) */ {
 public:
  CMsgGCRequestSkillUpRecommendations();
  virtual ~CMsgGCRequestSkillUpRecommendations();

  CMsgGCRequestSkillUpRecommendations(const CMsgGCRequestSkillUpRecommendations& from);

  inline CMsgGCRequestSkillUpRecommendations& operator=(const CMsgGCRequestSkillUpRecommendations& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCRequestSkillUpRecommendations(CMsgGCRequestSkillUpRecommendations&& from) noexcept
    : CMsgGCRequestSkillUpRecommendations() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestSkillUpRecommendations& operator=(CMsgGCRequestSkillUpRecommendations&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCRequestSkillUpRecommendations& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCRequestSkillUpRecommendations* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestSkillUpRecommendations*>(
               &_CMsgGCRequestSkillUpRecommendations_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    351;

  void Swap(CMsgGCRequestSkillUpRecommendations* other);
  friend void swap(CMsgGCRequestSkillUpRecommendations& a, CMsgGCRequestSkillUpRecommendations& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRequestSkillUpRecommendations* New() const final {
    return CreateMaybeMessage<CMsgGCRequestSkillUpRecommendations>(nullptr);
  }

  CMsgGCRequestSkillUpRecommendations* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCRequestSkillUpRecommendations>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCRequestSkillUpRecommendations& from);
  void MergeFrom(const CMsgGCRequestSkillUpRecommendations& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRequestSkillUpRecommendations* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 allied_hero_ids = 3;
  int allied_hero_ids_size() const;
  void clear_allied_hero_ids();
  static const int kAlliedHeroIdsFieldNumber = 3;
  ::google::protobuf::uint32 allied_hero_ids(int index) const;
  void set_allied_hero_ids(int index, ::google::protobuf::uint32 value);
  void add_allied_hero_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      allied_hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_allied_hero_ids();

  // repeated uint32 enemy_hero_ids = 4;
  int enemy_hero_ids_size() const;
  void clear_enemy_hero_ids();
  static const int kEnemyHeroIdsFieldNumber = 4;
  ::google::protobuf::uint32 enemy_hero_ids(int index) const;
  void set_enemy_hero_ids(int index, ::google::protobuf::uint32 value);
  void add_enemy_hero_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      enemy_hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_enemy_hero_ids();

  // repeated uint32 ability_ids = 5;
  int ability_ids_size() const;
  void clear_ability_ids();
  static const int kAbilityIdsFieldNumber = 5;
  ::google::protobuf::uint32 ability_ids(int index) const;
  void set_ability_ids(int index, ::google::protobuf::uint32 value);
  void add_ability_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ability_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ability_ids();

  // optional uint32 mmr = 1;
  bool has_mmr() const;
  void clear_mmr();
  static const int kMmrFieldNumber = 1;
  ::google::protobuf::uint32 mmr() const;
  void set_mmr(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCRequestSkillUpRecommendations)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > allied_hero_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > enemy_hero_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ability_ids_;
  ::google::protobuf::uint32 mmr_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCRequestSkillUpRecommendationsResponse.AbilitySelection) */ {
 public:
  CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection();
  virtual ~CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection();

  CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection(const CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection& from);

  inline CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection& operator=(const CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection(CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection&& from) noexcept
    : CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection& operator=(CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection*>(
               &_CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    352;

  void Swap(CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection* other);
  friend void swap(CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection& a, CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection* New() const final {
    return CreateMaybeMessage<CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection>(nullptr);
  }

  CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection& from);
  void MergeFrom(const CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ability_id = 1;
  bool has_ability_id() const;
  void clear_ability_id();
  static const int kAbilityIdFieldNumber = 1;
  ::google::protobuf::uint32 ability_id() const;
  void set_ability_id(::google::protobuf::uint32 value);

  // optional float weight = 2;
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 2;
  float weight() const;
  void set_weight(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCRequestSkillUpRecommendationsResponse.AbilitySelection)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 ability_id_;
  float weight_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCRequestSkillUpRecommendationsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCRequestSkillUpRecommendationsResponse) */ {
 public:
  CMsgGCRequestSkillUpRecommendationsResponse();
  virtual ~CMsgGCRequestSkillUpRecommendationsResponse();

  CMsgGCRequestSkillUpRecommendationsResponse(const CMsgGCRequestSkillUpRecommendationsResponse& from);

  inline CMsgGCRequestSkillUpRecommendationsResponse& operator=(const CMsgGCRequestSkillUpRecommendationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCRequestSkillUpRecommendationsResponse(CMsgGCRequestSkillUpRecommendationsResponse&& from) noexcept
    : CMsgGCRequestSkillUpRecommendationsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestSkillUpRecommendationsResponse& operator=(CMsgGCRequestSkillUpRecommendationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCRequestSkillUpRecommendationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCRequestSkillUpRecommendationsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestSkillUpRecommendationsResponse*>(
               &_CMsgGCRequestSkillUpRecommendationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    353;

  void Swap(CMsgGCRequestSkillUpRecommendationsResponse* other);
  friend void swap(CMsgGCRequestSkillUpRecommendationsResponse& a, CMsgGCRequestSkillUpRecommendationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRequestSkillUpRecommendationsResponse* New() const final {
    return CreateMaybeMessage<CMsgGCRequestSkillUpRecommendationsResponse>(nullptr);
  }

  CMsgGCRequestSkillUpRecommendationsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCRequestSkillUpRecommendationsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCRequestSkillUpRecommendationsResponse& from);
  void MergeFrom(const CMsgGCRequestSkillUpRecommendationsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRequestSkillUpRecommendationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection AbilitySelection;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCRequestSkillUpRecommendationsResponse.AbilitySelection abilities = 1;
  int abilities_size() const;
  void clear_abilities();
  static const int kAbilitiesFieldNumber = 1;
  ::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection* mutable_abilities(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection >*
      mutable_abilities();
  const ::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection& abilities(int index) const;
  ::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection* add_abilities();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection >&
      abilities() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCRequestSkillUpRecommendationsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection > abilities_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecycleHeroRelic final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRecycleHeroRelic) */ {
 public:
  CMsgClientToGCRecycleHeroRelic();
  virtual ~CMsgClientToGCRecycleHeroRelic();

  CMsgClientToGCRecycleHeroRelic(const CMsgClientToGCRecycleHeroRelic& from);

  inline CMsgClientToGCRecycleHeroRelic& operator=(const CMsgClientToGCRecycleHeroRelic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRecycleHeroRelic(CMsgClientToGCRecycleHeroRelic&& from) noexcept
    : CMsgClientToGCRecycleHeroRelic() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRecycleHeroRelic& operator=(CMsgClientToGCRecycleHeroRelic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRecycleHeroRelic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRecycleHeroRelic* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRecycleHeroRelic*>(
               &_CMsgClientToGCRecycleHeroRelic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    354;

  void Swap(CMsgClientToGCRecycleHeroRelic* other);
  friend void swap(CMsgClientToGCRecycleHeroRelic& a, CMsgClientToGCRecycleHeroRelic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRecycleHeroRelic* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRecycleHeroRelic>(nullptr);
  }

  CMsgClientToGCRecycleHeroRelic* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRecycleHeroRelic>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRecycleHeroRelic& from);
  void MergeFrom(const CMsgClientToGCRecycleHeroRelic& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRecycleHeroRelic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 item_ids = 1;
  int item_ids_size() const;
  void clear_item_ids();
  static const int kItemIdsFieldNumber = 1;
  ::google::protobuf::uint64 item_ids(int index) const;
  void set_item_ids(int index, ::google::protobuf::uint64 value);
  void add_item_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      item_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_item_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRecycleHeroRelic)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > item_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecycleHeroRelicResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRecycleHeroRelicResponse) */ {
 public:
  CMsgClientToGCRecycleHeroRelicResponse();
  virtual ~CMsgClientToGCRecycleHeroRelicResponse();

  CMsgClientToGCRecycleHeroRelicResponse(const CMsgClientToGCRecycleHeroRelicResponse& from);

  inline CMsgClientToGCRecycleHeroRelicResponse& operator=(const CMsgClientToGCRecycleHeroRelicResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRecycleHeroRelicResponse(CMsgClientToGCRecycleHeroRelicResponse&& from) noexcept
    : CMsgClientToGCRecycleHeroRelicResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRecycleHeroRelicResponse& operator=(CMsgClientToGCRecycleHeroRelicResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRecycleHeroRelicResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRecycleHeroRelicResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRecycleHeroRelicResponse*>(
               &_CMsgClientToGCRecycleHeroRelicResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    355;

  void Swap(CMsgClientToGCRecycleHeroRelicResponse* other);
  friend void swap(CMsgClientToGCRecycleHeroRelicResponse& a, CMsgClientToGCRecycleHeroRelicResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRecycleHeroRelicResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRecycleHeroRelicResponse>(nullptr);
  }

  CMsgClientToGCRecycleHeroRelicResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRecycleHeroRelicResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRecycleHeroRelicResponse& from);
  void MergeFrom(const CMsgClientToGCRecycleHeroRelicResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRecycleHeroRelicResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRecycleHeroRelicResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCRecycleHeroRelicResponse_Result_SUCCESS;
  static const Result ERROR_INTERNAL =
    CMsgClientToGCRecycleHeroRelicResponse_Result_ERROR_INTERNAL;
  static const Result ERROR_FAILED_TO_FIND_HERO_RELIC =
    CMsgClientToGCRecycleHeroRelicResponse_Result_ERROR_FAILED_TO_FIND_HERO_RELIC;
  static const Result ERROR_ITEM_NOT_HERO_RELIC =
    CMsgClientToGCRecycleHeroRelicResponse_Result_ERROR_ITEM_NOT_HERO_RELIC;
  static const Result ERROR_FAILED_EVENT_NOT_OWNED =
    CMsgClientToGCRecycleHeroRelicResponse_Result_ERROR_FAILED_EVENT_NOT_OWNED;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCRecycleHeroRelicResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCRecycleHeroRelicResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCRecycleHeroRelicResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCRecycleHeroRelicResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCRecycleHeroRelicResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCRecycleHeroRelicResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCRecycleHeroRelicResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 dust_amount = 2;
  bool has_dust_amount() const;
  void clear_dust_amount();
  static const int kDustAmountFieldNumber = 2;
  ::google::protobuf::uint32 dust_amount() const;
  void set_dust_amount(::google::protobuf::uint32 value);

  // optional .proto.dota.CMsgClientToGCRecycleHeroRelicResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCRecycleHeroRelicResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCRecycleHeroRelicResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRecycleHeroRelicResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 dust_amount_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPurchaseHeroRelic final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPurchaseHeroRelic) */ {
 public:
  CMsgPurchaseHeroRelic();
  virtual ~CMsgPurchaseHeroRelic();

  CMsgPurchaseHeroRelic(const CMsgPurchaseHeroRelic& from);

  inline CMsgPurchaseHeroRelic& operator=(const CMsgPurchaseHeroRelic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPurchaseHeroRelic(CMsgPurchaseHeroRelic&& from) noexcept
    : CMsgPurchaseHeroRelic() {
    *this = ::std::move(from);
  }

  inline CMsgPurchaseHeroRelic& operator=(CMsgPurchaseHeroRelic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPurchaseHeroRelic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPurchaseHeroRelic* internal_default_instance() {
    return reinterpret_cast<const CMsgPurchaseHeroRelic*>(
               &_CMsgPurchaseHeroRelic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    356;

  void Swap(CMsgPurchaseHeroRelic* other);
  friend void swap(CMsgPurchaseHeroRelic& a, CMsgPurchaseHeroRelic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPurchaseHeroRelic* New() const final {
    return CreateMaybeMessage<CMsgPurchaseHeroRelic>(nullptr);
  }

  CMsgPurchaseHeroRelic* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPurchaseHeroRelic>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPurchaseHeroRelic& from);
  void MergeFrom(const CMsgPurchaseHeroRelic& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPurchaseHeroRelic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 kill_eater_type = 2;
  bool has_kill_eater_type() const;
  void clear_kill_eater_type();
  static const int kKillEaterTypeFieldNumber = 2;
  ::google::protobuf::uint32 kill_eater_type() const;
  void set_kill_eater_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPurchaseHeroRelic)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 kill_eater_type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPurchaseHeroRelicResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPurchaseHeroRelicResponse) */ {
 public:
  CMsgPurchaseHeroRelicResponse();
  virtual ~CMsgPurchaseHeroRelicResponse();

  CMsgPurchaseHeroRelicResponse(const CMsgPurchaseHeroRelicResponse& from);

  inline CMsgPurchaseHeroRelicResponse& operator=(const CMsgPurchaseHeroRelicResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPurchaseHeroRelicResponse(CMsgPurchaseHeroRelicResponse&& from) noexcept
    : CMsgPurchaseHeroRelicResponse() {
    *this = ::std::move(from);
  }

  inline CMsgPurchaseHeroRelicResponse& operator=(CMsgPurchaseHeroRelicResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPurchaseHeroRelicResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPurchaseHeroRelicResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgPurchaseHeroRelicResponse*>(
               &_CMsgPurchaseHeroRelicResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    357;

  void Swap(CMsgPurchaseHeroRelicResponse* other);
  friend void swap(CMsgPurchaseHeroRelicResponse& a, CMsgPurchaseHeroRelicResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPurchaseHeroRelicResponse* New() const final {
    return CreateMaybeMessage<CMsgPurchaseHeroRelicResponse>(nullptr);
  }

  CMsgPurchaseHeroRelicResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPurchaseHeroRelicResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPurchaseHeroRelicResponse& from);
  void MergeFrom(const CMsgPurchaseHeroRelicResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPurchaseHeroRelicResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EPurchaseHeroRelicResult result = 1 [default = k_EPurchaseHeroRelicResult_Success];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::EPurchaseHeroRelicResult result() const;
  void set_result(::proto::dota::EPurchaseHeroRelicResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPurchaseHeroRelicResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPurchaseHeroRandomRelic final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPurchaseHeroRandomRelic) */ {
 public:
  CMsgPurchaseHeroRandomRelic();
  virtual ~CMsgPurchaseHeroRandomRelic();

  CMsgPurchaseHeroRandomRelic(const CMsgPurchaseHeroRandomRelic& from);

  inline CMsgPurchaseHeroRandomRelic& operator=(const CMsgPurchaseHeroRandomRelic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPurchaseHeroRandomRelic(CMsgPurchaseHeroRandomRelic&& from) noexcept
    : CMsgPurchaseHeroRandomRelic() {
    *this = ::std::move(from);
  }

  inline CMsgPurchaseHeroRandomRelic& operator=(CMsgPurchaseHeroRandomRelic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPurchaseHeroRandomRelic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPurchaseHeroRandomRelic* internal_default_instance() {
    return reinterpret_cast<const CMsgPurchaseHeroRandomRelic*>(
               &_CMsgPurchaseHeroRandomRelic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    358;

  void Swap(CMsgPurchaseHeroRandomRelic* other);
  friend void swap(CMsgPurchaseHeroRandomRelic& a, CMsgPurchaseHeroRandomRelic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPurchaseHeroRandomRelic* New() const final {
    return CreateMaybeMessage<CMsgPurchaseHeroRandomRelic>(nullptr);
  }

  CMsgPurchaseHeroRandomRelic* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPurchaseHeroRandomRelic>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPurchaseHeroRandomRelic& from);
  void MergeFrom(const CMsgPurchaseHeroRandomRelic& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPurchaseHeroRandomRelic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPurchaseHeroRandomRelic)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPurchaseHeroRandomRelicResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPurchaseHeroRandomRelicResponse) */ {
 public:
  CMsgPurchaseHeroRandomRelicResponse();
  virtual ~CMsgPurchaseHeroRandomRelicResponse();

  CMsgPurchaseHeroRandomRelicResponse(const CMsgPurchaseHeroRandomRelicResponse& from);

  inline CMsgPurchaseHeroRandomRelicResponse& operator=(const CMsgPurchaseHeroRandomRelicResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPurchaseHeroRandomRelicResponse(CMsgPurchaseHeroRandomRelicResponse&& from) noexcept
    : CMsgPurchaseHeroRandomRelicResponse() {
    *this = ::std::move(from);
  }

  inline CMsgPurchaseHeroRandomRelicResponse& operator=(CMsgPurchaseHeroRandomRelicResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPurchaseHeroRandomRelicResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPurchaseHeroRandomRelicResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgPurchaseHeroRandomRelicResponse*>(
               &_CMsgPurchaseHeroRandomRelicResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    359;

  void Swap(CMsgPurchaseHeroRandomRelicResponse* other);
  friend void swap(CMsgPurchaseHeroRandomRelicResponse& a, CMsgPurchaseHeroRandomRelicResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPurchaseHeroRandomRelicResponse* New() const final {
    return CreateMaybeMessage<CMsgPurchaseHeroRandomRelicResponse>(nullptr);
  }

  CMsgPurchaseHeroRandomRelicResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPurchaseHeroRandomRelicResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPurchaseHeroRandomRelicResponse& from);
  void MergeFrom(const CMsgPurchaseHeroRandomRelicResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPurchaseHeroRandomRelicResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EPurchaseHeroRelicResult result = 1 [default = k_EPurchaseHeroRelicResult_Success];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::EPurchaseHeroRelicResult result() const;
  void set_result(::proto::dota::EPurchaseHeroRelicResult value);

  // optional uint32 kill_eater_type = 2;
  bool has_kill_eater_type() const;
  void clear_kill_eater_type();
  static const int kKillEaterTypeFieldNumber = 2;
  ::google::protobuf::uint32 kill_eater_type() const;
  void set_kill_eater_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPurchaseHeroRandomRelicResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  ::google::protobuf::uint32 kill_eater_type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestPlusWeeklyChallengeResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestPlusWeeklyChallengeResult) */ {
 public:
  CMsgClientToGCRequestPlusWeeklyChallengeResult();
  virtual ~CMsgClientToGCRequestPlusWeeklyChallengeResult();

  CMsgClientToGCRequestPlusWeeklyChallengeResult(const CMsgClientToGCRequestPlusWeeklyChallengeResult& from);

  inline CMsgClientToGCRequestPlusWeeklyChallengeResult& operator=(const CMsgClientToGCRequestPlusWeeklyChallengeResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestPlusWeeklyChallengeResult(CMsgClientToGCRequestPlusWeeklyChallengeResult&& from) noexcept
    : CMsgClientToGCRequestPlusWeeklyChallengeResult() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestPlusWeeklyChallengeResult& operator=(CMsgClientToGCRequestPlusWeeklyChallengeResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestPlusWeeklyChallengeResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestPlusWeeklyChallengeResult* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestPlusWeeklyChallengeResult*>(
               &_CMsgClientToGCRequestPlusWeeklyChallengeResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    360;

  void Swap(CMsgClientToGCRequestPlusWeeklyChallengeResult* other);
  friend void swap(CMsgClientToGCRequestPlusWeeklyChallengeResult& a, CMsgClientToGCRequestPlusWeeklyChallengeResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestPlusWeeklyChallengeResult* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPlusWeeklyChallengeResult>(nullptr);
  }

  CMsgClientToGCRequestPlusWeeklyChallengeResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPlusWeeklyChallengeResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestPlusWeeklyChallengeResult& from);
  void MergeFrom(const CMsgClientToGCRequestPlusWeeklyChallengeResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestPlusWeeklyChallengeResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 week = 2;
  bool has_week() const;
  void clear_week();
  static const int kWeekFieldNumber = 2;
  ::google::protobuf::uint32 week() const;
  void set_week(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestPlusWeeklyChallengeResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int event_id_;
  ::google::protobuf::uint32 week_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestPlusWeeklyChallengeResultResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestPlusWeeklyChallengeResultResponse) */ {
 public:
  CMsgClientToGCRequestPlusWeeklyChallengeResultResponse();
  virtual ~CMsgClientToGCRequestPlusWeeklyChallengeResultResponse();

  CMsgClientToGCRequestPlusWeeklyChallengeResultResponse(const CMsgClientToGCRequestPlusWeeklyChallengeResultResponse& from);

  inline CMsgClientToGCRequestPlusWeeklyChallengeResultResponse& operator=(const CMsgClientToGCRequestPlusWeeklyChallengeResultResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRequestPlusWeeklyChallengeResultResponse(CMsgClientToGCRequestPlusWeeklyChallengeResultResponse&& from) noexcept
    : CMsgClientToGCRequestPlusWeeklyChallengeResultResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestPlusWeeklyChallengeResultResponse& operator=(CMsgClientToGCRequestPlusWeeklyChallengeResultResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRequestPlusWeeklyChallengeResultResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRequestPlusWeeklyChallengeResultResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestPlusWeeklyChallengeResultResponse*>(
               &_CMsgClientToGCRequestPlusWeeklyChallengeResultResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    361;

  void Swap(CMsgClientToGCRequestPlusWeeklyChallengeResultResponse* other);
  friend void swap(CMsgClientToGCRequestPlusWeeklyChallengeResultResponse& a, CMsgClientToGCRequestPlusWeeklyChallengeResultResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestPlusWeeklyChallengeResultResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPlusWeeklyChallengeResultResponse>(nullptr);
  }

  CMsgClientToGCRequestPlusWeeklyChallengeResultResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPlusWeeklyChallengeResultResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestPlusWeeklyChallengeResultResponse& from);
  void MergeFrom(const CMsgClientToGCRequestPlusWeeklyChallengeResultResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestPlusWeeklyChallengeResultResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestPlusWeeklyChallengeResultResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgProfileRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgProfileRequest) */ {
 public:
  CMsgProfileRequest();
  virtual ~CMsgProfileRequest();

  CMsgProfileRequest(const CMsgProfileRequest& from);

  inline CMsgProfileRequest& operator=(const CMsgProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgProfileRequest(CMsgProfileRequest&& from) noexcept
    : CMsgProfileRequest() {
    *this = ::std::move(from);
  }

  inline CMsgProfileRequest& operator=(CMsgProfileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgProfileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgProfileRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgProfileRequest*>(
               &_CMsgProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    362;

  void Swap(CMsgProfileRequest* other);
  friend void swap(CMsgProfileRequest& a, CMsgProfileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgProfileRequest* New() const final {
    return CreateMaybeMessage<CMsgProfileRequest>(nullptr);
  }

  CMsgProfileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgProfileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgProfileRequest& from);
  void MergeFrom(const CMsgProfileRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgProfileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgProfileRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgProfileResponse_FeaturedHero final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgProfileResponse.FeaturedHero) */ {
 public:
  CMsgProfileResponse_FeaturedHero();
  virtual ~CMsgProfileResponse_FeaturedHero();

  CMsgProfileResponse_FeaturedHero(const CMsgProfileResponse_FeaturedHero& from);

  inline CMsgProfileResponse_FeaturedHero& operator=(const CMsgProfileResponse_FeaturedHero& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgProfileResponse_FeaturedHero(CMsgProfileResponse_FeaturedHero&& from) noexcept
    : CMsgProfileResponse_FeaturedHero() {
    *this = ::std::move(from);
  }

  inline CMsgProfileResponse_FeaturedHero& operator=(CMsgProfileResponse_FeaturedHero&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgProfileResponse_FeaturedHero& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgProfileResponse_FeaturedHero* internal_default_instance() {
    return reinterpret_cast<const CMsgProfileResponse_FeaturedHero*>(
               &_CMsgProfileResponse_FeaturedHero_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    363;

  void Swap(CMsgProfileResponse_FeaturedHero* other);
  friend void swap(CMsgProfileResponse_FeaturedHero& a, CMsgProfileResponse_FeaturedHero& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgProfileResponse_FeaturedHero* New() const final {
    return CreateMaybeMessage<CMsgProfileResponse_FeaturedHero>(nullptr);
  }

  CMsgProfileResponse_FeaturedHero* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgProfileResponse_FeaturedHero>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgProfileResponse_FeaturedHero& from);
  void MergeFrom(const CMsgProfileResponse_FeaturedHero& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgProfileResponse_FeaturedHero* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CSOEconItem equipped_econ_items = 2;
  int equipped_econ_items_size() const;
  void clear_equipped_econ_items();
  static const int kEquippedEconItemsFieldNumber = 2;
  ::proto::dota::CSOEconItem* mutable_equipped_econ_items(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSOEconItem >*
      mutable_equipped_econ_items();
  const ::proto::dota::CSOEconItem& equipped_econ_items(int index) const;
  ::proto::dota::CSOEconItem* add_equipped_econ_items();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSOEconItem >&
      equipped_econ_items() const;

  // optional .proto.dota.CSOEconItem plus_hero_relics_item = 5;
  bool has_plus_hero_relics_item() const;
  void clear_plus_hero_relics_item();
  static const int kPlusHeroRelicsItemFieldNumber = 5;
  const ::proto::dota::CSOEconItem& plus_hero_relics_item() const;
  ::proto::dota::CSOEconItem* release_plus_hero_relics_item();
  ::proto::dota::CSOEconItem* mutable_plus_hero_relics_item();
  void set_allocated_plus_hero_relics_item(::proto::dota::CSOEconItem* plus_hero_relics_item);

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional bool manually_set = 3;
  bool has_manually_set() const;
  void clear_manually_set();
  static const int kManuallySetFieldNumber = 3;
  bool manually_set() const;
  void set_manually_set(bool value);

  // optional uint32 plus_hero_xp = 4;
  bool has_plus_hero_xp() const;
  void clear_plus_hero_xp();
  static const int kPlusHeroXpFieldNumber = 4;
  ::google::protobuf::uint32 plus_hero_xp() const;
  void set_plus_hero_xp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgProfileResponse.FeaturedHero)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSOEconItem > equipped_econ_items_;
  ::proto::dota::CSOEconItem* plus_hero_relics_item_;
  ::google::protobuf::uint32 hero_id_;
  bool manually_set_;
  ::google::protobuf::uint32 plus_hero_xp_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgProfileResponse_MatchInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgProfileResponse.MatchInfo) */ {
 public:
  CMsgProfileResponse_MatchInfo();
  virtual ~CMsgProfileResponse_MatchInfo();

  CMsgProfileResponse_MatchInfo(const CMsgProfileResponse_MatchInfo& from);

  inline CMsgProfileResponse_MatchInfo& operator=(const CMsgProfileResponse_MatchInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgProfileResponse_MatchInfo(CMsgProfileResponse_MatchInfo&& from) noexcept
    : CMsgProfileResponse_MatchInfo() {
    *this = ::std::move(from);
  }

  inline CMsgProfileResponse_MatchInfo& operator=(CMsgProfileResponse_MatchInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgProfileResponse_MatchInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgProfileResponse_MatchInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgProfileResponse_MatchInfo*>(
               &_CMsgProfileResponse_MatchInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    364;

  void Swap(CMsgProfileResponse_MatchInfo* other);
  friend void swap(CMsgProfileResponse_MatchInfo& a, CMsgProfileResponse_MatchInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgProfileResponse_MatchInfo* New() const final {
    return CreateMaybeMessage<CMsgProfileResponse_MatchInfo>(nullptr);
  }

  CMsgProfileResponse_MatchInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgProfileResponse_MatchInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgProfileResponse_MatchInfo& from);
  void MergeFrom(const CMsgProfileResponse_MatchInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgProfileResponse_MatchInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 match_timestamp = 2;
  bool has_match_timestamp() const;
  void clear_match_timestamp();
  static const int kMatchTimestampFieldNumber = 2;
  ::google::protobuf::uint32 match_timestamp() const;
  void set_match_timestamp(::google::protobuf::uint32 value);

  // optional sint32 performance_rating = 3;
  bool has_performance_rating() const;
  void clear_performance_rating();
  static const int kPerformanceRatingFieldNumber = 3;
  ::google::protobuf::int32 performance_rating() const;
  void set_performance_rating(::google::protobuf::int32 value);

  // optional uint32 hero_id = 4;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional bool won_match = 5;
  bool has_won_match() const;
  void clear_won_match();
  static const int kWonMatchFieldNumber = 5;
  bool won_match() const;
  void set_won_match(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgProfileResponse.MatchInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 match_timestamp_;
  ::google::protobuf::int32 performance_rating_;
  ::google::protobuf::uint32 hero_id_;
  bool won_match_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgProfileResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgProfileResponse) */ {
 public:
  CMsgProfileResponse();
  virtual ~CMsgProfileResponse();

  CMsgProfileResponse(const CMsgProfileResponse& from);

  inline CMsgProfileResponse& operator=(const CMsgProfileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgProfileResponse(CMsgProfileResponse&& from) noexcept
    : CMsgProfileResponse() {
    *this = ::std::move(from);
  }

  inline CMsgProfileResponse& operator=(CMsgProfileResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgProfileResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgProfileResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgProfileResponse*>(
               &_CMsgProfileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    365;

  void Swap(CMsgProfileResponse* other);
  friend void swap(CMsgProfileResponse& a, CMsgProfileResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgProfileResponse* New() const final {
    return CreateMaybeMessage<CMsgProfileResponse>(nullptr);
  }

  CMsgProfileResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgProfileResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgProfileResponse& from);
  void MergeFrom(const CMsgProfileResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgProfileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgProfileResponse_FeaturedHero FeaturedHero;
  typedef CMsgProfileResponse_MatchInfo MatchInfo;

  typedef CMsgProfileResponse_EResponse EResponse;
  static const EResponse k_eInternalError =
    CMsgProfileResponse_EResponse_k_eInternalError;
  static const EResponse k_eSuccess =
    CMsgProfileResponse_EResponse_k_eSuccess;
  static const EResponse k_eTooBusy =
    CMsgProfileResponse_EResponse_k_eTooBusy;
  static const EResponse k_eDisabled =
    CMsgProfileResponse_EResponse_k_eDisabled;
  static inline bool EResponse_IsValid(int value) {
    return CMsgProfileResponse_EResponse_IsValid(value);
  }
  static const EResponse EResponse_MIN =
    CMsgProfileResponse_EResponse_EResponse_MIN;
  static const EResponse EResponse_MAX =
    CMsgProfileResponse_EResponse_EResponse_MAX;
  static const int EResponse_ARRAYSIZE =
    CMsgProfileResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgProfileResponse_EResponse_descriptor();
  }
  static inline const ::std::string& EResponse_Name(EResponse value) {
    return CMsgProfileResponse_EResponse_Name(value);
  }
  static inline bool EResponse_Parse(const ::std::string& name,
      EResponse* value) {
    return CMsgProfileResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgProfileResponse.FeaturedHero featured_heroes = 2;
  int featured_heroes_size() const;
  void clear_featured_heroes();
  static const int kFeaturedHeroesFieldNumber = 2;
  ::proto::dota::CMsgProfileResponse_FeaturedHero* mutable_featured_heroes(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgProfileResponse_FeaturedHero >*
      mutable_featured_heroes();
  const ::proto::dota::CMsgProfileResponse_FeaturedHero& featured_heroes(int index) const;
  ::proto::dota::CMsgProfileResponse_FeaturedHero* add_featured_heroes();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgProfileResponse_FeaturedHero >&
      featured_heroes() const;

  // repeated .proto.dota.CMsgProfileResponse.MatchInfo recent_matches = 3;
  int recent_matches_size() const;
  void clear_recent_matches();
  static const int kRecentMatchesFieldNumber = 3;
  ::proto::dota::CMsgProfileResponse_MatchInfo* mutable_recent_matches(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgProfileResponse_MatchInfo >*
      mutable_recent_matches();
  const ::proto::dota::CMsgProfileResponse_MatchInfo& recent_matches(int index) const;
  ::proto::dota::CMsgProfileResponse_MatchInfo* add_recent_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgProfileResponse_MatchInfo >&
      recent_matches() const;

  // repeated .proto.dota.CMsgSuccessfulHero successful_heroes = 4;
  int successful_heroes_size() const;
  void clear_successful_heroes();
  static const int kSuccessfulHeroesFieldNumber = 4;
  ::proto::dota::CMsgSuccessfulHero* mutable_successful_heroes(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSuccessfulHero >*
      mutable_successful_heroes();
  const ::proto::dota::CMsgSuccessfulHero& successful_heroes(int index) const;
  ::proto::dota::CMsgSuccessfulHero* add_successful_heroes();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSuccessfulHero >&
      successful_heroes() const;

  // optional .proto.dota.CSOEconItem background_item = 1;
  bool has_background_item() const;
  void clear_background_item();
  static const int kBackgroundItemFieldNumber = 1;
  const ::proto::dota::CSOEconItem& background_item() const;
  ::proto::dota::CSOEconItem* release_background_item();
  ::proto::dota::CSOEconItem* mutable_background_item();
  void set_allocated_background_item(::proto::dota::CSOEconItem* background_item);

  // optional .proto.dota.CMsgRecentMatchInfo recent_match_details = 5;
  bool has_recent_match_details() const;
  void clear_recent_match_details();
  static const int kRecentMatchDetailsFieldNumber = 5;
  const ::proto::dota::CMsgRecentMatchInfo& recent_match_details() const;
  ::proto::dota::CMsgRecentMatchInfo* release_recent_match_details();
  ::proto::dota::CMsgRecentMatchInfo* mutable_recent_match_details();
  void set_allocated_recent_match_details(::proto::dota::CMsgRecentMatchInfo* recent_match_details);

  // optional .proto.dota.CMsgProfileResponse.EResponse result = 6 [default = k_eInternalError];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 6;
  ::proto::dota::CMsgProfileResponse_EResponse result() const;
  void set_result(::proto::dota::CMsgProfileResponse_EResponse value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgProfileResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgProfileResponse_FeaturedHero > featured_heroes_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgProfileResponse_MatchInfo > recent_matches_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSuccessfulHero > successful_heroes_;
  ::proto::dota::CSOEconItem* background_item_;
  ::proto::dota::CMsgRecentMatchInfo* recent_match_details_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgProfileUpdate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgProfileUpdate) */ {
 public:
  CMsgProfileUpdate();
  virtual ~CMsgProfileUpdate();

  CMsgProfileUpdate(const CMsgProfileUpdate& from);

  inline CMsgProfileUpdate& operator=(const CMsgProfileUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgProfileUpdate(CMsgProfileUpdate&& from) noexcept
    : CMsgProfileUpdate() {
    *this = ::std::move(from);
  }

  inline CMsgProfileUpdate& operator=(CMsgProfileUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgProfileUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgProfileUpdate* internal_default_instance() {
    return reinterpret_cast<const CMsgProfileUpdate*>(
               &_CMsgProfileUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    366;

  void Swap(CMsgProfileUpdate* other);
  friend void swap(CMsgProfileUpdate& a, CMsgProfileUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgProfileUpdate* New() const final {
    return CreateMaybeMessage<CMsgProfileUpdate>(nullptr);
  }

  CMsgProfileUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgProfileUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgProfileUpdate& from);
  void MergeFrom(const CMsgProfileUpdate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgProfileUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 featured_hero_ids = 2;
  int featured_hero_ids_size() const;
  void clear_featured_hero_ids();
  static const int kFeaturedHeroIdsFieldNumber = 2;
  ::google::protobuf::uint32 featured_hero_ids(int index) const;
  void set_featured_hero_ids(int index, ::google::protobuf::uint32 value);
  void add_featured_hero_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      featured_hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_featured_hero_ids();

  // optional uint64 background_item_id = 1;
  bool has_background_item_id() const;
  void clear_background_item_id();
  static const int kBackgroundItemIdFieldNumber = 1;
  ::google::protobuf::uint64 background_item_id() const;
  void set_background_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgProfileUpdate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > featured_hero_ids_;
  ::google::protobuf::uint64 background_item_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgProfileUpdateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgProfileUpdateResponse) */ {
 public:
  CMsgProfileUpdateResponse();
  virtual ~CMsgProfileUpdateResponse();

  CMsgProfileUpdateResponse(const CMsgProfileUpdateResponse& from);

  inline CMsgProfileUpdateResponse& operator=(const CMsgProfileUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgProfileUpdateResponse(CMsgProfileUpdateResponse&& from) noexcept
    : CMsgProfileUpdateResponse() {
    *this = ::std::move(from);
  }

  inline CMsgProfileUpdateResponse& operator=(CMsgProfileUpdateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgProfileUpdateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgProfileUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgProfileUpdateResponse*>(
               &_CMsgProfileUpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    367;

  void Swap(CMsgProfileUpdateResponse* other);
  friend void swap(CMsgProfileUpdateResponse& a, CMsgProfileUpdateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgProfileUpdateResponse* New() const final {
    return CreateMaybeMessage<CMsgProfileUpdateResponse>(nullptr);
  }

  CMsgProfileUpdateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgProfileUpdateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgProfileUpdateResponse& from);
  void MergeFrom(const CMsgProfileUpdateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgProfileUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgProfileUpdateResponse_Result Result;
  static const Result SUCCESS =
    CMsgProfileUpdateResponse_Result_SUCCESS;
  static const Result FAILURE =
    CMsgProfileUpdateResponse_Result_FAILURE;
  static inline bool Result_IsValid(int value) {
    return CMsgProfileUpdateResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgProfileUpdateResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgProfileUpdateResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgProfileUpdateResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgProfileUpdateResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgProfileUpdateResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgProfileUpdateResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgProfileUpdateResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgProfileUpdateResponse_Result result() const;
  void set_result(::proto::dota::CMsgProfileUpdateResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgProfileUpdateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgTalentWinRates final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgTalentWinRates) */ {
 public:
  CMsgTalentWinRates();
  virtual ~CMsgTalentWinRates();

  CMsgTalentWinRates(const CMsgTalentWinRates& from);

  inline CMsgTalentWinRates& operator=(const CMsgTalentWinRates& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTalentWinRates(CMsgTalentWinRates&& from) noexcept
    : CMsgTalentWinRates() {
    *this = ::std::move(from);
  }

  inline CMsgTalentWinRates& operator=(CMsgTalentWinRates&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgTalentWinRates& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTalentWinRates* internal_default_instance() {
    return reinterpret_cast<const CMsgTalentWinRates*>(
               &_CMsgTalentWinRates_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    368;

  void Swap(CMsgTalentWinRates* other);
  friend void swap(CMsgTalentWinRates& a, CMsgTalentWinRates& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTalentWinRates* New() const final {
    return CreateMaybeMessage<CMsgTalentWinRates>(nullptr);
  }

  CMsgTalentWinRates* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTalentWinRates>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgTalentWinRates& from);
  void MergeFrom(const CMsgTalentWinRates& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTalentWinRates* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 last_run = 1;
  bool has_last_run() const;
  void clear_last_run();
  static const int kLastRunFieldNumber = 1;
  ::google::protobuf::uint32 last_run() const;
  void set_last_run(::google::protobuf::uint32 value);

  // optional uint32 ability_id = 2;
  bool has_ability_id() const;
  void clear_ability_id();
  static const int kAbilityIdFieldNumber = 2;
  ::google::protobuf::uint32 ability_id() const;
  void set_ability_id(::google::protobuf::uint32 value);

  // optional uint32 game_count = 3;
  bool has_game_count() const;
  void clear_game_count();
  static const int kGameCountFieldNumber = 3;
  ::google::protobuf::uint32 game_count() const;
  void set_game_count(::google::protobuf::uint32 value);

  // optional uint32 win_count = 4;
  bool has_win_count() const;
  void clear_win_count();
  static const int kWinCountFieldNumber = 4;
  ::google::protobuf::uint32 win_count() const;
  void set_win_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgTalentWinRates)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 last_run_;
  ::google::protobuf::uint32 ability_id_;
  ::google::protobuf::uint32 game_count_;
  ::google::protobuf::uint32 win_count_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGlobalHeroAverages final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGlobalHeroAverages) */ {
 public:
  CMsgGlobalHeroAverages();
  virtual ~CMsgGlobalHeroAverages();

  CMsgGlobalHeroAverages(const CMsgGlobalHeroAverages& from);

  inline CMsgGlobalHeroAverages& operator=(const CMsgGlobalHeroAverages& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGlobalHeroAverages(CMsgGlobalHeroAverages&& from) noexcept
    : CMsgGlobalHeroAverages() {
    *this = ::std::move(from);
  }

  inline CMsgGlobalHeroAverages& operator=(CMsgGlobalHeroAverages&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGlobalHeroAverages& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGlobalHeroAverages* internal_default_instance() {
    return reinterpret_cast<const CMsgGlobalHeroAverages*>(
               &_CMsgGlobalHeroAverages_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    369;

  void Swap(CMsgGlobalHeroAverages* other);
  friend void swap(CMsgGlobalHeroAverages& a, CMsgGlobalHeroAverages& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGlobalHeroAverages* New() const final {
    return CreateMaybeMessage<CMsgGlobalHeroAverages>(nullptr);
  }

  CMsgGlobalHeroAverages* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGlobalHeroAverages>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGlobalHeroAverages& from);
  void MergeFrom(const CMsgGlobalHeroAverages& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGlobalHeroAverages* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 last_run = 1;
  bool has_last_run() const;
  void clear_last_run();
  static const int kLastRunFieldNumber = 1;
  ::google::protobuf::uint32 last_run() const;
  void set_last_run(::google::protobuf::uint32 value);

  // optional uint32 avg_gold_per_min = 3;
  bool has_avg_gold_per_min() const;
  void clear_avg_gold_per_min();
  static const int kAvgGoldPerMinFieldNumber = 3;
  ::google::protobuf::uint32 avg_gold_per_min() const;
  void set_avg_gold_per_min(::google::protobuf::uint32 value);

  // optional uint32 avg_xp_per_min = 4;
  bool has_avg_xp_per_min() const;
  void clear_avg_xp_per_min();
  static const int kAvgXpPerMinFieldNumber = 4;
  ::google::protobuf::uint32 avg_xp_per_min() const;
  void set_avg_xp_per_min(::google::protobuf::uint32 value);

  // optional uint32 avg_kills = 5;
  bool has_avg_kills() const;
  void clear_avg_kills();
  static const int kAvgKillsFieldNumber = 5;
  ::google::protobuf::uint32 avg_kills() const;
  void set_avg_kills(::google::protobuf::uint32 value);

  // optional uint32 avg_deaths = 6;
  bool has_avg_deaths() const;
  void clear_avg_deaths();
  static const int kAvgDeathsFieldNumber = 6;
  ::google::protobuf::uint32 avg_deaths() const;
  void set_avg_deaths(::google::protobuf::uint32 value);

  // optional uint32 avg_assists = 7;
  bool has_avg_assists() const;
  void clear_avg_assists();
  static const int kAvgAssistsFieldNumber = 7;
  ::google::protobuf::uint32 avg_assists() const;
  void set_avg_assists(::google::protobuf::uint32 value);

  // optional uint32 avg_last_hits = 8;
  bool has_avg_last_hits() const;
  void clear_avg_last_hits();
  static const int kAvgLastHitsFieldNumber = 8;
  ::google::protobuf::uint32 avg_last_hits() const;
  void set_avg_last_hits(::google::protobuf::uint32 value);

  // optional uint32 avg_denies = 9;
  bool has_avg_denies() const;
  void clear_avg_denies();
  static const int kAvgDeniesFieldNumber = 9;
  ::google::protobuf::uint32 avg_denies() const;
  void set_avg_denies(::google::protobuf::uint32 value);

  // optional uint32 avg_net_worth = 10;
  bool has_avg_net_worth() const;
  void clear_avg_net_worth();
  static const int kAvgNetWorthFieldNumber = 10;
  ::google::protobuf::uint32 avg_net_worth() const;
  void set_avg_net_worth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGlobalHeroAverages)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 last_run_;
  ::google::protobuf::uint32 avg_gold_per_min_;
  ::google::protobuf::uint32 avg_xp_per_min_;
  ::google::protobuf::uint32 avg_kills_;
  ::google::protobuf::uint32 avg_deaths_;
  ::google::protobuf::uint32 avg_assists_;
  ::google::protobuf::uint32 avg_last_hits_;
  ::google::protobuf::uint32 avg_denies_;
  ::google::protobuf::uint32 avg_net_worth_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroGlobalDataRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgHeroGlobalDataRequest) */ {
 public:
  CMsgHeroGlobalDataRequest();
  virtual ~CMsgHeroGlobalDataRequest();

  CMsgHeroGlobalDataRequest(const CMsgHeroGlobalDataRequest& from);

  inline CMsgHeroGlobalDataRequest& operator=(const CMsgHeroGlobalDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgHeroGlobalDataRequest(CMsgHeroGlobalDataRequest&& from) noexcept
    : CMsgHeroGlobalDataRequest() {
    *this = ::std::move(from);
  }

  inline CMsgHeroGlobalDataRequest& operator=(CMsgHeroGlobalDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgHeroGlobalDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgHeroGlobalDataRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroGlobalDataRequest*>(
               &_CMsgHeroGlobalDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    370;

  void Swap(CMsgHeroGlobalDataRequest* other);
  friend void swap(CMsgHeroGlobalDataRequest& a, CMsgHeroGlobalDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgHeroGlobalDataRequest* New() const final {
    return CreateMaybeMessage<CMsgHeroGlobalDataRequest>(nullptr);
  }

  CMsgHeroGlobalDataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgHeroGlobalDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgHeroGlobalDataRequest& from);
  void MergeFrom(const CMsgHeroGlobalDataRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroGlobalDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgHeroGlobalDataRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroGlobalDataResponse_GraphData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgHeroGlobalDataResponse.GraphData) */ {
 public:
  CMsgHeroGlobalDataResponse_GraphData();
  virtual ~CMsgHeroGlobalDataResponse_GraphData();

  CMsgHeroGlobalDataResponse_GraphData(const CMsgHeroGlobalDataResponse_GraphData& from);

  inline CMsgHeroGlobalDataResponse_GraphData& operator=(const CMsgHeroGlobalDataResponse_GraphData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgHeroGlobalDataResponse_GraphData(CMsgHeroGlobalDataResponse_GraphData&& from) noexcept
    : CMsgHeroGlobalDataResponse_GraphData() {
    *this = ::std::move(from);
  }

  inline CMsgHeroGlobalDataResponse_GraphData& operator=(CMsgHeroGlobalDataResponse_GraphData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgHeroGlobalDataResponse_GraphData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgHeroGlobalDataResponse_GraphData* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroGlobalDataResponse_GraphData*>(
               &_CMsgHeroGlobalDataResponse_GraphData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    371;

  void Swap(CMsgHeroGlobalDataResponse_GraphData* other);
  friend void swap(CMsgHeroGlobalDataResponse_GraphData& a, CMsgHeroGlobalDataResponse_GraphData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgHeroGlobalDataResponse_GraphData* New() const final {
    return CreateMaybeMessage<CMsgHeroGlobalDataResponse_GraphData>(nullptr);
  }

  CMsgHeroGlobalDataResponse_GraphData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgHeroGlobalDataResponse_GraphData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgHeroGlobalDataResponse_GraphData& from);
  void MergeFrom(const CMsgHeroGlobalDataResponse_GraphData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroGlobalDataResponse_GraphData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 day = 1;
  bool has_day() const;
  void clear_day();
  static const int kDayFieldNumber = 1;
  ::google::protobuf::uint32 day() const;
  void set_day(::google::protobuf::uint32 value);

  // optional float win_percent = 2;
  bool has_win_percent() const;
  void clear_win_percent();
  static const int kWinPercentFieldNumber = 2;
  float win_percent() const;
  void set_win_percent(float value);

  // optional float pick_percent = 3;
  bool has_pick_percent() const;
  void clear_pick_percent();
  static const int kPickPercentFieldNumber = 3;
  float pick_percent() const;
  void set_pick_percent(float value);

  // optional float ban_percent = 4;
  bool has_ban_percent() const;
  void clear_ban_percent();
  static const int kBanPercentFieldNumber = 4;
  float ban_percent() const;
  void set_ban_percent(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgHeroGlobalDataResponse.GraphData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 day_;
  float win_percent_;
  float pick_percent_;
  float ban_percent_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroGlobalDataResponse_WeekData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgHeroGlobalDataResponse.WeekData) */ {
 public:
  CMsgHeroGlobalDataResponse_WeekData();
  virtual ~CMsgHeroGlobalDataResponse_WeekData();

  CMsgHeroGlobalDataResponse_WeekData(const CMsgHeroGlobalDataResponse_WeekData& from);

  inline CMsgHeroGlobalDataResponse_WeekData& operator=(const CMsgHeroGlobalDataResponse_WeekData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgHeroGlobalDataResponse_WeekData(CMsgHeroGlobalDataResponse_WeekData&& from) noexcept
    : CMsgHeroGlobalDataResponse_WeekData() {
    *this = ::std::move(from);
  }

  inline CMsgHeroGlobalDataResponse_WeekData& operator=(CMsgHeroGlobalDataResponse_WeekData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgHeroGlobalDataResponse_WeekData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgHeroGlobalDataResponse_WeekData* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroGlobalDataResponse_WeekData*>(
               &_CMsgHeroGlobalDataResponse_WeekData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    372;

  void Swap(CMsgHeroGlobalDataResponse_WeekData* other);
  friend void swap(CMsgHeroGlobalDataResponse_WeekData& a, CMsgHeroGlobalDataResponse_WeekData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgHeroGlobalDataResponse_WeekData* New() const final {
    return CreateMaybeMessage<CMsgHeroGlobalDataResponse_WeekData>(nullptr);
  }

  CMsgHeroGlobalDataResponse_WeekData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgHeroGlobalDataResponse_WeekData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgHeroGlobalDataResponse_WeekData& from);
  void MergeFrom(const CMsgHeroGlobalDataResponse_WeekData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroGlobalDataResponse_WeekData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 week = 1;
  bool has_week() const;
  void clear_week();
  static const int kWeekFieldNumber = 1;
  ::google::protobuf::uint32 week() const;
  void set_week(::google::protobuf::uint32 value);

  // optional float win_percent = 2;
  bool has_win_percent() const;
  void clear_win_percent();
  static const int kWinPercentFieldNumber = 2;
  float win_percent() const;
  void set_win_percent(float value);

  // optional float pick_percent = 3;
  bool has_pick_percent() const;
  void clear_pick_percent();
  static const int kPickPercentFieldNumber = 3;
  float pick_percent() const;
  void set_pick_percent(float value);

  // optional float ban_percent = 4;
  bool has_ban_percent() const;
  void clear_ban_percent();
  static const int kBanPercentFieldNumber = 4;
  float ban_percent() const;
  void set_ban_percent(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgHeroGlobalDataResponse.WeekData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 week_;
  float win_percent_;
  float pick_percent_;
  float ban_percent_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroGlobalDataResponse_HeroDataPerRankChunk final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk) */ {
 public:
  CMsgHeroGlobalDataResponse_HeroDataPerRankChunk();
  virtual ~CMsgHeroGlobalDataResponse_HeroDataPerRankChunk();

  CMsgHeroGlobalDataResponse_HeroDataPerRankChunk(const CMsgHeroGlobalDataResponse_HeroDataPerRankChunk& from);

  inline CMsgHeroGlobalDataResponse_HeroDataPerRankChunk& operator=(const CMsgHeroGlobalDataResponse_HeroDataPerRankChunk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgHeroGlobalDataResponse_HeroDataPerRankChunk(CMsgHeroGlobalDataResponse_HeroDataPerRankChunk&& from) noexcept
    : CMsgHeroGlobalDataResponse_HeroDataPerRankChunk() {
    *this = ::std::move(from);
  }

  inline CMsgHeroGlobalDataResponse_HeroDataPerRankChunk& operator=(CMsgHeroGlobalDataResponse_HeroDataPerRankChunk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgHeroGlobalDataResponse_HeroDataPerRankChunk& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgHeroGlobalDataResponse_HeroDataPerRankChunk* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroGlobalDataResponse_HeroDataPerRankChunk*>(
               &_CMsgHeroGlobalDataResponse_HeroDataPerRankChunk_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    373;

  void Swap(CMsgHeroGlobalDataResponse_HeroDataPerRankChunk* other);
  friend void swap(CMsgHeroGlobalDataResponse_HeroDataPerRankChunk& a, CMsgHeroGlobalDataResponse_HeroDataPerRankChunk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgHeroGlobalDataResponse_HeroDataPerRankChunk* New() const final {
    return CreateMaybeMessage<CMsgHeroGlobalDataResponse_HeroDataPerRankChunk>(nullptr);
  }

  CMsgHeroGlobalDataResponse_HeroDataPerRankChunk* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgHeroGlobalDataResponse_HeroDataPerRankChunk>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgHeroGlobalDataResponse_HeroDataPerRankChunk& from);
  void MergeFrom(const CMsgHeroGlobalDataResponse_HeroDataPerRankChunk& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroGlobalDataResponse_HeroDataPerRankChunk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgTalentWinRates talent_win_rates = 2;
  int talent_win_rates_size() const;
  void clear_talent_win_rates();
  static const int kTalentWinRatesFieldNumber = 2;
  ::proto::dota::CMsgTalentWinRates* mutable_talent_win_rates(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgTalentWinRates >*
      mutable_talent_win_rates();
  const ::proto::dota::CMsgTalentWinRates& talent_win_rates(int index) const;
  ::proto::dota::CMsgTalentWinRates* add_talent_win_rates();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgTalentWinRates >&
      talent_win_rates() const;

  // repeated .proto.dota.CMsgHeroGlobalDataResponse.GraphData graph_data = 4;
  int graph_data_size() const;
  void clear_graph_data();
  static const int kGraphDataFieldNumber = 4;
  ::proto::dota::CMsgHeroGlobalDataResponse_GraphData* mutable_graph_data(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_GraphData >*
      mutable_graph_data();
  const ::proto::dota::CMsgHeroGlobalDataResponse_GraphData& graph_data(int index) const;
  ::proto::dota::CMsgHeroGlobalDataResponse_GraphData* add_graph_data();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_GraphData >&
      graph_data() const;

  // repeated .proto.dota.CMsgHeroGlobalDataResponse.WeekData week_data = 5;
  int week_data_size() const;
  void clear_week_data();
  static const int kWeekDataFieldNumber = 5;
  ::proto::dota::CMsgHeroGlobalDataResponse_WeekData* mutable_week_data(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_WeekData >*
      mutable_week_data();
  const ::proto::dota::CMsgHeroGlobalDataResponse_WeekData& week_data(int index) const;
  ::proto::dota::CMsgHeroGlobalDataResponse_WeekData* add_week_data();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_WeekData >&
      week_data() const;

  // optional .proto.dota.CMsgGlobalHeroAverages hero_averages = 3;
  bool has_hero_averages() const;
  void clear_hero_averages();
  static const int kHeroAveragesFieldNumber = 3;
  const ::proto::dota::CMsgGlobalHeroAverages& hero_averages() const;
  ::proto::dota::CMsgGlobalHeroAverages* release_hero_averages();
  ::proto::dota::CMsgGlobalHeroAverages* mutable_hero_averages();
  void set_allocated_hero_averages(::proto::dota::CMsgGlobalHeroAverages* hero_averages);

  // optional uint32 rank_chunk = 1;
  bool has_rank_chunk() const;
  void clear_rank_chunk();
  static const int kRankChunkFieldNumber = 1;
  ::google::protobuf::uint32 rank_chunk() const;
  void set_rank_chunk(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgTalentWinRates > talent_win_rates_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_GraphData > graph_data_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_WeekData > week_data_;
  ::proto::dota::CMsgGlobalHeroAverages* hero_averages_;
  ::google::protobuf::uint32 rank_chunk_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroGlobalDataResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgHeroGlobalDataResponse) */ {
 public:
  CMsgHeroGlobalDataResponse();
  virtual ~CMsgHeroGlobalDataResponse();

  CMsgHeroGlobalDataResponse(const CMsgHeroGlobalDataResponse& from);

  inline CMsgHeroGlobalDataResponse& operator=(const CMsgHeroGlobalDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgHeroGlobalDataResponse(CMsgHeroGlobalDataResponse&& from) noexcept
    : CMsgHeroGlobalDataResponse() {
    *this = ::std::move(from);
  }

  inline CMsgHeroGlobalDataResponse& operator=(CMsgHeroGlobalDataResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgHeroGlobalDataResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgHeroGlobalDataResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroGlobalDataResponse*>(
               &_CMsgHeroGlobalDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    374;

  void Swap(CMsgHeroGlobalDataResponse* other);
  friend void swap(CMsgHeroGlobalDataResponse& a, CMsgHeroGlobalDataResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgHeroGlobalDataResponse* New() const final {
    return CreateMaybeMessage<CMsgHeroGlobalDataResponse>(nullptr);
  }

  CMsgHeroGlobalDataResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgHeroGlobalDataResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgHeroGlobalDataResponse& from);
  void MergeFrom(const CMsgHeroGlobalDataResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroGlobalDataResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgHeroGlobalDataResponse_GraphData GraphData;
  typedef CMsgHeroGlobalDataResponse_WeekData WeekData;
  typedef CMsgHeroGlobalDataResponse_HeroDataPerRankChunk HeroDataPerRankChunk;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk hero_data_per_chunk = 2;
  int hero_data_per_chunk_size() const;
  void clear_hero_data_per_chunk();
  static const int kHeroDataPerChunkFieldNumber = 2;
  ::proto::dota::CMsgHeroGlobalDataResponse_HeroDataPerRankChunk* mutable_hero_data_per_chunk(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_HeroDataPerRankChunk >*
      mutable_hero_data_per_chunk();
  const ::proto::dota::CMsgHeroGlobalDataResponse_HeroDataPerRankChunk& hero_data_per_chunk(int index) const;
  ::proto::dota::CMsgHeroGlobalDataResponse_HeroDataPerRankChunk* add_hero_data_per_chunk();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_HeroDataPerRankChunk >&
      hero_data_per_chunk() const;

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgHeroGlobalDataResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_HeroDataPerRankChunk > hero_data_per_chunk_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroGlobalDataAllHeroes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgHeroGlobalDataAllHeroes) */ {
 public:
  CMsgHeroGlobalDataAllHeroes();
  virtual ~CMsgHeroGlobalDataAllHeroes();

  CMsgHeroGlobalDataAllHeroes(const CMsgHeroGlobalDataAllHeroes& from);

  inline CMsgHeroGlobalDataAllHeroes& operator=(const CMsgHeroGlobalDataAllHeroes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgHeroGlobalDataAllHeroes(CMsgHeroGlobalDataAllHeroes&& from) noexcept
    : CMsgHeroGlobalDataAllHeroes() {
    *this = ::std::move(from);
  }

  inline CMsgHeroGlobalDataAllHeroes& operator=(CMsgHeroGlobalDataAllHeroes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgHeroGlobalDataAllHeroes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgHeroGlobalDataAllHeroes* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroGlobalDataAllHeroes*>(
               &_CMsgHeroGlobalDataAllHeroes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    375;

  void Swap(CMsgHeroGlobalDataAllHeroes* other);
  friend void swap(CMsgHeroGlobalDataAllHeroes& a, CMsgHeroGlobalDataAllHeroes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgHeroGlobalDataAllHeroes* New() const final {
    return CreateMaybeMessage<CMsgHeroGlobalDataAllHeroes>(nullptr);
  }

  CMsgHeroGlobalDataAllHeroes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgHeroGlobalDataAllHeroes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgHeroGlobalDataAllHeroes& from);
  void MergeFrom(const CMsgHeroGlobalDataAllHeroes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroGlobalDataAllHeroes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgHeroGlobalDataResponse heroes = 1;
  int heroes_size() const;
  void clear_heroes();
  static const int kHeroesFieldNumber = 1;
  ::proto::dota::CMsgHeroGlobalDataResponse* mutable_heroes(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse >*
      mutable_heroes();
  const ::proto::dota::CMsgHeroGlobalDataResponse& heroes(int index) const;
  ::proto::dota::CMsgHeroGlobalDataResponse* add_heroes();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse >&
      heroes() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgHeroGlobalDataAllHeroes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse > heroes_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPrivateMetadataKeyRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPrivateMetadataKeyRequest) */ {
 public:
  CMsgPrivateMetadataKeyRequest();
  virtual ~CMsgPrivateMetadataKeyRequest();

  CMsgPrivateMetadataKeyRequest(const CMsgPrivateMetadataKeyRequest& from);

  inline CMsgPrivateMetadataKeyRequest& operator=(const CMsgPrivateMetadataKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPrivateMetadataKeyRequest(CMsgPrivateMetadataKeyRequest&& from) noexcept
    : CMsgPrivateMetadataKeyRequest() {
    *this = ::std::move(from);
  }

  inline CMsgPrivateMetadataKeyRequest& operator=(CMsgPrivateMetadataKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPrivateMetadataKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPrivateMetadataKeyRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgPrivateMetadataKeyRequest*>(
               &_CMsgPrivateMetadataKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    376;

  void Swap(CMsgPrivateMetadataKeyRequest* other);
  friend void swap(CMsgPrivateMetadataKeyRequest& a, CMsgPrivateMetadataKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPrivateMetadataKeyRequest* New() const final {
    return CreateMaybeMessage<CMsgPrivateMetadataKeyRequest>(nullptr);
  }

  CMsgPrivateMetadataKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPrivateMetadataKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPrivateMetadataKeyRequest& from);
  void MergeFrom(const CMsgPrivateMetadataKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPrivateMetadataKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPrivateMetadataKeyRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgPrivateMetadataKeyResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPrivateMetadataKeyResponse) */ {
 public:
  CMsgPrivateMetadataKeyResponse();
  virtual ~CMsgPrivateMetadataKeyResponse();

  CMsgPrivateMetadataKeyResponse(const CMsgPrivateMetadataKeyResponse& from);

  inline CMsgPrivateMetadataKeyResponse& operator=(const CMsgPrivateMetadataKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPrivateMetadataKeyResponse(CMsgPrivateMetadataKeyResponse&& from) noexcept
    : CMsgPrivateMetadataKeyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgPrivateMetadataKeyResponse& operator=(CMsgPrivateMetadataKeyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPrivateMetadataKeyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPrivateMetadataKeyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgPrivateMetadataKeyResponse*>(
               &_CMsgPrivateMetadataKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    377;

  void Swap(CMsgPrivateMetadataKeyResponse* other);
  friend void swap(CMsgPrivateMetadataKeyResponse& a, CMsgPrivateMetadataKeyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPrivateMetadataKeyResponse* New() const final {
    return CreateMaybeMessage<CMsgPrivateMetadataKeyResponse>(nullptr);
  }

  CMsgPrivateMetadataKeyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPrivateMetadataKeyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPrivateMetadataKeyResponse& from);
  void MergeFrom(const CMsgPrivateMetadataKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPrivateMetadataKeyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 private_key = 1;
  bool has_private_key() const;
  void clear_private_key();
  static const int kPrivateKeyFieldNumber = 1;
  ::google::protobuf::uint32 private_key() const;
  void set_private_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPrivateMetadataKeyResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 private_key_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgActivatePlusFreeTrialRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgActivatePlusFreeTrialRequest) */ {
 public:
  CMsgActivatePlusFreeTrialRequest();
  virtual ~CMsgActivatePlusFreeTrialRequest();

  CMsgActivatePlusFreeTrialRequest(const CMsgActivatePlusFreeTrialRequest& from);

  inline CMsgActivatePlusFreeTrialRequest& operator=(const CMsgActivatePlusFreeTrialRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgActivatePlusFreeTrialRequest(CMsgActivatePlusFreeTrialRequest&& from) noexcept
    : CMsgActivatePlusFreeTrialRequest() {
    *this = ::std::move(from);
  }

  inline CMsgActivatePlusFreeTrialRequest& operator=(CMsgActivatePlusFreeTrialRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgActivatePlusFreeTrialRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgActivatePlusFreeTrialRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgActivatePlusFreeTrialRequest*>(
               &_CMsgActivatePlusFreeTrialRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    378;

  void Swap(CMsgActivatePlusFreeTrialRequest* other);
  friend void swap(CMsgActivatePlusFreeTrialRequest& a, CMsgActivatePlusFreeTrialRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgActivatePlusFreeTrialRequest* New() const final {
    return CreateMaybeMessage<CMsgActivatePlusFreeTrialRequest>(nullptr);
  }

  CMsgActivatePlusFreeTrialRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgActivatePlusFreeTrialRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgActivatePlusFreeTrialRequest& from);
  void MergeFrom(const CMsgActivatePlusFreeTrialRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgActivatePlusFreeTrialRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgActivatePlusFreeTrialRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgActivatePlusFreeTrialResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgActivatePlusFreeTrialResponse) */ {
 public:
  CMsgActivatePlusFreeTrialResponse();
  virtual ~CMsgActivatePlusFreeTrialResponse();

  CMsgActivatePlusFreeTrialResponse(const CMsgActivatePlusFreeTrialResponse& from);

  inline CMsgActivatePlusFreeTrialResponse& operator=(const CMsgActivatePlusFreeTrialResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgActivatePlusFreeTrialResponse(CMsgActivatePlusFreeTrialResponse&& from) noexcept
    : CMsgActivatePlusFreeTrialResponse() {
    *this = ::std::move(from);
  }

  inline CMsgActivatePlusFreeTrialResponse& operator=(CMsgActivatePlusFreeTrialResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgActivatePlusFreeTrialResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgActivatePlusFreeTrialResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgActivatePlusFreeTrialResponse*>(
               &_CMsgActivatePlusFreeTrialResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    379;

  void Swap(CMsgActivatePlusFreeTrialResponse* other);
  friend void swap(CMsgActivatePlusFreeTrialResponse& a, CMsgActivatePlusFreeTrialResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgActivatePlusFreeTrialResponse* New() const final {
    return CreateMaybeMessage<CMsgActivatePlusFreeTrialResponse>(nullptr);
  }

  CMsgActivatePlusFreeTrialResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgActivatePlusFreeTrialResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgActivatePlusFreeTrialResponse& from);
  void MergeFrom(const CMsgActivatePlusFreeTrialResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgActivatePlusFreeTrialResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgActivatePlusFreeTrialResponse_Result Result;
  static const Result SUCCESS =
    CMsgActivatePlusFreeTrialResponse_Result_SUCCESS;
  static const Result ERROR_GENERIC =
    CMsgActivatePlusFreeTrialResponse_Result_ERROR_GENERIC;
  static const Result ERROR_ALREADY_IN_FREE_TRIAL =
    CMsgActivatePlusFreeTrialResponse_Result_ERROR_ALREADY_IN_FREE_TRIAL;
  static const Result ERROR_ALREADY_USED_FREE_TRIAL =
    CMsgActivatePlusFreeTrialResponse_Result_ERROR_ALREADY_USED_FREE_TRIAL;
  static const Result ERROR_OFFER_NOT_VALID =
    CMsgActivatePlusFreeTrialResponse_Result_ERROR_OFFER_NOT_VALID;
  static inline bool Result_IsValid(int value) {
    return CMsgActivatePlusFreeTrialResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgActivatePlusFreeTrialResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgActivatePlusFreeTrialResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgActivatePlusFreeTrialResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgActivatePlusFreeTrialResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgActivatePlusFreeTrialResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgActivatePlusFreeTrialResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgActivatePlusFreeTrialResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgActivatePlusFreeTrialResponse_Result result() const;
  void set_result(::proto::dota::CMsgActivatePlusFreeTrialResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgActivatePlusFreeTrialResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientCavernCrawlMapPathCompleted final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientCavernCrawlMapPathCompleted) */ {
 public:
  CMsgGCToClientCavernCrawlMapPathCompleted();
  virtual ~CMsgGCToClientCavernCrawlMapPathCompleted();

  CMsgGCToClientCavernCrawlMapPathCompleted(const CMsgGCToClientCavernCrawlMapPathCompleted& from);

  inline CMsgGCToClientCavernCrawlMapPathCompleted& operator=(const CMsgGCToClientCavernCrawlMapPathCompleted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientCavernCrawlMapPathCompleted(CMsgGCToClientCavernCrawlMapPathCompleted&& from) noexcept
    : CMsgGCToClientCavernCrawlMapPathCompleted() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientCavernCrawlMapPathCompleted& operator=(CMsgGCToClientCavernCrawlMapPathCompleted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientCavernCrawlMapPathCompleted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientCavernCrawlMapPathCompleted* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientCavernCrawlMapPathCompleted*>(
               &_CMsgGCToClientCavernCrawlMapPathCompleted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    380;

  void Swap(CMsgGCToClientCavernCrawlMapPathCompleted* other);
  friend void swap(CMsgGCToClientCavernCrawlMapPathCompleted& a, CMsgGCToClientCavernCrawlMapPathCompleted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientCavernCrawlMapPathCompleted* New() const final {
    return CreateMaybeMessage<CMsgGCToClientCavernCrawlMapPathCompleted>(nullptr);
  }

  CMsgGCToClientCavernCrawlMapPathCompleted* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientCavernCrawlMapPathCompleted>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientCavernCrawlMapPathCompleted& from);
  void MergeFrom(const CMsgGCToClientCavernCrawlMapPathCompleted& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientCavernCrawlMapPathCompleted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 path_id_completed = 2;
  bool has_path_id_completed() const;
  void clear_path_id_completed();
  static const int kPathIdCompletedFieldNumber = 2;
  ::google::protobuf::uint32 path_id_completed() const;
  void set_path_id_completed(::google::protobuf::uint32 value);

  // optional uint32 hero_id_completed = 3;
  bool has_hero_id_completed() const;
  void clear_hero_id_completed();
  static const int kHeroIdCompletedFieldNumber = 3;
  ::google::protobuf::uint32 hero_id_completed() const;
  void set_hero_id_completed(::google::protobuf::uint32 value);

  // optional bool received_ultra_rare_reward = 4;
  bool has_received_ultra_rare_reward() const;
  void clear_received_ultra_rare_reward();
  static const int kReceivedUltraRareRewardFieldNumber = 4;
  bool received_ultra_rare_reward() const;
  void set_received_ultra_rare_reward(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientCavernCrawlMapPathCompleted)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 path_id_completed_;
  ::google::protobuf::uint32 hero_id_completed_;
  bool received_ultra_rare_reward_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCavernCrawlClaimRoom final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCavernCrawlClaimRoom) */ {
 public:
  CMsgClientToGCCavernCrawlClaimRoom();
  virtual ~CMsgClientToGCCavernCrawlClaimRoom();

  CMsgClientToGCCavernCrawlClaimRoom(const CMsgClientToGCCavernCrawlClaimRoom& from);

  inline CMsgClientToGCCavernCrawlClaimRoom& operator=(const CMsgClientToGCCavernCrawlClaimRoom& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCavernCrawlClaimRoom(CMsgClientToGCCavernCrawlClaimRoom&& from) noexcept
    : CMsgClientToGCCavernCrawlClaimRoom() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCavernCrawlClaimRoom& operator=(CMsgClientToGCCavernCrawlClaimRoom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCavernCrawlClaimRoom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCavernCrawlClaimRoom* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCavernCrawlClaimRoom*>(
               &_CMsgClientToGCCavernCrawlClaimRoom_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    381;

  void Swap(CMsgClientToGCCavernCrawlClaimRoom* other);
  friend void swap(CMsgClientToGCCavernCrawlClaimRoom& a, CMsgClientToGCCavernCrawlClaimRoom& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCavernCrawlClaimRoom* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlClaimRoom>(nullptr);
  }

  CMsgClientToGCCavernCrawlClaimRoom* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlClaimRoom>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCavernCrawlClaimRoom& from);
  void MergeFrom(const CMsgClientToGCCavernCrawlClaimRoom& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCavernCrawlClaimRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCavernCrawlClaimRoom)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 room_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCavernCrawlClaimRoomResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCavernCrawlClaimRoomResponse) */ {
 public:
  CMsgClientToGCCavernCrawlClaimRoomResponse();
  virtual ~CMsgClientToGCCavernCrawlClaimRoomResponse();

  CMsgClientToGCCavernCrawlClaimRoomResponse(const CMsgClientToGCCavernCrawlClaimRoomResponse& from);

  inline CMsgClientToGCCavernCrawlClaimRoomResponse& operator=(const CMsgClientToGCCavernCrawlClaimRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCavernCrawlClaimRoomResponse(CMsgClientToGCCavernCrawlClaimRoomResponse&& from) noexcept
    : CMsgClientToGCCavernCrawlClaimRoomResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCavernCrawlClaimRoomResponse& operator=(CMsgClientToGCCavernCrawlClaimRoomResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCavernCrawlClaimRoomResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCavernCrawlClaimRoomResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCavernCrawlClaimRoomResponse*>(
               &_CMsgClientToGCCavernCrawlClaimRoomResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    382;

  void Swap(CMsgClientToGCCavernCrawlClaimRoomResponse* other);
  friend void swap(CMsgClientToGCCavernCrawlClaimRoomResponse& a, CMsgClientToGCCavernCrawlClaimRoomResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCavernCrawlClaimRoomResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlClaimRoomResponse>(nullptr);
  }

  CMsgClientToGCCavernCrawlClaimRoomResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlClaimRoomResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCavernCrawlClaimRoomResponse& from);
  void MergeFrom(const CMsgClientToGCCavernCrawlClaimRoomResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCavernCrawlClaimRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCavernCrawlClaimRoomResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCCavernCrawlClaimRoomResponse_Result_SUCCESS;
  static const Result ERROR_UNKNOWN =
    CMsgClientToGCCavernCrawlClaimRoomResponse_Result_ERROR_UNKNOWN;
  static const Result RECEIVED_ULTRA_RARE_REWARD =
    CMsgClientToGCCavernCrawlClaimRoomResponse_Result_RECEIVED_ULTRA_RARE_REWARD;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCCavernCrawlClaimRoomResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCCavernCrawlClaimRoomResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCCavernCrawlClaimRoomResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCCavernCrawlClaimRoomResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCCavernCrawlClaimRoomResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCCavernCrawlClaimRoomResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCCavernCrawlClaimRoomResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCCavernCrawlClaimRoomResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCCavernCrawlClaimRoomResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCCavernCrawlClaimRoomResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCavernCrawlClaimRoomResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCavernCrawlUseItemOnRoom final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoom) */ {
 public:
  CMsgClientToGCCavernCrawlUseItemOnRoom();
  virtual ~CMsgClientToGCCavernCrawlUseItemOnRoom();

  CMsgClientToGCCavernCrawlUseItemOnRoom(const CMsgClientToGCCavernCrawlUseItemOnRoom& from);

  inline CMsgClientToGCCavernCrawlUseItemOnRoom& operator=(const CMsgClientToGCCavernCrawlUseItemOnRoom& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCavernCrawlUseItemOnRoom(CMsgClientToGCCavernCrawlUseItemOnRoom&& from) noexcept
    : CMsgClientToGCCavernCrawlUseItemOnRoom() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCavernCrawlUseItemOnRoom& operator=(CMsgClientToGCCavernCrawlUseItemOnRoom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCavernCrawlUseItemOnRoom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCavernCrawlUseItemOnRoom* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCavernCrawlUseItemOnRoom*>(
               &_CMsgClientToGCCavernCrawlUseItemOnRoom_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    383;

  void Swap(CMsgClientToGCCavernCrawlUseItemOnRoom* other);
  friend void swap(CMsgClientToGCCavernCrawlUseItemOnRoom& a, CMsgClientToGCCavernCrawlUseItemOnRoom& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCavernCrawlUseItemOnRoom* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlUseItemOnRoom>(nullptr);
  }

  CMsgClientToGCCavernCrawlUseItemOnRoom* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlUseItemOnRoom>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCavernCrawlUseItemOnRoom& from);
  void MergeFrom(const CMsgClientToGCCavernCrawlUseItemOnRoom& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCavernCrawlUseItemOnRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 item_type = 3;
  bool has_item_type() const;
  void clear_item_type();
  static const int kItemTypeFieldNumber = 3;
  ::google::protobuf::uint32 item_type() const;
  void set_item_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoom)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 item_type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCavernCrawlUseItemOnRoomResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoomResponse) */ {
 public:
  CMsgClientToGCCavernCrawlUseItemOnRoomResponse();
  virtual ~CMsgClientToGCCavernCrawlUseItemOnRoomResponse();

  CMsgClientToGCCavernCrawlUseItemOnRoomResponse(const CMsgClientToGCCavernCrawlUseItemOnRoomResponse& from);

  inline CMsgClientToGCCavernCrawlUseItemOnRoomResponse& operator=(const CMsgClientToGCCavernCrawlUseItemOnRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCavernCrawlUseItemOnRoomResponse(CMsgClientToGCCavernCrawlUseItemOnRoomResponse&& from) noexcept
    : CMsgClientToGCCavernCrawlUseItemOnRoomResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCavernCrawlUseItemOnRoomResponse& operator=(CMsgClientToGCCavernCrawlUseItemOnRoomResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCavernCrawlUseItemOnRoomResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCavernCrawlUseItemOnRoomResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCavernCrawlUseItemOnRoomResponse*>(
               &_CMsgClientToGCCavernCrawlUseItemOnRoomResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    384;

  void Swap(CMsgClientToGCCavernCrawlUseItemOnRoomResponse* other);
  friend void swap(CMsgClientToGCCavernCrawlUseItemOnRoomResponse& a, CMsgClientToGCCavernCrawlUseItemOnRoomResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCavernCrawlUseItemOnRoomResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlUseItemOnRoomResponse>(nullptr);
  }

  CMsgClientToGCCavernCrawlUseItemOnRoomResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlUseItemOnRoomResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCavernCrawlUseItemOnRoomResponse& from);
  void MergeFrom(const CMsgClientToGCCavernCrawlUseItemOnRoomResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCavernCrawlUseItemOnRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_SUCCESS;
  static const Result ERROR_UNKNOWN =
    CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_ERROR_UNKNOWN;
  static const Result RECEIVED_ULTRA_RARE_REWARD =
    CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_RECEIVED_ULTRA_RARE_REWARD;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoomResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoomResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCavernCrawlUseItemOnPath final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCavernCrawlUseItemOnPath) */ {
 public:
  CMsgClientToGCCavernCrawlUseItemOnPath();
  virtual ~CMsgClientToGCCavernCrawlUseItemOnPath();

  CMsgClientToGCCavernCrawlUseItemOnPath(const CMsgClientToGCCavernCrawlUseItemOnPath& from);

  inline CMsgClientToGCCavernCrawlUseItemOnPath& operator=(const CMsgClientToGCCavernCrawlUseItemOnPath& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCavernCrawlUseItemOnPath(CMsgClientToGCCavernCrawlUseItemOnPath&& from) noexcept
    : CMsgClientToGCCavernCrawlUseItemOnPath() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCavernCrawlUseItemOnPath& operator=(CMsgClientToGCCavernCrawlUseItemOnPath&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCavernCrawlUseItemOnPath& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCavernCrawlUseItemOnPath* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCavernCrawlUseItemOnPath*>(
               &_CMsgClientToGCCavernCrawlUseItemOnPath_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    385;

  void Swap(CMsgClientToGCCavernCrawlUseItemOnPath* other);
  friend void swap(CMsgClientToGCCavernCrawlUseItemOnPath& a, CMsgClientToGCCavernCrawlUseItemOnPath& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCavernCrawlUseItemOnPath* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlUseItemOnPath>(nullptr);
  }

  CMsgClientToGCCavernCrawlUseItemOnPath* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlUseItemOnPath>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCavernCrawlUseItemOnPath& from);
  void MergeFrom(const CMsgClientToGCCavernCrawlUseItemOnPath& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCavernCrawlUseItemOnPath* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 path_id = 2;
  bool has_path_id() const;
  void clear_path_id();
  static const int kPathIdFieldNumber = 2;
  ::google::protobuf::uint32 path_id() const;
  void set_path_id(::google::protobuf::uint32 value);

  // optional uint32 item_type = 3;
  bool has_item_type() const;
  void clear_item_type();
  static const int kItemTypeFieldNumber = 3;
  ::google::protobuf::uint32 item_type() const;
  void set_item_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCavernCrawlUseItemOnPath)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 path_id_;
  ::google::protobuf::uint32 item_type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCavernCrawlUseItemOnPathResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCavernCrawlUseItemOnPathResponse) */ {
 public:
  CMsgClientToGCCavernCrawlUseItemOnPathResponse();
  virtual ~CMsgClientToGCCavernCrawlUseItemOnPathResponse();

  CMsgClientToGCCavernCrawlUseItemOnPathResponse(const CMsgClientToGCCavernCrawlUseItemOnPathResponse& from);

  inline CMsgClientToGCCavernCrawlUseItemOnPathResponse& operator=(const CMsgClientToGCCavernCrawlUseItemOnPathResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCavernCrawlUseItemOnPathResponse(CMsgClientToGCCavernCrawlUseItemOnPathResponse&& from) noexcept
    : CMsgClientToGCCavernCrawlUseItemOnPathResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCavernCrawlUseItemOnPathResponse& operator=(CMsgClientToGCCavernCrawlUseItemOnPathResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCavernCrawlUseItemOnPathResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCavernCrawlUseItemOnPathResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCavernCrawlUseItemOnPathResponse*>(
               &_CMsgClientToGCCavernCrawlUseItemOnPathResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    386;

  void Swap(CMsgClientToGCCavernCrawlUseItemOnPathResponse* other);
  friend void swap(CMsgClientToGCCavernCrawlUseItemOnPathResponse& a, CMsgClientToGCCavernCrawlUseItemOnPathResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCavernCrawlUseItemOnPathResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlUseItemOnPathResponse>(nullptr);
  }

  CMsgClientToGCCavernCrawlUseItemOnPathResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlUseItemOnPathResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCavernCrawlUseItemOnPathResponse& from);
  void MergeFrom(const CMsgClientToGCCavernCrawlUseItemOnPathResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCavernCrawlUseItemOnPathResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_SUCCESS;
  static const Result ERROR_UNKNOWN =
    CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_ERROR_UNKNOWN;
  static const Result RECEIVED_ULTRA_RARE_REWARD =
    CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_RECEIVED_ULTRA_RARE_REWARD;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCCavernCrawlUseItemOnPathResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCavernCrawlUseItemOnPathResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCavernCrawlRequestMapState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCavernCrawlRequestMapState) */ {
 public:
  CMsgClientToGCCavernCrawlRequestMapState();
  virtual ~CMsgClientToGCCavernCrawlRequestMapState();

  CMsgClientToGCCavernCrawlRequestMapState(const CMsgClientToGCCavernCrawlRequestMapState& from);

  inline CMsgClientToGCCavernCrawlRequestMapState& operator=(const CMsgClientToGCCavernCrawlRequestMapState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCavernCrawlRequestMapState(CMsgClientToGCCavernCrawlRequestMapState&& from) noexcept
    : CMsgClientToGCCavernCrawlRequestMapState() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCavernCrawlRequestMapState& operator=(CMsgClientToGCCavernCrawlRequestMapState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCavernCrawlRequestMapState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCavernCrawlRequestMapState* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCavernCrawlRequestMapState*>(
               &_CMsgClientToGCCavernCrawlRequestMapState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    387;

  void Swap(CMsgClientToGCCavernCrawlRequestMapState* other);
  friend void swap(CMsgClientToGCCavernCrawlRequestMapState& a, CMsgClientToGCCavernCrawlRequestMapState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCavernCrawlRequestMapState* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlRequestMapState>(nullptr);
  }

  CMsgClientToGCCavernCrawlRequestMapState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlRequestMapState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCavernCrawlRequestMapState& from);
  void MergeFrom(const CMsgClientToGCCavernCrawlRequestMapState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCavernCrawlRequestMapState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCavernCrawlRequestMapState)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.SwappedChallenge) */ {
 public:
  CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge();
  virtual ~CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge();

  CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge(const CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge& from);

  inline CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge& operator=(const CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge(CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge&& from) noexcept
    : CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge& operator=(CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge*>(
               &_CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    388;

  void Swap(CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge* other);
  friend void swap(CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge& a, CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge>(nullptr);
  }

  CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge& from);
  void MergeFrom(const CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 path_id_1 = 1;
  bool has_path_id_1() const;
  void clear_path_id_1();
  static const int kPathId1FieldNumber = 1;
  ::google::protobuf::uint32 path_id_1() const;
  void set_path_id_1(::google::protobuf::uint32 value);

  // optional uint32 path_id_2 = 2;
  bool has_path_id_2() const;
  void clear_path_id_2();
  static const int kPathId2FieldNumber = 2;
  ::google::protobuf::uint32 path_id_2() const;
  void set_path_id_2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.SwappedChallenge)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 path_id_1_;
  ::google::protobuf::uint32 path_id_2_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.InventoryItem) */ {
 public:
  CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem();
  virtual ~CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem();

  CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem(const CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem& from);

  inline CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem& operator=(const CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem(CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem&& from) noexcept
    : CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem& operator=(CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem*>(
               &_CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    389;

  void Swap(CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem* other);
  friend void swap(CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem& a, CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem>(nullptr);
  }

  CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem& from);
  void MergeFrom(const CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 item_type = 1;
  bool has_item_type() const;
  void clear_item_type();
  static const int kItemTypeFieldNumber = 1;
  ::google::protobuf::uint32 item_type() const;
  void set_item_type(::google::protobuf::uint32 value);

  // optional uint32 count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.InventoryItem)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 item_type_;
  ::google::protobuf::uint32 count_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCavernCrawlRequestMapStateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse) */ {
 public:
  CMsgClientToGCCavernCrawlRequestMapStateResponse();
  virtual ~CMsgClientToGCCavernCrawlRequestMapStateResponse();

  CMsgClientToGCCavernCrawlRequestMapStateResponse(const CMsgClientToGCCavernCrawlRequestMapStateResponse& from);

  inline CMsgClientToGCCavernCrawlRequestMapStateResponse& operator=(const CMsgClientToGCCavernCrawlRequestMapStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCavernCrawlRequestMapStateResponse(CMsgClientToGCCavernCrawlRequestMapStateResponse&& from) noexcept
    : CMsgClientToGCCavernCrawlRequestMapStateResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCavernCrawlRequestMapStateResponse& operator=(CMsgClientToGCCavernCrawlRequestMapStateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCavernCrawlRequestMapStateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCavernCrawlRequestMapStateResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCavernCrawlRequestMapStateResponse*>(
               &_CMsgClientToGCCavernCrawlRequestMapStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    390;

  void Swap(CMsgClientToGCCavernCrawlRequestMapStateResponse* other);
  friend void swap(CMsgClientToGCCavernCrawlRequestMapStateResponse& a, CMsgClientToGCCavernCrawlRequestMapStateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCavernCrawlRequestMapStateResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlRequestMapStateResponse>(nullptr);
  }

  CMsgClientToGCCavernCrawlRequestMapStateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlRequestMapStateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCavernCrawlRequestMapStateResponse& from);
  void MergeFrom(const CMsgClientToGCCavernCrawlRequestMapStateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCavernCrawlRequestMapStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge SwappedChallenge;
  typedef CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem InventoryItem;

  typedef CMsgClientToGCCavernCrawlRequestMapStateResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_SUCCESS;
  static const Result ERROR_UNKNOWN =
    CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_ERROR_UNKNOWN;
  static const Result EVENT_NOT_OWNED =
    CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_EVENT_NOT_OWNED;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.SwappedChallenge swapped_challenge = 9;
  int swapped_challenge_size() const;
  void clear_swapped_challenge();
  static const int kSwappedChallengeFieldNumber = 9;
  ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge* mutable_swapped_challenge(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge >*
      mutable_swapped_challenge();
  const ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge& swapped_challenge(int index) const;
  ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge* add_swapped_challenge();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge >&
      swapped_challenge() const;

  // repeated .proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.InventoryItem inventory_item = 10;
  int inventory_item_size() const;
  void clear_inventory_item();
  static const int kInventoryItemFieldNumber = 10;
  ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem* mutable_inventory_item(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem >*
      mutable_inventory_item();
  const ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem& inventory_item(int index) const;
  ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem* add_inventory_item();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem >&
      inventory_item() const;

  // optional fixed64 claimed_rooms_1 = 2;
  bool has_claimed_rooms_1() const;
  void clear_claimed_rooms_1();
  static const int kClaimedRooms1FieldNumber = 2;
  ::google::protobuf::uint64 claimed_rooms_1() const;
  void set_claimed_rooms_1(::google::protobuf::uint64 value);

  // optional fixed64 claimed_rooms_2 = 3;
  bool has_claimed_rooms_2() const;
  void clear_claimed_rooms_2();
  static const int kClaimedRooms2FieldNumber = 3;
  ::google::protobuf::uint64 claimed_rooms_2() const;
  void set_claimed_rooms_2(::google::protobuf::uint64 value);

  // optional fixed64 revealed_rooms_1 = 4;
  bool has_revealed_rooms_1() const;
  void clear_revealed_rooms_1();
  static const int kRevealedRooms1FieldNumber = 4;
  ::google::protobuf::uint64 revealed_rooms_1() const;
  void set_revealed_rooms_1(::google::protobuf::uint64 value);

  // optional fixed64 revealed_rooms_2 = 5;
  bool has_revealed_rooms_2() const;
  void clear_revealed_rooms_2();
  static const int kRevealedRooms2FieldNumber = 5;
  ::google::protobuf::uint64 revealed_rooms_2() const;
  void set_revealed_rooms_2(::google::protobuf::uint64 value);

  // optional fixed64 completed_paths_1 = 6;
  bool has_completed_paths_1() const;
  void clear_completed_paths_1();
  static const int kCompletedPaths1FieldNumber = 6;
  ::google::protobuf::uint64 completed_paths_1() const;
  void set_completed_paths_1(::google::protobuf::uint64 value);

  // optional .proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_Result value);

  // optional uint32 ultra_rare_reward_room_number = 11;
  bool has_ultra_rare_reward_room_number() const;
  void clear_ultra_rare_reward_room_number();
  static const int kUltraRareRewardRoomNumberFieldNumber = 11;
  ::google::protobuf::uint32 ultra_rare_reward_room_number() const;
  void set_ultra_rare_reward_room_number(::google::protobuf::uint32 value);

  // optional fixed64 completed_paths_2 = 7;
  bool has_completed_paths_2() const;
  void clear_completed_paths_2();
  static const int kCompletedPaths2FieldNumber = 7;
  ::google::protobuf::uint64 completed_paths_2() const;
  void set_completed_paths_2(::google::protobuf::uint64 value);

  // optional fixed64 completed_paths_3 = 8;
  bool has_completed_paths_3() const;
  void clear_completed_paths_3();
  static const int kCompletedPaths3FieldNumber = 8;
  ::google::protobuf::uint64 completed_paths_3() const;
  void set_completed_paths_3(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge > swapped_challenge_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem > inventory_item_;
  ::google::protobuf::uint64 claimed_rooms_1_;
  ::google::protobuf::uint64 claimed_rooms_2_;
  ::google::protobuf::uint64 revealed_rooms_1_;
  ::google::protobuf::uint64 revealed_rooms_2_;
  ::google::protobuf::uint64 completed_paths_1_;
  int result_;
  ::google::protobuf::uint32 ultra_rare_reward_room_number_;
  ::google::protobuf::uint64 completed_paths_2_;
  ::google::protobuf::uint64 completed_paths_3_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCavernCrawlGetClaimedRoomCount final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCavernCrawlGetClaimedRoomCount) */ {
 public:
  CMsgClientToGCCavernCrawlGetClaimedRoomCount();
  virtual ~CMsgClientToGCCavernCrawlGetClaimedRoomCount();

  CMsgClientToGCCavernCrawlGetClaimedRoomCount(const CMsgClientToGCCavernCrawlGetClaimedRoomCount& from);

  inline CMsgClientToGCCavernCrawlGetClaimedRoomCount& operator=(const CMsgClientToGCCavernCrawlGetClaimedRoomCount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCavernCrawlGetClaimedRoomCount(CMsgClientToGCCavernCrawlGetClaimedRoomCount&& from) noexcept
    : CMsgClientToGCCavernCrawlGetClaimedRoomCount() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCavernCrawlGetClaimedRoomCount& operator=(CMsgClientToGCCavernCrawlGetClaimedRoomCount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCavernCrawlGetClaimedRoomCount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCavernCrawlGetClaimedRoomCount* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCavernCrawlGetClaimedRoomCount*>(
               &_CMsgClientToGCCavernCrawlGetClaimedRoomCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    391;

  void Swap(CMsgClientToGCCavernCrawlGetClaimedRoomCount* other);
  friend void swap(CMsgClientToGCCavernCrawlGetClaimedRoomCount& a, CMsgClientToGCCavernCrawlGetClaimedRoomCount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCavernCrawlGetClaimedRoomCount* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlGetClaimedRoomCount>(nullptr);
  }

  CMsgClientToGCCavernCrawlGetClaimedRoomCount* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlGetClaimedRoomCount>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCavernCrawlGetClaimedRoomCount& from);
  void MergeFrom(const CMsgClientToGCCavernCrawlGetClaimedRoomCount& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCavernCrawlGetClaimedRoomCount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCavernCrawlGetClaimedRoomCount)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse) */ {
 public:
  CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse();
  virtual ~CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse();

  CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse(const CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse& from);

  inline CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse& operator=(const CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse(CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse&& from) noexcept
    : CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse& operator=(CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse*>(
               &_CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    392;

  void Swap(CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse* other);
  friend void swap(CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse& a, CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse>(nullptr);
  }

  CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse& from);
  void MergeFrom(const CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_SUCCESS;
  static const Result ERROR_UNKNOWN =
    CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_ERROR_UNKNOWN;
  static const Result EVENT_NOT_OWNED =
    CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_EVENT_NOT_OWNED;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result value);

  // optional uint32 count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  ::google::protobuf::uint32 count_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAMutationList_Mutation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAMutationList.Mutation) */ {
 public:
  CMsgDOTAMutationList_Mutation();
  virtual ~CMsgDOTAMutationList_Mutation();

  CMsgDOTAMutationList_Mutation(const CMsgDOTAMutationList_Mutation& from);

  inline CMsgDOTAMutationList_Mutation& operator=(const CMsgDOTAMutationList_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAMutationList_Mutation(CMsgDOTAMutationList_Mutation&& from) noexcept
    : CMsgDOTAMutationList_Mutation() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAMutationList_Mutation& operator=(CMsgDOTAMutationList_Mutation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAMutationList_Mutation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAMutationList_Mutation* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAMutationList_Mutation*>(
               &_CMsgDOTAMutationList_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    393;

  void Swap(CMsgDOTAMutationList_Mutation* other);
  friend void swap(CMsgDOTAMutationList_Mutation& a, CMsgDOTAMutationList_Mutation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAMutationList_Mutation* New() const final {
    return CreateMaybeMessage<CMsgDOTAMutationList_Mutation>(nullptr);
  }

  CMsgDOTAMutationList_Mutation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAMutationList_Mutation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAMutationList_Mutation& from);
  void MergeFrom(const CMsgDOTAMutationList_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAMutationList_Mutation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string description = 3;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAMutationList.Mutation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::uint32 id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAMutationList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAMutationList) */ {
 public:
  CMsgDOTAMutationList();
  virtual ~CMsgDOTAMutationList();

  CMsgDOTAMutationList(const CMsgDOTAMutationList& from);

  inline CMsgDOTAMutationList& operator=(const CMsgDOTAMutationList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAMutationList(CMsgDOTAMutationList&& from) noexcept
    : CMsgDOTAMutationList() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAMutationList& operator=(CMsgDOTAMutationList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAMutationList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAMutationList* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAMutationList*>(
               &_CMsgDOTAMutationList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    394;

  void Swap(CMsgDOTAMutationList* other);
  friend void swap(CMsgDOTAMutationList& a, CMsgDOTAMutationList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAMutationList* New() const final {
    return CreateMaybeMessage<CMsgDOTAMutationList>(nullptr);
  }

  CMsgDOTAMutationList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAMutationList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAMutationList& from);
  void MergeFrom(const CMsgDOTAMutationList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAMutationList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAMutationList_Mutation Mutation;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAMutationList.Mutation mutations = 1;
  int mutations_size() const;
  void clear_mutations();
  static const int kMutationsFieldNumber = 1;
  ::proto::dota::CMsgDOTAMutationList_Mutation* mutable_mutations(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMutationList_Mutation >*
      mutable_mutations();
  const ::proto::dota::CMsgDOTAMutationList_Mutation& mutations(int index) const;
  ::proto::dota::CMsgDOTAMutationList_Mutation* add_mutations();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMutationList_Mutation >&
      mutations() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAMutationList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMutationList_Mutation > mutations_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgEventTipsSummaryRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgEventTipsSummaryRequest) */ {
 public:
  CMsgEventTipsSummaryRequest();
  virtual ~CMsgEventTipsSummaryRequest();

  CMsgEventTipsSummaryRequest(const CMsgEventTipsSummaryRequest& from);

  inline CMsgEventTipsSummaryRequest& operator=(const CMsgEventTipsSummaryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgEventTipsSummaryRequest(CMsgEventTipsSummaryRequest&& from) noexcept
    : CMsgEventTipsSummaryRequest() {
    *this = ::std::move(from);
  }

  inline CMsgEventTipsSummaryRequest& operator=(CMsgEventTipsSummaryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgEventTipsSummaryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgEventTipsSummaryRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgEventTipsSummaryRequest*>(
               &_CMsgEventTipsSummaryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    395;

  void Swap(CMsgEventTipsSummaryRequest* other);
  friend void swap(CMsgEventTipsSummaryRequest& a, CMsgEventTipsSummaryRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgEventTipsSummaryRequest* New() const final {
    return CreateMaybeMessage<CMsgEventTipsSummaryRequest>(nullptr);
  }

  CMsgEventTipsSummaryRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgEventTipsSummaryRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgEventTipsSummaryRequest& from);
  void MergeFrom(const CMsgEventTipsSummaryRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgEventTipsSummaryRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgEventTipsSummaryRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int event_id_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgEventTipsSummaryResponse_Tipper final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgEventTipsSummaryResponse.Tipper) */ {
 public:
  CMsgEventTipsSummaryResponse_Tipper();
  virtual ~CMsgEventTipsSummaryResponse_Tipper();

  CMsgEventTipsSummaryResponse_Tipper(const CMsgEventTipsSummaryResponse_Tipper& from);

  inline CMsgEventTipsSummaryResponse_Tipper& operator=(const CMsgEventTipsSummaryResponse_Tipper& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgEventTipsSummaryResponse_Tipper(CMsgEventTipsSummaryResponse_Tipper&& from) noexcept
    : CMsgEventTipsSummaryResponse_Tipper() {
    *this = ::std::move(from);
  }

  inline CMsgEventTipsSummaryResponse_Tipper& operator=(CMsgEventTipsSummaryResponse_Tipper&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgEventTipsSummaryResponse_Tipper& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgEventTipsSummaryResponse_Tipper* internal_default_instance() {
    return reinterpret_cast<const CMsgEventTipsSummaryResponse_Tipper*>(
               &_CMsgEventTipsSummaryResponse_Tipper_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    396;

  void Swap(CMsgEventTipsSummaryResponse_Tipper* other);
  friend void swap(CMsgEventTipsSummaryResponse_Tipper& a, CMsgEventTipsSummaryResponse_Tipper& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgEventTipsSummaryResponse_Tipper* New() const final {
    return CreateMaybeMessage<CMsgEventTipsSummaryResponse_Tipper>(nullptr);
  }

  CMsgEventTipsSummaryResponse_Tipper* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgEventTipsSummaryResponse_Tipper>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgEventTipsSummaryResponse_Tipper& from);
  void MergeFrom(const CMsgEventTipsSummaryResponse_Tipper& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgEventTipsSummaryResponse_Tipper* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tipper_account_id = 1;
  bool has_tipper_account_id() const;
  void clear_tipper_account_id();
  static const int kTipperAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 tipper_account_id() const;
  void set_tipper_account_id(::google::protobuf::uint32 value);

  // optional uint32 tip_count = 2 [default = 1];
  bool has_tip_count() const;
  void clear_tip_count();
  static const int kTipCountFieldNumber = 2;
  ::google::protobuf::uint32 tip_count() const;
  void set_tip_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgEventTipsSummaryResponse.Tipper)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 tipper_account_id_;
  ::google::protobuf::uint32 tip_count_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgEventTipsSummaryResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgEventTipsSummaryResponse) */ {
 public:
  CMsgEventTipsSummaryResponse();
  virtual ~CMsgEventTipsSummaryResponse();

  CMsgEventTipsSummaryResponse(const CMsgEventTipsSummaryResponse& from);

  inline CMsgEventTipsSummaryResponse& operator=(const CMsgEventTipsSummaryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgEventTipsSummaryResponse(CMsgEventTipsSummaryResponse&& from) noexcept
    : CMsgEventTipsSummaryResponse() {
    *this = ::std::move(from);
  }

  inline CMsgEventTipsSummaryResponse& operator=(CMsgEventTipsSummaryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgEventTipsSummaryResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgEventTipsSummaryResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgEventTipsSummaryResponse*>(
               &_CMsgEventTipsSummaryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    397;

  void Swap(CMsgEventTipsSummaryResponse* other);
  friend void swap(CMsgEventTipsSummaryResponse& a, CMsgEventTipsSummaryResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgEventTipsSummaryResponse* New() const final {
    return CreateMaybeMessage<CMsgEventTipsSummaryResponse>(nullptr);
  }

  CMsgEventTipsSummaryResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgEventTipsSummaryResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgEventTipsSummaryResponse& from);
  void MergeFrom(const CMsgEventTipsSummaryResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgEventTipsSummaryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgEventTipsSummaryResponse_Tipper Tipper;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgEventTipsSummaryResponse.Tipper tips_received = 2;
  int tips_received_size() const;
  void clear_tips_received();
  static const int kTipsReceivedFieldNumber = 2;
  ::proto::dota::CMsgEventTipsSummaryResponse_Tipper* mutable_tips_received(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventTipsSummaryResponse_Tipper >*
      mutable_tips_received();
  const ::proto::dota::CMsgEventTipsSummaryResponse_Tipper& tips_received(int index) const;
  ::proto::dota::CMsgEventTipsSummaryResponse_Tipper* add_tips_received();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventTipsSummaryResponse_Tipper >&
      tips_received() const;

  // optional bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgEventTipsSummaryResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventTipsSummaryResponse_Tipper > tips_received_;
  bool result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgSocialFeedRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSocialFeedRequest) */ {
 public:
  CMsgSocialFeedRequest();
  virtual ~CMsgSocialFeedRequest();

  CMsgSocialFeedRequest(const CMsgSocialFeedRequest& from);

  inline CMsgSocialFeedRequest& operator=(const CMsgSocialFeedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSocialFeedRequest(CMsgSocialFeedRequest&& from) noexcept
    : CMsgSocialFeedRequest() {
    *this = ::std::move(from);
  }

  inline CMsgSocialFeedRequest& operator=(CMsgSocialFeedRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSocialFeedRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSocialFeedRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgSocialFeedRequest*>(
               &_CMsgSocialFeedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    398;

  void Swap(CMsgSocialFeedRequest* other);
  friend void swap(CMsgSocialFeedRequest& a, CMsgSocialFeedRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSocialFeedRequest* New() const final {
    return CreateMaybeMessage<CMsgSocialFeedRequest>(nullptr);
  }

  CMsgSocialFeedRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSocialFeedRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSocialFeedRequest& from);
  void MergeFrom(const CMsgSocialFeedRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSocialFeedRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional bool self_only = 2;
  bool has_self_only() const;
  void clear_self_only();
  static const int kSelfOnlyFieldNumber = 2;
  bool self_only() const;
  void set_self_only(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSocialFeedRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  bool self_only_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgSocialFeedResponse_FeedEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSocialFeedResponse.FeedEvent) */ {
 public:
  CMsgSocialFeedResponse_FeedEvent();
  virtual ~CMsgSocialFeedResponse_FeedEvent();

  CMsgSocialFeedResponse_FeedEvent(const CMsgSocialFeedResponse_FeedEvent& from);

  inline CMsgSocialFeedResponse_FeedEvent& operator=(const CMsgSocialFeedResponse_FeedEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSocialFeedResponse_FeedEvent(CMsgSocialFeedResponse_FeedEvent&& from) noexcept
    : CMsgSocialFeedResponse_FeedEvent() {
    *this = ::std::move(from);
  }

  inline CMsgSocialFeedResponse_FeedEvent& operator=(CMsgSocialFeedResponse_FeedEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSocialFeedResponse_FeedEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSocialFeedResponse_FeedEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgSocialFeedResponse_FeedEvent*>(
               &_CMsgSocialFeedResponse_FeedEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    399;

  void Swap(CMsgSocialFeedResponse_FeedEvent* other);
  friend void swap(CMsgSocialFeedResponse_FeedEvent& a, CMsgSocialFeedResponse_FeedEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSocialFeedResponse_FeedEvent* New() const final {
    return CreateMaybeMessage<CMsgSocialFeedResponse_FeedEvent>(nullptr);
  }

  CMsgSocialFeedResponse_FeedEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSocialFeedResponse_FeedEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSocialFeedResponse_FeedEvent& from);
  void MergeFrom(const CMsgSocialFeedResponse_FeedEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSocialFeedResponse_FeedEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string param_string = 11;
  bool has_param_string() const;
  void clear_param_string();
  static const int kParamStringFieldNumber = 11;
  const ::std::string& param_string() const;
  void set_param_string(const ::std::string& value);
  #if LANG_CXX11
  void set_param_string(::std::string&& value);
  #endif
  void set_param_string(const char* value);
  void set_param_string(const char* value, size_t size);
  ::std::string* mutable_param_string();
  ::std::string* release_param_string();
  void set_allocated_param_string(::std::string* param_string);

  // optional uint64 feed_event_id = 1;
  bool has_feed_event_id() const;
  void clear_feed_event_id();
  static const int kFeedEventIdFieldNumber = 1;
  ::google::protobuf::uint64 feed_event_id() const;
  void set_feed_event_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 comment_count = 4;
  bool has_comment_count() const;
  void clear_comment_count();
  static const int kCommentCountFieldNumber = 4;
  ::google::protobuf::uint32 comment_count() const;
  void set_comment_count(::google::protobuf::uint32 value);

  // optional uint32 event_type = 5;
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 5;
  ::google::protobuf::uint32 event_type() const;
  void set_event_type(::google::protobuf::uint32 value);

  // optional uint64 param_big_int_1 = 7;
  bool has_param_big_int_1() const;
  void clear_param_big_int_1();
  static const int kParamBigInt1FieldNumber = 7;
  ::google::protobuf::uint64 param_big_int_1() const;
  void set_param_big_int_1(::google::protobuf::uint64 value);

  // optional uint32 event_sub_type = 6;
  bool has_event_sub_type() const;
  void clear_event_sub_type();
  static const int kEventSubTypeFieldNumber = 6;
  ::google::protobuf::uint32 event_sub_type() const;
  void set_event_sub_type(::google::protobuf::uint32 value);

  // optional uint32 param_int_1 = 8;
  bool has_param_int_1() const;
  void clear_param_int_1();
  static const int kParamInt1FieldNumber = 8;
  ::google::protobuf::uint32 param_int_1() const;
  void set_param_int_1(::google::protobuf::uint32 value);

  // optional uint32 param_int_2 = 9;
  bool has_param_int_2() const;
  void clear_param_int_2();
  static const int kParamInt2FieldNumber = 9;
  ::google::protobuf::uint32 param_int_2() const;
  void set_param_int_2(::google::protobuf::uint32 value);

  // optional uint32 param_int_3 = 10;
  bool has_param_int_3() const;
  void clear_param_int_3();
  static const int kParamInt3FieldNumber = 10;
  ::google::protobuf::uint32 param_int_3() const;
  void set_param_int_3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSocialFeedResponse.FeedEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr param_string_;
  ::google::protobuf::uint64 feed_event_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 comment_count_;
  ::google::protobuf::uint32 event_type_;
  ::google::protobuf::uint64 param_big_int_1_;
  ::google::protobuf::uint32 event_sub_type_;
  ::google::protobuf::uint32 param_int_1_;
  ::google::protobuf::uint32 param_int_2_;
  ::google::protobuf::uint32 param_int_3_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgSocialFeedResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSocialFeedResponse) */ {
 public:
  CMsgSocialFeedResponse();
  virtual ~CMsgSocialFeedResponse();

  CMsgSocialFeedResponse(const CMsgSocialFeedResponse& from);

  inline CMsgSocialFeedResponse& operator=(const CMsgSocialFeedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSocialFeedResponse(CMsgSocialFeedResponse&& from) noexcept
    : CMsgSocialFeedResponse() {
    *this = ::std::move(from);
  }

  inline CMsgSocialFeedResponse& operator=(CMsgSocialFeedResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSocialFeedResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSocialFeedResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgSocialFeedResponse*>(
               &_CMsgSocialFeedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    400;

  void Swap(CMsgSocialFeedResponse* other);
  friend void swap(CMsgSocialFeedResponse& a, CMsgSocialFeedResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSocialFeedResponse* New() const final {
    return CreateMaybeMessage<CMsgSocialFeedResponse>(nullptr);
  }

  CMsgSocialFeedResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSocialFeedResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSocialFeedResponse& from);
  void MergeFrom(const CMsgSocialFeedResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSocialFeedResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSocialFeedResponse_FeedEvent FeedEvent;

  typedef CMsgSocialFeedResponse_Result Result;
  static const Result SUCCESS =
    CMsgSocialFeedResponse_Result_SUCCESS;
  static const Result FAILED_TO_LOAD_FRIENDS =
    CMsgSocialFeedResponse_Result_FAILED_TO_LOAD_FRIENDS;
  static const Result FAILED_TO_LOAD_FEED_DATA =
    CMsgSocialFeedResponse_Result_FAILED_TO_LOAD_FEED_DATA;
  static const Result FAILED_TO_LOAD_FEED_ENTRY =
    CMsgSocialFeedResponse_Result_FAILED_TO_LOAD_FEED_ENTRY;
  static const Result FAILED_TO_LOAD_COMMENTS =
    CMsgSocialFeedResponse_Result_FAILED_TO_LOAD_COMMENTS;
  static const Result FAILED_TOO_MANY_REQUESTS =
    CMsgSocialFeedResponse_Result_FAILED_TOO_MANY_REQUESTS;
  static inline bool Result_IsValid(int value) {
    return CMsgSocialFeedResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgSocialFeedResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgSocialFeedResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgSocialFeedResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgSocialFeedResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgSocialFeedResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgSocialFeedResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgSocialFeedResponse.FeedEvent feed_events = 2;
  int feed_events_size() const;
  void clear_feed_events();
  static const int kFeedEventsFieldNumber = 2;
  ::proto::dota::CMsgSocialFeedResponse_FeedEvent* mutable_feed_events(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSocialFeedResponse_FeedEvent >*
      mutable_feed_events();
  const ::proto::dota::CMsgSocialFeedResponse_FeedEvent& feed_events(int index) const;
  ::proto::dota::CMsgSocialFeedResponse_FeedEvent* add_feed_events();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSocialFeedResponse_FeedEvent >&
      feed_events() const;

  // optional .proto.dota.CMsgSocialFeedResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgSocialFeedResponse_Result result() const;
  void set_result(::proto::dota::CMsgSocialFeedResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSocialFeedResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSocialFeedResponse_FeedEvent > feed_events_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgSocialFeedCommentsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSocialFeedCommentsRequest) */ {
 public:
  CMsgSocialFeedCommentsRequest();
  virtual ~CMsgSocialFeedCommentsRequest();

  CMsgSocialFeedCommentsRequest(const CMsgSocialFeedCommentsRequest& from);

  inline CMsgSocialFeedCommentsRequest& operator=(const CMsgSocialFeedCommentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSocialFeedCommentsRequest(CMsgSocialFeedCommentsRequest&& from) noexcept
    : CMsgSocialFeedCommentsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgSocialFeedCommentsRequest& operator=(CMsgSocialFeedCommentsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSocialFeedCommentsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSocialFeedCommentsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgSocialFeedCommentsRequest*>(
               &_CMsgSocialFeedCommentsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    401;

  void Swap(CMsgSocialFeedCommentsRequest* other);
  friend void swap(CMsgSocialFeedCommentsRequest& a, CMsgSocialFeedCommentsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSocialFeedCommentsRequest* New() const final {
    return CreateMaybeMessage<CMsgSocialFeedCommentsRequest>(nullptr);
  }

  CMsgSocialFeedCommentsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSocialFeedCommentsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSocialFeedCommentsRequest& from);
  void MergeFrom(const CMsgSocialFeedCommentsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSocialFeedCommentsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 feed_event_id = 1;
  bool has_feed_event_id() const;
  void clear_feed_event_id();
  static const int kFeedEventIdFieldNumber = 1;
  ::google::protobuf::uint64 feed_event_id() const;
  void set_feed_event_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSocialFeedCommentsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 feed_event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgSocialFeedCommentsResponse_FeedComment final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment) */ {
 public:
  CMsgSocialFeedCommentsResponse_FeedComment();
  virtual ~CMsgSocialFeedCommentsResponse_FeedComment();

  CMsgSocialFeedCommentsResponse_FeedComment(const CMsgSocialFeedCommentsResponse_FeedComment& from);

  inline CMsgSocialFeedCommentsResponse_FeedComment& operator=(const CMsgSocialFeedCommentsResponse_FeedComment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSocialFeedCommentsResponse_FeedComment(CMsgSocialFeedCommentsResponse_FeedComment&& from) noexcept
    : CMsgSocialFeedCommentsResponse_FeedComment() {
    *this = ::std::move(from);
  }

  inline CMsgSocialFeedCommentsResponse_FeedComment& operator=(CMsgSocialFeedCommentsResponse_FeedComment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSocialFeedCommentsResponse_FeedComment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSocialFeedCommentsResponse_FeedComment* internal_default_instance() {
    return reinterpret_cast<const CMsgSocialFeedCommentsResponse_FeedComment*>(
               &_CMsgSocialFeedCommentsResponse_FeedComment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    402;

  void Swap(CMsgSocialFeedCommentsResponse_FeedComment* other);
  friend void swap(CMsgSocialFeedCommentsResponse_FeedComment& a, CMsgSocialFeedCommentsResponse_FeedComment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSocialFeedCommentsResponse_FeedComment* New() const final {
    return CreateMaybeMessage<CMsgSocialFeedCommentsResponse_FeedComment>(nullptr);
  }

  CMsgSocialFeedCommentsResponse_FeedComment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSocialFeedCommentsResponse_FeedComment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSocialFeedCommentsResponse_FeedComment& from);
  void MergeFrom(const CMsgSocialFeedCommentsResponse_FeedComment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSocialFeedCommentsResponse_FeedComment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string comment_text = 3;
  bool has_comment_text() const;
  void clear_comment_text();
  static const int kCommentTextFieldNumber = 3;
  const ::std::string& comment_text() const;
  void set_comment_text(const ::std::string& value);
  #if LANG_CXX11
  void set_comment_text(::std::string&& value);
  #endif
  void set_comment_text(const char* value);
  void set_comment_text(const char* value, size_t size);
  ::std::string* mutable_comment_text();
  ::std::string* release_comment_text();
  void set_allocated_comment_text(::std::string* comment_text);

  // optional uint32 commenter_account_id = 1;
  bool has_commenter_account_id() const;
  void clear_commenter_account_id();
  static const int kCommenterAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 commenter_account_id() const;
  void set_commenter_account_id(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr comment_text_;
  ::google::protobuf::uint32 commenter_account_id_;
  ::google::protobuf::uint32 timestamp_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgSocialFeedCommentsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSocialFeedCommentsResponse) */ {
 public:
  CMsgSocialFeedCommentsResponse();
  virtual ~CMsgSocialFeedCommentsResponse();

  CMsgSocialFeedCommentsResponse(const CMsgSocialFeedCommentsResponse& from);

  inline CMsgSocialFeedCommentsResponse& operator=(const CMsgSocialFeedCommentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSocialFeedCommentsResponse(CMsgSocialFeedCommentsResponse&& from) noexcept
    : CMsgSocialFeedCommentsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgSocialFeedCommentsResponse& operator=(CMsgSocialFeedCommentsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSocialFeedCommentsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSocialFeedCommentsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgSocialFeedCommentsResponse*>(
               &_CMsgSocialFeedCommentsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    403;

  void Swap(CMsgSocialFeedCommentsResponse* other);
  friend void swap(CMsgSocialFeedCommentsResponse& a, CMsgSocialFeedCommentsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSocialFeedCommentsResponse* New() const final {
    return CreateMaybeMessage<CMsgSocialFeedCommentsResponse>(nullptr);
  }

  CMsgSocialFeedCommentsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSocialFeedCommentsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSocialFeedCommentsResponse& from);
  void MergeFrom(const CMsgSocialFeedCommentsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSocialFeedCommentsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSocialFeedCommentsResponse_FeedComment FeedComment;

  typedef CMsgSocialFeedCommentsResponse_Result Result;
  static const Result SUCCESS =
    CMsgSocialFeedCommentsResponse_Result_SUCCESS;
  static const Result FAILED_TOO_MANY_REQUESTS =
    CMsgSocialFeedCommentsResponse_Result_FAILED_TOO_MANY_REQUESTS;
  static const Result FAILED_TO_LOAD_COMMENTS =
    CMsgSocialFeedCommentsResponse_Result_FAILED_TO_LOAD_COMMENTS;
  static inline bool Result_IsValid(int value) {
    return CMsgSocialFeedCommentsResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgSocialFeedCommentsResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgSocialFeedCommentsResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgSocialFeedCommentsResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgSocialFeedCommentsResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgSocialFeedCommentsResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgSocialFeedCommentsResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgSocialFeedCommentsResponse.FeedComment feed_comments = 3;
  int feed_comments_size() const;
  void clear_feed_comments();
  static const int kFeedCommentsFieldNumber = 3;
  ::proto::dota::CMsgSocialFeedCommentsResponse_FeedComment* mutable_feed_comments(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSocialFeedCommentsResponse_FeedComment >*
      mutable_feed_comments();
  const ::proto::dota::CMsgSocialFeedCommentsResponse_FeedComment& feed_comments(int index) const;
  ::proto::dota::CMsgSocialFeedCommentsResponse_FeedComment* add_feed_comments();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSocialFeedCommentsResponse_FeedComment >&
      feed_comments() const;

  // optional .proto.dota.CMsgSocialFeedCommentsResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgSocialFeedCommentsResponse_Result result() const;
  void set_result(::proto::dota::CMsgSocialFeedCommentsResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSocialFeedCommentsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSocialFeedCommentsResponse_FeedComment > feed_comments_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPlayerCardSpecificPurchaseRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseRequest) */ {
 public:
  CMsgClientToGCPlayerCardSpecificPurchaseRequest();
  virtual ~CMsgClientToGCPlayerCardSpecificPurchaseRequest();

  CMsgClientToGCPlayerCardSpecificPurchaseRequest(const CMsgClientToGCPlayerCardSpecificPurchaseRequest& from);

  inline CMsgClientToGCPlayerCardSpecificPurchaseRequest& operator=(const CMsgClientToGCPlayerCardSpecificPurchaseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCPlayerCardSpecificPurchaseRequest(CMsgClientToGCPlayerCardSpecificPurchaseRequest&& from) noexcept
    : CMsgClientToGCPlayerCardSpecificPurchaseRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPlayerCardSpecificPurchaseRequest& operator=(CMsgClientToGCPlayerCardSpecificPurchaseRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCPlayerCardSpecificPurchaseRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCPlayerCardSpecificPurchaseRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPlayerCardSpecificPurchaseRequest*>(
               &_CMsgClientToGCPlayerCardSpecificPurchaseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    404;

  void Swap(CMsgClientToGCPlayerCardSpecificPurchaseRequest* other);
  friend void swap(CMsgClientToGCPlayerCardSpecificPurchaseRequest& a, CMsgClientToGCPlayerCardSpecificPurchaseRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCPlayerCardSpecificPurchaseRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCPlayerCardSpecificPurchaseRequest>(nullptr);
  }

  CMsgClientToGCPlayerCardSpecificPurchaseRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCPlayerCardSpecificPurchaseRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCPlayerCardSpecificPurchaseRequest& from);
  void MergeFrom(const CMsgClientToGCPlayerCardSpecificPurchaseRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPlayerCardSpecificPurchaseRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_account_id = 1;
  bool has_player_account_id() const;
  void clear_player_account_id();
  static const int kPlayerAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 player_account_id() const;
  void set_player_account_id(::google::protobuf::uint32 value);

  // optional uint32 event_id = 2;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint64 card_dust_item_id = 3;
  bool has_card_dust_item_id() const;
  void clear_card_dust_item_id();
  static const int kCardDustItemIdFieldNumber = 3;
  ::google::protobuf::uint64 card_dust_item_id() const;
  void set_card_dust_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 player_account_id_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint64 card_dust_item_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCPlayerCardSpecificPurchaseResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseResponse) */ {
 public:
  CMsgClientToGCPlayerCardSpecificPurchaseResponse();
  virtual ~CMsgClientToGCPlayerCardSpecificPurchaseResponse();

  CMsgClientToGCPlayerCardSpecificPurchaseResponse(const CMsgClientToGCPlayerCardSpecificPurchaseResponse& from);

  inline CMsgClientToGCPlayerCardSpecificPurchaseResponse& operator=(const CMsgClientToGCPlayerCardSpecificPurchaseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCPlayerCardSpecificPurchaseResponse(CMsgClientToGCPlayerCardSpecificPurchaseResponse&& from) noexcept
    : CMsgClientToGCPlayerCardSpecificPurchaseResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCPlayerCardSpecificPurchaseResponse& operator=(CMsgClientToGCPlayerCardSpecificPurchaseResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCPlayerCardSpecificPurchaseResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCPlayerCardSpecificPurchaseResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPlayerCardSpecificPurchaseResponse*>(
               &_CMsgClientToGCPlayerCardSpecificPurchaseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    405;

  void Swap(CMsgClientToGCPlayerCardSpecificPurchaseResponse* other);
  friend void swap(CMsgClientToGCPlayerCardSpecificPurchaseResponse& a, CMsgClientToGCPlayerCardSpecificPurchaseResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCPlayerCardSpecificPurchaseResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCPlayerCardSpecificPurchaseResponse>(nullptr);
  }

  CMsgClientToGCPlayerCardSpecificPurchaseResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCPlayerCardSpecificPurchaseResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCPlayerCardSpecificPurchaseResponse& from);
  void MergeFrom(const CMsgClientToGCPlayerCardSpecificPurchaseResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCPlayerCardSpecificPurchaseResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_SUCCESS;
  static const Result ERROR_INTERNAL =
    CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_ERROR_INTERNAL;
  static const Result ERROR_INSUFFICIENT_DUST =
    CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_ERROR_INSUFFICIENT_DUST;
  static const Result ERROR_ITEM_NOT_DUST_ITEM =
    CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_ERROR_ITEM_NOT_DUST_ITEM;
  static const Result ERROR_FAILED_CARD_PACK_CREATE =
    CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_ERROR_FAILED_CARD_PACK_CREATE;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 2;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // optional .proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 item_id_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecordContestVote final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRecordContestVote) */ {
 public:
  CMsgClientToGCRecordContestVote();
  virtual ~CMsgClientToGCRecordContestVote();

  CMsgClientToGCRecordContestVote(const CMsgClientToGCRecordContestVote& from);

  inline CMsgClientToGCRecordContestVote& operator=(const CMsgClientToGCRecordContestVote& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgClientToGCRecordContestVote(CMsgClientToGCRecordContestVote&& from) noexcept
    : CMsgClientToGCRecordContestVote() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRecordContestVote& operator=(CMsgClientToGCRecordContestVote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgClientToGCRecordContestVote& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgClientToGCRecordContestVote* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRecordContestVote*>(
               &_CMsgClientToGCRecordContestVote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    406;

  void Swap(CMsgClientToGCRecordContestVote* other);
  friend void swap(CMsgClientToGCRecordContestVote& a, CMsgClientToGCRecordContestVote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRecordContestVote* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRecordContestVote>(nullptr);
  }

  CMsgClientToGCRecordContestVote* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRecordContestVote>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgClientToGCRecordContestVote& from);
  void MergeFrom(const CMsgClientToGCRecordContestVote& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRecordContestVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 contest_item_id = 2;
  bool has_contest_item_id() const;
  void clear_contest_item_id();
  static const int kContestItemIdFieldNumber = 2;
  ::google::protobuf::uint64 contest_item_id() const;
  void set_contest_item_id(::google::protobuf::uint64 value);

  // optional uint32 contest_id = 1;
  bool has_contest_id() const;
  void clear_contest_id();
  static const int kContestIdFieldNumber = 1;
  ::google::protobuf::uint32 contest_id() const;
  void set_contest_id(::google::protobuf::uint32 value);

  // optional int32 vote = 3;
  bool has_vote() const;
  void clear_vote();
  static const int kVoteFieldNumber = 3;
  ::google::protobuf::int32 vote() const;
  void set_vote(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRecordContestVote)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 contest_item_id_;
  ::google::protobuf::uint32 contest_id_;
  ::google::protobuf::int32 vote_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientRecordContestVoteResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientRecordContestVoteResponse) */ {
 public:
  CMsgGCToClientRecordContestVoteResponse();
  virtual ~CMsgGCToClientRecordContestVoteResponse();

  CMsgGCToClientRecordContestVoteResponse(const CMsgGCToClientRecordContestVoteResponse& from);

  inline CMsgGCToClientRecordContestVoteResponse& operator=(const CMsgGCToClientRecordContestVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToClientRecordContestVoteResponse(CMsgGCToClientRecordContestVoteResponse&& from) noexcept
    : CMsgGCToClientRecordContestVoteResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientRecordContestVoteResponse& operator=(CMsgGCToClientRecordContestVoteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToClientRecordContestVoteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToClientRecordContestVoteResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientRecordContestVoteResponse*>(
               &_CMsgGCToClientRecordContestVoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    407;

  void Swap(CMsgGCToClientRecordContestVoteResponse* other);
  friend void swap(CMsgGCToClientRecordContestVoteResponse& a, CMsgGCToClientRecordContestVoteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientRecordContestVoteResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToClientRecordContestVoteResponse>(nullptr);
  }

  CMsgGCToClientRecordContestVoteResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientRecordContestVoteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToClientRecordContestVoteResponse& from);
  void MergeFrom(const CMsgGCToClientRecordContestVoteResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientRecordContestVoteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientRecordContestVoteResponse_EResult EResult;
  static const EResult SUCCESS =
    CMsgGCToClientRecordContestVoteResponse_EResult_SUCCESS;
  static const EResult FAILED_EVENT_NOT_OWNED =
    CMsgGCToClientRecordContestVoteResponse_EResult_FAILED_EVENT_NOT_OWNED;
  static const EResult FAILED_SQL_INSERT_FAILED =
    CMsgGCToClientRecordContestVoteResponse_EResult_FAILED_SQL_INSERT_FAILED;
  static inline bool EResult_IsValid(int value) {
    return CMsgGCToClientRecordContestVoteResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgGCToClientRecordContestVoteResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgGCToClientRecordContestVoteResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgGCToClientRecordContestVoteResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgGCToClientRecordContestVoteResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgGCToClientRecordContestVoteResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgGCToClientRecordContestVoteResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgGCToClientRecordContestVoteResponse.EResult eresult = 1 [default = SUCCESS];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::proto::dota::CMsgGCToClientRecordContestVoteResponse_EResult eresult() const;
  void set_eresult(::proto::dota::CMsgGCToClientRecordContestVoteResponse_EResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientRecordContestVoteResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int eresult_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTADPCFeed_Element final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTADPCFeed.Element) */ {
 public:
  CMsgDOTADPCFeed_Element();
  virtual ~CMsgDOTADPCFeed_Element();

  CMsgDOTADPCFeed_Element(const CMsgDOTADPCFeed_Element& from);

  inline CMsgDOTADPCFeed_Element& operator=(const CMsgDOTADPCFeed_Element& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTADPCFeed_Element(CMsgDOTADPCFeed_Element&& from) noexcept
    : CMsgDOTADPCFeed_Element() {
    *this = ::std::move(from);
  }

  inline CMsgDOTADPCFeed_Element& operator=(CMsgDOTADPCFeed_Element&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTADPCFeed_Element& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTADPCFeed_Element* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTADPCFeed_Element*>(
               &_CMsgDOTADPCFeed_Element_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    408;

  void Swap(CMsgDOTADPCFeed_Element* other);
  friend void swap(CMsgDOTADPCFeed_Element& a, CMsgDOTADPCFeed_Element& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTADPCFeed_Element* New() const final {
    return CreateMaybeMessage<CMsgDOTADPCFeed_Element>(nullptr);
  }

  CMsgDOTADPCFeed_Element* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTADPCFeed_Element>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTADPCFeed_Element& from);
  void MergeFrom(const CMsgDOTADPCFeed_Element& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTADPCFeed_Element* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 series_id = 3;
  bool has_series_id() const;
  void clear_series_id();
  static const int kSeriesIdFieldNumber = 3;
  ::google::protobuf::uint32 series_id() const;
  void set_series_id(::google::protobuf::uint32 value);

  // optional uint64 match_id = 4;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 4;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 team_id = 5;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 5;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // optional uint32 account_id = 6;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 6;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 league_id = 7;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 7;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 node_id = 8;
  bool has_node_id() const;
  void clear_node_id();
  static const int kNodeIdFieldNumber = 8;
  ::google::protobuf::uint32 node_id() const;
  void set_node_id(::google::protobuf::uint32 value);

  // optional uint32 data_1 = 9;
  bool has_data_1() const;
  void clear_data_1();
  static const int kData1FieldNumber = 9;
  ::google::protobuf::uint32 data_1() const;
  void set_data_1(::google::protobuf::uint32 value);

  // optional uint32 data_2 = 10;
  bool has_data_2() const;
  void clear_data_2();
  static const int kData2FieldNumber = 10;
  ::google::protobuf::uint32 data_2() const;
  void set_data_2(::google::protobuf::uint32 value);

  // optional uint32 data_3 = 11;
  bool has_data_3() const;
  void clear_data_3();
  static const int kData3FieldNumber = 11;
  ::google::protobuf::uint32 data_3() const;
  void set_data_3(::google::protobuf::uint32 value);

  // optional uint32 data_4 = 12;
  bool has_data_4() const;
  void clear_data_4();
  static const int kData4FieldNumber = 12;
  ::google::protobuf::uint32 data_4() const;
  void set_data_4(::google::protobuf::uint32 value);

  // optional uint64 server_steam_id = 13;
  bool has_server_steam_id() const;
  void clear_server_steam_id();
  static const int kServerSteamIdFieldNumber = 13;
  ::google::protobuf::uint64 server_steam_id() const;
  void set_server_steam_id(::google::protobuf::uint64 value);

  // optional .proto.dota.CMsgDOTADPCFeed.EFeedElementType type = 1 [default = FEED_SERIES_RESULT];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::proto::dota::CMsgDOTADPCFeed_EFeedElementType type() const;
  void set_type(::proto::dota::CMsgDOTADPCFeed_EFeedElementType value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTADPCFeed.Element)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 series_id_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 node_id_;
  ::google::protobuf::uint32 data_1_;
  ::google::protobuf::uint32 data_2_;
  ::google::protobuf::uint32 data_3_;
  ::google::protobuf::uint32 data_4_;
  ::google::protobuf::uint64 server_steam_id_;
  int type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTADPCFeed final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTADPCFeed) */ {
 public:
  CMsgDOTADPCFeed();
  virtual ~CMsgDOTADPCFeed();

  CMsgDOTADPCFeed(const CMsgDOTADPCFeed& from);

  inline CMsgDOTADPCFeed& operator=(const CMsgDOTADPCFeed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTADPCFeed(CMsgDOTADPCFeed&& from) noexcept
    : CMsgDOTADPCFeed() {
    *this = ::std::move(from);
  }

  inline CMsgDOTADPCFeed& operator=(CMsgDOTADPCFeed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTADPCFeed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTADPCFeed* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTADPCFeed*>(
               &_CMsgDOTADPCFeed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    409;

  void Swap(CMsgDOTADPCFeed* other);
  friend void swap(CMsgDOTADPCFeed& a, CMsgDOTADPCFeed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTADPCFeed* New() const final {
    return CreateMaybeMessage<CMsgDOTADPCFeed>(nullptr);
  }

  CMsgDOTADPCFeed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTADPCFeed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTADPCFeed& from);
  void MergeFrom(const CMsgDOTADPCFeed& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTADPCFeed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTADPCFeed_Element Element;

  typedef CMsgDOTADPCFeed_EFeedElementType EFeedElementType;
  static const EFeedElementType FEED_SERIES_RESULT =
    CMsgDOTADPCFeed_EFeedElementType_FEED_SERIES_RESULT;
  static const EFeedElementType FEED_MATCH_POPULAR =
    CMsgDOTADPCFeed_EFeedElementType_FEED_MATCH_POPULAR;
  static const EFeedElementType FEED_TEAM_UPCOMING_MATCH =
    CMsgDOTADPCFeed_EFeedElementType_FEED_TEAM_UPCOMING_MATCH;
  static const EFeedElementType FEED_TEAM_LEAGUE_RESULT =
    CMsgDOTADPCFeed_EFeedElementType_FEED_TEAM_LEAGUE_RESULT;
  static const EFeedElementType FEED_TEAM_ADD_PLAYER =
    CMsgDOTADPCFeed_EFeedElementType_FEED_TEAM_ADD_PLAYER;
  static const EFeedElementType FEED_TEAM_REMOVE_PLAYER =
    CMsgDOTADPCFeed_EFeedElementType_FEED_TEAM_REMOVE_PLAYER;
  static const EFeedElementType FEED_TEAM_DISBAND =
    CMsgDOTADPCFeed_EFeedElementType_FEED_TEAM_DISBAND;
  static const EFeedElementType FEED_LEAGUE_UPCOMING =
    CMsgDOTADPCFeed_EFeedElementType_FEED_LEAGUE_UPCOMING;
  static const EFeedElementType FEED_LEAGUE_CONCLUDED =
    CMsgDOTADPCFeed_EFeedElementType_FEED_LEAGUE_CONCLUDED;
  static const EFeedElementType FEED_DPC_STANDINGS =
    CMsgDOTADPCFeed_EFeedElementType_FEED_DPC_STANDINGS;
  static const EFeedElementType FEED_ALERT_PREDICTIONS =
    CMsgDOTADPCFeed_EFeedElementType_FEED_ALERT_PREDICTIONS;
  static const EFeedElementType FEED_ALERT_FANTASY =
    CMsgDOTADPCFeed_EFeedElementType_FEED_ALERT_FANTASY;
  static const EFeedElementType FEED_LEAGUE_LIVE_MATCH =
    CMsgDOTADPCFeed_EFeedElementType_FEED_LEAGUE_LIVE_MATCH;
  static inline bool EFeedElementType_IsValid(int value) {
    return CMsgDOTADPCFeed_EFeedElementType_IsValid(value);
  }
  static const EFeedElementType EFeedElementType_MIN =
    CMsgDOTADPCFeed_EFeedElementType_EFeedElementType_MIN;
  static const EFeedElementType EFeedElementType_MAX =
    CMsgDOTADPCFeed_EFeedElementType_EFeedElementType_MAX;
  static const int EFeedElementType_ARRAYSIZE =
    CMsgDOTADPCFeed_EFeedElementType_EFeedElementType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EFeedElementType_descriptor() {
    return CMsgDOTADPCFeed_EFeedElementType_descriptor();
  }
  static inline const ::std::string& EFeedElementType_Name(EFeedElementType value) {
    return CMsgDOTADPCFeed_EFeedElementType_Name(value);
  }
  static inline bool EFeedElementType_Parse(const ::std::string& name,
      EFeedElementType* value) {
    return CMsgDOTADPCFeed_EFeedElementType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTADPCFeed.Element elements = 1;
  int elements_size() const;
  void clear_elements();
  static const int kElementsFieldNumber = 1;
  ::proto::dota::CMsgDOTADPCFeed_Element* mutable_elements(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTADPCFeed_Element >*
      mutable_elements();
  const ::proto::dota::CMsgDOTADPCFeed_Element& elements(int index) const;
  ::proto::dota::CMsgDOTADPCFeed_Element* add_elements();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTADPCFeed_Element >&
      elements() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTADPCFeed)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTADPCFeed_Element > elements_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTADPCUserInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTADPCUserInfo) */ {
 public:
  CMsgDOTADPCUserInfo();
  virtual ~CMsgDOTADPCUserInfo();

  CMsgDOTADPCUserInfo(const CMsgDOTADPCUserInfo& from);

  inline CMsgDOTADPCUserInfo& operator=(const CMsgDOTADPCUserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTADPCUserInfo(CMsgDOTADPCUserInfo&& from) noexcept
    : CMsgDOTADPCUserInfo() {
    *this = ::std::move(from);
  }

  inline CMsgDOTADPCUserInfo& operator=(CMsgDOTADPCUserInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTADPCUserInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTADPCUserInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTADPCUserInfo*>(
               &_CMsgDOTADPCUserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    410;

  void Swap(CMsgDOTADPCUserInfo* other);
  friend void swap(CMsgDOTADPCUserInfo& a, CMsgDOTADPCUserInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTADPCUserInfo* New() const final {
    return CreateMaybeMessage<CMsgDOTADPCUserInfo>(nullptr);
  }

  CMsgDOTADPCUserInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTADPCUserInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTADPCUserInfo& from);
  void MergeFrom(const CMsgDOTADPCUserInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTADPCUserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_plus_subscriber = 1;
  bool has_is_plus_subscriber() const;
  void clear_is_plus_subscriber();
  static const int kIsPlusSubscriberFieldNumber = 1;
  bool is_plus_subscriber() const;
  void set_is_plus_subscriber(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTADPCUserInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool is_plus_subscriber_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgClientSuspended

// optional uint32 time_end = 1;
inline bool CMsgClientSuspended::has_time_end() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientSuspended::clear_time_end() {
  time_end_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientSuspended::time_end() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientSuspended.time_end)
  return time_end_;
}
inline void CMsgClientSuspended::set_time_end(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  time_end_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientSuspended.time_end)
}

// -------------------------------------------------------------------

// CMsgBalancedShuffleLobby

// -------------------------------------------------------------------

// CMsgInitialQuestionnaireResponse

// optional uint32 initial_skill = 1;
inline bool CMsgInitialQuestionnaireResponse::has_initial_skill() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgInitialQuestionnaireResponse::clear_initial_skill() {
  initial_skill_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgInitialQuestionnaireResponse::initial_skill() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgInitialQuestionnaireResponse.initial_skill)
  return initial_skill_;
}
inline void CMsgInitialQuestionnaireResponse::set_initial_skill(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  initial_skill_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgInitialQuestionnaireResponse.initial_skill)
}

// -------------------------------------------------------------------

// CMsgDOTAPlayerMatchHistory

// repeated uint64 match_ids = 1;
inline int CMsgDOTAPlayerMatchHistory::match_ids_size() const {
  return match_ids_.size();
}
inline void CMsgDOTAPlayerMatchHistory::clear_match_ids() {
  match_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAPlayerMatchHistory::match_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPlayerMatchHistory.match_ids)
  return match_ids_.Get(index);
}
inline void CMsgDOTAPlayerMatchHistory::set_match_ids(int index, ::google::protobuf::uint64 value) {
  match_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPlayerMatchHistory.match_ids)
}
inline void CMsgDOTAPlayerMatchHistory::add_match_ids(::google::protobuf::uint64 value) {
  match_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPlayerMatchHistory.match_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAPlayerMatchHistory::match_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAPlayerMatchHistory.match_ids)
  return match_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAPlayerMatchHistory::mutable_match_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAPlayerMatchHistory.match_ids)
  return &match_ids_;
}

// -------------------------------------------------------------------

// CMsgDOTAMatchHistoryFilter

// repeated uint64 match_ids = 1;
inline int CMsgDOTAMatchHistoryFilter::match_ids_size() const {
  return match_ids_.size();
}
inline void CMsgDOTAMatchHistoryFilter::clear_match_ids() {
  match_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAMatchHistoryFilter::match_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchHistoryFilter.match_ids)
  return match_ids_.Get(index);
}
inline void CMsgDOTAMatchHistoryFilter::set_match_ids(int index, ::google::protobuf::uint64 value) {
  match_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchHistoryFilter.match_ids)
}
inline void CMsgDOTAMatchHistoryFilter::add_match_ids(::google::protobuf::uint64 value) {
  match_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAMatchHistoryFilter.match_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAMatchHistoryFilter::match_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAMatchHistoryFilter.match_ids)
  return match_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAMatchHistoryFilter::mutable_match_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAMatchHistoryFilter.match_ids)
  return &match_ids_;
}

// optional uint64 newest_match_id_at_last_query = 2;
inline bool CMsgDOTAMatchHistoryFilter::has_newest_match_id_at_last_query() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchHistoryFilter::clear_newest_match_id_at_last_query() {
  newest_match_id_at_last_query_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgDOTAMatchHistoryFilter::newest_match_id_at_last_query() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchHistoryFilter.newest_match_id_at_last_query)
  return newest_match_id_at_last_query_;
}
inline void CMsgDOTAMatchHistoryFilter::set_newest_match_id_at_last_query(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  newest_match_id_at_last_query_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchHistoryFilter.newest_match_id_at_last_query)
}

// optional uint32 time_last_query = 3;
inline bool CMsgDOTAMatchHistoryFilter::has_time_last_query() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatchHistoryFilter::clear_time_last_query() {
  time_last_query_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAMatchHistoryFilter::time_last_query() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchHistoryFilter.time_last_query)
  return time_last_query_;
}
inline void CMsgDOTAMatchHistoryFilter::set_time_last_query(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  time_last_query_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchHistoryFilter.time_last_query)
}

// -------------------------------------------------------------------

// CMsgDOTARequestMatches

// optional uint32 hero_id = 2;
inline bool CMsgDOTARequestMatches::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestMatches::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.hero_id)
  return hero_id_;
}
inline void CMsgDOTARequestMatches::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.hero_id)
}

// optional uint32 game_mode = 3;
inline bool CMsgDOTARequestMatches::has_game_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestMatches::clear_game_mode() {
  game_mode_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::game_mode() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.game_mode)
  return game_mode_;
}
inline void CMsgDOTARequestMatches::set_game_mode(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.game_mode)
}

// optional fixed32 date_min = 6;
inline bool CMsgDOTARequestMatches::has_date_min() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestMatches::clear_date_min() {
  date_min_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::date_min() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.date_min)
  return date_min_;
}
inline void CMsgDOTARequestMatches::set_date_min(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  date_min_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.date_min)
}

// optional fixed32 date_max = 7;
inline bool CMsgDOTARequestMatches::has_date_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTARequestMatches::clear_date_max() {
  date_max_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::date_max() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.date_max)
  return date_max_;
}
inline void CMsgDOTARequestMatches::set_date_max(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  date_max_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.date_max)
}

// optional uint32 matches_requested = 10;
inline bool CMsgDOTARequestMatches::has_matches_requested() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTARequestMatches::clear_matches_requested() {
  matches_requested_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::matches_requested() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.matches_requested)
  return matches_requested_;
}
inline void CMsgDOTARequestMatches::set_matches_requested(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  matches_requested_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.matches_requested)
}

// optional uint64 start_at_match_id = 11;
inline bool CMsgDOTARequestMatches::has_start_at_match_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTARequestMatches::clear_start_at_match_id() {
  start_at_match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 CMsgDOTARequestMatches::start_at_match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.start_at_match_id)
  return start_at_match_id_;
}
inline void CMsgDOTARequestMatches::set_start_at_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  start_at_match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.start_at_match_id)
}

// optional fixed32 min_players = 12;
inline bool CMsgDOTARequestMatches::has_min_players() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTARequestMatches::clear_min_players() {
  min_players_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::min_players() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.min_players)
  return min_players_;
}
inline void CMsgDOTARequestMatches::set_min_players(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  min_players_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.min_players)
}

// optional uint32 request_id = 13;
inline bool CMsgDOTARequestMatches::has_request_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTARequestMatches::clear_request_id() {
  request_id_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::request_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.request_id)
  return request_id_;
}
inline void CMsgDOTARequestMatches::set_request_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.request_id)
}

// optional uint32 account_id = 15;
inline bool CMsgDOTARequestMatches::has_account_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTARequestMatches::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.account_id)
  return account_id_;
}
inline void CMsgDOTARequestMatches::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.account_id)
}

// optional uint32 league_id = 16;
inline bool CMsgDOTARequestMatches::has_league_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTARequestMatches::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.league_id)
  return league_id_;
}
inline void CMsgDOTARequestMatches::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.league_id)
}

// optional .proto.dota.CMsgDOTARequestMatches.SkillLevel skill = 17 [default = Any];
inline bool CMsgDOTARequestMatches::has_skill() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTARequestMatches::clear_skill() {
  skill_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::proto::dota::CMsgDOTARequestMatches_SkillLevel CMsgDOTARequestMatches::skill() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.skill)
  return static_cast< ::proto::dota::CMsgDOTARequestMatches_SkillLevel >(skill_);
}
inline void CMsgDOTARequestMatches::set_skill(::proto::dota::CMsgDOTARequestMatches_SkillLevel value) {
  assert(::proto::dota::CMsgDOTARequestMatches_SkillLevel_IsValid(value));
  _has_bits_[0] |= 0x00000800u;
  skill_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.skill)
}

// optional uint32 team_id = 18;
inline bool CMsgDOTARequestMatches::has_team_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTARequestMatches::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.team_id)
  return team_id_;
}
inline void CMsgDOTARequestMatches::set_team_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.team_id)
}

// optional uint64 custom_game_id = 20;
inline bool CMsgDOTARequestMatches::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTARequestMatches::clear_custom_game_id() {
  custom_game_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint64 CMsgDOTARequestMatches::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.custom_game_id)
  return custom_game_id_;
}
inline void CMsgDOTARequestMatches::set_custom_game_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00001000u;
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgDOTARequestMatchesResponse_Series

// repeated .proto.dota.CMsgDOTAMatch matches = 1;
inline int CMsgDOTARequestMatchesResponse_Series::matches_size() const {
  return matches_.size();
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse_Series::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
CMsgDOTARequestMatchesResponse_Series::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTARequestMatchesResponse.Series.matches)
  return &matches_;
}
inline const ::proto::dota::CMsgDOTAMatch& CMsgDOTARequestMatchesResponse_Series::matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_.Get(index);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse_Series::add_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
CMsgDOTARequestMatchesResponse_Series::matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_;
}

// optional uint32 series_id = 2;
inline bool CMsgDOTARequestMatchesResponse_Series::has_series_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_series_id() {
  series_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse_Series::series_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.Series.series_id)
  return series_id_;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_series_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  series_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatchesResponse.Series.series_id)
}

// optional uint32 series_type = 3;
inline bool CMsgDOTARequestMatchesResponse_Series::has_series_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_series_type() {
  series_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse_Series::series_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.Series.series_type)
  return series_type_;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_series_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  series_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatchesResponse.Series.series_type)
}

// -------------------------------------------------------------------

// CMsgDOTARequestMatchesResponse

// repeated .proto.dota.CMsgDOTAMatch matches = 1;
inline int CMsgDOTARequestMatchesResponse::matches_size() const {
  return matches_.size();
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTARequestMatchesResponse.matches)
  return matches_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
CMsgDOTARequestMatchesResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTARequestMatchesResponse.matches)
  return &matches_;
}
inline const ::proto::dota::CMsgDOTAMatch& CMsgDOTARequestMatchesResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.matches)
  return matches_.Get(index);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse::add_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTARequestMatchesResponse.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
CMsgDOTARequestMatchesResponse::matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTARequestMatchesResponse.matches)
  return matches_;
}

// repeated .proto.dota.CMsgDOTARequestMatchesResponse.Series series = 2;
inline int CMsgDOTARequestMatchesResponse::series_size() const {
  return series_.size();
}
inline void CMsgDOTARequestMatchesResponse::clear_series() {
  series_.Clear();
}
inline ::proto::dota::CMsgDOTARequestMatchesResponse_Series* CMsgDOTARequestMatchesResponse::mutable_series(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTARequestMatchesResponse.series)
  return series_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestMatchesResponse_Series >*
CMsgDOTARequestMatchesResponse::mutable_series() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTARequestMatchesResponse.series)
  return &series_;
}
inline const ::proto::dota::CMsgDOTARequestMatchesResponse_Series& CMsgDOTARequestMatchesResponse::series(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.series)
  return series_.Get(index);
}
inline ::proto::dota::CMsgDOTARequestMatchesResponse_Series* CMsgDOTARequestMatchesResponse::add_series() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTARequestMatchesResponse.series)
  return series_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestMatchesResponse_Series >&
CMsgDOTARequestMatchesResponse::series() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTARequestMatchesResponse.series)
  return series_;
}

// optional uint32 request_id = 3;
inline bool CMsgDOTARequestMatchesResponse::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestMatchesResponse::clear_request_id() {
  request_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse::request_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.request_id)
  return request_id_;
}
inline void CMsgDOTARequestMatchesResponse::set_request_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatchesResponse.request_id)
}

// optional uint32 total_results = 4;
inline bool CMsgDOTARequestMatchesResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestMatchesResponse::clear_total_results() {
  total_results_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse::total_results() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.total_results)
  return total_results_;
}
inline void CMsgDOTARequestMatchesResponse::set_total_results(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_results_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatchesResponse.total_results)
}

// optional uint32 results_remaining = 5;
inline bool CMsgDOTARequestMatchesResponse::has_results_remaining() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestMatchesResponse::clear_results_remaining() {
  results_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse::results_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.results_remaining)
  return results_remaining_;
}
inline void CMsgDOTARequestMatchesResponse::set_results_remaining(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  results_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatchesResponse.results_remaining)
}

// -------------------------------------------------------------------

// CMsgDOTAGetDPCStandingsResponse_TeamInfo

// optional uint32 team_id = 1;
inline bool CMsgDOTAGetDPCStandingsResponse_TeamInfo::has_team_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetDPCStandingsResponse_TeamInfo::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_id)
  return team_id_;
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::set_team_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_id)
}

// optional string team_name = 2;
inline bool CMsgDOTAGetDPCStandingsResponse_TeamInfo::has_team_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTAGetDPCStandingsResponse_TeamInfo::team_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_name)
  return team_name_.GetNoArena();
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::set_team_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_name)
}
#if LANG_CXX11
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::set_team_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_name)
}
#endif
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_name)
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::set_team_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_name)
}
inline ::std::string* CMsgDOTAGetDPCStandingsResponse_TeamInfo::mutable_team_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAGetDPCStandingsResponse_TeamInfo::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_name)
  if (!has_team_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return team_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::set_allocated_team_name(::std::string* team_name) {
  if (team_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_name)
}

// optional uint32 dpc_points = 3;
inline bool CMsgDOTAGetDPCStandingsResponse_TeamInfo::has_dpc_points() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::clear_dpc_points() {
  dpc_points_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetDPCStandingsResponse_TeamInfo::dpc_points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.dpc_points)
  return dpc_points_;
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::set_dpc_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  dpc_points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.dpc_points)
}

// optional string team_logo_url = 4;
inline bool CMsgDOTAGetDPCStandingsResponse_TeamInfo::has_team_logo_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::clear_team_logo_url() {
  team_logo_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgDOTAGetDPCStandingsResponse_TeamInfo::team_logo_url() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_logo_url)
  return team_logo_url_.GetNoArena();
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::set_team_logo_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  team_logo_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_logo_url)
}
#if LANG_CXX11
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::set_team_logo_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  team_logo_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_logo_url)
}
#endif
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::set_team_logo_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  team_logo_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_logo_url)
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::set_team_logo_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  team_logo_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_logo_url)
}
inline ::std::string* CMsgDOTAGetDPCStandingsResponse_TeamInfo::mutable_team_logo_url() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_logo_url)
  return team_logo_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAGetDPCStandingsResponse_TeamInfo::release_team_logo_url() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_logo_url)
  if (!has_team_logo_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return team_logo_url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::set_allocated_team_logo_url(::std::string* team_logo_url) {
  if (team_logo_url != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  team_logo_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_logo_url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.team_logo_url)
}

// optional .proto.dota.CMsgDOTAGetDPCStandingsResponse.EStatus status = 5 [default = DEFAULT];
inline bool CMsgDOTAGetDPCStandingsResponse_TeamInfo::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::proto::dota::CMsgDOTAGetDPCStandingsResponse_EStatus CMsgDOTAGetDPCStandingsResponse_TeamInfo::status() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.status)
  return static_cast< ::proto::dota::CMsgDOTAGetDPCStandingsResponse_EStatus >(status_);
}
inline void CMsgDOTAGetDPCStandingsResponse_TeamInfo::set_status(::proto::dota::CMsgDOTAGetDPCStandingsResponse_EStatus value) {
  assert(::proto::dota::CMsgDOTAGetDPCStandingsResponse_EStatus_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo.status)
}

// -------------------------------------------------------------------

// CMsgDOTAGetDPCStandingsResponse

// repeated .proto.dota.CMsgDOTAGetDPCStandingsResponse.TeamInfo standings = 1;
inline int CMsgDOTAGetDPCStandingsResponse::standings_size() const {
  return standings_.size();
}
inline void CMsgDOTAGetDPCStandingsResponse::clear_standings() {
  standings_.Clear();
}
inline ::proto::dota::CMsgDOTAGetDPCStandingsResponse_TeamInfo* CMsgDOTAGetDPCStandingsResponse::mutable_standings(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAGetDPCStandingsResponse.standings)
  return standings_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetDPCStandingsResponse_TeamInfo >*
CMsgDOTAGetDPCStandingsResponse::mutable_standings() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAGetDPCStandingsResponse.standings)
  return &standings_;
}
inline const ::proto::dota::CMsgDOTAGetDPCStandingsResponse_TeamInfo& CMsgDOTAGetDPCStandingsResponse::standings(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetDPCStandingsResponse.standings)
  return standings_.Get(index);
}
inline ::proto::dota::CMsgDOTAGetDPCStandingsResponse_TeamInfo* CMsgDOTAGetDPCStandingsResponse::add_standings() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAGetDPCStandingsResponse.standings)
  return standings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetDPCStandingsResponse_TeamInfo >&
CMsgDOTAGetDPCStandingsResponse::standings() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAGetDPCStandingsResponse.standings)
  return standings_;
}

// -------------------------------------------------------------------

// CMsgDOTAPopup

// optional .proto.dota.CMsgDOTAPopup.PopupID id = 1 [default = NONE];
inline bool CMsgDOTAPopup::has_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAPopup::clear_id() {
  id_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::proto::dota::CMsgDOTAPopup_PopupID CMsgDOTAPopup::id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.id)
  return static_cast< ::proto::dota::CMsgDOTAPopup_PopupID >(id_);
}
inline void CMsgDOTAPopup::set_id(::proto::dota::CMsgDOTAPopup_PopupID value) {
  assert(::proto::dota::CMsgDOTAPopup_PopupID_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.id)
}

// optional string custom_text = 2;
inline bool CMsgDOTAPopup::has_custom_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPopup::clear_custom_text() {
  custom_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTAPopup::custom_text() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.custom_text)
  return custom_text_.GetNoArena();
}
inline void CMsgDOTAPopup::set_custom_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  custom_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.custom_text)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_custom_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  custom_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPopup.custom_text)
}
#endif
inline void CMsgDOTAPopup::set_custom_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  custom_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.custom_text)
}
inline void CMsgDOTAPopup::set_custom_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  custom_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.custom_text)
}
inline ::std::string* CMsgDOTAPopup::mutable_custom_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.custom_text)
  return custom_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPopup::release_custom_text() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPopup.custom_text)
  if (!has_custom_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return custom_text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPopup::set_allocated_custom_text(::std::string* custom_text) {
  if (custom_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  custom_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custom_text);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPopup.custom_text)
}

// optional sint32 int_data = 3;
inline bool CMsgDOTAPopup::has_int_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAPopup::clear_int_data() {
  int_data_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 CMsgDOTAPopup::int_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.int_data)
  return int_data_;
}
inline void CMsgDOTAPopup::set_int_data(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  int_data_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.int_data)
}

// optional bytes popup_data = 4;
inline bool CMsgDOTAPopup::has_popup_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPopup::clear_popup_data() {
  popup_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgDOTAPopup::popup_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.popup_data)
  return popup_data_.GetNoArena();
}
inline void CMsgDOTAPopup::set_popup_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  popup_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.popup_data)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_popup_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  popup_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPopup.popup_data)
}
#endif
inline void CMsgDOTAPopup::set_popup_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  popup_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.popup_data)
}
inline void CMsgDOTAPopup::set_popup_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  popup_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.popup_data)
}
inline ::std::string* CMsgDOTAPopup::mutable_popup_data() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.popup_data)
  return popup_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPopup::release_popup_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPopup.popup_data)
  if (!has_popup_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return popup_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPopup::set_allocated_popup_data(::std::string* popup_data) {
  if (popup_data != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  popup_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), popup_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPopup.popup_data)
}

// optional string loc_token_header = 5;
inline bool CMsgDOTAPopup::has_loc_token_header() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPopup::clear_loc_token_header() {
  loc_token_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CMsgDOTAPopup::loc_token_header() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.loc_token_header)
  return loc_token_header_.GetNoArena();
}
inline void CMsgDOTAPopup::set_loc_token_header(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  loc_token_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.loc_token_header)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_loc_token_header(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  loc_token_header_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPopup.loc_token_header)
}
#endif
inline void CMsgDOTAPopup::set_loc_token_header(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  loc_token_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.loc_token_header)
}
inline void CMsgDOTAPopup::set_loc_token_header(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  loc_token_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.loc_token_header)
}
inline ::std::string* CMsgDOTAPopup::mutable_loc_token_header() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.loc_token_header)
  return loc_token_header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPopup::release_loc_token_header() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPopup.loc_token_header)
  if (!has_loc_token_header()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return loc_token_header_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPopup::set_allocated_loc_token_header(::std::string* loc_token_header) {
  if (loc_token_header != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  loc_token_header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loc_token_header);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPopup.loc_token_header)
}

// optional string loc_token_msg = 6;
inline bool CMsgDOTAPopup::has_loc_token_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAPopup::clear_loc_token_msg() {
  loc_token_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& CMsgDOTAPopup::loc_token_msg() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.loc_token_msg)
  return loc_token_msg_.GetNoArena();
}
inline void CMsgDOTAPopup::set_loc_token_msg(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  loc_token_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.loc_token_msg)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_loc_token_msg(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  loc_token_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPopup.loc_token_msg)
}
#endif
inline void CMsgDOTAPopup::set_loc_token_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  loc_token_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.loc_token_msg)
}
inline void CMsgDOTAPopup::set_loc_token_msg(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  loc_token_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.loc_token_msg)
}
inline ::std::string* CMsgDOTAPopup::mutable_loc_token_msg() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.loc_token_msg)
  return loc_token_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPopup::release_loc_token_msg() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPopup.loc_token_msg)
  if (!has_loc_token_msg()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return loc_token_msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPopup::set_allocated_loc_token_msg(::std::string* loc_token_msg) {
  if (loc_token_msg != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  loc_token_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loc_token_msg);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPopup.loc_token_msg)
}

// repeated string var_names = 7;
inline int CMsgDOTAPopup::var_names_size() const {
  return var_names_.size();
}
inline void CMsgDOTAPopup::clear_var_names() {
  var_names_.Clear();
}
inline const ::std::string& CMsgDOTAPopup::var_names(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.var_names)
  return var_names_.Get(index);
}
inline ::std::string* CMsgDOTAPopup::mutable_var_names(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.var_names)
  return var_names_.Mutable(index);
}
inline void CMsgDOTAPopup::set_var_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.var_names)
  var_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_var_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.var_names)
  var_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgDOTAPopup::set_var_names(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  var_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.var_names)
}
inline void CMsgDOTAPopup::set_var_names(int index, const char* value, size_t size) {
  var_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.var_names)
}
inline ::std::string* CMsgDOTAPopup::add_var_names() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CMsgDOTAPopup.var_names)
  return var_names_.Add();
}
inline void CMsgDOTAPopup::add_var_names(const ::std::string& value) {
  var_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPopup.var_names)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::add_var_names(::std::string&& value) {
  var_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPopup.var_names)
}
#endif
inline void CMsgDOTAPopup::add_var_names(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  var_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CMsgDOTAPopup.var_names)
}
inline void CMsgDOTAPopup::add_var_names(const char* value, size_t size) {
  var_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CMsgDOTAPopup.var_names)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CMsgDOTAPopup::var_names() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAPopup.var_names)
  return var_names_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CMsgDOTAPopup::mutable_var_names() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAPopup.var_names)
  return &var_names_;
}

// repeated string var_values = 8;
inline int CMsgDOTAPopup::var_values_size() const {
  return var_values_.size();
}
inline void CMsgDOTAPopup::clear_var_values() {
  var_values_.Clear();
}
inline const ::std::string& CMsgDOTAPopup::var_values(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.var_values)
  return var_values_.Get(index);
}
inline ::std::string* CMsgDOTAPopup::mutable_var_values(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.var_values)
  return var_values_.Mutable(index);
}
inline void CMsgDOTAPopup::set_var_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.var_values)
  var_values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_var_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.var_values)
  var_values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgDOTAPopup::set_var_values(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  var_values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.var_values)
}
inline void CMsgDOTAPopup::set_var_values(int index, const char* value, size_t size) {
  var_values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.var_values)
}
inline ::std::string* CMsgDOTAPopup::add_var_values() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CMsgDOTAPopup.var_values)
  return var_values_.Add();
}
inline void CMsgDOTAPopup::add_var_values(const ::std::string& value) {
  var_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPopup.var_values)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::add_var_values(::std::string&& value) {
  var_values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPopup.var_values)
}
#endif
inline void CMsgDOTAPopup::add_var_values(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  var_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CMsgDOTAPopup.var_values)
}
inline void CMsgDOTAPopup::add_var_values(const char* value, size_t size) {
  var_values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CMsgDOTAPopup.var_values)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CMsgDOTAPopup::var_values() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAPopup.var_values)
  return var_values_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CMsgDOTAPopup::mutable_var_values() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAPopup.var_values)
  return &var_values_;
}

// optional string debug_text = 9;
inline bool CMsgDOTAPopup::has_debug_text() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAPopup::clear_debug_text() {
  debug_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& CMsgDOTAPopup::debug_text() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.debug_text)
  return debug_text_.GetNoArena();
}
inline void CMsgDOTAPopup::set_debug_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  debug_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.debug_text)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_debug_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  debug_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPopup.debug_text)
}
#endif
inline void CMsgDOTAPopup::set_debug_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  debug_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.debug_text)
}
inline void CMsgDOTAPopup::set_debug_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  debug_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.debug_text)
}
inline ::std::string* CMsgDOTAPopup::mutable_debug_text() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.debug_text)
  return debug_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPopup::release_debug_text() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPopup.debug_text)
  if (!has_debug_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return debug_text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPopup::set_allocated_debug_text(::std::string* debug_text) {
  if (debug_text != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  debug_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debug_text);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPopup.debug_text)
}

// -------------------------------------------------------------------

// CMsgDOTAReportsRemainingRequest

// -------------------------------------------------------------------

// CMsgDOTAReportsRemainingResponse

// optional uint32 num_positive_reports_remaining = 1;
inline bool CMsgDOTAReportsRemainingResponse::has_num_positive_reports_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_positive_reports_remaining() {
  num_positive_reports_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_positive_reports_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportsRemainingResponse.num_positive_reports_remaining)
  return num_positive_reports_remaining_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_positive_reports_remaining(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  num_positive_reports_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportsRemainingResponse.num_positive_reports_remaining)
}

// optional uint32 num_negative_reports_remaining = 2;
inline bool CMsgDOTAReportsRemainingResponse::has_num_negative_reports_remaining() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_negative_reports_remaining() {
  num_negative_reports_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_negative_reports_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportsRemainingResponse.num_negative_reports_remaining)
  return num_negative_reports_remaining_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_negative_reports_remaining(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_negative_reports_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportsRemainingResponse.num_negative_reports_remaining)
}

// optional uint32 num_positive_reports_total = 3;
inline bool CMsgDOTAReportsRemainingResponse::has_num_positive_reports_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_positive_reports_total() {
  num_positive_reports_total_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_positive_reports_total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportsRemainingResponse.num_positive_reports_total)
  return num_positive_reports_total_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_positive_reports_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_positive_reports_total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportsRemainingResponse.num_positive_reports_total)
}

// optional uint32 num_negative_reports_total = 4;
inline bool CMsgDOTAReportsRemainingResponse::has_num_negative_reports_total() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_negative_reports_total() {
  num_negative_reports_total_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_negative_reports_total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportsRemainingResponse.num_negative_reports_total)
  return num_negative_reports_total_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_negative_reports_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  num_negative_reports_total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportsRemainingResponse.num_negative_reports_total)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitPlayerReport

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitPlayerReport::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::clear_target_account_id() {
  target_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReport::target_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReport.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitPlayerReport::set_target_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReport.target_account_id)
}

// optional uint32 report_flags = 2;
inline bool CMsgDOTASubmitPlayerReport::has_report_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::clear_report_flags() {
  report_flags_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReport::report_flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReport.report_flags)
  return report_flags_;
}
inline void CMsgDOTASubmitPlayerReport::set_report_flags(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  report_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReport.report_flags)
}

// optional uint64 lobby_id = 4;
inline bool CMsgDOTASubmitPlayerReport::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::clear_lobby_id() {
  lobby_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CMsgDOTASubmitPlayerReport::lobby_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReport.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTASubmitPlayerReport::set_lobby_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReport.lobby_id)
}

// optional string comment = 5;
inline bool CMsgDOTASubmitPlayerReport::has_comment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTASubmitPlayerReport::comment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReport.comment)
  return comment_.GetNoArena();
}
inline void CMsgDOTASubmitPlayerReport::set_comment(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReport.comment)
}
#if LANG_CXX11
inline void CMsgDOTASubmitPlayerReport::set_comment(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTASubmitPlayerReport.comment)
}
#endif
inline void CMsgDOTASubmitPlayerReport::set_comment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTASubmitPlayerReport.comment)
}
inline void CMsgDOTASubmitPlayerReport::set_comment(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTASubmitPlayerReport.comment)
}
inline ::std::string* CMsgDOTASubmitPlayerReport::mutable_comment() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTASubmitPlayerReport.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTASubmitPlayerReport::release_comment() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTASubmitPlayerReport.comment)
  if (!has_comment()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return comment_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTASubmitPlayerReport::set_allocated_comment(::std::string* comment) {
  if (comment != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTASubmitPlayerReport.comment)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitPlayerReportResponse

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitPlayerReportResponse::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_target_account_id() {
  target_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReportResponse::target_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReportResponse.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_target_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReportResponse.target_account_id)
}

// optional uint32 report_flags = 2;
inline bool CMsgDOTASubmitPlayerReportResponse::has_report_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_report_flags() {
  report_flags_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReportResponse::report_flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReportResponse.report_flags)
  return report_flags_;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_report_flags(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  report_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReportResponse.report_flags)
}

// optional uint32 result = 3;
inline bool CMsgDOTASubmitPlayerReportResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReportResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReportResponse.result)
  return result_;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_result(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReportResponse.result)
}

// optional string debug_message = 4;
inline bool CMsgDOTASubmitPlayerReportResponse::has_debug_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_debug_message() {
  debug_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTASubmitPlayerReportResponse::debug_message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
  return debug_message_.GetNoArena();
}
inline void CMsgDOTASubmitPlayerReportResponse::set_debug_message(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  debug_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
}
#if LANG_CXX11
inline void CMsgDOTASubmitPlayerReportResponse::set_debug_message(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  debug_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
}
#endif
inline void CMsgDOTASubmitPlayerReportResponse::set_debug_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  debug_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
}
inline void CMsgDOTASubmitPlayerReportResponse::set_debug_message(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  debug_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
}
inline ::std::string* CMsgDOTASubmitPlayerReportResponse::mutable_debug_message() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
  return debug_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTASubmitPlayerReportResponse::release_debug_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
  if (!has_debug_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return debug_message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTASubmitPlayerReportResponse::set_allocated_debug_message(::std::string* debug_message) {
  if (debug_message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  debug_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debug_message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
}

// -------------------------------------------------------------------

// CMsgDOTAReportCountsRequest

// optional uint32 target_account_id = 1;
inline bool CMsgDOTAReportCountsRequest::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAReportCountsRequest::clear_target_account_id() {
  target_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsRequest::target_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportCountsRequest.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTAReportCountsRequest::set_target_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportCountsRequest.target_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAReportCountsResponse

// optional uint32 target_account_id = 1;
inline bool CMsgDOTAReportCountsResponse::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAReportCountsResponse::clear_target_account_id() {
  target_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::target_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportCountsResponse.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTAReportCountsResponse::set_target_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportCountsResponse.target_account_id)
}

// optional uint32 leadership_count = 2;
inline bool CMsgDOTAReportCountsResponse::has_leadership_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAReportCountsResponse::clear_leadership_count() {
  leadership_count_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::leadership_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportCountsResponse.leadership_count)
  return leadership_count_;
}
inline void CMsgDOTAReportCountsResponse::set_leadership_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  leadership_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportCountsResponse.leadership_count)
}

// optional uint32 teaching_count = 3;
inline bool CMsgDOTAReportCountsResponse::has_teaching_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAReportCountsResponse::clear_teaching_count() {
  teaching_count_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::teaching_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportCountsResponse.teaching_count)
  return teaching_count_;
}
inline void CMsgDOTAReportCountsResponse::set_teaching_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  teaching_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportCountsResponse.teaching_count)
}

// optional uint32 friendly_count = 4;
inline bool CMsgDOTAReportCountsResponse::has_friendly_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAReportCountsResponse::clear_friendly_count() {
  friendly_count_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::friendly_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportCountsResponse.friendly_count)
  return friendly_count_;
}
inline void CMsgDOTAReportCountsResponse::set_friendly_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  friendly_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportCountsResponse.friendly_count)
}

// optional uint32 forgiving_count = 5;
inline bool CMsgDOTAReportCountsResponse::has_forgiving_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAReportCountsResponse::clear_forgiving_count() {
  forgiving_count_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::forgiving_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportCountsResponse.forgiving_count)
  return forgiving_count_;
}
inline void CMsgDOTAReportCountsResponse::set_forgiving_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  forgiving_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportCountsResponse.forgiving_count)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitLobbyMVPVote

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitLobbyMVPVote::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitLobbyMVPVote::clear_target_account_id() {
  target_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTASubmitLobbyMVPVote::target_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitLobbyMVPVote.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitLobbyMVPVote::set_target_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitLobbyMVPVote.target_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitLobbyMVPVoteResponse

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitLobbyMVPVoteResponse::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::clear_target_account_id() {
  target_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTASubmitLobbyMVPVoteResponse::target_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitLobbyMVPVoteResponse.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::set_target_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitLobbyMVPVoteResponse.target_account_id)
}

// optional uint32 eresult = 2;
inline bool CMsgDOTASubmitLobbyMVPVoteResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::clear_eresult() {
  eresult_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTASubmitLobbyMVPVoteResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitLobbyMVPVoteResponse.eresult)
  return eresult_;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitLobbyMVPVoteResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTALobbyMVPNotifyRecipient

// optional uint32 voter_account_id = 1;
inline bool CMsgDOTALobbyMVPNotifyRecipient::has_voter_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_voter_account_id() {
  voter_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTALobbyMVPNotifyRecipient::voter_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyMVPNotifyRecipient.voter_account_id)
  return voter_account_id_;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_voter_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  voter_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyMVPNotifyRecipient.voter_account_id)
}

// optional uint32 recipient_account_id = 2;
inline bool CMsgDOTALobbyMVPNotifyRecipient::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTALobbyMVPNotifyRecipient::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyMVPNotifyRecipient.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_recipient_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyMVPNotifyRecipient.recipient_account_id)
}

// optional uint32 num_votes = 3;
inline bool CMsgDOTALobbyMVPNotifyRecipient::has_num_votes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_num_votes() {
  num_votes_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTALobbyMVPNotifyRecipient::num_votes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyMVPNotifyRecipient.num_votes)
  return num_votes_;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_num_votes(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_votes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyMVPNotifyRecipient.num_votes)
}

// -------------------------------------------------------------------

// CMsgDOTALobbyMVPAwarded

// optional uint32 mvp_account_id = 1;
inline bool CMsgDOTALobbyMVPAwarded::has_mvp_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALobbyMVPAwarded::clear_mvp_account_id() {
  mvp_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTALobbyMVPAwarded::mvp_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyMVPAwarded.mvp_account_id)
  return mvp_account_id_;
}
inline void CMsgDOTALobbyMVPAwarded::set_mvp_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  mvp_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyMVPAwarded.mvp_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAKickedFromMatchmakingQueue

// optional .proto.dota.MatchType match_type = 1 [default = MATCH_TYPE_CASUAL];
inline bool CMsgDOTAKickedFromMatchmakingQueue::has_match_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAKickedFromMatchmakingQueue::clear_match_type() {
  match_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::MatchType CMsgDOTAKickedFromMatchmakingQueue::match_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAKickedFromMatchmakingQueue.match_type)
  return static_cast< ::proto::dota::MatchType >(match_type_);
}
inline void CMsgDOTAKickedFromMatchmakingQueue::set_match_type(::proto::dota::MatchType value) {
  assert(::proto::dota::MatchType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAKickedFromMatchmakingQueue.match_type)
}

// -------------------------------------------------------------------

// CMsgDOTARequestSaveGames

// optional uint32 server_region = 1;
inline bool CMsgDOTARequestSaveGames::has_server_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestSaveGames::clear_server_region() {
  server_region_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestSaveGames::server_region() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestSaveGames.server_region)
  return server_region_;
}
inline void CMsgDOTARequestSaveGames::set_server_region(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  server_region_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestSaveGames.server_region)
}

// -------------------------------------------------------------------

// CMsgDOTARequestSaveGamesResponse

// optional fixed64 steam_id = 1;
inline bool CMsgDOTARequestSaveGamesResponse::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestSaveGamesResponse::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgDOTARequestSaveGamesResponse::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestSaveGamesResponse.steam_id)
  return steam_id_;
}
inline void CMsgDOTARequestSaveGamesResponse::set_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestSaveGamesResponse.steam_id)
}

// repeated .proto.dota.CDOTASaveGame save_games = 2;
inline int CMsgDOTARequestSaveGamesResponse::save_games_size() const {
  return save_games_.size();
}
inline ::proto::dota::CDOTASaveGame* CMsgDOTARequestSaveGamesResponse::mutable_save_games(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTASaveGame >*
CMsgDOTARequestSaveGamesResponse::mutable_save_games() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTARequestSaveGamesResponse.save_games)
  return &save_games_;
}
inline const ::proto::dota::CDOTASaveGame& CMsgDOTARequestSaveGamesResponse::save_games(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_.Get(index);
}
inline ::proto::dota::CDOTASaveGame* CMsgDOTARequestSaveGamesResponse::add_save_games() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTASaveGame >&
CMsgDOTARequestSaveGamesResponse::save_games() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_;
}

// -------------------------------------------------------------------

// CMsgGCMatchDetailsRequest

// optional uint64 match_id = 1;
inline bool CMsgGCMatchDetailsRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMatchDetailsRequest::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCMatchDetailsRequest::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMatchDetailsRequest.match_id)
  return match_id_;
}
inline void CMsgGCMatchDetailsRequest::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMatchDetailsRequest.match_id)
}

// -------------------------------------------------------------------

// CMsgGCMatchDetailsResponse

// optional uint32 result = 1;
inline bool CMsgGCMatchDetailsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMatchDetailsResponse::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCMatchDetailsResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMatchDetailsResponse.result)
  return result_;
}
inline void CMsgGCMatchDetailsResponse::set_result(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMatchDetailsResponse.result)
}

// optional .proto.dota.CMsgDOTAMatch match = 2;
inline bool CMsgGCMatchDetailsResponse::has_match() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CMsgDOTAMatch& CMsgGCMatchDetailsResponse::match() const {
  const ::proto::dota::CMsgDOTAMatch* p = match_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMatchDetailsResponse.match)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAMatch*>(
      &::proto::dota::_CMsgDOTAMatch_default_instance_);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgGCMatchDetailsResponse::release_match() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCMatchDetailsResponse.match)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTAMatch* temp = match_;
  match_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAMatch* CMsgGCMatchDetailsResponse::mutable_match() {
  _has_bits_[0] |= 0x00000001u;
  if (match_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAMatch>(GetArenaNoVirtual());
    match_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMatchDetailsResponse.match)
  return match_;
}
inline void CMsgGCMatchDetailsResponse::set_allocated_match(::proto::dota::CMsgDOTAMatch* match) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(match_);
  }
  if (match) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      match = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, match, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  match_ = match;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCMatchDetailsResponse.match)
}

// optional .proto.dota.DOTAMatchVote vote = 3 [default = DOTAMatchVote_INVALID];
inline bool CMsgGCMatchDetailsResponse::has_vote() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCMatchDetailsResponse::clear_vote() {
  vote_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::proto::dota::DOTAMatchVote CMsgGCMatchDetailsResponse::vote() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMatchDetailsResponse.vote)
  return static_cast< ::proto::dota::DOTAMatchVote >(vote_);
}
inline void CMsgGCMatchDetailsResponse::set_vote(::proto::dota::DOTAMatchVote value) {
  assert(::proto::dota::DOTAMatchVote_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  vote_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMatchDetailsResponse.vote)
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchDetailsRequest

// repeated uint64 match_ids = 1;
inline int CMsgServerToGCMatchDetailsRequest::match_ids_size() const {
  return match_ids_.size();
}
inline void CMsgServerToGCMatchDetailsRequest::clear_match_ids() {
  match_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgServerToGCMatchDetailsRequest::match_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchDetailsRequest.match_ids)
  return match_ids_.Get(index);
}
inline void CMsgServerToGCMatchDetailsRequest::set_match_ids(int index, ::google::protobuf::uint64 value) {
  match_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchDetailsRequest.match_ids)
}
inline void CMsgServerToGCMatchDetailsRequest::add_match_ids(::google::protobuf::uint64 value) {
  match_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCMatchDetailsRequest.match_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgServerToGCMatchDetailsRequest::match_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCMatchDetailsRequest.match_ids)
  return match_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgServerToGCMatchDetailsRequest::mutable_match_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCMatchDetailsRequest.match_ids)
  return &match_ids_;
}

// -------------------------------------------------------------------

// CMsgGCToServerMatchDetailsResponse

// repeated .proto.dota.CMsgDOTAMatch matches = 1;
inline int CMsgGCToServerMatchDetailsResponse::matches_size() const {
  return matches_.size();
}
inline ::proto::dota::CMsgDOTAMatch* CMsgGCToServerMatchDetailsResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToServerMatchDetailsResponse.matches)
  return matches_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
CMsgGCToServerMatchDetailsResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToServerMatchDetailsResponse.matches)
  return &matches_;
}
inline const ::proto::dota::CMsgDOTAMatch& CMsgGCToServerMatchDetailsResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerMatchDetailsResponse.matches)
  return matches_.Get(index);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgGCToServerMatchDetailsResponse::add_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToServerMatchDetailsResponse.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
CMsgGCToServerMatchDetailsResponse::matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToServerMatchDetailsResponse.matches)
  return matches_;
}

// -------------------------------------------------------------------

// CMsgDOTAProfileTickets_LeaguePass

// optional uint32 league_id = 1;
inline bool CMsgDOTAProfileTickets_LeaguePass::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileTickets_LeaguePass::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets_LeaguePass::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileTickets.LeaguePass.league_id)
  return league_id_;
}
inline void CMsgDOTAProfileTickets_LeaguePass::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileTickets.LeaguePass.league_id)
}

// optional uint32 item_def = 2;
inline bool CMsgDOTAProfileTickets_LeaguePass::has_item_def() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileTickets_LeaguePass::clear_item_def() {
  item_def_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets_LeaguePass::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileTickets.LeaguePass.item_def)
  return item_def_;
}
inline void CMsgDOTAProfileTickets_LeaguePass::set_item_def(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileTickets.LeaguePass.item_def)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileTickets

// optional uint32 result = 1;
inline bool CMsgDOTAProfileTickets::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileTickets::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileTickets.result)
  return result_;
}
inline void CMsgDOTAProfileTickets::set_result(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileTickets.result)
}

// optional uint32 account_id = 2;
inline bool CMsgDOTAProfileTickets::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileTickets::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileTickets.account_id)
  return account_id_;
}
inline void CMsgDOTAProfileTickets::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileTickets.account_id)
}

// repeated .proto.dota.CMsgDOTAProfileTickets.LeaguePass league_passes = 3;
inline int CMsgDOTAProfileTickets::league_passes_size() const {
  return league_passes_.size();
}
inline void CMsgDOTAProfileTickets::clear_league_passes() {
  league_passes_.Clear();
}
inline ::proto::dota::CMsgDOTAProfileTickets_LeaguePass* CMsgDOTAProfileTickets::mutable_league_passes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileTickets.league_passes)
  return league_passes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_LeaguePass >*
CMsgDOTAProfileTickets::mutable_league_passes() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAProfileTickets.league_passes)
  return &league_passes_;
}
inline const ::proto::dota::CMsgDOTAProfileTickets_LeaguePass& CMsgDOTAProfileTickets::league_passes(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileTickets.league_passes)
  return league_passes_.Get(index);
}
inline ::proto::dota::CMsgDOTAProfileTickets_LeaguePass* CMsgDOTAProfileTickets::add_league_passes() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAProfileTickets.league_passes)
  return league_passes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_LeaguePass >&
CMsgDOTAProfileTickets::league_passes() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAProfileTickets.league_passes)
  return league_passes_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetProfileTickets

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetProfileTickets::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetProfileTickets::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetProfileTickets::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetProfileTickets.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetProfileTickets::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetProfileTickets.account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAClearNotifySuccessfulReport

// -------------------------------------------------------------------

// CMsgDOTAWelcome_CExtraMsg

// optional uint32 id = 1;
inline bool CMsgDOTAWelcome_CExtraMsg::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome_CExtraMsg::id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.CExtraMsg.id)
  return id_;
}
inline void CMsgDOTAWelcome_CExtraMsg::set_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.CExtraMsg.id)
}

// optional bytes contents = 2;
inline bool CMsgDOTAWelcome_CExtraMsg::has_contents() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_contents() {
  contents_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTAWelcome_CExtraMsg::contents() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
  return contents_.GetNoArena();
}
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
}
#if LANG_CXX11
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  contents_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
}
#endif
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
}
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
}
inline ::std::string* CMsgDOTAWelcome_CExtraMsg::mutable_contents() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
  return contents_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAWelcome_CExtraMsg::release_contents() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
  if (!has_contents()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return contents_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAWelcome_CExtraMsg::set_allocated_contents(::std::string* contents) {
  if (contents != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  contents_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contents);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
}

// -------------------------------------------------------------------

// CMsgDOTAWelcome

// optional uint32 store_item_hash = 5;
inline bool CMsgDOTAWelcome::has_store_item_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAWelcome::clear_store_item_hash() {
  store_item_hash_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::store_item_hash() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.store_item_hash)
  return store_item_hash_;
}
inline void CMsgDOTAWelcome::set_store_item_hash(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  store_item_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.store_item_hash)
}

// optional uint32 timeplayedconsecutively = 6;
inline bool CMsgDOTAWelcome::has_timeplayedconsecutively() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAWelcome::clear_timeplayedconsecutively() {
  timeplayedconsecutively_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::timeplayedconsecutively() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.timeplayedconsecutively)
  return timeplayedconsecutively_;
}
inline void CMsgDOTAWelcome::set_timeplayedconsecutively(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  timeplayedconsecutively_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.timeplayedconsecutively)
}

// optional bool allow_3rd_party_match_history = 7;
inline bool CMsgDOTAWelcome::has_allow_3rd_party_match_history() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAWelcome::clear_allow_3rd_party_match_history() {
  allow_3rd_party_match_history_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CMsgDOTAWelcome::allow_3rd_party_match_history() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.allow_3rd_party_match_history)
  return allow_3rd_party_match_history_;
}
inline void CMsgDOTAWelcome::set_allow_3rd_party_match_history(bool value) {
  _has_bits_[0] |= 0x00000100u;
  allow_3rd_party_match_history_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.allow_3rd_party_match_history)
}

// optional .proto.dota.PartnerAccountType partner_account_type = 8 [default = PARTNER_NONE];
inline bool CMsgDOTAWelcome::has_partner_account_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAWelcome::clear_partner_account_type() {
  partner_account_type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::proto::dota::PartnerAccountType CMsgDOTAWelcome::partner_account_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.partner_account_type)
  return static_cast< ::proto::dota::PartnerAccountType >(partner_account_type_);
}
inline void CMsgDOTAWelcome::set_partner_account_type(::proto::dota::PartnerAccountType value) {
  assert(::proto::dota::PartnerAccountType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  partner_account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.partner_account_type)
}

// optional uint32 partner_account_state = 11;
inline bool CMsgDOTAWelcome::has_partner_account_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAWelcome::clear_partner_account_state() {
  partner_account_state_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::partner_account_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.partner_account_state)
  return partner_account_state_;
}
inline void CMsgDOTAWelcome::set_partner_account_state(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  partner_account_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.partner_account_state)
}

// optional uint32 last_time_played = 12;
inline bool CMsgDOTAWelcome::has_last_time_played() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAWelcome::clear_last_time_played() {
  last_time_played_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::last_time_played() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.last_time_played)
  return last_time_played_;
}
inline void CMsgDOTAWelcome::set_last_time_played(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  last_time_played_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.last_time_played)
}

// optional uint32 last_ip_address = 13;
inline bool CMsgDOTAWelcome::has_last_ip_address() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAWelcome::clear_last_ip_address() {
  last_ip_address_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::last_ip_address() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.last_ip_address)
  return last_ip_address_;
}
inline void CMsgDOTAWelcome::set_last_ip_address(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  last_ip_address_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.last_ip_address)
}

// optional uint32 shutdownlawterminateminutes = 15;
inline bool CMsgDOTAWelcome::has_shutdownlawterminateminutes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAWelcome::clear_shutdownlawterminateminutes() {
  shutdownlawterminateminutes_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::shutdownlawterminateminutes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.shutdownlawterminateminutes)
  return shutdownlawterminateminutes_;
}
inline void CMsgDOTAWelcome::set_shutdownlawterminateminutes(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  shutdownlawterminateminutes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.shutdownlawterminateminutes)
}

// optional uint32 banned_word_list_version = 16;
inline bool CMsgDOTAWelcome::has_banned_word_list_version() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAWelcome::clear_banned_word_list_version() {
  banned_word_list_version_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::banned_word_list_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.banned_word_list_version)
  return banned_word_list_version_;
}
inline void CMsgDOTAWelcome::set_banned_word_list_version(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  banned_word_list_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.banned_word_list_version)
}

// optional bool profile_private = 17;
inline bool CMsgDOTAWelcome::has_profile_private() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAWelcome::clear_profile_private() {
  profile_private_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CMsgDOTAWelcome::profile_private() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.profile_private)
  return profile_private_;
}
inline void CMsgDOTAWelcome::set_profile_private(bool value) {
  _has_bits_[0] |= 0x00000200u;
  profile_private_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.profile_private)
}

// optional uint32 currency = 18;
inline bool CMsgDOTAWelcome::has_currency() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTAWelcome::clear_currency() {
  currency_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::currency() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.currency)
  return currency_;
}
inline void CMsgDOTAWelcome::set_currency(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  currency_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.currency)
}

// optional uint32 pwrd_cyber_cafe_id = 19;
inline bool CMsgDOTAWelcome::has_pwrd_cyber_cafe_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTAWelcome::clear_pwrd_cyber_cafe_id() {
  pwrd_cyber_cafe_id_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::pwrd_cyber_cafe_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.pwrd_cyber_cafe_id)
  return pwrd_cyber_cafe_id_;
}
inline void CMsgDOTAWelcome::set_pwrd_cyber_cafe_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  pwrd_cyber_cafe_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.pwrd_cyber_cafe_id)
}

// optional bool should_request_player_origin = 20;
inline bool CMsgDOTAWelcome::has_should_request_player_origin() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTAWelcome::clear_should_request_player_origin() {
  should_request_player_origin_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CMsgDOTAWelcome::should_request_player_origin() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.should_request_player_origin)
  return should_request_player_origin_;
}
inline void CMsgDOTAWelcome::set_should_request_player_origin(bool value) {
  _has_bits_[0] |= 0x00000400u;
  should_request_player_origin_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.should_request_player_origin)
}

// optional uint64 compendium_unlocks = 21;
inline bool CMsgDOTAWelcome::has_compendium_unlocks() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDOTAWelcome::clear_compendium_unlocks() {
  compendium_unlocks_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00008000u;
}
inline ::google::protobuf::uint64 CMsgDOTAWelcome::compendium_unlocks() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.compendium_unlocks)
  return compendium_unlocks_;
}
inline void CMsgDOTAWelcome::set_compendium_unlocks(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00008000u;
  compendium_unlocks_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.compendium_unlocks)
}

// optional uint32 gc_socache_file_version = 22;
inline bool CMsgDOTAWelcome::has_gc_socache_file_version() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTAWelcome::clear_gc_socache_file_version() {
  gc_socache_file_version_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::gc_socache_file_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.gc_socache_file_version)
  return gc_socache_file_version_;
}
inline void CMsgDOTAWelcome::set_gc_socache_file_version(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  gc_socache_file_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.gc_socache_file_version)
}

// optional bool is_perfect_world_test_account = 24;
inline bool CMsgDOTAWelcome::has_is_perfect_world_test_account() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAWelcome::clear_is_perfect_world_test_account() {
  is_perfect_world_test_account_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CMsgDOTAWelcome::is_perfect_world_test_account() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.is_perfect_world_test_account)
  return is_perfect_world_test_account_;
}
inline void CMsgDOTAWelcome::set_is_perfect_world_test_account(bool value) {
  _has_bits_[0] |= 0x00000800u;
  is_perfect_world_test_account_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.is_perfect_world_test_account)
}

// repeated .proto.dota.CMsgDOTAWelcome.CExtraMsg extra_messages = 26;
inline int CMsgDOTAWelcome::extra_messages_size() const {
  return extra_messages_.size();
}
inline void CMsgDOTAWelcome::clear_extra_messages() {
  extra_messages_.Clear();
}
inline ::proto::dota::CMsgDOTAWelcome_CExtraMsg* CMsgDOTAWelcome::mutable_extra_messages(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAWelcome.extra_messages)
  return extra_messages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_CExtraMsg >*
CMsgDOTAWelcome::mutable_extra_messages() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAWelcome.extra_messages)
  return &extra_messages_;
}
inline const ::proto::dota::CMsgDOTAWelcome_CExtraMsg& CMsgDOTAWelcome::extra_messages(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.extra_messages)
  return extra_messages_.Get(index);
}
inline ::proto::dota::CMsgDOTAWelcome_CExtraMsg* CMsgDOTAWelcome::add_extra_messages() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAWelcome.extra_messages)
  return extra_messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_CExtraMsg >&
CMsgDOTAWelcome::extra_messages() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAWelcome.extra_messages)
  return extra_messages_;
}

// optional uint64 minimum_recent_item_id = 27;
inline bool CMsgDOTAWelcome::has_minimum_recent_item_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDOTAWelcome::clear_minimum_recent_item_id() {
  minimum_recent_item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00010000u;
}
inline ::google::protobuf::uint64 CMsgDOTAWelcome::minimum_recent_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.minimum_recent_item_id)
  return minimum_recent_item_id_;
}
inline void CMsgDOTAWelcome::set_minimum_recent_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00010000u;
  minimum_recent_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.minimum_recent_item_id)
}

// optional .proto.dota.EEvent active_event = 28 [default = EVENT_ID_NONE];
inline bool CMsgDOTAWelcome::has_active_event() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgDOTAWelcome::clear_active_event() {
  active_event_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::proto::dota::EEvent CMsgDOTAWelcome::active_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.active_event)
  return static_cast< ::proto::dota::EEvent >(active_event_);
}
inline void CMsgDOTAWelcome::set_active_event(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00020000u;
  active_event_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.active_event)
}

// optional uint32 additional_user_message = 29;
inline bool CMsgDOTAWelcome::has_additional_user_message() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgDOTAWelcome::clear_additional_user_message() {
  additional_user_message_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::additional_user_message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.additional_user_message)
  return additional_user_message_;
}
inline void CMsgDOTAWelcome::set_additional_user_message(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  additional_user_message_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.additional_user_message)
}

// -------------------------------------------------------------------

// CSODOTAGameHeroFavorites

// optional uint32 account_id = 1 [(.proto.dota.key_field) = true];
inline bool CSODOTAGameHeroFavorites::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSODOTAGameHeroFavorites::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CSODOTAGameHeroFavorites::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSODOTAGameHeroFavorites.account_id)
  return account_id_;
}
inline void CSODOTAGameHeroFavorites::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSODOTAGameHeroFavorites.account_id)
}

// optional uint32 hero_id = 2 [(.proto.dota.key_field) = true];
inline bool CSODOTAGameHeroFavorites::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSODOTAGameHeroFavorites::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CSODOTAGameHeroFavorites::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSODOTAGameHeroFavorites.hero_id)
  return hero_id_;
}
inline void CSODOTAGameHeroFavorites::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSODOTAGameHeroFavorites.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTAHeroFavoritesAdd

// optional uint32 hero_id = 1;
inline bool CMsgDOTAHeroFavoritesAdd::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHeroFavoritesAdd::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAHeroFavoritesAdd::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHeroFavoritesAdd.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHeroFavoritesAdd::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHeroFavoritesAdd.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTAHeroFavoritesRemove

// optional uint32 hero_id = 1;
inline bool CMsgDOTAHeroFavoritesRemove::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHeroFavoritesRemove::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAHeroFavoritesRemove::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHeroFavoritesRemove.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHeroFavoritesRemove::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHeroFavoritesRemove.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTAFeaturedItems

// optional uint32 account_id = 1;
inline bool CMsgDOTAFeaturedItems::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFeaturedItems::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAFeaturedItems::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFeaturedItems.account_id)
  return account_id_;
}
inline void CMsgDOTAFeaturedItems::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFeaturedItems.account_id)
}

// repeated uint64 featured_item_id = 2;
inline int CMsgDOTAFeaturedItems::featured_item_id_size() const {
  return featured_item_id_.size();
}
inline void CMsgDOTAFeaturedItems::clear_featured_item_id() {
  featured_item_id_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAFeaturedItems::featured_item_id(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFeaturedItems.featured_item_id)
  return featured_item_id_.Get(index);
}
inline void CMsgDOTAFeaturedItems::set_featured_item_id(int index, ::google::protobuf::uint64 value) {
  featured_item_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFeaturedItems.featured_item_id)
}
inline void CMsgDOTAFeaturedItems::add_featured_item_id(::google::protobuf::uint64 value) {
  featured_item_id_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFeaturedItems.featured_item_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAFeaturedItems::featured_item_id() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAFeaturedItems.featured_item_id)
  return featured_item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAFeaturedItems::mutable_featured_item_id() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAFeaturedItems.featured_item_id)
  return &featured_item_id_;
}

// repeated bytes object_data = 3;
inline int CMsgDOTAFeaturedItems::object_data_size() const {
  return object_data_.size();
}
inline void CMsgDOTAFeaturedItems::clear_object_data() {
  object_data_.Clear();
}
inline const ::std::string& CMsgDOTAFeaturedItems::object_data(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFeaturedItems.object_data)
  return object_data_.Get(index);
}
inline ::std::string* CMsgDOTAFeaturedItems::mutable_object_data(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAFeaturedItems.object_data)
  return object_data_.Mutable(index);
}
inline void CMsgDOTAFeaturedItems::set_object_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFeaturedItems.object_data)
  object_data_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgDOTAFeaturedItems::set_object_data(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFeaturedItems.object_data)
  object_data_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgDOTAFeaturedItems::set_object_data(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  object_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAFeaturedItems.object_data)
}
inline void CMsgDOTAFeaturedItems::set_object_data(int index, const void* value, size_t size) {
  object_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAFeaturedItems.object_data)
}
inline ::std::string* CMsgDOTAFeaturedItems::add_object_data() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CMsgDOTAFeaturedItems.object_data)
  return object_data_.Add();
}
inline void CMsgDOTAFeaturedItems::add_object_data(const ::std::string& value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFeaturedItems.object_data)
}
#if LANG_CXX11
inline void CMsgDOTAFeaturedItems::add_object_data(::std::string&& value) {
  object_data_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFeaturedItems.object_data)
}
#endif
inline void CMsgDOTAFeaturedItems::add_object_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CMsgDOTAFeaturedItems.object_data)
}
inline void CMsgDOTAFeaturedItems::add_object_data(const void* value, size_t size) {
  object_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CMsgDOTAFeaturedItems.object_data)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CMsgDOTAFeaturedItems::object_data() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAFeaturedItems.object_data)
  return object_data_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CMsgDOTAFeaturedItems::mutable_object_data() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAFeaturedItems.object_data)
  return &object_data_;
}

// -------------------------------------------------------------------

// CMsgDOTAMatchVotes_PlayerVote

// optional uint32 account_id = 1;
inline bool CMsgDOTAMatchVotes_PlayerVote::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAMatchVotes_PlayerVote::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchVotes.PlayerVote.account_id)
  return account_id_;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchVotes.PlayerVote.account_id)
}

// optional uint32 vote = 2;
inline bool CMsgDOTAMatchVotes_PlayerVote::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_vote() {
  vote_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAMatchVotes_PlayerVote::vote() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchVotes.PlayerVote.vote)
  return vote_;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_vote(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  vote_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchVotes.PlayerVote.vote)
}

// -------------------------------------------------------------------

// CMsgDOTAMatchVotes

// optional uint64 match_id = 1;
inline bool CMsgDOTAMatchVotes::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchVotes::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgDOTAMatchVotes::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchVotes.match_id)
  return match_id_;
}
inline void CMsgDOTAMatchVotes::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchVotes.match_id)
}

// repeated .proto.dota.CMsgDOTAMatchVotes.PlayerVote votes = 2;
inline int CMsgDOTAMatchVotes::votes_size() const {
  return votes_.size();
}
inline void CMsgDOTAMatchVotes::clear_votes() {
  votes_.Clear();
}
inline ::proto::dota::CMsgDOTAMatchVotes_PlayerVote* CMsgDOTAMatchVotes::mutable_votes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAMatchVotes.votes)
  return votes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatchVotes_PlayerVote >*
CMsgDOTAMatchVotes::mutable_votes() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAMatchVotes.votes)
  return &votes_;
}
inline const ::proto::dota::CMsgDOTAMatchVotes_PlayerVote& CMsgDOTAMatchVotes::votes(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchVotes.votes)
  return votes_.Get(index);
}
inline ::proto::dota::CMsgDOTAMatchVotes_PlayerVote* CMsgDOTAMatchVotes::add_votes() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAMatchVotes.votes)
  return votes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatchVotes_PlayerVote >&
CMsgDOTAMatchVotes::votes() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAMatchVotes.votes)
  return votes_;
}

// -------------------------------------------------------------------

// CMsgCastMatchVote

// optional uint64 match_id = 1;
inline bool CMsgCastMatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCastMatchVote::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgCastMatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCastMatchVote.match_id)
  return match_id_;
}
inline void CMsgCastMatchVote::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgCastMatchVote.match_id)
}

// optional .proto.dota.DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
inline bool CMsgCastMatchVote::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgCastMatchVote::clear_vote() {
  vote_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::DOTAMatchVote CMsgCastMatchVote::vote() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCastMatchVote.vote)
  return static_cast< ::proto::dota::DOTAMatchVote >(vote_);
}
inline void CMsgCastMatchVote::set_vote(::proto::dota::DOTAMatchVote value) {
  assert(::proto::dota::DOTAMatchVote_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  vote_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgCastMatchVote.vote)
}

// -------------------------------------------------------------------

// CMsgRetrieveMatchVote

// optional uint64 match_id = 1;
inline bool CMsgRetrieveMatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRetrieveMatchVote::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgRetrieveMatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRetrieveMatchVote.match_id)
  return match_id_;
}
inline void CMsgRetrieveMatchVote::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRetrieveMatchVote.match_id)
}

// optional uint32 incremental = 2;
inline bool CMsgRetrieveMatchVote::has_incremental() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRetrieveMatchVote::clear_incremental() {
  incremental_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgRetrieveMatchVote::incremental() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRetrieveMatchVote.incremental)
  return incremental_;
}
inline void CMsgRetrieveMatchVote::set_incremental(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  incremental_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRetrieveMatchVote.incremental)
}

// -------------------------------------------------------------------

// CMsgMatchVoteResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgMatchVoteResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMatchVoteResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgMatchVoteResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchVoteResponse.eresult)
  return eresult_;
}
inline void CMsgMatchVoteResponse::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchVoteResponse.eresult)
}

// optional .proto.dota.DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
inline bool CMsgMatchVoteResponse::has_vote() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMatchVoteResponse::clear_vote() {
  vote_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::DOTAMatchVote CMsgMatchVoteResponse::vote() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchVoteResponse.vote)
  return static_cast< ::proto::dota::DOTAMatchVote >(vote_);
}
inline void CMsgMatchVoteResponse::set_vote(::proto::dota::DOTAMatchVote value) {
  assert(::proto::dota::DOTAMatchVote_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  vote_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchVoteResponse.vote)
}

// optional uint32 positive_votes = 3;
inline bool CMsgMatchVoteResponse::has_positive_votes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatchVoteResponse::clear_positive_votes() {
  positive_votes_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgMatchVoteResponse::positive_votes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchVoteResponse.positive_votes)
  return positive_votes_;
}
inline void CMsgMatchVoteResponse::set_positive_votes(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  positive_votes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchVoteResponse.positive_votes)
}

// optional uint32 negative_votes = 4;
inline bool CMsgMatchVoteResponse::has_negative_votes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatchVoteResponse::clear_negative_votes() {
  negative_votes_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgMatchVoteResponse::negative_votes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchVoteResponse.negative_votes)
  return negative_votes_;
}
inline void CMsgMatchVoteResponse::set_negative_votes(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  negative_votes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchVoteResponse.negative_votes)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFame_FeaturedPlayer

// optional uint32 account_id = 1;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedPlayer::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.account_id)
  return account_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.account_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedPlayer::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.hero_id)
}

// optional float average_scaled_metric = 3;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_average_scaled_metric() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_average_scaled_metric() {
  average_scaled_metric_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgDOTAHallOfFame_FeaturedPlayer::average_scaled_metric() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.average_scaled_metric)
  return average_scaled_metric_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_average_scaled_metric(float value) {
  _has_bits_[0] |= 0x00000004u;
  average_scaled_metric_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.average_scaled_metric)
}

// optional uint32 num_games = 4;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_num_games() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_num_games() {
  num_games_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedPlayer::num_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.num_games)
  return num_games_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_num_games(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  num_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.num_games)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFame_FeaturedFarmer

// optional uint32 account_id = 1;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedFarmer::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.account_id)
  return account_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.account_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedFarmer::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.hero_id)
}

// optional uint32 gold_per_min = 3;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_gold_per_min() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_gold_per_min() {
  gold_per_min_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedFarmer::gold_per_min() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.gold_per_min)
  return gold_per_min_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_gold_per_min(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  gold_per_min_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.gold_per_min)
}

// optional uint64 match_id = 4;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_match_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgDOTAHallOfFame_FeaturedFarmer::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.match_id)
  return match_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.match_id)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFame

// optional uint32 week = 1;
inline bool CMsgDOTAHallOfFame::has_week() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFame::clear_week() {
  week_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame::week() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.week)
  return week_;
}
inline void CMsgDOTAHallOfFame::set_week(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  week_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.week)
}

// repeated .proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer featured_players = 2;
inline int CMsgDOTAHallOfFame::featured_players_size() const {
  return featured_players_.size();
}
inline void CMsgDOTAHallOfFame::clear_featured_players() {
  featured_players_.Clear();
}
inline ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer* CMsgDOTAHallOfFame::mutable_featured_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAHallOfFame.featured_players)
  return featured_players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer >*
CMsgDOTAHallOfFame::mutable_featured_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAHallOfFame.featured_players)
  return &featured_players_;
}
inline const ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer& CMsgDOTAHallOfFame::featured_players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.featured_players)
  return featured_players_.Get(index);
}
inline ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer* CMsgDOTAHallOfFame::add_featured_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAHallOfFame.featured_players)
  return featured_players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer >&
CMsgDOTAHallOfFame::featured_players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAHallOfFame.featured_players)
  return featured_players_;
}

// optional .proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer featured_farmer = 3;
inline bool CMsgDOTAHallOfFame::has_featured_farmer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFame::clear_featured_farmer() {
  if (featured_farmer_ != nullptr) featured_farmer_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer& CMsgDOTAHallOfFame::featured_farmer() const {
  const ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* p = featured_farmer_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.featured_farmer)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer*>(
      &::proto::dota::_CMsgDOTAHallOfFame_FeaturedFarmer_default_instance_);
}
inline ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* CMsgDOTAHallOfFame::release_featured_farmer() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAHallOfFame.featured_farmer)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* temp = featured_farmer_;
  featured_farmer_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* CMsgDOTAHallOfFame::mutable_featured_farmer() {
  _has_bits_[0] |= 0x00000001u;
  if (featured_farmer_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer>(GetArenaNoVirtual());
    featured_farmer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAHallOfFame.featured_farmer)
  return featured_farmer_;
}
inline void CMsgDOTAHallOfFame::set_allocated_featured_farmer(::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* featured_farmer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete featured_farmer_;
  }
  if (featured_farmer) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      featured_farmer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, featured_farmer, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  featured_farmer_ = featured_farmer;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAHallOfFame.featured_farmer)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFameRequest

// optional uint32 week = 1;
inline bool CMsgDOTAHallOfFameRequest::has_week() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFameRequest::clear_week() {
  week_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFameRequest::week() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFameRequest.week)
  return week_;
}
inline void CMsgDOTAHallOfFameRequest::set_week(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  week_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFameRequest.week)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFameResponse

// optional .proto.dota.CMsgDOTAHallOfFame hall_of_fame = 1;
inline bool CMsgDOTAHallOfFameResponse::has_hall_of_fame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFameResponse::clear_hall_of_fame() {
  if (hall_of_fame_ != nullptr) hall_of_fame_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgDOTAHallOfFame& CMsgDOTAHallOfFameResponse::hall_of_fame() const {
  const ::proto::dota::CMsgDOTAHallOfFame* p = hall_of_fame_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFameResponse.hall_of_fame)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAHallOfFame*>(
      &::proto::dota::_CMsgDOTAHallOfFame_default_instance_);
}
inline ::proto::dota::CMsgDOTAHallOfFame* CMsgDOTAHallOfFameResponse::release_hall_of_fame() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAHallOfFameResponse.hall_of_fame)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTAHallOfFame* temp = hall_of_fame_;
  hall_of_fame_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAHallOfFame* CMsgDOTAHallOfFameResponse::mutable_hall_of_fame() {
  _has_bits_[0] |= 0x00000001u;
  if (hall_of_fame_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAHallOfFame>(GetArenaNoVirtual());
    hall_of_fame_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAHallOfFameResponse.hall_of_fame)
  return hall_of_fame_;
}
inline void CMsgDOTAHallOfFameResponse::set_allocated_hall_of_fame(::proto::dota::CMsgDOTAHallOfFame* hall_of_fame) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete hall_of_fame_;
  }
  if (hall_of_fame) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      hall_of_fame = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hall_of_fame, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  hall_of_fame_ = hall_of_fame;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAHallOfFameResponse.hall_of_fame)
}

// optional uint32 eresult = 2 [default = 2];
inline bool CMsgDOTAHallOfFameResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFameResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFameResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFameResponse.eresult)
  return eresult_;
}
inline void CMsgDOTAHallOfFameResponse::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFameResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTAHalloweenHighScoreRequest

// optional int32 round = 1 [default = -1];
inline bool CMsgDOTAHalloweenHighScoreRequest::has_round() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreRequest::clear_round() {
  round_ = -1;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CMsgDOTAHalloweenHighScoreRequest::round() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHalloweenHighScoreRequest.round)
  return round_;
}
inline void CMsgDOTAHalloweenHighScoreRequest::set_round(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  round_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHalloweenHighScoreRequest.round)
}

// -------------------------------------------------------------------

// CMsgDOTAHalloweenHighScoreResponse

// optional uint32 score = 1;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_score() {
  score_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAHalloweenHighScoreResponse::score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHalloweenHighScoreResponse.score)
  return score_;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHalloweenHighScoreResponse.score)
}

// optional .proto.dota.CMsgDOTAMatch match = 2;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_match() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CMsgDOTAMatch& CMsgDOTAHalloweenHighScoreResponse::match() const {
  const ::proto::dota::CMsgDOTAMatch* p = match_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHalloweenHighScoreResponse.match)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAMatch*>(
      &::proto::dota::_CMsgDOTAMatch_default_instance_);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTAHalloweenHighScoreResponse::release_match() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAHalloweenHighScoreResponse.match)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTAMatch* temp = match_;
  match_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTAHalloweenHighScoreResponse::mutable_match() {
  _has_bits_[0] |= 0x00000001u;
  if (match_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAMatch>(GetArenaNoVirtual());
    match_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAHalloweenHighScoreResponse.match)
  return match_;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_allocated_match(::proto::dota::CMsgDOTAMatch* match) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(match_);
  }
  if (match) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      match = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, match, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  match_ = match;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAHalloweenHighScoreResponse.match)
}

// optional uint32 eresult = 3;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_eresult() {
  eresult_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAHalloweenHighScoreResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHalloweenHighScoreResponse.eresult)
  return eresult_;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHalloweenHighScoreResponse.eresult)
}

// optional int32 round = 4;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_round() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_round() {
  round_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CMsgDOTAHalloweenHighScoreResponse::round() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHalloweenHighScoreResponse.round)
  return round_;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_round(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  round_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHalloweenHighScoreResponse.round)
}

// -------------------------------------------------------------------

// CMsgDOTAStorePromoPagesRequest

// optional uint32 version_seen = 1;
inline bool CMsgDOTAStorePromoPagesRequest::has_version_seen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAStorePromoPagesRequest::clear_version_seen() {
  version_seen_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAStorePromoPagesRequest::version_seen() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStorePromoPagesRequest.version_seen)
  return version_seen_;
}
inline void CMsgDOTAStorePromoPagesRequest::set_version_seen(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  version_seen_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAStorePromoPagesRequest.version_seen)
}

// -------------------------------------------------------------------

// CMsgDOTAStorePromoPagesResponse_PromoPage

// optional uint32 promo_id = 1;
inline bool CMsgDOTAStorePromoPagesResponse_PromoPage::has_promo_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_promo_id() {
  promo_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAStorePromoPagesResponse_PromoPage::promo_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.promo_id)
  return promo_id_;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_promo_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  promo_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.promo_id)
}

// optional string title = 2;
inline bool CMsgDOTAStorePromoPagesResponse_PromoPage::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTAStorePromoPagesResponse_PromoPage::title() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
  return title_.GetNoArena();
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
#if LANG_CXX11
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
#endif
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::mutable_title() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::release_title() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
  if (!has_title()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return title_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_allocated_title(::std::string* title) {
  if (title != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}

// optional string url = 3;
inline bool CMsgDOTAStorePromoPagesResponse_PromoPage::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgDOTAStorePromoPagesResponse_PromoPage::url() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
  return url_.GetNoArena();
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
#if LANG_CXX11
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
#endif
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::mutable_url() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::release_url() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
  if (!has_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_allocated_url(::std::string* url) {
  if (url != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}

// -------------------------------------------------------------------

// CMsgDOTAStorePromoPagesResponse

// repeated .proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage pages = 1;
inline int CMsgDOTAStorePromoPagesResponse::pages_size() const {
  return pages_.size();
}
inline void CMsgDOTAStorePromoPagesResponse::clear_pages() {
  pages_.Clear();
}
inline ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage* CMsgDOTAStorePromoPagesResponse::mutable_pages(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAStorePromoPagesResponse.pages)
  return pages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage >*
CMsgDOTAStorePromoPagesResponse::mutable_pages() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAStorePromoPagesResponse.pages)
  return &pages_;
}
inline const ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage& CMsgDOTAStorePromoPagesResponse::pages(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStorePromoPagesResponse.pages)
  return pages_.Get(index);
}
inline ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage* CMsgDOTAStorePromoPagesResponse::add_pages() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAStorePromoPagesResponse.pages)
  return pages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage >&
CMsgDOTAStorePromoPagesResponse::pages() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAStorePromoPagesResponse.pages)
  return pages_;
}

// -------------------------------------------------------------------

// CMsgMatchmakingMatchGroupInfo

// optional uint32 players_searching = 1;
inline bool CMsgMatchmakingMatchGroupInfo::has_players_searching() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_players_searching() {
  players_searching_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgMatchmakingMatchGroupInfo::players_searching() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchmakingMatchGroupInfo.players_searching)
  return players_searching_;
}
inline void CMsgMatchmakingMatchGroupInfo::set_players_searching(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  players_searching_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchmakingMatchGroupInfo.players_searching)
}

// optional sint32 auto_region_select_ping_penalty = 2;
inline bool CMsgMatchmakingMatchGroupInfo::has_auto_region_select_ping_penalty() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_auto_region_select_ping_penalty() {
  auto_region_select_ping_penalty_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CMsgMatchmakingMatchGroupInfo::auto_region_select_ping_penalty() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchmakingMatchGroupInfo.auto_region_select_ping_penalty)
  return auto_region_select_ping_penalty_;
}
inline void CMsgMatchmakingMatchGroupInfo::set_auto_region_select_ping_penalty(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  auto_region_select_ping_penalty_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchmakingMatchGroupInfo.auto_region_select_ping_penalty)
}

// optional .proto.dota.EMatchGroupServerStatus status = 3 [default = k_EMatchGroupServerStatus_OK];
inline bool CMsgMatchmakingMatchGroupInfo::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::proto::dota::EMatchGroupServerStatus CMsgMatchmakingMatchGroupInfo::status() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchmakingMatchGroupInfo.status)
  return static_cast< ::proto::dota::EMatchGroupServerStatus >(status_);
}
inline void CMsgMatchmakingMatchGroupInfo::set_status(::proto::dota::EMatchGroupServerStatus value) {
  assert(::proto::dota::EMatchGroupServerStatus_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchmakingMatchGroupInfo.status)
}

// -------------------------------------------------------------------

// CMsgDOTAMatchmakingStatsRequest

// -------------------------------------------------------------------

// CMsgDOTAMatchmakingStatsResponse

// optional uint32 matchgroups_version = 1;
inline bool CMsgDOTAMatchmakingStatsResponse::has_matchgroups_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_matchgroups_version() {
  matchgroups_version_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAMatchmakingStatsResponse::matchgroups_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchmakingStatsResponse.matchgroups_version)
  return matchgroups_version_;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_matchgroups_version(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  matchgroups_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchmakingStatsResponse.matchgroups_version)
}

// repeated uint32 legacy_searching_players_by_group_source2 = 7;
inline int CMsgDOTAMatchmakingStatsResponse::legacy_searching_players_by_group_source2_size() const {
  return legacy_searching_players_by_group_source2_.size();
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_legacy_searching_players_by_group_source2() {
  legacy_searching_players_by_group_source2_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchmakingStatsResponse::legacy_searching_players_by_group_source2(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
  return legacy_searching_players_by_group_source2_.Get(index);
}
inline void CMsgDOTAMatchmakingStatsResponse::set_legacy_searching_players_by_group_source2(int index, ::google::protobuf::uint32 value) {
  legacy_searching_players_by_group_source2_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
}
inline void CMsgDOTAMatchmakingStatsResponse::add_legacy_searching_players_by_group_source2(::google::protobuf::uint32 value) {
  legacy_searching_players_by_group_source2_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAMatchmakingStatsResponse::legacy_searching_players_by_group_source2() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
  return legacy_searching_players_by_group_source2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAMatchmakingStatsResponse::mutable_legacy_searching_players_by_group_source2() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
  return &legacy_searching_players_by_group_source2_;
}

// repeated .proto.dota.CMsgMatchmakingMatchGroupInfo match_groups = 8;
inline int CMsgDOTAMatchmakingStatsResponse::match_groups_size() const {
  return match_groups_.size();
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_match_groups() {
  match_groups_.Clear();
}
inline ::proto::dota::CMsgMatchmakingMatchGroupInfo* CMsgDOTAMatchmakingStatsResponse::mutable_match_groups(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAMatchmakingStatsResponse.match_groups)
  return match_groups_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMatchmakingMatchGroupInfo >*
CMsgDOTAMatchmakingStatsResponse::mutable_match_groups() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAMatchmakingStatsResponse.match_groups)
  return &match_groups_;
}
inline const ::proto::dota::CMsgMatchmakingMatchGroupInfo& CMsgDOTAMatchmakingStatsResponse::match_groups(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchmakingStatsResponse.match_groups)
  return match_groups_.Get(index);
}
inline ::proto::dota::CMsgMatchmakingMatchGroupInfo* CMsgDOTAMatchmakingStatsResponse::add_match_groups() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAMatchmakingStatsResponse.match_groups)
  return match_groups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMatchmakingMatchGroupInfo >&
CMsgDOTAMatchmakingStatsResponse::match_groups() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAMatchmakingStatsResponse.match_groups)
  return match_groups_;
}

// -------------------------------------------------------------------

// CMsgDOTAUpdateMatchmakingStats

// optional .proto.dota.CMsgDOTAMatchmakingStatsResponse stats = 1;
inline bool CMsgDOTAUpdateMatchmakingStats::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAUpdateMatchmakingStats::clear_stats() {
  if (stats_ != nullptr) stats_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgDOTAMatchmakingStatsResponse& CMsgDOTAUpdateMatchmakingStats::stats() const {
  const ::proto::dota::CMsgDOTAMatchmakingStatsResponse* p = stats_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAUpdateMatchmakingStats.stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAMatchmakingStatsResponse*>(
      &::proto::dota::_CMsgDOTAMatchmakingStatsResponse_default_instance_);
}
inline ::proto::dota::CMsgDOTAMatchmakingStatsResponse* CMsgDOTAUpdateMatchmakingStats::release_stats() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAUpdateMatchmakingStats.stats)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* temp = stats_;
  stats_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAMatchmakingStatsResponse* CMsgDOTAUpdateMatchmakingStats::mutable_stats() {
  _has_bits_[0] |= 0x00000001u;
  if (stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAMatchmakingStatsResponse>(GetArenaNoVirtual());
    stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAUpdateMatchmakingStats.stats)
  return stats_;
}
inline void CMsgDOTAUpdateMatchmakingStats::set_allocated_stats(::proto::dota::CMsgDOTAMatchmakingStatsResponse* stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete stats_;
  }
  if (stats) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stats_ = stats;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAUpdateMatchmakingStats.stats)
}

// -------------------------------------------------------------------

// CMsgDOTAUpdateMatchManagementStats

// optional .proto.dota.CMsgDOTAMatchmakingStatsResponse stats = 1;
inline bool CMsgDOTAUpdateMatchManagementStats::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAUpdateMatchManagementStats::clear_stats() {
  if (stats_ != nullptr) stats_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgDOTAMatchmakingStatsResponse& CMsgDOTAUpdateMatchManagementStats::stats() const {
  const ::proto::dota::CMsgDOTAMatchmakingStatsResponse* p = stats_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAUpdateMatchManagementStats.stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAMatchmakingStatsResponse*>(
      &::proto::dota::_CMsgDOTAMatchmakingStatsResponse_default_instance_);
}
inline ::proto::dota::CMsgDOTAMatchmakingStatsResponse* CMsgDOTAUpdateMatchManagementStats::release_stats() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAUpdateMatchManagementStats.stats)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* temp = stats_;
  stats_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAMatchmakingStatsResponse* CMsgDOTAUpdateMatchManagementStats::mutable_stats() {
  _has_bits_[0] |= 0x00000001u;
  if (stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAMatchmakingStatsResponse>(GetArenaNoVirtual());
    stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAUpdateMatchManagementStats.stats)
  return stats_;
}
inline void CMsgDOTAUpdateMatchManagementStats::set_allocated_stats(::proto::dota::CMsgDOTAMatchmakingStatsResponse* stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete stats_;
  }
  if (stats) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stats_ = stats;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAUpdateMatchManagementStats.stats)
}

// -------------------------------------------------------------------

// CMsgDOTASetMatchHistoryAccess

// optional bool allow_3rd_party_match_history = 1;
inline bool CMsgDOTASetMatchHistoryAccess::has_allow_3rd_party_match_history() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetMatchHistoryAccess::clear_allow_3rd_party_match_history() {
  allow_3rd_party_match_history_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgDOTASetMatchHistoryAccess::allow_3rd_party_match_history() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASetMatchHistoryAccess.allow_3rd_party_match_history)
  return allow_3rd_party_match_history_;
}
inline void CMsgDOTASetMatchHistoryAccess::set_allow_3rd_party_match_history(bool value) {
  _has_bits_[0] |= 0x00000001u;
  allow_3rd_party_match_history_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASetMatchHistoryAccess.allow_3rd_party_match_history)
}

// -------------------------------------------------------------------

// CMsgDOTASetMatchHistoryAccessResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDOTASetMatchHistoryAccessResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTASetMatchHistoryAccessResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASetMatchHistoryAccessResponse.eresult)
  return eresult_;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASetMatchHistoryAccessResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTANotifyAccountFlagsChange

// optional uint32 accountid = 1;
inline bool CMsgDOTANotifyAccountFlagsChange::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_accountid() {
  accountid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTANotifyAccountFlagsChange::accountid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTANotifyAccountFlagsChange.accountid)
  return accountid_;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_accountid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  accountid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTANotifyAccountFlagsChange.accountid)
}

// optional uint32 account_flags = 2;
inline bool CMsgDOTANotifyAccountFlagsChange::has_account_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_account_flags() {
  account_flags_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTANotifyAccountFlagsChange::account_flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTANotifyAccountFlagsChange.account_flags)
  return account_flags_;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_account_flags(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTANotifyAccountFlagsChange.account_flags)
}

// -------------------------------------------------------------------

// CMsgDOTASetProfilePrivacy

// optional bool profile_private = 1;
inline bool CMsgDOTASetProfilePrivacy::has_profile_private() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetProfilePrivacy::clear_profile_private() {
  profile_private_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgDOTASetProfilePrivacy::profile_private() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASetProfilePrivacy.profile_private)
  return profile_private_;
}
inline void CMsgDOTASetProfilePrivacy::set_profile_private(bool value) {
  _has_bits_[0] |= 0x00000001u;
  profile_private_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASetProfilePrivacy.profile_private)
}

// -------------------------------------------------------------------

// CMsgDOTASetProfilePrivacyResponse

// optional uint32 eresult = 1;
inline bool CMsgDOTASetProfilePrivacyResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetProfilePrivacyResponse::clear_eresult() {
  eresult_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTASetProfilePrivacyResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASetProfilePrivacyResponse.eresult)
  return eresult_;
}
inline void CMsgDOTASetProfilePrivacyResponse::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASetProfilePrivacyResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgUpgradeLeagueItem

// optional uint64 match_id = 1;
inline bool CMsgUpgradeLeagueItem::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgUpgradeLeagueItem::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgUpgradeLeagueItem::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgUpgradeLeagueItem.match_id)
  return match_id_;
}
inline void CMsgUpgradeLeagueItem::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgUpgradeLeagueItem.match_id)
}

// optional uint32 league_id = 2;
inline bool CMsgUpgradeLeagueItem::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgUpgradeLeagueItem::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgUpgradeLeagueItem::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgUpgradeLeagueItem.league_id)
  return league_id_;
}
inline void CMsgUpgradeLeagueItem::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgUpgradeLeagueItem.league_id)
}

// -------------------------------------------------------------------

// CMsgUpgradeLeagueItemResponse

// -------------------------------------------------------------------

// CMsgGCWatchDownloadedReplay

// optional uint64 match_id = 1;
inline bool CMsgGCWatchDownloadedReplay::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCWatchDownloadedReplay::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCWatchDownloadedReplay::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCWatchDownloadedReplay.match_id)
  return match_id_;
}
inline void CMsgGCWatchDownloadedReplay::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCWatchDownloadedReplay.match_id)
}

// optional .proto.dota.DOTA_WatchReplayType watch_type = 2 [default = DOTA_WATCH_REPLAY_NORMAL];
inline bool CMsgGCWatchDownloadedReplay::has_watch_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCWatchDownloadedReplay::clear_watch_type() {
  watch_type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::DOTA_WatchReplayType CMsgGCWatchDownloadedReplay::watch_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCWatchDownloadedReplay.watch_type)
  return static_cast< ::proto::dota::DOTA_WatchReplayType >(watch_type_);
}
inline void CMsgGCWatchDownloadedReplay::set_watch_type(::proto::dota::DOTA_WatchReplayType value) {
  assert(::proto::dota::DOTA_WatchReplayType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  watch_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCWatchDownloadedReplay.watch_type)
}

// -------------------------------------------------------------------

// CMsgSetMapLocationState

// optional int32 location_id = 1;
inline bool CMsgSetMapLocationState::has_location_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetMapLocationState::clear_location_id() {
  location_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CMsgSetMapLocationState::location_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSetMapLocationState.location_id)
  return location_id_;
}
inline void CMsgSetMapLocationState::set_location_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  location_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSetMapLocationState.location_id)
}

// optional bool completed = 2;
inline bool CMsgSetMapLocationState::has_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetMapLocationState::clear_completed() {
  completed_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgSetMapLocationState::completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSetMapLocationState.completed)
  return completed_;
}
inline void CMsgSetMapLocationState::set_completed(bool value) {
  _has_bits_[0] |= 0x00000002u;
  completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSetMapLocationState.completed)
}

// -------------------------------------------------------------------

// CMsgSetMapLocationStateResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgSetMapLocationStateResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetMapLocationStateResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgSetMapLocationStateResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSetMapLocationStateResponse.eresult)
  return eresult_;
}
inline void CMsgSetMapLocationStateResponse::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSetMapLocationStateResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgResetMapLocations

// -------------------------------------------------------------------

// CMsgResetMapLocationsResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgResetMapLocationsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgResetMapLocationsResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgResetMapLocationsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgResetMapLocationsResponse.eresult)
  return eresult_;
}
inline void CMsgResetMapLocationsResponse::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgResetMapLocationsResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgRefreshPartnerAccountLink

// optional int32 partner_type = 1;
inline bool CMsgRefreshPartnerAccountLink::has_partner_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRefreshPartnerAccountLink::clear_partner_type() {
  partner_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CMsgRefreshPartnerAccountLink::partner_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRefreshPartnerAccountLink.partner_type)
  return partner_type_;
}
inline void CMsgRefreshPartnerAccountLink::set_partner_type(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  partner_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRefreshPartnerAccountLink.partner_type)
}

// -------------------------------------------------------------------

// CMsgClientsRejoinChatChannels

// -------------------------------------------------------------------

// CMsgDOTASendFriendRecruits

// repeated uint32 recruits = 1;
inline int CMsgDOTASendFriendRecruits::recruits_size() const {
  return recruits_.size();
}
inline void CMsgDOTASendFriendRecruits::clear_recruits() {
  recruits_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTASendFriendRecruits::recruits(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASendFriendRecruits.recruits)
  return recruits_.Get(index);
}
inline void CMsgDOTASendFriendRecruits::set_recruits(int index, ::google::protobuf::uint32 value) {
  recruits_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASendFriendRecruits.recruits)
}
inline void CMsgDOTASendFriendRecruits::add_recruits(::google::protobuf::uint32 value) {
  recruits_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTASendFriendRecruits.recruits)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTASendFriendRecruits::recruits() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTASendFriendRecruits.recruits)
  return recruits_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTASendFriendRecruits::mutable_recruits() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTASendFriendRecruits.recruits)
  return &recruits_;
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitsRequest

// repeated uint32 account_ids = 1;
inline int CMsgDOTAFriendRecruitsRequest::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgDOTAFriendRecruitsRequest::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsRequest::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsRequest.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgDOTAFriendRecruitsRequest::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitsRequest.account_ids)
}
inline void CMsgDOTAFriendRecruitsRequest::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFriendRecruitsRequest.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAFriendRecruitsRequest::account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAFriendRecruitsRequest.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAFriendRecruitsRequest::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAFriendRecruitsRequest.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus

// optional uint32 account_id = 1;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.account_id)
  return account_id_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.account_id)
}

// optional uint32 status = 2;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_status() {
  status_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::status() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.status)
  return status_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_status(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.status)
}

// optional uint32 levels_earned = 3;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_levels_earned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_levels_earned() {
  levels_earned_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::levels_earned() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.levels_earned)
  return levels_earned_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_levels_earned(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  levels_earned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.levels_earned)
}

// optional bool bonus = 4;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_bonus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_bonus() {
  bonus_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::bonus() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.bonus)
  return bonus_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_bonus(bool value) {
  _has_bits_[0] |= 0x00000008u;
  bonus_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.bonus)
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitsResponse

// optional .proto.dota.CMsgDOTAFriendRecruitsResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgDOTAFriendRecruitsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult CMsgDOTAFriendRecruitsResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.result)
  return static_cast< ::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult >(result_);
}
inline void CMsgDOTAFriendRecruitsResponse::set_result(::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult value) {
  assert(::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitsResponse.result)
}

// repeated .proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruits = 2;
inline int CMsgDOTAFriendRecruitsResponse::recruits_size() const {
  return recruits_.size();
}
inline void CMsgDOTAFriendRecruitsResponse::clear_recruits() {
  recruits_.Clear();
}
inline ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::mutable_recruits(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
CMsgDOTAFriendRecruitsResponse::mutable_recruits() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAFriendRecruitsResponse.recruits)
  return &recruits_;
}
inline const ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& CMsgDOTAFriendRecruitsResponse::recruits(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_.Get(index);
}
inline ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::add_recruits() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
CMsgDOTAFriendRecruitsResponse::recruits() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_;
}

// repeated .proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruiters = 3;
inline int CMsgDOTAFriendRecruitsResponse::recruiters_size() const {
  return recruiters_.size();
}
inline void CMsgDOTAFriendRecruitsResponse::clear_recruiters() {
  recruiters_.Clear();
}
inline ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::mutable_recruiters(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
CMsgDOTAFriendRecruitsResponse::mutable_recruiters() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAFriendRecruitsResponse.recruiters)
  return &recruiters_;
}
inline const ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& CMsgDOTAFriendRecruitsResponse::recruiters(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_.Get(index);
}
inline ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::add_recruiters() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
CMsgDOTAFriendRecruitsResponse::recruiters() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_;
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitInviteAcceptDecline

// optional bool accepted = 1;
inline bool CMsgDOTAFriendRecruitInviteAcceptDecline::has_accepted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_accepted() {
  accepted_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgDOTAFriendRecruitInviteAcceptDecline::accepted() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitInviteAcceptDecline.accepted)
  return accepted_;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_accepted(bool value) {
  _has_bits_[0] |= 0x00000001u;
  accepted_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitInviteAcceptDecline.accepted)
}

// optional uint32 account_id = 2;
inline bool CMsgDOTAFriendRecruitInviteAcceptDecline::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitInviteAcceptDecline::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitInviteAcceptDecline.account_id)
  return account_id_;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitInviteAcceptDecline.account_id)
}

// -------------------------------------------------------------------

// CMsgRequestLeaguePrizePool

// optional uint32 league_id = 1;
inline bool CMsgRequestLeaguePrizePool::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestLeaguePrizePool::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgRequestLeaguePrizePool::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestLeaguePrizePool.league_id)
  return league_id_;
}
inline void CMsgRequestLeaguePrizePool::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestLeaguePrizePool.league_id)
}

// -------------------------------------------------------------------

// CMsgRequestLeaguePrizePoolResponse

// optional uint32 league_id = 1;
inline bool CMsgRequestLeaguePrizePoolResponse::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgRequestLeaguePrizePoolResponse::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestLeaguePrizePoolResponse.league_id)
  return league_id_;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestLeaguePrizePoolResponse.league_id)
}

// optional uint32 prize_pool = 2;
inline bool CMsgRequestLeaguePrizePoolResponse::has_prize_pool() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_prize_pool() {
  prize_pool_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgRequestLeaguePrizePoolResponse::prize_pool() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestLeaguePrizePoolResponse.prize_pool)
  return prize_pool_;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_prize_pool(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  prize_pool_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestLeaguePrizePoolResponse.prize_pool)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStandings

// -------------------------------------------------------------------

// CMsgGCGetHeroStandingsResponse_Hero

// optional uint32 hero_id = 1;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.hero_id)
  return hero_id_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.hero_id)
}

// optional uint32 wins = 2;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_wins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_wins() {
  wins_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::wins() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.wins)
  return wins_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_wins(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  wins_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.wins)
}

// optional uint32 losses = 3;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_losses() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_losses() {
  losses_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::losses() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.losses)
  return losses_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_losses(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  losses_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.losses)
}

// optional uint32 win_streak = 4;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_win_streak() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_win_streak() {
  win_streak_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::win_streak() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.win_streak)
  return win_streak_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_win_streak(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  win_streak_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.win_streak)
}

// optional uint32 best_win_streak = 5;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_win_streak() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_win_streak() {
  best_win_streak_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_win_streak() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_win_streak)
  return best_win_streak_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_win_streak(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  best_win_streak_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_win_streak)
}

// optional float avg_kills = 6;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_kills() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_kills() {
  avg_kills_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_kills)
  return avg_kills_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_kills(float value) {
  _has_bits_[0] |= 0x00000020u;
  avg_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_kills)
}

// optional float avg_deaths = 7;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_deaths() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_deaths() {
  avg_deaths_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_deaths() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_deaths)
  return avg_deaths_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_deaths(float value) {
  _has_bits_[0] |= 0x00000040u;
  avg_deaths_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_deaths)
}

// optional float avg_assists = 8;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_assists() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_assists() {
  avg_assists_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_assists() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_assists)
  return avg_assists_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_assists(float value) {
  _has_bits_[0] |= 0x00000080u;
  avg_assists_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_assists)
}

// optional float avg_gpm = 9;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_gpm() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_gpm() {
  avg_gpm_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_gpm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_gpm)
  return avg_gpm_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_gpm(float value) {
  _has_bits_[0] |= 0x00000100u;
  avg_gpm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_gpm)
}

// optional float avg_xpm = 10;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_xpm() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_xpm() {
  avg_xpm_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_xpm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_xpm)
  return avg_xpm_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_xpm(float value) {
  _has_bits_[0] |= 0x00000200u;
  avg_xpm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_xpm)
}

// optional uint32 best_kills = 11;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_kills() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_kills() {
  best_kills_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_kills)
  return best_kills_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_kills(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  best_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_kills)
}

// optional uint32 best_assists = 12;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_assists() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_assists() {
  best_assists_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_assists() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_assists)
  return best_assists_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_assists(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  best_assists_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_assists)
}

// optional uint32 best_gpm = 13;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_gpm() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_gpm() {
  best_gpm_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_gpm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_gpm)
  return best_gpm_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_gpm(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  best_gpm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_gpm)
}

// optional uint32 best_xpm = 14;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_xpm() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_xpm() {
  best_xpm_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_xpm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_xpm)
  return best_xpm_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_xpm(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  best_xpm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_xpm)
}

// optional float performance = 15;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_performance() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_performance() {
  performance_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline float CMsgGCGetHeroStandingsResponse_Hero::performance() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.performance)
  return performance_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_performance(float value) {
  _has_bits_[0] |= 0x00004000u;
  performance_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.performance)
}

// optional uint32 wins_with_ally = 16;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_wins_with_ally() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_wins_with_ally() {
  wins_with_ally_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::wins_with_ally() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.wins_with_ally)
  return wins_with_ally_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_wins_with_ally(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  wins_with_ally_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.wins_with_ally)
}

// optional uint32 losses_with_ally = 17;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_losses_with_ally() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_losses_with_ally() {
  losses_with_ally_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::losses_with_ally() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.losses_with_ally)
  return losses_with_ally_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_losses_with_ally(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  losses_with_ally_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.losses_with_ally)
}

// optional uint32 wins_against_enemy = 18;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_wins_against_enemy() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_wins_against_enemy() {
  wins_against_enemy_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::wins_against_enemy() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.wins_against_enemy)
  return wins_against_enemy_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_wins_against_enemy(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  wins_against_enemy_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.wins_against_enemy)
}

// optional uint32 losses_against_enemy = 19;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_losses_against_enemy() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_losses_against_enemy() {
  losses_against_enemy_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::losses_against_enemy() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.losses_against_enemy)
  return losses_against_enemy_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_losses_against_enemy(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  losses_against_enemy_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.losses_against_enemy)
}

// optional uint32 networth_peak = 20;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_networth_peak() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_networth_peak() {
  networth_peak_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::networth_peak() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.networth_peak)
  return networth_peak_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_networth_peak(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  networth_peak_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.networth_peak)
}

// optional uint32 lasthit_peak = 21;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_lasthit_peak() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_lasthit_peak() {
  lasthit_peak_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::lasthit_peak() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.lasthit_peak)
  return lasthit_peak_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_lasthit_peak(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  lasthit_peak_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.lasthit_peak)
}

// optional uint32 deny_peak = 22;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_deny_peak() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_deny_peak() {
  deny_peak_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::deny_peak() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.deny_peak)
  return deny_peak_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_deny_peak(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  deny_peak_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.deny_peak)
}

// optional uint32 damage_peak = 23;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_damage_peak() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_damage_peak() {
  damage_peak_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::damage_peak() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.damage_peak)
  return damage_peak_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_damage_peak(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  damage_peak_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.damage_peak)
}

// optional uint32 longest_game_peak = 24;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_longest_game_peak() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_longest_game_peak() {
  longest_game_peak_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::longest_game_peak() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.longest_game_peak)
  return longest_game_peak_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_longest_game_peak(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  longest_game_peak_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.longest_game_peak)
}

// optional uint32 healing_peak = 25;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_healing_peak() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_healing_peak() {
  healing_peak_ = 0u;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::healing_peak() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.healing_peak)
  return healing_peak_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_healing_peak(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x01000000u;
  healing_peak_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.healing_peak)
}

// optional float avg_lasthits = 26;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_lasthits() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_lasthits() {
  avg_lasthits_ = 0;
  _has_bits_[0] &= ~0x02000000u;
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_lasthits() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_lasthits)
  return avg_lasthits_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_lasthits(float value) {
  _has_bits_[0] |= 0x02000000u;
  avg_lasthits_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_lasthits)
}

// optional float avg_denies = 27;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_denies() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_denies() {
  avg_denies_ = 0;
  _has_bits_[0] &= ~0x04000000u;
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_denies() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_denies)
  return avg_denies_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_denies(float value) {
  _has_bits_[0] |= 0x04000000u;
  avg_denies_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_denies)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStandingsResponse

// repeated .proto.dota.CMsgGCGetHeroStandingsResponse.Hero standings = 1;
inline int CMsgGCGetHeroStandingsResponse::standings_size() const {
  return standings_.size();
}
inline void CMsgGCGetHeroStandingsResponse::clear_standings() {
  standings_.Clear();
}
inline ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero* CMsgGCGetHeroStandingsResponse::mutable_standings(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetHeroStandingsResponse.standings)
  return standings_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero >*
CMsgGCGetHeroStandingsResponse::mutable_standings() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCGetHeroStandingsResponse.standings)
  return &standings_;
}
inline const ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero& CMsgGCGetHeroStandingsResponse::standings(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.standings)
  return standings_.Get(index);
}
inline ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero* CMsgGCGetHeroStandingsResponse::add_standings() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetHeroStandingsResponse.standings)
  return standings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero >&
CMsgGCGetHeroStandingsResponse::standings() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCGetHeroStandingsResponse.standings)
  return standings_;
}

// -------------------------------------------------------------------

// CMsgGCGetHeroTimedStats

// optional uint32 hero_id = 2;
inline bool CMsgGCGetHeroTimedStats::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroTimedStats::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroTimedStats::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroTimedStats.hero_id)
  return hero_id_;
}
inline void CMsgGCGetHeroTimedStats::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroTimedStats.hero_id)
}

// -------------------------------------------------------------------

// CMatchPlayerTimedStatAverages

// optional float kills = 2;
inline bool CMatchPlayerTimedStatAverages::has_kills() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMatchPlayerTimedStatAverages::clear_kills() {
  kills_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CMatchPlayerTimedStatAverages::kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMatchPlayerTimedStatAverages.kills)
  return kills_;
}
inline void CMatchPlayerTimedStatAverages::set_kills(float value) {
  _has_bits_[0] |= 0x00000001u;
  kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMatchPlayerTimedStatAverages.kills)
}

// optional float deaths = 3;
inline bool CMatchPlayerTimedStatAverages::has_deaths() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMatchPlayerTimedStatAverages::clear_deaths() {
  deaths_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMatchPlayerTimedStatAverages::deaths() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMatchPlayerTimedStatAverages.deaths)
  return deaths_;
}
inline void CMatchPlayerTimedStatAverages::set_deaths(float value) {
  _has_bits_[0] |= 0x00000002u;
  deaths_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMatchPlayerTimedStatAverages.deaths)
}

// optional float assists = 4;
inline bool CMatchPlayerTimedStatAverages::has_assists() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMatchPlayerTimedStatAverages::clear_assists() {
  assists_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMatchPlayerTimedStatAverages::assists() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMatchPlayerTimedStatAverages.assists)
  return assists_;
}
inline void CMatchPlayerTimedStatAverages::set_assists(float value) {
  _has_bits_[0] |= 0x00000004u;
  assists_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMatchPlayerTimedStatAverages.assists)
}

// optional float net_worth = 5;
inline bool CMatchPlayerTimedStatAverages::has_net_worth() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMatchPlayerTimedStatAverages::clear_net_worth() {
  net_worth_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CMatchPlayerTimedStatAverages::net_worth() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMatchPlayerTimedStatAverages.net_worth)
  return net_worth_;
}
inline void CMatchPlayerTimedStatAverages::set_net_worth(float value) {
  _has_bits_[0] |= 0x00000008u;
  net_worth_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMatchPlayerTimedStatAverages.net_worth)
}

// optional float last_hits = 6;
inline bool CMatchPlayerTimedStatAverages::has_last_hits() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMatchPlayerTimedStatAverages::clear_last_hits() {
  last_hits_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CMatchPlayerTimedStatAverages::last_hits() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMatchPlayerTimedStatAverages.last_hits)
  return last_hits_;
}
inline void CMatchPlayerTimedStatAverages::set_last_hits(float value) {
  _has_bits_[0] |= 0x00000010u;
  last_hits_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMatchPlayerTimedStatAverages.last_hits)
}

// optional float denies = 7;
inline bool CMatchPlayerTimedStatAverages::has_denies() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMatchPlayerTimedStatAverages::clear_denies() {
  denies_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float CMatchPlayerTimedStatAverages::denies() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMatchPlayerTimedStatAverages.denies)
  return denies_;
}
inline void CMatchPlayerTimedStatAverages::set_denies(float value) {
  _has_bits_[0] |= 0x00000020u;
  denies_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMatchPlayerTimedStatAverages.denies)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer

// optional uint32 time = 1;
inline bool CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::clear_time() {
  time_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.time)
  return time_;
}
inline void CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::set_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.time)
}

// optional .proto.dota.CMatchPlayerTimedStatAverages all_stats = 2;
inline bool CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::has_all_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::clear_all_stats() {
  if (all_stats_ != nullptr) all_stats_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMatchPlayerTimedStatAverages& CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::all_stats() const {
  const ::proto::dota::CMatchPlayerTimedStatAverages* p = all_stats_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.all_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMatchPlayerTimedStatAverages*>(
      &::proto::dota::_CMatchPlayerTimedStatAverages_default_instance_);
}
inline ::proto::dota::CMatchPlayerTimedStatAverages* CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::release_all_stats() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.all_stats)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMatchPlayerTimedStatAverages* temp = all_stats_;
  all_stats_ = nullptr;
  return temp;
}
inline ::proto::dota::CMatchPlayerTimedStatAverages* CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::mutable_all_stats() {
  _has_bits_[0] |= 0x00000001u;
  if (all_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMatchPlayerTimedStatAverages>(GetArenaNoVirtual());
    all_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.all_stats)
  return all_stats_;
}
inline void CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::set_allocated_all_stats(::proto::dota::CMatchPlayerTimedStatAverages* all_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete all_stats_;
  }
  if (all_stats) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      all_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, all_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  all_stats_ = all_stats;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.all_stats)
}

// optional .proto.dota.CMatchPlayerTimedStatAverages winning_stats = 3;
inline bool CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::has_winning_stats() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::clear_winning_stats() {
  if (winning_stats_ != nullptr) winning_stats_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMatchPlayerTimedStatAverages& CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::winning_stats() const {
  const ::proto::dota::CMatchPlayerTimedStatAverages* p = winning_stats_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.winning_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMatchPlayerTimedStatAverages*>(
      &::proto::dota::_CMatchPlayerTimedStatAverages_default_instance_);
}
inline ::proto::dota::CMatchPlayerTimedStatAverages* CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::release_winning_stats() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.winning_stats)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMatchPlayerTimedStatAverages* temp = winning_stats_;
  winning_stats_ = nullptr;
  return temp;
}
inline ::proto::dota::CMatchPlayerTimedStatAverages* CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::mutable_winning_stats() {
  _has_bits_[0] |= 0x00000002u;
  if (winning_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMatchPlayerTimedStatAverages>(GetArenaNoVirtual());
    winning_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.winning_stats)
  return winning_stats_;
}
inline void CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::set_allocated_winning_stats(::proto::dota::CMatchPlayerTimedStatAverages* winning_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete winning_stats_;
  }
  if (winning_stats) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      winning_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, winning_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  winning_stats_ = winning_stats;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.winning_stats)
}

// optional .proto.dota.CMatchPlayerTimedStatAverages losing_stats = 4;
inline bool CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::has_losing_stats() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::clear_losing_stats() {
  if (losing_stats_ != nullptr) losing_stats_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::proto::dota::CMatchPlayerTimedStatAverages& CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::losing_stats() const {
  const ::proto::dota::CMatchPlayerTimedStatAverages* p = losing_stats_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.losing_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMatchPlayerTimedStatAverages*>(
      &::proto::dota::_CMatchPlayerTimedStatAverages_default_instance_);
}
inline ::proto::dota::CMatchPlayerTimedStatAverages* CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::release_losing_stats() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.losing_stats)
  _has_bits_[0] &= ~0x00000004u;
  ::proto::dota::CMatchPlayerTimedStatAverages* temp = losing_stats_;
  losing_stats_ = nullptr;
  return temp;
}
inline ::proto::dota::CMatchPlayerTimedStatAverages* CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::mutable_losing_stats() {
  _has_bits_[0] |= 0x00000004u;
  if (losing_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMatchPlayerTimedStatAverages>(GetArenaNoVirtual());
    losing_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.losing_stats)
  return losing_stats_;
}
inline void CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer::set_allocated_losing_stats(::proto::dota::CMatchPlayerTimedStatAverages* losing_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete losing_stats_;
  }
  if (losing_stats) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      losing_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, losing_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  losing_stats_ = losing_stats;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer.losing_stats)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroTimedStatsResponse_RankChunkedStats

// optional uint32 rank_chunk = 1;
inline bool CMsgGCGetHeroTimedStatsResponse_RankChunkedStats::has_rank_chunk() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroTimedStatsResponse_RankChunkedStats::clear_rank_chunk() {
  rank_chunk_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroTimedStatsResponse_RankChunkedStats::rank_chunk() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroTimedStatsResponse.RankChunkedStats.rank_chunk)
  return rank_chunk_;
}
inline void CMsgGCGetHeroTimedStatsResponse_RankChunkedStats::set_rank_chunk(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  rank_chunk_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroTimedStatsResponse.RankChunkedStats.rank_chunk)
}

// repeated .proto.dota.CMsgGCGetHeroTimedStatsResponse.TimedStatsContainer timed_stats = 2;
inline int CMsgGCGetHeroTimedStatsResponse_RankChunkedStats::timed_stats_size() const {
  return timed_stats_.size();
}
inline void CMsgGCGetHeroTimedStatsResponse_RankChunkedStats::clear_timed_stats() {
  timed_stats_.Clear();
}
inline ::proto::dota::CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer* CMsgGCGetHeroTimedStatsResponse_RankChunkedStats::mutable_timed_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetHeroTimedStatsResponse.RankChunkedStats.timed_stats)
  return timed_stats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer >*
CMsgGCGetHeroTimedStatsResponse_RankChunkedStats::mutable_timed_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCGetHeroTimedStatsResponse.RankChunkedStats.timed_stats)
  return &timed_stats_;
}
inline const ::proto::dota::CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer& CMsgGCGetHeroTimedStatsResponse_RankChunkedStats::timed_stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroTimedStatsResponse.RankChunkedStats.timed_stats)
  return timed_stats_.Get(index);
}
inline ::proto::dota::CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer* CMsgGCGetHeroTimedStatsResponse_RankChunkedStats::add_timed_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetHeroTimedStatsResponse.RankChunkedStats.timed_stats)
  return timed_stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroTimedStatsResponse_TimedStatsContainer >&
CMsgGCGetHeroTimedStatsResponse_RankChunkedStats::timed_stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCGetHeroTimedStatsResponse.RankChunkedStats.timed_stats)
  return timed_stats_;
}

// -------------------------------------------------------------------

// CMsgGCGetHeroTimedStatsResponse

// optional uint32 hero_id = 1;
inline bool CMsgGCGetHeroTimedStatsResponse::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroTimedStatsResponse::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroTimedStatsResponse::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroTimedStatsResponse.hero_id)
  return hero_id_;
}
inline void CMsgGCGetHeroTimedStatsResponse::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroTimedStatsResponse.hero_id)
}

// repeated .proto.dota.CMsgGCGetHeroTimedStatsResponse.RankChunkedStats rank_chunked_stats = 2;
inline int CMsgGCGetHeroTimedStatsResponse::rank_chunked_stats_size() const {
  return rank_chunked_stats_.size();
}
inline void CMsgGCGetHeroTimedStatsResponse::clear_rank_chunked_stats() {
  rank_chunked_stats_.Clear();
}
inline ::proto::dota::CMsgGCGetHeroTimedStatsResponse_RankChunkedStats* CMsgGCGetHeroTimedStatsResponse::mutable_rank_chunked_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetHeroTimedStatsResponse.rank_chunked_stats)
  return rank_chunked_stats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroTimedStatsResponse_RankChunkedStats >*
CMsgGCGetHeroTimedStatsResponse::mutable_rank_chunked_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCGetHeroTimedStatsResponse.rank_chunked_stats)
  return &rank_chunked_stats_;
}
inline const ::proto::dota::CMsgGCGetHeroTimedStatsResponse_RankChunkedStats& CMsgGCGetHeroTimedStatsResponse::rank_chunked_stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroTimedStatsResponse.rank_chunked_stats)
  return rank_chunked_stats_.Get(index);
}
inline ::proto::dota::CMsgGCGetHeroTimedStatsResponse_RankChunkedStats* CMsgGCGetHeroTimedStatsResponse::add_rank_chunked_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetHeroTimedStatsResponse.rank_chunked_stats)
  return rank_chunked_stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroTimedStatsResponse_RankChunkedStats >&
CMsgGCGetHeroTimedStatsResponse::rank_chunked_stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCGetHeroTimedStatsResponse.rank_chunked_stats)
  return rank_chunked_stats_;
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReservationsRequest

// -------------------------------------------------------------------

// CMsgGCItemEditorReservation

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReservation::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReservation::clear_def_index() {
  def_index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReservation::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReservation.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReservation::set_def_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReservation.def_index)
}

// optional string name = 2;
inline bool CMsgGCItemEditorReservation::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReservation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCItemEditorReservation::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReservation.name)
  return name_.GetNoArena();
}
inline void CMsgGCItemEditorReservation::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReservation.name)
}
#if LANG_CXX11
inline void CMsgGCItemEditorReservation::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCItemEditorReservation.name)
}
#endif
inline void CMsgGCItemEditorReservation::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCItemEditorReservation.name)
}
inline void CMsgGCItemEditorReservation::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCItemEditorReservation.name)
}
inline ::std::string* CMsgGCItemEditorReservation::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorReservation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCItemEditorReservation::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCItemEditorReservation.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCItemEditorReservation::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCItemEditorReservation.name)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReservationsResponse

// repeated .proto.dota.CMsgGCItemEditorReservation reservations = 1;
inline int CMsgGCItemEditorReservationsResponse::reservations_size() const {
  return reservations_.size();
}
inline void CMsgGCItemEditorReservationsResponse::clear_reservations() {
  reservations_.Clear();
}
inline ::proto::dota::CMsgGCItemEditorReservation* CMsgGCItemEditorReservationsResponse::mutable_reservations(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCItemEditorReservation >*
CMsgGCItemEditorReservationsResponse::mutable_reservations() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCItemEditorReservationsResponse.reservations)
  return &reservations_;
}
inline const ::proto::dota::CMsgGCItemEditorReservation& CMsgGCItemEditorReservationsResponse::reservations(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_.Get(index);
}
inline ::proto::dota::CMsgGCItemEditorReservation* CMsgGCItemEditorReservationsResponse::add_reservations() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCItemEditorReservation >&
CMsgGCItemEditorReservationsResponse::reservations() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_;
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReserveItemDef

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReserveItemDef::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReserveItemDef::clear_def_index() {
  def_index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReserveItemDef::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReserveItemDef.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReserveItemDef::set_def_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReserveItemDef.def_index)
}

// optional string username = 2;
inline bool CMsgGCItemEditorReserveItemDef::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReserveItemDef::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCItemEditorReserveItemDef::username() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReserveItemDef.username)
  return username_.GetNoArena();
}
inline void CMsgGCItemEditorReserveItemDef::set_username(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReserveItemDef.username)
}
#if LANG_CXX11
inline void CMsgGCItemEditorReserveItemDef::set_username(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCItemEditorReserveItemDef.username)
}
#endif
inline void CMsgGCItemEditorReserveItemDef::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCItemEditorReserveItemDef.username)
}
inline void CMsgGCItemEditorReserveItemDef::set_username(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCItemEditorReserveItemDef.username)
}
inline ::std::string* CMsgGCItemEditorReserveItemDef::mutable_username() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorReserveItemDef.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCItemEditorReserveItemDef::release_username() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCItemEditorReserveItemDef.username)
  if (!has_username()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return username_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCItemEditorReserveItemDef::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCItemEditorReserveItemDef.username)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReserveItemDefResponse

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReserveItemDefResponse::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_def_index() {
  def_index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReserveItemDefResponse::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReserveItemDefResponse.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_def_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReserveItemDefResponse.def_index)
}

// optional string username = 2;
inline bool CMsgGCItemEditorReserveItemDefResponse::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCItemEditorReserveItemDefResponse::username() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
  return username_.GetNoArena();
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
}
#if LANG_CXX11
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
}
#endif
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
}
inline ::std::string* CMsgGCItemEditorReserveItemDefResponse::mutable_username() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCItemEditorReserveItemDefResponse::release_username() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
  if (!has_username()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return username_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
}

// optional uint32 result = 3;
inline bool CMsgGCItemEditorReserveItemDefResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReserveItemDefResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReserveItemDefResponse.result)
  return result_;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_result(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReserveItemDefResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReleaseReservation

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReleaseReservation::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReleaseReservation::clear_def_index() {
  def_index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReleaseReservation::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReleaseReservation.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReleaseReservation::set_def_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReleaseReservation.def_index)
}

// optional string username = 2;
inline bool CMsgGCItemEditorReleaseReservation::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReleaseReservation::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCItemEditorReleaseReservation::username() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReleaseReservation.username)
  return username_.GetNoArena();
}
inline void CMsgGCItemEditorReleaseReservation::set_username(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReleaseReservation.username)
}
#if LANG_CXX11
inline void CMsgGCItemEditorReleaseReservation::set_username(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCItemEditorReleaseReservation.username)
}
#endif
inline void CMsgGCItemEditorReleaseReservation::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCItemEditorReleaseReservation.username)
}
inline void CMsgGCItemEditorReleaseReservation::set_username(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCItemEditorReleaseReservation.username)
}
inline ::std::string* CMsgGCItemEditorReleaseReservation::mutable_username() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorReleaseReservation.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCItemEditorReleaseReservation::release_username() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCItemEditorReleaseReservation.username)
  if (!has_username()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return username_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCItemEditorReleaseReservation::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCItemEditorReleaseReservation.username)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReleaseReservationResponse

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReleaseReservationResponse::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_def_index() {
  def_index_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReleaseReservationResponse::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReleaseReservationResponse.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_def_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReleaseReservationResponse.def_index)
}

// optional bool released = 2;
inline bool CMsgGCItemEditorReleaseReservationResponse::has_released() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_released() {
  released_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCItemEditorReleaseReservationResponse::released() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReleaseReservationResponse.released)
  return released_;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_released(bool value) {
  _has_bits_[0] |= 0x00000002u;
  released_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReleaseReservationResponse.released)
}

// -------------------------------------------------------------------

// CMsgDOTARewardTutorialPrizes

// optional uint32 location_id = 1;
inline bool CMsgDOTARewardTutorialPrizes::has_location_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARewardTutorialPrizes::clear_location_id() {
  location_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTARewardTutorialPrizes::location_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARewardTutorialPrizes.location_id)
  return location_id_;
}
inline void CMsgDOTARewardTutorialPrizes::set_location_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  location_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARewardTutorialPrizes.location_id)
}

// optional bool tracking_only = 2;
inline bool CMsgDOTARewardTutorialPrizes::has_tracking_only() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARewardTutorialPrizes::clear_tracking_only() {
  tracking_only_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgDOTARewardTutorialPrizes::tracking_only() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARewardTutorialPrizes.tracking_only)
  return tracking_only_;
}
inline void CMsgDOTARewardTutorialPrizes::set_tracking_only(bool value) {
  _has_bits_[0] |= 0x00000002u;
  tracking_only_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARewardTutorialPrizes.tracking_only)
}

// -------------------------------------------------------------------

// CMsgDOTALastHitChallengeHighScorePost

// optional uint32 hero_id = 1;
inline bool CMsgDOTALastHitChallengeHighScorePost::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScorePost::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALastHitChallengeHighScorePost.hero_id)
  return hero_id_;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALastHitChallengeHighScorePost.hero_id)
}

// optional uint32 high_score = 2;
inline bool CMsgDOTALastHitChallengeHighScorePost::has_high_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_high_score() {
  high_score_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScorePost::high_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALastHitChallengeHighScorePost.high_score)
  return high_score_;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_high_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  high_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALastHitChallengeHighScorePost.high_score)
}

// -------------------------------------------------------------------

// CMsgDOTALastHitChallengeHighScoreRequest

// optional uint32 hero_id = 1;
inline bool CMsgDOTALastHitChallengeHighScoreRequest::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScoreRequest::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALastHitChallengeHighScoreRequest.hero_id)
  return hero_id_;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALastHitChallengeHighScoreRequest.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTALastHitChallengeHighScoreResponse

// optional uint32 score = 1;
inline bool CMsgDOTALastHitChallengeHighScoreResponse::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_score() {
  score_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScoreResponse::score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALastHitChallengeHighScoreResponse.score)
  return score_;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALastHitChallengeHighScoreResponse.score)
}

// optional uint32 eresult = 2;
inline bool CMsgDOTALastHitChallengeHighScoreResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_eresult() {
  eresult_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScoreResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALastHitChallengeHighScoreResponse.eresult)
  return eresult_;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALastHitChallengeHighScoreResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgFlipLobbyTeams

// -------------------------------------------------------------------

// CMsgPresentedClientTerminateDlg

// -------------------------------------------------------------------

// CMsgGCLobbyUpdateBroadcastChannelInfo

// optional uint32 channel_id = 1;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_channel_id() {
  channel_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCLobbyUpdateBroadcastChannelInfo::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.channel_id)
  return channel_id_;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_channel_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.channel_id)
}

// optional string country_code = 2;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_country_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCLobbyUpdateBroadcastChannelInfo::country_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
  return country_code_.GetNoArena();
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
#if LANG_CXX11
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
#endif
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::mutable_country_code() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
  if (!has_country_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return country_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_allocated_country_code(::std::string* country_code) {
  if (country_code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}

// optional string description = 3;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgGCLobbyUpdateBroadcastChannelInfo::description() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
  return description_.GetNoArena();
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
#if LANG_CXX11
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
#endif
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::mutable_description() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::release_description() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
  if (!has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return description_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_allocated_description(::std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}

// optional string language_code = 4;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_language_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_language_code() {
  language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CMsgGCLobbyUpdateBroadcastChannelInfo::language_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
  return language_code_.GetNoArena();
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
#if LANG_CXX11
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  language_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
#endif
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::mutable_language_code() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
  return language_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::release_language_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
  if (!has_language_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return language_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_allocated_language_code(::std::string* language_code) {
  if (language_code != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  language_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}

// -------------------------------------------------------------------

// CMsgDOTAClaimEventActionData_GrantItemGiftData

// optional uint32 give_to_account_id = 1;
inline bool CMsgDOTAClaimEventActionData_GrantItemGiftData::has_give_to_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAClaimEventActionData_GrantItemGiftData::clear_give_to_account_id() {
  give_to_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventActionData_GrantItemGiftData::give_to_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData.give_to_account_id)
  return give_to_account_id_;
}
inline void CMsgDOTAClaimEventActionData_GrantItemGiftData::set_give_to_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  give_to_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData.give_to_account_id)
}

// optional string gift_message = 2;
inline bool CMsgDOTAClaimEventActionData_GrantItemGiftData::has_gift_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClaimEventActionData_GrantItemGiftData::clear_gift_message() {
  gift_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTAClaimEventActionData_GrantItemGiftData::gift_message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData.gift_message)
  return gift_message_.GetNoArena();
}
inline void CMsgDOTAClaimEventActionData_GrantItemGiftData::set_gift_message(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  gift_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData.gift_message)
}
#if LANG_CXX11
inline void CMsgDOTAClaimEventActionData_GrantItemGiftData::set_gift_message(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  gift_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData.gift_message)
}
#endif
inline void CMsgDOTAClaimEventActionData_GrantItemGiftData::set_gift_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  gift_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData.gift_message)
}
inline void CMsgDOTAClaimEventActionData_GrantItemGiftData::set_gift_message(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  gift_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData.gift_message)
}
inline ::std::string* CMsgDOTAClaimEventActionData_GrantItemGiftData::mutable_gift_message() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData.gift_message)
  return gift_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAClaimEventActionData_GrantItemGiftData::release_gift_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData.gift_message)
  if (!has_gift_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return gift_message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAClaimEventActionData_GrantItemGiftData::set_allocated_gift_message(::std::string* gift_message) {
  if (gift_message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  gift_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gift_message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData.gift_message)
}

// -------------------------------------------------------------------

// CMsgDOTAClaimEventActionData

// optional .proto.dota.CMsgDOTAClaimEventActionData.GrantItemGiftData grant_item_gift_data = 4;
inline bool CMsgDOTAClaimEventActionData::has_grant_item_gift_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClaimEventActionData::clear_grant_item_gift_data() {
  if (grant_item_gift_data_ != nullptr) grant_item_gift_data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData& CMsgDOTAClaimEventActionData::grant_item_gift_data() const {
  const ::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData* p = grant_item_gift_data_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionData.grant_item_gift_data)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData*>(
      &::proto::dota::_CMsgDOTAClaimEventActionData_GrantItemGiftData_default_instance_);
}
inline ::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData* CMsgDOTAClaimEventActionData::release_grant_item_gift_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAClaimEventActionData.grant_item_gift_data)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData* temp = grant_item_gift_data_;
  grant_item_gift_data_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData* CMsgDOTAClaimEventActionData::mutable_grant_item_gift_data() {
  _has_bits_[0] |= 0x00000001u;
  if (grant_item_gift_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData>(GetArenaNoVirtual());
    grant_item_gift_data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClaimEventActionData.grant_item_gift_data)
  return grant_item_gift_data_;
}
inline void CMsgDOTAClaimEventActionData::set_allocated_grant_item_gift_data(::proto::dota::CMsgDOTAClaimEventActionData_GrantItemGiftData* grant_item_gift_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete grant_item_gift_data_;
  }
  if (grant_item_gift_data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      grant_item_gift_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, grant_item_gift_data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  grant_item_gift_data_ = grant_item_gift_data;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAClaimEventActionData.grant_item_gift_data)
}

// -------------------------------------------------------------------

// CMsgDOTAClaimEventAction

// optional uint32 event_id = 1;
inline bool CMsgDOTAClaimEventAction::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAClaimEventAction::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventAction::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventAction.event_id)
  return event_id_;
}
inline void CMsgDOTAClaimEventAction::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventAction.event_id)
}

// optional uint32 action_id = 2;
inline bool CMsgDOTAClaimEventAction::has_action_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAClaimEventAction::clear_action_id() {
  action_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventAction::action_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventAction.action_id)
  return action_id_;
}
inline void CMsgDOTAClaimEventAction::set_action_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  action_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventAction.action_id)
}

// optional uint32 quantity = 3;
inline bool CMsgDOTAClaimEventAction::has_quantity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAClaimEventAction::clear_quantity() {
  quantity_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventAction::quantity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventAction.quantity)
  return quantity_;
}
inline void CMsgDOTAClaimEventAction::set_quantity(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventAction.quantity)
}

// optional .proto.dota.CMsgDOTAClaimEventActionData data = 4;
inline bool CMsgDOTAClaimEventAction::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClaimEventAction::clear_data() {
  if (data_ != nullptr) data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgDOTAClaimEventActionData& CMsgDOTAClaimEventAction::data() const {
  const ::proto::dota::CMsgDOTAClaimEventActionData* p = data_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventAction.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAClaimEventActionData*>(
      &::proto::dota::_CMsgDOTAClaimEventActionData_default_instance_);
}
inline ::proto::dota::CMsgDOTAClaimEventActionData* CMsgDOTAClaimEventAction::release_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAClaimEventAction.data)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTAClaimEventActionData* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAClaimEventActionData* CMsgDOTAClaimEventAction::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAClaimEventActionData>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClaimEventAction.data)
  return data_;
}
inline void CMsgDOTAClaimEventAction::set_allocated_data(::proto::dota::CMsgDOTAClaimEventActionData* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAClaimEventAction.data)
}

// -------------------------------------------------------------------

// CMsgDOTAClaimEventActionResponse_MysteryItemRewardData

// optional uint32 item_def = 1;
inline bool CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::has_item_def() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::clear_item_def() {
  item_def_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.MysteryItemRewardData.item_def)
  return item_def_;
}
inline void CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::set_item_def(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.MysteryItemRewardData.item_def)
}

// optional uint32 item_category = 2;
inline bool CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::has_item_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::clear_item_category() {
  item_category_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::item_category() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.MysteryItemRewardData.item_category)
  return item_category_;
}
inline void CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::set_item_category(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  item_category_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.MysteryItemRewardData.item_category)
}

// -------------------------------------------------------------------

// CMsgDOTAClaimEventActionResponse_LootListRewardData

// repeated uint32 item_def = 1;
inline int CMsgDOTAClaimEventActionResponse_LootListRewardData::item_def_size() const {
  return item_def_.size();
}
inline void CMsgDOTAClaimEventActionResponse_LootListRewardData::clear_item_def() {
  item_def_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventActionResponse_LootListRewardData::item_def(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData.item_def)
  return item_def_.Get(index);
}
inline void CMsgDOTAClaimEventActionResponse_LootListRewardData::set_item_def(int index, ::google::protobuf::uint32 value) {
  item_def_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData.item_def)
}
inline void CMsgDOTAClaimEventActionResponse_LootListRewardData::add_item_def(::google::protobuf::uint32 value) {
  item_def_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData.item_def)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAClaimEventActionResponse_LootListRewardData::item_def() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData.item_def)
  return item_def_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAClaimEventActionResponse_LootListRewardData::mutable_item_def() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData.item_def)
  return &item_def_;
}

// -------------------------------------------------------------------

// CMsgDOTAClaimEventActionResponse_GrantedRewardData

// optional uint32 grant_index = 1;
inline bool CMsgDOTAClaimEventActionResponse_GrantedRewardData::has_grant_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::clear_grant_index() {
  grant_index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventActionResponse_GrantedRewardData::grant_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.grant_index)
  return grant_index_;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_grant_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  grant_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.grant_index)
}

// optional uint32 score_index = 2;
inline bool CMsgDOTAClaimEventActionResponse_GrantedRewardData::has_score_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::clear_score_index() {
  score_index_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventActionResponse_GrantedRewardData::score_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.score_index)
  return score_index_;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_score_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  score_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.score_index)
}

// optional uint32 reward_index = 3;
inline bool CMsgDOTAClaimEventActionResponse_GrantedRewardData::has_reward_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::clear_reward_index() {
  reward_index_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventActionResponse_GrantedRewardData::reward_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_index)
  return reward_index_;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_reward_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  reward_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_index)
}

// optional bytes reward_data = 4;
inline bool CMsgDOTAClaimEventActionResponse_GrantedRewardData::has_reward_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::clear_reward_data() {
  reward_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTAClaimEventActionResponse_GrantedRewardData::reward_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
  return reward_data_.GetNoArena();
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_reward_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  reward_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
}
#if LANG_CXX11
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_reward_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  reward_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
}
#endif
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_reward_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  reward_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_reward_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  reward_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
}
inline ::std::string* CMsgDOTAClaimEventActionResponse_GrantedRewardData::mutable_reward_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
  return reward_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAClaimEventActionResponse_GrantedRewardData::release_reward_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
  if (!has_reward_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return reward_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_allocated_reward_data(::std::string* reward_data) {
  if (reward_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  reward_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
}

// -------------------------------------------------------------------

// CMsgDOTAClaimEventActionResponse

// optional .proto.dota.CMsgDOTAClaimEventActionResponse.ResultCode result = 1 [default = Success];
inline bool CMsgDOTAClaimEventActionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode CMsgDOTAClaimEventActionResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.result)
  return static_cast< ::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode >(result_);
}
inline void CMsgDOTAClaimEventActionResponse::set_result(::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode value) {
  assert(::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.result)
}

// repeated .proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData reward_results = 2;
inline int CMsgDOTAClaimEventActionResponse::reward_results_size() const {
  return reward_results_.size();
}
inline void CMsgDOTAClaimEventActionResponse::clear_reward_results() {
  reward_results_.Clear();
}
inline ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData* CMsgDOTAClaimEventActionResponse::mutable_reward_results(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClaimEventActionResponse.reward_results)
  return reward_results_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData >*
CMsgDOTAClaimEventActionResponse::mutable_reward_results() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAClaimEventActionResponse.reward_results)
  return &reward_results_;
}
inline const ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData& CMsgDOTAClaimEventActionResponse::reward_results(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.reward_results)
  return reward_results_.Get(index);
}
inline ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData* CMsgDOTAClaimEventActionResponse::add_reward_results() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAClaimEventActionResponse.reward_results)
  return reward_results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData >&
CMsgDOTAClaimEventActionResponse::reward_results() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAClaimEventActionResponse.reward_results)
  return reward_results_;
}

// -------------------------------------------------------------------

// CMsgClientToGCClaimEventActionUsingItem

// optional uint32 event_id = 1;
inline bool CMsgClientToGCClaimEventActionUsingItem::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCClaimEventActionUsingItem::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCClaimEventActionUsingItem::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCClaimEventActionUsingItem.event_id)
  return event_id_;
}
inline void CMsgClientToGCClaimEventActionUsingItem::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCClaimEventActionUsingItem.event_id)
}

// optional uint32 action_id = 2;
inline bool CMsgClientToGCClaimEventActionUsingItem::has_action_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCClaimEventActionUsingItem::clear_action_id() {
  action_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCClaimEventActionUsingItem::action_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCClaimEventActionUsingItem.action_id)
  return action_id_;
}
inline void CMsgClientToGCClaimEventActionUsingItem::set_action_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  action_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCClaimEventActionUsingItem.action_id)
}

// optional uint64 item_id = 3;
inline bool CMsgClientToGCClaimEventActionUsingItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCClaimEventActionUsingItem::clear_item_id() {
  item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgClientToGCClaimEventActionUsingItem::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCClaimEventActionUsingItem.item_id)
  return item_id_;
}
inline void CMsgClientToGCClaimEventActionUsingItem::set_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCClaimEventActionUsingItem.item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCClaimEventActionUsingItemResponse

// optional .proto.dota.CMsgDOTAClaimEventActionResponse action_results = 1;
inline bool CMsgClientToGCClaimEventActionUsingItemResponse::has_action_results() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCClaimEventActionUsingItemResponse::clear_action_results() {
  if (action_results_ != nullptr) action_results_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgDOTAClaimEventActionResponse& CMsgClientToGCClaimEventActionUsingItemResponse::action_results() const {
  const ::proto::dota::CMsgDOTAClaimEventActionResponse* p = action_results_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCClaimEventActionUsingItemResponse.action_results)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAClaimEventActionResponse*>(
      &::proto::dota::_CMsgDOTAClaimEventActionResponse_default_instance_);
}
inline ::proto::dota::CMsgDOTAClaimEventActionResponse* CMsgClientToGCClaimEventActionUsingItemResponse::release_action_results() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCClaimEventActionUsingItemResponse.action_results)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTAClaimEventActionResponse* temp = action_results_;
  action_results_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAClaimEventActionResponse* CMsgClientToGCClaimEventActionUsingItemResponse::mutable_action_results() {
  _has_bits_[0] |= 0x00000001u;
  if (action_results_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAClaimEventActionResponse>(GetArenaNoVirtual());
    action_results_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCClaimEventActionUsingItemResponse.action_results)
  return action_results_;
}
inline void CMsgClientToGCClaimEventActionUsingItemResponse::set_allocated_action_results(::proto::dota::CMsgDOTAClaimEventActionResponse* action_results) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_results_;
  }
  if (action_results) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_results = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_results, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  action_results_ = action_results;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCClaimEventActionUsingItemResponse.action_results)
}

// -------------------------------------------------------------------

// CMsgDOTAGetEventPoints

// optional uint32 event_id = 1;
inline bool CMsgDOTAGetEventPoints::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetEventPoints::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPoints::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPoints.event_id)
  return event_id_;
}
inline void CMsgDOTAGetEventPoints::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPoints.event_id)
}

// optional uint32 account_id = 2;
inline bool CMsgDOTAGetEventPoints::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetEventPoints::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPoints::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPoints.account_id)
  return account_id_;
}
inline void CMsgDOTAGetEventPoints::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPoints.account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAGetEventPointsResponse_Action

// optional uint32 action_id = 1;
inline bool CMsgDOTAGetEventPointsResponse_Action::has_action_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_action_id() {
  action_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse_Action::action_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.Action.action_id)
  return action_id_;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_action_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  action_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.Action.action_id)
}

// optional uint32 times_completed = 2 [default = 1];
inline bool CMsgDOTAGetEventPointsResponse_Action::has_times_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_times_completed() {
  times_completed_ = 1u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse_Action::times_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.Action.times_completed)
  return times_completed_;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_times_completed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  times_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.Action.times_completed)
}

// -------------------------------------------------------------------

// CMsgDOTAGetEventPointsResponse

// optional uint32 total_points = 1;
inline bool CMsgDOTAGetEventPointsResponse::has_total_points() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::clear_total_points() {
  total_points_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::total_points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.total_points)
  return total_points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_total_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  total_points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.total_points)
}

// optional uint32 total_premium_points = 2;
inline bool CMsgDOTAGetEventPointsResponse::has_total_premium_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::clear_total_premium_points() {
  total_premium_points_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::total_premium_points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.total_premium_points)
  return total_premium_points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_total_premium_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_premium_points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.total_premium_points)
}

// optional uint32 event_id = 3;
inline bool CMsgDOTAGetEventPointsResponse::has_event_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.event_id)
  return event_id_;
}
inline void CMsgDOTAGetEventPointsResponse::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.event_id)
}

// optional uint32 points = 4;
inline bool CMsgDOTAGetEventPointsResponse::has_points() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.points)
  return points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.points)
}

// optional uint32 premium_points = 5;
inline bool CMsgDOTAGetEventPointsResponse::has_premium_points() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::clear_premium_points() {
  premium_points_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::premium_points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.premium_points)
  return premium_points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_premium_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  premium_points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.premium_points)
}

// repeated .proto.dota.CMsgDOTAGetEventPointsResponse.Action completed_actions = 6;
inline int CMsgDOTAGetEventPointsResponse::completed_actions_size() const {
  return completed_actions_.size();
}
inline void CMsgDOTAGetEventPointsResponse::clear_completed_actions() {
  completed_actions_.Clear();
}
inline ::proto::dota::CMsgDOTAGetEventPointsResponse_Action* CMsgDOTAGetEventPointsResponse::mutable_completed_actions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetEventPointsResponse_Action >*
CMsgDOTAGetEventPointsResponse::mutable_completed_actions() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAGetEventPointsResponse.completed_actions)
  return &completed_actions_;
}
inline const ::proto::dota::CMsgDOTAGetEventPointsResponse_Action& CMsgDOTAGetEventPointsResponse::completed_actions(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_.Get(index);
}
inline ::proto::dota::CMsgDOTAGetEventPointsResponse_Action* CMsgDOTAGetEventPointsResponse::add_completed_actions() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetEventPointsResponse_Action >&
CMsgDOTAGetEventPointsResponse::completed_actions() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_;
}

// optional uint32 account_id = 7;
inline bool CMsgDOTAGetEventPointsResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.account_id)
  return account_id_;
}
inline void CMsgDOTAGetEventPointsResponse::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.account_id)
}

// optional bool owned = 8;
inline bool CMsgDOTAGetEventPointsResponse::has_owned() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::clear_owned() {
  owned_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CMsgDOTAGetEventPointsResponse::owned() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.owned)
  return owned_;
}
inline void CMsgDOTAGetEventPointsResponse::set_owned(bool value) {
  _has_bits_[0] |= 0x00000040u;
  owned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.owned)
}

// optional uint32 audit_action = 9;
inline bool CMsgDOTAGetEventPointsResponse::has_audit_action() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::clear_audit_action() {
  audit_action_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::audit_action() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.audit_action)
  return audit_action_;
}
inline void CMsgDOTAGetEventPointsResponse::set_audit_action(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  audit_action_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.audit_action)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPeriodicResource

// optional uint32 account_id = 1;
inline bool CMsgDOTAGetPeriodicResource::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPeriodicResource::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPeriodicResource::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPeriodicResource.account_id)
  return account_id_;
}
inline void CMsgDOTAGetPeriodicResource::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPeriodicResource.account_id)
}

// optional uint32 periodic_resource_id = 2;
inline bool CMsgDOTAGetPeriodicResource::has_periodic_resource_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPeriodicResource::clear_periodic_resource_id() {
  periodic_resource_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPeriodicResource::periodic_resource_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPeriodicResource.periodic_resource_id)
  return periodic_resource_id_;
}
inline void CMsgDOTAGetPeriodicResource::set_periodic_resource_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  periodic_resource_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPeriodicResource.periodic_resource_id)
}

// optional uint32 timestamp = 3;
inline bool CMsgDOTAGetPeriodicResource::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetPeriodicResource::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPeriodicResource::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPeriodicResource.timestamp)
  return timestamp_;
}
inline void CMsgDOTAGetPeriodicResource::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPeriodicResource.timestamp)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPeriodicResourceResponse

// optional uint32 periodic_resource_max = 1;
inline bool CMsgDOTAGetPeriodicResourceResponse::has_periodic_resource_max() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPeriodicResourceResponse::clear_periodic_resource_max() {
  periodic_resource_max_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPeriodicResourceResponse::periodic_resource_max() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPeriodicResourceResponse.periodic_resource_max)
  return periodic_resource_max_;
}
inline void CMsgDOTAGetPeriodicResourceResponse::set_periodic_resource_max(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  periodic_resource_max_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPeriodicResourceResponse.periodic_resource_max)
}

// optional uint32 periodic_resource_used = 2;
inline bool CMsgDOTAGetPeriodicResourceResponse::has_periodic_resource_used() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPeriodicResourceResponse::clear_periodic_resource_used() {
  periodic_resource_used_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPeriodicResourceResponse::periodic_resource_used() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPeriodicResourceResponse.periodic_resource_used)
  return periodic_resource_used_;
}
inline void CMsgDOTAGetPeriodicResourceResponse::set_periodic_resource_used(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  periodic_resource_used_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPeriodicResourceResponse.periodic_resource_used)
}

// -------------------------------------------------------------------

// CMsgDOTAPeriodicResourceUpdated

// optional .proto.dota.CMsgDOTAGetPeriodicResource periodic_resource_key = 1;
inline bool CMsgDOTAPeriodicResourceUpdated::has_periodic_resource_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPeriodicResourceUpdated::clear_periodic_resource_key() {
  if (periodic_resource_key_ != nullptr) periodic_resource_key_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgDOTAGetPeriodicResource& CMsgDOTAPeriodicResourceUpdated::periodic_resource_key() const {
  const ::proto::dota::CMsgDOTAGetPeriodicResource* p = periodic_resource_key_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_key)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAGetPeriodicResource*>(
      &::proto::dota::_CMsgDOTAGetPeriodicResource_default_instance_);
}
inline ::proto::dota::CMsgDOTAGetPeriodicResource* CMsgDOTAPeriodicResourceUpdated::release_periodic_resource_key() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_key)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTAGetPeriodicResource* temp = periodic_resource_key_;
  periodic_resource_key_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAGetPeriodicResource* CMsgDOTAPeriodicResourceUpdated::mutable_periodic_resource_key() {
  _has_bits_[0] |= 0x00000001u;
  if (periodic_resource_key_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAGetPeriodicResource>(GetArenaNoVirtual());
    periodic_resource_key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_key)
  return periodic_resource_key_;
}
inline void CMsgDOTAPeriodicResourceUpdated::set_allocated_periodic_resource_key(::proto::dota::CMsgDOTAGetPeriodicResource* periodic_resource_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete periodic_resource_key_;
  }
  if (periodic_resource_key) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      periodic_resource_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, periodic_resource_key, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  periodic_resource_key_ = periodic_resource_key;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_key)
}

// optional .proto.dota.CMsgDOTAGetPeriodicResourceResponse periodic_resource_value = 2;
inline bool CMsgDOTAPeriodicResourceUpdated::has_periodic_resource_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPeriodicResourceUpdated::clear_periodic_resource_value() {
  if (periodic_resource_value_ != nullptr) periodic_resource_value_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgDOTAGetPeriodicResourceResponse& CMsgDOTAPeriodicResourceUpdated::periodic_resource_value() const {
  const ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* p = periodic_resource_value_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_value)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAGetPeriodicResourceResponse*>(
      &::proto::dota::_CMsgDOTAGetPeriodicResourceResponse_default_instance_);
}
inline ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* CMsgDOTAPeriodicResourceUpdated::release_periodic_resource_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_value)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* temp = periodic_resource_value_;
  periodic_resource_value_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* CMsgDOTAPeriodicResourceUpdated::mutable_periodic_resource_value() {
  _has_bits_[0] |= 0x00000002u;
  if (periodic_resource_value_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAGetPeriodicResourceResponse>(GetArenaNoVirtual());
    periodic_resource_value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_value)
  return periodic_resource_value_;
}
inline void CMsgDOTAPeriodicResourceUpdated::set_allocated_periodic_resource_value(::proto::dota::CMsgDOTAGetPeriodicResourceResponse* periodic_resource_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete periodic_resource_value_;
  }
  if (periodic_resource_value) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      periodic_resource_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, periodic_resource_value, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  periodic_resource_value_ = periodic_resource_value;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_value)
}

// -------------------------------------------------------------------

// CMsgDOTALiveLeagueGameUpdate

// optional uint32 live_league_games = 1;
inline bool CMsgDOTALiveLeagueGameUpdate::has_live_league_games() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALiveLeagueGameUpdate::clear_live_league_games() {
  live_league_games_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveLeagueGameUpdate::live_league_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveLeagueGameUpdate.live_league_games)
  return live_league_games_;
}
inline void CMsgDOTALiveLeagueGameUpdate::set_live_league_games(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  live_league_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveLeagueGameUpdate.live_league_games)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumSelection

// optional uint32 selection_index = 1;
inline bool CMsgDOTACompendiumSelection::has_selection_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumSelection::clear_selection_index() {
  selection_index_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelection::selection_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumSelection.selection_index)
  return selection_index_;
}
inline void CMsgDOTACompendiumSelection::set_selection_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  selection_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumSelection.selection_index)
}

// optional uint32 selection = 2;
inline bool CMsgDOTACompendiumSelection::has_selection() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumSelection::clear_selection() {
  selection_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelection::selection() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumSelection.selection)
  return selection_;
}
inline void CMsgDOTACompendiumSelection::set_selection(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  selection_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumSelection.selection)
}

// optional uint32 leagueid = 3;
inline bool CMsgDOTACompendiumSelection::has_leagueid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACompendiumSelection::clear_leagueid() {
  leagueid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelection::leagueid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumSelection.leagueid)
  return leagueid_;
}
inline void CMsgDOTACompendiumSelection::set_leagueid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumSelection.leagueid)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumSelectionResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDOTACompendiumSelectionResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumSelectionResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelectionResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumSelectionResponse.eresult)
  return eresult_;
}
inline void CMsgDOTACompendiumSelectionResponse::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumSelectionResponse.eresult)
}

// repeated .proto.dota.CMsgDOTACompendiumSelection extra_selections = 2;
inline int CMsgDOTACompendiumSelectionResponse::extra_selections_size() const {
  return extra_selections_.size();
}
inline void CMsgDOTACompendiumSelectionResponse::clear_extra_selections() {
  extra_selections_.Clear();
}
inline ::proto::dota::CMsgDOTACompendiumSelection* CMsgDOTACompendiumSelectionResponse::mutable_extra_selections(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >*
CMsgDOTACompendiumSelectionResponse::mutable_extra_selections() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTACompendiumSelectionResponse.extra_selections)
  return &extra_selections_;
}
inline const ::proto::dota::CMsgDOTACompendiumSelection& CMsgDOTACompendiumSelectionResponse::extra_selections(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_.Get(index);
}
inline ::proto::dota::CMsgDOTACompendiumSelection* CMsgDOTACompendiumSelectionResponse::add_extra_selections() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >&
CMsgDOTACompendiumSelectionResponse::extra_selections() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_;
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumData

// repeated .proto.dota.CMsgDOTACompendiumSelection selections = 1;
inline int CMsgDOTACompendiumData::selections_size() const {
  return selections_.size();
}
inline void CMsgDOTACompendiumData::clear_selections() {
  selections_.Clear();
}
inline ::proto::dota::CMsgDOTACompendiumSelection* CMsgDOTACompendiumData::mutable_selections(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTACompendiumData.selections)
  return selections_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >*
CMsgDOTACompendiumData::mutable_selections() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTACompendiumData.selections)
  return &selections_;
}
inline const ::proto::dota::CMsgDOTACompendiumSelection& CMsgDOTACompendiumData::selections(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumData.selections)
  return selections_.Get(index);
}
inline ::proto::dota::CMsgDOTACompendiumSelection* CMsgDOTACompendiumData::add_selections() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTACompendiumData.selections)
  return selections_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >&
CMsgDOTACompendiumData::selections() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTACompendiumData.selections)
  return selections_;
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumDataRequest

// optional uint32 account_id = 1;
inline bool CMsgDOTACompendiumDataRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumDataRequest::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumDataRequest.account_id)
  return account_id_;
}
inline void CMsgDOTACompendiumDataRequest::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumDataRequest.account_id)
}

// optional uint32 leagueid = 2;
inline bool CMsgDOTACompendiumDataRequest::has_leagueid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumDataRequest::clear_leagueid() {
  leagueid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataRequest::leagueid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumDataRequest.leagueid)
  return leagueid_;
}
inline void CMsgDOTACompendiumDataRequest::set_leagueid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumDataRequest.leagueid)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumDataResponse

// optional uint32 account_id = 1;
inline bool CMsgDOTACompendiumDataResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumDataResponse.account_id)
  return account_id_;
}
inline void CMsgDOTACompendiumDataResponse::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumDataResponse.account_id)
}

// optional uint32 leagueid = 2;
inline bool CMsgDOTACompendiumDataResponse::has_leagueid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::clear_leagueid() {
  leagueid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataResponse::leagueid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumDataResponse.leagueid)
  return leagueid_;
}
inline void CMsgDOTACompendiumDataResponse::set_leagueid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumDataResponse.leagueid)
}

// optional uint32 result = 3 [default = 2];
inline bool CMsgDOTACompendiumDataResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::clear_result() {
  result_ = 2u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumDataResponse.result)
  return result_;
}
inline void CMsgDOTACompendiumDataResponse::set_result(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumDataResponse.result)
}

// optional .proto.dota.CMsgDOTACompendiumData compendium_data = 4;
inline bool CMsgDOTACompendiumDataResponse::has_compendium_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::clear_compendium_data() {
  if (compendium_data_ != nullptr) compendium_data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgDOTACompendiumData& CMsgDOTACompendiumDataResponse::compendium_data() const {
  const ::proto::dota::CMsgDOTACompendiumData* p = compendium_data_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumDataResponse.compendium_data)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTACompendiumData*>(
      &::proto::dota::_CMsgDOTACompendiumData_default_instance_);
}
inline ::proto::dota::CMsgDOTACompendiumData* CMsgDOTACompendiumDataResponse::release_compendium_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTACompendiumDataResponse.compendium_data)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTACompendiumData* temp = compendium_data_;
  compendium_data_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTACompendiumData* CMsgDOTACompendiumDataResponse::mutable_compendium_data() {
  _has_bits_[0] |= 0x00000001u;
  if (compendium_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTACompendiumData>(GetArenaNoVirtual());
    compendium_data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTACompendiumDataResponse.compendium_data)
  return compendium_data_;
}
inline void CMsgDOTACompendiumDataResponse::set_allocated_compendium_data(::proto::dota::CMsgDOTACompendiumData* compendium_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete compendium_data_;
  }
  if (compendium_data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      compendium_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, compendium_data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  compendium_data_ = compendium_data;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTACompendiumDataResponse.compendium_data)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPlayerMatchHistory

// optional uint32 account_id = 1;
inline bool CMsgDOTAGetPlayerMatchHistory::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.account_id)
  return account_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.account_id)
}

// optional uint64 start_at_match_id = 2;
inline bool CMsgDOTAGetPlayerMatchHistory::has_start_at_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_start_at_match_id() {
  start_at_match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgDOTAGetPlayerMatchHistory::start_at_match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.start_at_match_id)
  return start_at_match_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_start_at_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  start_at_match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.start_at_match_id)
}

// optional uint32 matches_requested = 3;
inline bool CMsgDOTAGetPlayerMatchHistory::has_matches_requested() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_matches_requested() {
  matches_requested_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::matches_requested() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.matches_requested)
  return matches_requested_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_matches_requested(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  matches_requested_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.matches_requested)
}

// optional uint32 hero_id = 4;
inline bool CMsgDOTAGetPlayerMatchHistory::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.hero_id)
  return hero_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.hero_id)
}

// optional uint32 request_id = 5;
inline bool CMsgDOTAGetPlayerMatchHistory::has_request_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_request_id() {
  request_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::request_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.request_id)
  return request_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_request_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.request_id)
}

// optional bool include_practice_matches = 7;
inline bool CMsgDOTAGetPlayerMatchHistory::has_include_practice_matches() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_include_practice_matches() {
  include_practice_matches_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CMsgDOTAGetPlayerMatchHistory::include_practice_matches() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.include_practice_matches)
  return include_practice_matches_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_include_practice_matches(bool value) {
  _has_bits_[0] |= 0x00000020u;
  include_practice_matches_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.include_practice_matches)
}

// optional bool include_custom_games = 8;
inline bool CMsgDOTAGetPlayerMatchHistory::has_include_custom_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_include_custom_games() {
  include_custom_games_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CMsgDOTAGetPlayerMatchHistory::include_custom_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.include_custom_games)
  return include_custom_games_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_include_custom_games(bool value) {
  _has_bits_[0] |= 0x00000040u;
  include_custom_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.include_custom_games)
}

// optional bool include_event_games = 9;
inline bool CMsgDOTAGetPlayerMatchHistory::has_include_event_games() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_include_event_games() {
  include_event_games_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CMsgDOTAGetPlayerMatchHistory::include_event_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.include_event_games)
  return include_event_games_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_include_event_games(bool value) {
  _has_bits_[0] |= 0x00000080u;
  include_event_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.include_event_games)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPlayerMatchHistoryResponse_Match

// optional uint64 match_id = 1;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgDOTAGetPlayerMatchHistoryResponse_Match::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.match_id)
  return match_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.match_id)
}

// optional uint32 start_time = 2;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_start_time() {
  start_time_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::start_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.start_time)
  return start_time_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_start_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.start_time)
}

// optional uint32 hero_id = 3;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.hero_id)
  return hero_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.hero_id)
}

// optional bool winner = 4;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_winner() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_winner() {
  winner_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::winner() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.winner)
  return winner_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_winner(bool value) {
  _has_bits_[0] |= 0x00000100u;
  winner_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.winner)
}

// optional uint32 game_mode = 5;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_game_mode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_game_mode() {
  game_mode_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::game_mode() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.game_mode)
  return game_mode_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_game_mode(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.game_mode)
}

// optional int32 rank_change = 6;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_rank_change() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_rank_change() {
  rank_change_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::rank_change() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.rank_change)
  return rank_change_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_rank_change(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  rank_change_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.rank_change)
}

// optional uint32 previous_rank = 7;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_previous_rank() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_previous_rank() {
  previous_rank_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::previous_rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.previous_rank)
  return previous_rank_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_previous_rank(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  previous_rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.previous_rank)
}

// optional uint32 lobby_type = 8;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_lobby_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_lobby_type() {
  lobby_type_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::lobby_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.lobby_type)
  return lobby_type_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_lobby_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  lobby_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.lobby_type)
}

// optional bool solo_rank = 9;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_solo_rank() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_solo_rank() {
  solo_rank_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::solo_rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.solo_rank)
  return solo_rank_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_solo_rank(bool value) {
  _has_bits_[0] |= 0x00000200u;
  solo_rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.solo_rank)
}

// optional bool abandon = 10;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_abandon() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_abandon() {
  abandon_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::abandon() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.abandon)
  return abandon_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_abandon(bool value) {
  _has_bits_[0] |= 0x00000400u;
  abandon_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.abandon)
}

// optional uint32 duration = 11;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_duration() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_duration() {
  duration_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.duration)
  return duration_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_duration(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.duration)
}

// optional uint32 engine = 12;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_engine() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_engine() {
  engine_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::engine() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.engine)
  return engine_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_engine(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  engine_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.engine)
}

// optional bool active_plus_subscription = 13;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_active_plus_subscription() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_active_plus_subscription() {
  active_plus_subscription_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::active_plus_subscription() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.active_plus_subscription)
  return active_plus_subscription_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_active_plus_subscription(bool value) {
  _has_bits_[0] |= 0x00000800u;
  active_plus_subscription_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.active_plus_subscription)
}

// optional bool seasonal_rank = 14;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_seasonal_rank() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_seasonal_rank() {
  seasonal_rank_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::seasonal_rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.seasonal_rank)
  return seasonal_rank_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_seasonal_rank(bool value) {
  _has_bits_[0] |= 0x00004000u;
  seasonal_rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.seasonal_rank)
}

// optional uint32 tourney_id = 15;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_tourney_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_tourney_id() {
  tourney_id_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::tourney_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_id)
  return tourney_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_tourney_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  tourney_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_id)
}

// optional uint32 tourney_round = 16;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_tourney_round() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_tourney_round() {
  tourney_round_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::tourney_round() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_round)
  return tourney_round_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_tourney_round(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  tourney_round_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_round)
}

// optional uint32 tourney_tier = 17;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_tourney_tier() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_tourney_tier() {
  tourney_tier_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::tourney_tier() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_tier)
  return tourney_tier_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_tourney_tier(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  tourney_tier_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_tier)
}

// optional uint32 tourney_division = 18;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_tourney_division() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_tourney_division() {
  tourney_division_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::tourney_division() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_division)
  return tourney_division_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_tourney_division(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  tourney_division_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_division)
}

// optional uint32 team_id = 19;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_team_id() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_id)
  return team_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_id)
}

// optional string team_name = 20;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_team_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTAGetPlayerMatchHistoryResponse_Match::team_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
  return team_name_.GetNoArena();
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}
#if LANG_CXX11
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}
#endif
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}
inline ::std::string* CMsgDOTAGetPlayerMatchHistoryResponse_Match::mutable_team_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAGetPlayerMatchHistoryResponse_Match::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
  if (!has_team_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return team_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_allocated_team_name(::std::string* team_name) {
  if (team_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}

// optional uint64 ugc_team_ui_logo = 21;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_ugc_team_ui_logo() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_ugc_team_ui_logo() {
  ugc_team_ui_logo_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00080000u;
}
inline ::google::protobuf::uint64 CMsgDOTAGetPlayerMatchHistoryResponse_Match::ugc_team_ui_logo() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.ugc_team_ui_logo)
  return ugc_team_ui_logo_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_ugc_team_ui_logo(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00080000u;
  ugc_team_ui_logo_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.ugc_team_ui_logo)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPlayerMatchHistoryResponse

// repeated .proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match matches = 1;
inline int CMsgDOTAGetPlayerMatchHistoryResponse::matches_size() const {
  return matches_.size();
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::clear_matches() {
  matches_.Clear();
}
inline ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match* CMsgDOTAGetPlayerMatchHistoryResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match >*
CMsgDOTAGetPlayerMatchHistoryResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return &matches_;
}
inline const ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match& CMsgDOTAGetPlayerMatchHistoryResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_.Get(index);
}
inline ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match* CMsgDOTAGetPlayerMatchHistoryResponse::add_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match >&
CMsgDOTAGetPlayerMatchHistoryResponse::matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_;
}

// optional uint32 request_id = 2;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::clear_request_id() {
  request_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse::request_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.request_id)
  return request_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::set_request_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.request_id)
}

// -------------------------------------------------------------------

// CMsgDOTAStartDailyHeroChallenge

// -------------------------------------------------------------------

// CMsgGCNotificationsRequest

// -------------------------------------------------------------------

// CMsgGCNotificationsResponse_Notification

// optional uint64 id = 1;
inline bool CMsgGCNotificationsResponse_Notification::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgGCNotificationsResponse_Notification::id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.id)
  return id_;
}
inline void CMsgGCNotificationsResponse_Notification::set_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.id)
}

// optional uint32 type = 2;
inline bool CMsgGCNotificationsResponse_Notification::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.type)
  return type_;
}
inline void CMsgGCNotificationsResponse_Notification::set_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.type)
}

// optional uint32 timestamp = 3;
inline bool CMsgGCNotificationsResponse_Notification::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.timestamp)
  return timestamp_;
}
inline void CMsgGCNotificationsResponse_Notification::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.timestamp)
}

// optional uint32 reference_a = 4;
inline bool CMsgGCNotificationsResponse_Notification::has_reference_a() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::clear_reference_a() {
  reference_a_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::reference_a() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.reference_a)
  return reference_a_;
}
inline void CMsgGCNotificationsResponse_Notification::set_reference_a(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  reference_a_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.reference_a)
}

// optional uint32 reference_b = 5;
inline bool CMsgGCNotificationsResponse_Notification::has_reference_b() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::clear_reference_b() {
  reference_b_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::reference_b() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.reference_b)
  return reference_b_;
}
inline void CMsgGCNotificationsResponse_Notification::set_reference_b(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  reference_b_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.reference_b)
}

// optional uint32 reference_c = 6;
inline bool CMsgGCNotificationsResponse_Notification::has_reference_c() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::clear_reference_c() {
  reference_c_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::reference_c() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.reference_c)
  return reference_c_;
}
inline void CMsgGCNotificationsResponse_Notification::set_reference_c(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  reference_c_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.reference_c)
}

// optional string message = 7;
inline bool CMsgGCNotificationsResponse_Notification::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCNotificationsResponse_Notification::message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.message)
  return message_.GetNoArena();
}
inline void CMsgGCNotificationsResponse_Notification::set_message(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.message)
}
#if LANG_CXX11
inline void CMsgGCNotificationsResponse_Notification::set_message(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCNotificationsResponse.Notification.message)
}
#endif
inline void CMsgGCNotificationsResponse_Notification::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCNotificationsResponse.Notification.message)
}
inline void CMsgGCNotificationsResponse_Notification::set_message(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCNotificationsResponse.Notification.message)
}
inline ::std::string* CMsgGCNotificationsResponse_Notification::mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCNotificationsResponse.Notification.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCNotificationsResponse_Notification::release_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCNotificationsResponse.Notification.message)
  if (!has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCNotificationsResponse_Notification::set_allocated_message(::std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCNotificationsResponse.Notification.message)
}

// optional bool unread = 8;
inline bool CMsgGCNotificationsResponse_Notification::has_unread() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::clear_unread() {
  unread_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CMsgGCNotificationsResponse_Notification::unread() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.unread)
  return unread_;
}
inline void CMsgGCNotificationsResponse_Notification::set_unread(bool value) {
  _has_bits_[0] |= 0x00000080u;
  unread_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.unread)
}

// -------------------------------------------------------------------

// CMsgGCNotificationsResponse

// optional .proto.dota.CMsgGCNotificationsResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgGCNotificationsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNotificationsResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgGCNotificationsResponse_EResult CMsgGCNotificationsResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.result)
  return static_cast< ::proto::dota::CMsgGCNotificationsResponse_EResult >(result_);
}
inline void CMsgGCNotificationsResponse::set_result(::proto::dota::CMsgGCNotificationsResponse_EResult value) {
  assert(::proto::dota::CMsgGCNotificationsResponse_EResult_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.result)
}

// repeated .proto.dota.CMsgGCNotificationsResponse.Notification notifications = 2;
inline int CMsgGCNotificationsResponse::notifications_size() const {
  return notifications_.size();
}
inline void CMsgGCNotificationsResponse::clear_notifications() {
  notifications_.Clear();
}
inline ::proto::dota::CMsgGCNotificationsResponse_Notification* CMsgGCNotificationsResponse::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCNotificationsResponse.notifications)
  return notifications_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCNotificationsResponse_Notification >*
CMsgGCNotificationsResponse::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCNotificationsResponse.notifications)
  return &notifications_;
}
inline const ::proto::dota::CMsgGCNotificationsResponse_Notification& CMsgGCNotificationsResponse::notifications(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.notifications)
  return notifications_.Get(index);
}
inline ::proto::dota::CMsgGCNotificationsResponse_Notification* CMsgGCNotificationsResponse::add_notifications() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCNotificationsResponse.notifications)
  return notifications_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCNotificationsResponse_Notification >&
CMsgGCNotificationsResponse::notifications() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCNotificationsResponse.notifications)
  return notifications_;
}

// -------------------------------------------------------------------

// CMsgGCNotificationsMarkReadRequest

// -------------------------------------------------------------------

// CMsgClientToGCMarkNotificationListRead

// repeated uint64 notification_ids = 1;
inline int CMsgClientToGCMarkNotificationListRead::notification_ids_size() const {
  return notification_ids_.size();
}
inline void CMsgClientToGCMarkNotificationListRead::clear_notification_ids() {
  notification_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientToGCMarkNotificationListRead::notification_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCMarkNotificationListRead.notification_ids)
  return notification_ids_.Get(index);
}
inline void CMsgClientToGCMarkNotificationListRead::set_notification_ids(int index, ::google::protobuf::uint64 value) {
  notification_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCMarkNotificationListRead.notification_ids)
}
inline void CMsgClientToGCMarkNotificationListRead::add_notification_ids(::google::protobuf::uint64 value) {
  notification_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCMarkNotificationListRead.notification_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCMarkNotificationListRead::notification_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCMarkNotificationListRead.notification_ids)
  return notification_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCMarkNotificationListRead::mutable_notification_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCMarkNotificationListRead.notification_ids)
  return &notification_ids_;
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoRequest_PlayerInfo

// optional uint32 account_id = 1;
inline bool CMsgGCPlayerInfoRequest_PlayerInfo::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoRequest_PlayerInfo::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo.account_id)
  return account_id_;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo.account_id)
}

// optional uint32 timestamp = 2;
inline bool CMsgGCPlayerInfoRequest_PlayerInfo::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoRequest_PlayerInfo::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo.timestamp)
  return timestamp_;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo.timestamp)
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoRequest

// repeated .proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo player_infos = 1;
inline int CMsgGCPlayerInfoRequest::player_infos_size() const {
  return player_infos_.size();
}
inline void CMsgGCPlayerInfoRequest::clear_player_infos() {
  player_infos_.Clear();
}
inline ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo* CMsgGCPlayerInfoRequest::mutable_player_infos(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCPlayerInfoRequest.player_infos)
  return player_infos_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo >*
CMsgGCPlayerInfoRequest::mutable_player_infos() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCPlayerInfoRequest.player_infos)
  return &player_infos_;
}
inline const ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo& CMsgGCPlayerInfoRequest::player_infos(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoRequest.player_infos)
  return player_infos_.Get(index);
}
inline ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo* CMsgGCPlayerInfoRequest::add_player_infos() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCPlayerInfoRequest.player_infos)
  return player_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo >&
CMsgGCPlayerInfoRequest::player_infos() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCPlayerInfoRequest.player_infos)
  return player_infos_;
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoSubmit

// optional string name = 1;
inline bool CMsgGCPlayerInfoSubmit::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCPlayerInfoSubmit::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoSubmit.name)
  return name_.GetNoArena();
}
inline void CMsgGCPlayerInfoSubmit::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoSubmit.name)
}
#if LANG_CXX11
inline void CMsgGCPlayerInfoSubmit::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCPlayerInfoSubmit.name)
}
#endif
inline void CMsgGCPlayerInfoSubmit::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCPlayerInfoSubmit.name)
}
inline void CMsgGCPlayerInfoSubmit::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCPlayerInfoSubmit.name)
}
inline ::std::string* CMsgGCPlayerInfoSubmit::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCPlayerInfoSubmit.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCPlayerInfoSubmit::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCPlayerInfoSubmit.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCPlayerInfoSubmit::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCPlayerInfoSubmit.name)
}

// optional string country_code = 2;
inline bool CMsgGCPlayerInfoSubmit::has_country_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgGCPlayerInfoSubmit::country_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
  return country_code_.GetNoArena();
}
inline void CMsgGCPlayerInfoSubmit::set_country_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
}
#if LANG_CXX11
inline void CMsgGCPlayerInfoSubmit::set_country_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
}
#endif
inline void CMsgGCPlayerInfoSubmit::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
}
inline void CMsgGCPlayerInfoSubmit::set_country_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
}
inline ::std::string* CMsgGCPlayerInfoSubmit::mutable_country_code() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCPlayerInfoSubmit::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
  if (!has_country_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return country_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCPlayerInfoSubmit::set_allocated_country_code(::std::string* country_code) {
  if (country_code != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
}

// optional uint32 fantasy_role = 3;
inline bool CMsgGCPlayerInfoSubmit::has_fantasy_role() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::clear_fantasy_role() {
  fantasy_role_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoSubmit::fantasy_role() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoSubmit.fantasy_role)
  return fantasy_role_;
}
inline void CMsgGCPlayerInfoSubmit::set_fantasy_role(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  fantasy_role_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoSubmit.fantasy_role)
}

// optional uint32 team_id = 4;
inline bool CMsgGCPlayerInfoSubmit::has_team_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoSubmit::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoSubmit.team_id)
  return team_id_;
}
inline void CMsgGCPlayerInfoSubmit::set_team_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoSubmit.team_id)
}

// optional string sponsor = 5;
inline bool CMsgGCPlayerInfoSubmit::has_sponsor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::clear_sponsor() {
  sponsor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CMsgGCPlayerInfoSubmit::sponsor() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
  return sponsor_.GetNoArena();
}
inline void CMsgGCPlayerInfoSubmit::set_sponsor(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  sponsor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
}
#if LANG_CXX11
inline void CMsgGCPlayerInfoSubmit::set_sponsor(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  sponsor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
}
#endif
inline void CMsgGCPlayerInfoSubmit::set_sponsor(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  sponsor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
}
inline void CMsgGCPlayerInfoSubmit::set_sponsor(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  sponsor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
}
inline ::std::string* CMsgGCPlayerInfoSubmit::mutable_sponsor() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
  return sponsor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCPlayerInfoSubmit::release_sponsor() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
  if (!has_sponsor()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return sponsor_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCPlayerInfoSubmit::set_allocated_sponsor(::std::string* sponsor) {
  if (sponsor != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  sponsor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sponsor);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoSubmitResponse

// optional .proto.dota.CMsgGCPlayerInfoSubmitResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgGCPlayerInfoSubmitResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCPlayerInfoSubmitResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult CMsgGCPlayerInfoSubmitResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoSubmitResponse.result)
  return static_cast< ::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult >(result_);
}
inline void CMsgGCPlayerInfoSubmitResponse::set_result(::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult value) {
  assert(::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoSubmitResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientProvideSurveyResult_Response

// optional uint32 question_id = 1;
inline bool CMsgClientProvideSurveyResult_Response::has_question_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientProvideSurveyResult_Response::clear_question_id() {
  question_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientProvideSurveyResult_Response::question_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientProvideSurveyResult.Response.question_id)
  return question_id_;
}
inline void CMsgClientProvideSurveyResult_Response::set_question_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  question_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientProvideSurveyResult.Response.question_id)
}

// optional uint32 survey_value = 2;
inline bool CMsgClientProvideSurveyResult_Response::has_survey_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientProvideSurveyResult_Response::clear_survey_value() {
  survey_value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientProvideSurveyResult_Response::survey_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientProvideSurveyResult.Response.survey_value)
  return survey_value_;
}
inline void CMsgClientProvideSurveyResult_Response::set_survey_value(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  survey_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientProvideSurveyResult.Response.survey_value)
}

// -------------------------------------------------------------------

// CMsgClientProvideSurveyResult

// repeated .proto.dota.CMsgClientProvideSurveyResult.Response responses = 1;
inline int CMsgClientProvideSurveyResult::responses_size() const {
  return responses_.size();
}
inline void CMsgClientProvideSurveyResult::clear_responses() {
  responses_.Clear();
}
inline ::proto::dota::CMsgClientProvideSurveyResult_Response* CMsgClientProvideSurveyResult::mutable_responses(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientProvideSurveyResult.responses)
  return responses_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientProvideSurveyResult_Response >*
CMsgClientProvideSurveyResult::mutable_responses() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientProvideSurveyResult.responses)
  return &responses_;
}
inline const ::proto::dota::CMsgClientProvideSurveyResult_Response& CMsgClientProvideSurveyResult::responses(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientProvideSurveyResult.responses)
  return responses_.Get(index);
}
inline ::proto::dota::CMsgClientProvideSurveyResult_Response* CMsgClientProvideSurveyResult::add_responses() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientProvideSurveyResult.responses)
  return responses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientProvideSurveyResult_Response >&
CMsgClientProvideSurveyResult::responses() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientProvideSurveyResult.responses)
  return responses_;
}

// optional uint64 survey_key = 2;
inline bool CMsgClientProvideSurveyResult::has_survey_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientProvideSurveyResult::clear_survey_key() {
  survey_key_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientProvideSurveyResult::survey_key() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientProvideSurveyResult.survey_key)
  return survey_key_;
}
inline void CMsgClientProvideSurveyResult::set_survey_key(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  survey_key_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientProvideSurveyResult.survey_key)
}

// -------------------------------------------------------------------

// CMsgDOTAEmoticonAccessSDO

// optional uint32 account_id = 1;
inline bool CMsgDOTAEmoticonAccessSDO::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAEmoticonAccessSDO::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAEmoticonAccessSDO.account_id)
  return account_id_;
}
inline void CMsgDOTAEmoticonAccessSDO::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAEmoticonAccessSDO.account_id)
}

// optional bytes unlocked_emoticons = 2;
inline bool CMsgDOTAEmoticonAccessSDO::has_unlocked_emoticons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_unlocked_emoticons() {
  unlocked_emoticons_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTAEmoticonAccessSDO::unlocked_emoticons() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
  return unlocked_emoticons_.GetNoArena();
}
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  unlocked_emoticons_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
#if LANG_CXX11
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  unlocked_emoticons_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
#endif
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  unlocked_emoticons_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  unlocked_emoticons_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
inline ::std::string* CMsgDOTAEmoticonAccessSDO::mutable_unlocked_emoticons() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
  return unlocked_emoticons_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAEmoticonAccessSDO::release_unlocked_emoticons() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
  if (!has_unlocked_emoticons()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return unlocked_emoticons_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAEmoticonAccessSDO::set_allocated_unlocked_emoticons(::std::string* unlocked_emoticons) {
  if (unlocked_emoticons != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  unlocked_emoticons_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unlocked_emoticons);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}

// -------------------------------------------------------------------

// CMsgClientToGCEmoticonDataRequest

// -------------------------------------------------------------------

// CMsgGCToClientEmoticonData

// optional .proto.dota.CMsgDOTAEmoticonAccessSDO emoticon_access = 1;
inline bool CMsgGCToClientEmoticonData::has_emoticon_access() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientEmoticonData::clear_emoticon_access() {
  if (emoticon_access_ != nullptr) emoticon_access_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgDOTAEmoticonAccessSDO& CMsgGCToClientEmoticonData::emoticon_access() const {
  const ::proto::dota::CMsgDOTAEmoticonAccessSDO* p = emoticon_access_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientEmoticonData.emoticon_access)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAEmoticonAccessSDO*>(
      &::proto::dota::_CMsgDOTAEmoticonAccessSDO_default_instance_);
}
inline ::proto::dota::CMsgDOTAEmoticonAccessSDO* CMsgGCToClientEmoticonData::release_emoticon_access() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientEmoticonData.emoticon_access)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTAEmoticonAccessSDO* temp = emoticon_access_;
  emoticon_access_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAEmoticonAccessSDO* CMsgGCToClientEmoticonData::mutable_emoticon_access() {
  _has_bits_[0] |= 0x00000001u;
  if (emoticon_access_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAEmoticonAccessSDO>(GetArenaNoVirtual());
    emoticon_access_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientEmoticonData.emoticon_access)
  return emoticon_access_;
}
inline void CMsgGCToClientEmoticonData::set_allocated_emoticon_access(::proto::dota::CMsgDOTAEmoticonAccessSDO* emoticon_access) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete emoticon_access_;
  }
  if (emoticon_access) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      emoticon_access = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, emoticon_access, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  emoticon_access_ = emoticon_access;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientEmoticonData.emoticon_access)
}

// -------------------------------------------------------------------

// CMsgClientToGCTrackDialogResult

// optional uint32 dialog_id = 1;
inline bool CMsgClientToGCTrackDialogResult::has_dialog_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTrackDialogResult::clear_dialog_id() {
  dialog_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCTrackDialogResult::dialog_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTrackDialogResult.dialog_id)
  return dialog_id_;
}
inline void CMsgClientToGCTrackDialogResult::set_dialog_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  dialog_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTrackDialogResult.dialog_id)
}

// optional uint32 value = 2;
inline bool CMsgClientToGCTrackDialogResult::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCTrackDialogResult::clear_value() {
  value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCTrackDialogResult::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTrackDialogResult.value)
  return value_;
}
inline void CMsgClientToGCTrackDialogResult::set_value(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTrackDialogResult.value)
}

// -------------------------------------------------------------------

// CMsgGCToClientTournamentItemDrop

// optional uint32 item_def = 1;
inline bool CMsgGCToClientTournamentItemDrop::has_item_def() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientTournamentItemDrop::clear_item_def() {
  item_def_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientTournamentItemDrop::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTournamentItemDrop.item_def)
  return item_def_;
}
inline void CMsgGCToClientTournamentItemDrop::set_item_def(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTournamentItemDrop.item_def)
}

// optional uint32 event_type = 2;
inline bool CMsgGCToClientTournamentItemDrop::has_event_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientTournamentItemDrop::clear_event_type() {
  event_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientTournamentItemDrop::event_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTournamentItemDrop.event_type)
  return event_type_;
}
inline void CMsgGCToClientTournamentItemDrop::set_event_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTournamentItemDrop.event_type)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetAdditionalEquips

// repeated .proto.dota.CAdditionalEquipSlot equips = 1;
inline int CMsgClientToGCSetAdditionalEquips::equips_size() const {
  return equips_.size();
}
inline ::proto::dota::CAdditionalEquipSlot* CMsgClientToGCSetAdditionalEquips::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCSetAdditionalEquips.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >*
CMsgClientToGCSetAdditionalEquips::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCSetAdditionalEquips.equips)
  return &equips_;
}
inline const ::proto::dota::CAdditionalEquipSlot& CMsgClientToGCSetAdditionalEquips::equips(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetAdditionalEquips.equips)
  return equips_.Get(index);
}
inline ::proto::dota::CAdditionalEquipSlot* CMsgClientToGCSetAdditionalEquips::add_equips() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCSetAdditionalEquips.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >&
CMsgClientToGCSetAdditionalEquips::equips() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCSetAdditionalEquips.equips)
  return equips_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSetAdditionalEquipsResponse

// -------------------------------------------------------------------

// CMsgClientToGCGetAdditionalEquips

// -------------------------------------------------------------------

// CMsgClientToGCGetAdditionalEquipsResponse

// repeated .proto.dota.CAdditionalEquipSlot equips = 1;
inline int CMsgClientToGCGetAdditionalEquipsResponse::equips_size() const {
  return equips_.size();
}
inline ::proto::dota::CAdditionalEquipSlot* CMsgClientToGCGetAdditionalEquipsResponse::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >*
CMsgClientToGCGetAdditionalEquipsResponse::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return &equips_;
}
inline const ::proto::dota::CAdditionalEquipSlot& CMsgClientToGCGetAdditionalEquipsResponse::equips(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_.Get(index);
}
inline ::proto::dota::CAdditionalEquipSlot* CMsgClientToGCGetAdditionalEquipsResponse::add_equips() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >&
CMsgClientToGCGetAdditionalEquipsResponse::equips() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroOrder

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroOrderResponse

// repeated uint32 hero_ids = 1;
inline int CMsgClientToGCGetAllHeroOrderResponse::hero_ids_size() const {
  return hero_ids_.size();
}
inline void CMsgClientToGCGetAllHeroOrderResponse::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroOrderResponse::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
  return hero_ids_.Get(index);
}
inline void CMsgClientToGCGetAllHeroOrderResponse::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
}
inline void CMsgClientToGCGetAllHeroOrderResponse::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCGetAllHeroOrderResponse::hero_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCGetAllHeroOrderResponse::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
  return &hero_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroProgress

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetAllHeroProgress::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgress::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgress::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgress.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetAllHeroProgress::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgress.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroProgressResponse

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.account_id)
}

// optional uint32 curr_hero_id = 2;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_hero_id() {
  curr_hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_hero_id)
  return curr_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  curr_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_hero_id)
}

// optional uint32 laps_completed = 3;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_laps_completed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_laps_completed() {
  laps_completed_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::laps_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.laps_completed)
  return laps_completed_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_laps_completed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  laps_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.laps_completed)
}

// optional uint32 curr_hero_games = 4;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_hero_games() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_hero_games() {
  curr_hero_games_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_hero_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_hero_games)
  return curr_hero_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_hero_games(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  curr_hero_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_hero_games)
}

// optional uint32 curr_lap_time_started = 5;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_lap_time_started() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_lap_time_started() {
  curr_lap_time_started_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_lap_time_started() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_lap_time_started)
  return curr_lap_time_started_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_lap_time_started(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  curr_lap_time_started_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_lap_time_started)
}

// optional uint32 curr_lap_games = 6;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_lap_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_lap_games() {
  curr_lap_games_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_lap_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_lap_games)
  return curr_lap_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_lap_games(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  curr_lap_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_lap_games)
}

// optional uint32 best_lap_games = 7;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_best_lap_games() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_best_lap_games() {
  best_lap_games_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::best_lap_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.best_lap_games)
  return best_lap_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_best_lap_games(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  best_lap_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.best_lap_games)
}

// optional uint32 best_lap_time = 8;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_best_lap_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_best_lap_time() {
  best_lap_time_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::best_lap_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.best_lap_time)
  return best_lap_time_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_best_lap_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  best_lap_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.best_lap_time)
}

// optional uint32 lap_heroes_completed = 9;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_lap_heroes_completed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_lap_heroes_completed() {
  lap_heroes_completed_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::lap_heroes_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_completed)
  return lap_heroes_completed_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_lap_heroes_completed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  lap_heroes_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_completed)
}

// optional uint32 lap_heroes_remaining = 10;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_lap_heroes_remaining() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_lap_heroes_remaining() {
  lap_heroes_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::lap_heroes_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_remaining)
  return lap_heroes_remaining_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_lap_heroes_remaining(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  lap_heroes_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_remaining)
}

// optional uint32 next_hero_id = 11;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_next_hero_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_next_hero_id() {
  next_hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::next_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.next_hero_id)
  return next_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_next_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  next_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.next_hero_id)
}

// optional uint32 prev_hero_id = 12;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_prev_hero_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_prev_hero_id() {
  prev_hero_id_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::prev_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.prev_hero_id)
  return prev_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_prev_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  prev_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.prev_hero_id)
}

// optional uint32 prev_hero_games = 13;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_prev_hero_games() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_prev_hero_games() {
  prev_hero_games_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::prev_hero_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.prev_hero_games)
  return prev_hero_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_prev_hero_games(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  prev_hero_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.prev_hero_games)
}

// optional float prev_avg_tries = 14;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_prev_avg_tries() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_prev_avg_tries() {
  prev_avg_tries_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline float CMsgClientToGCGetAllHeroProgressResponse::prev_avg_tries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.prev_avg_tries)
  return prev_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_prev_avg_tries(float value) {
  _has_bits_[0] |= 0x00004000u;
  prev_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.prev_avg_tries)
}

// optional float curr_avg_tries = 15;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_avg_tries() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_avg_tries() {
  curr_avg_tries_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline float CMsgClientToGCGetAllHeroProgressResponse::curr_avg_tries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_avg_tries)
  return curr_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_avg_tries(float value) {
  _has_bits_[0] |= 0x00008000u;
  curr_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_avg_tries)
}

// optional float next_avg_tries = 16;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_next_avg_tries() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_next_avg_tries() {
  next_avg_tries_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline float CMsgClientToGCGetAllHeroProgressResponse::next_avg_tries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.next_avg_tries)
  return next_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_next_avg_tries(float value) {
  _has_bits_[0] |= 0x00010000u;
  next_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.next_avg_tries)
}

// optional float full_lap_avg_tries = 17;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_full_lap_avg_tries() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_full_lap_avg_tries() {
  full_lap_avg_tries_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline float CMsgClientToGCGetAllHeroProgressResponse::full_lap_avg_tries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.full_lap_avg_tries)
  return full_lap_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_full_lap_avg_tries(float value) {
  _has_bits_[0] |= 0x00020000u;
  full_lap_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.full_lap_avg_tries)
}

// optional float curr_lap_avg_tries = 18;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_lap_avg_tries() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_lap_avg_tries() {
  curr_lap_avg_tries_ = 0;
  _has_bits_[0] &= ~0x00040000u;
}
inline float CMsgClientToGCGetAllHeroProgressResponse::curr_lap_avg_tries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_lap_avg_tries)
  return curr_lap_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_lap_avg_tries(float value) {
  _has_bits_[0] |= 0x00040000u;
  curr_lap_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_lap_avg_tries)
}

// optional string profile_name = 19;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_profile_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_profile_name() {
  profile_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgClientToGCGetAllHeroProgressResponse::profile_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
  return profile_name_.GetNoArena();
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  profile_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
#if LANG_CXX11
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  profile_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
#endif
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  profile_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  profile_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
inline ::std::string* CMsgClientToGCGetAllHeroProgressResponse::mutable_profile_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
  return profile_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCGetAllHeroProgressResponse::release_profile_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
  if (!has_profile_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return profile_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_allocated_profile_name(::std::string* profile_name) {
  if (profile_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  profile_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), profile_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}

// optional uint32 start_hero_id = 20;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_start_hero_id() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_start_hero_id() {
  start_hero_id_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::start_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.start_hero_id)
  return start_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_start_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  start_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.start_hero_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetTrophyList

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetTrophyList::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetTrophyList::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyList::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyList.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetTrophyList::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetTrophyList.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetTrophyListResponse_Trophy

// optional uint32 trophy_id = 1;
inline bool CMsgClientToGCGetTrophyListResponse_Trophy::has_trophy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_trophy_id() {
  trophy_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse_Trophy::trophy_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy.trophy_id)
  return trophy_id_;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_trophy_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  trophy_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy.trophy_id)
}

// optional uint32 trophy_score = 2;
inline bool CMsgClientToGCGetTrophyListResponse_Trophy::has_trophy_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_trophy_score() {
  trophy_score_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse_Trophy::trophy_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy.trophy_score)
  return trophy_score_;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_trophy_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  trophy_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy.trophy_score)
}

// optional uint32 last_updated = 3;
inline bool CMsgClientToGCGetTrophyListResponse_Trophy::has_last_updated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_last_updated() {
  last_updated_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse_Trophy::last_updated() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy.last_updated)
  return last_updated_;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_last_updated(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  last_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy.last_updated)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetTrophyListResponse

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetTrophyListResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyListResponse.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetTrophyListResponse::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetTrophyListResponse.account_id)
}

// repeated .proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy trophies = 2;
inline int CMsgClientToGCGetTrophyListResponse::trophies_size() const {
  return trophies_.size();
}
inline void CMsgClientToGCGetTrophyListResponse::clear_trophies() {
  trophies_.Clear();
}
inline ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy* CMsgClientToGCGetTrophyListResponse::mutable_trophies(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy >*
CMsgClientToGCGetTrophyListResponse::mutable_trophies() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetTrophyListResponse.trophies)
  return &trophies_;
}
inline const ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy& CMsgClientToGCGetTrophyListResponse::trophies(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_.Get(index);
}
inline ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy* CMsgClientToGCGetTrophyListResponse::add_trophies() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy >&
CMsgClientToGCGetTrophyListResponse::trophies() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_;
}

// optional string profile_name = 3;
inline bool CMsgClientToGCGetTrophyListResponse::has_profile_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_profile_name() {
  profile_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgClientToGCGetTrophyListResponse::profile_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
  return profile_name_.GetNoArena();
}
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  profile_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
}
#if LANG_CXX11
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  profile_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
}
#endif
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  profile_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
}
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  profile_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
}
inline ::std::string* CMsgClientToGCGetTrophyListResponse::mutable_profile_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
  return profile_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCGetTrophyListResponse::release_profile_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
  if (!has_profile_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return profile_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCGetTrophyListResponse::set_allocated_profile_name(::std::string* profile_name) {
  if (profile_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  profile_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), profile_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
}

// -------------------------------------------------------------------

// CMsgGCToClientTrophyAwarded

// optional uint32 trophy_id = 1;
inline bool CMsgGCToClientTrophyAwarded::has_trophy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::clear_trophy_id() {
  trophy_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::trophy_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTrophyAwarded.trophy_id)
  return trophy_id_;
}
inline void CMsgGCToClientTrophyAwarded::set_trophy_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  trophy_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTrophyAwarded.trophy_id)
}

// optional uint32 trophy_score = 2;
inline bool CMsgGCToClientTrophyAwarded::has_trophy_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::clear_trophy_score() {
  trophy_score_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::trophy_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTrophyAwarded.trophy_score)
  return trophy_score_;
}
inline void CMsgGCToClientTrophyAwarded::set_trophy_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  trophy_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTrophyAwarded.trophy_score)
}

// optional uint32 trophy_old_score = 3;
inline bool CMsgGCToClientTrophyAwarded::has_trophy_old_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::clear_trophy_old_score() {
  trophy_old_score_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::trophy_old_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTrophyAwarded.trophy_old_score)
  return trophy_old_score_;
}
inline void CMsgGCToClientTrophyAwarded::set_trophy_old_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  trophy_old_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTrophyAwarded.trophy_old_score)
}

// optional uint32 last_updated = 4;
inline bool CMsgGCToClientTrophyAwarded::has_last_updated() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::clear_last_updated() {
  last_updated_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::last_updated() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTrophyAwarded.last_updated)
  return last_updated_;
}
inline void CMsgGCToClientTrophyAwarded::set_last_updated(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  last_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTrophyAwarded.last_updated)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetProfileCard

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetProfileCard::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetProfileCard::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetProfileCard::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetProfileCard.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetProfileCard::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetProfileCard.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetProfileCardSlots_CardSlot

// optional uint32 slot_id = 1;
inline bool CMsgClientToGCSetProfileCardSlots_CardSlot::has_slot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_slot_id() {
  slot_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCSetProfileCardSlots_CardSlot::slot_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot.slot_id)
  return slot_id_;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_slot_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot.slot_id)
}

// optional .proto.dota.EProfileCardSlotType slot_type = 2 [default = k_EProfileCardSlotType_Empty];
inline bool CMsgClientToGCSetProfileCardSlots_CardSlot::has_slot_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_slot_type() {
  slot_type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::EProfileCardSlotType CMsgClientToGCSetProfileCardSlots_CardSlot::slot_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot.slot_type)
  return static_cast< ::proto::dota::EProfileCardSlotType >(slot_type_);
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_slot_type(::proto::dota::EProfileCardSlotType value) {
  assert(::proto::dota::EProfileCardSlotType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  slot_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot.slot_type)
}

// optional uint64 slot_value = 3;
inline bool CMsgClientToGCSetProfileCardSlots_CardSlot::has_slot_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_slot_value() {
  slot_value_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgClientToGCSetProfileCardSlots_CardSlot::slot_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot.slot_value)
  return slot_value_;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_slot_value(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  slot_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot.slot_value)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetProfileCardSlots

// repeated .proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot slots = 1;
inline int CMsgClientToGCSetProfileCardSlots::slots_size() const {
  return slots_.size();
}
inline void CMsgClientToGCSetProfileCardSlots::clear_slots() {
  slots_.Clear();
}
inline ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot* CMsgClientToGCSetProfileCardSlots::mutable_slots(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCSetProfileCardSlots.slots)
  return slots_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot >*
CMsgClientToGCSetProfileCardSlots::mutable_slots() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCSetProfileCardSlots.slots)
  return &slots_;
}
inline const ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot& CMsgClientToGCSetProfileCardSlots::slots(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetProfileCardSlots.slots)
  return slots_.Get(index);
}
inline ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot* CMsgClientToGCSetProfileCardSlots::add_slots() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCSetProfileCardSlots.slots)
  return slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot >&
CMsgClientToGCSetProfileCardSlots::slots() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCSetProfileCardSlots.slots)
  return slots_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetProfileCardStats

// -------------------------------------------------------------------

// CMsgClientToGCCreateHeroStatue

// optional uint64 source_item = 1;
inline bool CMsgClientToGCCreateHeroStatue::has_source_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::clear_source_item() {
  source_item_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgClientToGCCreateHeroStatue::source_item() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.source_item)
  return source_item_;
}
inline void CMsgClientToGCCreateHeroStatue::set_source_item(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  source_item_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.source_item)
}

// optional uint32 hero_id = 3;
inline bool CMsgClientToGCCreateHeroStatue::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateHeroStatue::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCCreateHeroStatue::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.hero_id)
}

// optional string sequence_name = 4;
inline bool CMsgClientToGCCreateHeroStatue::has_sequence_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::clear_sequence_name() {
  sequence_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgClientToGCCreateHeroStatue::sequence_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
  return sequence_name_.GetNoArena();
}
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  sequence_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
}
#if LANG_CXX11
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  sequence_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
}
#endif
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  sequence_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
}
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  sequence_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::mutable_sequence_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
  return sequence_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::release_sequence_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
  if (!has_sequence_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return sequence_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCCreateHeroStatue::set_allocated_sequence_name(::std::string* sequence_name) {
  if (sequence_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  sequence_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sequence_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
}

// optional float cycle = 5;
inline bool CMsgClientToGCCreateHeroStatue::has_cycle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::clear_cycle() {
  cycle_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CMsgClientToGCCreateHeroStatue::cycle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.cycle)
  return cycle_;
}
inline void CMsgClientToGCCreateHeroStatue::set_cycle(float value) {
  _has_bits_[0] |= 0x00000010u;
  cycle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.cycle)
}

// repeated uint32 wearables = 6;
inline int CMsgClientToGCCreateHeroStatue::wearables_size() const {
  return wearables_.size();
}
inline void CMsgClientToGCCreateHeroStatue::clear_wearables() {
  wearables_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateHeroStatue::wearables(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.wearables)
  return wearables_.Get(index);
}
inline void CMsgClientToGCCreateHeroStatue::set_wearables(int index, ::google::protobuf::uint32 value) {
  wearables_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.wearables)
}
inline void CMsgClientToGCCreateHeroStatue::add_wearables(::google::protobuf::uint32 value) {
  wearables_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCCreateHeroStatue.wearables)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCCreateHeroStatue::wearables() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCCreateHeroStatue.wearables)
  return wearables_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCCreateHeroStatue::mutable_wearables() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCCreateHeroStatue.wearables)
  return &wearables_;
}

// optional string inscription = 7;
inline bool CMsgClientToGCCreateHeroStatue::has_inscription() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::clear_inscription() {
  inscription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgClientToGCCreateHeroStatue::inscription() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
  return inscription_.GetNoArena();
}
inline void CMsgClientToGCCreateHeroStatue::set_inscription(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  inscription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
}
#if LANG_CXX11
inline void CMsgClientToGCCreateHeroStatue::set_inscription(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  inscription_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
}
#endif
inline void CMsgClientToGCCreateHeroStatue::set_inscription(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  inscription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
}
inline void CMsgClientToGCCreateHeroStatue::set_inscription(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  inscription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::mutable_inscription() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
  return inscription_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::release_inscription() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
  if (!has_inscription()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return inscription_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCCreateHeroStatue::set_allocated_inscription(::std::string* inscription) {
  if (inscription != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  inscription_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inscription);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
}

// repeated uint32 styles = 8;
inline int CMsgClientToGCCreateHeroStatue::styles_size() const {
  return styles_.size();
}
inline void CMsgClientToGCCreateHeroStatue::clear_styles() {
  styles_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateHeroStatue::styles(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.styles)
  return styles_.Get(index);
}
inline void CMsgClientToGCCreateHeroStatue::set_styles(int index, ::google::protobuf::uint32 value) {
  styles_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.styles)
}
inline void CMsgClientToGCCreateHeroStatue::add_styles(::google::protobuf::uint32 value) {
  styles_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCCreateHeroStatue.styles)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCCreateHeroStatue::styles() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCCreateHeroStatue.styles)
  return styles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCCreateHeroStatue::mutable_styles() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCCreateHeroStatue.styles)
  return &styles_;
}

// optional uint64 reforger_item = 9;
inline bool CMsgClientToGCCreateHeroStatue::has_reforger_item() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::clear_reforger_item() {
  reforger_item_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint64 CMsgClientToGCCreateHeroStatue::reforger_item() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.reforger_item)
  return reforger_item_;
}
inline void CMsgClientToGCCreateHeroStatue::set_reforger_item(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  reforger_item_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.reforger_item)
}

// optional bool tournament_drop = 10;
inline bool CMsgClientToGCCreateHeroStatue::has_tournament_drop() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::clear_tournament_drop() {
  tournament_drop_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CMsgClientToGCCreateHeroStatue::tournament_drop() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.tournament_drop)
  return tournament_drop_;
}
inline void CMsgClientToGCCreateHeroStatue::set_tournament_drop(bool value) {
  _has_bits_[0] |= 0x00000040u;
  tournament_drop_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.tournament_drop)
}

// -------------------------------------------------------------------

// CMsgGCToClientHeroStatueCreateResult

// optional uint64 resulting_item = 1;
inline bool CMsgGCToClientHeroStatueCreateResult::has_resulting_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientHeroStatueCreateResult::clear_resulting_item() {
  resulting_item_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCToClientHeroStatueCreateResult::resulting_item() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientHeroStatueCreateResult.resulting_item)
  return resulting_item_;
}
inline void CMsgGCToClientHeroStatueCreateResult::set_resulting_item(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  resulting_item_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientHeroStatueCreateResult.resulting_item)
}

// -------------------------------------------------------------------

// CMsgGCToClientEventStatusChanged

// optional .proto.dota.EEvent active_event = 2 [default = EVENT_ID_NONE];
inline bool CMsgGCToClientEventStatusChanged::has_active_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientEventStatusChanged::clear_active_event() {
  active_event_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgGCToClientEventStatusChanged::active_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientEventStatusChanged.active_event)
  return static_cast< ::proto::dota::EEvent >(active_event_);
}
inline void CMsgGCToClientEventStatusChanged::set_active_event(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  active_event_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientEventStatusChanged.active_event)
}

// -------------------------------------------------------------------

// CMsgClientToGCPlayerStatsRequest

// optional uint32 account_id = 1;
inline bool CMsgClientToGCPlayerStatsRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCPlayerStatsRequest::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCPlayerStatsRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCPlayerStatsRequest.account_id)
  return account_id_;
}
inline void CMsgClientToGCPlayerStatsRequest::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCPlayerStatsRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientPlayerStatsResponse

// optional uint32 account_id = 1;
inline bool CMsgGCToClientPlayerStatsResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.account_id)
  return account_id_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.account_id)
}

// repeated float player_stats = 2;
inline int CMsgGCToClientPlayerStatsResponse::player_stats_size() const {
  return player_stats_.size();
}
inline void CMsgGCToClientPlayerStatsResponse::clear_player_stats() {
  player_stats_.Clear();
}
inline float CMsgGCToClientPlayerStatsResponse::player_stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.player_stats)
  return player_stats_.Get(index);
}
inline void CMsgGCToClientPlayerStatsResponse::set_player_stats(int index, float value) {
  player_stats_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.player_stats)
}
inline void CMsgGCToClientPlayerStatsResponse::add_player_stats(float value) {
  player_stats_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientPlayerStatsResponse.player_stats)
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGCToClientPlayerStatsResponse::player_stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientPlayerStatsResponse.player_stats)
  return player_stats_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGCToClientPlayerStatsResponse::mutable_player_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientPlayerStatsResponse.player_stats)
  return &player_stats_;
}

// optional uint32 match_count = 3;
inline bool CMsgGCToClientPlayerStatsResponse::has_match_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_match_count() {
  match_count_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::match_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.match_count)
  return match_count_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_match_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  match_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.match_count)
}

// optional float mean_gpm = 4;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_gpm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_gpm() {
  mean_gpm_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgGCToClientPlayerStatsResponse::mean_gpm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_gpm)
  return mean_gpm_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_gpm(float value) {
  _has_bits_[0] |= 0x00000004u;
  mean_gpm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_gpm)
}

// optional float mean_xppm = 5;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_xppm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_xppm() {
  mean_xppm_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CMsgGCToClientPlayerStatsResponse::mean_xppm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_xppm)
  return mean_xppm_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_xppm(float value) {
  _has_bits_[0] |= 0x00000008u;
  mean_xppm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_xppm)
}

// optional float mean_lasthits = 6;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_lasthits() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_lasthits() {
  mean_lasthits_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CMsgGCToClientPlayerStatsResponse::mean_lasthits() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_lasthits)
  return mean_lasthits_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_lasthits(float value) {
  _has_bits_[0] |= 0x00000010u;
  mean_lasthits_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_lasthits)
}

// optional uint32 rampages = 7;
inline bool CMsgGCToClientPlayerStatsResponse::has_rampages() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_rampages() {
  rampages_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::rampages() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.rampages)
  return rampages_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_rampages(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  rampages_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.rampages)
}

// optional uint32 triple_kills = 8;
inline bool CMsgGCToClientPlayerStatsResponse::has_triple_kills() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_triple_kills() {
  triple_kills_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::triple_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.triple_kills)
  return triple_kills_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_triple_kills(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  triple_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.triple_kills)
}

// optional uint32 first_blood_claimed = 9;
inline bool CMsgGCToClientPlayerStatsResponse::has_first_blood_claimed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_first_blood_claimed() {
  first_blood_claimed_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::first_blood_claimed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.first_blood_claimed)
  return first_blood_claimed_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_first_blood_claimed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  first_blood_claimed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.first_blood_claimed)
}

// optional uint32 first_blood_given = 10;
inline bool CMsgGCToClientPlayerStatsResponse::has_first_blood_given() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_first_blood_given() {
  first_blood_given_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::first_blood_given() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.first_blood_given)
  return first_blood_given_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_first_blood_given(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  first_blood_given_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.first_blood_given)
}

// optional uint32 couriers_killed = 11;
inline bool CMsgGCToClientPlayerStatsResponse::has_couriers_killed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_couriers_killed() {
  couriers_killed_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::couriers_killed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.couriers_killed)
  return couriers_killed_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_couriers_killed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  couriers_killed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.couriers_killed)
}

// optional uint32 aegises_snatched = 12;
inline bool CMsgGCToClientPlayerStatsResponse::has_aegises_snatched() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_aegises_snatched() {
  aegises_snatched_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::aegises_snatched() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.aegises_snatched)
  return aegises_snatched_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_aegises_snatched(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  aegises_snatched_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.aegises_snatched)
}

// optional uint32 cheeses_eaten = 13;
inline bool CMsgGCToClientPlayerStatsResponse::has_cheeses_eaten() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_cheeses_eaten() {
  cheeses_eaten_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::cheeses_eaten() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.cheeses_eaten)
  return cheeses_eaten_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_cheeses_eaten(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  cheeses_eaten_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.cheeses_eaten)
}

// optional uint32 creeps_stacked = 14;
inline bool CMsgGCToClientPlayerStatsResponse::has_creeps_stacked() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_creeps_stacked() {
  creeps_stacked_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::creeps_stacked() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.creeps_stacked)
  return creeps_stacked_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_creeps_stacked(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  creeps_stacked_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.creeps_stacked)
}

// optional float fight_score = 15;
inline bool CMsgGCToClientPlayerStatsResponse::has_fight_score() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_fight_score() {
  fight_score_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline float CMsgGCToClientPlayerStatsResponse::fight_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.fight_score)
  return fight_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_fight_score(float value) {
  _has_bits_[0] |= 0x00002000u;
  fight_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.fight_score)
}

// optional float farm_score = 16;
inline bool CMsgGCToClientPlayerStatsResponse::has_farm_score() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_farm_score() {
  farm_score_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline float CMsgGCToClientPlayerStatsResponse::farm_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.farm_score)
  return farm_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_farm_score(float value) {
  _has_bits_[0] |= 0x00004000u;
  farm_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.farm_score)
}

// optional float support_score = 17;
inline bool CMsgGCToClientPlayerStatsResponse::has_support_score() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_support_score() {
  support_score_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline float CMsgGCToClientPlayerStatsResponse::support_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.support_score)
  return support_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_support_score(float value) {
  _has_bits_[0] |= 0x00008000u;
  support_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.support_score)
}

// optional float push_score = 18;
inline bool CMsgGCToClientPlayerStatsResponse::has_push_score() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_push_score() {
  push_score_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline float CMsgGCToClientPlayerStatsResponse::push_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.push_score)
  return push_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_push_score(float value) {
  _has_bits_[0] |= 0x00010000u;
  push_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.push_score)
}

// optional float versatility_score = 19;
inline bool CMsgGCToClientPlayerStatsResponse::has_versatility_score() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_versatility_score() {
  versatility_score_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline float CMsgGCToClientPlayerStatsResponse::versatility_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.versatility_score)
  return versatility_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_versatility_score(float value) {
  _has_bits_[0] |= 0x00020000u;
  versatility_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.versatility_score)
}

// optional float mean_networth = 20;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_networth() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_networth() {
  mean_networth_ = 0;
  _has_bits_[0] &= ~0x00040000u;
}
inline float CMsgGCToClientPlayerStatsResponse::mean_networth() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_networth)
  return mean_networth_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_networth(float value) {
  _has_bits_[0] |= 0x00040000u;
  mean_networth_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_networth)
}

// optional float mean_damage = 21;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_damage() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_damage() {
  mean_damage_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline float CMsgGCToClientPlayerStatsResponse::mean_damage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_damage)
  return mean_damage_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_damage(float value) {
  _has_bits_[0] |= 0x00080000u;
  mean_damage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_damage)
}

// optional float mean_heals = 22;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_heals() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_heals() {
  mean_heals_ = 0;
  _has_bits_[0] &= ~0x00100000u;
}
inline float CMsgGCToClientPlayerStatsResponse::mean_heals() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_heals)
  return mean_heals_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_heals(float value) {
  _has_bits_[0] |= 0x00100000u;
  mean_heals_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_heals)
}

// optional uint32 rapiers_purchased = 23;
inline bool CMsgGCToClientPlayerStatsResponse::has_rapiers_purchased() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_rapiers_purchased() {
  rapiers_purchased_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::rapiers_purchased() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.rapiers_purchased)
  return rapiers_purchased_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_rapiers_purchased(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  rapiers_purchased_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.rapiers_purchased)
}

// -------------------------------------------------------------------

// CMsgClientToGCCustomGamePlayerCountRequest

// optional uint64 custom_game_id = 1;
inline bool CMsgClientToGCCustomGamePlayerCountRequest::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::clear_custom_game_id() {
  custom_game_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCCustomGamePlayerCountRequest::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCustomGamePlayerCountRequest.custom_game_id)
  return custom_game_id_;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::set_custom_game_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCustomGamePlayerCountRequest.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientCustomGamePlayerCountResponse

// optional uint64 custom_game_id = 1;
inline bool CMsgGCToClientCustomGamePlayerCountResponse::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_custom_game_id() {
  custom_game_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamePlayerCountResponse::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_custom_game_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse.custom_game_id)
}

// optional uint64 player_count = 2;
inline bool CMsgGCToClientCustomGamePlayerCountResponse::has_player_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_player_count() {
  player_count_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamePlayerCountResponse::player_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse.player_count)
  return player_count_;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_player_count(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  player_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse.player_count)
}

// optional uint64 spectator_count = 3;
inline bool CMsgGCToClientCustomGamePlayerCountResponse::has_spectator_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_spectator_count() {
  spectator_count_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamePlayerCountResponse::spectator_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse.spectator_count)
  return spectator_count_;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_spectator_count(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  spectator_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse.spectator_count)
}

// -------------------------------------------------------------------

// CMsgClientToGCCustomGamesFriendsPlayedRequest

// -------------------------------------------------------------------

// CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame

// optional uint64 custom_game_id = 1;
inline bool CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::clear_custom_game_id() {
  custom_game_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::set_custom_game_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.custom_game_id)
}

// repeated uint32 account_ids = 2;
inline int CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgGCToClientCustomGamesFriendsPlayedResponse

// optional uint32 account_id = 1;
inline bool CMsgGCToClientCustomGamesFriendsPlayedResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientCustomGamesFriendsPlayedResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.account_id)
  return account_id_;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.account_id)
}

// repeated .proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame games = 2;
inline int CMsgGCToClientCustomGamesFriendsPlayedResponse::games_size() const {
  return games_.size();
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::clear_games() {
  games_.Clear();
}
inline ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* CMsgGCToClientCustomGamesFriendsPlayedResponse::mutable_games(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >*
CMsgGCToClientCustomGamesFriendsPlayedResponse::mutable_games() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return &games_;
}
inline const ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& CMsgGCToClientCustomGamesFriendsPlayedResponse::games(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_.Get(index);
}
inline ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* CMsgGCToClientCustomGamesFriendsPlayedResponse::add_games() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >&
CMsgGCToClientCustomGamesFriendsPlayedResponse::games() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialFeedPostCommentRequest

// optional uint64 event_id = 1;
inline bool CMsgClientToGCSocialFeedPostCommentRequest::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_event_id() {
  event_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialFeedPostCommentRequest::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.event_id)
  return event_id_;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_event_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.event_id)
}

// optional string comment = 2;
inline bool CMsgClientToGCSocialFeedPostCommentRequest::has_comment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgClientToGCSocialFeedPostCommentRequest::comment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
  return comment_.GetNoArena();
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
#if LANG_CXX11
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
#endif
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
inline ::std::string* CMsgClientToGCSocialFeedPostCommentRequest::mutable_comment() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCSocialFeedPostCommentRequest::release_comment() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
  if (!has_comment()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return comment_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_allocated_comment(::std::string* comment) {
  if (comment != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialFeedPostCommentResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialFeedPostCommentResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCToClientSocialFeedPostCommentResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialFeedPostCommentResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::set_success(bool value) {
  _has_bits_[0] |= 0x00000001u;
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialFeedPostCommentResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialFeedPostMessageRequest

// optional string message = 1;
inline bool CMsgClientToGCSocialFeedPostMessageRequest::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgClientToGCSocialFeedPostMessageRequest::message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
  return message_.GetNoArena();
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
}
#if LANG_CXX11
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
}
#endif
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
}
inline ::std::string* CMsgClientToGCSocialFeedPostMessageRequest::mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCSocialFeedPostMessageRequest::release_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
  if (!has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_allocated_message(::std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
}

// optional uint64 match_id = 2;
inline bool CMsgClientToGCSocialFeedPostMessageRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialFeedPostMessageRequest::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.match_id)
  return match_id_;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.match_id)
}

// optional uint32 match_timestamp = 3;
inline bool CMsgClientToGCSocialFeedPostMessageRequest::has_match_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_match_timestamp() {
  match_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgClientToGCSocialFeedPostMessageRequest::match_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.match_timestamp)
  return match_timestamp_;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_match_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  match_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.match_timestamp)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialFeedPostMessageResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialFeedPostMessageResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCToClientSocialFeedPostMessageResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialFeedPostMessageResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::set_success(bool value) {
  _has_bits_[0] |= 0x00000001u;
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialFeedPostMessageResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCFriendsPlayedCustomGameRequest

// optional uint64 custom_game_id = 1;
inline bool CMsgClientToGCFriendsPlayedCustomGameRequest::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::clear_custom_game_id() {
  custom_game_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCFriendsPlayedCustomGameRequest::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCFriendsPlayedCustomGameRequest.custom_game_id)
  return custom_game_id_;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::set_custom_game_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCFriendsPlayedCustomGameRequest.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientFriendsPlayedCustomGameResponse

// optional uint64 custom_game_id = 1;
inline bool CMsgGCToClientFriendsPlayedCustomGameResponse::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::clear_custom_game_id() {
  custom_game_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCToClientFriendsPlayedCustomGameResponse::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::set_custom_game_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.custom_game_id)
}

// repeated uint32 account_ids = 2;
inline int CMsgGCToClientFriendsPlayedCustomGameResponse::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToClientFriendsPlayedCustomGameResponse::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToClientFriendsPlayedCustomGameResponse::account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToClientFriendsPlayedCustomGameResponse::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialMatchPostCommentRequest

// optional uint64 match_id = 1;
inline bool CMsgClientToGCSocialMatchPostCommentRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialMatchPostCommentRequest::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.match_id)
  return match_id_;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.match_id)
}

// optional string comment = 2;
inline bool CMsgClientToGCSocialMatchPostCommentRequest::has_comment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgClientToGCSocialMatchPostCommentRequest::comment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
  return comment_.GetNoArena();
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
#if LANG_CXX11
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
#endif
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
inline ::std::string* CMsgClientToGCSocialMatchPostCommentRequest::mutable_comment() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCSocialMatchPostCommentRequest::release_comment() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
  if (!has_comment()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return comment_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_allocated_comment(::std::string* comment) {
  if (comment != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialMatchPostCommentResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialMatchPostCommentResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCToClientSocialMatchPostCommentResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchPostCommentResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::set_success(bool value) {
  _has_bits_[0] |= 0x00000001u;
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialMatchPostCommentResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialMatchDetailsRequest

// optional uint64 match_id = 1;
inline bool CMsgClientToGCSocialMatchDetailsRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialMatchDetailsRequest::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialMatchDetailsRequest.match_id)
  return match_id_;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialMatchDetailsRequest.match_id)
}

// optional uint32 pagination_timestamp = 2;
inline bool CMsgClientToGCSocialMatchDetailsRequest::has_pagination_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_pagination_timestamp() {
  pagination_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCSocialMatchDetailsRequest::pagination_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialMatchDetailsRequest.pagination_timestamp)
  return pagination_timestamp_;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_pagination_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pagination_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialMatchDetailsRequest.pagination_timestamp)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialMatchDetailsResponse_Comment

// optional uint32 account_id = 1;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientSocialMatchDetailsResponse_Comment::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.account_id)
  return account_id_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.account_id)
}

// optional string persona_name = 2;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_persona_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_persona_name() {
  persona_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCToClientSocialMatchDetailsResponse_Comment::persona_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
  return persona_name_.GetNoArena();
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
#if LANG_CXX11
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  persona_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
#endif
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::mutable_persona_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
  return persona_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::release_persona_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
  if (!has_persona_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return persona_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  persona_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}

// optional uint32 timestamp = 3;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientSocialMatchDetailsResponse_Comment::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.timestamp)
  return timestamp_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.timestamp)
}

// optional string comment = 4;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_comment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgGCToClientSocialMatchDetailsResponse_Comment::comment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
  return comment_.GetNoArena();
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
#if LANG_CXX11
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
#endif
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::mutable_comment() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::release_comment() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
  if (!has_comment()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return comment_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_allocated_comment(::std::string* comment) {
  if (comment != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialMatchDetailsResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialMatchDetailsResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCToClientSocialMatchDetailsResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::set_success(bool value) {
  _has_bits_[0] |= 0x00000001u;
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.success)
}

// repeated .proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment comments = 2;
inline int CMsgGCToClientSocialMatchDetailsResponse::comments_size() const {
  return comments_.size();
}
inline void CMsgGCToClientSocialMatchDetailsResponse::clear_comments() {
  comments_.Clear();
}
inline ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment* CMsgGCToClientSocialMatchDetailsResponse::mutable_comments(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment >*
CMsgGCToClientSocialMatchDetailsResponse::mutable_comments() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.comments)
  return &comments_;
}
inline const ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment& CMsgGCToClientSocialMatchDetailsResponse::comments(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_.Get(index);
}
inline ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment* CMsgGCToClientSocialMatchDetailsResponse::add_comments() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment >&
CMsgGCToClientSocialMatchDetailsResponse::comments() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_;
}

// -------------------------------------------------------------------

// CMsgDOTAPartyRichPresence_Member

// optional fixed64 steam_id = 1;
inline bool CMsgDOTAPartyRichPresence_Member::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgDOTAPartyRichPresence_Member::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.Member.steam_id)
  return steam_id_;
}
inline void CMsgDOTAPartyRichPresence_Member::set_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.Member.steam_id)
}

// optional bool coach = 2;
inline bool CMsgDOTAPartyRichPresence_Member::has_coach() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_coach() {
  coach_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgDOTAPartyRichPresence_Member::coach() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.Member.coach)
  return coach_;
}
inline void CMsgDOTAPartyRichPresence_Member::set_coach(bool value) {
  _has_bits_[0] |= 0x00000002u;
  coach_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.Member.coach)
}

// -------------------------------------------------------------------

// CMsgDOTAPartyRichPresence_WeekendTourney

// optional uint32 division = 1;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_division() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_division() {
  division_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::division() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.division)
  return division_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_division(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  division_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.division)
}

// optional uint32 skill_level = 2;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_skill_level() {
  skill_level_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::skill_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.skill_level)
  return skill_level_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_skill_level(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  skill_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.skill_level)
}

// optional uint32 round = 3;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_round() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_round() {
  round_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::round() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.round)
  return round_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_round(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  round_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.round)
}

// optional uint32 tournament_id = 4;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_tournament_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_tournament_id() {
  tournament_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::tournament_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.tournament_id)
  return tournament_id_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_tournament_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  tournament_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.tournament_id)
}

// optional uint32 state_seq_num = 5;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_state_seq_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_state_seq_num() {
  state_seq_num_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::state_seq_num() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.state_seq_num)
  return state_seq_num_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_state_seq_num(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  state_seq_num_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.state_seq_num)
}

// optional .proto.dota.EWeekendTourneyRichPresenceEvent event = 6 [default = k_EWeekendTourneyRichPresenceEvent_None];
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_event() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_event() {
  event_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::proto::dota::EWeekendTourneyRichPresenceEvent CMsgDOTAPartyRichPresence_WeekendTourney::event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.event)
  return static_cast< ::proto::dota::EWeekendTourneyRichPresenceEvent >(event_);
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_event(::proto::dota::EWeekendTourneyRichPresenceEvent value) {
  assert(::proto::dota::EWeekendTourneyRichPresenceEvent_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  event_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.event)
}

// optional uint32 event_round = 7;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_event_round() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_event_round() {
  event_round_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::event_round() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.event_round)
  return event_round_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_event_round(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  event_round_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.event_round)
}

// -------------------------------------------------------------------

// CMsgDOTAPartyRichPresence

// optional fixed64 party_id = 1;
inline bool CMsgDOTAPartyRichPresence::has_party_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPartyRichPresence::clear_party_id() {
  party_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgDOTAPartyRichPresence::party_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.party_id)
  return party_id_;
}
inline void CMsgDOTAPartyRichPresence::set_party_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  party_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.party_id)
}

// optional .proto.dota.CSODOTAParty.State party_state = 2 [default = UI];
inline bool CMsgDOTAPartyRichPresence::has_party_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAPartyRichPresence::clear_party_state() {
  party_state_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::proto::dota::CSODOTAParty_State CMsgDOTAPartyRichPresence::party_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.party_state)
  return static_cast< ::proto::dota::CSODOTAParty_State >(party_state_);
}
inline void CMsgDOTAPartyRichPresence::set_party_state(::proto::dota::CSODOTAParty_State value) {
  assert(::proto::dota::CSODOTAParty_State_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  party_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.party_state)
}

// optional bool open = 3;
inline bool CMsgDOTAPartyRichPresence::has_open() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAPartyRichPresence::clear_open() {
  open_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgDOTAPartyRichPresence::open() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.open)
  return open_;
}
inline void CMsgDOTAPartyRichPresence::set_open(bool value) {
  _has_bits_[0] |= 0x00000010u;
  open_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.open)
}

// optional bool low_priority = 5;
inline bool CMsgDOTAPartyRichPresence::has_low_priority() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAPartyRichPresence::clear_low_priority() {
  low_priority_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CMsgDOTAPartyRichPresence::low_priority() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.low_priority)
  return low_priority_;
}
inline void CMsgDOTAPartyRichPresence::set_low_priority(bool value) {
  _has_bits_[0] |= 0x00000020u;
  low_priority_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.low_priority)
}

// optional uint32 team_id = 7;
inline bool CMsgDOTAPartyRichPresence::has_team_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAPartyRichPresence::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.team_id)
  return team_id_;
}
inline void CMsgDOTAPartyRichPresence::set_team_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.team_id)
}

// optional string team_name = 8;
inline bool CMsgDOTAPartyRichPresence::has_team_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartyRichPresence::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTAPartyRichPresence::team_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.team_name)
  return team_name_.GetNoArena();
}
inline void CMsgDOTAPartyRichPresence::set_team_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.team_name)
}
#if LANG_CXX11
inline void CMsgDOTAPartyRichPresence::set_team_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPartyRichPresence.team_name)
}
#endif
inline void CMsgDOTAPartyRichPresence::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPartyRichPresence.team_name)
}
inline void CMsgDOTAPartyRichPresence::set_team_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPartyRichPresence.team_name)
}
inline ::std::string* CMsgDOTAPartyRichPresence::mutable_team_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPartyRichPresence.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPartyRichPresence::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPartyRichPresence.team_name)
  if (!has_team_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return team_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPartyRichPresence::set_allocated_team_name(::std::string* team_name) {
  if (team_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPartyRichPresence.team_name)
}

// optional uint64 ugc_team_ui_logo = 9;
inline bool CMsgDOTAPartyRichPresence::has_ugc_team_ui_logo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAPartyRichPresence::clear_ugc_team_ui_logo() {
  ugc_team_ui_logo_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint64 CMsgDOTAPartyRichPresence::ugc_team_ui_logo() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.ugc_team_ui_logo)
  return ugc_team_ui_logo_;
}
inline void CMsgDOTAPartyRichPresence::set_ugc_team_ui_logo(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  ugc_team_ui_logo_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.ugc_team_ui_logo)
}

// repeated .proto.dota.CMsgDOTAPartyRichPresence.Member members = 4;
inline int CMsgDOTAPartyRichPresence::members_size() const {
  return members_.size();
}
inline void CMsgDOTAPartyRichPresence::clear_members() {
  members_.Clear();
}
inline ::proto::dota::CMsgDOTAPartyRichPresence_Member* CMsgDOTAPartyRichPresence::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPartyRichPresence.members)
  return members_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAPartyRichPresence_Member >*
CMsgDOTAPartyRichPresence::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAPartyRichPresence.members)
  return &members_;
}
inline const ::proto::dota::CMsgDOTAPartyRichPresence_Member& CMsgDOTAPartyRichPresence::members(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.members)
  return members_.Get(index);
}
inline ::proto::dota::CMsgDOTAPartyRichPresence_Member* CMsgDOTAPartyRichPresence::add_members() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPartyRichPresence.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAPartyRichPresence_Member >&
CMsgDOTAPartyRichPresence::members() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAPartyRichPresence.members)
  return members_;
}

// optional .proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney weekend_tourney = 6;
inline bool CMsgDOTAPartyRichPresence::has_weekend_tourney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPartyRichPresence::clear_weekend_tourney() {
  if (weekend_tourney_ != nullptr) weekend_tourney_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney& CMsgDOTAPartyRichPresence::weekend_tourney() const {
  const ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* p = weekend_tourney_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.weekend_tourney)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney*>(
      &::proto::dota::_CMsgDOTAPartyRichPresence_WeekendTourney_default_instance_);
}
inline ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* CMsgDOTAPartyRichPresence::release_weekend_tourney() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPartyRichPresence.weekend_tourney)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* temp = weekend_tourney_;
  weekend_tourney_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* CMsgDOTAPartyRichPresence::mutable_weekend_tourney() {
  _has_bits_[0] |= 0x00000002u;
  if (weekend_tourney_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney>(GetArenaNoVirtual());
    weekend_tourney_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPartyRichPresence.weekend_tourney)
  return weekend_tourney_;
}
inline void CMsgDOTAPartyRichPresence::set_allocated_weekend_tourney(::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* weekend_tourney) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete weekend_tourney_;
  }
  if (weekend_tourney) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      weekend_tourney = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, weekend_tourney, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  weekend_tourney_ = weekend_tourney;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPartyRichPresence.weekend_tourney)
}

// -------------------------------------------------------------------

// CMsgDOTALobbyRichPresence

// optional fixed64 lobby_id = 1;
inline bool CMsgDOTALobbyRichPresence::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALobbyRichPresence::clear_lobby_id() {
  lobby_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgDOTALobbyRichPresence::lobby_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTALobbyRichPresence::set_lobby_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.lobby_id)
}

// optional .proto.dota.CSODOTALobby.State lobby_state = 2 [default = UI];
inline bool CMsgDOTALobbyRichPresence::has_lobby_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALobbyRichPresence::clear_lobby_state() {
  lobby_state_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::proto::dota::CSODOTALobby_State CMsgDOTALobbyRichPresence::lobby_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.lobby_state)
  return static_cast< ::proto::dota::CSODOTALobby_State >(lobby_state_);
}
inline void CMsgDOTALobbyRichPresence::set_lobby_state(::proto::dota::CSODOTALobby_State value) {
  assert(::proto::dota::CSODOTALobby_State_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  lobby_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.lobby_state)
}

// optional bool password = 3;
inline bool CMsgDOTALobbyRichPresence::has_password() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTALobbyRichPresence::clear_password() {
  password_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgDOTALobbyRichPresence::password() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.password)
  return password_;
}
inline void CMsgDOTALobbyRichPresence::set_password(bool value) {
  _has_bits_[0] |= 0x00000008u;
  password_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.password)
}

// optional .proto.dota.DOTA_GameMode game_mode = 4 [default = DOTA_GAMEMODE_NONE];
inline bool CMsgDOTALobbyRichPresence::has_game_mode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTALobbyRichPresence::clear_game_mode() {
  game_mode_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::proto::dota::DOTA_GameMode CMsgDOTALobbyRichPresence::game_mode() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.game_mode)
  return static_cast< ::proto::dota::DOTA_GameMode >(game_mode_);
}
inline void CMsgDOTALobbyRichPresence::set_game_mode(::proto::dota::DOTA_GameMode value) {
  assert(::proto::dota::DOTA_GameMode_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.game_mode)
}

// optional uint32 member_count = 5;
inline bool CMsgDOTALobbyRichPresence::has_member_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTALobbyRichPresence::clear_member_count() {
  member_count_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgDOTALobbyRichPresence::member_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.member_count)
  return member_count_;
}
inline void CMsgDOTALobbyRichPresence::set_member_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  member_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.member_count)
}

// optional uint32 max_member_count = 6;
inline bool CMsgDOTALobbyRichPresence::has_max_member_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTALobbyRichPresence::clear_max_member_count() {
  max_member_count_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgDOTALobbyRichPresence::max_member_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.max_member_count)
  return max_member_count_;
}
inline void CMsgDOTALobbyRichPresence::set_max_member_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  max_member_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.max_member_count)
}

// optional fixed64 custom_game_id = 7;
inline bool CMsgDOTALobbyRichPresence::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTALobbyRichPresence::clear_custom_game_id() {
  custom_game_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint64 CMsgDOTALobbyRichPresence::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.custom_game_id)
  return custom_game_id_;
}
inline void CMsgDOTALobbyRichPresence::set_custom_game_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.custom_game_id)
}

// optional string name = 8;
inline bool CMsgDOTALobbyRichPresence::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALobbyRichPresence::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTALobbyRichPresence::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.name)
  return name_.GetNoArena();
}
inline void CMsgDOTALobbyRichPresence::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.name)
}
#if LANG_CXX11
inline void CMsgDOTALobbyRichPresence::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTALobbyRichPresence.name)
}
#endif
inline void CMsgDOTALobbyRichPresence::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTALobbyRichPresence.name)
}
inline void CMsgDOTALobbyRichPresence::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTALobbyRichPresence.name)
}
inline ::std::string* CMsgDOTALobbyRichPresence::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTALobbyRichPresence.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTALobbyRichPresence::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTALobbyRichPresence.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTALobbyRichPresence::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTALobbyRichPresence.name)
}

// optional uint32 lobby_type = 9;
inline bool CMsgDOTALobbyRichPresence::has_lobby_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTALobbyRichPresence::clear_lobby_type() {
  lobby_type_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgDOTALobbyRichPresence::lobby_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.lobby_type)
  return lobby_type_;
}
inline void CMsgDOTALobbyRichPresence::set_lobby_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  lobby_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.lobby_type)
}

// -------------------------------------------------------------------

// CMsgDOTACustomGameListenServerStartedLoading

// optional fixed64 lobby_id = 1;
inline bool CMsgDOTACustomGameListenServerStartedLoading::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_lobby_id() {
  lobby_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgDOTACustomGameListenServerStartedLoading::lobby_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_lobby_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_id)
}

// optional uint64 custom_game_id = 2;
inline bool CMsgDOTACustomGameListenServerStartedLoading::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_custom_game_id() {
  custom_game_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgDOTACustomGameListenServerStartedLoading::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.custom_game_id)
  return custom_game_id_;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_custom_game_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.custom_game_id)
}

// repeated uint32 lobby_members = 3;
inline int CMsgDOTACustomGameListenServerStartedLoading::lobby_members_size() const {
  return lobby_members_.size();
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_lobby_members() {
  lobby_members_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameListenServerStartedLoading::lobby_members(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
  return lobby_members_.Get(index);
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_lobby_members(int index, ::google::protobuf::uint32 value) {
  lobby_members_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
}
inline void CMsgDOTACustomGameListenServerStartedLoading::add_lobby_members(::google::protobuf::uint32 value) {
  lobby_members_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTACustomGameListenServerStartedLoading::lobby_members() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
  return lobby_members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTACustomGameListenServerStartedLoading::mutable_lobby_members() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
  return &lobby_members_;
}

// optional uint32 start_time = 4;
inline bool CMsgDOTACustomGameListenServerStartedLoading::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_start_time() {
  start_time_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameListenServerStartedLoading::start_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.start_time)
  return start_time_;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_start_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.start_time)
}

// -------------------------------------------------------------------

// CMsgDOTACustomGameClientFinishedLoading

// optional fixed64 lobby_id = 1;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_lobby_id() {
  lobby_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgDOTACustomGameClientFinishedLoading::lobby_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameClientFinishedLoading.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_lobby_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameClientFinishedLoading.lobby_id)
}

// optional uint32 loading_duration = 2;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_loading_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_loading_duration() {
  loading_duration_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameClientFinishedLoading::loading_duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameClientFinishedLoading.loading_duration)
  return loading_duration_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_loading_duration(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  loading_duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameClientFinishedLoading.loading_duration)
}

// optional sint32 result_code = 3;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_result_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_result_code() {
  result_code_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 CMsgDOTACustomGameClientFinishedLoading::result_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_code)
  return result_code_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_code(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  result_code_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_code)
}

// optional string result_string = 4;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_result_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_result_string() {
  result_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTACustomGameClientFinishedLoading::result_string() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
  return result_string_.GetNoArena();
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
}
#if LANG_CXX11
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  result_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
}
#endif
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::mutable_result_string() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
  return result_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::release_result_string() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
  if (!has_result_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return result_string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_allocated_result_string(::std::string* result_string) {
  if (result_string != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  result_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_string);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
}

// optional uint32 signon_states = 5;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_signon_states() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_signon_states() {
  signon_states_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameClientFinishedLoading::signon_states() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameClientFinishedLoading.signon_states)
  return signon_states_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_signon_states(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  signon_states_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameClientFinishedLoading.signon_states)
}

// optional string comment = 6;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_comment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgDOTACustomGameClientFinishedLoading::comment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
  return comment_.GetNoArena();
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
}
#if LANG_CXX11
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
}
#endif
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::mutable_comment() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::release_comment() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
  if (!has_comment()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return comment_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_allocated_comment(::std::string* comment) {
  if (comment != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
}

// -------------------------------------------------------------------

// CMsgClientToGCApplyGemCombiner

// optional uint64 item_id_1 = 1;
inline bool CMsgClientToGCApplyGemCombiner::has_item_id_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCApplyGemCombiner::clear_item_id_1() {
  item_id_1_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCApplyGemCombiner::item_id_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCApplyGemCombiner.item_id_1)
  return item_id_1_;
}
inline void CMsgClientToGCApplyGemCombiner::set_item_id_1(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCApplyGemCombiner.item_id_1)
}

// optional uint64 item_id_2 = 2;
inline bool CMsgClientToGCApplyGemCombiner::has_item_id_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCApplyGemCombiner::clear_item_id_2() {
  item_id_2_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgClientToGCApplyGemCombiner::item_id_2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCApplyGemCombiner.item_id_2)
  return item_id_2_;
}
inline void CMsgClientToGCApplyGemCombiner::set_item_id_2(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  item_id_2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCApplyGemCombiner.item_id_2)
}

// -------------------------------------------------------------------

// CMsgClientToGCH264Unsupported

// -------------------------------------------------------------------

// CMsgClientToGCRequestH264Support

// -------------------------------------------------------------------

// CMsgClientToGCGetQuestProgress

// repeated uint32 quest_ids = 1;
inline int CMsgClientToGCGetQuestProgress::quest_ids_size() const {
  return quest_ids_.size();
}
inline void CMsgClientToGCGetQuestProgress::clear_quest_ids() {
  quest_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgress::quest_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgress.quest_ids)
  return quest_ids_.Get(index);
}
inline void CMsgClientToGCGetQuestProgress::set_quest_ids(int index, ::google::protobuf::uint32 value) {
  quest_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgress.quest_ids)
}
inline void CMsgClientToGCGetQuestProgress::add_quest_ids(::google::protobuf::uint32 value) {
  quest_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetQuestProgress.quest_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCGetQuestProgress::quest_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetQuestProgress.quest_ids)
  return quest_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCGetQuestProgress::mutable_quest_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetQuestProgress.quest_ids)
  return &quest_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetQuestProgressResponse_Challenge

// optional uint32 challenge_id = 1;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_challenge_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_challenge_id() {
  challenge_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::challenge_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.challenge_id)
  return challenge_id_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_challenge_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  challenge_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.challenge_id)
}

// optional uint32 time_completed = 2;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_time_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_time_completed() {
  time_completed_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::time_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.time_completed)
  return time_completed_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_time_completed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  time_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.time_completed)
}

// optional uint32 attempts = 3;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_attempts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_attempts() {
  attempts_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::attempts() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.attempts)
  return attempts_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_attempts(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  attempts_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.attempts)
}

// optional uint32 hero_id = 4;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.hero_id)
}

// optional uint32 template_id = 5;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_template_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_template_id() {
  template_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::template_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.template_id)
  return template_id_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_template_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  template_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.template_id)
}

// optional uint32 quest_rank = 6;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_quest_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_quest_rank() {
  quest_rank_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::quest_rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.quest_rank)
  return quest_rank_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_quest_rank(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  quest_rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.quest_rank)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetQuestProgressResponse_Quest

// optional uint32 quest_id = 1;
inline bool CMsgClientToGCGetQuestProgressResponse_Quest::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Quest::clear_quest_id() {
  quest_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Quest::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.quest_id)
  return quest_id_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Quest::set_quest_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.quest_id)
}

// repeated .proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge completed_challenges = 2;
inline int CMsgClientToGCGetQuestProgressResponse_Quest::completed_challenges_size() const {
  return completed_challenges_.size();
}
inline void CMsgClientToGCGetQuestProgressResponse_Quest::clear_completed_challenges() {
  completed_challenges_.Clear();
}
inline ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge* CMsgClientToGCGetQuestProgressResponse_Quest::mutable_completed_challenges(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return completed_challenges_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge >*
CMsgClientToGCGetQuestProgressResponse_Quest::mutable_completed_challenges() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return &completed_challenges_;
}
inline const ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge& CMsgClientToGCGetQuestProgressResponse_Quest::completed_challenges(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return completed_challenges_.Get(index);
}
inline ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge* CMsgClientToGCGetQuestProgressResponse_Quest::add_completed_challenges() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return completed_challenges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge >&
CMsgClientToGCGetQuestProgressResponse_Quest::completed_challenges() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return completed_challenges_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetQuestProgressResponse

// optional bool success = 1;
inline bool CMsgClientToGCGetQuestProgressResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCGetQuestProgressResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.success)
  return success_;
}
inline void CMsgClientToGCGetQuestProgressResponse::set_success(bool value) {
  _has_bits_[0] |= 0x00000001u;
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.success)
}

// repeated .proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest quests = 2;
inline int CMsgClientToGCGetQuestProgressResponse::quests_size() const {
  return quests_.size();
}
inline void CMsgClientToGCGetQuestProgressResponse::clear_quests() {
  quests_.Clear();
}
inline ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest* CMsgClientToGCGetQuestProgressResponse::mutable_quests(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetQuestProgressResponse.quests)
  return quests_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest >*
CMsgClientToGCGetQuestProgressResponse::mutable_quests() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetQuestProgressResponse.quests)
  return &quests_;
}
inline const ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest& CMsgClientToGCGetQuestProgressResponse::quests(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.quests)
  return quests_.Get(index);
}
inline ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest* CMsgClientToGCGetQuestProgressResponse::add_quests() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetQuestProgressResponse.quests)
  return quests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest >&
CMsgClientToGCGetQuestProgressResponse::quests() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetQuestProgressResponse.quests)
  return quests_;
}

// -------------------------------------------------------------------

// CMsgGCToClientMatchSignedOut

// optional uint64 match_id = 1;
inline bool CMsgGCToClientMatchSignedOut::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientMatchSignedOut::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCToClientMatchSignedOut::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientMatchSignedOut.match_id)
  return match_id_;
}
inline void CMsgGCToClientMatchSignedOut::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientMatchSignedOut.match_id)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStatsHistory

// optional uint32 hero_id = 1;
inline bool CMsgGCGetHeroStatsHistory::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroStatsHistory::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStatsHistory::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStatsHistory.hero_id)
  return hero_id_;
}
inline void CMsgGCGetHeroStatsHistory::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStatsHistory.hero_id)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStatsHistoryResponse

// optional uint32 hero_id = 1;
inline bool CMsgGCGetHeroStatsHistoryResponse::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroStatsHistoryResponse::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStatsHistoryResponse::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStatsHistoryResponse.hero_id)
  return hero_id_;
}
inline void CMsgGCGetHeroStatsHistoryResponse::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStatsHistoryResponse.hero_id)
}

// repeated .proto.dota.CMsgDOTASDOHeroStatsHistory records = 2;
inline int CMsgGCGetHeroStatsHistoryResponse::records_size() const {
  return records_.size();
}
inline ::proto::dota::CMsgDOTASDOHeroStatsHistory* CMsgGCGetHeroStatsHistoryResponse::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetHeroStatsHistoryResponse.records)
  return records_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTASDOHeroStatsHistory >*
CMsgGCGetHeroStatsHistoryResponse::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCGetHeroStatsHistoryResponse.records)
  return &records_;
}
inline const ::proto::dota::CMsgDOTASDOHeroStatsHistory& CMsgGCGetHeroStatsHistoryResponse::records(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStatsHistoryResponse.records)
  return records_.Get(index);
}
inline ::proto::dota::CMsgDOTASDOHeroStatsHistory* CMsgGCGetHeroStatsHistoryResponse::add_records() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetHeroStatsHistoryResponse.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTASDOHeroStatsHistory >&
CMsgGCGetHeroStatsHistoryResponse::records() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCGetHeroStatsHistoryResponse.records)
  return records_;
}

// -------------------------------------------------------------------

// CMsgPlayerConductScorecardRequest

// -------------------------------------------------------------------

// CMsgPlayerConductScorecard

// optional uint32 account_id = 1;
inline bool CMsgPlayerConductScorecard::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.account_id)
  return account_id_;
}
inline void CMsgPlayerConductScorecard::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.account_id)
}

// optional uint64 match_id = 2;
inline bool CMsgPlayerConductScorecard::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgPlayerConductScorecard::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.match_id)
  return match_id_;
}
inline void CMsgPlayerConductScorecard::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.match_id)
}

// optional uint32 seq_num = 3;
inline bool CMsgPlayerConductScorecard::has_seq_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_seq_num() {
  seq_num_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::seq_num() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.seq_num)
  return seq_num_;
}
inline void CMsgPlayerConductScorecard::set_seq_num(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  seq_num_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.seq_num)
}

// optional uint32 reasons = 4;
inline bool CMsgPlayerConductScorecard::has_reasons() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_reasons() {
  reasons_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::reasons() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.reasons)
  return reasons_;
}
inline void CMsgPlayerConductScorecard::set_reasons(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  reasons_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.reasons)
}

// optional uint32 matches_in_report = 5;
inline bool CMsgPlayerConductScorecard::has_matches_in_report() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_matches_in_report() {
  matches_in_report_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::matches_in_report() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.matches_in_report)
  return matches_in_report_;
}
inline void CMsgPlayerConductScorecard::set_matches_in_report(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  matches_in_report_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.matches_in_report)
}

// optional uint32 matches_clean = 6;
inline bool CMsgPlayerConductScorecard::has_matches_clean() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_matches_clean() {
  matches_clean_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::matches_clean() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.matches_clean)
  return matches_clean_;
}
inline void CMsgPlayerConductScorecard::set_matches_clean(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  matches_clean_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.matches_clean)
}

// optional uint32 matches_reported = 7;
inline bool CMsgPlayerConductScorecard::has_matches_reported() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_matches_reported() {
  matches_reported_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::matches_reported() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.matches_reported)
  return matches_reported_;
}
inline void CMsgPlayerConductScorecard::set_matches_reported(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  matches_reported_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.matches_reported)
}

// optional uint32 matches_abandoned = 8;
inline bool CMsgPlayerConductScorecard::has_matches_abandoned() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_matches_abandoned() {
  matches_abandoned_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::matches_abandoned() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.matches_abandoned)
  return matches_abandoned_;
}
inline void CMsgPlayerConductScorecard::set_matches_abandoned(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  matches_abandoned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.matches_abandoned)
}

// optional uint32 reports_count = 9;
inline bool CMsgPlayerConductScorecard::has_reports_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_reports_count() {
  reports_count_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::reports_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.reports_count)
  return reports_count_;
}
inline void CMsgPlayerConductScorecard::set_reports_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  reports_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.reports_count)
}

// optional uint32 reports_parties = 10;
inline bool CMsgPlayerConductScorecard::has_reports_parties() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_reports_parties() {
  reports_parties_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::reports_parties() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.reports_parties)
  return reports_parties_;
}
inline void CMsgPlayerConductScorecard::set_reports_parties(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  reports_parties_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.reports_parties)
}

// optional uint32 commend_count = 11;
inline bool CMsgPlayerConductScorecard::has_commend_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_commend_count() {
  commend_count_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::commend_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.commend_count)
  return commend_count_;
}
inline void CMsgPlayerConductScorecard::set_commend_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  commend_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.commend_count)
}

// optional uint32 date = 14;
inline bool CMsgPlayerConductScorecard::has_date() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_date() {
  date_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::date() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.date)
  return date_;
}
inline void CMsgPlayerConductScorecard::set_date(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  date_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.date)
}

// optional uint32 behavior_grade = 15;
inline bool CMsgPlayerConductScorecard::has_behavior_grade() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_behavior_grade() {
  behavior_grade_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::behavior_grade() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.behavior_grade)
  return behavior_grade_;
}
inline void CMsgPlayerConductScorecard::set_behavior_grade(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  behavior_grade_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.behavior_grade)
}

// optional uint32 old_behavior_grade = 16;
inline bool CMsgPlayerConductScorecard::has_old_behavior_grade() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_old_behavior_grade() {
  old_behavior_grade_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::old_behavior_grade() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.old_behavior_grade)
  return old_behavior_grade_;
}
inline void CMsgPlayerConductScorecard::set_old_behavior_grade(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  old_behavior_grade_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.old_behavior_grade)
}

// optional uint32 raw_behavior_score = 17;
inline bool CMsgPlayerConductScorecard::has_raw_behavior_score() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_raw_behavior_score() {
  raw_behavior_score_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::raw_behavior_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.raw_behavior_score)
  return raw_behavior_score_;
}
inline void CMsgPlayerConductScorecard::set_raw_behavior_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  raw_behavior_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.raw_behavior_score)
}

// optional uint32 old_raw_behavior_score = 18;
inline bool CMsgPlayerConductScorecard::has_old_raw_behavior_score() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgPlayerConductScorecard::clear_old_raw_behavior_score() {
  old_raw_behavior_score_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::old_raw_behavior_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.old_raw_behavior_score)
  return old_raw_behavior_score_;
}
inline void CMsgPlayerConductScorecard::set_old_raw_behavior_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  old_raw_behavior_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.old_raw_behavior_score)
}

// -------------------------------------------------------------------

// CMsgClientToGCWageringRequest

// optional uint32 event_id = 1;
inline bool CMsgClientToGCWageringRequest::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCWageringRequest::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCWageringRequest::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCWageringRequest.event_id)
  return event_id_;
}
inline void CMsgClientToGCWageringRequest::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCWageringRequest.event_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientWageringResponse

// optional uint32 coins_remaining = 1;
inline bool CMsgGCToClientWageringResponse::has_coins_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientWageringResponse::clear_coins_remaining() {
  coins_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::coins_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.coins_remaining)
  return coins_remaining_;
}
inline void CMsgGCToClientWageringResponse::set_coins_remaining(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  coins_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.coins_remaining)
}

// optional uint32 total_points_won = 2;
inline bool CMsgGCToClientWageringResponse::has_total_points_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientWageringResponse::clear_total_points_won() {
  total_points_won_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::total_points_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.total_points_won)
  return total_points_won_;
}
inline void CMsgGCToClientWageringResponse::set_total_points_won(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_points_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.total_points_won)
}

// optional uint32 total_points_wagered = 3;
inline bool CMsgGCToClientWageringResponse::has_total_points_wagered() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientWageringResponse::clear_total_points_wagered() {
  total_points_wagered_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::total_points_wagered() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.total_points_wagered)
  return total_points_wagered_;
}
inline void CMsgGCToClientWageringResponse::set_total_points_wagered(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  total_points_wagered_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.total_points_wagered)
}

// optional uint32 total_points_tipped = 4;
inline bool CMsgGCToClientWageringResponse::has_total_points_tipped() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientWageringResponse::clear_total_points_tipped() {
  total_points_tipped_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::total_points_tipped() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.total_points_tipped)
  return total_points_tipped_;
}
inline void CMsgGCToClientWageringResponse::set_total_points_tipped(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  total_points_tipped_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.total_points_tipped)
}

// optional uint32 success_rate = 5;
inline bool CMsgGCToClientWageringResponse::has_success_rate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientWageringResponse::clear_success_rate() {
  success_rate_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::success_rate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.success_rate)
  return success_rate_;
}
inline void CMsgGCToClientWageringResponse::set_success_rate(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  success_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.success_rate)
}

// optional uint32 total_games_wagered = 6;
inline bool CMsgGCToClientWageringResponse::has_total_games_wagered() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientWageringResponse::clear_total_games_wagered() {
  total_games_wagered_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::total_games_wagered() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.total_games_wagered)
  return total_games_wagered_;
}
inline void CMsgGCToClientWageringResponse::set_total_games_wagered(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  total_games_wagered_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.total_games_wagered)
}

// optional uint32 coins_max = 7;
inline bool CMsgGCToClientWageringResponse::has_coins_max() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientWageringResponse::clear_coins_max() {
  coins_max_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::coins_max() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.coins_max)
  return coins_max_;
}
inline void CMsgGCToClientWageringResponse::set_coins_max(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  coins_max_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.coins_max)
}

// optional uint32 rank_wagers_remaining = 8;
inline bool CMsgGCToClientWageringResponse::has_rank_wagers_remaining() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCToClientWageringResponse::clear_rank_wagers_remaining() {
  rank_wagers_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::rank_wagers_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.rank_wagers_remaining)
  return rank_wagers_remaining_;
}
inline void CMsgGCToClientWageringResponse::set_rank_wagers_remaining(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  rank_wagers_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.rank_wagers_remaining)
}

// optional uint32 rank_wagers_max = 9;
inline bool CMsgGCToClientWageringResponse::has_rank_wagers_max() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGCToClientWageringResponse::clear_rank_wagers_max() {
  rank_wagers_max_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::rank_wagers_max() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.rank_wagers_max)
  return rank_wagers_max_;
}
inline void CMsgGCToClientWageringResponse::set_rank_wagers_max(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  rank_wagers_max_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.rank_wagers_max)
}

// optional uint32 prediction_tokens_remaining = 10;
inline bool CMsgGCToClientWageringResponse::has_prediction_tokens_remaining() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGCToClientWageringResponse::clear_prediction_tokens_remaining() {
  prediction_tokens_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::prediction_tokens_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.prediction_tokens_remaining)
  return prediction_tokens_remaining_;
}
inline void CMsgGCToClientWageringResponse::set_prediction_tokens_remaining(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  prediction_tokens_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.prediction_tokens_remaining)
}

// optional uint32 prediction_tokens_max = 11;
inline bool CMsgGCToClientWageringResponse::has_prediction_tokens_max() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGCToClientWageringResponse::clear_prediction_tokens_max() {
  prediction_tokens_max_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::prediction_tokens_max() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.prediction_tokens_max)
  return prediction_tokens_max_;
}
inline void CMsgGCToClientWageringResponse::set_prediction_tokens_max(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  prediction_tokens_max_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.prediction_tokens_max)
}

// -------------------------------------------------------------------

// CMsgGCToClientWageringUpdate

// optional uint32 event_id = 1;
inline bool CMsgGCToClientWageringUpdate::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientWageringUpdate::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringUpdate::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringUpdate.event_id)
  return event_id_;
}
inline void CMsgGCToClientWageringUpdate::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringUpdate.event_id)
}

// optional .proto.dota.CMsgGCToClientWageringResponse wagering_info = 2;
inline bool CMsgGCToClientWageringUpdate::has_wagering_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientWageringUpdate::clear_wagering_info() {
  if (wagering_info_ != nullptr) wagering_info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgGCToClientWageringResponse& CMsgGCToClientWageringUpdate::wagering_info() const {
  const ::proto::dota::CMsgGCToClientWageringResponse* p = wagering_info_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringUpdate.wagering_info)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientWageringResponse*>(
      &::proto::dota::_CMsgGCToClientWageringResponse_default_instance_);
}
inline ::proto::dota::CMsgGCToClientWageringResponse* CMsgGCToClientWageringUpdate::release_wagering_info() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientWageringUpdate.wagering_info)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgGCToClientWageringResponse* temp = wagering_info_;
  wagering_info_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientWageringResponse* CMsgGCToClientWageringUpdate::mutable_wagering_info() {
  _has_bits_[0] |= 0x00000001u;
  if (wagering_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientWageringResponse>(GetArenaNoVirtual());
    wagering_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientWageringUpdate.wagering_info)
  return wagering_info_;
}
inline void CMsgGCToClientWageringUpdate::set_allocated_wagering_info(::proto::dota::CMsgGCToClientWageringResponse* wagering_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete wagering_info_;
  }
  if (wagering_info) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      wagering_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wagering_info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  wagering_info_ = wagering_info;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientWageringUpdate.wagering_info)
}

// -------------------------------------------------------------------

// CMsgGCToClientArcanaVotesUpdate

// optional uint32 event_id = 1;
inline bool CMsgGCToClientArcanaVotesUpdate::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientArcanaVotesUpdate::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientArcanaVotesUpdate::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientArcanaVotesUpdate.event_id)
  return event_id_;
}
inline void CMsgGCToClientArcanaVotesUpdate::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientArcanaVotesUpdate.event_id)
}

// optional .proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse arcana_votes = 2;
inline bool CMsgGCToClientArcanaVotesUpdate::has_arcana_votes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientArcanaVotesUpdate::clear_arcana_votes() {
  if (arcana_votes_ != nullptr) arcana_votes_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse& CMsgGCToClientArcanaVotesUpdate::arcana_votes() const {
  const ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* p = arcana_votes_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientArcanaVotesUpdate.arcana_votes)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse*>(
      &::proto::dota::_CMsgClientToGCRequestArcanaVotesRemainingResponse_default_instance_);
}
inline ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* CMsgGCToClientArcanaVotesUpdate::release_arcana_votes() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientArcanaVotesUpdate.arcana_votes)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* temp = arcana_votes_;
  arcana_votes_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* CMsgGCToClientArcanaVotesUpdate::mutable_arcana_votes() {
  _has_bits_[0] |= 0x00000001u;
  if (arcana_votes_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse>(GetArenaNoVirtual());
    arcana_votes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientArcanaVotesUpdate.arcana_votes)
  return arcana_votes_;
}
inline void CMsgGCToClientArcanaVotesUpdate::set_allocated_arcana_votes(::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* arcana_votes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete arcana_votes_;
  }
  if (arcana_votes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      arcana_votes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arcana_votes, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  arcana_votes_ = arcana_votes;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientArcanaVotesUpdate.arcana_votes)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetEventGoals

// repeated .proto.dota.EEvent event_ids = 1;
inline int CMsgClientToGCGetEventGoals::event_ids_size() const {
  return event_ids_.size();
}
inline void CMsgClientToGCGetEventGoals::clear_event_ids() {
  event_ids_.Clear();
}
inline ::proto::dota::EEvent CMsgClientToGCGetEventGoals::event_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetEventGoals.event_ids)
  return static_cast< ::proto::dota::EEvent >(event_ids_.Get(index));
}
inline void CMsgClientToGCGetEventGoals::set_event_ids(int index, ::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  event_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetEventGoals.event_ids)
}
inline void CMsgClientToGCGetEventGoals::add_event_ids(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  event_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetEventGoals.event_ids)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgClientToGCGetEventGoals::event_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetEventGoals.event_ids)
  return event_ids_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgClientToGCGetEventGoals::mutable_event_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetEventGoals.event_ids)
  return &event_ids_;
}

// -------------------------------------------------------------------

// CMsgEventGoals_EventGoal

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgEventGoals_EventGoal::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgEventGoals_EventGoal::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgEventGoals_EventGoal::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventGoals.EventGoal.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgEventGoals_EventGoal::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEventGoals.EventGoal.event_id)
}

// optional uint32 goal_id = 2;
inline bool CMsgEventGoals_EventGoal::has_goal_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgEventGoals_EventGoal::clear_goal_id() {
  goal_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgEventGoals_EventGoal::goal_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventGoals.EventGoal.goal_id)
  return goal_id_;
}
inline void CMsgEventGoals_EventGoal::set_goal_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  goal_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEventGoals.EventGoal.goal_id)
}

// optional uint64 value = 3;
inline bool CMsgEventGoals_EventGoal::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgEventGoals_EventGoal::clear_value() {
  value_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgEventGoals_EventGoal::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventGoals.EventGoal.value)
  return value_;
}
inline void CMsgEventGoals_EventGoal::set_value(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEventGoals.EventGoal.value)
}

// -------------------------------------------------------------------

// CMsgEventGoals

// repeated .proto.dota.CMsgEventGoals.EventGoal event_goals = 1;
inline int CMsgEventGoals::event_goals_size() const {
  return event_goals_.size();
}
inline void CMsgEventGoals::clear_event_goals() {
  event_goals_.Clear();
}
inline ::proto::dota::CMsgEventGoals_EventGoal* CMsgEventGoals::mutable_event_goals(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgEventGoals.event_goals)
  return event_goals_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventGoals_EventGoal >*
CMsgEventGoals::mutable_event_goals() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgEventGoals.event_goals)
  return &event_goals_;
}
inline const ::proto::dota::CMsgEventGoals_EventGoal& CMsgEventGoals::event_goals(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventGoals.event_goals)
  return event_goals_.Get(index);
}
inline ::proto::dota::CMsgEventGoals_EventGoal* CMsgEventGoals::add_event_goals() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgEventGoals.event_goals)
  return event_goals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventGoals_EventGoal >&
CMsgEventGoals::event_goals() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgEventGoals.event_goals)
  return event_goals_;
}

// -------------------------------------------------------------------

// CMsgGCToGCLeaguePredictions

// optional uint32 league_id = 1;
inline bool CMsgGCToGCLeaguePredictions::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToGCLeaguePredictions::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToGCLeaguePredictions::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCLeaguePredictions.league_id)
  return league_id_;
}
inline void CMsgGCToGCLeaguePredictions::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCLeaguePredictions.league_id)
}

// -------------------------------------------------------------------

// CMsgPredictionRankings_PredictionLine

// optional uint32 answer_id = 1;
inline bool CMsgPredictionRankings_PredictionLine::has_answer_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPredictionRankings_PredictionLine::clear_answer_id() {
  answer_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgPredictionRankings_PredictionLine::answer_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.PredictionLine.answer_id)
  return answer_id_;
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  answer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionRankings.PredictionLine.answer_id)
}

// optional string answer_name = 2;
inline bool CMsgPredictionRankings_PredictionLine::has_answer_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPredictionRankings_PredictionLine::clear_answer_name() {
  answer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgPredictionRankings_PredictionLine::answer_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
  return answer_name_.GetNoArena();
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  answer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
}
#if LANG_CXX11
inline void CMsgPredictionRankings_PredictionLine::set_answer_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  answer_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
}
#endif
inline void CMsgPredictionRankings_PredictionLine::set_answer_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  answer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  answer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
}
inline ::std::string* CMsgPredictionRankings_PredictionLine::mutable_answer_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
  return answer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgPredictionRankings_PredictionLine::release_answer_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
  if (!has_answer_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return answer_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgPredictionRankings_PredictionLine::set_allocated_answer_name(::std::string* answer_name) {
  if (answer_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  answer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), answer_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
}

// optional uint64 answer_logo = 3;
inline bool CMsgPredictionRankings_PredictionLine::has_answer_logo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPredictionRankings_PredictionLine::clear_answer_logo() {
  answer_logo_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CMsgPredictionRankings_PredictionLine::answer_logo() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.PredictionLine.answer_logo)
  return answer_logo_;
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_logo(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  answer_logo_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionRankings.PredictionLine.answer_logo)
}

// optional float answer_value = 4;
inline bool CMsgPredictionRankings_PredictionLine::has_answer_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPredictionRankings_PredictionLine::clear_answer_value() {
  answer_value_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgPredictionRankings_PredictionLine::answer_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.PredictionLine.answer_value)
  return answer_value_;
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_value(float value) {
  _has_bits_[0] |= 0x00000004u;
  answer_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionRankings.PredictionLine.answer_value)
}

// -------------------------------------------------------------------

// CMsgPredictionRankings_Prediction

// optional uint32 selection_id = 1;
inline bool CMsgPredictionRankings_Prediction::has_selection_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPredictionRankings_Prediction::clear_selection_id() {
  selection_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgPredictionRankings_Prediction::selection_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.Prediction.selection_id)
  return selection_id_;
}
inline void CMsgPredictionRankings_Prediction::set_selection_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  selection_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionRankings.Prediction.selection_id)
}

// repeated .proto.dota.CMsgPredictionRankings.PredictionLine prediction_lines = 2;
inline int CMsgPredictionRankings_Prediction::prediction_lines_size() const {
  return prediction_lines_.size();
}
inline void CMsgPredictionRankings_Prediction::clear_prediction_lines() {
  prediction_lines_.Clear();
}
inline ::proto::dota::CMsgPredictionRankings_PredictionLine* CMsgPredictionRankings_Prediction::mutable_prediction_lines(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgPredictionRankings.Prediction.prediction_lines)
  return prediction_lines_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_PredictionLine >*
CMsgPredictionRankings_Prediction::mutable_prediction_lines() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgPredictionRankings.Prediction.prediction_lines)
  return &prediction_lines_;
}
inline const ::proto::dota::CMsgPredictionRankings_PredictionLine& CMsgPredictionRankings_Prediction::prediction_lines(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.Prediction.prediction_lines)
  return prediction_lines_.Get(index);
}
inline ::proto::dota::CMsgPredictionRankings_PredictionLine* CMsgPredictionRankings_Prediction::add_prediction_lines() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgPredictionRankings.Prediction.prediction_lines)
  return prediction_lines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_PredictionLine >&
CMsgPredictionRankings_Prediction::prediction_lines() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgPredictionRankings.Prediction.prediction_lines)
  return prediction_lines_;
}

// -------------------------------------------------------------------

// CMsgPredictionRankings

// repeated .proto.dota.CMsgPredictionRankings.Prediction predictions = 1;
inline int CMsgPredictionRankings::predictions_size() const {
  return predictions_.size();
}
inline void CMsgPredictionRankings::clear_predictions() {
  predictions_.Clear();
}
inline ::proto::dota::CMsgPredictionRankings_Prediction* CMsgPredictionRankings::mutable_predictions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgPredictionRankings.predictions)
  return predictions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_Prediction >*
CMsgPredictionRankings::mutable_predictions() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgPredictionRankings.predictions)
  return &predictions_;
}
inline const ::proto::dota::CMsgPredictionRankings_Prediction& CMsgPredictionRankings::predictions(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.predictions)
  return predictions_.Get(index);
}
inline ::proto::dota::CMsgPredictionRankings_Prediction* CMsgPredictionRankings::add_predictions() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgPredictionRankings.predictions)
  return predictions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_Prediction >&
CMsgPredictionRankings::predictions() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgPredictionRankings.predictions)
  return predictions_;
}

// -------------------------------------------------------------------

// CMsgPredictionResults_ResultBreakdown

// optional uint32 answer_selection = 2;
inline bool CMsgPredictionResults_ResultBreakdown::has_answer_selection() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPredictionResults_ResultBreakdown::clear_answer_selection() {
  answer_selection_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgPredictionResults_ResultBreakdown::answer_selection() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionResults.ResultBreakdown.answer_selection)
  return answer_selection_;
}
inline void CMsgPredictionResults_ResultBreakdown::set_answer_selection(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  answer_selection_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionResults.ResultBreakdown.answer_selection)
}

// optional float answer_value = 3;
inline bool CMsgPredictionResults_ResultBreakdown::has_answer_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPredictionResults_ResultBreakdown::clear_answer_value() {
  answer_value_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgPredictionResults_ResultBreakdown::answer_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionResults.ResultBreakdown.answer_value)
  return answer_value_;
}
inline void CMsgPredictionResults_ResultBreakdown::set_answer_value(float value) {
  _has_bits_[0] |= 0x00000002u;
  answer_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionResults.ResultBreakdown.answer_value)
}

// -------------------------------------------------------------------

// CMsgPredictionResults_Result

// optional uint32 selection_id = 1;
inline bool CMsgPredictionResults_Result::has_selection_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPredictionResults_Result::clear_selection_id() {
  selection_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgPredictionResults_Result::selection_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionResults.Result.selection_id)
  return selection_id_;
}
inline void CMsgPredictionResults_Result::set_selection_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  selection_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionResults.Result.selection_id)
}

// repeated .proto.dota.CMsgPredictionResults.ResultBreakdown result_breakdown = 2;
inline int CMsgPredictionResults_Result::result_breakdown_size() const {
  return result_breakdown_.size();
}
inline void CMsgPredictionResults_Result::clear_result_breakdown() {
  result_breakdown_.Clear();
}
inline ::proto::dota::CMsgPredictionResults_ResultBreakdown* CMsgPredictionResults_Result::mutable_result_breakdown(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgPredictionResults.Result.result_breakdown)
  return result_breakdown_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_ResultBreakdown >*
CMsgPredictionResults_Result::mutable_result_breakdown() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgPredictionResults.Result.result_breakdown)
  return &result_breakdown_;
}
inline const ::proto::dota::CMsgPredictionResults_ResultBreakdown& CMsgPredictionResults_Result::result_breakdown(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionResults.Result.result_breakdown)
  return result_breakdown_.Get(index);
}
inline ::proto::dota::CMsgPredictionResults_ResultBreakdown* CMsgPredictionResults_Result::add_result_breakdown() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgPredictionResults.Result.result_breakdown)
  return result_breakdown_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_ResultBreakdown >&
CMsgPredictionResults_Result::result_breakdown() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgPredictionResults.Result.result_breakdown)
  return result_breakdown_;
}

// -------------------------------------------------------------------

// CMsgPredictionResults

// repeated .proto.dota.CMsgPredictionResults.Result results = 1;
inline int CMsgPredictionResults::results_size() const {
  return results_.size();
}
inline void CMsgPredictionResults::clear_results() {
  results_.Clear();
}
inline ::proto::dota::CMsgPredictionResults_Result* CMsgPredictionResults::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgPredictionResults.results)
  return results_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_Result >*
CMsgPredictionResults::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgPredictionResults.results)
  return &results_;
}
inline const ::proto::dota::CMsgPredictionResults_Result& CMsgPredictionResults::results(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionResults.results)
  return results_.Get(index);
}
inline ::proto::dota::CMsgPredictionResults_Result* CMsgPredictionResults::add_results() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgPredictionResults.results)
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_Result >&
CMsgPredictionResults::results() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgPredictionResults.results)
  return results_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSuspiciousActivity

// optional uint64 app_data = 1;
inline bool CMsgClientToGCSuspiciousActivity::has_app_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSuspiciousActivity::clear_app_data() {
  app_data_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCSuspiciousActivity::app_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSuspiciousActivity.app_data)
  return app_data_;
}
inline void CMsgClientToGCSuspiciousActivity::set_app_data(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  app_data_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSuspiciousActivity.app_data)
}

// -------------------------------------------------------------------

// CMsgClientToGCHasPlayerVotedForMVP

// optional uint64 match_id = 1;
inline bool CMsgClientToGCHasPlayerVotedForMVP::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCHasPlayerVotedForMVP::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCHasPlayerVotedForMVP::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCHasPlayerVotedForMVP.match_id)
  return match_id_;
}
inline void CMsgClientToGCHasPlayerVotedForMVP::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCHasPlayerVotedForMVP.match_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCHasPlayerVotedForMVPResponse

// optional bool result = 1;
inline bool CMsgClientToGCHasPlayerVotedForMVPResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCHasPlayerVotedForMVPResponse::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCHasPlayerVotedForMVPResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCHasPlayerVotedForMVPResponse.result)
  return result_;
}
inline void CMsgClientToGCHasPlayerVotedForMVPResponse::set_result(bool value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCHasPlayerVotedForMVPResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForMVP

// optional uint64 match_id = 1;
inline bool CMsgClientToGCVoteForMVP::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCVoteForMVP::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCVoteForMVP::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForMVP.match_id)
  return match_id_;
}
inline void CMsgClientToGCVoteForMVP::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForMVP.match_id)
}

// optional uint32 account_id = 3;
inline bool CMsgClientToGCVoteForMVP::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCVoteForMVP::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCVoteForMVP::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForMVP.account_id)
  return account_id_;
}
inline void CMsgClientToGCVoteForMVP::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForMVP.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForMVPResponse

// optional bool result = 1;
inline bool CMsgClientToGCVoteForMVPResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCVoteForMVPResponse::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCVoteForMVPResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForMVPResponse.result)
  return result_;
}
inline void CMsgClientToGCVoteForMVPResponse::set_result(bool value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForMVPResponse.result)
}

// -------------------------------------------------------------------

// CMsgMVPVotesForMatch_Player

// optional uint32 account_id = 1;
inline bool CMsgMVPVotesForMatch_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMVPVotesForMatch_Player::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgMVPVotesForMatch_Player::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMVPVotesForMatch.Player.account_id)
  return account_id_;
}
inline void CMsgMVPVotesForMatch_Player::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMVPVotesForMatch.Player.account_id)
}

// optional uint32 vote_count = 2;
inline bool CMsgMVPVotesForMatch_Player::has_vote_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMVPVotesForMatch_Player::clear_vote_count() {
  vote_count_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgMVPVotesForMatch_Player::vote_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMVPVotesForMatch.Player.vote_count)
  return vote_count_;
}
inline void CMsgMVPVotesForMatch_Player::set_vote_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  vote_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMVPVotesForMatch.Player.vote_count)
}

// -------------------------------------------------------------------

// CMsgMVPVotesForMatch

// repeated .proto.dota.CMsgMVPVotesForMatch.Player players = 1;
inline int CMsgMVPVotesForMatch::players_size() const {
  return players_.size();
}
inline void CMsgMVPVotesForMatch::clear_players() {
  players_.Clear();
}
inline ::proto::dota::CMsgMVPVotesForMatch_Player* CMsgMVPVotesForMatch::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgMVPVotesForMatch.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMVPVotesForMatch_Player >*
CMsgMVPVotesForMatch::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgMVPVotesForMatch.players)
  return &players_;
}
inline const ::proto::dota::CMsgMVPVotesForMatch_Player& CMsgMVPVotesForMatch::players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMVPVotesForMatch.players)
  return players_.Get(index);
}
inline ::proto::dota::CMsgMVPVotesForMatch_Player* CMsgMVPVotesForMatch::add_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgMVPVotesForMatch.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMVPVotesForMatch_Player >&
CMsgMVPVotesForMatch::players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgMVPVotesForMatch.players)
  return players_;
}

// -------------------------------------------------------------------

// CMsgClientToGCTeammateStatsRequest

// -------------------------------------------------------------------

// CMsgClientToGCTeammateStatsResponse_TeammateStat

// optional uint32 account_id = 1;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCTeammateStatsResponse_TeammateStat::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.account_id)
  return account_id_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.account_id)
}

// optional uint32 games = 2;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_games() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_games() {
  games_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCTeammateStatsResponse_TeammateStat::games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.games)
  return games_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_games(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.games)
}

// optional uint32 wins = 3;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_wins() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_wins() {
  wins_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgClientToGCTeammateStatsResponse_TeammateStat::wins() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.wins)
  return wins_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_wins(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  wins_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.wins)
}

// optional uint32 most_recent_game_timestamp = 4;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_most_recent_game_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_most_recent_game_timestamp() {
  most_recent_game_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgClientToGCTeammateStatsResponse_TeammateStat::most_recent_game_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.most_recent_game_timestamp)
  return most_recent_game_timestamp_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_most_recent_game_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  most_recent_game_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.most_recent_game_timestamp)
}

// optional uint64 most_recent_game_match_id = 5;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_most_recent_game_match_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_most_recent_game_match_id() {
  most_recent_game_match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 CMsgClientToGCTeammateStatsResponse_TeammateStat::most_recent_game_match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.most_recent_game_match_id)
  return most_recent_game_match_id_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_most_recent_game_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  most_recent_game_match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.most_recent_game_match_id)
}

// optional float performance = 100;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_performance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_performance() {
  performance_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float CMsgClientToGCTeammateStatsResponse_TeammateStat::performance() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.performance)
  return performance_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_performance(float value) {
  _has_bits_[0] |= 0x00000020u;
  performance_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.performance)
}

// -------------------------------------------------------------------

// CMsgClientToGCTeammateStatsResponse

// optional bool success = 1;
inline bool CMsgClientToGCTeammateStatsResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCTeammateStatsResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.success)
  return success_;
}
inline void CMsgClientToGCTeammateStatsResponse::set_success(bool value) {
  _has_bits_[0] |= 0x00000001u;
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.success)
}

// repeated .proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat teammate_stats = 2;
inline int CMsgClientToGCTeammateStatsResponse::teammate_stats_size() const {
  return teammate_stats_.size();
}
inline void CMsgClientToGCTeammateStatsResponse::clear_teammate_stats() {
  teammate_stats_.Clear();
}
inline ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat* CMsgClientToGCTeammateStatsResponse::mutable_teammate_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return teammate_stats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat >*
CMsgClientToGCTeammateStatsResponse::mutable_teammate_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return &teammate_stats_;
}
inline const ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat& CMsgClientToGCTeammateStatsResponse::teammate_stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return teammate_stats_.Get(index);
}
inline ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat* CMsgClientToGCTeammateStatsResponse::add_teammate_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return teammate_stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat >&
CMsgClientToGCTeammateStatsResponse::teammate_stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return teammate_stats_;
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForArcana_MatchVote

// optional uint64 match_id = 1;
inline bool CMsgClientToGCVoteForArcana_MatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCVoteForArcana_MatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForArcana.MatchVote.match_id)
  return match_id_;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForArcana.MatchVote.match_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgClientToGCVoteForArcana_MatchVote::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCVoteForArcana_MatchVote::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForArcana.MatchVote.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForArcana.MatchVote.hero_id)
}

// optional uint32 vote_count = 3;
inline bool CMsgClientToGCVoteForArcana_MatchVote::has_vote_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_vote_count() {
  vote_count_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgClientToGCVoteForArcana_MatchVote::vote_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForArcana.MatchVote.vote_count)
  return vote_count_;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_vote_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  vote_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForArcana.MatchVote.vote_count)
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForArcana

// repeated .proto.dota.CMsgClientToGCVoteForArcana.MatchVote matches = 1;
inline int CMsgClientToGCVoteForArcana::matches_size() const {
  return matches_.size();
}
inline void CMsgClientToGCVoteForArcana::clear_matches() {
  matches_.Clear();
}
inline ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote* CMsgClientToGCVoteForArcana::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCVoteForArcana.matches)
  return matches_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote >*
CMsgClientToGCVoteForArcana::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCVoteForArcana.matches)
  return &matches_;
}
inline const ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote& CMsgClientToGCVoteForArcana::matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForArcana.matches)
  return matches_.Get(index);
}
inline ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote* CMsgClientToGCVoteForArcana::add_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCVoteForArcana.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote >&
CMsgClientToGCVoteForArcana::matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCVoteForArcana.matches)
  return matches_;
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForArcanaResponse

// optional .proto.dota.CMsgClientToGCVoteForArcanaResponse.Result result = 1 [default = SUCCEEDED];
inline bool CMsgClientToGCVoteForArcanaResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCVoteForArcanaResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result CMsgClientToGCVoteForArcanaResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForArcanaResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result >(result_);
}
inline void CMsgClientToGCVoteForArcanaResponse::set_result(::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForArcanaResponse.result)
}

// -------------------------------------------------------------------

// CMsgArcanaVotes_Match

// optional uint32 match_id = 1;
inline bool CMsgArcanaVotes_Match::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgArcanaVotes_Match::clear_match_id() {
  match_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.match_id)
  return match_id_;
}
inline void CMsgArcanaVotes_Match::set_match_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.match_id)
}

// optional uint32 hero_id_0 = 2;
inline bool CMsgArcanaVotes_Match::has_hero_id_0() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgArcanaVotes_Match::clear_hero_id_0() {
  hero_id_0_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::hero_id_0() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.hero_id_0)
  return hero_id_0_;
}
inline void CMsgArcanaVotes_Match::set_hero_id_0(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hero_id_0_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.hero_id_0)
}

// optional uint32 hero_id_1 = 3;
inline bool CMsgArcanaVotes_Match::has_hero_id_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgArcanaVotes_Match::clear_hero_id_1() {
  hero_id_1_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::hero_id_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.hero_id_1)
  return hero_id_1_;
}
inline void CMsgArcanaVotes_Match::set_hero_id_1(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  hero_id_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.hero_id_1)
}

// optional uint32 hero_seeding_0 = 4;
inline bool CMsgArcanaVotes_Match::has_hero_seeding_0() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgArcanaVotes_Match::clear_hero_seeding_0() {
  hero_seeding_0_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::hero_seeding_0() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.hero_seeding_0)
  return hero_seeding_0_;
}
inline void CMsgArcanaVotes_Match::set_hero_seeding_0(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  hero_seeding_0_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.hero_seeding_0)
}

// optional uint32 hero_seeding_1 = 5;
inline bool CMsgArcanaVotes_Match::has_hero_seeding_1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgArcanaVotes_Match::clear_hero_seeding_1() {
  hero_seeding_1_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::hero_seeding_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.hero_seeding_1)
  return hero_seeding_1_;
}
inline void CMsgArcanaVotes_Match::set_hero_seeding_1(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  hero_seeding_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.hero_seeding_1)
}

// optional uint32 vote_count_0 = 6;
inline bool CMsgArcanaVotes_Match::has_vote_count_0() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgArcanaVotes_Match::clear_vote_count_0() {
  vote_count_0_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::vote_count_0() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.vote_count_0)
  return vote_count_0_;
}
inline void CMsgArcanaVotes_Match::set_vote_count_0(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  vote_count_0_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.vote_count_0)
}

// optional uint32 vote_count_1 = 7;
inline bool CMsgArcanaVotes_Match::has_vote_count_1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgArcanaVotes_Match::clear_vote_count_1() {
  vote_count_1_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::vote_count_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.vote_count_1)
  return vote_count_1_;
}
inline void CMsgArcanaVotes_Match::set_vote_count_1(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  vote_count_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.vote_count_1)
}

// optional uint32 voting_state = 8;
inline bool CMsgArcanaVotes_Match::has_voting_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgArcanaVotes_Match::clear_voting_state() {
  voting_state_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::voting_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.voting_state)
  return voting_state_;
}
inline void CMsgArcanaVotes_Match::set_voting_state(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  voting_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.voting_state)
}

// optional uint32 round_number = 9;
inline bool CMsgArcanaVotes_Match::has_round_number() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgArcanaVotes_Match::clear_round_number() {
  round_number_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::round_number() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.round_number)
  return round_number_;
}
inline void CMsgArcanaVotes_Match::set_round_number(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  round_number_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.round_number)
}

// optional bool is_votes_hidden = 10;
inline bool CMsgArcanaVotes_Match::has_is_votes_hidden() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgArcanaVotes_Match::clear_is_votes_hidden() {
  is_votes_hidden_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CMsgArcanaVotes_Match::is_votes_hidden() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.is_votes_hidden)
  return is_votes_hidden_;
}
inline void CMsgArcanaVotes_Match::set_is_votes_hidden(bool value) {
  _has_bits_[0] |= 0x00000200u;
  is_votes_hidden_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.is_votes_hidden)
}

// optional uint32 calibration_time_remaining = 11;
inline bool CMsgArcanaVotes_Match::has_calibration_time_remaining() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgArcanaVotes_Match::clear_calibration_time_remaining() {
  calibration_time_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::calibration_time_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.calibration_time_remaining)
  return calibration_time_remaining_;
}
inline void CMsgArcanaVotes_Match::set_calibration_time_remaining(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  calibration_time_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.calibration_time_remaining)
}

// -------------------------------------------------------------------

// CMsgArcanaVotes

// repeated .proto.dota.CMsgArcanaVotes.Match matches = 1;
inline int CMsgArcanaVotes::matches_size() const {
  return matches_.size();
}
inline void CMsgArcanaVotes::clear_matches() {
  matches_.Clear();
}
inline ::proto::dota::CMsgArcanaVotes_Match* CMsgArcanaVotes::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgArcanaVotes.matches)
  return matches_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgArcanaVotes_Match >*
CMsgArcanaVotes::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgArcanaVotes.matches)
  return &matches_;
}
inline const ::proto::dota::CMsgArcanaVotes_Match& CMsgArcanaVotes::matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.matches)
  return matches_.Get(index);
}
inline ::proto::dota::CMsgArcanaVotes_Match* CMsgArcanaVotes::add_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgArcanaVotes.matches)
  return matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgArcanaVotes_Match >&
CMsgArcanaVotes::matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgArcanaVotes.matches)
  return matches_;
}

// optional uint32 round_time_remaining = 2;
inline bool CMsgArcanaVotes::has_round_time_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgArcanaVotes::clear_round_time_remaining() {
  round_time_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::round_time_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.round_time_remaining)
  return round_time_remaining_;
}
inline void CMsgArcanaVotes::set_round_time_remaining(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  round_time_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.round_time_remaining)
}

// optional uint32 round_number = 3;
inline bool CMsgArcanaVotes::has_round_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgArcanaVotes::clear_round_number() {
  round_number_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::round_number() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.round_number)
  return round_number_;
}
inline void CMsgArcanaVotes::set_round_number(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  round_number_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.round_number)
}

// optional uint32 voting_state = 4;
inline bool CMsgArcanaVotes::has_voting_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgArcanaVotes::clear_voting_state() {
  voting_state_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::voting_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.voting_state)
  return voting_state_;
}
inline void CMsgArcanaVotes::set_voting_state(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  voting_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.voting_state)
}

// optional bool is_current_round_calibrating = 5;
inline bool CMsgArcanaVotes::has_is_current_round_calibrating() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgArcanaVotes::clear_is_current_round_calibrating() {
  is_current_round_calibrating_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgArcanaVotes::is_current_round_calibrating() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.is_current_round_calibrating)
  return is_current_round_calibrating_;
}
inline void CMsgArcanaVotes::set_is_current_round_calibrating(bool value) {
  _has_bits_[0] |= 0x00000008u;
  is_current_round_calibrating_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.is_current_round_calibrating)
}

// optional uint32 closest_active_match_id = 6;
inline bool CMsgArcanaVotes::has_closest_active_match_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgArcanaVotes::clear_closest_active_match_id() {
  closest_active_match_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::closest_active_match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.closest_active_match_id)
  return closest_active_match_id_;
}
inline void CMsgArcanaVotes::set_closest_active_match_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  closest_active_match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.closest_active_match_id)
}

// optional uint32 event_id = 7;
inline bool CMsgArcanaVotes::has_event_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgArcanaVotes::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.event_id)
  return event_id_;
}
inline void CMsgArcanaVotes::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.event_id)
}

// optional uint32 voting_start_time = 8;
inline bool CMsgArcanaVotes::has_voting_start_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgArcanaVotes::clear_voting_start_time() {
  voting_start_time_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::voting_start_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.voting_start_time)
  return voting_start_time_;
}
inline void CMsgArcanaVotes::set_voting_start_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  voting_start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.voting_start_time)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestArcanaVotesRemaining

// -------------------------------------------------------------------

// CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote

// optional uint64 match_id = 1;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.match_id)
  return match_id_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.match_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.hero_id)
}

// optional uint32 vote_count = 3;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::has_vote_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_vote_count() {
  vote_count_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::vote_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.vote_count)
  return vote_count_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_vote_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  vote_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.vote_count)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestArcanaVotesRemainingResponse

// optional bool result = 1;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.result)
  return result_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_result(bool value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.result)
}

// optional uint32 votes_remaining = 2;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse::has_votes_remaining() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_votes_remaining() {
  votes_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestArcanaVotesRemainingResponse::votes_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.votes_remaining)
  return votes_remaining_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_votes_remaining(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  votes_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.votes_remaining)
}

// optional uint32 votes_total = 3;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse::has_votes_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_votes_total() {
  votes_total_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestArcanaVotesRemainingResponse::votes_total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.votes_total)
  return votes_total_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_votes_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  votes_total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.votes_total)
}

// repeated .proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote matches_previously_voted_for = 4;
inline int CMsgClientToGCRequestArcanaVotesRemainingResponse::matches_previously_voted_for_size() const {
  return matches_previously_voted_for_.size();
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_matches_previously_voted_for() {
  matches_previously_voted_for_.Clear();
}
inline ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* CMsgClientToGCRequestArcanaVotesRemainingResponse::mutable_matches_previously_voted_for(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return matches_previously_voted_for_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote >*
CMsgClientToGCRequestArcanaVotesRemainingResponse::mutable_matches_previously_voted_for() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return &matches_previously_voted_for_;
}
inline const ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& CMsgClientToGCRequestArcanaVotesRemainingResponse::matches_previously_voted_for(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return matches_previously_voted_for_.Get(index);
}
inline ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* CMsgClientToGCRequestArcanaVotesRemainingResponse::add_matches_previously_voted_for() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return matches_previously_voted_for_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote >&
CMsgClientToGCRequestArcanaVotesRemainingResponse::matches_previously_voted_for() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return matches_previously_voted_for_;
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogV2

// optional uint32 event_id = 1;
inline bool CMsgClientToGCRequestEventPointLogV2::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogV2::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogV2::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogV2.event_id)
  return event_id_;
}
inline void CMsgClientToGCRequestEventPointLogV2::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogV2.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponseV2_LogEntry

// optional uint32 timestamp = 1;
inline bool CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.LogEntry.timestamp)
  return timestamp_;
}
inline void CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.LogEntry.timestamp)
}

// optional uint32 audit_action = 2;
inline bool CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::has_audit_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::clear_audit_action() {
  audit_action_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::audit_action() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.LogEntry.audit_action)
  return audit_action_;
}
inline void CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::set_audit_action(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  audit_action_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.LogEntry.audit_action)
}

// optional int32 event_points = 3;
inline bool CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::has_event_points() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::clear_event_points() {
  event_points_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::event_points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.LogEntry.event_points)
  return event_points_;
}
inline void CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::set_event_points(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  event_points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.LogEntry.event_points)
}

// optional uint64 audit_data = 4;
inline bool CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::has_audit_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::clear_audit_data() {
  audit_data_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::audit_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.LogEntry.audit_data)
  return audit_data_;
}
inline void CMsgClientToGCRequestEventPointLogResponseV2_LogEntry::set_audit_data(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  audit_data_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.LogEntry.audit_data)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponseV2

// optional bool result = 1;
inline bool CMsgClientToGCRequestEventPointLogResponseV2::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponseV2::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCRequestEventPointLogResponseV2::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.result)
  return result_;
}
inline void CMsgClientToGCRequestEventPointLogResponseV2::set_result(bool value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.result)
}

// optional .proto.dota.EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestEventPointLogResponseV2::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponseV2::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::EEvent CMsgClientToGCRequestEventPointLogResponseV2::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgClientToGCRequestEventPointLogResponseV2::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.event_id)
}

// repeated .proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.LogEntry log_entries = 3;
inline int CMsgClientToGCRequestEventPointLogResponseV2::log_entries_size() const {
  return log_entries_.size();
}
inline void CMsgClientToGCRequestEventPointLogResponseV2::clear_log_entries() {
  log_entries_.Clear();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2_LogEntry* CMsgClientToGCRequestEventPointLogResponseV2::mutable_log_entries(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.log_entries)
  return log_entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2_LogEntry >*
CMsgClientToGCRequestEventPointLogResponseV2::mutable_log_entries() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.log_entries)
  return &log_entries_;
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2_LogEntry& CMsgClientToGCRequestEventPointLogResponseV2::log_entries(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.log_entries)
  return log_entries_.Get(index);
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2_LogEntry* CMsgClientToGCRequestEventPointLogResponseV2::add_log_entries() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.log_entries)
  return log_entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestEventPointLogResponseV2_LogEntry >&
CMsgClientToGCRequestEventPointLogResponseV2::log_entries() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCRequestEventPointLogResponseV2.log_entries)
  return log_entries_;
}

// -------------------------------------------------------------------

// CMsgClientToGCPublishUserStat

// optional uint32 user_stats_event = 1;
inline bool CMsgClientToGCPublishUserStat::has_user_stats_event() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCPublishUserStat::clear_user_stats_event() {
  user_stats_event_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCPublishUserStat::user_stats_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCPublishUserStat.user_stats_event)
  return user_stats_event_;
}
inline void CMsgClientToGCPublishUserStat::set_user_stats_event(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  user_stats_event_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCPublishUserStat.user_stats_event)
}

// optional uint64 reference_data = 2;
inline bool CMsgClientToGCPublishUserStat::has_reference_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCPublishUserStat::clear_reference_data() {
  reference_data_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCPublishUserStat::reference_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCPublishUserStat.reference_data)
  return reference_data_;
}
inline void CMsgClientToGCPublishUserStat::set_reference_data(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  reference_data_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCPublishUserStat.reference_data)
}

// -------------------------------------------------------------------

// CMsgClientToGCAddTI6TreeProgress

// optional uint32 trees = 1;
inline bool CMsgClientToGCAddTI6TreeProgress::has_trees() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCAddTI6TreeProgress::clear_trees() {
  trees_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCAddTI6TreeProgress::trees() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCAddTI6TreeProgress.trees)
  return trees_;
}
inline void CMsgClientToGCAddTI6TreeProgress::set_trees(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  trees_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCAddTI6TreeProgress.trees)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestLinaPlaysRemaining

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestLinaPlaysRemaining::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestLinaPlaysRemaining::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgClientToGCRequestLinaPlaysRemaining::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestLinaPlaysRemaining.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgClientToGCRequestLinaPlaysRemaining::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestLinaPlaysRemaining.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestLinaPlaysRemainingResponse

// optional uint32 plays_remaining = 1;
inline bool CMsgClientToGCRequestLinaPlaysRemainingResponse::has_plays_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::clear_plays_remaining() {
  plays_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestLinaPlaysRemainingResponse::plays_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestLinaPlaysRemainingResponse.plays_remaining)
  return plays_remaining_;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::set_plays_remaining(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  plays_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestLinaPlaysRemainingResponse.plays_remaining)
}

// optional uint32 plays_total = 2;
inline bool CMsgClientToGCRequestLinaPlaysRemainingResponse::has_plays_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::clear_plays_total() {
  plays_total_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestLinaPlaysRemainingResponse::plays_total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestLinaPlaysRemainingResponse.plays_total)
  return plays_total_;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::set_plays_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  plays_total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestLinaPlaysRemainingResponse.plays_total)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestLinaGameResult

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestLinaGameResult::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestLinaGameResult::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgClientToGCRequestLinaGameResult::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestLinaGameResult.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgClientToGCRequestLinaGameResult::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestLinaGameResult.event_id)
}

// optional uint32 slot_chosen = 2;
inline bool CMsgClientToGCRequestLinaGameResult::has_slot_chosen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestLinaGameResult::clear_slot_chosen() {
  slot_chosen_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestLinaGameResult::slot_chosen() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestLinaGameResult.slot_chosen)
  return slot_chosen_;
}
inline void CMsgClientToGCRequestLinaGameResult::set_slot_chosen(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  slot_chosen_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestLinaGameResult.slot_chosen)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestLinaGameResultResponse

// optional uint32 result = 1;
inline bool CMsgClientToGCRequestLinaGameResultResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestLinaGameResultResponse::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestLinaGameResultResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestLinaGameResultResponse.result)
  return result_;
}
inline void CMsgClientToGCRequestLinaGameResultResponse::set_result(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestLinaGameResultResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestSlarkGameResult

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestSlarkGameResult::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestSlarkGameResult::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgClientToGCRequestSlarkGameResult::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestSlarkGameResult.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgClientToGCRequestSlarkGameResult::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestSlarkGameResult.event_id)
}

// optional uint32 slot_chosen = 2;
inline bool CMsgClientToGCRequestSlarkGameResult::has_slot_chosen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestSlarkGameResult::clear_slot_chosen() {
  slot_chosen_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestSlarkGameResult::slot_chosen() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestSlarkGameResult.slot_chosen)
  return slot_chosen_;
}
inline void CMsgClientToGCRequestSlarkGameResult::set_slot_chosen(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  slot_chosen_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestSlarkGameResult.slot_chosen)
}

// optional uint32 week = 3;
inline bool CMsgClientToGCRequestSlarkGameResult::has_week() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestSlarkGameResult::clear_week() {
  week_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestSlarkGameResult::week() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestSlarkGameResult.week)
  return week_;
}
inline void CMsgClientToGCRequestSlarkGameResult::set_week(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  week_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestSlarkGameResult.week)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestSlarkGameResultResponse

// optional uint32 points_won = 1;
inline bool CMsgClientToGCRequestSlarkGameResultResponse::has_points_won() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestSlarkGameResultResponse::clear_points_won() {
  points_won_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestSlarkGameResultResponse::points_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestSlarkGameResultResponse.points_won)
  return points_won_;
}
inline void CMsgClientToGCRequestSlarkGameResultResponse::set_points_won(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  points_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestSlarkGameResultResponse.points_won)
}

// optional bool aura_won = 2;
inline bool CMsgClientToGCRequestSlarkGameResultResponse::has_aura_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestSlarkGameResultResponse::clear_aura_won() {
  aura_won_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgClientToGCRequestSlarkGameResultResponse::aura_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestSlarkGameResultResponse.aura_won)
  return aura_won_;
}
inline void CMsgClientToGCRequestSlarkGameResultResponse::set_aura_won(bool value) {
  _has_bits_[0] |= 0x00000002u;
  aura_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestSlarkGameResultResponse.aura_won)
}

// -------------------------------------------------------------------

// CMsgGCToClientQuestProgressUpdated_Challenge

// optional uint32 challenge_id = 1;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_challenge_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_challenge_id() {
  challenge_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::challenge_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.challenge_id)
  return challenge_id_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_challenge_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  challenge_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.challenge_id)
}

// optional uint32 time_completed = 2;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_time_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_time_completed() {
  time_completed_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::time_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.time_completed)
  return time_completed_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_time_completed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  time_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.time_completed)
}

// optional uint32 attempts = 3;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_attempts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_attempts() {
  attempts_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::attempts() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.attempts)
  return attempts_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_attempts(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  attempts_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.attempts)
}

// optional uint32 hero_id = 4;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.hero_id)
  return hero_id_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.hero_id)
}

// optional uint32 template_id = 5;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_template_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_template_id() {
  template_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::template_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.template_id)
  return template_id_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_template_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  template_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.template_id)
}

// optional uint32 quest_rank = 6;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_quest_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_quest_rank() {
  quest_rank_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::quest_rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.quest_rank)
  return quest_rank_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_quest_rank(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  quest_rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.quest_rank)
}

// optional uint32 max_quest_rank = 7;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_max_quest_rank() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_max_quest_rank() {
  max_quest_rank_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::max_quest_rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.max_quest_rank)
  return max_quest_rank_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_max_quest_rank(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  max_quest_rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.max_quest_rank)
}

// -------------------------------------------------------------------

// CMsgGCToClientQuestProgressUpdated

// optional uint32 quest_id = 1;
inline bool CMsgGCToClientQuestProgressUpdated::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated::clear_quest_id() {
  quest_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.quest_id)
  return quest_id_;
}
inline void CMsgGCToClientQuestProgressUpdated::set_quest_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.quest_id)
}

// repeated .proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge completed_challenges = 2;
inline int CMsgGCToClientQuestProgressUpdated::completed_challenges_size() const {
  return completed_challenges_.size();
}
inline void CMsgGCToClientQuestProgressUpdated::clear_completed_challenges() {
  completed_challenges_.Clear();
}
inline ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge* CMsgGCToClientQuestProgressUpdated::mutable_completed_challenges(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return completed_challenges_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge >*
CMsgGCToClientQuestProgressUpdated::mutable_completed_challenges() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return &completed_challenges_;
}
inline const ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge& CMsgGCToClientQuestProgressUpdated::completed_challenges(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return completed_challenges_.Get(index);
}
inline ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge* CMsgGCToClientQuestProgressUpdated::add_completed_challenges() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return completed_challenges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge >&
CMsgGCToClientQuestProgressUpdated::completed_challenges() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return completed_challenges_;
}

// -------------------------------------------------------------------

// CMsgDOTARedeemItem

// optional uint64 currency_id = 1;
inline bool CMsgDOTARedeemItem::has_currency_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARedeemItem::clear_currency_id() {
  currency_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgDOTARedeemItem::currency_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARedeemItem.currency_id)
  return currency_id_;
}
inline void CMsgDOTARedeemItem::set_currency_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  currency_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARedeemItem.currency_id)
}

// optional uint32 purchase_def = 2;
inline bool CMsgDOTARedeemItem::has_purchase_def() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARedeemItem::clear_purchase_def() {
  purchase_def_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTARedeemItem::purchase_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARedeemItem.purchase_def)
  return purchase_def_;
}
inline void CMsgDOTARedeemItem::set_purchase_def(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  purchase_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARedeemItem.purchase_def)
}

// -------------------------------------------------------------------

// CMsgDOTARedeemItemResponse

// optional .proto.dota.CMsgDOTARedeemItemResponse.EResultCode response = 1 [default = k_Succeeded];
inline bool CMsgDOTARedeemItemResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARedeemItemResponse::clear_response() {
  response_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgDOTARedeemItemResponse_EResultCode CMsgDOTARedeemItemResponse::response() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARedeemItemResponse.response)
  return static_cast< ::proto::dota::CMsgDOTARedeemItemResponse_EResultCode >(response_);
}
inline void CMsgDOTARedeemItemResponse::set_response(::proto::dota::CMsgDOTARedeemItemResponse_EResultCode value) {
  assert(::proto::dota::CMsgDOTARedeemItemResponse_EResultCode_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  response_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARedeemItemResponse.response)
}

// -------------------------------------------------------------------

// CMsgPerfectWorldUserLookupRequest

// optional string user_name = 1;
inline bool CMsgPerfectWorldUserLookupRequest::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPerfectWorldUserLookupRequest::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgPerfectWorldUserLookupRequest::user_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
  return user_name_.GetNoArena();
}
inline void CMsgPerfectWorldUserLookupRequest::set_user_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
}
#if LANG_CXX11
inline void CMsgPerfectWorldUserLookupRequest::set_user_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
}
#endif
inline void CMsgPerfectWorldUserLookupRequest::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
}
inline void CMsgPerfectWorldUserLookupRequest::set_user_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
}
inline ::std::string* CMsgPerfectWorldUserLookupRequest::mutable_user_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgPerfectWorldUserLookupRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
  if (!has_user_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return user_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgPerfectWorldUserLookupRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
}

// -------------------------------------------------------------------

// CMsgPerfectWorldUserLookupResponse

// optional .proto.dota.CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];
inline bool CMsgPerfectWorldUserLookupResponse::has_result_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPerfectWorldUserLookupResponse::clear_result_code() {
  result_code_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode CMsgPerfectWorldUserLookupResponse::result_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPerfectWorldUserLookupResponse.result_code)
  return static_cast< ::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode >(result_code_);
}
inline void CMsgPerfectWorldUserLookupResponse::set_result_code(::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode value) {
  assert(::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_code_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPerfectWorldUserLookupResponse.result_code)
}

// optional uint32 account_id = 2;
inline bool CMsgPerfectWorldUserLookupResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPerfectWorldUserLookupResponse::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgPerfectWorldUserLookupResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPerfectWorldUserLookupResponse.account_id)
  return account_id_;
}
inline void CMsgPerfectWorldUserLookupResponse::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPerfectWorldUserLookupResponse.account_id)
}

// -------------------------------------------------------------------

// CMsgMakeOffering

// optional uint64 item_id = 1;
inline bool CMsgMakeOffering::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMakeOffering::clear_item_id() {
  item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgMakeOffering::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMakeOffering.item_id)
  return item_id_;
}
inline void CMsgMakeOffering::set_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMakeOffering.item_id)
}

// -------------------------------------------------------------------

// CMsgRequestOfferings

// -------------------------------------------------------------------

// CMsgRequestOfferingsResponse_NewYearsOffering

// optional uint32 def_index = 1;
inline bool CMsgRequestOfferingsResponse_NewYearsOffering::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::clear_def_index() {
  def_index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgRequestOfferingsResponse_NewYearsOffering::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering.def_index)
  return def_index_;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::set_def_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering.def_index)
}

// optional uint64 item_id = 2;
inline bool CMsgRequestOfferingsResponse_NewYearsOffering::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::clear_item_id() {
  item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgRequestOfferingsResponse_NewYearsOffering::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering.item_id)
  return item_id_;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::set_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering.item_id)
}

// -------------------------------------------------------------------

// CMsgRequestOfferingsResponse

// repeated .proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;
inline int CMsgRequestOfferingsResponse::offerings_size() const {
  return offerings_.size();
}
inline void CMsgRequestOfferingsResponse::clear_offerings() {
  offerings_.Clear();
}
inline ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering* CMsgRequestOfferingsResponse::mutable_offerings(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgRequestOfferingsResponse.offerings)
  return offerings_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering >*
CMsgRequestOfferingsResponse::mutable_offerings() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgRequestOfferingsResponse.offerings)
  return &offerings_;
}
inline const ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering& CMsgRequestOfferingsResponse::offerings(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestOfferingsResponse.offerings)
  return offerings_.Get(index);
}
inline ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering* CMsgRequestOfferingsResponse::add_offerings() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgRequestOfferingsResponse.offerings)
  return offerings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering >&
CMsgRequestOfferingsResponse::offerings() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgRequestOfferingsResponse.offerings)
  return offerings_;
}

// optional bool completed = 2;
inline bool CMsgRequestOfferingsResponse::has_completed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestOfferingsResponse::clear_completed() {
  completed_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgRequestOfferingsResponse::completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestOfferingsResponse.completed)
  return completed_;
}
inline void CMsgRequestOfferingsResponse::set_completed(bool value) {
  _has_bits_[0] |= 0x00000001u;
  completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestOfferingsResponse.completed)
}

// -------------------------------------------------------------------

// CMsgDOTAPCBangTimedReward

// optional string persona = 1;
inline bool CMsgDOTAPCBangTimedReward::has_persona() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPCBangTimedReward::clear_persona() {
  persona_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTAPCBangTimedReward::persona() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPCBangTimedReward.persona)
  return persona_.GetNoArena();
}
inline void CMsgDOTAPCBangTimedReward::set_persona(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  persona_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPCBangTimedReward.persona)
}
#if LANG_CXX11
inline void CMsgDOTAPCBangTimedReward::set_persona(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  persona_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPCBangTimedReward.persona)
}
#endif
inline void CMsgDOTAPCBangTimedReward::set_persona(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  persona_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPCBangTimedReward.persona)
}
inline void CMsgDOTAPCBangTimedReward::set_persona(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  persona_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPCBangTimedReward.persona)
}
inline ::std::string* CMsgDOTAPCBangTimedReward::mutable_persona() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPCBangTimedReward.persona)
  return persona_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPCBangTimedReward::release_persona() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPCBangTimedReward.persona)
  if (!has_persona()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return persona_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPCBangTimedReward::set_allocated_persona(::std::string* persona) {
  if (persona != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  persona_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPCBangTimedReward.persona)
}

// optional uint32 itemdef = 2;
inline bool CMsgDOTAPCBangTimedReward::has_itemdef() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPCBangTimedReward::clear_itemdef() {
  itemdef_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAPCBangTimedReward::itemdef() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPCBangTimedReward.itemdef)
  return itemdef_;
}
inline void CMsgDOTAPCBangTimedReward::set_itemdef(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  itemdef_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPCBangTimedReward.itemdef)
}

// optional string pcbangname = 3;
inline bool CMsgDOTAPCBangTimedReward::has_pcbangname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPCBangTimedReward::clear_pcbangname() {
  pcbangname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgDOTAPCBangTimedReward::pcbangname() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
  return pcbangname_.GetNoArena();
}
inline void CMsgDOTAPCBangTimedReward::set_pcbangname(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  pcbangname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
}
#if LANG_CXX11
inline void CMsgDOTAPCBangTimedReward::set_pcbangname(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  pcbangname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
}
#endif
inline void CMsgDOTAPCBangTimedReward::set_pcbangname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  pcbangname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
}
inline void CMsgDOTAPCBangTimedReward::set_pcbangname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  pcbangname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
}
inline ::std::string* CMsgDOTAPCBangTimedReward::mutable_pcbangname() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
  return pcbangname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPCBangTimedReward::release_pcbangname() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
  if (!has_pcbangname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return pcbangname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPCBangTimedReward::set_allocated_pcbangname(::std::string* pcbangname) {
  if (pcbangname != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  pcbangname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pcbangname);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumInGamePredictionResults_PredictionResult

// optional uint32 prediction_id = 1;
inline bool CMsgDOTACompendiumInGamePredictionResults_PredictionResult::has_prediction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::clear_prediction_id() {
  prediction_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumInGamePredictionResults_PredictionResult::prediction_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult.prediction_id)
  return prediction_id_;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::set_prediction_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  prediction_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult.prediction_id)
}

// optional uint32 prediction_value = 2;
inline bool CMsgDOTACompendiumInGamePredictionResults_PredictionResult::has_prediction_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::clear_prediction_value() {
  prediction_value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumInGamePredictionResults_PredictionResult::prediction_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult.prediction_value)
  return prediction_value_;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::set_prediction_value(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  prediction_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult.prediction_value)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumInGamePredictionResults

// repeated .proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult results = 1;
inline int CMsgDOTACompendiumInGamePredictionResults::results_size() const {
  return results_.size();
}
inline void CMsgDOTACompendiumInGamePredictionResults::clear_results() {
  results_.Clear();
}
inline ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult* CMsgDOTACompendiumInGamePredictionResults::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTACompendiumInGamePredictionResults.results)
  return results_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult >*
CMsgDOTACompendiumInGamePredictionResults::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTACompendiumInGamePredictionResults.results)
  return &results_;
}
inline const ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult& CMsgDOTACompendiumInGamePredictionResults::results(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumInGamePredictionResults.results)
  return results_.Get(index);
}
inline ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult* CMsgDOTACompendiumInGamePredictionResults::add_results() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTACompendiumInGamePredictionResults.results)
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult >&
CMsgDOTACompendiumInGamePredictionResults::results() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTACompendiumInGamePredictionResults.results)
  return results_;
}

// optional uint32 league_id = 2;
inline bool CMsgDOTACompendiumInGamePredictionResults::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumInGamePredictionResults::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumInGamePredictionResults::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumInGamePredictionResults.league_id)
  return league_id_;
}
inline void CMsgDOTACompendiumInGamePredictionResults::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumInGamePredictionResults.league_id)
}

// optional bool predictions_closed = 3;
inline bool CMsgDOTACompendiumInGamePredictionResults::has_predictions_closed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumInGamePredictionResults::clear_predictions_closed() {
  predictions_closed_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgDOTACompendiumInGamePredictionResults::predictions_closed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumInGamePredictionResults.predictions_closed)
  return predictions_closed_;
}
inline void CMsgDOTACompendiumInGamePredictionResults::set_predictions_closed(bool value) {
  _has_bits_[0] |= 0x00000002u;
  predictions_closed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumInGamePredictionResults.predictions_closed)
}

// -------------------------------------------------------------------

// CMsgClientToGCSelectCompendiumInGamePrediction_Prediction

// optional uint32 prediction_id = 1;
inline bool CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::has_prediction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::clear_prediction_id() {
  prediction_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::prediction_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction.prediction_id)
  return prediction_id_;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::set_prediction_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  prediction_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction.prediction_id)
}

// optional uint32 prediction_value = 2;
inline bool CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::has_prediction_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::clear_prediction_value() {
  prediction_value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::prediction_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction.prediction_value)
  return prediction_value_;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::set_prediction_value(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  prediction_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction.prediction_value)
}

// -------------------------------------------------------------------

// CMsgClientToGCSelectCompendiumInGamePrediction

// optional uint64 match_id = 1;
inline bool CMsgClientToGCSelectCompendiumInGamePrediction::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCSelectCompendiumInGamePrediction::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.match_id)
  return match_id_;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.match_id)
}

// repeated .proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction predictions = 2;
inline int CMsgClientToGCSelectCompendiumInGamePrediction::predictions_size() const {
  return predictions_.size();
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::clear_predictions() {
  predictions_.Clear();
}
inline ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* CMsgClientToGCSelectCompendiumInGamePrediction::mutable_predictions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return predictions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction >*
CMsgClientToGCSelectCompendiumInGamePrediction::mutable_predictions() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return &predictions_;
}
inline const ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& CMsgClientToGCSelectCompendiumInGamePrediction::predictions(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return predictions_.Get(index);
}
inline ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* CMsgClientToGCSelectCompendiumInGamePrediction::add_predictions() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return predictions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction >&
CMsgClientToGCSelectCompendiumInGamePrediction::predictions() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return predictions_;
}

// optional uint32 league_id = 3;
inline bool CMsgClientToGCSelectCompendiumInGamePrediction::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCSelectCompendiumInGamePrediction::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.league_id)
  return league_id_;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.league_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCSelectCompendiumInGamePredictionResponse

// optional .proto.dota.CMsgClientToGCSelectCompendiumInGamePredictionResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgClientToGCSelectCompendiumInGamePredictionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSelectCompendiumInGamePredictionResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult CMsgClientToGCSelectCompendiumInGamePredictionResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSelectCompendiumInGamePredictionResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult >(result_);
}
inline void CMsgClientToGCSelectCompendiumInGamePredictionResponse::set_result(::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult value) {
  assert(::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSelectCompendiumInGamePredictionResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCOpenPlayerCardPack

// optional uint64 player_card_pack_item_id = 1;
inline bool CMsgClientToGCOpenPlayerCardPack::has_player_card_pack_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCOpenPlayerCardPack::clear_player_card_pack_item_id() {
  player_card_pack_item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCOpenPlayerCardPack::player_card_pack_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCOpenPlayerCardPack.player_card_pack_item_id)
  return player_card_pack_item_id_;
}
inline void CMsgClientToGCOpenPlayerCardPack::set_player_card_pack_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  player_card_pack_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCOpenPlayerCardPack.player_card_pack_item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCOpenPlayerCardPackResponse

// optional .proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCOpenPlayerCardPackResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::clear_result() {
  result_ = 1;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result CMsgClientToGCOpenPlayerCardPackResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result >(result_);
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::set_result(::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.result)
}

// repeated uint64 player_card_item_ids = 2;
inline int CMsgClientToGCOpenPlayerCardPackResponse::player_card_item_ids_size() const {
  return player_card_item_ids_.size();
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::clear_player_card_item_ids() {
  player_card_item_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientToGCOpenPlayerCardPackResponse::player_card_item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
  return player_card_item_ids_.Get(index);
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::set_player_card_item_ids(int index, ::google::protobuf::uint64 value) {
  player_card_item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::add_player_card_item_ids(::google::protobuf::uint64 value) {
  player_card_item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCOpenPlayerCardPackResponse::player_card_item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
  return player_card_item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCOpenPlayerCardPackResponse::mutable_player_card_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
  return &player_card_item_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCRecyclePlayerCard

// repeated uint64 player_card_item_ids = 3;
inline int CMsgClientToGCRecyclePlayerCard::player_card_item_ids_size() const {
  return player_card_item_ids_.size();
}
inline void CMsgClientToGCRecyclePlayerCard::clear_player_card_item_ids() {
  player_card_item_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientToGCRecyclePlayerCard::player_card_item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecyclePlayerCard.player_card_item_ids)
  return player_card_item_ids_.Get(index);
}
inline void CMsgClientToGCRecyclePlayerCard::set_player_card_item_ids(int index, ::google::protobuf::uint64 value) {
  player_card_item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecyclePlayerCard.player_card_item_ids)
}
inline void CMsgClientToGCRecyclePlayerCard::add_player_card_item_ids(::google::protobuf::uint64 value) {
  player_card_item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCRecyclePlayerCard.player_card_item_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCRecyclePlayerCard::player_card_item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCRecyclePlayerCard.player_card_item_ids)
  return player_card_item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCRecyclePlayerCard::mutable_player_card_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCRecyclePlayerCard.player_card_item_ids)
  return &player_card_item_ids_;
}

// optional uint32 event_id = 2;
inline bool CMsgClientToGCRecyclePlayerCard::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRecyclePlayerCard::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRecyclePlayerCard::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecyclePlayerCard.event_id)
  return event_id_;
}
inline void CMsgClientToGCRecyclePlayerCard::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecyclePlayerCard.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRecyclePlayerCardResponse

// optional .proto.dota.CMsgClientToGCRecyclePlayerCardResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCRecyclePlayerCardResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::clear_result() {
  result_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result CMsgClientToGCRecyclePlayerCardResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecyclePlayerCardResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result >(result_);
}
inline void CMsgClientToGCRecyclePlayerCardResponse::set_result(::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecyclePlayerCardResponse.result)
}

// optional uint32 dust_amount = 2;
inline bool CMsgClientToGCRecyclePlayerCardResponse::has_dust_amount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::clear_dust_amount() {
  dust_amount_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRecyclePlayerCardResponse::dust_amount() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecyclePlayerCardResponse.dust_amount)
  return dust_amount_;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::set_dust_amount(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  dust_amount_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecyclePlayerCardResponse.dust_amount)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreatePlayerCardPack

// optional uint64 card_dust_item_id = 1;
inline bool CMsgClientToGCCreatePlayerCardPack::has_card_dust_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCreatePlayerCardPack::clear_card_dust_item_id() {
  card_dust_item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCCreatePlayerCardPack::card_dust_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreatePlayerCardPack.card_dust_item_id)
  return card_dust_item_id_;
}
inline void CMsgClientToGCCreatePlayerCardPack::set_card_dust_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  card_dust_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreatePlayerCardPack.card_dust_item_id)
}

// optional uint32 event_id = 2;
inline bool CMsgClientToGCCreatePlayerCardPack::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCreatePlayerCardPack::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCreatePlayerCardPack::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreatePlayerCardPack.event_id)
  return event_id_;
}
inline void CMsgClientToGCCreatePlayerCardPack::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreatePlayerCardPack.event_id)
}

// optional bool premium_pack = 3;
inline bool CMsgClientToGCCreatePlayerCardPack::has_premium_pack() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCCreatePlayerCardPack::clear_premium_pack() {
  premium_pack_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgClientToGCCreatePlayerCardPack::premium_pack() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreatePlayerCardPack.premium_pack)
  return premium_pack_;
}
inline void CMsgClientToGCCreatePlayerCardPack::set_premium_pack(bool value) {
  _has_bits_[0] |= 0x00000004u;
  premium_pack_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreatePlayerCardPack.premium_pack)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreatePlayerCardPackResponse

// optional .proto.dota.CMsgClientToGCCreatePlayerCardPackResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCCreatePlayerCardPackResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCreatePlayerCardPackResponse::clear_result() {
  result_ = 1;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result CMsgClientToGCCreatePlayerCardPackResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreatePlayerCardPackResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result >(result_);
}
inline void CMsgClientToGCCreatePlayerCardPackResponse::set_result(::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreatePlayerCardPackResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Questlines

// optional string name = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCToClientBattlePassRollup_International2016_Questlines::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
  return name_.GetNoArena();
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}
#if LANG_CXX11
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}
#endif
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}
inline ::std::string* CMsgGCToClientBattlePassRollup_International2016_Questlines::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientBattlePassRollup_International2016_Questlines::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}

// optional uint32 onestar = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_onestar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_onestar() {
  onestar_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Questlines::onestar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.onestar)
  return onestar_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_onestar(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  onestar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.onestar)
}

// optional uint32 twostar = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_twostar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_twostar() {
  twostar_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Questlines::twostar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.twostar)
  return twostar_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_twostar(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  twostar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.twostar)
}

// optional uint32 threestar = 4;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_threestar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_threestar() {
  threestar_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Questlines::threestar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.threestar)
  return threestar_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_threestar(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  threestar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.threestar)
}

// optional uint32 total = 5;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_total() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Questlines::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.total)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Wagering

// optional uint32 total_wagered = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_total_wagered() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_total_wagered() {
  total_wagered_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::total_wagered() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.total_wagered)
  return total_wagered_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_total_wagered(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  total_wagered_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.total_wagered)
}

// optional uint32 total_won = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_total_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_total_won() {
  total_won_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::total_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.total_won)
  return total_won_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_total_won(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.total_won)
}

// optional uint32 average_won = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_average_won() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_average_won() {
  average_won_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::average_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.average_won)
  return average_won_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_average_won(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  average_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.average_won)
}

// optional uint32 success_rate = 4;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_success_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_success_rate() {
  success_rate_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::success_rate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.success_rate)
  return success_rate_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_success_rate(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  success_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.success_rate)
}

// optional uint32 total_tips = 5;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_total_tips() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_total_tips() {
  total_tips_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::total_tips() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.total_tips)
  return total_tips_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_total_tips(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  total_tips_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.total_tips)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Achievements

// optional uint32 completed = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Achievements::has_completed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_completed() {
  completed_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Achievements::completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements.completed)
  return completed_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_completed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements.completed)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Achievements::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Achievements::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016_Achievements::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Achievements::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_BattleCup

// optional uint32 wins = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_BattleCup::has_wins() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::clear_wins() {
  wins_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_BattleCup::wins() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup.wins)
  return wins_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::set_wins(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  wins_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup.wins)
}

// optional uint32 score = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_BattleCup::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::clear_score() {
  score_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_BattleCup::score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup.score)
  return score_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::set_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup.score)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Predictions

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Predictions::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_correct() {
  correct_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Predictions::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_correct(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions.correct)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Predictions::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Predictions::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016_Predictions::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Predictions::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Bracket

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Bracket::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::clear_correct() {
  correct_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Bracket::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::set_correct(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket.correct)
}

// optional uint32 points = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Bracket::has_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Bracket::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_PlayerCard

// optional uint32 account_id = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_PlayerCard::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_PlayerCard::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard.account_id)
}

// optional uint32 quality = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_PlayerCard::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::clear_quality() {
  quality_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_PlayerCard::quality() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard.quality)
  return quality_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::set_quality(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  quality_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard.quality)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge

// optional float total_score = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::has_total_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::clear_total_score() {
  total_score_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::total_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge.total_score)
  return total_score_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::set_total_score(float value) {
  _has_bits_[0] |= 0x00000001u;
  total_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge.total_score)
}

// optional float percentile = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::has_percentile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::clear_percentile() {
  percentile_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::percentile() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge.percentile)
  return percentile_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::set_percentile(float value) {
  _has_bits_[0] |= 0x00000002u;
  percentile_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge.percentile)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016

// optional uint32 battle_pass_level = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_battle_pass_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_battle_pass_level() {
  battle_pass_level_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016::battle_pass_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.battle_pass_level)
  return battle_pass_level_;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_battle_pass_level(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  battle_pass_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.battle_pass_level)
}

// repeated .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines questlines = 2;
inline int CMsgGCToClientBattlePassRollup_International2016::questlines_size() const {
  return questlines_.size();
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_questlines() {
  questlines_.Clear();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines* CMsgGCToClientBattlePassRollup_International2016::mutable_questlines(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.questlines)
  return questlines_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines >*
CMsgGCToClientBattlePassRollup_International2016::mutable_questlines() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollup_International2016.questlines)
  return &questlines_;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines& CMsgGCToClientBattlePassRollup_International2016::questlines(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.questlines)
  return questlines_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines* CMsgGCToClientBattlePassRollup_International2016::add_questlines() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollup_International2016.questlines)
  return questlines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines >&
CMsgGCToClientBattlePassRollup_International2016::questlines() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollup_International2016.questlines)
  return questlines_;
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering wagering = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_wagering() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_wagering() {
  if (wagering_ != nullptr) wagering_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering& CMsgGCToClientBattlePassRollup_International2016::wagering() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* p = wagering_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.wagering)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_International2016_Wagering_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* CMsgGCToClientBattlePassRollup_International2016::release_wagering() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.wagering)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* temp = wagering_;
  wagering_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* CMsgGCToClientBattlePassRollup_International2016::mutable_wagering() {
  _has_bits_[0] |= 0x00000001u;
  if (wagering_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering>(GetArenaNoVirtual());
    wagering_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.wagering)
  return wagering_;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* wagering) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete wagering_;
  }
  if (wagering) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      wagering = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wagering, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  wagering_ = wagering;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.wagering)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements achievements = 4;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_achievements() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_achievements() {
  if (achievements_ != nullptr) achievements_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements& CMsgGCToClientBattlePassRollup_International2016::achievements() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* p = achievements_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.achievements)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_International2016_Achievements_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* CMsgGCToClientBattlePassRollup_International2016::release_achievements() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.achievements)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* temp = achievements_;
  achievements_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* CMsgGCToClientBattlePassRollup_International2016::mutable_achievements() {
  _has_bits_[0] |= 0x00000002u;
  if (achievements_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements>(GetArenaNoVirtual());
    achievements_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.achievements)
  return achievements_;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* achievements) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete achievements_;
  }
  if (achievements) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      achievements = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, achievements, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  achievements_ = achievements;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.achievements)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup battle_cup = 5;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_battle_cup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_battle_cup() {
  if (battle_cup_ != nullptr) battle_cup_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup& CMsgGCToClientBattlePassRollup_International2016::battle_cup() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* p = battle_cup_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.battle_cup)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_International2016_BattleCup_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* CMsgGCToClientBattlePassRollup_International2016::release_battle_cup() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.battle_cup)
  _has_bits_[0] &= ~0x00000004u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* temp = battle_cup_;
  battle_cup_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* CMsgGCToClientBattlePassRollup_International2016::mutable_battle_cup() {
  _has_bits_[0] |= 0x00000004u;
  if (battle_cup_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup>(GetArenaNoVirtual());
    battle_cup_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.battle_cup)
  return battle_cup_;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_battle_cup(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* battle_cup) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete battle_cup_;
  }
  if (battle_cup) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      battle_cup = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, battle_cup, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  battle_cup_ = battle_cup;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.battle_cup)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions predictions = 6;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_predictions() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_predictions() {
  if (predictions_ != nullptr) predictions_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions& CMsgGCToClientBattlePassRollup_International2016::predictions() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* p = predictions_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.predictions)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_International2016_Predictions_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* CMsgGCToClientBattlePassRollup_International2016::release_predictions() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.predictions)
  _has_bits_[0] &= ~0x00000008u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* temp = predictions_;
  predictions_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* CMsgGCToClientBattlePassRollup_International2016::mutable_predictions() {
  _has_bits_[0] |= 0x00000008u;
  if (predictions_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions>(GetArenaNoVirtual());
    predictions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.predictions)
  return predictions_;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* predictions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete predictions_;
  }
  if (predictions) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      predictions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, predictions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  predictions_ = predictions;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.predictions)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket bracket = 7;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_bracket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_bracket() {
  if (bracket_ != nullptr) bracket_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket& CMsgGCToClientBattlePassRollup_International2016::bracket() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* p = bracket_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.bracket)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_International2016_Bracket_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* CMsgGCToClientBattlePassRollup_International2016::release_bracket() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.bracket)
  _has_bits_[0] &= ~0x00000010u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* temp = bracket_;
  bracket_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* CMsgGCToClientBattlePassRollup_International2016::mutable_bracket() {
  _has_bits_[0] |= 0x00000010u;
  if (bracket_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket>(GetArenaNoVirtual());
    bracket_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.bracket)
  return bracket_;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* bracket) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bracket_;
  }
  if (bracket) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bracket = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bracket, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  bracket_ = bracket;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.bracket)
}

// repeated .proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard player_cards = 8;
inline int CMsgGCToClientBattlePassRollup_International2016::player_cards_size() const {
  return player_cards_.size();
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_player_cards() {
  player_cards_.Clear();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard* CMsgGCToClientBattlePassRollup_International2016::mutable_player_cards(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return player_cards_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard >*
CMsgGCToClientBattlePassRollup_International2016::mutable_player_cards() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return &player_cards_;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard& CMsgGCToClientBattlePassRollup_International2016::player_cards(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return player_cards_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard* CMsgGCToClientBattlePassRollup_International2016::add_player_cards() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return player_cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard >&
CMsgGCToClientBattlePassRollup_International2016::player_cards() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return player_cards_;
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge fantasy_challenge = 9;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_fantasy_challenge() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_fantasy_challenge() {
  if (fantasy_challenge_ != nullptr) fantasy_challenge_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& CMsgGCToClientBattlePassRollup_International2016::fantasy_challenge() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* p = fantasy_challenge_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.fantasy_challenge)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* CMsgGCToClientBattlePassRollup_International2016::release_fantasy_challenge() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.fantasy_challenge)
  _has_bits_[0] &= ~0x00000020u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* temp = fantasy_challenge_;
  fantasy_challenge_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* CMsgGCToClientBattlePassRollup_International2016::mutable_fantasy_challenge() {
  _has_bits_[0] |= 0x00000020u;
  if (fantasy_challenge_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge>(GetArenaNoVirtual());
    fantasy_challenge_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.fantasy_challenge)
  return fantasy_challenge_;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* fantasy_challenge) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fantasy_challenge_;
  }
  if (fantasy_challenge) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fantasy_challenge = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fantasy_challenge, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  fantasy_challenge_ = fantasy_challenge;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.fantasy_challenge)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_Questlines

// optional string name = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Questlines::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCToClientBattlePassRollup_Fall2016_Questlines::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
  return name_.GetNoArena();
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
}
#if LANG_CXX11
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
}
#endif
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
}
inline ::std::string* CMsgGCToClientBattlePassRollup_Fall2016_Questlines::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientBattlePassRollup_Fall2016_Questlines::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
}

// optional uint32 onestar = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Questlines::has_onestar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_onestar() {
  onestar_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Questlines::onestar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.onestar)
  return onestar_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_onestar(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  onestar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.onestar)
}

// optional uint32 twostar = 3;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Questlines::has_twostar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_twostar() {
  twostar_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Questlines::twostar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.twostar)
  return twostar_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_twostar(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  twostar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.twostar)
}

// optional uint32 threestar = 4;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Questlines::has_threestar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_threestar() {
  threestar_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Questlines::threestar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.threestar)
  return threestar_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_threestar(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  threestar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.threestar)
}

// optional uint32 total = 5;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Questlines::has_total() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Questlines::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.total)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_Wagering

// optional uint32 total_wagered = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Wagering::has_total_wagered() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_total_wagered() {
  total_wagered_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Wagering::total_wagered() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.total_wagered)
  return total_wagered_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_total_wagered(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  total_wagered_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.total_wagered)
}

// optional uint32 total_won = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Wagering::has_total_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_total_won() {
  total_won_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Wagering::total_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.total_won)
  return total_won_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_total_won(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.total_won)
}

// optional uint32 average_won = 3;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Wagering::has_average_won() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_average_won() {
  average_won_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Wagering::average_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.average_won)
  return average_won_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_average_won(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  average_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.average_won)
}

// optional uint32 success_rate = 4;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Wagering::has_success_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_success_rate() {
  success_rate_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Wagering::success_rate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.success_rate)
  return success_rate_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_success_rate(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  success_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.success_rate)
}

// optional uint32 total_tips = 5;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Wagering::has_total_tips() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_total_tips() {
  total_tips_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Wagering::total_tips() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.total_tips)
  return total_tips_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_total_tips(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  total_tips_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.total_tips)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_Achievements

// optional uint32 completed = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Achievements::has_completed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::clear_completed() {
  completed_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Achievements::completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements.completed)
  return completed_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::set_completed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements.completed)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Achievements::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Achievements::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Achievements::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Achievements::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_BattleCup

// optional uint32 wins = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::has_wins() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::clear_wins() {
  wins_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::wins() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup.wins)
  return wins_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::set_wins(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  wins_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup.wins)
}

// optional uint32 score = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::clear_score() {
  score_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup.score)
  return score_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::set_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup.score)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_Predictions

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Predictions::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::clear_correct() {
  correct_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Predictions::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::set_correct(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions.correct)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Predictions::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Predictions::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Predictions::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Predictions::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_Bracket

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Bracket::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Bracket::clear_correct() {
  correct_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Bracket::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Bracket::set_correct(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket.correct)
}

// optional uint32 points = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Bracket::has_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Bracket::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Bracket::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Bracket::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard

// optional uint32 account_id = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard.account_id)
}

// optional uint32 quality = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::clear_quality() {
  quality_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::quality() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard.quality)
  return quality_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::set_quality(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  quality_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard.quality)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge

// optional float total_score = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::has_total_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::clear_total_score() {
  total_score_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::total_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge.total_score)
  return total_score_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::set_total_score(float value) {
  _has_bits_[0] |= 0x00000001u;
  total_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge.total_score)
}

// optional float percentile = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::has_percentile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::clear_percentile() {
  percentile_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::percentile() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge.percentile)
  return percentile_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::set_percentile(float value) {
  _has_bits_[0] |= 0x00000002u;
  percentile_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge.percentile)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016

// optional uint32 battle_pass_level = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_battle_pass_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_battle_pass_level() {
  battle_pass_level_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016::battle_pass_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.battle_pass_level)
  return battle_pass_level_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_battle_pass_level(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  battle_pass_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.battle_pass_level)
}

// repeated .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines questlines = 2;
inline int CMsgGCToClientBattlePassRollup_Fall2016::questlines_size() const {
  return questlines_.size();
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_questlines() {
  questlines_.Clear();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines* CMsgGCToClientBattlePassRollup_Fall2016::mutable_questlines(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.questlines)
  return questlines_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines >*
CMsgGCToClientBattlePassRollup_Fall2016::mutable_questlines() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.questlines)
  return &questlines_;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines& CMsgGCToClientBattlePassRollup_Fall2016::questlines(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.questlines)
  return questlines_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines* CMsgGCToClientBattlePassRollup_Fall2016::add_questlines() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.questlines)
  return questlines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines >&
CMsgGCToClientBattlePassRollup_Fall2016::questlines() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.questlines)
  return questlines_;
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering wagering = 3;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_wagering() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_wagering() {
  if (wagering_ != nullptr) wagering_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering& CMsgGCToClientBattlePassRollup_Fall2016::wagering() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* p = wagering_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.wagering)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Fall2016_Wagering_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* CMsgGCToClientBattlePassRollup_Fall2016::release_wagering() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.wagering)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* temp = wagering_;
  wagering_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* CMsgGCToClientBattlePassRollup_Fall2016::mutable_wagering() {
  _has_bits_[0] |= 0x00000001u;
  if (wagering_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering>(GetArenaNoVirtual());
    wagering_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.wagering)
  return wagering_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* wagering) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete wagering_;
  }
  if (wagering) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      wagering = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wagering, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  wagering_ = wagering;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.wagering)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements achievements = 4;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_achievements() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_achievements() {
  if (achievements_ != nullptr) achievements_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements& CMsgGCToClientBattlePassRollup_Fall2016::achievements() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* p = achievements_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.achievements)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Fall2016_Achievements_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* CMsgGCToClientBattlePassRollup_Fall2016::release_achievements() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.achievements)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* temp = achievements_;
  achievements_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* CMsgGCToClientBattlePassRollup_Fall2016::mutable_achievements() {
  _has_bits_[0] |= 0x00000002u;
  if (achievements_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements>(GetArenaNoVirtual());
    achievements_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.achievements)
  return achievements_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* achievements) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete achievements_;
  }
  if (achievements) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      achievements = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, achievements, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  achievements_ = achievements;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.achievements)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup battle_cup = 5;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_battle_cup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_battle_cup() {
  if (battle_cup_ != nullptr) battle_cup_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& CMsgGCToClientBattlePassRollup_Fall2016::battle_cup() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* p = battle_cup_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.battle_cup)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Fall2016_BattleCup_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* CMsgGCToClientBattlePassRollup_Fall2016::release_battle_cup() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.battle_cup)
  _has_bits_[0] &= ~0x00000004u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* temp = battle_cup_;
  battle_cup_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* CMsgGCToClientBattlePassRollup_Fall2016::mutable_battle_cup() {
  _has_bits_[0] |= 0x00000004u;
  if (battle_cup_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup>(GetArenaNoVirtual());
    battle_cup_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.battle_cup)
  return battle_cup_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_allocated_battle_cup(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* battle_cup) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete battle_cup_;
  }
  if (battle_cup) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      battle_cup = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, battle_cup, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  battle_cup_ = battle_cup;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.battle_cup)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions predictions = 6;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_predictions() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_predictions() {
  if (predictions_ != nullptr) predictions_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions& CMsgGCToClientBattlePassRollup_Fall2016::predictions() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* p = predictions_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.predictions)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Fall2016_Predictions_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* CMsgGCToClientBattlePassRollup_Fall2016::release_predictions() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.predictions)
  _has_bits_[0] &= ~0x00000008u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* temp = predictions_;
  predictions_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* CMsgGCToClientBattlePassRollup_Fall2016::mutable_predictions() {
  _has_bits_[0] |= 0x00000008u;
  if (predictions_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions>(GetArenaNoVirtual());
    predictions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.predictions)
  return predictions_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* predictions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete predictions_;
  }
  if (predictions) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      predictions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, predictions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  predictions_ = predictions;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.predictions)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket bracket = 7;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_bracket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_bracket() {
  if (bracket_ != nullptr) bracket_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket& CMsgGCToClientBattlePassRollup_Fall2016::bracket() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* p = bracket_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.bracket)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Fall2016_Bracket_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* CMsgGCToClientBattlePassRollup_Fall2016::release_bracket() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.bracket)
  _has_bits_[0] &= ~0x00000010u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* temp = bracket_;
  bracket_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* CMsgGCToClientBattlePassRollup_Fall2016::mutable_bracket() {
  _has_bits_[0] |= 0x00000010u;
  if (bracket_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket>(GetArenaNoVirtual());
    bracket_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.bracket)
  return bracket_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* bracket) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bracket_;
  }
  if (bracket) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bracket = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bracket, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  bracket_ = bracket;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.bracket)
}

// repeated .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard player_cards = 8;
inline int CMsgGCToClientBattlePassRollup_Fall2016::player_cards_size() const {
  return player_cards_.size();
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_player_cards() {
  player_cards_.Clear();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* CMsgGCToClientBattlePassRollup_Fall2016::mutable_player_cards(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.player_cards)
  return player_cards_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard >*
CMsgGCToClientBattlePassRollup_Fall2016::mutable_player_cards() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.player_cards)
  return &player_cards_;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& CMsgGCToClientBattlePassRollup_Fall2016::player_cards(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.player_cards)
  return player_cards_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* CMsgGCToClientBattlePassRollup_Fall2016::add_player_cards() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.player_cards)
  return player_cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard >&
CMsgGCToClientBattlePassRollup_Fall2016::player_cards() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.player_cards)
  return player_cards_;
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge fantasy_challenge = 9;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_fantasy_challenge() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_fantasy_challenge() {
  if (fantasy_challenge_ != nullptr) fantasy_challenge_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& CMsgGCToClientBattlePassRollup_Fall2016::fantasy_challenge() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* p = fantasy_challenge_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.fantasy_challenge)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* CMsgGCToClientBattlePassRollup_Fall2016::release_fantasy_challenge() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.fantasy_challenge)
  _has_bits_[0] &= ~0x00000020u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* temp = fantasy_challenge_;
  fantasy_challenge_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* CMsgGCToClientBattlePassRollup_Fall2016::mutable_fantasy_challenge() {
  _has_bits_[0] |= 0x00000020u;
  if (fantasy_challenge_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge>(GetArenaNoVirtual());
    fantasy_challenge_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.fantasy_challenge)
  return fantasy_challenge_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* fantasy_challenge) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fantasy_challenge_;
  }
  if (fantasy_challenge) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fantasy_challenge = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fantasy_challenge, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  fantasy_challenge_ = fantasy_challenge;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.fantasy_challenge)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Winter2017_Questlines

// optional string name = 1;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Questlines::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCToClientBattlePassRollup_Winter2017_Questlines::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.name)
  return name_.GetNoArena();
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.name)
}
#if LANG_CXX11
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.name)
}
#endif
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.name)
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.name)
}
inline ::std::string* CMsgGCToClientBattlePassRollup_Winter2017_Questlines::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientBattlePassRollup_Winter2017_Questlines::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.name)
}

// optional uint32 onestar = 2;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Questlines::has_onestar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::clear_onestar() {
  onestar_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Questlines::onestar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.onestar)
  return onestar_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::set_onestar(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  onestar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.onestar)
}

// optional uint32 twostar = 3;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Questlines::has_twostar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::clear_twostar() {
  twostar_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Questlines::twostar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.twostar)
  return twostar_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::set_twostar(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  twostar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.twostar)
}

// optional uint32 threestar = 4;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Questlines::has_threestar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::clear_threestar() {
  threestar_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Questlines::threestar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.threestar)
  return threestar_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::set_threestar(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  threestar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.threestar)
}

// optional uint32 total = 5;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Questlines::has_total() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Questlines::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Questlines::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines.total)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Winter2017_Wagering

// optional uint32 total_wagered = 1;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Wagering::has_total_wagered() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Wagering::clear_total_wagered() {
  total_wagered_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Wagering::total_wagered() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering.total_wagered)
  return total_wagered_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Wagering::set_total_wagered(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  total_wagered_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering.total_wagered)
}

// optional uint32 total_won = 2;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Wagering::has_total_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Wagering::clear_total_won() {
  total_won_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Wagering::total_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering.total_won)
  return total_won_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Wagering::set_total_won(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering.total_won)
}

// optional uint32 average_won = 3;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Wagering::has_average_won() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Wagering::clear_average_won() {
  average_won_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Wagering::average_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering.average_won)
  return average_won_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Wagering::set_average_won(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  average_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering.average_won)
}

// optional uint32 success_rate = 4;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Wagering::has_success_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Wagering::clear_success_rate() {
  success_rate_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Wagering::success_rate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering.success_rate)
  return success_rate_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Wagering::set_success_rate(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  success_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering.success_rate)
}

// optional uint32 total_tips = 5;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Wagering::has_total_tips() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Wagering::clear_total_tips() {
  total_tips_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Wagering::total_tips() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering.total_tips)
  return total_tips_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Wagering::set_total_tips(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  total_tips_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering.total_tips)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Winter2017_Achievements

// optional uint32 completed = 1;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Achievements::has_completed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Achievements::clear_completed() {
  completed_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Achievements::completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Achievements.completed)
  return completed_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Achievements::set_completed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Achievements.completed)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Achievements::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Achievements::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Achievements::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Achievements.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Achievements::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Achievements.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Achievements::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Achievements::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Achievements::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Achievements.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Achievements::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Achievements.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Winter2017_BattleCup

// optional uint32 wins = 1;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_BattleCup::has_wins() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_BattleCup::clear_wins() {
  wins_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_BattleCup::wins() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.BattleCup.wins)
  return wins_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_BattleCup::set_wins(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  wins_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.BattleCup.wins)
}

// optional uint32 score = 2;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_BattleCup::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_BattleCup::clear_score() {
  score_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_BattleCup::score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.BattleCup.score)
  return score_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_BattleCup::set_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.BattleCup.score)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Winter2017_Predictions

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Predictions::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Predictions::clear_correct() {
  correct_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Predictions::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Predictions.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Predictions::set_correct(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Predictions.correct)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Predictions::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Predictions::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Predictions::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Predictions.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Predictions::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Predictions.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Predictions::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Predictions::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Predictions::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Predictions.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Predictions::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Predictions.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Winter2017_Bracket

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Bracket::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Bracket::clear_correct() {
  correct_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Bracket::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Bracket.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Bracket::set_correct(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Bracket.correct)
}

// optional uint32 points = 2;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_Bracket::has_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Bracket::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_Bracket::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Bracket.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_Bracket::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Bracket.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard

// optional uint32 account_id = 1;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.PlayerCard.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.PlayerCard.account_id)
}

// optional uint32 quality = 2;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard::clear_quality() {
  quality_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard::quality() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.PlayerCard.quality)
  return quality_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard::set_quality(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  quality_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.PlayerCard.quality)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge

// optional float total_score = 1;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge::has_total_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge::clear_total_score() {
  total_score_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge::total_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.FantasyChallenge.total_score)
  return total_score_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge::set_total_score(float value) {
  _has_bits_[0] |= 0x00000001u;
  total_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.FantasyChallenge.total_score)
}

// optional float percentile = 2;
inline bool CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge::has_percentile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge::clear_percentile() {
  percentile_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge::percentile() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.FantasyChallenge.percentile)
  return percentile_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge::set_percentile(float value) {
  _has_bits_[0] |= 0x00000002u;
  percentile_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.FantasyChallenge.percentile)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Winter2017

// optional uint32 battle_pass_level = 1;
inline bool CMsgGCToClientBattlePassRollup_Winter2017::has_battle_pass_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::clear_battle_pass_level() {
  battle_pass_level_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Winter2017::battle_pass_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.battle_pass_level)
  return battle_pass_level_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::set_battle_pass_level(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  battle_pass_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.battle_pass_level)
}

// repeated .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Questlines questlines = 2;
inline int CMsgGCToClientBattlePassRollup_Winter2017::questlines_size() const {
  return questlines_.size();
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::clear_questlines() {
  questlines_.Clear();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Questlines* CMsgGCToClientBattlePassRollup_Winter2017::mutable_questlines(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.questlines)
  return questlines_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Questlines >*
CMsgGCToClientBattlePassRollup_Winter2017::mutable_questlines() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.questlines)
  return &questlines_;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Questlines& CMsgGCToClientBattlePassRollup_Winter2017::questlines(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.questlines)
  return questlines_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Questlines* CMsgGCToClientBattlePassRollup_Winter2017::add_questlines() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.questlines)
  return questlines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Questlines >&
CMsgGCToClientBattlePassRollup_Winter2017::questlines() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.questlines)
  return questlines_;
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Wagering wagering = 3;
inline bool CMsgGCToClientBattlePassRollup_Winter2017::has_wagering() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::clear_wagering() {
  if (wagering_ != nullptr) wagering_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering& CMsgGCToClientBattlePassRollup_Winter2017::wagering() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering* p = wagering_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.wagering)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Winter2017_Wagering_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering* CMsgGCToClientBattlePassRollup_Winter2017::release_wagering() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.wagering)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering* temp = wagering_;
  wagering_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering* CMsgGCToClientBattlePassRollup_Winter2017::mutable_wagering() {
  _has_bits_[0] |= 0x00000001u;
  if (wagering_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering>(GetArenaNoVirtual());
    wagering_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.wagering)
  return wagering_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Wagering* wagering) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete wagering_;
  }
  if (wagering) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      wagering = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wagering, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  wagering_ = wagering;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.wagering)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Achievements achievements = 4;
inline bool CMsgGCToClientBattlePassRollup_Winter2017::has_achievements() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::clear_achievements() {
  if (achievements_ != nullptr) achievements_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements& CMsgGCToClientBattlePassRollup_Winter2017::achievements() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements* p = achievements_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.achievements)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Winter2017_Achievements_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements* CMsgGCToClientBattlePassRollup_Winter2017::release_achievements() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.achievements)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements* temp = achievements_;
  achievements_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements* CMsgGCToClientBattlePassRollup_Winter2017::mutable_achievements() {
  _has_bits_[0] |= 0x00000002u;
  if (achievements_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements>(GetArenaNoVirtual());
    achievements_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.achievements)
  return achievements_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Achievements* achievements) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete achievements_;
  }
  if (achievements) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      achievements = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, achievements, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  achievements_ = achievements;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.achievements)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.BattleCup battle_cup = 5;
inline bool CMsgGCToClientBattlePassRollup_Winter2017::has_battle_cup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::clear_battle_cup() {
  if (battle_cup_ != nullptr) battle_cup_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup& CMsgGCToClientBattlePassRollup_Winter2017::battle_cup() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* p = battle_cup_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.battle_cup)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Winter2017_BattleCup_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* CMsgGCToClientBattlePassRollup_Winter2017::release_battle_cup() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.battle_cup)
  _has_bits_[0] &= ~0x00000004u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* temp = battle_cup_;
  battle_cup_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* CMsgGCToClientBattlePassRollup_Winter2017::mutable_battle_cup() {
  _has_bits_[0] |= 0x00000004u;
  if (battle_cup_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup>(GetArenaNoVirtual());
    battle_cup_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.battle_cup)
  return battle_cup_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::set_allocated_battle_cup(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_BattleCup* battle_cup) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete battle_cup_;
  }
  if (battle_cup) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      battle_cup = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, battle_cup, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  battle_cup_ = battle_cup;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.battle_cup)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Predictions predictions = 6;
inline bool CMsgGCToClientBattlePassRollup_Winter2017::has_predictions() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::clear_predictions() {
  if (predictions_ != nullptr) predictions_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions& CMsgGCToClientBattlePassRollup_Winter2017::predictions() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions* p = predictions_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.predictions)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Winter2017_Predictions_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions* CMsgGCToClientBattlePassRollup_Winter2017::release_predictions() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.predictions)
  _has_bits_[0] &= ~0x00000008u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions* temp = predictions_;
  predictions_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions* CMsgGCToClientBattlePassRollup_Winter2017::mutable_predictions() {
  _has_bits_[0] |= 0x00000008u;
  if (predictions_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions>(GetArenaNoVirtual());
    predictions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.predictions)
  return predictions_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Predictions* predictions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete predictions_;
  }
  if (predictions) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      predictions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, predictions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  predictions_ = predictions;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.predictions)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.Bracket bracket = 7;
inline bool CMsgGCToClientBattlePassRollup_Winter2017::has_bracket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::clear_bracket() {
  if (bracket_ != nullptr) bracket_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket& CMsgGCToClientBattlePassRollup_Winter2017::bracket() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket* p = bracket_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.bracket)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Winter2017_Bracket_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket* CMsgGCToClientBattlePassRollup_Winter2017::release_bracket() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.bracket)
  _has_bits_[0] &= ~0x00000010u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket* temp = bracket_;
  bracket_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket* CMsgGCToClientBattlePassRollup_Winter2017::mutable_bracket() {
  _has_bits_[0] |= 0x00000010u;
  if (bracket_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket>(GetArenaNoVirtual());
    bracket_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.bracket)
  return bracket_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_Bracket* bracket) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bracket_;
  }
  if (bracket) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bracket = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bracket, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  bracket_ = bracket;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.bracket)
}

// repeated .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.PlayerCard player_cards = 8;
inline int CMsgGCToClientBattlePassRollup_Winter2017::player_cards_size() const {
  return player_cards_.size();
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::clear_player_cards() {
  player_cards_.Clear();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard* CMsgGCToClientBattlePassRollup_Winter2017::mutable_player_cards(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.player_cards)
  return player_cards_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard >*
CMsgGCToClientBattlePassRollup_Winter2017::mutable_player_cards() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.player_cards)
  return &player_cards_;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard& CMsgGCToClientBattlePassRollup_Winter2017::player_cards(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.player_cards)
  return player_cards_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard* CMsgGCToClientBattlePassRollup_Winter2017::add_player_cards() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.player_cards)
  return player_cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_PlayerCard >&
CMsgGCToClientBattlePassRollup_Winter2017::player_cards() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.player_cards)
  return player_cards_;
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.FantasyChallenge fantasy_challenge = 9;
inline bool CMsgGCToClientBattlePassRollup_Winter2017::has_fantasy_challenge() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::clear_fantasy_challenge() {
  if (fantasy_challenge_ != nullptr) fantasy_challenge_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge& CMsgGCToClientBattlePassRollup_Winter2017::fantasy_challenge() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* p = fantasy_challenge_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.fantasy_challenge)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* CMsgGCToClientBattlePassRollup_Winter2017::release_fantasy_challenge() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.fantasy_challenge)
  _has_bits_[0] &= ~0x00000020u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* temp = fantasy_challenge_;
  fantasy_challenge_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* CMsgGCToClientBattlePassRollup_Winter2017::mutable_fantasy_challenge() {
  _has_bits_[0] |= 0x00000020u;
  if (fantasy_challenge_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge>(GetArenaNoVirtual());
    fantasy_challenge_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.fantasy_challenge)
  return fantasy_challenge_;
}
inline void CMsgGCToClientBattlePassRollup_Winter2017::set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017_FantasyChallenge* fantasy_challenge) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fantasy_challenge_;
  }
  if (fantasy_challenge) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fantasy_challenge = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fantasy_challenge, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  fantasy_challenge_ = fantasy_challenge;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Winter2017.fantasy_challenge)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI7_Questlines

// optional string name = 1;
inline bool CMsgGCToClientBattlePassRollup_TI7_Questlines::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCToClientBattlePassRollup_TI7_Questlines::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.name)
  return name_.GetNoArena();
}
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.name)
}
#if LANG_CXX11
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.name)
}
#endif
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.name)
}
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.name)
}
inline ::std::string* CMsgGCToClientBattlePassRollup_TI7_Questlines::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientBattlePassRollup_TI7_Questlines::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.name)
}

// optional uint32 onestar = 2;
inline bool CMsgGCToClientBattlePassRollup_TI7_Questlines::has_onestar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::clear_onestar() {
  onestar_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Questlines::onestar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.onestar)
  return onestar_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::set_onestar(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  onestar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.onestar)
}

// optional uint32 twostar = 3;
inline bool CMsgGCToClientBattlePassRollup_TI7_Questlines::has_twostar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::clear_twostar() {
  twostar_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Questlines::twostar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.twostar)
  return twostar_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::set_twostar(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  twostar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.twostar)
}

// optional uint32 threestar = 4;
inline bool CMsgGCToClientBattlePassRollup_TI7_Questlines::has_threestar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::clear_threestar() {
  threestar_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Questlines::threestar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.threestar)
  return threestar_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::set_threestar(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  threestar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.threestar)
}

// optional uint32 total = 5;
inline bool CMsgGCToClientBattlePassRollup_TI7_Questlines::has_total() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Questlines::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Questlines::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines.total)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI7_Wagering

// optional uint32 total_wagered = 1;
inline bool CMsgGCToClientBattlePassRollup_TI7_Wagering::has_total_wagered() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Wagering::clear_total_wagered() {
  total_wagered_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Wagering::total_wagered() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering.total_wagered)
  return total_wagered_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Wagering::set_total_wagered(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  total_wagered_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering.total_wagered)
}

// optional uint32 total_won = 2;
inline bool CMsgGCToClientBattlePassRollup_TI7_Wagering::has_total_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Wagering::clear_total_won() {
  total_won_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Wagering::total_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering.total_won)
  return total_won_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Wagering::set_total_won(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering.total_won)
}

// optional uint32 average_won = 3;
inline bool CMsgGCToClientBattlePassRollup_TI7_Wagering::has_average_won() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Wagering::clear_average_won() {
  average_won_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Wagering::average_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering.average_won)
  return average_won_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Wagering::set_average_won(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  average_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering.average_won)
}

// optional uint32 success_rate = 4;
inline bool CMsgGCToClientBattlePassRollup_TI7_Wagering::has_success_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Wagering::clear_success_rate() {
  success_rate_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Wagering::success_rate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering.success_rate)
  return success_rate_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Wagering::set_success_rate(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  success_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering.success_rate)
}

// optional uint32 total_tips = 5;
inline bool CMsgGCToClientBattlePassRollup_TI7_Wagering::has_total_tips() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Wagering::clear_total_tips() {
  total_tips_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Wagering::total_tips() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering.total_tips)
  return total_tips_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Wagering::set_total_tips(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  total_tips_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering.total_tips)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI7_Achievements

// optional uint32 completed = 1;
inline bool CMsgGCToClientBattlePassRollup_TI7_Achievements::has_completed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Achievements::clear_completed() {
  completed_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Achievements::completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Achievements.completed)
  return completed_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Achievements::set_completed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Achievements.completed)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_TI7_Achievements::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Achievements::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Achievements::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Achievements.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Achievements::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Achievements.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_TI7_Achievements::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Achievements::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Achievements::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Achievements.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Achievements::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Achievements.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI7_BattleCup

// optional uint32 wins = 1;
inline bool CMsgGCToClientBattlePassRollup_TI7_BattleCup::has_wins() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_BattleCup::clear_wins() {
  wins_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_BattleCup::wins() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.BattleCup.wins)
  return wins_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_BattleCup::set_wins(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  wins_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.BattleCup.wins)
}

// optional uint32 score = 2;
inline bool CMsgGCToClientBattlePassRollup_TI7_BattleCup::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_BattleCup::clear_score() {
  score_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_BattleCup::score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.BattleCup.score)
  return score_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_BattleCup::set_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.BattleCup.score)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI7_Predictions

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_TI7_Predictions::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Predictions::clear_correct() {
  correct_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Predictions::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Predictions.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Predictions::set_correct(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Predictions.correct)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_TI7_Predictions::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Predictions::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Predictions::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Predictions.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Predictions::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Predictions.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_TI7_Predictions::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Predictions::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Predictions::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Predictions.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Predictions::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Predictions.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI7_Bracket

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_TI7_Bracket::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Bracket::clear_correct() {
  correct_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Bracket::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Bracket.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Bracket::set_correct(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Bracket.correct)
}

// optional uint32 points = 2;
inline bool CMsgGCToClientBattlePassRollup_TI7_Bracket::has_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Bracket::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_Bracket::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Bracket.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_Bracket::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.Bracket.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI7_PlayerCard

// optional uint32 account_id = 1;
inline bool CMsgGCToClientBattlePassRollup_TI7_PlayerCard::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_PlayerCard::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_PlayerCard::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.PlayerCard.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_PlayerCard::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.PlayerCard.account_id)
}

// optional uint32 quality = 2;
inline bool CMsgGCToClientBattlePassRollup_TI7_PlayerCard::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_PlayerCard::clear_quality() {
  quality_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7_PlayerCard::quality() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.PlayerCard.quality)
  return quality_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_PlayerCard::set_quality(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  quality_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.PlayerCard.quality)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge

// optional float total_score = 1;
inline bool CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge::has_total_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge::clear_total_score() {
  total_score_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge::total_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.FantasyChallenge.total_score)
  return total_score_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge::set_total_score(float value) {
  _has_bits_[0] |= 0x00000001u;
  total_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.FantasyChallenge.total_score)
}

// optional float percentile = 2;
inline bool CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge::has_percentile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge::clear_percentile() {
  percentile_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge::percentile() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.FantasyChallenge.percentile)
  return percentile_;
}
inline void CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge::set_percentile(float value) {
  _has_bits_[0] |= 0x00000002u;
  percentile_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.FantasyChallenge.percentile)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI7

// optional uint32 battle_pass_level = 1;
inline bool CMsgGCToClientBattlePassRollup_TI7::has_battle_pass_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7::clear_battle_pass_level() {
  battle_pass_level_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI7::battle_pass_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.battle_pass_level)
  return battle_pass_level_;
}
inline void CMsgGCToClientBattlePassRollup_TI7::set_battle_pass_level(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  battle_pass_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI7.battle_pass_level)
}

// repeated .proto.dota.CMsgGCToClientBattlePassRollup_TI7.Questlines questlines = 2;
inline int CMsgGCToClientBattlePassRollup_TI7::questlines_size() const {
  return questlines_.size();
}
inline void CMsgGCToClientBattlePassRollup_TI7::clear_questlines() {
  questlines_.Clear();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Questlines* CMsgGCToClientBattlePassRollup_TI7::mutable_questlines(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI7.questlines)
  return questlines_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Questlines >*
CMsgGCToClientBattlePassRollup_TI7::mutable_questlines() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollup_TI7.questlines)
  return &questlines_;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Questlines& CMsgGCToClientBattlePassRollup_TI7::questlines(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.questlines)
  return questlines_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Questlines* CMsgGCToClientBattlePassRollup_TI7::add_questlines() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollup_TI7.questlines)
  return questlines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Questlines >&
CMsgGCToClientBattlePassRollup_TI7::questlines() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollup_TI7.questlines)
  return questlines_;
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7.Wagering wagering = 3;
inline bool CMsgGCToClientBattlePassRollup_TI7::has_wagering() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7::clear_wagering() {
  if (wagering_ != nullptr) wagering_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering& CMsgGCToClientBattlePassRollup_TI7::wagering() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering* p = wagering_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.wagering)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI7_Wagering_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering* CMsgGCToClientBattlePassRollup_TI7::release_wagering() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_TI7.wagering)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering* temp = wagering_;
  wagering_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering* CMsgGCToClientBattlePassRollup_TI7::mutable_wagering() {
  _has_bits_[0] |= 0x00000001u;
  if (wagering_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering>(GetArenaNoVirtual());
    wagering_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI7.wagering)
  return wagering_;
}
inline void CMsgGCToClientBattlePassRollup_TI7::set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Wagering* wagering) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete wagering_;
  }
  if (wagering) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      wagering = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wagering, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  wagering_ = wagering;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_TI7.wagering)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7.Achievements achievements = 4;
inline bool CMsgGCToClientBattlePassRollup_TI7::has_achievements() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7::clear_achievements() {
  if (achievements_ != nullptr) achievements_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements& CMsgGCToClientBattlePassRollup_TI7::achievements() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements* p = achievements_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.achievements)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI7_Achievements_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements* CMsgGCToClientBattlePassRollup_TI7::release_achievements() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_TI7.achievements)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements* temp = achievements_;
  achievements_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements* CMsgGCToClientBattlePassRollup_TI7::mutable_achievements() {
  _has_bits_[0] |= 0x00000002u;
  if (achievements_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements>(GetArenaNoVirtual());
    achievements_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI7.achievements)
  return achievements_;
}
inline void CMsgGCToClientBattlePassRollup_TI7::set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Achievements* achievements) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete achievements_;
  }
  if (achievements) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      achievements = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, achievements, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  achievements_ = achievements;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_TI7.achievements)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7.BattleCup battle_cup = 5;
inline bool CMsgGCToClientBattlePassRollup_TI7::has_battle_cup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7::clear_battle_cup() {
  if (battle_cup_ != nullptr) battle_cup_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup& CMsgGCToClientBattlePassRollup_TI7::battle_cup() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup* p = battle_cup_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.battle_cup)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI7_BattleCup_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup* CMsgGCToClientBattlePassRollup_TI7::release_battle_cup() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_TI7.battle_cup)
  _has_bits_[0] &= ~0x00000004u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup* temp = battle_cup_;
  battle_cup_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup* CMsgGCToClientBattlePassRollup_TI7::mutable_battle_cup() {
  _has_bits_[0] |= 0x00000004u;
  if (battle_cup_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup>(GetArenaNoVirtual());
    battle_cup_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI7.battle_cup)
  return battle_cup_;
}
inline void CMsgGCToClientBattlePassRollup_TI7::set_allocated_battle_cup(::proto::dota::CMsgGCToClientBattlePassRollup_TI7_BattleCup* battle_cup) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete battle_cup_;
  }
  if (battle_cup) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      battle_cup = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, battle_cup, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  battle_cup_ = battle_cup;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_TI7.battle_cup)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7.Predictions predictions = 6;
inline bool CMsgGCToClientBattlePassRollup_TI7::has_predictions() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7::clear_predictions() {
  if (predictions_ != nullptr) predictions_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions& CMsgGCToClientBattlePassRollup_TI7::predictions() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions* p = predictions_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.predictions)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI7_Predictions_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions* CMsgGCToClientBattlePassRollup_TI7::release_predictions() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_TI7.predictions)
  _has_bits_[0] &= ~0x00000008u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions* temp = predictions_;
  predictions_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions* CMsgGCToClientBattlePassRollup_TI7::mutable_predictions() {
  _has_bits_[0] |= 0x00000008u;
  if (predictions_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions>(GetArenaNoVirtual());
    predictions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI7.predictions)
  return predictions_;
}
inline void CMsgGCToClientBattlePassRollup_TI7::set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Predictions* predictions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete predictions_;
  }
  if (predictions) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      predictions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, predictions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  predictions_ = predictions;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_TI7.predictions)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7.Bracket bracket = 7;
inline bool CMsgGCToClientBattlePassRollup_TI7::has_bracket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7::clear_bracket() {
  if (bracket_ != nullptr) bracket_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket& CMsgGCToClientBattlePassRollup_TI7::bracket() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket* p = bracket_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.bracket)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI7_Bracket_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket* CMsgGCToClientBattlePassRollup_TI7::release_bracket() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_TI7.bracket)
  _has_bits_[0] &= ~0x00000010u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket* temp = bracket_;
  bracket_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket* CMsgGCToClientBattlePassRollup_TI7::mutable_bracket() {
  _has_bits_[0] |= 0x00000010u;
  if (bracket_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket>(GetArenaNoVirtual());
    bracket_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI7.bracket)
  return bracket_;
}
inline void CMsgGCToClientBattlePassRollup_TI7::set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_TI7_Bracket* bracket) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bracket_;
  }
  if (bracket) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bracket = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bracket, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  bracket_ = bracket;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_TI7.bracket)
}

// repeated .proto.dota.CMsgGCToClientBattlePassRollup_TI7.PlayerCard player_cards = 8;
inline int CMsgGCToClientBattlePassRollup_TI7::player_cards_size() const {
  return player_cards_.size();
}
inline void CMsgGCToClientBattlePassRollup_TI7::clear_player_cards() {
  player_cards_.Clear();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_PlayerCard* CMsgGCToClientBattlePassRollup_TI7::mutable_player_cards(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI7.player_cards)
  return player_cards_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_PlayerCard >*
CMsgGCToClientBattlePassRollup_TI7::mutable_player_cards() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollup_TI7.player_cards)
  return &player_cards_;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_PlayerCard& CMsgGCToClientBattlePassRollup_TI7::player_cards(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.player_cards)
  return player_cards_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_PlayerCard* CMsgGCToClientBattlePassRollup_TI7::add_player_cards() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollup_TI7.player_cards)
  return player_cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_PlayerCard >&
CMsgGCToClientBattlePassRollup_TI7::player_cards() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollup_TI7.player_cards)
  return player_cards_;
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7.FantasyChallenge fantasy_challenge = 9;
inline bool CMsgGCToClientBattlePassRollup_TI7::has_fantasy_challenge() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI7::clear_fantasy_challenge() {
  if (fantasy_challenge_ != nullptr) fantasy_challenge_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge& CMsgGCToClientBattlePassRollup_TI7::fantasy_challenge() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* p = fantasy_challenge_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI7.fantasy_challenge)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* CMsgGCToClientBattlePassRollup_TI7::release_fantasy_challenge() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_TI7.fantasy_challenge)
  _has_bits_[0] &= ~0x00000020u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* temp = fantasy_challenge_;
  fantasy_challenge_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* CMsgGCToClientBattlePassRollup_TI7::mutable_fantasy_challenge() {
  _has_bits_[0] |= 0x00000020u;
  if (fantasy_challenge_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge>(GetArenaNoVirtual());
    fantasy_challenge_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI7.fantasy_challenge)
  return fantasy_challenge_;
}
inline void CMsgGCToClientBattlePassRollup_TI7::set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_TI7_FantasyChallenge* fantasy_challenge) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fantasy_challenge_;
  }
  if (fantasy_challenge) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fantasy_challenge = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fantasy_challenge, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  fantasy_challenge_ = fantasy_challenge;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_TI7.fantasy_challenge)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI8_CavernCrawl

// optional uint32 rooms_cleared = 1;
inline bool CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::has_rooms_cleared() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::clear_rooms_cleared() {
  rooms_cleared_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::rooms_cleared() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.CavernCrawl.rooms_cleared)
  return rooms_cleared_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::set_rooms_cleared(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  rooms_cleared_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.CavernCrawl.rooms_cleared)
}

// optional bool carry_completed = 2;
inline bool CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::has_carry_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::clear_carry_completed() {
  carry_completed_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::carry_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.CavernCrawl.carry_completed)
  return carry_completed_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::set_carry_completed(bool value) {
  _has_bits_[0] |= 0x00000002u;
  carry_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.CavernCrawl.carry_completed)
}

// optional bool support_completed = 3;
inline bool CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::has_support_completed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::clear_support_completed() {
  support_completed_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::support_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.CavernCrawl.support_completed)
  return support_completed_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::set_support_completed(bool value) {
  _has_bits_[0] |= 0x00000004u;
  support_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.CavernCrawl.support_completed)
}

// optional bool utility_completed = 4;
inline bool CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::has_utility_completed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::clear_utility_completed() {
  utility_completed_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::utility_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.CavernCrawl.utility_completed)
  return utility_completed_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_CavernCrawl::set_utility_completed(bool value) {
  _has_bits_[0] |= 0x00000008u;
  utility_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.CavernCrawl.utility_completed)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI8_Wagering

// optional uint32 total_wagered = 1;
inline bool CMsgGCToClientBattlePassRollup_TI8_Wagering::has_total_wagered() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Wagering::clear_total_wagered() {
  total_wagered_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_Wagering::total_wagered() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering.total_wagered)
  return total_wagered_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Wagering::set_total_wagered(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  total_wagered_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering.total_wagered)
}

// optional uint32 total_won = 2;
inline bool CMsgGCToClientBattlePassRollup_TI8_Wagering::has_total_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Wagering::clear_total_won() {
  total_won_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_Wagering::total_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering.total_won)
  return total_won_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Wagering::set_total_won(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering.total_won)
}

// optional uint32 average_won = 3;
inline bool CMsgGCToClientBattlePassRollup_TI8_Wagering::has_average_won() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Wagering::clear_average_won() {
  average_won_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_Wagering::average_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering.average_won)
  return average_won_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Wagering::set_average_won(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  average_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering.average_won)
}

// optional uint32 success_rate = 4;
inline bool CMsgGCToClientBattlePassRollup_TI8_Wagering::has_success_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Wagering::clear_success_rate() {
  success_rate_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_Wagering::success_rate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering.success_rate)
  return success_rate_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Wagering::set_success_rate(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  success_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering.success_rate)
}

// optional uint32 total_tips = 5;
inline bool CMsgGCToClientBattlePassRollup_TI8_Wagering::has_total_tips() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Wagering::clear_total_tips() {
  total_tips_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_Wagering::total_tips() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering.total_tips)
  return total_tips_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Wagering::set_total_tips(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  total_tips_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering.total_tips)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI8_Achievements

// optional uint32 completed = 1;
inline bool CMsgGCToClientBattlePassRollup_TI8_Achievements::has_completed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Achievements::clear_completed() {
  completed_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_Achievements::completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Achievements.completed)
  return completed_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Achievements::set_completed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Achievements.completed)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_TI8_Achievements::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Achievements::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_Achievements::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Achievements.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Achievements::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Achievements.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_TI8_Achievements::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Achievements::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_Achievements::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Achievements.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Achievements::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Achievements.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI8_Predictions

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_TI8_Predictions::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Predictions::clear_correct() {
  correct_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_Predictions::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Predictions.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Predictions::set_correct(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Predictions.correct)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_TI8_Predictions::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Predictions::clear_total() {
  total_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_Predictions::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Predictions.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Predictions::set_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Predictions.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_TI8_Predictions::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Predictions::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_Predictions::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Predictions.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Predictions::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Predictions.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI8_Bracket

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_TI8_Bracket::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Bracket::clear_correct() {
  correct_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_Bracket::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Bracket.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Bracket::set_correct(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Bracket.correct)
}

// optional uint32 points = 2;
inline bool CMsgGCToClientBattlePassRollup_TI8_Bracket::has_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Bracket::clear_points() {
  points_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_Bracket::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Bracket.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_Bracket::set_points(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.Bracket.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI8_PlayerCard

// optional uint32 account_id = 1;
inline bool CMsgGCToClientBattlePassRollup_TI8_PlayerCard::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_PlayerCard::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_PlayerCard::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.PlayerCard.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_PlayerCard::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.PlayerCard.account_id)
}

// optional uint32 quality = 2;
inline bool CMsgGCToClientBattlePassRollup_TI8_PlayerCard::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_PlayerCard::clear_quality() {
  quality_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8_PlayerCard::quality() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.PlayerCard.quality)
  return quality_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_PlayerCard::set_quality(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  quality_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.PlayerCard.quality)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge

// optional float total_score = 1;
inline bool CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge::has_total_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge::clear_total_score() {
  total_score_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge::total_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.FantasyChallenge.total_score)
  return total_score_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge::set_total_score(float value) {
  _has_bits_[0] |= 0x00000001u;
  total_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.FantasyChallenge.total_score)
}

// optional float percentile = 2;
inline bool CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge::has_percentile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge::clear_percentile() {
  percentile_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge::percentile() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.FantasyChallenge.percentile)
  return percentile_;
}
inline void CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge::set_percentile(float value) {
  _has_bits_[0] |= 0x00000002u;
  percentile_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.FantasyChallenge.percentile)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_TI8

// optional uint32 battle_pass_level = 1;
inline bool CMsgGCToClientBattlePassRollup_TI8::has_battle_pass_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8::clear_battle_pass_level() {
  battle_pass_level_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_TI8::battle_pass_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.battle_pass_level)
  return battle_pass_level_;
}
inline void CMsgGCToClientBattlePassRollup_TI8::set_battle_pass_level(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  battle_pass_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_TI8.battle_pass_level)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8.CavernCrawl cavern_crawl = 2;
inline bool CMsgGCToClientBattlePassRollup_TI8::has_cavern_crawl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8::clear_cavern_crawl() {
  if (cavern_crawl_ != nullptr) cavern_crawl_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl& CMsgGCToClientBattlePassRollup_TI8::cavern_crawl() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* p = cavern_crawl_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.cavern_crawl)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI8_CavernCrawl_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* CMsgGCToClientBattlePassRollup_TI8::release_cavern_crawl() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_TI8.cavern_crawl)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* temp = cavern_crawl_;
  cavern_crawl_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* CMsgGCToClientBattlePassRollup_TI8::mutable_cavern_crawl() {
  _has_bits_[0] |= 0x00000001u;
  if (cavern_crawl_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl>(GetArenaNoVirtual());
    cavern_crawl_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI8.cavern_crawl)
  return cavern_crawl_;
}
inline void CMsgGCToClientBattlePassRollup_TI8::set_allocated_cavern_crawl(::proto::dota::CMsgGCToClientBattlePassRollup_TI8_CavernCrawl* cavern_crawl) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete cavern_crawl_;
  }
  if (cavern_crawl) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cavern_crawl = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cavern_crawl, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  cavern_crawl_ = cavern_crawl;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_TI8.cavern_crawl)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8.Wagering wagering = 3;
inline bool CMsgGCToClientBattlePassRollup_TI8::has_wagering() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8::clear_wagering() {
  if (wagering_ != nullptr) wagering_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering& CMsgGCToClientBattlePassRollup_TI8::wagering() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering* p = wagering_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.wagering)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI8_Wagering_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering* CMsgGCToClientBattlePassRollup_TI8::release_wagering() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_TI8.wagering)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering* temp = wagering_;
  wagering_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering* CMsgGCToClientBattlePassRollup_TI8::mutable_wagering() {
  _has_bits_[0] |= 0x00000002u;
  if (wagering_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering>(GetArenaNoVirtual());
    wagering_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI8.wagering)
  return wagering_;
}
inline void CMsgGCToClientBattlePassRollup_TI8::set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Wagering* wagering) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete wagering_;
  }
  if (wagering) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      wagering = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wagering, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  wagering_ = wagering;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_TI8.wagering)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8.Achievements achievements = 4;
inline bool CMsgGCToClientBattlePassRollup_TI8::has_achievements() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8::clear_achievements() {
  if (achievements_ != nullptr) achievements_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements& CMsgGCToClientBattlePassRollup_TI8::achievements() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements* p = achievements_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.achievements)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI8_Achievements_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements* CMsgGCToClientBattlePassRollup_TI8::release_achievements() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_TI8.achievements)
  _has_bits_[0] &= ~0x00000004u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements* temp = achievements_;
  achievements_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements* CMsgGCToClientBattlePassRollup_TI8::mutable_achievements() {
  _has_bits_[0] |= 0x00000004u;
  if (achievements_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements>(GetArenaNoVirtual());
    achievements_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI8.achievements)
  return achievements_;
}
inline void CMsgGCToClientBattlePassRollup_TI8::set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Achievements* achievements) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete achievements_;
  }
  if (achievements) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      achievements = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, achievements, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  achievements_ = achievements;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_TI8.achievements)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8.Predictions predictions = 6;
inline bool CMsgGCToClientBattlePassRollup_TI8::has_predictions() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8::clear_predictions() {
  if (predictions_ != nullptr) predictions_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions& CMsgGCToClientBattlePassRollup_TI8::predictions() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions* p = predictions_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.predictions)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI8_Predictions_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions* CMsgGCToClientBattlePassRollup_TI8::release_predictions() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_TI8.predictions)
  _has_bits_[0] &= ~0x00000008u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions* temp = predictions_;
  predictions_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions* CMsgGCToClientBattlePassRollup_TI8::mutable_predictions() {
  _has_bits_[0] |= 0x00000008u;
  if (predictions_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions>(GetArenaNoVirtual());
    predictions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI8.predictions)
  return predictions_;
}
inline void CMsgGCToClientBattlePassRollup_TI8::set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Predictions* predictions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete predictions_;
  }
  if (predictions) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      predictions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, predictions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  predictions_ = predictions;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_TI8.predictions)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8.Bracket bracket = 7;
inline bool CMsgGCToClientBattlePassRollup_TI8::has_bracket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8::clear_bracket() {
  if (bracket_ != nullptr) bracket_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket& CMsgGCToClientBattlePassRollup_TI8::bracket() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket* p = bracket_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.bracket)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI8_Bracket_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket* CMsgGCToClientBattlePassRollup_TI8::release_bracket() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_TI8.bracket)
  _has_bits_[0] &= ~0x00000010u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket* temp = bracket_;
  bracket_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket* CMsgGCToClientBattlePassRollup_TI8::mutable_bracket() {
  _has_bits_[0] |= 0x00000010u;
  if (bracket_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket>(GetArenaNoVirtual());
    bracket_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI8.bracket)
  return bracket_;
}
inline void CMsgGCToClientBattlePassRollup_TI8::set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_TI8_Bracket* bracket) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bracket_;
  }
  if (bracket) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bracket = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bracket, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  bracket_ = bracket;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_TI8.bracket)
}

// repeated .proto.dota.CMsgGCToClientBattlePassRollup_TI8.PlayerCard player_cards = 8;
inline int CMsgGCToClientBattlePassRollup_TI8::player_cards_size() const {
  return player_cards_.size();
}
inline void CMsgGCToClientBattlePassRollup_TI8::clear_player_cards() {
  player_cards_.Clear();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_PlayerCard* CMsgGCToClientBattlePassRollup_TI8::mutable_player_cards(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI8.player_cards)
  return player_cards_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_PlayerCard >*
CMsgGCToClientBattlePassRollup_TI8::mutable_player_cards() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollup_TI8.player_cards)
  return &player_cards_;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_PlayerCard& CMsgGCToClientBattlePassRollup_TI8::player_cards(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.player_cards)
  return player_cards_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_PlayerCard* CMsgGCToClientBattlePassRollup_TI8::add_player_cards() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollup_TI8.player_cards)
  return player_cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_PlayerCard >&
CMsgGCToClientBattlePassRollup_TI8::player_cards() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollup_TI8.player_cards)
  return player_cards_;
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8.FantasyChallenge fantasy_challenge = 9;
inline bool CMsgGCToClientBattlePassRollup_TI8::has_fantasy_challenge() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_TI8::clear_fantasy_challenge() {
  if (fantasy_challenge_ != nullptr) fantasy_challenge_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge& CMsgGCToClientBattlePassRollup_TI8::fantasy_challenge() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* p = fantasy_challenge_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_TI8.fantasy_challenge)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* CMsgGCToClientBattlePassRollup_TI8::release_fantasy_challenge() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_TI8.fantasy_challenge)
  _has_bits_[0] &= ~0x00000020u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* temp = fantasy_challenge_;
  fantasy_challenge_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* CMsgGCToClientBattlePassRollup_TI8::mutable_fantasy_challenge() {
  _has_bits_[0] |= 0x00000020u;
  if (fantasy_challenge_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge>(GetArenaNoVirtual());
    fantasy_challenge_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_TI8.fantasy_challenge)
  return fantasy_challenge_;
}
inline void CMsgGCToClientBattlePassRollup_TI8::set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_TI8_FantasyChallenge* fantasy_challenge) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fantasy_challenge_;
  }
  if (fantasy_challenge) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fantasy_challenge = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fantasy_challenge, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  fantasy_challenge_ = fantasy_challenge;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_TI8.fantasy_challenge)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollupRequest

// optional uint32 event_id = 1;
inline bool CMsgGCToClientBattlePassRollupRequest::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollupRequest::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollupRequest::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupRequest.event_id)
  return event_id_;
}
inline void CMsgGCToClientBattlePassRollupRequest::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollupRequest.event_id)
}

// optional uint32 account_id = 2;
inline bool CMsgGCToClientBattlePassRollupRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollupRequest::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollupRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupRequest.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollupRequest::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollupRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollupResponse

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016 event_ti6 = 1;
inline bool CMsgGCToClientBattlePassRollupResponse::has_event_ti6() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollupResponse::clear_event_ti6() {
  if (event_ti6_ != nullptr) event_ti6_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016& CMsgGCToClientBattlePassRollupResponse::event_ti6() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* p = event_ti6_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti6)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_International2016_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* CMsgGCToClientBattlePassRollupResponse::release_event_ti6() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti6)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* temp = event_ti6_;
  event_ti6_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* CMsgGCToClientBattlePassRollupResponse::mutable_event_ti6() {
  _has_bits_[0] |= 0x00000001u;
  if (event_ti6_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_International2016>(GetArenaNoVirtual());
    event_ti6_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti6)
  return event_ti6_;
}
inline void CMsgGCToClientBattlePassRollupResponse::set_allocated_event_ti6(::proto::dota::CMsgGCToClientBattlePassRollup_International2016* event_ti6) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete event_ti6_;
  }
  if (event_ti6) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      event_ti6 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_ti6, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  event_ti6_ = event_ti6;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti6)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016 event_fall2016 = 2;
inline bool CMsgGCToClientBattlePassRollupResponse::has_event_fall2016() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollupResponse::clear_event_fall2016() {
  if (event_fall2016_ != nullptr) event_fall2016_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016& CMsgGCToClientBattlePassRollupResponse::event_fall2016() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* p = event_fall2016_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_fall2016)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Fall2016_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* CMsgGCToClientBattlePassRollupResponse::release_event_fall2016() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_fall2016)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* temp = event_fall2016_;
  event_fall2016_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* CMsgGCToClientBattlePassRollupResponse::mutable_event_fall2016() {
  _has_bits_[0] |= 0x00000002u;
  if (event_fall2016_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016>(GetArenaNoVirtual());
    event_fall2016_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_fall2016)
  return event_fall2016_;
}
inline void CMsgGCToClientBattlePassRollupResponse::set_allocated_event_fall2016(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* event_fall2016) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete event_fall2016_;
  }
  if (event_fall2016) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      event_fall2016 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_fall2016, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  event_fall2016_ = event_fall2016;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_fall2016)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Winter2017 event_winter2017 = 3;
inline bool CMsgGCToClientBattlePassRollupResponse::has_event_winter2017() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollupResponse::clear_event_winter2017() {
  if (event_winter2017_ != nullptr) event_winter2017_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017& CMsgGCToClientBattlePassRollupResponse::event_winter2017() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017* p = event_winter2017_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_winter2017)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_Winter2017_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017* CMsgGCToClientBattlePassRollupResponse::release_event_winter2017() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_winter2017)
  _has_bits_[0] &= ~0x00000004u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017* temp = event_winter2017_;
  event_winter2017_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017* CMsgGCToClientBattlePassRollupResponse::mutable_event_winter2017() {
  _has_bits_[0] |= 0x00000004u;
  if (event_winter2017_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017>(GetArenaNoVirtual());
    event_winter2017_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_winter2017)
  return event_winter2017_;
}
inline void CMsgGCToClientBattlePassRollupResponse::set_allocated_event_winter2017(::proto::dota::CMsgGCToClientBattlePassRollup_Winter2017* event_winter2017) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete event_winter2017_;
  }
  if (event_winter2017) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      event_winter2017 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_winter2017, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  event_winter2017_ = event_winter2017;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_winter2017)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI7 event_ti7 = 4;
inline bool CMsgGCToClientBattlePassRollupResponse::has_event_ti7() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollupResponse::clear_event_ti7() {
  if (event_ti7_ != nullptr) event_ti7_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7& CMsgGCToClientBattlePassRollupResponse::event_ti7() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7* p = event_ti7_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti7)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI7*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI7_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7* CMsgGCToClientBattlePassRollupResponse::release_event_ti7() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti7)
  _has_bits_[0] &= ~0x00000008u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI7* temp = event_ti7_;
  event_ti7_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI7* CMsgGCToClientBattlePassRollupResponse::mutable_event_ti7() {
  _has_bits_[0] |= 0x00000008u;
  if (event_ti7_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI7>(GetArenaNoVirtual());
    event_ti7_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti7)
  return event_ti7_;
}
inline void CMsgGCToClientBattlePassRollupResponse::set_allocated_event_ti7(::proto::dota::CMsgGCToClientBattlePassRollup_TI7* event_ti7) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete event_ti7_;
  }
  if (event_ti7) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      event_ti7 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_ti7, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  event_ti7_ = event_ti7;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti7)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_TI8 event_ti8 = 5;
inline bool CMsgGCToClientBattlePassRollupResponse::has_event_ti8() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollupResponse::clear_event_ti8() {
  if (event_ti8_ != nullptr) event_ti8_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8& CMsgGCToClientBattlePassRollupResponse::event_ti8() const {
  const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8* p = event_ti8_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti8)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCToClientBattlePassRollup_TI8*>(
      &::proto::dota::_CMsgGCToClientBattlePassRollup_TI8_default_instance_);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8* CMsgGCToClientBattlePassRollupResponse::release_event_ti8() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti8)
  _has_bits_[0] &= ~0x00000010u;
  ::proto::dota::CMsgGCToClientBattlePassRollup_TI8* temp = event_ti8_;
  event_ti8_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_TI8* CMsgGCToClientBattlePassRollupResponse::mutable_event_ti8() {
  _has_bits_[0] |= 0x00000010u;
  if (event_ti8_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCToClientBattlePassRollup_TI8>(GetArenaNoVirtual());
    event_ti8_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti8)
  return event_ti8_;
}
inline void CMsgGCToClientBattlePassRollupResponse::set_allocated_event_ti8(::proto::dota::CMsgGCToClientBattlePassRollup_TI8* event_ti8) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete event_ti8_;
  }
  if (event_ti8) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      event_ti8 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_ti8, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  event_ti8_ = event_ti8;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti8)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollupListRequest

// optional uint32 account_id = 1;
inline bool CMsgGCToClientBattlePassRollupListRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollupListRequest::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollupListRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupListRequest.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollupListRequest::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollupListRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollupListResponse_EventInfo

// optional uint32 event_id = 1;
inline bool CMsgGCToClientBattlePassRollupListResponse_EventInfo::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollupListResponse_EventInfo::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollupListResponse_EventInfo::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupListResponse.EventInfo.event_id)
  return event_id_;
}
inline void CMsgGCToClientBattlePassRollupListResponse_EventInfo::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollupListResponse.EventInfo.event_id)
}

// optional uint32 level = 2;
inline bool CMsgGCToClientBattlePassRollupListResponse_EventInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollupListResponse_EventInfo::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollupListResponse_EventInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupListResponse.EventInfo.level)
  return level_;
}
inline void CMsgGCToClientBattlePassRollupListResponse_EventInfo::set_level(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollupListResponse.EventInfo.level)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollupListResponse

// repeated .proto.dota.CMsgGCToClientBattlePassRollupListResponse.EventInfo event_info = 1;
inline int CMsgGCToClientBattlePassRollupListResponse::event_info_size() const {
  return event_info_.size();
}
inline void CMsgGCToClientBattlePassRollupListResponse::clear_event_info() {
  event_info_.Clear();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollupListResponse_EventInfo* CMsgGCToClientBattlePassRollupListResponse::mutable_event_info(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollupListResponse.event_info)
  return event_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollupListResponse_EventInfo >*
CMsgGCToClientBattlePassRollupListResponse::mutable_event_info() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollupListResponse.event_info)
  return &event_info_;
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollupListResponse_EventInfo& CMsgGCToClientBattlePassRollupListResponse::event_info(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupListResponse.event_info)
  return event_info_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollupListResponse_EventInfo* CMsgGCToClientBattlePassRollupListResponse::add_event_info() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollupListResponse.event_info)
  return event_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollupListResponse_EventInfo >&
CMsgGCToClientBattlePassRollupListResponse::event_info() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollupListResponse.event_info)
  return event_info_;
}

// -------------------------------------------------------------------

// CMsgClientToGCTransferSeasonalMMRRequest

// optional bool is_party = 1;
inline bool CMsgClientToGCTransferSeasonalMMRRequest::has_is_party() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTransferSeasonalMMRRequest::clear_is_party() {
  is_party_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCTransferSeasonalMMRRequest::is_party() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTransferSeasonalMMRRequest.is_party)
  return is_party_;
}
inline void CMsgClientToGCTransferSeasonalMMRRequest::set_is_party(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_party_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTransferSeasonalMMRRequest.is_party)
}

// -------------------------------------------------------------------

// CMsgClientToGCTransferSeasonalMMRResponse

// optional bool success = 1;
inline bool CMsgClientToGCTransferSeasonalMMRResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTransferSeasonalMMRResponse::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientToGCTransferSeasonalMMRResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTransferSeasonalMMRResponse.success)
  return success_;
}
inline void CMsgClientToGCTransferSeasonalMMRResponse::set_success(bool value) {
  _has_bits_[0] |= 0x00000001u;
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTransferSeasonalMMRResponse.success)
}

// -------------------------------------------------------------------

// CMsgGCToClientPlaytestStatus

// optional bool active = 1;
inline bool CMsgGCToClientPlaytestStatus::has_active() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientPlaytestStatus::clear_active() {
  active_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCToClientPlaytestStatus::active() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlaytestStatus.active)
  return active_;
}
inline void CMsgGCToClientPlaytestStatus::set_active(bool value) {
  _has_bits_[0] |= 0x00000001u;
  active_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlaytestStatus.active)
}

// -------------------------------------------------------------------

// CMsgClientToGCJoinPlaytest

// optional uint32 client_version = 1;
inline bool CMsgClientToGCJoinPlaytest::has_client_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCJoinPlaytest::clear_client_version() {
  client_version_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCJoinPlaytest::client_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCJoinPlaytest.client_version)
  return client_version_;
}
inline void CMsgClientToGCJoinPlaytest::set_client_version(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  client_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCJoinPlaytest.client_version)
}

// -------------------------------------------------------------------

// CMsgClientToGCJoinPlaytestResponse

// optional string error = 1;
inline bool CMsgClientToGCJoinPlaytestResponse::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCJoinPlaytestResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgClientToGCJoinPlaytestResponse::error() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
  return error_.GetNoArena();
}
inline void CMsgClientToGCJoinPlaytestResponse::set_error(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
}
#if LANG_CXX11
inline void CMsgClientToGCJoinPlaytestResponse::set_error(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
}
#endif
inline void CMsgClientToGCJoinPlaytestResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
}
inline void CMsgClientToGCJoinPlaytestResponse::set_error(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
}
inline ::std::string* CMsgClientToGCJoinPlaytestResponse::mutable_error() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCJoinPlaytestResponse::release_error() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
  if (!has_error()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return error_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCJoinPlaytestResponse::set_allocated_error(::std::string* error) {
  if (error != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
}

// -------------------------------------------------------------------

// CMsgDOTASetFavoriteTeam

// optional uint32 team_id = 1;
inline bool CMsgDOTASetFavoriteTeam::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetFavoriteTeam::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTASetFavoriteTeam::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASetFavoriteTeam.team_id)
  return team_id_;
}
inline void CMsgDOTASetFavoriteTeam::set_team_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASetFavoriteTeam.team_id)
}

// optional uint32 event_id = 2;
inline bool CMsgDOTASetFavoriteTeam::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASetFavoriteTeam::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTASetFavoriteTeam::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASetFavoriteTeam.event_id)
  return event_id_;
}
inline void CMsgDOTASetFavoriteTeam::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASetFavoriteTeam.event_id)
}

// -------------------------------------------------------------------

// CMsgDOTATriviaQuestion

// optional uint32 question_id = 1;
inline bool CMsgDOTATriviaQuestion::has_question_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATriviaQuestion::clear_question_id() {
  question_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTATriviaQuestion::question_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestion.question_id)
  return question_id_;
}
inline void CMsgDOTATriviaQuestion::set_question_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  question_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.question_id)
}

// optional .proto.dota.EDOTATriviaQuestionCategory category = 2 [default = k_EDOTATriviaQuestionCategory_AbilityIcon];
inline bool CMsgDOTATriviaQuestion::has_category() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTATriviaQuestion::clear_category() {
  category_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::proto::dota::EDOTATriviaQuestionCategory CMsgDOTATriviaQuestion::category() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestion.category)
  return static_cast< ::proto::dota::EDOTATriviaQuestionCategory >(category_);
}
inline void CMsgDOTATriviaQuestion::set_category(::proto::dota::EDOTATriviaQuestionCategory value) {
  assert(::proto::dota::EDOTATriviaQuestionCategory_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  category_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.category)
}

// optional uint32 timestamp = 3;
inline bool CMsgDOTATriviaQuestion::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTATriviaQuestion::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTATriviaQuestion::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestion.timestamp)
  return timestamp_;
}
inline void CMsgDOTATriviaQuestion::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.timestamp)
}

// optional string question_value = 4;
inline bool CMsgDOTATriviaQuestion::has_question_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATriviaQuestion::clear_question_value() {
  question_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTATriviaQuestion::question_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestion.question_value)
  return question_value_.GetNoArena();
}
inline void CMsgDOTATriviaQuestion::set_question_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  question_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.question_value)
}
#if LANG_CXX11
inline void CMsgDOTATriviaQuestion::set_question_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  question_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTATriviaQuestion.question_value)
}
#endif
inline void CMsgDOTATriviaQuestion::set_question_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  question_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTATriviaQuestion.question_value)
}
inline void CMsgDOTATriviaQuestion::set_question_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  question_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTATriviaQuestion.question_value)
}
inline ::std::string* CMsgDOTATriviaQuestion::mutable_question_value() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTATriviaQuestion.question_value)
  return question_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTATriviaQuestion::release_question_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTATriviaQuestion.question_value)
  if (!has_question_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return question_value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTATriviaQuestion::set_allocated_question_value(::std::string* question_value) {
  if (question_value != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  question_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), question_value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTATriviaQuestion.question_value)
}

// repeated string answer_values = 5;
inline int CMsgDOTATriviaQuestion::answer_values_size() const {
  return answer_values_.size();
}
inline void CMsgDOTATriviaQuestion::clear_answer_values() {
  answer_values_.Clear();
}
inline const ::std::string& CMsgDOTATriviaQuestion::answer_values(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  return answer_values_.Get(index);
}
inline ::std::string* CMsgDOTATriviaQuestion::mutable_answer_values(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  return answer_values_.Mutable(index);
}
inline void CMsgDOTATriviaQuestion::set_answer_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  answer_values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgDOTATriviaQuestion::set_answer_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  answer_values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgDOTATriviaQuestion::set_answer_values(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  answer_values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTATriviaQuestion.answer_values)
}
inline void CMsgDOTATriviaQuestion::set_answer_values(int index, const char* value, size_t size) {
  answer_values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTATriviaQuestion.answer_values)
}
inline ::std::string* CMsgDOTATriviaQuestion::add_answer_values() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  return answer_values_.Add();
}
inline void CMsgDOTATriviaQuestion::add_answer_values(const ::std::string& value) {
  answer_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTATriviaQuestion.answer_values)
}
#if LANG_CXX11
inline void CMsgDOTATriviaQuestion::add_answer_values(::std::string&& value) {
  answer_values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTATriviaQuestion.answer_values)
}
#endif
inline void CMsgDOTATriviaQuestion::add_answer_values(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  answer_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CMsgDOTATriviaQuestion.answer_values)
}
inline void CMsgDOTATriviaQuestion::add_answer_values(const char* value, size_t size) {
  answer_values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CMsgDOTATriviaQuestion.answer_values)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CMsgDOTATriviaQuestion::answer_values() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  return answer_values_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CMsgDOTATriviaQuestion::mutable_answer_values() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  return &answer_values_;
}

// optional uint32 correct_answer_index = 6;
inline bool CMsgDOTATriviaQuestion::has_correct_answer_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTATriviaQuestion::clear_correct_answer_index() {
  correct_answer_index_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgDOTATriviaQuestion::correct_answer_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestion.correct_answer_index)
  return correct_answer_index_;
}
inline void CMsgDOTATriviaQuestion::set_correct_answer_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  correct_answer_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.correct_answer_index)
}

// -------------------------------------------------------------------

// CMsgDOTATriviaCurrentQuestions

// repeated .proto.dota.CMsgDOTATriviaQuestion questions = 1;
inline int CMsgDOTATriviaCurrentQuestions::questions_size() const {
  return questions_.size();
}
inline void CMsgDOTATriviaCurrentQuestions::clear_questions() {
  questions_.Clear();
}
inline ::proto::dota::CMsgDOTATriviaQuestion* CMsgDOTATriviaCurrentQuestions::mutable_questions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTATriviaCurrentQuestions.questions)
  return questions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTATriviaQuestion >*
CMsgDOTATriviaCurrentQuestions::mutable_questions() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTATriviaCurrentQuestions.questions)
  return &questions_;
}
inline const ::proto::dota::CMsgDOTATriviaQuestion& CMsgDOTATriviaCurrentQuestions::questions(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaCurrentQuestions.questions)
  return questions_.Get(index);
}
inline ::proto::dota::CMsgDOTATriviaQuestion* CMsgDOTATriviaCurrentQuestions::add_questions() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTATriviaCurrentQuestions.questions)
  return questions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTATriviaQuestion >&
CMsgDOTATriviaCurrentQuestions::questions() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTATriviaCurrentQuestions.questions)
  return questions_;
}

// optional bool trivia_enabled = 2;
inline bool CMsgDOTATriviaCurrentQuestions::has_trivia_enabled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATriviaCurrentQuestions::clear_trivia_enabled() {
  trivia_enabled_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgDOTATriviaCurrentQuestions::trivia_enabled() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaCurrentQuestions.trivia_enabled)
  return trivia_enabled_;
}
inline void CMsgDOTATriviaCurrentQuestions::set_trivia_enabled(bool value) {
  _has_bits_[0] |= 0x00000001u;
  trivia_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaCurrentQuestions.trivia_enabled)
}

// -------------------------------------------------------------------

// CMsgDOTATriviaQuestionAnswersSummary

// optional bool summary_available = 1;
inline bool CMsgDOTATriviaQuestionAnswersSummary::has_summary_available() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATriviaQuestionAnswersSummary::clear_summary_available() {
  summary_available_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgDOTATriviaQuestionAnswersSummary::summary_available() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.summary_available)
  return summary_available_;
}
inline void CMsgDOTATriviaQuestionAnswersSummary::set_summary_available(bool value) {
  _has_bits_[0] |= 0x00000001u;
  summary_available_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.summary_available)
}

// repeated uint32 picked_count = 2;
inline int CMsgDOTATriviaQuestionAnswersSummary::picked_count_size() const {
  return picked_count_.size();
}
inline void CMsgDOTATriviaQuestionAnswersSummary::clear_picked_count() {
  picked_count_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTATriviaQuestionAnswersSummary::picked_count(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.picked_count)
  return picked_count_.Get(index);
}
inline void CMsgDOTATriviaQuestionAnswersSummary::set_picked_count(int index, ::google::protobuf::uint32 value) {
  picked_count_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.picked_count)
}
inline void CMsgDOTATriviaQuestionAnswersSummary::add_picked_count(::google::protobuf::uint32 value) {
  picked_count_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.picked_count)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTATriviaQuestionAnswersSummary::picked_count() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.picked_count)
  return picked_count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTATriviaQuestionAnswersSummary::mutable_picked_count() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.picked_count)
  return &picked_count_;
}

// -------------------------------------------------------------------

// CMsgDOTASubmitTriviaQuestionAnswer

// optional uint32 question_id = 1;
inline bool CMsgDOTASubmitTriviaQuestionAnswer::has_question_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitTriviaQuestionAnswer::clear_question_id() {
  question_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTASubmitTriviaQuestionAnswer::question_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitTriviaQuestionAnswer.question_id)
  return question_id_;
}
inline void CMsgDOTASubmitTriviaQuestionAnswer::set_question_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  question_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitTriviaQuestionAnswer.question_id)
}

// optional uint32 answer_index = 2;
inline bool CMsgDOTASubmitTriviaQuestionAnswer::has_answer_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASubmitTriviaQuestionAnswer::clear_answer_index() {
  answer_index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTASubmitTriviaQuestionAnswer::answer_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitTriviaQuestionAnswer.answer_index)
  return answer_index_;
}
inline void CMsgDOTASubmitTriviaQuestionAnswer::set_answer_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  answer_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitTriviaQuestionAnswer.answer_index)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitTriviaQuestionAnswerResponse

// optional .proto.dota.EDOTATriviaAnswerResult result = 1 [default = k_EDOTATriviaAnswerResult_Success];
inline bool CMsgDOTASubmitTriviaQuestionAnswerResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitTriviaQuestionAnswerResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EDOTATriviaAnswerResult CMsgDOTASubmitTriviaQuestionAnswerResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitTriviaQuestionAnswerResponse.result)
  return static_cast< ::proto::dota::EDOTATriviaAnswerResult >(result_);
}
inline void CMsgDOTASubmitTriviaQuestionAnswerResponse::set_result(::proto::dota::EDOTATriviaAnswerResult value) {
  assert(::proto::dota::EDOTATriviaAnswerResult_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitTriviaQuestionAnswerResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAStartTriviaSession

// -------------------------------------------------------------------

// CMsgDOTAStartTriviaSessionResponse

// optional bool trivia_enabled = 1;
inline bool CMsgDOTAStartTriviaSessionResponse::has_trivia_enabled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAStartTriviaSessionResponse::clear_trivia_enabled() {
  trivia_enabled_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgDOTAStartTriviaSessionResponse::trivia_enabled() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStartTriviaSessionResponse.trivia_enabled)
  return trivia_enabled_;
}
inline void CMsgDOTAStartTriviaSessionResponse::set_trivia_enabled(bool value) {
  _has_bits_[0] |= 0x00000001u;
  trivia_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAStartTriviaSessionResponse.trivia_enabled)
}

// optional uint32 current_timestamp = 2;
inline bool CMsgDOTAStartTriviaSessionResponse::has_current_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAStartTriviaSessionResponse::clear_current_timestamp() {
  current_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAStartTriviaSessionResponse::current_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStartTriviaSessionResponse.current_timestamp)
  return current_timestamp_;
}
inline void CMsgDOTAStartTriviaSessionResponse::set_current_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  current_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAStartTriviaSessionResponse.current_timestamp)
}

// -------------------------------------------------------------------

// CMsgClientToGCGiveTip

// optional uint32 recipient_account_id = 1;
inline bool CMsgClientToGCGiveTip::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGiveTip::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGiveTip::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGiveTip.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgClientToGCGiveTip::set_recipient_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGiveTip.recipient_account_id)
}

// optional uint64 match_id = 2;
inline bool CMsgClientToGCGiveTip::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGiveTip::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCGiveTip::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGiveTip.match_id)
  return match_id_;
}
inline void CMsgClientToGCGiveTip::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGiveTip.match_id)
}

// optional uint32 event_id = 3;
inline bool CMsgClientToGCGiveTip::has_event_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGiveTip::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgClientToGCGiveTip::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGiveTip.event_id)
  return event_id_;
}
inline void CMsgClientToGCGiveTip::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGiveTip.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGiveTipResponse

// optional .proto.dota.CMsgClientToGCGiveTipResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCGiveTipResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGiveTipResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgClientToGCGiveTipResponse_Result CMsgClientToGCGiveTipResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGiveTipResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCGiveTipResponse_Result >(result_);
}
inline void CMsgClientToGCGiveTipResponse::set_result(::proto::dota::CMsgClientToGCGiveTipResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCGiveTipResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGiveTipResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAAnchorPhoneNumberRequest

// -------------------------------------------------------------------

// CMsgDOTAAnchorPhoneNumberResponse

// optional .proto.dota.CMsgDOTAAnchorPhoneNumberResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTAAnchorPhoneNumberResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAAnchorPhoneNumberResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result CMsgDOTAAnchorPhoneNumberResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAAnchorPhoneNumberResponse.result)
  return static_cast< ::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result >(result_);
}
inline void CMsgDOTAAnchorPhoneNumberResponse::set_result(::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result value) {
  assert(::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAAnchorPhoneNumberResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAUnanchorPhoneNumberRequest

// -------------------------------------------------------------------

// CMsgDOTAUnanchorPhoneNumberResponse

// optional .proto.dota.CMsgDOTAUnanchorPhoneNumberResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTAUnanchorPhoneNumberResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAUnanchorPhoneNumberResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result CMsgDOTAUnanchorPhoneNumberResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAUnanchorPhoneNumberResponse.result)
  return static_cast< ::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result >(result_);
}
inline void CMsgDOTAUnanchorPhoneNumberResponse::set_result(::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result value) {
  assert(::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAUnanchorPhoneNumberResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCToClientTipNotification

// optional uint32 tipper_account_id = 1;
inline bool CMsgGCToClientTipNotification::has_tipper_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientTipNotification::clear_tipper_account_id() {
  tipper_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientTipNotification::tipper_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTipNotification.tipper_account_id)
  return tipper_account_id_;
}
inline void CMsgGCToClientTipNotification::set_tipper_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  tipper_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTipNotification.tipper_account_id)
}

// optional string tipper_name = 2;
inline bool CMsgGCToClientTipNotification::has_tipper_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientTipNotification::clear_tipper_name() {
  tipper_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCToClientTipNotification::tipper_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTipNotification.tipper_name)
  return tipper_name_.GetNoArena();
}
inline void CMsgGCToClientTipNotification::set_tipper_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tipper_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTipNotification.tipper_name)
}
#if LANG_CXX11
inline void CMsgGCToClientTipNotification::set_tipper_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  tipper_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientTipNotification.tipper_name)
}
#endif
inline void CMsgGCToClientTipNotification::set_tipper_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  tipper_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientTipNotification.tipper_name)
}
inline void CMsgGCToClientTipNotification::set_tipper_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  tipper_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientTipNotification.tipper_name)
}
inline ::std::string* CMsgGCToClientTipNotification::mutable_tipper_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientTipNotification.tipper_name)
  return tipper_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientTipNotification::release_tipper_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientTipNotification.tipper_name)
  if (!has_tipper_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return tipper_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientTipNotification::set_allocated_tipper_name(::std::string* tipper_name) {
  if (tipper_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tipper_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tipper_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientTipNotification.tipper_name)
}

// optional uint32 recipient_account_id = 3;
inline bool CMsgGCToClientTipNotification::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientTipNotification::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToClientTipNotification::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTipNotification.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgGCToClientTipNotification::set_recipient_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTipNotification.recipient_account_id)
}

// optional string recipient_name = 4;
inline bool CMsgGCToClientTipNotification::has_recipient_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientTipNotification::clear_recipient_name() {
  recipient_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgGCToClientTipNotification::recipient_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTipNotification.recipient_name)
  return recipient_name_.GetNoArena();
}
inline void CMsgGCToClientTipNotification::set_recipient_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTipNotification.recipient_name)
}
#if LANG_CXX11
inline void CMsgGCToClientTipNotification::set_recipient_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  recipient_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientTipNotification.recipient_name)
}
#endif
inline void CMsgGCToClientTipNotification::set_recipient_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientTipNotification.recipient_name)
}
inline void CMsgGCToClientTipNotification::set_recipient_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientTipNotification.recipient_name)
}
inline ::std::string* CMsgGCToClientTipNotification::mutable_recipient_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientTipNotification.recipient_name)
  return recipient_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientTipNotification::release_recipient_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientTipNotification.recipient_name)
  if (!has_recipient_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return recipient_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientTipNotification::set_allocated_recipient_name(::std::string* recipient_name) {
  if (recipient_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  recipient_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recipient_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientTipNotification.recipient_name)
}

// optional uint32 event_id = 5;
inline bool CMsgGCToClientTipNotification::has_event_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientTipNotification::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCToClientTipNotification::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTipNotification.event_id)
  return event_id_;
}
inline void CMsgGCToClientTipNotification::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTipNotification.event_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientCommendNotification

// optional uint32 commender_account_id = 1;
inline bool CMsgGCToClientCommendNotification::has_commender_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientCommendNotification::clear_commender_account_id() {
  commender_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientCommendNotification::commender_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCommendNotification.commender_account_id)
  return commender_account_id_;
}
inline void CMsgGCToClientCommendNotification::set_commender_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  commender_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCommendNotification.commender_account_id)
}

// optional string commender_name = 2;
inline bool CMsgGCToClientCommendNotification::has_commender_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCommendNotification::clear_commender_name() {
  commender_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCToClientCommendNotification::commender_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCommendNotification.commender_name)
  return commender_name_.GetNoArena();
}
inline void CMsgGCToClientCommendNotification::set_commender_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  commender_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCommendNotification.commender_name)
}
#if LANG_CXX11
inline void CMsgGCToClientCommendNotification::set_commender_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  commender_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientCommendNotification.commender_name)
}
#endif
inline void CMsgGCToClientCommendNotification::set_commender_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  commender_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientCommendNotification.commender_name)
}
inline void CMsgGCToClientCommendNotification::set_commender_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  commender_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientCommendNotification.commender_name)
}
inline ::std::string* CMsgGCToClientCommendNotification::mutable_commender_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientCommendNotification.commender_name)
  return commender_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientCommendNotification::release_commender_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientCommendNotification.commender_name)
  if (!has_commender_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return commender_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientCommendNotification::set_allocated_commender_name(::std::string* commender_name) {
  if (commender_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  commender_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commender_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientCommendNotification.commender_name)
}

// optional uint32 flags = 3;
inline bool CMsgGCToClientCommendNotification::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientCommendNotification::clear_flags() {
  flags_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientCommendNotification::flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCommendNotification.flags)
  return flags_;
}
inline void CMsgGCToClientCommendNotification::set_flags(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCommendNotification.flags)
}

// -------------------------------------------------------------------

// CMsgGCToClientAllStarVotesRequest

// optional uint32 event_id = 1;
inline bool CMsgGCToClientAllStarVotesRequest::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientAllStarVotesRequest::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientAllStarVotesRequest::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientAllStarVotesRequest.event_id)
  return event_id_;
}
inline void CMsgGCToClientAllStarVotesRequest::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientAllStarVotesRequest.event_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientAllStarVotesReply

// repeated uint32 player_account_ids = 1;
inline int CMsgGCToClientAllStarVotesReply::player_account_ids_size() const {
  return player_account_ids_.size();
}
inline void CMsgGCToClientAllStarVotesReply::clear_player_account_ids() {
  player_account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToClientAllStarVotesReply::player_account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientAllStarVotesReply.player_account_ids)
  return player_account_ids_.Get(index);
}
inline void CMsgGCToClientAllStarVotesReply::set_player_account_ids(int index, ::google::protobuf::uint32 value) {
  player_account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientAllStarVotesReply.player_account_ids)
}
inline void CMsgGCToClientAllStarVotesReply::add_player_account_ids(::google::protobuf::uint32 value) {
  player_account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientAllStarVotesReply.player_account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToClientAllStarVotesReply::player_account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientAllStarVotesReply.player_account_ids)
  return player_account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToClientAllStarVotesReply::mutable_player_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientAllStarVotesReply.player_account_ids)
  return &player_account_ids_;
}

// -------------------------------------------------------------------

// CMsgGCToClientAllStarVotesSubmit

// optional uint32 event_id = 1;
inline bool CMsgGCToClientAllStarVotesSubmit::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientAllStarVotesSubmit::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientAllStarVotesSubmit::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientAllStarVotesSubmit.event_id)
  return event_id_;
}
inline void CMsgGCToClientAllStarVotesSubmit::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientAllStarVotesSubmit.event_id)
}

// repeated uint32 player_account_ids = 2;
inline int CMsgGCToClientAllStarVotesSubmit::player_account_ids_size() const {
  return player_account_ids_.size();
}
inline void CMsgGCToClientAllStarVotesSubmit::clear_player_account_ids() {
  player_account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToClientAllStarVotesSubmit::player_account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientAllStarVotesSubmit.player_account_ids)
  return player_account_ids_.Get(index);
}
inline void CMsgGCToClientAllStarVotesSubmit::set_player_account_ids(int index, ::google::protobuf::uint32 value) {
  player_account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientAllStarVotesSubmit.player_account_ids)
}
inline void CMsgGCToClientAllStarVotesSubmit::add_player_account_ids(::google::protobuf::uint32 value) {
  player_account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientAllStarVotesSubmit.player_account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToClientAllStarVotesSubmit::player_account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientAllStarVotesSubmit.player_account_ids)
  return player_account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToClientAllStarVotesSubmit::mutable_player_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientAllStarVotesSubmit.player_account_ids)
  return &player_account_ids_;
}

// -------------------------------------------------------------------

// CMsgGCToClientAllStarVotesSubmitReply

// optional .proto.dota.CMsgGCToClientAllStarVotesSubmitReply.Result result = 1 [default = SUCCESS];
inline bool CMsgGCToClientAllStarVotesSubmitReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientAllStarVotesSubmitReply::clear_result() {
  result_ = 1;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgGCToClientAllStarVotesSubmitReply_Result CMsgGCToClientAllStarVotesSubmitReply::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientAllStarVotesSubmitReply.result)
  return static_cast< ::proto::dota::CMsgGCToClientAllStarVotesSubmitReply_Result >(result_);
}
inline void CMsgGCToClientAllStarVotesSubmitReply::set_result(::proto::dota::CMsgGCToClientAllStarVotesSubmitReply_Result value) {
  assert(::proto::dota::CMsgGCToClientAllStarVotesSubmitReply_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientAllStarVotesSubmitReply.result)
}

// -------------------------------------------------------------------

// CMsgDOTAClientToGCQuickStatsRequest

// optional uint32 player_account_id = 1;
inline bool CMsgDOTAClientToGCQuickStatsRequest::has_player_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsRequest::clear_player_account_id() {
  player_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAClientToGCQuickStatsRequest::player_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsRequest.player_account_id)
  return player_account_id_;
}
inline void CMsgDOTAClientToGCQuickStatsRequest::set_player_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClientToGCQuickStatsRequest.player_account_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgDOTAClientToGCQuickStatsRequest::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsRequest::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAClientToGCQuickStatsRequest::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsRequest.hero_id)
  return hero_id_;
}
inline void CMsgDOTAClientToGCQuickStatsRequest::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClientToGCQuickStatsRequest.hero_id)
}

// optional uint32 item_id = 3;
inline bool CMsgDOTAClientToGCQuickStatsRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsRequest::clear_item_id() {
  item_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAClientToGCQuickStatsRequest::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsRequest.item_id)
  return item_id_;
}
inline void CMsgDOTAClientToGCQuickStatsRequest::set_item_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClientToGCQuickStatsRequest.item_id)
}

// optional uint32 league_id = 4;
inline bool CMsgDOTAClientToGCQuickStatsRequest::has_league_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsRequest::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAClientToGCQuickStatsRequest::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsRequest.league_id)
  return league_id_;
}
inline void CMsgDOTAClientToGCQuickStatsRequest::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClientToGCQuickStatsRequest.league_id)
}

// -------------------------------------------------------------------

// CMsgDOTAClientToGCQuickStatsResponse_SimpleStats

// optional float win_percent = 1;
inline bool CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::has_win_percent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::clear_win_percent() {
  win_percent_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::win_percent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats.win_percent)
  return win_percent_;
}
inline void CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::set_win_percent(float value) {
  _has_bits_[0] |= 0x00000001u;
  win_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats.win_percent)
}

// optional float pick_percent = 2;
inline bool CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::has_pick_percent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::clear_pick_percent() {
  pick_percent_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::pick_percent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats.pick_percent)
  return pick_percent_;
}
inline void CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::set_pick_percent(float value) {
  _has_bits_[0] |= 0x00000002u;
  pick_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats.pick_percent)
}

// optional uint32 win_count = 3;
inline bool CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::has_win_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::clear_win_count() {
  win_count_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::win_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats.win_count)
  return win_count_;
}
inline void CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::set_win_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  win_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats.win_count)
}

// optional uint32 pick_count = 4;
inline bool CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::has_pick_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::clear_pick_count() {
  pick_count_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::pick_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats.pick_count)
  return pick_count_;
}
inline void CMsgDOTAClientToGCQuickStatsResponse_SimpleStats::set_pick_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  pick_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats.pick_count)
}

// -------------------------------------------------------------------

// CMsgDOTAClientToGCQuickStatsResponse

// optional .proto.dota.CMsgDOTAClientToGCQuickStatsRequest original_request = 1;
inline bool CMsgDOTAClientToGCQuickStatsResponse::has_original_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::clear_original_request() {
  if (original_request_ != nullptr) original_request_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgDOTAClientToGCQuickStatsRequest& CMsgDOTAClientToGCQuickStatsResponse::original_request() const {
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsRequest* p = original_request_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.original_request)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAClientToGCQuickStatsRequest*>(
      &::proto::dota::_CMsgDOTAClientToGCQuickStatsRequest_default_instance_);
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsRequest* CMsgDOTAClientToGCQuickStatsResponse::release_original_request() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.original_request)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsRequest* temp = original_request_;
  original_request_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsRequest* CMsgDOTAClientToGCQuickStatsResponse::mutable_original_request() {
  _has_bits_[0] |= 0x00000001u;
  if (original_request_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAClientToGCQuickStatsRequest>(GetArenaNoVirtual());
    original_request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.original_request)
  return original_request_;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::set_allocated_original_request(::proto::dota::CMsgDOTAClientToGCQuickStatsRequest* original_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete original_request_;
  }
  if (original_request) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      original_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, original_request, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  original_request_ = original_request;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.original_request)
}

// optional .proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats hero_stats = 2;
inline bool CMsgDOTAClientToGCQuickStatsResponse::has_hero_stats() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::clear_hero_stats() {
  if (hero_stats_ != nullptr) hero_stats_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& CMsgDOTAClientToGCQuickStatsResponse::hero_stats() const {
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* p = hero_stats_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.hero_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats*>(
      &::proto::dota::_CMsgDOTAClientToGCQuickStatsResponse_SimpleStats_default_instance_);
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* CMsgDOTAClientToGCQuickStatsResponse::release_hero_stats() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.hero_stats)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* temp = hero_stats_;
  hero_stats_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* CMsgDOTAClientToGCQuickStatsResponse::mutable_hero_stats() {
  _has_bits_[0] |= 0x00000002u;
  if (hero_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats>(GetArenaNoVirtual());
    hero_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.hero_stats)
  return hero_stats_;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::set_allocated_hero_stats(::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* hero_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete hero_stats_;
  }
  if (hero_stats) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      hero_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hero_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  hero_stats_ = hero_stats;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.hero_stats)
}

// optional .proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats item_stats = 3;
inline bool CMsgDOTAClientToGCQuickStatsResponse::has_item_stats() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::clear_item_stats() {
  if (item_stats_ != nullptr) item_stats_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& CMsgDOTAClientToGCQuickStatsResponse::item_stats() const {
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* p = item_stats_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.item_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats*>(
      &::proto::dota::_CMsgDOTAClientToGCQuickStatsResponse_SimpleStats_default_instance_);
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* CMsgDOTAClientToGCQuickStatsResponse::release_item_stats() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.item_stats)
  _has_bits_[0] &= ~0x00000004u;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* temp = item_stats_;
  item_stats_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* CMsgDOTAClientToGCQuickStatsResponse::mutable_item_stats() {
  _has_bits_[0] |= 0x00000004u;
  if (item_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats>(GetArenaNoVirtual());
    item_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.item_stats)
  return item_stats_;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::set_allocated_item_stats(::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* item_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete item_stats_;
  }
  if (item_stats) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      item_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  item_stats_ = item_stats;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.item_stats)
}

// optional .proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats item_hero_stats = 4;
inline bool CMsgDOTAClientToGCQuickStatsResponse::has_item_hero_stats() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::clear_item_hero_stats() {
  if (item_hero_stats_ != nullptr) item_hero_stats_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& CMsgDOTAClientToGCQuickStatsResponse::item_hero_stats() const {
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* p = item_hero_stats_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.item_hero_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats*>(
      &::proto::dota::_CMsgDOTAClientToGCQuickStatsResponse_SimpleStats_default_instance_);
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* CMsgDOTAClientToGCQuickStatsResponse::release_item_hero_stats() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.item_hero_stats)
  _has_bits_[0] &= ~0x00000008u;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* temp = item_hero_stats_;
  item_hero_stats_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* CMsgDOTAClientToGCQuickStatsResponse::mutable_item_hero_stats() {
  _has_bits_[0] |= 0x00000008u;
  if (item_hero_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats>(GetArenaNoVirtual());
    item_hero_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.item_hero_stats)
  return item_hero_stats_;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::set_allocated_item_hero_stats(::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* item_hero_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete item_hero_stats_;
  }
  if (item_hero_stats) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      item_hero_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item_hero_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  item_hero_stats_ = item_hero_stats;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.item_hero_stats)
}

// optional .proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats item_player_stats = 5;
inline bool CMsgDOTAClientToGCQuickStatsResponse::has_item_player_stats() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::clear_item_player_stats() {
  if (item_player_stats_ != nullptr) item_player_stats_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& CMsgDOTAClientToGCQuickStatsResponse::item_player_stats() const {
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* p = item_player_stats_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.item_player_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats*>(
      &::proto::dota::_CMsgDOTAClientToGCQuickStatsResponse_SimpleStats_default_instance_);
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* CMsgDOTAClientToGCQuickStatsResponse::release_item_player_stats() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.item_player_stats)
  _has_bits_[0] &= ~0x00000010u;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* temp = item_player_stats_;
  item_player_stats_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* CMsgDOTAClientToGCQuickStatsResponse::mutable_item_player_stats() {
  _has_bits_[0] |= 0x00000010u;
  if (item_player_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats>(GetArenaNoVirtual());
    item_player_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.item_player_stats)
  return item_player_stats_;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::set_allocated_item_player_stats(::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* item_player_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete item_player_stats_;
  }
  if (item_player_stats) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      item_player_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item_player_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  item_player_stats_ = item_player_stats;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.item_player_stats)
}

// optional .proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats hero_player_stats = 6;
inline bool CMsgDOTAClientToGCQuickStatsResponse::has_hero_player_stats() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::clear_hero_player_stats() {
  if (hero_player_stats_ != nullptr) hero_player_stats_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& CMsgDOTAClientToGCQuickStatsResponse::hero_player_stats() const {
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* p = hero_player_stats_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.hero_player_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats*>(
      &::proto::dota::_CMsgDOTAClientToGCQuickStatsResponse_SimpleStats_default_instance_);
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* CMsgDOTAClientToGCQuickStatsResponse::release_hero_player_stats() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.hero_player_stats)
  _has_bits_[0] &= ~0x00000020u;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* temp = hero_player_stats_;
  hero_player_stats_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* CMsgDOTAClientToGCQuickStatsResponse::mutable_hero_player_stats() {
  _has_bits_[0] |= 0x00000020u;
  if (hero_player_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats>(GetArenaNoVirtual());
    hero_player_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.hero_player_stats)
  return hero_player_stats_;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::set_allocated_hero_player_stats(::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* hero_player_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete hero_player_stats_;
  }
  if (hero_player_stats) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      hero_player_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hero_player_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  hero_player_stats_ = hero_player_stats;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.hero_player_stats)
}

// optional .proto.dota.CMsgDOTAClientToGCQuickStatsResponse.SimpleStats full_set_stats = 7;
inline bool CMsgDOTAClientToGCQuickStatsResponse::has_full_set_stats() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::clear_full_set_stats() {
  if (full_set_stats_ != nullptr) full_set_stats_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats& CMsgDOTAClientToGCQuickStatsResponse::full_set_stats() const {
  const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* p = full_set_stats_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.full_set_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats*>(
      &::proto::dota::_CMsgDOTAClientToGCQuickStatsResponse_SimpleStats_default_instance_);
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* CMsgDOTAClientToGCQuickStatsResponse::release_full_set_stats() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.full_set_stats)
  _has_bits_[0] &= ~0x00000040u;
  ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* temp = full_set_stats_;
  full_set_stats_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* CMsgDOTAClientToGCQuickStatsResponse::mutable_full_set_stats() {
  _has_bits_[0] |= 0x00000040u;
  if (full_set_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats>(GetArenaNoVirtual());
    full_set_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.full_set_stats)
  return full_set_stats_;
}
inline void CMsgDOTAClientToGCQuickStatsResponse::set_allocated_full_set_stats(::proto::dota::CMsgDOTAClientToGCQuickStatsResponse_SimpleStats* full_set_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete full_set_stats_;
  }
  if (full_set_stats) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      full_set_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, full_set_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  full_set_stats_ = full_set_stats;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAClientToGCQuickStatsResponse.full_set_stats)
}

// -------------------------------------------------------------------

// CMsgDOTASelectionPriorityChoiceRequest

// optional .proto.dota.DOTASelectionPriorityChoice choice = 1 [default = k_DOTASelectionPriorityChoice_Invalid];
inline bool CMsgDOTASelectionPriorityChoiceRequest::has_choice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASelectionPriorityChoiceRequest::clear_choice() {
  choice_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::DOTASelectionPriorityChoice CMsgDOTASelectionPriorityChoiceRequest::choice() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASelectionPriorityChoiceRequest.choice)
  return static_cast< ::proto::dota::DOTASelectionPriorityChoice >(choice_);
}
inline void CMsgDOTASelectionPriorityChoiceRequest::set_choice(::proto::dota::DOTASelectionPriorityChoice value) {
  assert(::proto::dota::DOTASelectionPriorityChoice_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  choice_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASelectionPriorityChoiceRequest.choice)
}

// -------------------------------------------------------------------

// CMsgDOTASelectionPriorityChoiceResponse

// optional .proto.dota.CMsgDOTASelectionPriorityChoiceResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTASelectionPriorityChoiceResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASelectionPriorityChoiceResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgDOTASelectionPriorityChoiceResponse_Result CMsgDOTASelectionPriorityChoiceResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASelectionPriorityChoiceResponse.result)
  return static_cast< ::proto::dota::CMsgDOTASelectionPriorityChoiceResponse_Result >(result_);
}
inline void CMsgDOTASelectionPriorityChoiceResponse::set_result(::proto::dota::CMsgDOTASelectionPriorityChoiceResponse_Result value) {
  assert(::proto::dota::CMsgDOTASelectionPriorityChoiceResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASelectionPriorityChoiceResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAGameAutographReward

// optional string badge_id = 1;
inline bool CMsgDOTAGameAutographReward::has_badge_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGameAutographReward::clear_badge_id() {
  badge_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTAGameAutographReward::badge_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGameAutographReward.badge_id)
  return badge_id_.GetNoArena();
}
inline void CMsgDOTAGameAutographReward::set_badge_id(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  badge_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGameAutographReward.badge_id)
}
#if LANG_CXX11
inline void CMsgDOTAGameAutographReward::set_badge_id(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  badge_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAGameAutographReward.badge_id)
}
#endif
inline void CMsgDOTAGameAutographReward::set_badge_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  badge_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAGameAutographReward.badge_id)
}
inline void CMsgDOTAGameAutographReward::set_badge_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  badge_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAGameAutographReward.badge_id)
}
inline ::std::string* CMsgDOTAGameAutographReward::mutable_badge_id() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAGameAutographReward.badge_id)
  return badge_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAGameAutographReward::release_badge_id() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAGameAutographReward.badge_id)
  if (!has_badge_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return badge_id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAGameAutographReward::set_allocated_badge_id(::std::string* badge_id) {
  if (badge_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  badge_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), badge_id);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAGameAutographReward.badge_id)
}

// -------------------------------------------------------------------

// CMsgDOTAGameAutographRewardResponse

// optional .proto.dota.CMsgDOTAGameAutographRewardResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTAGameAutographRewardResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGameAutographRewardResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgDOTAGameAutographRewardResponse_Result CMsgDOTAGameAutographRewardResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGameAutographRewardResponse.result)
  return static_cast< ::proto::dota::CMsgDOTAGameAutographRewardResponse_Result >(result_);
}
inline void CMsgDOTAGameAutographRewardResponse::set_result(::proto::dota::CMsgDOTAGameAutographRewardResponse_Result value) {
  assert(::proto::dota::CMsgDOTAGameAutographRewardResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGameAutographRewardResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTADestroyLobbyRequest

// -------------------------------------------------------------------

// CMsgDOTADestroyLobbyResponse

// optional .proto.dota.CMsgDOTADestroyLobbyResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTADestroyLobbyResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTADestroyLobbyResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgDOTADestroyLobbyResponse_Result CMsgDOTADestroyLobbyResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADestroyLobbyResponse.result)
  return static_cast< ::proto::dota::CMsgDOTADestroyLobbyResponse_Result >(result_);
}
inline void CMsgDOTADestroyLobbyResponse::set_result(::proto::dota::CMsgDOTADestroyLobbyResponse_Result value) {
  assert(::proto::dota::CMsgDOTADestroyLobbyResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADestroyLobbyResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAGetRecentPlayTimeFriendsRequest

// -------------------------------------------------------------------

// CMsgDOTAGetRecentPlayTimeFriendsResponse

// repeated fixed32 account_ids = 1;
inline int CMsgDOTAGetRecentPlayTimeFriendsResponse::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgDOTAGetRecentPlayTimeFriendsResponse::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAGetRecentPlayTimeFriendsResponse::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetRecentPlayTimeFriendsResponse.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgDOTAGetRecentPlayTimeFriendsResponse::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetRecentPlayTimeFriendsResponse.account_ids)
}
inline void CMsgDOTAGetRecentPlayTimeFriendsResponse::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAGetRecentPlayTimeFriendsResponse.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAGetRecentPlayTimeFriendsResponse::account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAGetRecentPlayTimeFriendsResponse.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAGetRecentPlayTimeFriendsResponse::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAGetRecentPlayTimeFriendsResponse.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgPurchaseItemWithEventPoints

// optional uint32 item_def = 1;
inline bool CMsgPurchaseItemWithEventPoints::has_item_def() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPurchaseItemWithEventPoints::clear_item_def() {
  item_def_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgPurchaseItemWithEventPoints::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPurchaseItemWithEventPoints.item_def)
  return item_def_;
}
inline void CMsgPurchaseItemWithEventPoints::set_item_def(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPurchaseItemWithEventPoints.item_def)
}

// optional uint32 quantity = 2;
inline bool CMsgPurchaseItemWithEventPoints::has_quantity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPurchaseItemWithEventPoints::clear_quantity() {
  quantity_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgPurchaseItemWithEventPoints::quantity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPurchaseItemWithEventPoints.quantity)
  return quantity_;
}
inline void CMsgPurchaseItemWithEventPoints::set_quantity(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPurchaseItemWithEventPoints.quantity)
}

// optional .proto.dota.EEvent event_id = 3 [default = EVENT_ID_NONE];
inline bool CMsgPurchaseItemWithEventPoints::has_event_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPurchaseItemWithEventPoints::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::proto::dota::EEvent CMsgPurchaseItemWithEventPoints::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPurchaseItemWithEventPoints.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgPurchaseItemWithEventPoints::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPurchaseItemWithEventPoints.event_id)
}

// optional bool use_premium_points = 4;
inline bool CMsgPurchaseItemWithEventPoints::has_use_premium_points() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPurchaseItemWithEventPoints::clear_use_premium_points() {
  use_premium_points_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgPurchaseItemWithEventPoints::use_premium_points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPurchaseItemWithEventPoints.use_premium_points)
  return use_premium_points_;
}
inline void CMsgPurchaseItemWithEventPoints::set_use_premium_points(bool value) {
  _has_bits_[0] |= 0x00000008u;
  use_premium_points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPurchaseItemWithEventPoints.use_premium_points)
}

// -------------------------------------------------------------------

// CMsgPurchaseItemWithEventPointsResponse

// optional .proto.dota.CMsgPurchaseItemWithEventPointsResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgPurchaseItemWithEventPointsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPurchaseItemWithEventPointsResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgPurchaseItemWithEventPointsResponse_Result CMsgPurchaseItemWithEventPointsResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPurchaseItemWithEventPointsResponse.result)
  return static_cast< ::proto::dota::CMsgPurchaseItemWithEventPointsResponse_Result >(result_);
}
inline void CMsgPurchaseItemWithEventPointsResponse::set_result(::proto::dota::CMsgPurchaseItemWithEventPointsResponse_Result value) {
  assert(::proto::dota::CMsgPurchaseItemWithEventPointsResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPurchaseItemWithEventPointsResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCRequestItemRecommendations

// optional uint32 mmr = 1;
inline bool CMsgGCRequestItemRecommendations::has_mmr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCRequestItemRecommendations::clear_mmr() {
  mmr_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCRequestItemRecommendations::mmr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestItemRecommendations.mmr)
  return mmr_;
}
inline void CMsgGCRequestItemRecommendations::set_mmr(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  mmr_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestItemRecommendations.mmr)
}

// optional uint32 hero_id = 2;
inline bool CMsgGCRequestItemRecommendations::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCRequestItemRecommendations::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCRequestItemRecommendations::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestItemRecommendations.hero_id)
  return hero_id_;
}
inline void CMsgGCRequestItemRecommendations::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestItemRecommendations.hero_id)
}

// repeated uint32 allied_hero_ids = 3;
inline int CMsgGCRequestItemRecommendations::allied_hero_ids_size() const {
  return allied_hero_ids_.size();
}
inline void CMsgGCRequestItemRecommendations::clear_allied_hero_ids() {
  allied_hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCRequestItemRecommendations::allied_hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestItemRecommendations.allied_hero_ids)
  return allied_hero_ids_.Get(index);
}
inline void CMsgGCRequestItemRecommendations::set_allied_hero_ids(int index, ::google::protobuf::uint32 value) {
  allied_hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestItemRecommendations.allied_hero_ids)
}
inline void CMsgGCRequestItemRecommendations::add_allied_hero_ids(::google::protobuf::uint32 value) {
  allied_hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCRequestItemRecommendations.allied_hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCRequestItemRecommendations::allied_hero_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCRequestItemRecommendations.allied_hero_ids)
  return allied_hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCRequestItemRecommendations::mutable_allied_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCRequestItemRecommendations.allied_hero_ids)
  return &allied_hero_ids_;
}

// repeated uint32 enemy_hero_ids = 4;
inline int CMsgGCRequestItemRecommendations::enemy_hero_ids_size() const {
  return enemy_hero_ids_.size();
}
inline void CMsgGCRequestItemRecommendations::clear_enemy_hero_ids() {
  enemy_hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCRequestItemRecommendations::enemy_hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestItemRecommendations.enemy_hero_ids)
  return enemy_hero_ids_.Get(index);
}
inline void CMsgGCRequestItemRecommendations::set_enemy_hero_ids(int index, ::google::protobuf::uint32 value) {
  enemy_hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestItemRecommendations.enemy_hero_ids)
}
inline void CMsgGCRequestItemRecommendations::add_enemy_hero_ids(::google::protobuf::uint32 value) {
  enemy_hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCRequestItemRecommendations.enemy_hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCRequestItemRecommendations::enemy_hero_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCRequestItemRecommendations.enemy_hero_ids)
  return enemy_hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCRequestItemRecommendations::mutable_enemy_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCRequestItemRecommendations.enemy_hero_ids)
  return &enemy_hero_ids_;
}

// repeated uint32 inventory_items = 5;
inline int CMsgGCRequestItemRecommendations::inventory_items_size() const {
  return inventory_items_.size();
}
inline void CMsgGCRequestItemRecommendations::clear_inventory_items() {
  inventory_items_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCRequestItemRecommendations::inventory_items(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestItemRecommendations.inventory_items)
  return inventory_items_.Get(index);
}
inline void CMsgGCRequestItemRecommendations::set_inventory_items(int index, ::google::protobuf::uint32 value) {
  inventory_items_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestItemRecommendations.inventory_items)
}
inline void CMsgGCRequestItemRecommendations::add_inventory_items(::google::protobuf::uint32 value) {
  inventory_items_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCRequestItemRecommendations.inventory_items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCRequestItemRecommendations::inventory_items() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCRequestItemRecommendations.inventory_items)
  return inventory_items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCRequestItemRecommendations::mutable_inventory_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCRequestItemRecommendations.inventory_items)
  return &inventory_items_;
}

// optional int32 game_time = 6;
inline bool CMsgGCRequestItemRecommendations::has_game_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCRequestItemRecommendations::clear_game_time() {
  game_time_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CMsgGCRequestItemRecommendations::game_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestItemRecommendations.game_time)
  return game_time_;
}
inline void CMsgGCRequestItemRecommendations::set_game_time(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestItemRecommendations.game_time)
}

// optional uint32 gold = 7;
inline bool CMsgGCRequestItemRecommendations::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCRequestItemRecommendations::clear_gold() {
  gold_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCRequestItemRecommendations::gold() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestItemRecommendations.gold)
  return gold_;
}
inline void CMsgGCRequestItemRecommendations::set_gold(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  gold_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestItemRecommendations.gold)
}

// optional uint32 net_worth = 8;
inline bool CMsgGCRequestItemRecommendations::has_net_worth() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCRequestItemRecommendations::clear_net_worth() {
  net_worth_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCRequestItemRecommendations::net_worth() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestItemRecommendations.net_worth)
  return net_worth_;
}
inline void CMsgGCRequestItemRecommendations::set_net_worth(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  net_worth_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestItemRecommendations.net_worth)
}

// -------------------------------------------------------------------

// CMsgGCRequestItemRecommendationsResponse

// repeated uint32 recommended_item_ids = 1;
inline int CMsgGCRequestItemRecommendationsResponse::recommended_item_ids_size() const {
  return recommended_item_ids_.size();
}
inline void CMsgGCRequestItemRecommendationsResponse::clear_recommended_item_ids() {
  recommended_item_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCRequestItemRecommendationsResponse::recommended_item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestItemRecommendationsResponse.recommended_item_ids)
  return recommended_item_ids_.Get(index);
}
inline void CMsgGCRequestItemRecommendationsResponse::set_recommended_item_ids(int index, ::google::protobuf::uint32 value) {
  recommended_item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestItemRecommendationsResponse.recommended_item_ids)
}
inline void CMsgGCRequestItemRecommendationsResponse::add_recommended_item_ids(::google::protobuf::uint32 value) {
  recommended_item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCRequestItemRecommendationsResponse.recommended_item_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCRequestItemRecommendationsResponse::recommended_item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCRequestItemRecommendationsResponse.recommended_item_ids)
  return recommended_item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCRequestItemRecommendationsResponse::mutable_recommended_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCRequestItemRecommendationsResponse.recommended_item_ids)
  return &recommended_item_ids_;
}

// -------------------------------------------------------------------

// CMsgGCRequestSkillUpRecommendations

// optional uint32 mmr = 1;
inline bool CMsgGCRequestSkillUpRecommendations::has_mmr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCRequestSkillUpRecommendations::clear_mmr() {
  mmr_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCRequestSkillUpRecommendations::mmr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestSkillUpRecommendations.mmr)
  return mmr_;
}
inline void CMsgGCRequestSkillUpRecommendations::set_mmr(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  mmr_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestSkillUpRecommendations.mmr)
}

// optional uint32 hero_id = 2;
inline bool CMsgGCRequestSkillUpRecommendations::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCRequestSkillUpRecommendations::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCRequestSkillUpRecommendations::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestSkillUpRecommendations.hero_id)
  return hero_id_;
}
inline void CMsgGCRequestSkillUpRecommendations::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestSkillUpRecommendations.hero_id)
}

// repeated uint32 allied_hero_ids = 3;
inline int CMsgGCRequestSkillUpRecommendations::allied_hero_ids_size() const {
  return allied_hero_ids_.size();
}
inline void CMsgGCRequestSkillUpRecommendations::clear_allied_hero_ids() {
  allied_hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCRequestSkillUpRecommendations::allied_hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestSkillUpRecommendations.allied_hero_ids)
  return allied_hero_ids_.Get(index);
}
inline void CMsgGCRequestSkillUpRecommendations::set_allied_hero_ids(int index, ::google::protobuf::uint32 value) {
  allied_hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestSkillUpRecommendations.allied_hero_ids)
}
inline void CMsgGCRequestSkillUpRecommendations::add_allied_hero_ids(::google::protobuf::uint32 value) {
  allied_hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCRequestSkillUpRecommendations.allied_hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCRequestSkillUpRecommendations::allied_hero_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCRequestSkillUpRecommendations.allied_hero_ids)
  return allied_hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCRequestSkillUpRecommendations::mutable_allied_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCRequestSkillUpRecommendations.allied_hero_ids)
  return &allied_hero_ids_;
}

// repeated uint32 enemy_hero_ids = 4;
inline int CMsgGCRequestSkillUpRecommendations::enemy_hero_ids_size() const {
  return enemy_hero_ids_.size();
}
inline void CMsgGCRequestSkillUpRecommendations::clear_enemy_hero_ids() {
  enemy_hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCRequestSkillUpRecommendations::enemy_hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestSkillUpRecommendations.enemy_hero_ids)
  return enemy_hero_ids_.Get(index);
}
inline void CMsgGCRequestSkillUpRecommendations::set_enemy_hero_ids(int index, ::google::protobuf::uint32 value) {
  enemy_hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestSkillUpRecommendations.enemy_hero_ids)
}
inline void CMsgGCRequestSkillUpRecommendations::add_enemy_hero_ids(::google::protobuf::uint32 value) {
  enemy_hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCRequestSkillUpRecommendations.enemy_hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCRequestSkillUpRecommendations::enemy_hero_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCRequestSkillUpRecommendations.enemy_hero_ids)
  return enemy_hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCRequestSkillUpRecommendations::mutable_enemy_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCRequestSkillUpRecommendations.enemy_hero_ids)
  return &enemy_hero_ids_;
}

// repeated uint32 ability_ids = 5;
inline int CMsgGCRequestSkillUpRecommendations::ability_ids_size() const {
  return ability_ids_.size();
}
inline void CMsgGCRequestSkillUpRecommendations::clear_ability_ids() {
  ability_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCRequestSkillUpRecommendations::ability_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestSkillUpRecommendations.ability_ids)
  return ability_ids_.Get(index);
}
inline void CMsgGCRequestSkillUpRecommendations::set_ability_ids(int index, ::google::protobuf::uint32 value) {
  ability_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestSkillUpRecommendations.ability_ids)
}
inline void CMsgGCRequestSkillUpRecommendations::add_ability_ids(::google::protobuf::uint32 value) {
  ability_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCRequestSkillUpRecommendations.ability_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCRequestSkillUpRecommendations::ability_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCRequestSkillUpRecommendations.ability_ids)
  return ability_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCRequestSkillUpRecommendations::mutable_ability_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCRequestSkillUpRecommendations.ability_ids)
  return &ability_ids_;
}

// -------------------------------------------------------------------

// CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection

// optional uint32 ability_id = 1;
inline bool CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection::has_ability_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection::ability_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestSkillUpRecommendationsResponse.AbilitySelection.ability_id)
  return ability_id_;
}
inline void CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection::set_ability_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestSkillUpRecommendationsResponse.AbilitySelection.ability_id)
}

// optional float weight = 2;
inline bool CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection::clear_weight() {
  weight_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection::weight() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestSkillUpRecommendationsResponse.AbilitySelection.weight)
  return weight_;
}
inline void CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection::set_weight(float value) {
  _has_bits_[0] |= 0x00000002u;
  weight_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestSkillUpRecommendationsResponse.AbilitySelection.weight)
}

// -------------------------------------------------------------------

// CMsgGCRequestSkillUpRecommendationsResponse

// repeated .proto.dota.CMsgGCRequestSkillUpRecommendationsResponse.AbilitySelection abilities = 1;
inline int CMsgGCRequestSkillUpRecommendationsResponse::abilities_size() const {
  return abilities_.size();
}
inline void CMsgGCRequestSkillUpRecommendationsResponse::clear_abilities() {
  abilities_.Clear();
}
inline ::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection* CMsgGCRequestSkillUpRecommendationsResponse::mutable_abilities(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCRequestSkillUpRecommendationsResponse.abilities)
  return abilities_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection >*
CMsgGCRequestSkillUpRecommendationsResponse::mutable_abilities() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCRequestSkillUpRecommendationsResponse.abilities)
  return &abilities_;
}
inline const ::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection& CMsgGCRequestSkillUpRecommendationsResponse::abilities(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestSkillUpRecommendationsResponse.abilities)
  return abilities_.Get(index);
}
inline ::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection* CMsgGCRequestSkillUpRecommendationsResponse::add_abilities() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCRequestSkillUpRecommendationsResponse.abilities)
  return abilities_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCRequestSkillUpRecommendationsResponse_AbilitySelection >&
CMsgGCRequestSkillUpRecommendationsResponse::abilities() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCRequestSkillUpRecommendationsResponse.abilities)
  return abilities_;
}

// -------------------------------------------------------------------

// CMsgClientToGCRecycleHeroRelic

// repeated uint64 item_ids = 1;
inline int CMsgClientToGCRecycleHeroRelic::item_ids_size() const {
  return item_ids_.size();
}
inline void CMsgClientToGCRecycleHeroRelic::clear_item_ids() {
  item_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientToGCRecycleHeroRelic::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecycleHeroRelic.item_ids)
  return item_ids_.Get(index);
}
inline void CMsgClientToGCRecycleHeroRelic::set_item_ids(int index, ::google::protobuf::uint64 value) {
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecycleHeroRelic.item_ids)
}
inline void CMsgClientToGCRecycleHeroRelic::add_item_ids(::google::protobuf::uint64 value) {
  item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCRecycleHeroRelic.item_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCRecycleHeroRelic::item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCRecycleHeroRelic.item_ids)
  return item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCRecycleHeroRelic::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCRecycleHeroRelic.item_ids)
  return &item_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCRecycleHeroRelicResponse

// optional .proto.dota.CMsgClientToGCRecycleHeroRelicResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCRecycleHeroRelicResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRecycleHeroRelicResponse::clear_result() {
  result_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::CMsgClientToGCRecycleHeroRelicResponse_Result CMsgClientToGCRecycleHeroRelicResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecycleHeroRelicResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCRecycleHeroRelicResponse_Result >(result_);
}
inline void CMsgClientToGCRecycleHeroRelicResponse::set_result(::proto::dota::CMsgClientToGCRecycleHeroRelicResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCRecycleHeroRelicResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecycleHeroRelicResponse.result)
}

// optional uint32 dust_amount = 2;
inline bool CMsgClientToGCRecycleHeroRelicResponse::has_dust_amount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRecycleHeroRelicResponse::clear_dust_amount() {
  dust_amount_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRecycleHeroRelicResponse::dust_amount() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecycleHeroRelicResponse.dust_amount)
  return dust_amount_;
}
inline void CMsgClientToGCRecycleHeroRelicResponse::set_dust_amount(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  dust_amount_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecycleHeroRelicResponse.dust_amount)
}

// -------------------------------------------------------------------

// CMsgPurchaseHeroRelic

// optional uint32 hero_id = 1;
inline bool CMsgPurchaseHeroRelic::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPurchaseHeroRelic::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgPurchaseHeroRelic::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPurchaseHeroRelic.hero_id)
  return hero_id_;
}
inline void CMsgPurchaseHeroRelic::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPurchaseHeroRelic.hero_id)
}

// optional uint32 kill_eater_type = 2;
inline bool CMsgPurchaseHeroRelic::has_kill_eater_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPurchaseHeroRelic::clear_kill_eater_type() {
  kill_eater_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgPurchaseHeroRelic::kill_eater_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPurchaseHeroRelic.kill_eater_type)
  return kill_eater_type_;
}
inline void CMsgPurchaseHeroRelic::set_kill_eater_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  kill_eater_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPurchaseHeroRelic.kill_eater_type)
}

// -------------------------------------------------------------------

// CMsgPurchaseHeroRelicResponse

// optional .proto.dota.EPurchaseHeroRelicResult result = 1 [default = k_EPurchaseHeroRelicResult_Success];
inline bool CMsgPurchaseHeroRelicResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPurchaseHeroRelicResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EPurchaseHeroRelicResult CMsgPurchaseHeroRelicResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPurchaseHeroRelicResponse.result)
  return static_cast< ::proto::dota::EPurchaseHeroRelicResult >(result_);
}
inline void CMsgPurchaseHeroRelicResponse::set_result(::proto::dota::EPurchaseHeroRelicResult value) {
  assert(::proto::dota::EPurchaseHeroRelicResult_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPurchaseHeroRelicResponse.result)
}

// -------------------------------------------------------------------

// CMsgPurchaseHeroRandomRelic

// optional uint32 hero_id = 1;
inline bool CMsgPurchaseHeroRandomRelic::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPurchaseHeroRandomRelic::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgPurchaseHeroRandomRelic::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPurchaseHeroRandomRelic.hero_id)
  return hero_id_;
}
inline void CMsgPurchaseHeroRandomRelic::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPurchaseHeroRandomRelic.hero_id)
}

// -------------------------------------------------------------------

// CMsgPurchaseHeroRandomRelicResponse

// optional .proto.dota.EPurchaseHeroRelicResult result = 1 [default = k_EPurchaseHeroRelicResult_Success];
inline bool CMsgPurchaseHeroRandomRelicResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPurchaseHeroRandomRelicResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EPurchaseHeroRelicResult CMsgPurchaseHeroRandomRelicResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPurchaseHeroRandomRelicResponse.result)
  return static_cast< ::proto::dota::EPurchaseHeroRelicResult >(result_);
}
inline void CMsgPurchaseHeroRandomRelicResponse::set_result(::proto::dota::EPurchaseHeroRelicResult value) {
  assert(::proto::dota::EPurchaseHeroRelicResult_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPurchaseHeroRandomRelicResponse.result)
}

// optional uint32 kill_eater_type = 2;
inline bool CMsgPurchaseHeroRandomRelicResponse::has_kill_eater_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPurchaseHeroRandomRelicResponse::clear_kill_eater_type() {
  kill_eater_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgPurchaseHeroRandomRelicResponse::kill_eater_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPurchaseHeroRandomRelicResponse.kill_eater_type)
  return kill_eater_type_;
}
inline void CMsgPurchaseHeroRandomRelicResponse::set_kill_eater_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  kill_eater_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPurchaseHeroRandomRelicResponse.kill_eater_type)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestPlusWeeklyChallengeResult

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestPlusWeeklyChallengeResult::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestPlusWeeklyChallengeResult::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgClientToGCRequestPlusWeeklyChallengeResult::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestPlusWeeklyChallengeResult.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgClientToGCRequestPlusWeeklyChallengeResult::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestPlusWeeklyChallengeResult.event_id)
}

// optional uint32 week = 2;
inline bool CMsgClientToGCRequestPlusWeeklyChallengeResult::has_week() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestPlusWeeklyChallengeResult::clear_week() {
  week_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestPlusWeeklyChallengeResult::week() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestPlusWeeklyChallengeResult.week)
  return week_;
}
inline void CMsgClientToGCRequestPlusWeeklyChallengeResult::set_week(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  week_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestPlusWeeklyChallengeResult.week)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestPlusWeeklyChallengeResultResponse

// -------------------------------------------------------------------

// CMsgProfileRequest

// optional uint32 account_id = 1;
inline bool CMsgProfileRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgProfileRequest::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgProfileRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileRequest.account_id)
  return account_id_;
}
inline void CMsgProfileRequest::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProfileRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgProfileResponse_FeaturedHero

// optional uint32 hero_id = 1;
inline bool CMsgProfileResponse_FeaturedHero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgProfileResponse_FeaturedHero::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgProfileResponse_FeaturedHero::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.FeaturedHero.hero_id)
  return hero_id_;
}
inline void CMsgProfileResponse_FeaturedHero::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProfileResponse.FeaturedHero.hero_id)
}

// repeated .proto.dota.CSOEconItem equipped_econ_items = 2;
inline int CMsgProfileResponse_FeaturedHero::equipped_econ_items_size() const {
  return equipped_econ_items_.size();
}
inline ::proto::dota::CSOEconItem* CMsgProfileResponse_FeaturedHero::mutable_equipped_econ_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgProfileResponse.FeaturedHero.equipped_econ_items)
  return equipped_econ_items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CSOEconItem >*
CMsgProfileResponse_FeaturedHero::mutable_equipped_econ_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgProfileResponse.FeaturedHero.equipped_econ_items)
  return &equipped_econ_items_;
}
inline const ::proto::dota::CSOEconItem& CMsgProfileResponse_FeaturedHero::equipped_econ_items(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.FeaturedHero.equipped_econ_items)
  return equipped_econ_items_.Get(index);
}
inline ::proto::dota::CSOEconItem* CMsgProfileResponse_FeaturedHero::add_equipped_econ_items() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgProfileResponse.FeaturedHero.equipped_econ_items)
  return equipped_econ_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSOEconItem >&
CMsgProfileResponse_FeaturedHero::equipped_econ_items() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgProfileResponse.FeaturedHero.equipped_econ_items)
  return equipped_econ_items_;
}

// optional bool manually_set = 3;
inline bool CMsgProfileResponse_FeaturedHero::has_manually_set() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgProfileResponse_FeaturedHero::clear_manually_set() {
  manually_set_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgProfileResponse_FeaturedHero::manually_set() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.FeaturedHero.manually_set)
  return manually_set_;
}
inline void CMsgProfileResponse_FeaturedHero::set_manually_set(bool value) {
  _has_bits_[0] |= 0x00000004u;
  manually_set_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProfileResponse.FeaturedHero.manually_set)
}

// optional uint32 plus_hero_xp = 4;
inline bool CMsgProfileResponse_FeaturedHero::has_plus_hero_xp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgProfileResponse_FeaturedHero::clear_plus_hero_xp() {
  plus_hero_xp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgProfileResponse_FeaturedHero::plus_hero_xp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.FeaturedHero.plus_hero_xp)
  return plus_hero_xp_;
}
inline void CMsgProfileResponse_FeaturedHero::set_plus_hero_xp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  plus_hero_xp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProfileResponse.FeaturedHero.plus_hero_xp)
}

// optional .proto.dota.CSOEconItem plus_hero_relics_item = 5;
inline bool CMsgProfileResponse_FeaturedHero::has_plus_hero_relics_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CSOEconItem& CMsgProfileResponse_FeaturedHero::plus_hero_relics_item() const {
  const ::proto::dota::CSOEconItem* p = plus_hero_relics_item_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.FeaturedHero.plus_hero_relics_item)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CSOEconItem*>(
      &::proto::dota::_CSOEconItem_default_instance_);
}
inline ::proto::dota::CSOEconItem* CMsgProfileResponse_FeaturedHero::release_plus_hero_relics_item() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgProfileResponse.FeaturedHero.plus_hero_relics_item)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CSOEconItem* temp = plus_hero_relics_item_;
  plus_hero_relics_item_ = nullptr;
  return temp;
}
inline ::proto::dota::CSOEconItem* CMsgProfileResponse_FeaturedHero::mutable_plus_hero_relics_item() {
  _has_bits_[0] |= 0x00000001u;
  if (plus_hero_relics_item_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CSOEconItem>(GetArenaNoVirtual());
    plus_hero_relics_item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgProfileResponse.FeaturedHero.plus_hero_relics_item)
  return plus_hero_relics_item_;
}
inline void CMsgProfileResponse_FeaturedHero::set_allocated_plus_hero_relics_item(::proto::dota::CSOEconItem* plus_hero_relics_item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(plus_hero_relics_item_);
  }
  if (plus_hero_relics_item) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      plus_hero_relics_item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plus_hero_relics_item, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  plus_hero_relics_item_ = plus_hero_relics_item;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgProfileResponse.FeaturedHero.plus_hero_relics_item)
}

// -------------------------------------------------------------------

// CMsgProfileResponse_MatchInfo

// optional uint64 match_id = 1;
inline bool CMsgProfileResponse_MatchInfo::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgProfileResponse_MatchInfo::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgProfileResponse_MatchInfo::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.MatchInfo.match_id)
  return match_id_;
}
inline void CMsgProfileResponse_MatchInfo::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProfileResponse.MatchInfo.match_id)
}

// optional uint32 match_timestamp = 2;
inline bool CMsgProfileResponse_MatchInfo::has_match_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgProfileResponse_MatchInfo::clear_match_timestamp() {
  match_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgProfileResponse_MatchInfo::match_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.MatchInfo.match_timestamp)
  return match_timestamp_;
}
inline void CMsgProfileResponse_MatchInfo::set_match_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  match_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProfileResponse.MatchInfo.match_timestamp)
}

// optional sint32 performance_rating = 3;
inline bool CMsgProfileResponse_MatchInfo::has_performance_rating() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgProfileResponse_MatchInfo::clear_performance_rating() {
  performance_rating_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CMsgProfileResponse_MatchInfo::performance_rating() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.MatchInfo.performance_rating)
  return performance_rating_;
}
inline void CMsgProfileResponse_MatchInfo::set_performance_rating(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  performance_rating_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProfileResponse.MatchInfo.performance_rating)
}

// optional uint32 hero_id = 4;
inline bool CMsgProfileResponse_MatchInfo::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgProfileResponse_MatchInfo::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgProfileResponse_MatchInfo::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.MatchInfo.hero_id)
  return hero_id_;
}
inline void CMsgProfileResponse_MatchInfo::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProfileResponse.MatchInfo.hero_id)
}

// optional bool won_match = 5;
inline bool CMsgProfileResponse_MatchInfo::has_won_match() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgProfileResponse_MatchInfo::clear_won_match() {
  won_match_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgProfileResponse_MatchInfo::won_match() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.MatchInfo.won_match)
  return won_match_;
}
inline void CMsgProfileResponse_MatchInfo::set_won_match(bool value) {
  _has_bits_[0] |= 0x00000010u;
  won_match_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProfileResponse.MatchInfo.won_match)
}

// -------------------------------------------------------------------

// CMsgProfileResponse

// optional .proto.dota.CSOEconItem background_item = 1;
inline bool CMsgProfileResponse::has_background_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CSOEconItem& CMsgProfileResponse::background_item() const {
  const ::proto::dota::CSOEconItem* p = background_item_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.background_item)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CSOEconItem*>(
      &::proto::dota::_CSOEconItem_default_instance_);
}
inline ::proto::dota::CSOEconItem* CMsgProfileResponse::release_background_item() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgProfileResponse.background_item)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CSOEconItem* temp = background_item_;
  background_item_ = nullptr;
  return temp;
}
inline ::proto::dota::CSOEconItem* CMsgProfileResponse::mutable_background_item() {
  _has_bits_[0] |= 0x00000001u;
  if (background_item_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CSOEconItem>(GetArenaNoVirtual());
    background_item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgProfileResponse.background_item)
  return background_item_;
}
inline void CMsgProfileResponse::set_allocated_background_item(::proto::dota::CSOEconItem* background_item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(background_item_);
  }
  if (background_item) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      background_item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, background_item, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  background_item_ = background_item;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgProfileResponse.background_item)
}

// repeated .proto.dota.CMsgProfileResponse.FeaturedHero featured_heroes = 2;
inline int CMsgProfileResponse::featured_heroes_size() const {
  return featured_heroes_.size();
}
inline void CMsgProfileResponse::clear_featured_heroes() {
  featured_heroes_.Clear();
}
inline ::proto::dota::CMsgProfileResponse_FeaturedHero* CMsgProfileResponse::mutable_featured_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgProfileResponse.featured_heroes)
  return featured_heroes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgProfileResponse_FeaturedHero >*
CMsgProfileResponse::mutable_featured_heroes() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgProfileResponse.featured_heroes)
  return &featured_heroes_;
}
inline const ::proto::dota::CMsgProfileResponse_FeaturedHero& CMsgProfileResponse::featured_heroes(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.featured_heroes)
  return featured_heroes_.Get(index);
}
inline ::proto::dota::CMsgProfileResponse_FeaturedHero* CMsgProfileResponse::add_featured_heroes() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgProfileResponse.featured_heroes)
  return featured_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgProfileResponse_FeaturedHero >&
CMsgProfileResponse::featured_heroes() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgProfileResponse.featured_heroes)
  return featured_heroes_;
}

// repeated .proto.dota.CMsgProfileResponse.MatchInfo recent_matches = 3;
inline int CMsgProfileResponse::recent_matches_size() const {
  return recent_matches_.size();
}
inline void CMsgProfileResponse::clear_recent_matches() {
  recent_matches_.Clear();
}
inline ::proto::dota::CMsgProfileResponse_MatchInfo* CMsgProfileResponse::mutable_recent_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgProfileResponse.recent_matches)
  return recent_matches_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgProfileResponse_MatchInfo >*
CMsgProfileResponse::mutable_recent_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgProfileResponse.recent_matches)
  return &recent_matches_;
}
inline const ::proto::dota::CMsgProfileResponse_MatchInfo& CMsgProfileResponse::recent_matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.recent_matches)
  return recent_matches_.Get(index);
}
inline ::proto::dota::CMsgProfileResponse_MatchInfo* CMsgProfileResponse::add_recent_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgProfileResponse.recent_matches)
  return recent_matches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgProfileResponse_MatchInfo >&
CMsgProfileResponse::recent_matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgProfileResponse.recent_matches)
  return recent_matches_;
}

// repeated .proto.dota.CMsgSuccessfulHero successful_heroes = 4;
inline int CMsgProfileResponse::successful_heroes_size() const {
  return successful_heroes_.size();
}
inline ::proto::dota::CMsgSuccessfulHero* CMsgProfileResponse::mutable_successful_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgProfileResponse.successful_heroes)
  return successful_heroes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSuccessfulHero >*
CMsgProfileResponse::mutable_successful_heroes() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgProfileResponse.successful_heroes)
  return &successful_heroes_;
}
inline const ::proto::dota::CMsgSuccessfulHero& CMsgProfileResponse::successful_heroes(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.successful_heroes)
  return successful_heroes_.Get(index);
}
inline ::proto::dota::CMsgSuccessfulHero* CMsgProfileResponse::add_successful_heroes() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgProfileResponse.successful_heroes)
  return successful_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSuccessfulHero >&
CMsgProfileResponse::successful_heroes() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgProfileResponse.successful_heroes)
  return successful_heroes_;
}

// optional .proto.dota.CMsgRecentMatchInfo recent_match_details = 5;
inline bool CMsgProfileResponse::has_recent_match_details() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::proto::dota::CMsgRecentMatchInfo& CMsgProfileResponse::recent_match_details() const {
  const ::proto::dota::CMsgRecentMatchInfo* p = recent_match_details_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.recent_match_details)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgRecentMatchInfo*>(
      &::proto::dota::_CMsgRecentMatchInfo_default_instance_);
}
inline ::proto::dota::CMsgRecentMatchInfo* CMsgProfileResponse::release_recent_match_details() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgProfileResponse.recent_match_details)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgRecentMatchInfo* temp = recent_match_details_;
  recent_match_details_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgRecentMatchInfo* CMsgProfileResponse::mutable_recent_match_details() {
  _has_bits_[0] |= 0x00000002u;
  if (recent_match_details_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgRecentMatchInfo>(GetArenaNoVirtual());
    recent_match_details_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgProfileResponse.recent_match_details)
  return recent_match_details_;
}
inline void CMsgProfileResponse::set_allocated_recent_match_details(::proto::dota::CMsgRecentMatchInfo* recent_match_details) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(recent_match_details_);
  }
  if (recent_match_details) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      recent_match_details = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recent_match_details, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  recent_match_details_ = recent_match_details;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgProfileResponse.recent_match_details)
}

// optional .proto.dota.CMsgProfileResponse.EResponse result = 6 [default = k_eInternalError];
inline bool CMsgProfileResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgProfileResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::proto::dota::CMsgProfileResponse_EResponse CMsgProfileResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileResponse.result)
  return static_cast< ::proto::dota::CMsgProfileResponse_EResponse >(result_);
}
inline void CMsgProfileResponse::set_result(::proto::dota::CMsgProfileResponse_EResponse value) {
  assert(::proto::dota::CMsgProfileResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProfileResponse.result)
}

// -------------------------------------------------------------------

// CMsgProfileUpdate

// optional uint64 background_item_id = 1;
inline bool CMsgProfileUpdate::has_background_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgProfileUpdate::clear_background_item_id() {
  background_item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgProfileUpdate::background_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileUpdate.background_item_id)
  return background_item_id_;
}
inline void CMsgProfileUpdate::set_background_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  background_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProfileUpdate.background_item_id)
}

// repeated uint32 featured_hero_ids = 2;
inline int CMsgProfileUpdate::featured_hero_ids_size() const {
  return featured_hero_ids_.size();
}
inline void CMsgProfileUpdate::clear_featured_hero_ids() {
  featured_hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgProfileUpdate::featured_hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileUpdate.featured_hero_ids)
  return featured_hero_ids_.Get(index);
}
inline void CMsgProfileUpdate::set_featured_hero_ids(int index, ::google::protobuf::uint32 value) {
  featured_hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProfileUpdate.featured_hero_ids)
}
inline void CMsgProfileUpdate::add_featured_hero_ids(::google::protobuf::uint32 value) {
  featured_hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgProfileUpdate.featured_hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgProfileUpdate::featured_hero_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgProfileUpdate.featured_hero_ids)
  return featured_hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgProfileUpdate::mutable_featured_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgProfileUpdate.featured_hero_ids)
  return &featured_hero_ids_;
}

// -------------------------------------------------------------------

// CMsgProfileUpdateResponse

// optional .proto.dota.CMsgProfileUpdateResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgProfileUpdateResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgProfileUpdateResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgProfileUpdateResponse_Result CMsgProfileUpdateResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProfileUpdateResponse.result)
  return static_cast< ::proto::dota::CMsgProfileUpdateResponse_Result >(result_);
}
inline void CMsgProfileUpdateResponse::set_result(::proto::dota::CMsgProfileUpdateResponse_Result value) {
  assert(::proto::dota::CMsgProfileUpdateResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProfileUpdateResponse.result)
}

// -------------------------------------------------------------------

// CMsgTalentWinRates

// optional uint32 last_run = 1;
inline bool CMsgTalentWinRates::has_last_run() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTalentWinRates::clear_last_run() {
  last_run_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgTalentWinRates::last_run() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTalentWinRates.last_run)
  return last_run_;
}
inline void CMsgTalentWinRates::set_last_run(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  last_run_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTalentWinRates.last_run)
}

// optional uint32 ability_id = 2;
inline bool CMsgTalentWinRates::has_ability_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTalentWinRates::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgTalentWinRates::ability_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTalentWinRates.ability_id)
  return ability_id_;
}
inline void CMsgTalentWinRates::set_ability_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTalentWinRates.ability_id)
}

// optional uint32 game_count = 3;
inline bool CMsgTalentWinRates::has_game_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTalentWinRates::clear_game_count() {
  game_count_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgTalentWinRates::game_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTalentWinRates.game_count)
  return game_count_;
}
inline void CMsgTalentWinRates::set_game_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  game_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTalentWinRates.game_count)
}

// optional uint32 win_count = 4;
inline bool CMsgTalentWinRates::has_win_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTalentWinRates::clear_win_count() {
  win_count_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgTalentWinRates::win_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTalentWinRates.win_count)
  return win_count_;
}
inline void CMsgTalentWinRates::set_win_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  win_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTalentWinRates.win_count)
}

// -------------------------------------------------------------------

// CMsgGlobalHeroAverages

// optional uint32 last_run = 1;
inline bool CMsgGlobalHeroAverages::has_last_run() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGlobalHeroAverages::clear_last_run() {
  last_run_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGlobalHeroAverages::last_run() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGlobalHeroAverages.last_run)
  return last_run_;
}
inline void CMsgGlobalHeroAverages::set_last_run(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  last_run_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGlobalHeroAverages.last_run)
}

// optional uint32 avg_gold_per_min = 3;
inline bool CMsgGlobalHeroAverages::has_avg_gold_per_min() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGlobalHeroAverages::clear_avg_gold_per_min() {
  avg_gold_per_min_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGlobalHeroAverages::avg_gold_per_min() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGlobalHeroAverages.avg_gold_per_min)
  return avg_gold_per_min_;
}
inline void CMsgGlobalHeroAverages::set_avg_gold_per_min(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  avg_gold_per_min_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGlobalHeroAverages.avg_gold_per_min)
}

// optional uint32 avg_xp_per_min = 4;
inline bool CMsgGlobalHeroAverages::has_avg_xp_per_min() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGlobalHeroAverages::clear_avg_xp_per_min() {
  avg_xp_per_min_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGlobalHeroAverages::avg_xp_per_min() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGlobalHeroAverages.avg_xp_per_min)
  return avg_xp_per_min_;
}
inline void CMsgGlobalHeroAverages::set_avg_xp_per_min(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  avg_xp_per_min_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGlobalHeroAverages.avg_xp_per_min)
}

// optional uint32 avg_kills = 5;
inline bool CMsgGlobalHeroAverages::has_avg_kills() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGlobalHeroAverages::clear_avg_kills() {
  avg_kills_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGlobalHeroAverages::avg_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGlobalHeroAverages.avg_kills)
  return avg_kills_;
}
inline void CMsgGlobalHeroAverages::set_avg_kills(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  avg_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGlobalHeroAverages.avg_kills)
}

// optional uint32 avg_deaths = 6;
inline bool CMsgGlobalHeroAverages::has_avg_deaths() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGlobalHeroAverages::clear_avg_deaths() {
  avg_deaths_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGlobalHeroAverages::avg_deaths() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGlobalHeroAverages.avg_deaths)
  return avg_deaths_;
}
inline void CMsgGlobalHeroAverages::set_avg_deaths(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  avg_deaths_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGlobalHeroAverages.avg_deaths)
}

// optional uint32 avg_assists = 7;
inline bool CMsgGlobalHeroAverages::has_avg_assists() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGlobalHeroAverages::clear_avg_assists() {
  avg_assists_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgGlobalHeroAverages::avg_assists() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGlobalHeroAverages.avg_assists)
  return avg_assists_;
}
inline void CMsgGlobalHeroAverages::set_avg_assists(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  avg_assists_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGlobalHeroAverages.avg_assists)
}

// optional uint32 avg_last_hits = 8;
inline bool CMsgGlobalHeroAverages::has_avg_last_hits() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGlobalHeroAverages::clear_avg_last_hits() {
  avg_last_hits_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGlobalHeroAverages::avg_last_hits() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGlobalHeroAverages.avg_last_hits)
  return avg_last_hits_;
}
inline void CMsgGlobalHeroAverages::set_avg_last_hits(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  avg_last_hits_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGlobalHeroAverages.avg_last_hits)
}

// optional uint32 avg_denies = 9;
inline bool CMsgGlobalHeroAverages::has_avg_denies() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGlobalHeroAverages::clear_avg_denies() {
  avg_denies_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgGlobalHeroAverages::avg_denies() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGlobalHeroAverages.avg_denies)
  return avg_denies_;
}
inline void CMsgGlobalHeroAverages::set_avg_denies(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  avg_denies_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGlobalHeroAverages.avg_denies)
}

// optional uint32 avg_net_worth = 10;
inline bool CMsgGlobalHeroAverages::has_avg_net_worth() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGlobalHeroAverages::clear_avg_net_worth() {
  avg_net_worth_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgGlobalHeroAverages::avg_net_worth() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGlobalHeroAverages.avg_net_worth)
  return avg_net_worth_;
}
inline void CMsgGlobalHeroAverages::set_avg_net_worth(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  avg_net_worth_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGlobalHeroAverages.avg_net_worth)
}

// -------------------------------------------------------------------

// CMsgHeroGlobalDataRequest

// optional uint32 hero_id = 1;
inline bool CMsgHeroGlobalDataRequest::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHeroGlobalDataRequest::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgHeroGlobalDataRequest::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataRequest.hero_id)
  return hero_id_;
}
inline void CMsgHeroGlobalDataRequest::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroGlobalDataRequest.hero_id)
}

// -------------------------------------------------------------------

// CMsgHeroGlobalDataResponse_GraphData

// optional uint32 day = 1;
inline bool CMsgHeroGlobalDataResponse_GraphData::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHeroGlobalDataResponse_GraphData::clear_day() {
  day_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgHeroGlobalDataResponse_GraphData::day() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.GraphData.day)
  return day_;
}
inline void CMsgHeroGlobalDataResponse_GraphData::set_day(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  day_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroGlobalDataResponse.GraphData.day)
}

// optional float win_percent = 2;
inline bool CMsgHeroGlobalDataResponse_GraphData::has_win_percent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHeroGlobalDataResponse_GraphData::clear_win_percent() {
  win_percent_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgHeroGlobalDataResponse_GraphData::win_percent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.GraphData.win_percent)
  return win_percent_;
}
inline void CMsgHeroGlobalDataResponse_GraphData::set_win_percent(float value) {
  _has_bits_[0] |= 0x00000002u;
  win_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroGlobalDataResponse.GraphData.win_percent)
}

// optional float pick_percent = 3;
inline bool CMsgHeroGlobalDataResponse_GraphData::has_pick_percent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHeroGlobalDataResponse_GraphData::clear_pick_percent() {
  pick_percent_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgHeroGlobalDataResponse_GraphData::pick_percent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.GraphData.pick_percent)
  return pick_percent_;
}
inline void CMsgHeroGlobalDataResponse_GraphData::set_pick_percent(float value) {
  _has_bits_[0] |= 0x00000004u;
  pick_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroGlobalDataResponse.GraphData.pick_percent)
}

// optional float ban_percent = 4;
inline bool CMsgHeroGlobalDataResponse_GraphData::has_ban_percent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgHeroGlobalDataResponse_GraphData::clear_ban_percent() {
  ban_percent_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CMsgHeroGlobalDataResponse_GraphData::ban_percent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.GraphData.ban_percent)
  return ban_percent_;
}
inline void CMsgHeroGlobalDataResponse_GraphData::set_ban_percent(float value) {
  _has_bits_[0] |= 0x00000008u;
  ban_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroGlobalDataResponse.GraphData.ban_percent)
}

// -------------------------------------------------------------------

// CMsgHeroGlobalDataResponse_WeekData

// optional uint32 week = 1;
inline bool CMsgHeroGlobalDataResponse_WeekData::has_week() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHeroGlobalDataResponse_WeekData::clear_week() {
  week_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgHeroGlobalDataResponse_WeekData::week() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.WeekData.week)
  return week_;
}
inline void CMsgHeroGlobalDataResponse_WeekData::set_week(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  week_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroGlobalDataResponse.WeekData.week)
}

// optional float win_percent = 2;
inline bool CMsgHeroGlobalDataResponse_WeekData::has_win_percent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHeroGlobalDataResponse_WeekData::clear_win_percent() {
  win_percent_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgHeroGlobalDataResponse_WeekData::win_percent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.WeekData.win_percent)
  return win_percent_;
}
inline void CMsgHeroGlobalDataResponse_WeekData::set_win_percent(float value) {
  _has_bits_[0] |= 0x00000002u;
  win_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroGlobalDataResponse.WeekData.win_percent)
}

// optional float pick_percent = 3;
inline bool CMsgHeroGlobalDataResponse_WeekData::has_pick_percent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHeroGlobalDataResponse_WeekData::clear_pick_percent() {
  pick_percent_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgHeroGlobalDataResponse_WeekData::pick_percent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.WeekData.pick_percent)
  return pick_percent_;
}
inline void CMsgHeroGlobalDataResponse_WeekData::set_pick_percent(float value) {
  _has_bits_[0] |= 0x00000004u;
  pick_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroGlobalDataResponse.WeekData.pick_percent)
}

// optional float ban_percent = 4;
inline bool CMsgHeroGlobalDataResponse_WeekData::has_ban_percent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgHeroGlobalDataResponse_WeekData::clear_ban_percent() {
  ban_percent_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CMsgHeroGlobalDataResponse_WeekData::ban_percent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.WeekData.ban_percent)
  return ban_percent_;
}
inline void CMsgHeroGlobalDataResponse_WeekData::set_ban_percent(float value) {
  _has_bits_[0] |= 0x00000008u;
  ban_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroGlobalDataResponse.WeekData.ban_percent)
}

// -------------------------------------------------------------------

// CMsgHeroGlobalDataResponse_HeroDataPerRankChunk

// optional uint32 rank_chunk = 1;
inline bool CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::has_rank_chunk() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::clear_rank_chunk() {
  rank_chunk_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::rank_chunk() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.rank_chunk)
  return rank_chunk_;
}
inline void CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::set_rank_chunk(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  rank_chunk_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.rank_chunk)
}

// repeated .proto.dota.CMsgTalentWinRates talent_win_rates = 2;
inline int CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::talent_win_rates_size() const {
  return talent_win_rates_.size();
}
inline void CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::clear_talent_win_rates() {
  talent_win_rates_.Clear();
}
inline ::proto::dota::CMsgTalentWinRates* CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::mutable_talent_win_rates(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.talent_win_rates)
  return talent_win_rates_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgTalentWinRates >*
CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::mutable_talent_win_rates() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.talent_win_rates)
  return &talent_win_rates_;
}
inline const ::proto::dota::CMsgTalentWinRates& CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::talent_win_rates(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.talent_win_rates)
  return talent_win_rates_.Get(index);
}
inline ::proto::dota::CMsgTalentWinRates* CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::add_talent_win_rates() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.talent_win_rates)
  return talent_win_rates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgTalentWinRates >&
CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::talent_win_rates() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.talent_win_rates)
  return talent_win_rates_;
}

// optional .proto.dota.CMsgGlobalHeroAverages hero_averages = 3;
inline bool CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::has_hero_averages() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::clear_hero_averages() {
  if (hero_averages_ != nullptr) hero_averages_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgGlobalHeroAverages& CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::hero_averages() const {
  const ::proto::dota::CMsgGlobalHeroAverages* p = hero_averages_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.hero_averages)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGlobalHeroAverages*>(
      &::proto::dota::_CMsgGlobalHeroAverages_default_instance_);
}
inline ::proto::dota::CMsgGlobalHeroAverages* CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::release_hero_averages() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.hero_averages)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgGlobalHeroAverages* temp = hero_averages_;
  hero_averages_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGlobalHeroAverages* CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::mutable_hero_averages() {
  _has_bits_[0] |= 0x00000001u;
  if (hero_averages_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGlobalHeroAverages>(GetArenaNoVirtual());
    hero_averages_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.hero_averages)
  return hero_averages_;
}
inline void CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::set_allocated_hero_averages(::proto::dota::CMsgGlobalHeroAverages* hero_averages) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete hero_averages_;
  }
  if (hero_averages) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      hero_averages = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hero_averages, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  hero_averages_ = hero_averages;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.hero_averages)
}

// repeated .proto.dota.CMsgHeroGlobalDataResponse.GraphData graph_data = 4;
inline int CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::graph_data_size() const {
  return graph_data_.size();
}
inline void CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::clear_graph_data() {
  graph_data_.Clear();
}
inline ::proto::dota::CMsgHeroGlobalDataResponse_GraphData* CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::mutable_graph_data(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.graph_data)
  return graph_data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_GraphData >*
CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::mutable_graph_data() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.graph_data)
  return &graph_data_;
}
inline const ::proto::dota::CMsgHeroGlobalDataResponse_GraphData& CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::graph_data(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.graph_data)
  return graph_data_.Get(index);
}
inline ::proto::dota::CMsgHeroGlobalDataResponse_GraphData* CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::add_graph_data() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.graph_data)
  return graph_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_GraphData >&
CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::graph_data() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.graph_data)
  return graph_data_;
}

// repeated .proto.dota.CMsgHeroGlobalDataResponse.WeekData week_data = 5;
inline int CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::week_data_size() const {
  return week_data_.size();
}
inline void CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::clear_week_data() {
  week_data_.Clear();
}
inline ::proto::dota::CMsgHeroGlobalDataResponse_WeekData* CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::mutable_week_data(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.week_data)
  return week_data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_WeekData >*
CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::mutable_week_data() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.week_data)
  return &week_data_;
}
inline const ::proto::dota::CMsgHeroGlobalDataResponse_WeekData& CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::week_data(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.week_data)
  return week_data_.Get(index);
}
inline ::proto::dota::CMsgHeroGlobalDataResponse_WeekData* CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::add_week_data() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.week_data)
  return week_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_WeekData >&
CMsgHeroGlobalDataResponse_HeroDataPerRankChunk::week_data() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk.week_data)
  return week_data_;
}

// -------------------------------------------------------------------

// CMsgHeroGlobalDataResponse

// optional uint32 hero_id = 1;
inline bool CMsgHeroGlobalDataResponse::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHeroGlobalDataResponse::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgHeroGlobalDataResponse::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.hero_id)
  return hero_id_;
}
inline void CMsgHeroGlobalDataResponse::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroGlobalDataResponse.hero_id)
}

// repeated .proto.dota.CMsgHeroGlobalDataResponse.HeroDataPerRankChunk hero_data_per_chunk = 2;
inline int CMsgHeroGlobalDataResponse::hero_data_per_chunk_size() const {
  return hero_data_per_chunk_.size();
}
inline void CMsgHeroGlobalDataResponse::clear_hero_data_per_chunk() {
  hero_data_per_chunk_.Clear();
}
inline ::proto::dota::CMsgHeroGlobalDataResponse_HeroDataPerRankChunk* CMsgHeroGlobalDataResponse::mutable_hero_data_per_chunk(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHeroGlobalDataResponse.hero_data_per_chunk)
  return hero_data_per_chunk_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_HeroDataPerRankChunk >*
CMsgHeroGlobalDataResponse::mutable_hero_data_per_chunk() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgHeroGlobalDataResponse.hero_data_per_chunk)
  return &hero_data_per_chunk_;
}
inline const ::proto::dota::CMsgHeroGlobalDataResponse_HeroDataPerRankChunk& CMsgHeroGlobalDataResponse::hero_data_per_chunk(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataResponse.hero_data_per_chunk)
  return hero_data_per_chunk_.Get(index);
}
inline ::proto::dota::CMsgHeroGlobalDataResponse_HeroDataPerRankChunk* CMsgHeroGlobalDataResponse::add_hero_data_per_chunk() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgHeroGlobalDataResponse.hero_data_per_chunk)
  return hero_data_per_chunk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse_HeroDataPerRankChunk >&
CMsgHeroGlobalDataResponse::hero_data_per_chunk() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgHeroGlobalDataResponse.hero_data_per_chunk)
  return hero_data_per_chunk_;
}

// -------------------------------------------------------------------

// CMsgHeroGlobalDataAllHeroes

// repeated .proto.dota.CMsgHeroGlobalDataResponse heroes = 1;
inline int CMsgHeroGlobalDataAllHeroes::heroes_size() const {
  return heroes_.size();
}
inline void CMsgHeroGlobalDataAllHeroes::clear_heroes() {
  heroes_.Clear();
}
inline ::proto::dota::CMsgHeroGlobalDataResponse* CMsgHeroGlobalDataAllHeroes::mutable_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHeroGlobalDataAllHeroes.heroes)
  return heroes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse >*
CMsgHeroGlobalDataAllHeroes::mutable_heroes() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgHeroGlobalDataAllHeroes.heroes)
  return &heroes_;
}
inline const ::proto::dota::CMsgHeroGlobalDataResponse& CMsgHeroGlobalDataAllHeroes::heroes(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroGlobalDataAllHeroes.heroes)
  return heroes_.Get(index);
}
inline ::proto::dota::CMsgHeroGlobalDataResponse* CMsgHeroGlobalDataAllHeroes::add_heroes() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgHeroGlobalDataAllHeroes.heroes)
  return heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroGlobalDataResponse >&
CMsgHeroGlobalDataAllHeroes::heroes() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgHeroGlobalDataAllHeroes.heroes)
  return heroes_;
}

// -------------------------------------------------------------------

// CMsgPrivateMetadataKeyRequest

// optional uint64 match_id = 1;
inline bool CMsgPrivateMetadataKeyRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPrivateMetadataKeyRequest::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgPrivateMetadataKeyRequest::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPrivateMetadataKeyRequest.match_id)
  return match_id_;
}
inline void CMsgPrivateMetadataKeyRequest::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPrivateMetadataKeyRequest.match_id)
}

// -------------------------------------------------------------------

// CMsgPrivateMetadataKeyResponse

// optional uint32 private_key = 1;
inline bool CMsgPrivateMetadataKeyResponse::has_private_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPrivateMetadataKeyResponse::clear_private_key() {
  private_key_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgPrivateMetadataKeyResponse::private_key() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPrivateMetadataKeyResponse.private_key)
  return private_key_;
}
inline void CMsgPrivateMetadataKeyResponse::set_private_key(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  private_key_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPrivateMetadataKeyResponse.private_key)
}

// -------------------------------------------------------------------

// CMsgActivatePlusFreeTrialRequest

// -------------------------------------------------------------------

// CMsgActivatePlusFreeTrialResponse

// optional .proto.dota.CMsgActivatePlusFreeTrialResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgActivatePlusFreeTrialResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgActivatePlusFreeTrialResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgActivatePlusFreeTrialResponse_Result CMsgActivatePlusFreeTrialResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgActivatePlusFreeTrialResponse.result)
  return static_cast< ::proto::dota::CMsgActivatePlusFreeTrialResponse_Result >(result_);
}
inline void CMsgActivatePlusFreeTrialResponse::set_result(::proto::dota::CMsgActivatePlusFreeTrialResponse_Result value) {
  assert(::proto::dota::CMsgActivatePlusFreeTrialResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgActivatePlusFreeTrialResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCToClientCavernCrawlMapPathCompleted

// optional uint32 event_id = 1;
inline bool CMsgGCToClientCavernCrawlMapPathCompleted::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCavernCrawlMapPathCompleted::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToClientCavernCrawlMapPathCompleted::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCavernCrawlMapPathCompleted.event_id)
  return event_id_;
}
inline void CMsgGCToClientCavernCrawlMapPathCompleted::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCavernCrawlMapPathCompleted.event_id)
}

// optional uint32 path_id_completed = 2;
inline bool CMsgGCToClientCavernCrawlMapPathCompleted::has_path_id_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientCavernCrawlMapPathCompleted::clear_path_id_completed() {
  path_id_completed_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToClientCavernCrawlMapPathCompleted::path_id_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCavernCrawlMapPathCompleted.path_id_completed)
  return path_id_completed_;
}
inline void CMsgGCToClientCavernCrawlMapPathCompleted::set_path_id_completed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  path_id_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCavernCrawlMapPathCompleted.path_id_completed)
}

// optional uint32 hero_id_completed = 3;
inline bool CMsgGCToClientCavernCrawlMapPathCompleted::has_hero_id_completed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientCavernCrawlMapPathCompleted::clear_hero_id_completed() {
  hero_id_completed_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToClientCavernCrawlMapPathCompleted::hero_id_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCavernCrawlMapPathCompleted.hero_id_completed)
  return hero_id_completed_;
}
inline void CMsgGCToClientCavernCrawlMapPathCompleted::set_hero_id_completed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  hero_id_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCavernCrawlMapPathCompleted.hero_id_completed)
}

// optional bool received_ultra_rare_reward = 4;
inline bool CMsgGCToClientCavernCrawlMapPathCompleted::has_received_ultra_rare_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientCavernCrawlMapPathCompleted::clear_received_ultra_rare_reward() {
  received_ultra_rare_reward_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgGCToClientCavernCrawlMapPathCompleted::received_ultra_rare_reward() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCavernCrawlMapPathCompleted.received_ultra_rare_reward)
  return received_ultra_rare_reward_;
}
inline void CMsgGCToClientCavernCrawlMapPathCompleted::set_received_ultra_rare_reward(bool value) {
  _has_bits_[0] |= 0x00000008u;
  received_ultra_rare_reward_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCavernCrawlMapPathCompleted.received_ultra_rare_reward)
}

// -------------------------------------------------------------------

// CMsgClientToGCCavernCrawlClaimRoom

// optional uint32 event_id = 1;
inline bool CMsgClientToGCCavernCrawlClaimRoom::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCavernCrawlClaimRoom::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlClaimRoom::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlClaimRoom.event_id)
  return event_id_;
}
inline void CMsgClientToGCCavernCrawlClaimRoom::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlClaimRoom.event_id)
}

// optional uint32 room_id = 2;
inline bool CMsgClientToGCCavernCrawlClaimRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCavernCrawlClaimRoom::clear_room_id() {
  room_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlClaimRoom::room_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlClaimRoom.room_id)
  return room_id_;
}
inline void CMsgClientToGCCavernCrawlClaimRoom::set_room_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlClaimRoom.room_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCCavernCrawlClaimRoomResponse

// optional .proto.dota.CMsgClientToGCCavernCrawlClaimRoomResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCCavernCrawlClaimRoomResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCavernCrawlClaimRoomResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgClientToGCCavernCrawlClaimRoomResponse_Result CMsgClientToGCCavernCrawlClaimRoomResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlClaimRoomResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCCavernCrawlClaimRoomResponse_Result >(result_);
}
inline void CMsgClientToGCCavernCrawlClaimRoomResponse::set_result(::proto::dota::CMsgClientToGCCavernCrawlClaimRoomResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCCavernCrawlClaimRoomResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlClaimRoomResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCCavernCrawlUseItemOnRoom

// optional uint32 event_id = 1;
inline bool CMsgClientToGCCavernCrawlUseItemOnRoom::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCavernCrawlUseItemOnRoom::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlUseItemOnRoom::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoom.event_id)
  return event_id_;
}
inline void CMsgClientToGCCavernCrawlUseItemOnRoom::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoom.event_id)
}

// optional uint32 room_id = 2;
inline bool CMsgClientToGCCavernCrawlUseItemOnRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCavernCrawlUseItemOnRoom::clear_room_id() {
  room_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlUseItemOnRoom::room_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoom.room_id)
  return room_id_;
}
inline void CMsgClientToGCCavernCrawlUseItemOnRoom::set_room_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoom.room_id)
}

// optional uint32 item_type = 3;
inline bool CMsgClientToGCCavernCrawlUseItemOnRoom::has_item_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCCavernCrawlUseItemOnRoom::clear_item_type() {
  item_type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlUseItemOnRoom::item_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoom.item_type)
  return item_type_;
}
inline void CMsgClientToGCCavernCrawlUseItemOnRoom::set_item_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  item_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoom.item_type)
}

// -------------------------------------------------------------------

// CMsgClientToGCCavernCrawlUseItemOnRoomResponse

// optional .proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoomResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCCavernCrawlUseItemOnRoomResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCavernCrawlUseItemOnRoomResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result CMsgClientToGCCavernCrawlUseItemOnRoomResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoomResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result >(result_);
}
inline void CMsgClientToGCCavernCrawlUseItemOnRoomResponse::set_result(::proto::dota::CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlUseItemOnRoomResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCCavernCrawlUseItemOnPath

// optional uint32 event_id = 1;
inline bool CMsgClientToGCCavernCrawlUseItemOnPath::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCavernCrawlUseItemOnPath::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlUseItemOnPath::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlUseItemOnPath.event_id)
  return event_id_;
}
inline void CMsgClientToGCCavernCrawlUseItemOnPath::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlUseItemOnPath.event_id)
}

// optional uint32 path_id = 2;
inline bool CMsgClientToGCCavernCrawlUseItemOnPath::has_path_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCavernCrawlUseItemOnPath::clear_path_id() {
  path_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlUseItemOnPath::path_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlUseItemOnPath.path_id)
  return path_id_;
}
inline void CMsgClientToGCCavernCrawlUseItemOnPath::set_path_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  path_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlUseItemOnPath.path_id)
}

// optional uint32 item_type = 3;
inline bool CMsgClientToGCCavernCrawlUseItemOnPath::has_item_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCCavernCrawlUseItemOnPath::clear_item_type() {
  item_type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlUseItemOnPath::item_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlUseItemOnPath.item_type)
  return item_type_;
}
inline void CMsgClientToGCCavernCrawlUseItemOnPath::set_item_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  item_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlUseItemOnPath.item_type)
}

// -------------------------------------------------------------------

// CMsgClientToGCCavernCrawlUseItemOnPathResponse

// optional .proto.dota.CMsgClientToGCCavernCrawlUseItemOnPathResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCCavernCrawlUseItemOnPathResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCavernCrawlUseItemOnPathResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result CMsgClientToGCCavernCrawlUseItemOnPathResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlUseItemOnPathResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result >(result_);
}
inline void CMsgClientToGCCavernCrawlUseItemOnPathResponse::set_result(::proto::dota::CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlUseItemOnPathResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCCavernCrawlRequestMapState

// optional uint32 event_id = 1;
inline bool CMsgClientToGCCavernCrawlRequestMapState::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapState::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlRequestMapState::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapState.event_id)
  return event_id_;
}
inline void CMsgClientToGCCavernCrawlRequestMapState::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapState.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge

// optional uint32 path_id_1 = 1;
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge::has_path_id_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge::clear_path_id_1() {
  path_id_1_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge::path_id_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.SwappedChallenge.path_id_1)
  return path_id_1_;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge::set_path_id_1(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  path_id_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.SwappedChallenge.path_id_1)
}

// optional uint32 path_id_2 = 2;
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge::has_path_id_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge::clear_path_id_2() {
  path_id_2_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge::path_id_2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.SwappedChallenge.path_id_2)
  return path_id_2_;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge::set_path_id_2(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  path_id_2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.SwappedChallenge.path_id_2)
}

// -------------------------------------------------------------------

// CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem

// optional uint32 item_type = 1;
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem::has_item_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem::clear_item_type() {
  item_type_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem::item_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.InventoryItem.item_type)
  return item_type_;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem::set_item_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.InventoryItem.item_type)
}

// optional uint32 count = 2;
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem::clear_count() {
  count_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem::count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.InventoryItem.count)
  return count_;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem::set_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.InventoryItem.count)
}

// -------------------------------------------------------------------

// CMsgClientToGCCavernCrawlRequestMapStateResponse

// optional .proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse::has_result() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_Result CMsgClientToGCCavernCrawlRequestMapStateResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_Result >(result_);
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::set_result(::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.result)
}

// optional fixed64 claimed_rooms_1 = 2;
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse::has_claimed_rooms_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::clear_claimed_rooms_1() {
  claimed_rooms_1_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCCavernCrawlRequestMapStateResponse::claimed_rooms_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.claimed_rooms_1)
  return claimed_rooms_1_;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::set_claimed_rooms_1(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  claimed_rooms_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.claimed_rooms_1)
}

// optional fixed64 claimed_rooms_2 = 3;
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse::has_claimed_rooms_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::clear_claimed_rooms_2() {
  claimed_rooms_2_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgClientToGCCavernCrawlRequestMapStateResponse::claimed_rooms_2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.claimed_rooms_2)
  return claimed_rooms_2_;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::set_claimed_rooms_2(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  claimed_rooms_2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.claimed_rooms_2)
}

// optional fixed64 revealed_rooms_1 = 4;
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse::has_revealed_rooms_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::clear_revealed_rooms_1() {
  revealed_rooms_1_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgClientToGCCavernCrawlRequestMapStateResponse::revealed_rooms_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.revealed_rooms_1)
  return revealed_rooms_1_;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::set_revealed_rooms_1(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  revealed_rooms_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.revealed_rooms_1)
}

// optional fixed64 revealed_rooms_2 = 5;
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse::has_revealed_rooms_2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::clear_revealed_rooms_2() {
  revealed_rooms_2_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CMsgClientToGCCavernCrawlRequestMapStateResponse::revealed_rooms_2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.revealed_rooms_2)
  return revealed_rooms_2_;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::set_revealed_rooms_2(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  revealed_rooms_2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.revealed_rooms_2)
}

// optional fixed64 completed_paths_1 = 6;
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse::has_completed_paths_1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::clear_completed_paths_1() {
  completed_paths_1_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 CMsgClientToGCCavernCrawlRequestMapStateResponse::completed_paths_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.completed_paths_1)
  return completed_paths_1_;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::set_completed_paths_1(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  completed_paths_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.completed_paths_1)
}

// optional fixed64 completed_paths_2 = 7;
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse::has_completed_paths_2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::clear_completed_paths_2() {
  completed_paths_2_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint64 CMsgClientToGCCavernCrawlRequestMapStateResponse::completed_paths_2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.completed_paths_2)
  return completed_paths_2_;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::set_completed_paths_2(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  completed_paths_2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.completed_paths_2)
}

// optional fixed64 completed_paths_3 = 8;
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse::has_completed_paths_3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::clear_completed_paths_3() {
  completed_paths_3_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint64 CMsgClientToGCCavernCrawlRequestMapStateResponse::completed_paths_3() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.completed_paths_3)
  return completed_paths_3_;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::set_completed_paths_3(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000100u;
  completed_paths_3_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.completed_paths_3)
}

// repeated .proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.SwappedChallenge swapped_challenge = 9;
inline int CMsgClientToGCCavernCrawlRequestMapStateResponse::swapped_challenge_size() const {
  return swapped_challenge_.size();
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::clear_swapped_challenge() {
  swapped_challenge_.Clear();
}
inline ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge* CMsgClientToGCCavernCrawlRequestMapStateResponse::mutable_swapped_challenge(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.swapped_challenge)
  return swapped_challenge_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge >*
CMsgClientToGCCavernCrawlRequestMapStateResponse::mutable_swapped_challenge() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.swapped_challenge)
  return &swapped_challenge_;
}
inline const ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge& CMsgClientToGCCavernCrawlRequestMapStateResponse::swapped_challenge(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.swapped_challenge)
  return swapped_challenge_.Get(index);
}
inline ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge* CMsgClientToGCCavernCrawlRequestMapStateResponse::add_swapped_challenge() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.swapped_challenge)
  return swapped_challenge_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_SwappedChallenge >&
CMsgClientToGCCavernCrawlRequestMapStateResponse::swapped_challenge() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.swapped_challenge)
  return swapped_challenge_;
}

// repeated .proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.InventoryItem inventory_item = 10;
inline int CMsgClientToGCCavernCrawlRequestMapStateResponse::inventory_item_size() const {
  return inventory_item_.size();
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::clear_inventory_item() {
  inventory_item_.Clear();
}
inline ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem* CMsgClientToGCCavernCrawlRequestMapStateResponse::mutable_inventory_item(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.inventory_item)
  return inventory_item_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem >*
CMsgClientToGCCavernCrawlRequestMapStateResponse::mutable_inventory_item() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.inventory_item)
  return &inventory_item_;
}
inline const ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem& CMsgClientToGCCavernCrawlRequestMapStateResponse::inventory_item(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.inventory_item)
  return inventory_item_.Get(index);
}
inline ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem* CMsgClientToGCCavernCrawlRequestMapStateResponse::add_inventory_item() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.inventory_item)
  return inventory_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_InventoryItem >&
CMsgClientToGCCavernCrawlRequestMapStateResponse::inventory_item() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.inventory_item)
  return inventory_item_;
}

// optional uint32 ultra_rare_reward_room_number = 11;
inline bool CMsgClientToGCCavernCrawlRequestMapStateResponse::has_ultra_rare_reward_room_number() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::clear_ultra_rare_reward_room_number() {
  ultra_rare_reward_room_number_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlRequestMapStateResponse::ultra_rare_reward_room_number() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.ultra_rare_reward_room_number)
  return ultra_rare_reward_room_number_;
}
inline void CMsgClientToGCCavernCrawlRequestMapStateResponse::set_ultra_rare_reward_room_number(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  ultra_rare_reward_room_number_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlRequestMapStateResponse.ultra_rare_reward_room_number)
}

// -------------------------------------------------------------------

// CMsgClientToGCCavernCrawlGetClaimedRoomCount

// optional uint32 event_id = 1;
inline bool CMsgClientToGCCavernCrawlGetClaimedRoomCount::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCavernCrawlGetClaimedRoomCount::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlGetClaimedRoomCount::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlGetClaimedRoomCount.event_id)
  return event_id_;
}
inline void CMsgClientToGCCavernCrawlGetClaimedRoomCount::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlGetClaimedRoomCount.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse

// optional .proto.dota.CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result >(result_);
}
inline void CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse::set_result(::proto::dota::CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse.result)
}

// optional uint32 count = 2;
inline bool CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse::clear_count() {
  count_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse::count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse.count)
  return count_;
}
inline void CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse::set_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse.count)
}

// -------------------------------------------------------------------

// CMsgDOTAMutationList_Mutation

// optional uint32 id = 1;
inline bool CMsgDOTAMutationList_Mutation::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAMutationList_Mutation::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAMutationList_Mutation::id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMutationList.Mutation.id)
  return id_;
}
inline void CMsgDOTAMutationList_Mutation::set_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMutationList.Mutation.id)
}

// optional string name = 2;
inline bool CMsgDOTAMutationList_Mutation::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMutationList_Mutation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTAMutationList_Mutation::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMutationList.Mutation.name)
  return name_.GetNoArena();
}
inline void CMsgDOTAMutationList_Mutation::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMutationList.Mutation.name)
}
#if LANG_CXX11
inline void CMsgDOTAMutationList_Mutation::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAMutationList.Mutation.name)
}
#endif
inline void CMsgDOTAMutationList_Mutation::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAMutationList.Mutation.name)
}
inline void CMsgDOTAMutationList_Mutation::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAMutationList.Mutation.name)
}
inline ::std::string* CMsgDOTAMutationList_Mutation::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAMutationList.Mutation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAMutationList_Mutation::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAMutationList.Mutation.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAMutationList_Mutation::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAMutationList.Mutation.name)
}

// optional string description = 3;
inline bool CMsgDOTAMutationList_Mutation::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMutationList_Mutation::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgDOTAMutationList_Mutation::description() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMutationList.Mutation.description)
  return description_.GetNoArena();
}
inline void CMsgDOTAMutationList_Mutation::set_description(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMutationList.Mutation.description)
}
#if LANG_CXX11
inline void CMsgDOTAMutationList_Mutation::set_description(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAMutationList.Mutation.description)
}
#endif
inline void CMsgDOTAMutationList_Mutation::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAMutationList.Mutation.description)
}
inline void CMsgDOTAMutationList_Mutation::set_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAMutationList.Mutation.description)
}
inline ::std::string* CMsgDOTAMutationList_Mutation::mutable_description() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAMutationList.Mutation.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAMutationList_Mutation::release_description() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAMutationList.Mutation.description)
  if (!has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return description_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAMutationList_Mutation::set_allocated_description(::std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAMutationList.Mutation.description)
}

// -------------------------------------------------------------------

// CMsgDOTAMutationList

// repeated .proto.dota.CMsgDOTAMutationList.Mutation mutations = 1;
inline int CMsgDOTAMutationList::mutations_size() const {
  return mutations_.size();
}
inline void CMsgDOTAMutationList::clear_mutations() {
  mutations_.Clear();
}
inline ::proto::dota::CMsgDOTAMutationList_Mutation* CMsgDOTAMutationList::mutable_mutations(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAMutationList.mutations)
  return mutations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMutationList_Mutation >*
CMsgDOTAMutationList::mutable_mutations() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAMutationList.mutations)
  return &mutations_;
}
inline const ::proto::dota::CMsgDOTAMutationList_Mutation& CMsgDOTAMutationList::mutations(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMutationList.mutations)
  return mutations_.Get(index);
}
inline ::proto::dota::CMsgDOTAMutationList_Mutation* CMsgDOTAMutationList::add_mutations() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAMutationList.mutations)
  return mutations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMutationList_Mutation >&
CMsgDOTAMutationList::mutations() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAMutationList.mutations)
  return mutations_;
}

// -------------------------------------------------------------------

// CMsgEventTipsSummaryRequest

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgEventTipsSummaryRequest::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgEventTipsSummaryRequest::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgEventTipsSummaryRequest::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventTipsSummaryRequest.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgEventTipsSummaryRequest::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEventTipsSummaryRequest.event_id)
}

// optional uint32 account_id = 2;
inline bool CMsgEventTipsSummaryRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgEventTipsSummaryRequest::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgEventTipsSummaryRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventTipsSummaryRequest.account_id)
  return account_id_;
}
inline void CMsgEventTipsSummaryRequest::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEventTipsSummaryRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgEventTipsSummaryResponse_Tipper

// optional uint32 tipper_account_id = 1;
inline bool CMsgEventTipsSummaryResponse_Tipper::has_tipper_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgEventTipsSummaryResponse_Tipper::clear_tipper_account_id() {
  tipper_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgEventTipsSummaryResponse_Tipper::tipper_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventTipsSummaryResponse.Tipper.tipper_account_id)
  return tipper_account_id_;
}
inline void CMsgEventTipsSummaryResponse_Tipper::set_tipper_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  tipper_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEventTipsSummaryResponse.Tipper.tipper_account_id)
}

// optional uint32 tip_count = 2 [default = 1];
inline bool CMsgEventTipsSummaryResponse_Tipper::has_tip_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgEventTipsSummaryResponse_Tipper::clear_tip_count() {
  tip_count_ = 1u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgEventTipsSummaryResponse_Tipper::tip_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventTipsSummaryResponse.Tipper.tip_count)
  return tip_count_;
}
inline void CMsgEventTipsSummaryResponse_Tipper::set_tip_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  tip_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEventTipsSummaryResponse.Tipper.tip_count)
}

// -------------------------------------------------------------------

// CMsgEventTipsSummaryResponse

// optional bool result = 1;
inline bool CMsgEventTipsSummaryResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgEventTipsSummaryResponse::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgEventTipsSummaryResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventTipsSummaryResponse.result)
  return result_;
}
inline void CMsgEventTipsSummaryResponse::set_result(bool value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEventTipsSummaryResponse.result)
}

// repeated .proto.dota.CMsgEventTipsSummaryResponse.Tipper tips_received = 2;
inline int CMsgEventTipsSummaryResponse::tips_received_size() const {
  return tips_received_.size();
}
inline void CMsgEventTipsSummaryResponse::clear_tips_received() {
  tips_received_.Clear();
}
inline ::proto::dota::CMsgEventTipsSummaryResponse_Tipper* CMsgEventTipsSummaryResponse::mutable_tips_received(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgEventTipsSummaryResponse.tips_received)
  return tips_received_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventTipsSummaryResponse_Tipper >*
CMsgEventTipsSummaryResponse::mutable_tips_received() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgEventTipsSummaryResponse.tips_received)
  return &tips_received_;
}
inline const ::proto::dota::CMsgEventTipsSummaryResponse_Tipper& CMsgEventTipsSummaryResponse::tips_received(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventTipsSummaryResponse.tips_received)
  return tips_received_.Get(index);
}
inline ::proto::dota::CMsgEventTipsSummaryResponse_Tipper* CMsgEventTipsSummaryResponse::add_tips_received() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgEventTipsSummaryResponse.tips_received)
  return tips_received_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventTipsSummaryResponse_Tipper >&
CMsgEventTipsSummaryResponse::tips_received() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgEventTipsSummaryResponse.tips_received)
  return tips_received_;
}

// -------------------------------------------------------------------

// CMsgSocialFeedRequest

// optional uint32 account_id = 1;
inline bool CMsgSocialFeedRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSocialFeedRequest::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgSocialFeedRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedRequest.account_id)
  return account_id_;
}
inline void CMsgSocialFeedRequest::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedRequest.account_id)
}

// optional bool self_only = 2;
inline bool CMsgSocialFeedRequest::has_self_only() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSocialFeedRequest::clear_self_only() {
  self_only_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgSocialFeedRequest::self_only() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedRequest.self_only)
  return self_only_;
}
inline void CMsgSocialFeedRequest::set_self_only(bool value) {
  _has_bits_[0] |= 0x00000002u;
  self_only_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedRequest.self_only)
}

// -------------------------------------------------------------------

// CMsgSocialFeedResponse_FeedEvent

// optional uint64 feed_event_id = 1;
inline bool CMsgSocialFeedResponse_FeedEvent::has_feed_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSocialFeedResponse_FeedEvent::clear_feed_event_id() {
  feed_event_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgSocialFeedResponse_FeedEvent::feed_event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedResponse.FeedEvent.feed_event_id)
  return feed_event_id_;
}
inline void CMsgSocialFeedResponse_FeedEvent::set_feed_event_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  feed_event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedResponse.FeedEvent.feed_event_id)
}

// optional uint32 account_id = 2;
inline bool CMsgSocialFeedResponse_FeedEvent::has_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSocialFeedResponse_FeedEvent::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgSocialFeedResponse_FeedEvent::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedResponse.FeedEvent.account_id)
  return account_id_;
}
inline void CMsgSocialFeedResponse_FeedEvent::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedResponse.FeedEvent.account_id)
}

// optional uint32 timestamp = 3;
inline bool CMsgSocialFeedResponse_FeedEvent::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSocialFeedResponse_FeedEvent::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgSocialFeedResponse_FeedEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedResponse.FeedEvent.timestamp)
  return timestamp_;
}
inline void CMsgSocialFeedResponse_FeedEvent::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedResponse.FeedEvent.timestamp)
}

// optional uint32 comment_count = 4;
inline bool CMsgSocialFeedResponse_FeedEvent::has_comment_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSocialFeedResponse_FeedEvent::clear_comment_count() {
  comment_count_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgSocialFeedResponse_FeedEvent::comment_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedResponse.FeedEvent.comment_count)
  return comment_count_;
}
inline void CMsgSocialFeedResponse_FeedEvent::set_comment_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  comment_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedResponse.FeedEvent.comment_count)
}

// optional uint32 event_type = 5;
inline bool CMsgSocialFeedResponse_FeedEvent::has_event_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSocialFeedResponse_FeedEvent::clear_event_type() {
  event_type_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgSocialFeedResponse_FeedEvent::event_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedResponse.FeedEvent.event_type)
  return event_type_;
}
inline void CMsgSocialFeedResponse_FeedEvent::set_event_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedResponse.FeedEvent.event_type)
}

// optional uint32 event_sub_type = 6;
inline bool CMsgSocialFeedResponse_FeedEvent::has_event_sub_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSocialFeedResponse_FeedEvent::clear_event_sub_type() {
  event_sub_type_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgSocialFeedResponse_FeedEvent::event_sub_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedResponse.FeedEvent.event_sub_type)
  return event_sub_type_;
}
inline void CMsgSocialFeedResponse_FeedEvent::set_event_sub_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  event_sub_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedResponse.FeedEvent.event_sub_type)
}

// optional uint64 param_big_int_1 = 7;
inline bool CMsgSocialFeedResponse_FeedEvent::has_param_big_int_1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSocialFeedResponse_FeedEvent::clear_param_big_int_1() {
  param_big_int_1_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint64 CMsgSocialFeedResponse_FeedEvent::param_big_int_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_big_int_1)
  return param_big_int_1_;
}
inline void CMsgSocialFeedResponse_FeedEvent::set_param_big_int_1(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  param_big_int_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_big_int_1)
}

// optional uint32 param_int_1 = 8;
inline bool CMsgSocialFeedResponse_FeedEvent::has_param_int_1() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgSocialFeedResponse_FeedEvent::clear_param_int_1() {
  param_int_1_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgSocialFeedResponse_FeedEvent::param_int_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_int_1)
  return param_int_1_;
}
inline void CMsgSocialFeedResponse_FeedEvent::set_param_int_1(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  param_int_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_int_1)
}

// optional uint32 param_int_2 = 9;
inline bool CMsgSocialFeedResponse_FeedEvent::has_param_int_2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgSocialFeedResponse_FeedEvent::clear_param_int_2() {
  param_int_2_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgSocialFeedResponse_FeedEvent::param_int_2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_int_2)
  return param_int_2_;
}
inline void CMsgSocialFeedResponse_FeedEvent::set_param_int_2(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  param_int_2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_int_2)
}

// optional uint32 param_int_3 = 10;
inline bool CMsgSocialFeedResponse_FeedEvent::has_param_int_3() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgSocialFeedResponse_FeedEvent::clear_param_int_3() {
  param_int_3_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgSocialFeedResponse_FeedEvent::param_int_3() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_int_3)
  return param_int_3_;
}
inline void CMsgSocialFeedResponse_FeedEvent::set_param_int_3(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  param_int_3_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_int_3)
}

// optional string param_string = 11;
inline bool CMsgSocialFeedResponse_FeedEvent::has_param_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSocialFeedResponse_FeedEvent::clear_param_string() {
  param_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgSocialFeedResponse_FeedEvent::param_string() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_string)
  return param_string_.GetNoArena();
}
inline void CMsgSocialFeedResponse_FeedEvent::set_param_string(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  param_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_string)
}
#if LANG_CXX11
inline void CMsgSocialFeedResponse_FeedEvent::set_param_string(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  param_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_string)
}
#endif
inline void CMsgSocialFeedResponse_FeedEvent::set_param_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  param_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_string)
}
inline void CMsgSocialFeedResponse_FeedEvent::set_param_string(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  param_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_string)
}
inline ::std::string* CMsgSocialFeedResponse_FeedEvent::mutable_param_string() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_string)
  return param_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSocialFeedResponse_FeedEvent::release_param_string() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_string)
  if (!has_param_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return param_string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSocialFeedResponse_FeedEvent::set_allocated_param_string(::std::string* param_string) {
  if (param_string != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  param_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param_string);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgSocialFeedResponse.FeedEvent.param_string)
}

// -------------------------------------------------------------------

// CMsgSocialFeedResponse

// optional .proto.dota.CMsgSocialFeedResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgSocialFeedResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSocialFeedResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgSocialFeedResponse_Result CMsgSocialFeedResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedResponse.result)
  return static_cast< ::proto::dota::CMsgSocialFeedResponse_Result >(result_);
}
inline void CMsgSocialFeedResponse::set_result(::proto::dota::CMsgSocialFeedResponse_Result value) {
  assert(::proto::dota::CMsgSocialFeedResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedResponse.result)
}

// repeated .proto.dota.CMsgSocialFeedResponse.FeedEvent feed_events = 2;
inline int CMsgSocialFeedResponse::feed_events_size() const {
  return feed_events_.size();
}
inline void CMsgSocialFeedResponse::clear_feed_events() {
  feed_events_.Clear();
}
inline ::proto::dota::CMsgSocialFeedResponse_FeedEvent* CMsgSocialFeedResponse::mutable_feed_events(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgSocialFeedResponse.feed_events)
  return feed_events_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSocialFeedResponse_FeedEvent >*
CMsgSocialFeedResponse::mutable_feed_events() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSocialFeedResponse.feed_events)
  return &feed_events_;
}
inline const ::proto::dota::CMsgSocialFeedResponse_FeedEvent& CMsgSocialFeedResponse::feed_events(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedResponse.feed_events)
  return feed_events_.Get(index);
}
inline ::proto::dota::CMsgSocialFeedResponse_FeedEvent* CMsgSocialFeedResponse::add_feed_events() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSocialFeedResponse.feed_events)
  return feed_events_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSocialFeedResponse_FeedEvent >&
CMsgSocialFeedResponse::feed_events() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSocialFeedResponse.feed_events)
  return feed_events_;
}

// -------------------------------------------------------------------

// CMsgSocialFeedCommentsRequest

// optional uint64 feed_event_id = 1;
inline bool CMsgSocialFeedCommentsRequest::has_feed_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSocialFeedCommentsRequest::clear_feed_event_id() {
  feed_event_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgSocialFeedCommentsRequest::feed_event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedCommentsRequest.feed_event_id)
  return feed_event_id_;
}
inline void CMsgSocialFeedCommentsRequest::set_feed_event_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  feed_event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedCommentsRequest.feed_event_id)
}

// -------------------------------------------------------------------

// CMsgSocialFeedCommentsResponse_FeedComment

// optional uint32 commenter_account_id = 1;
inline bool CMsgSocialFeedCommentsResponse_FeedComment::has_commenter_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSocialFeedCommentsResponse_FeedComment::clear_commenter_account_id() {
  commenter_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgSocialFeedCommentsResponse_FeedComment::commenter_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment.commenter_account_id)
  return commenter_account_id_;
}
inline void CMsgSocialFeedCommentsResponse_FeedComment::set_commenter_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  commenter_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment.commenter_account_id)
}

// optional uint32 timestamp = 2;
inline bool CMsgSocialFeedCommentsResponse_FeedComment::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSocialFeedCommentsResponse_FeedComment::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgSocialFeedCommentsResponse_FeedComment::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment.timestamp)
  return timestamp_;
}
inline void CMsgSocialFeedCommentsResponse_FeedComment::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment.timestamp)
}

// optional string comment_text = 3;
inline bool CMsgSocialFeedCommentsResponse_FeedComment::has_comment_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSocialFeedCommentsResponse_FeedComment::clear_comment_text() {
  comment_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgSocialFeedCommentsResponse_FeedComment::comment_text() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment.comment_text)
  return comment_text_.GetNoArena();
}
inline void CMsgSocialFeedCommentsResponse_FeedComment::set_comment_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  comment_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment.comment_text)
}
#if LANG_CXX11
inline void CMsgSocialFeedCommentsResponse_FeedComment::set_comment_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  comment_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment.comment_text)
}
#endif
inline void CMsgSocialFeedCommentsResponse_FeedComment::set_comment_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  comment_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment.comment_text)
}
inline void CMsgSocialFeedCommentsResponse_FeedComment::set_comment_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  comment_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment.comment_text)
}
inline ::std::string* CMsgSocialFeedCommentsResponse_FeedComment::mutable_comment_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment.comment_text)
  return comment_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSocialFeedCommentsResponse_FeedComment::release_comment_text() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment.comment_text)
  if (!has_comment_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return comment_text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSocialFeedCommentsResponse_FeedComment::set_allocated_comment_text(::std::string* comment_text) {
  if (comment_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  comment_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment_text);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgSocialFeedCommentsResponse.FeedComment.comment_text)
}

// -------------------------------------------------------------------

// CMsgSocialFeedCommentsResponse

// optional .proto.dota.CMsgSocialFeedCommentsResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgSocialFeedCommentsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSocialFeedCommentsResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgSocialFeedCommentsResponse_Result CMsgSocialFeedCommentsResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedCommentsResponse.result)
  return static_cast< ::proto::dota::CMsgSocialFeedCommentsResponse_Result >(result_);
}
inline void CMsgSocialFeedCommentsResponse::set_result(::proto::dota::CMsgSocialFeedCommentsResponse_Result value) {
  assert(::proto::dota::CMsgSocialFeedCommentsResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSocialFeedCommentsResponse.result)
}

// repeated .proto.dota.CMsgSocialFeedCommentsResponse.FeedComment feed_comments = 3;
inline int CMsgSocialFeedCommentsResponse::feed_comments_size() const {
  return feed_comments_.size();
}
inline void CMsgSocialFeedCommentsResponse::clear_feed_comments() {
  feed_comments_.Clear();
}
inline ::proto::dota::CMsgSocialFeedCommentsResponse_FeedComment* CMsgSocialFeedCommentsResponse::mutable_feed_comments(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgSocialFeedCommentsResponse.feed_comments)
  return feed_comments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSocialFeedCommentsResponse_FeedComment >*
CMsgSocialFeedCommentsResponse::mutable_feed_comments() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSocialFeedCommentsResponse.feed_comments)
  return &feed_comments_;
}
inline const ::proto::dota::CMsgSocialFeedCommentsResponse_FeedComment& CMsgSocialFeedCommentsResponse::feed_comments(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSocialFeedCommentsResponse.feed_comments)
  return feed_comments_.Get(index);
}
inline ::proto::dota::CMsgSocialFeedCommentsResponse_FeedComment* CMsgSocialFeedCommentsResponse::add_feed_comments() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSocialFeedCommentsResponse.feed_comments)
  return feed_comments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSocialFeedCommentsResponse_FeedComment >&
CMsgSocialFeedCommentsResponse::feed_comments() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSocialFeedCommentsResponse.feed_comments)
  return feed_comments_;
}

// -------------------------------------------------------------------

// CMsgClientToGCPlayerCardSpecificPurchaseRequest

// optional uint32 player_account_id = 1;
inline bool CMsgClientToGCPlayerCardSpecificPurchaseRequest::has_player_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCPlayerCardSpecificPurchaseRequest::clear_player_account_id() {
  player_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgClientToGCPlayerCardSpecificPurchaseRequest::player_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseRequest.player_account_id)
  return player_account_id_;
}
inline void CMsgClientToGCPlayerCardSpecificPurchaseRequest::set_player_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseRequest.player_account_id)
}

// optional uint32 event_id = 2;
inline bool CMsgClientToGCPlayerCardSpecificPurchaseRequest::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCPlayerCardSpecificPurchaseRequest::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCPlayerCardSpecificPurchaseRequest::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseRequest.event_id)
  return event_id_;
}
inline void CMsgClientToGCPlayerCardSpecificPurchaseRequest::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseRequest.event_id)
}

// optional uint64 card_dust_item_id = 3;
inline bool CMsgClientToGCPlayerCardSpecificPurchaseRequest::has_card_dust_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCPlayerCardSpecificPurchaseRequest::clear_card_dust_item_id() {
  card_dust_item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgClientToGCPlayerCardSpecificPurchaseRequest::card_dust_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseRequest.card_dust_item_id)
  return card_dust_item_id_;
}
inline void CMsgClientToGCPlayerCardSpecificPurchaseRequest::set_card_dust_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  card_dust_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseRequest.card_dust_item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCPlayerCardSpecificPurchaseResponse

// optional .proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCPlayerCardSpecificPurchaseResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCPlayerCardSpecificPurchaseResponse::clear_result() {
  result_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result CMsgClientToGCPlayerCardSpecificPurchaseResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result >(result_);
}
inline void CMsgClientToGCPlayerCardSpecificPurchaseResponse::set_result(::proto::dota::CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseResponse.result)
}

// optional uint64 item_id = 2;
inline bool CMsgClientToGCPlayerCardSpecificPurchaseResponse::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCPlayerCardSpecificPurchaseResponse::clear_item_id() {
  item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCPlayerCardSpecificPurchaseResponse::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseResponse.item_id)
  return item_id_;
}
inline void CMsgClientToGCPlayerCardSpecificPurchaseResponse::set_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCPlayerCardSpecificPurchaseResponse.item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRecordContestVote

// optional uint32 contest_id = 1;
inline bool CMsgClientToGCRecordContestVote::has_contest_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRecordContestVote::clear_contest_id() {
  contest_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordContestVote::contest_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecordContestVote.contest_id)
  return contest_id_;
}
inline void CMsgClientToGCRecordContestVote::set_contest_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  contest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecordContestVote.contest_id)
}

// optional uint64 contest_item_id = 2;
inline bool CMsgClientToGCRecordContestVote::has_contest_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRecordContestVote::clear_contest_item_id() {
  contest_item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgClientToGCRecordContestVote::contest_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecordContestVote.contest_item_id)
  return contest_item_id_;
}
inline void CMsgClientToGCRecordContestVote::set_contest_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  contest_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecordContestVote.contest_item_id)
}

// optional int32 vote = 3;
inline bool CMsgClientToGCRecordContestVote::has_vote() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRecordContestVote::clear_vote() {
  vote_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CMsgClientToGCRecordContestVote::vote() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecordContestVote.vote)
  return vote_;
}
inline void CMsgClientToGCRecordContestVote::set_vote(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  vote_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecordContestVote.vote)
}

// -------------------------------------------------------------------

// CMsgGCToClientRecordContestVoteResponse

// optional .proto.dota.CMsgGCToClientRecordContestVoteResponse.EResult eresult = 1 [default = SUCCESS];
inline bool CMsgGCToClientRecordContestVoteResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientRecordContestVoteResponse::clear_eresult() {
  eresult_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgGCToClientRecordContestVoteResponse_EResult CMsgGCToClientRecordContestVoteResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientRecordContestVoteResponse.eresult)
  return static_cast< ::proto::dota::CMsgGCToClientRecordContestVoteResponse_EResult >(eresult_);
}
inline void CMsgGCToClientRecordContestVoteResponse::set_eresult(::proto::dota::CMsgGCToClientRecordContestVoteResponse_EResult value) {
  assert(::proto::dota::CMsgGCToClientRecordContestVoteResponse_EResult_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientRecordContestVoteResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTADPCFeed_Element

// optional .proto.dota.CMsgDOTADPCFeed.EFeedElementType type = 1 [default = FEED_SERIES_RESULT];
inline bool CMsgDOTADPCFeed_Element::has_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTADPCFeed_Element::clear_type() {
  type_ = 1;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::proto::dota::CMsgDOTADPCFeed_EFeedElementType CMsgDOTADPCFeed_Element::type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.Element.type)
  return static_cast< ::proto::dota::CMsgDOTADPCFeed_EFeedElementType >(type_);
}
inline void CMsgDOTADPCFeed_Element::set_type(::proto::dota::CMsgDOTADPCFeed_EFeedElementType value) {
  assert(::proto::dota::CMsgDOTADPCFeed_EFeedElementType_IsValid(value));
  _has_bits_[0] |= 0x00001000u;
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCFeed.Element.type)
}

// optional uint32 timestamp = 2;
inline bool CMsgDOTADPCFeed_Element::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTADPCFeed_Element::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTADPCFeed_Element::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.Element.timestamp)
  return timestamp_;
}
inline void CMsgDOTADPCFeed_Element::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCFeed.Element.timestamp)
}

// optional uint32 series_id = 3;
inline bool CMsgDOTADPCFeed_Element::has_series_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTADPCFeed_Element::clear_series_id() {
  series_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTADPCFeed_Element::series_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.Element.series_id)
  return series_id_;
}
inline void CMsgDOTADPCFeed_Element::set_series_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  series_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCFeed.Element.series_id)
}

// optional uint64 match_id = 4;
inline bool CMsgDOTADPCFeed_Element::has_match_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTADPCFeed_Element::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgDOTADPCFeed_Element::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.Element.match_id)
  return match_id_;
}
inline void CMsgDOTADPCFeed_Element::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCFeed.Element.match_id)
}

// optional uint32 team_id = 5;
inline bool CMsgDOTADPCFeed_Element::has_team_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTADPCFeed_Element::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTADPCFeed_Element::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.Element.team_id)
  return team_id_;
}
inline void CMsgDOTADPCFeed_Element::set_team_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCFeed.Element.team_id)
}

// optional uint32 account_id = 6;
inline bool CMsgDOTADPCFeed_Element::has_account_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTADPCFeed_Element::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgDOTADPCFeed_Element::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.Element.account_id)
  return account_id_;
}
inline void CMsgDOTADPCFeed_Element::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCFeed.Element.account_id)
}

// optional uint32 league_id = 7;
inline bool CMsgDOTADPCFeed_Element::has_league_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTADPCFeed_Element::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgDOTADPCFeed_Element::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.Element.league_id)
  return league_id_;
}
inline void CMsgDOTADPCFeed_Element::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCFeed.Element.league_id)
}

// optional uint32 node_id = 8;
inline bool CMsgDOTADPCFeed_Element::has_node_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTADPCFeed_Element::clear_node_id() {
  node_id_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgDOTADPCFeed_Element::node_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.Element.node_id)
  return node_id_;
}
inline void CMsgDOTADPCFeed_Element::set_node_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  node_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCFeed.Element.node_id)
}

// optional uint64 server_steam_id = 13;
inline bool CMsgDOTADPCFeed_Element::has_server_steam_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTADPCFeed_Element::clear_server_steam_id() {
  server_steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint64 CMsgDOTADPCFeed_Element::server_steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.Element.server_steam_id)
  return server_steam_id_;
}
inline void CMsgDOTADPCFeed_Element::set_server_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000800u;
  server_steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCFeed.Element.server_steam_id)
}

// optional uint32 data_1 = 9;
inline bool CMsgDOTADPCFeed_Element::has_data_1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTADPCFeed_Element::clear_data_1() {
  data_1_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgDOTADPCFeed_Element::data_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.Element.data_1)
  return data_1_;
}
inline void CMsgDOTADPCFeed_Element::set_data_1(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  data_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCFeed.Element.data_1)
}

// optional uint32 data_2 = 10;
inline bool CMsgDOTADPCFeed_Element::has_data_2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTADPCFeed_Element::clear_data_2() {
  data_2_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgDOTADPCFeed_Element::data_2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.Element.data_2)
  return data_2_;
}
inline void CMsgDOTADPCFeed_Element::set_data_2(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  data_2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCFeed.Element.data_2)
}

// optional uint32 data_3 = 11;
inline bool CMsgDOTADPCFeed_Element::has_data_3() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTADPCFeed_Element::clear_data_3() {
  data_3_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgDOTADPCFeed_Element::data_3() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.Element.data_3)
  return data_3_;
}
inline void CMsgDOTADPCFeed_Element::set_data_3(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  data_3_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCFeed.Element.data_3)
}

// optional uint32 data_4 = 12;
inline bool CMsgDOTADPCFeed_Element::has_data_4() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTADPCFeed_Element::clear_data_4() {
  data_4_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgDOTADPCFeed_Element::data_4() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.Element.data_4)
  return data_4_;
}
inline void CMsgDOTADPCFeed_Element::set_data_4(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  data_4_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCFeed.Element.data_4)
}

// -------------------------------------------------------------------

// CMsgDOTADPCFeed

// repeated .proto.dota.CMsgDOTADPCFeed.Element elements = 1;
inline int CMsgDOTADPCFeed::elements_size() const {
  return elements_.size();
}
inline void CMsgDOTADPCFeed::clear_elements() {
  elements_.Clear();
}
inline ::proto::dota::CMsgDOTADPCFeed_Element* CMsgDOTADPCFeed::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTADPCFeed.elements)
  return elements_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTADPCFeed_Element >*
CMsgDOTADPCFeed::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTADPCFeed.elements)
  return &elements_;
}
inline const ::proto::dota::CMsgDOTADPCFeed_Element& CMsgDOTADPCFeed::elements(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCFeed.elements)
  return elements_.Get(index);
}
inline ::proto::dota::CMsgDOTADPCFeed_Element* CMsgDOTADPCFeed::add_elements() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTADPCFeed.elements)
  return elements_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTADPCFeed_Element >&
CMsgDOTADPCFeed::elements() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTADPCFeed.elements)
  return elements_;
}

// -------------------------------------------------------------------

// CMsgDOTADPCUserInfo

// optional bool is_plus_subscriber = 1;
inline bool CMsgDOTADPCUserInfo::has_is_plus_subscriber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTADPCUserInfo::clear_is_plus_subscriber() {
  is_plus_subscriber_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgDOTADPCUserInfo::is_plus_subscriber() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADPCUserInfo.is_plus_subscriber)
  return is_plus_subscriber_;
}
inline void CMsgDOTADPCUserInfo::set_is_plus_subscriber(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_plus_subscriber_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADPCUserInfo.is_plus_subscriber)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::dota::CMsgDOTARequestMatches_SkillLevel> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTARequestMatches_SkillLevel>() {
  return ::proto::dota::CMsgDOTARequestMatches_SkillLevel_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTAGetDPCStandingsResponse_EStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTAGetDPCStandingsResponse_EStatus>() {
  return ::proto::dota::CMsgDOTAGetDPCStandingsResponse_EStatus_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTAPopup_PopupID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTAPopup_PopupID>() {
  return ::proto::dota::CMsgDOTAPopup_PopupID_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult>() {
  return ::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode>() {
  return ::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgGCNotificationsResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgGCNotificationsResponse_EResult>() {
  return ::proto::dota::CMsgGCNotificationsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult>() {
  return ::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result>() {
  return ::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgArcanaVotes_VotingState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgArcanaVotes_VotingState>() {
  return ::proto::dota::CMsgArcanaVotes_VotingState_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTARedeemItemResponse_EResultCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTARedeemItemResponse_EResultCode>() {
  return ::proto::dota::CMsgDOTARedeemItemResponse_EResultCode_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode>() {
  return ::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult>() {
  return ::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result>() {
  return ::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result>() {
  return ::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result>() {
  return ::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCGiveTipResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCGiveTipResponse_Result>() {
  return ::proto::dota::CMsgClientToGCGiveTipResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result>() {
  return ::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result>() {
  return ::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgGCToClientAllStarVotesSubmitReply_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgGCToClientAllStarVotesSubmitReply_Result>() {
  return ::proto::dota::CMsgGCToClientAllStarVotesSubmitReply_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTASelectionPriorityChoiceResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTASelectionPriorityChoiceResponse_Result>() {
  return ::proto::dota::CMsgDOTASelectionPriorityChoiceResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTAGameAutographRewardResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTAGameAutographRewardResponse_Result>() {
  return ::proto::dota::CMsgDOTAGameAutographRewardResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTADestroyLobbyResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTADestroyLobbyResponse_Result>() {
  return ::proto::dota::CMsgDOTADestroyLobbyResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgPurchaseItemWithEventPointsResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgPurchaseItemWithEventPointsResponse_Result>() {
  return ::proto::dota::CMsgPurchaseItemWithEventPointsResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCRecycleHeroRelicResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCRecycleHeroRelicResponse_Result>() {
  return ::proto::dota::CMsgClientToGCRecycleHeroRelicResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgProfileResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgProfileResponse_EResponse>() {
  return ::proto::dota::CMsgProfileResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgProfileUpdateResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgProfileUpdateResponse_Result>() {
  return ::proto::dota::CMsgProfileUpdateResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgActivatePlusFreeTrialResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgActivatePlusFreeTrialResponse_Result>() {
  return ::proto::dota::CMsgActivatePlusFreeTrialResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCCavernCrawlClaimRoomResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCCavernCrawlClaimRoomResponse_Result>() {
  return ::proto::dota::CMsgClientToGCCavernCrawlClaimRoomResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result>() {
  return ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnRoomResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result>() {
  return ::proto::dota::CMsgClientToGCCavernCrawlUseItemOnPathResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_Result>() {
  return ::proto::dota::CMsgClientToGCCavernCrawlRequestMapStateResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result>() {
  return ::proto::dota::CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgSocialFeedResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgSocialFeedResponse_Result>() {
  return ::proto::dota::CMsgSocialFeedResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgSocialFeedCommentsResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgSocialFeedCommentsResponse_Result>() {
  return ::proto::dota::CMsgSocialFeedCommentsResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result>() {
  return ::proto::dota::CMsgClientToGCPlayerCardSpecificPurchaseResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgGCToClientRecordContestVoteResponse_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgGCToClientRecordContestVoteResponse_EResult>() {
  return ::proto::dota::CMsgGCToClientRecordContestVoteResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTADPCFeed_EFeedElementType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTADPCFeed_EFeedElementType>() {
  return ::proto::dota::CMsgDOTADPCFeed_EFeedElementType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::DOTA_WatchReplayType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DOTA_WatchReplayType>() {
  return ::proto::dota::DOTA_WatchReplayType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EItemEditorReservationResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EItemEditorReservationResult>() {
  return ::proto::dota::EItemEditorReservationResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EFeaturedHeroTextField> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EFeaturedHeroTextField>() {
  return ::proto::dota::EFeaturedHeroTextField_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EFeaturedHeroDataType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EFeaturedHeroDataType>() {
  return ::proto::dota::EFeaturedHeroDataType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EWeekendTourneyRichPresenceEvent> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EWeekendTourneyRichPresenceEvent>() {
  return ::proto::dota::EWeekendTourneyRichPresenceEvent_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EDOTATriviaQuestionCategory> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EDOTATriviaQuestionCategory>() {
  return ::proto::dota::EDOTATriviaQuestionCategory_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EDOTATriviaAnswerResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EDOTATriviaAnswerResult>() {
  return ::proto::dota::EDOTATriviaAnswerResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EPurchaseHeroRelicResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EPurchaseHeroRelicResult>() {
  return ::proto::dota::EPurchaseHeroRelicResult_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_dota_5fgcmessages_5fclient_2eproto
