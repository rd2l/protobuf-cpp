// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_broadcastmessages.proto

#ifndef PROTOBUF_INCLUDED_dota_5fbroadcastmessages_2eproto
#define PROTOBUF_INCLUDED_dota_5fbroadcastmessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dota_5fbroadcastmessages_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_dota_5fbroadcastmessages_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_dota_5fbroadcastmessages_2eproto();
namespace proto {
namespace dota {
class CDOTABroadcastMsg;
class CDOTABroadcastMsgDefaultTypeInternal;
extern CDOTABroadcastMsgDefaultTypeInternal _CDOTABroadcastMsg_default_instance_;
class CDOTABroadcastMsg_LANLobbyReply;
class CDOTABroadcastMsg_LANLobbyReplyDefaultTypeInternal;
extern CDOTABroadcastMsg_LANLobbyReplyDefaultTypeInternal _CDOTABroadcastMsg_LANLobbyReply_default_instance_;
class CDOTABroadcastMsg_LANLobbyReply_CLobbyMember;
class CDOTABroadcastMsg_LANLobbyReply_CLobbyMemberDefaultTypeInternal;
extern CDOTABroadcastMsg_LANLobbyReply_CLobbyMemberDefaultTypeInternal _CDOTABroadcastMsg_LANLobbyReply_CLobbyMember_default_instance_;
class CDOTABroadcastMsg_LANLobbyRequest;
class CDOTABroadcastMsg_LANLobbyRequestDefaultTypeInternal;
extern CDOTABroadcastMsg_LANLobbyRequestDefaultTypeInternal _CDOTABroadcastMsg_LANLobbyRequest_default_instance_;
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::dota::CDOTABroadcastMsg* Arena::CreateMaybeMessage<::proto::dota::CDOTABroadcastMsg>(Arena*);
template<> ::proto::dota::CDOTABroadcastMsg_LANLobbyReply* Arena::CreateMaybeMessage<::proto::dota::CDOTABroadcastMsg_LANLobbyReply>(Arena*);
template<> ::proto::dota::CDOTABroadcastMsg_LANLobbyReply_CLobbyMember* Arena::CreateMaybeMessage<::proto::dota::CDOTABroadcastMsg_LANLobbyReply_CLobbyMember>(Arena*);
template<> ::proto::dota::CDOTABroadcastMsg_LANLobbyRequest* Arena::CreateMaybeMessage<::proto::dota::CDOTABroadcastMsg_LANLobbyRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace dota {

enum EDotaBroadcastMessages {
  DOTA_BM_LANLobbyRequest = 1,
  DOTA_BM_LANLobbyReply = 2
};
bool EDotaBroadcastMessages_IsValid(int value);
const EDotaBroadcastMessages EDotaBroadcastMessages_MIN = DOTA_BM_LANLobbyRequest;
const EDotaBroadcastMessages EDotaBroadcastMessages_MAX = DOTA_BM_LANLobbyReply;
const int EDotaBroadcastMessages_ARRAYSIZE = EDotaBroadcastMessages_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDotaBroadcastMessages_descriptor();
inline const ::std::string& EDotaBroadcastMessages_Name(EDotaBroadcastMessages value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDotaBroadcastMessages_descriptor(), value);
}
inline bool EDotaBroadcastMessages_Parse(
    const ::std::string& name, EDotaBroadcastMessages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDotaBroadcastMessages>(
    EDotaBroadcastMessages_descriptor(), name, value);
}
// ===================================================================

class CDOTABroadcastMsg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTABroadcastMsg) */ {
 public:
  CDOTABroadcastMsg();
  virtual ~CDOTABroadcastMsg();

  CDOTABroadcastMsg(const CDOTABroadcastMsg& from);

  inline CDOTABroadcastMsg& operator=(const CDOTABroadcastMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTABroadcastMsg(CDOTABroadcastMsg&& from) noexcept
    : CDOTABroadcastMsg() {
    *this = ::std::move(from);
  }

  inline CDOTABroadcastMsg& operator=(CDOTABroadcastMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CDOTABroadcastMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTABroadcastMsg* internal_default_instance() {
    return reinterpret_cast<const CDOTABroadcastMsg*>(
               &_CDOTABroadcastMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CDOTABroadcastMsg* other);
  friend void swap(CDOTABroadcastMsg& a, CDOTABroadcastMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTABroadcastMsg* New() const final {
    return CreateMaybeMessage<CDOTABroadcastMsg>(nullptr);
  }

  CDOTABroadcastMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTABroadcastMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTABroadcastMsg& from);
  void MergeFrom(const CDOTABroadcastMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTABroadcastMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const void* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // required .proto.dota.EDotaBroadcastMessages type = 1 [default = DOTA_BM_LANLobbyRequest];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::proto::dota::EDotaBroadcastMessages type() const;
  void set_type(::proto::dota::EDotaBroadcastMessages value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTABroadcastMsg)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  int type_;
  friend struct ::TableStruct_dota_5fbroadcastmessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTABroadcastMsg_LANLobbyRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTABroadcastMsg_LANLobbyRequest) */ {
 public:
  CDOTABroadcastMsg_LANLobbyRequest();
  virtual ~CDOTABroadcastMsg_LANLobbyRequest();

  CDOTABroadcastMsg_LANLobbyRequest(const CDOTABroadcastMsg_LANLobbyRequest& from);

  inline CDOTABroadcastMsg_LANLobbyRequest& operator=(const CDOTABroadcastMsg_LANLobbyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTABroadcastMsg_LANLobbyRequest(CDOTABroadcastMsg_LANLobbyRequest&& from) noexcept
    : CDOTABroadcastMsg_LANLobbyRequest() {
    *this = ::std::move(from);
  }

  inline CDOTABroadcastMsg_LANLobbyRequest& operator=(CDOTABroadcastMsg_LANLobbyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CDOTABroadcastMsg_LANLobbyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTABroadcastMsg_LANLobbyRequest* internal_default_instance() {
    return reinterpret_cast<const CDOTABroadcastMsg_LANLobbyRequest*>(
               &_CDOTABroadcastMsg_LANLobbyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CDOTABroadcastMsg_LANLobbyRequest* other);
  friend void swap(CDOTABroadcastMsg_LANLobbyRequest& a, CDOTABroadcastMsg_LANLobbyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTABroadcastMsg_LANLobbyRequest* New() const final {
    return CreateMaybeMessage<CDOTABroadcastMsg_LANLobbyRequest>(nullptr);
  }

  CDOTABroadcastMsg_LANLobbyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTABroadcastMsg_LANLobbyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTABroadcastMsg_LANLobbyRequest& from);
  void MergeFrom(const CDOTABroadcastMsg_LANLobbyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTABroadcastMsg_LANLobbyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTABroadcastMsg_LANLobbyRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fbroadcastmessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTABroadcastMsg_LANLobbyReply_CLobbyMember final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember) */ {
 public:
  CDOTABroadcastMsg_LANLobbyReply_CLobbyMember();
  virtual ~CDOTABroadcastMsg_LANLobbyReply_CLobbyMember();

  CDOTABroadcastMsg_LANLobbyReply_CLobbyMember(const CDOTABroadcastMsg_LANLobbyReply_CLobbyMember& from);

  inline CDOTABroadcastMsg_LANLobbyReply_CLobbyMember& operator=(const CDOTABroadcastMsg_LANLobbyReply_CLobbyMember& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTABroadcastMsg_LANLobbyReply_CLobbyMember(CDOTABroadcastMsg_LANLobbyReply_CLobbyMember&& from) noexcept
    : CDOTABroadcastMsg_LANLobbyReply_CLobbyMember() {
    *this = ::std::move(from);
  }

  inline CDOTABroadcastMsg_LANLobbyReply_CLobbyMember& operator=(CDOTABroadcastMsg_LANLobbyReply_CLobbyMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CDOTABroadcastMsg_LANLobbyReply_CLobbyMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTABroadcastMsg_LANLobbyReply_CLobbyMember* internal_default_instance() {
    return reinterpret_cast<const CDOTABroadcastMsg_LANLobbyReply_CLobbyMember*>(
               &_CDOTABroadcastMsg_LANLobbyReply_CLobbyMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CDOTABroadcastMsg_LANLobbyReply_CLobbyMember* other);
  friend void swap(CDOTABroadcastMsg_LANLobbyReply_CLobbyMember& a, CDOTABroadcastMsg_LANLobbyReply_CLobbyMember& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTABroadcastMsg_LANLobbyReply_CLobbyMember* New() const final {
    return CreateMaybeMessage<CDOTABroadcastMsg_LANLobbyReply_CLobbyMember>(nullptr);
  }

  CDOTABroadcastMsg_LANLobbyReply_CLobbyMember* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTABroadcastMsg_LANLobbyReply_CLobbyMember>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTABroadcastMsg_LANLobbyReply_CLobbyMember& from);
  void MergeFrom(const CDOTABroadcastMsg_LANLobbyReply_CLobbyMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTABroadcastMsg_LANLobbyReply_CLobbyMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string player_name = 2;
  bool has_player_name() const;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fbroadcastmessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTABroadcastMsg_LANLobbyReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTABroadcastMsg_LANLobbyReply) */ {
 public:
  CDOTABroadcastMsg_LANLobbyReply();
  virtual ~CDOTABroadcastMsg_LANLobbyReply();

  CDOTABroadcastMsg_LANLobbyReply(const CDOTABroadcastMsg_LANLobbyReply& from);

  inline CDOTABroadcastMsg_LANLobbyReply& operator=(const CDOTABroadcastMsg_LANLobbyReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTABroadcastMsg_LANLobbyReply(CDOTABroadcastMsg_LANLobbyReply&& from) noexcept
    : CDOTABroadcastMsg_LANLobbyReply() {
    *this = ::std::move(from);
  }

  inline CDOTABroadcastMsg_LANLobbyReply& operator=(CDOTABroadcastMsg_LANLobbyReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CDOTABroadcastMsg_LANLobbyReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTABroadcastMsg_LANLobbyReply* internal_default_instance() {
    return reinterpret_cast<const CDOTABroadcastMsg_LANLobbyReply*>(
               &_CDOTABroadcastMsg_LANLobbyReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CDOTABroadcastMsg_LANLobbyReply* other);
  friend void swap(CDOTABroadcastMsg_LANLobbyReply& a, CDOTABroadcastMsg_LANLobbyReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTABroadcastMsg_LANLobbyReply* New() const final {
    return CreateMaybeMessage<CDOTABroadcastMsg_LANLobbyReply>(nullptr);
  }

  CDOTABroadcastMsg_LANLobbyReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTABroadcastMsg_LANLobbyReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTABroadcastMsg_LANLobbyReply& from);
  void MergeFrom(const CDOTABroadcastMsg_LANLobbyReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTABroadcastMsg_LANLobbyReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CDOTABroadcastMsg_LANLobbyReply_CLobbyMember CLobbyMember;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember members = 4;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 4;
  ::proto::dota::CDOTABroadcastMsg_LANLobbyReply_CLobbyMember* mutable_members(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTABroadcastMsg_LANLobbyReply_CLobbyMember >*
      mutable_members();
  const ::proto::dota::CDOTABroadcastMsg_LANLobbyReply_CLobbyMember& members(int index) const;
  ::proto::dota::CDOTABroadcastMsg_LANLobbyReply_CLobbyMember* add_members();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTABroadcastMsg_LANLobbyReply_CLobbyMember >&
      members() const;

  // optional string name = 8;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 8;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint32 tournament_id = 2;
  bool has_tournament_id() const;
  void clear_tournament_id();
  static const int kTournamentIdFieldNumber = 2;
  ::google::protobuf::uint32 tournament_id() const;
  void set_tournament_id(::google::protobuf::uint32 value);

  // optional uint32 tournament_game_id = 3;
  bool has_tournament_game_id() const;
  void clear_tournament_game_id();
  static const int kTournamentGameIdFieldNumber = 3;
  ::google::protobuf::uint32 tournament_game_id() const;
  void set_tournament_game_id(::google::protobuf::uint32 value);

  // optional bool requires_pass_key = 5;
  bool has_requires_pass_key() const;
  void clear_requires_pass_key();
  static const int kRequiresPassKeyFieldNumber = 5;
  bool requires_pass_key() const;
  void set_requires_pass_key(bool value);

  // optional uint32 leader_account_id = 6;
  bool has_leader_account_id() const;
  void clear_leader_account_id();
  static const int kLeaderAccountIdFieldNumber = 6;
  ::google::protobuf::uint32 leader_account_id() const;
  void set_leader_account_id(::google::protobuf::uint32 value);

  // optional uint32 game_mode = 7;
  bool has_game_mode() const;
  void clear_game_mode();
  static const int kGameModeFieldNumber = 7;
  ::google::protobuf::uint32 game_mode() const;
  void set_game_mode(::google::protobuf::uint32 value);

  // optional uint32 players = 9;
  bool has_players() const;
  void clear_players();
  static const int kPlayersFieldNumber = 9;
  ::google::protobuf::uint32 players() const;
  void set_players(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTABroadcastMsg_LANLobbyReply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTABroadcastMsg_LANLobbyReply_CLobbyMember > members_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 tournament_id_;
  ::google::protobuf::uint32 tournament_game_id_;
  bool requires_pass_key_;
  ::google::protobuf::uint32 leader_account_id_;
  ::google::protobuf::uint32 game_mode_;
  ::google::protobuf::uint32 players_;
  friend struct ::TableStruct_dota_5fbroadcastmessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CDOTABroadcastMsg

// required .proto.dota.EDotaBroadcastMessages type = 1 [default = DOTA_BM_LANLobbyRequest];
inline bool CDOTABroadcastMsg::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTABroadcastMsg::clear_type() {
  type_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::EDotaBroadcastMessages CDOTABroadcastMsg::type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTABroadcastMsg.type)
  return static_cast< ::proto::dota::EDotaBroadcastMessages >(type_);
}
inline void CDOTABroadcastMsg::set_type(::proto::dota::EDotaBroadcastMessages value) {
  assert(::proto::dota::EDotaBroadcastMessages_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTABroadcastMsg.type)
}

// optional bytes msg = 2;
inline bool CDOTABroadcastMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTABroadcastMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CDOTABroadcastMsg::msg() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTABroadcastMsg.msg)
  return msg_.GetNoArena();
}
inline void CDOTABroadcastMsg::set_msg(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTABroadcastMsg.msg)
}
#if LANG_CXX11
inline void CDOTABroadcastMsg::set_msg(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTABroadcastMsg.msg)
}
#endif
inline void CDOTABroadcastMsg::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTABroadcastMsg.msg)
}
inline void CDOTABroadcastMsg::set_msg(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTABroadcastMsg.msg)
}
inline ::std::string* CDOTABroadcastMsg::mutable_msg() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTABroadcastMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTABroadcastMsg::release_msg() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTABroadcastMsg.msg)
  if (!has_msg()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTABroadcastMsg::set_allocated_msg(::std::string* msg) {
  if (msg != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTABroadcastMsg.msg)
}

// -------------------------------------------------------------------

// CDOTABroadcastMsg_LANLobbyRequest

// -------------------------------------------------------------------

// CDOTABroadcastMsg_LANLobbyReply_CLobbyMember

// optional uint32 account_id = 1;
inline bool CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember.account_id)
  return account_id_;
}
inline void CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember.account_id)
}

// optional string player_name = 2;
inline bool CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::has_player_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::clear_player_name() {
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::player_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember.player_name)
  return player_name_.GetNoArena();
}
inline void CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::set_player_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember.player_name)
}
#if LANG_CXX11
inline void CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::set_player_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember.player_name)
}
#endif
inline void CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::set_player_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember.player_name)
}
inline void CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::set_player_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember.player_name)
}
inline ::std::string* CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::mutable_player_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::release_player_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember.player_name)
  if (!has_player_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return player_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTABroadcastMsg_LANLobbyReply_CLobbyMember::set_allocated_player_name(::std::string* player_name) {
  if (player_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember.player_name)
}

// -------------------------------------------------------------------

// CDOTABroadcastMsg_LANLobbyReply

// optional uint64 id = 1;
inline bool CDOTABroadcastMsg_LANLobbyReply::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTABroadcastMsg_LANLobbyReply::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CDOTABroadcastMsg_LANLobbyReply::id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTABroadcastMsg_LANLobbyReply.id)
  return id_;
}
inline void CDOTABroadcastMsg_LANLobbyReply::set_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTABroadcastMsg_LANLobbyReply.id)
}

// optional uint32 tournament_id = 2;
inline bool CDOTABroadcastMsg_LANLobbyReply::has_tournament_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTABroadcastMsg_LANLobbyReply::clear_tournament_id() {
  tournament_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CDOTABroadcastMsg_LANLobbyReply::tournament_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTABroadcastMsg_LANLobbyReply.tournament_id)
  return tournament_id_;
}
inline void CDOTABroadcastMsg_LANLobbyReply::set_tournament_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  tournament_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTABroadcastMsg_LANLobbyReply.tournament_id)
}

// optional uint32 tournament_game_id = 3;
inline bool CDOTABroadcastMsg_LANLobbyReply::has_tournament_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTABroadcastMsg_LANLobbyReply::clear_tournament_game_id() {
  tournament_game_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CDOTABroadcastMsg_LANLobbyReply::tournament_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTABroadcastMsg_LANLobbyReply.tournament_game_id)
  return tournament_game_id_;
}
inline void CDOTABroadcastMsg_LANLobbyReply::set_tournament_game_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  tournament_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTABroadcastMsg_LANLobbyReply.tournament_game_id)
}

// repeated .proto.dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember members = 4;
inline int CDOTABroadcastMsg_LANLobbyReply::members_size() const {
  return members_.size();
}
inline void CDOTABroadcastMsg_LANLobbyReply::clear_members() {
  members_.Clear();
}
inline ::proto::dota::CDOTABroadcastMsg_LANLobbyReply_CLobbyMember* CDOTABroadcastMsg_LANLobbyReply::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTABroadcastMsg_LANLobbyReply.members)
  return members_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTABroadcastMsg_LANLobbyReply_CLobbyMember >*
CDOTABroadcastMsg_LANLobbyReply::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTABroadcastMsg_LANLobbyReply.members)
  return &members_;
}
inline const ::proto::dota::CDOTABroadcastMsg_LANLobbyReply_CLobbyMember& CDOTABroadcastMsg_LANLobbyReply::members(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTABroadcastMsg_LANLobbyReply.members)
  return members_.Get(index);
}
inline ::proto::dota::CDOTABroadcastMsg_LANLobbyReply_CLobbyMember* CDOTABroadcastMsg_LANLobbyReply::add_members() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTABroadcastMsg_LANLobbyReply.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTABroadcastMsg_LANLobbyReply_CLobbyMember >&
CDOTABroadcastMsg_LANLobbyReply::members() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTABroadcastMsg_LANLobbyReply.members)
  return members_;
}

// optional bool requires_pass_key = 5;
inline bool CDOTABroadcastMsg_LANLobbyReply::has_requires_pass_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTABroadcastMsg_LANLobbyReply::clear_requires_pass_key() {
  requires_pass_key_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CDOTABroadcastMsg_LANLobbyReply::requires_pass_key() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTABroadcastMsg_LANLobbyReply.requires_pass_key)
  return requires_pass_key_;
}
inline void CDOTABroadcastMsg_LANLobbyReply::set_requires_pass_key(bool value) {
  _has_bits_[0] |= 0x00000010u;
  requires_pass_key_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTABroadcastMsg_LANLobbyReply.requires_pass_key)
}

// optional uint32 leader_account_id = 6;
inline bool CDOTABroadcastMsg_LANLobbyReply::has_leader_account_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTABroadcastMsg_LANLobbyReply::clear_leader_account_id() {
  leader_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CDOTABroadcastMsg_LANLobbyReply::leader_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTABroadcastMsg_LANLobbyReply.leader_account_id)
  return leader_account_id_;
}
inline void CDOTABroadcastMsg_LANLobbyReply::set_leader_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  leader_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTABroadcastMsg_LANLobbyReply.leader_account_id)
}

// optional uint32 game_mode = 7;
inline bool CDOTABroadcastMsg_LANLobbyReply::has_game_mode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTABroadcastMsg_LANLobbyReply::clear_game_mode() {
  game_mode_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CDOTABroadcastMsg_LANLobbyReply::game_mode() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTABroadcastMsg_LANLobbyReply.game_mode)
  return game_mode_;
}
inline void CDOTABroadcastMsg_LANLobbyReply::set_game_mode(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTABroadcastMsg_LANLobbyReply.game_mode)
}

// optional string name = 8;
inline bool CDOTABroadcastMsg_LANLobbyReply::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTABroadcastMsg_LANLobbyReply::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CDOTABroadcastMsg_LANLobbyReply::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTABroadcastMsg_LANLobbyReply.name)
  return name_.GetNoArena();
}
inline void CDOTABroadcastMsg_LANLobbyReply::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTABroadcastMsg_LANLobbyReply.name)
}
#if LANG_CXX11
inline void CDOTABroadcastMsg_LANLobbyReply::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTABroadcastMsg_LANLobbyReply.name)
}
#endif
inline void CDOTABroadcastMsg_LANLobbyReply::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTABroadcastMsg_LANLobbyReply.name)
}
inline void CDOTABroadcastMsg_LANLobbyReply::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTABroadcastMsg_LANLobbyReply.name)
}
inline ::std::string* CDOTABroadcastMsg_LANLobbyReply::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTABroadcastMsg_LANLobbyReply.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTABroadcastMsg_LANLobbyReply::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTABroadcastMsg_LANLobbyReply.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTABroadcastMsg_LANLobbyReply::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTABroadcastMsg_LANLobbyReply.name)
}

// optional uint32 players = 9;
inline bool CDOTABroadcastMsg_LANLobbyReply::has_players() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CDOTABroadcastMsg_LANLobbyReply::clear_players() {
  players_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CDOTABroadcastMsg_LANLobbyReply::players() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTABroadcastMsg_LANLobbyReply.players)
  return players_;
}
inline void CDOTABroadcastMsg_LANLobbyReply::set_players(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  players_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTABroadcastMsg_LANLobbyReply.players)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::dota::EDotaBroadcastMessages> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EDotaBroadcastMessages>() {
  return ::proto::dota::EDotaBroadcastMessages_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_dota_5fbroadcastmessages_2eproto
