// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_oauth.steamworkssdk.proto

#include "steammessages_oauth.steamworkssdk.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace proto {
namespace dota {
class COAuthToken_ImplicitGrantNoPrompt_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<COAuthToken_ImplicitGrantNoPrompt_Request> _instance;
} _COAuthToken_ImplicitGrantNoPrompt_Request_default_instance_;
class COAuthToken_ImplicitGrantNoPrompt_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<COAuthToken_ImplicitGrantNoPrompt_Response> _instance;
} _COAuthToken_ImplicitGrantNoPrompt_Response_default_instance_;
}  // namespace dota
}  // namespace proto
static void InitDefaultsCOAuthToken_ImplicitGrantNoPrompt_Request_steammessages_5foauth_2esteamworkssdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_COAuthToken_ImplicitGrantNoPrompt_Request_default_instance_;
    new (ptr) ::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_COAuthToken_ImplicitGrantNoPrompt_Request_steammessages_5foauth_2esteamworkssdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCOAuthToken_ImplicitGrantNoPrompt_Request_steammessages_5foauth_2esteamworkssdk_2eproto}, {}};

static void InitDefaultsCOAuthToken_ImplicitGrantNoPrompt_Response_steammessages_5foauth_2esteamworkssdk_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_COAuthToken_ImplicitGrantNoPrompt_Response_default_instance_;
    new (ptr) ::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_COAuthToken_ImplicitGrantNoPrompt_Response_steammessages_5foauth_2esteamworkssdk_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCOAuthToken_ImplicitGrantNoPrompt_Response_steammessages_5foauth_2esteamworkssdk_2eproto}, {}};

void InitDefaults_steammessages_5foauth_2esteamworkssdk_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_COAuthToken_ImplicitGrantNoPrompt_Request_steammessages_5foauth_2esteamworkssdk_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_COAuthToken_ImplicitGrantNoPrompt_Response_steammessages_5foauth_2esteamworkssdk_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_steammessages_5foauth_2esteamworkssdk_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_steammessages_5foauth_2esteamworkssdk_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_steammessages_5foauth_2esteamworkssdk_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_steammessages_5foauth_2esteamworkssdk_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Request, clientid_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Response, access_token_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Response, redirect_uri_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Request)},
  { 7, 14, sizeof(::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_COAuthToken_ImplicitGrantNoPrompt_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_COAuthToken_ImplicitGrantNoPrompt_Response_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_steammessages_5foauth_2esteamworkssdk_2eproto = {
  {}, AddDescriptors_steammessages_5foauth_2esteamworkssdk_2eproto, "steammessages_oauth.steamworkssdk.proto", schemas,
  file_default_instances, TableStruct_steammessages_5foauth_2esteamworkssdk_2eproto::offsets,
  file_level_metadata_steammessages_5foauth_2esteamworkssdk_2eproto, 2, file_level_enum_descriptors_steammessages_5foauth_2esteamworkssdk_2eproto, file_level_service_descriptors_steammessages_5foauth_2esteamworkssdk_2eproto,
};

const char descriptor_table_protodef_steammessages_5foauth_2esteamworkssdk_2eproto[] =
  "\n\'steammessages_oauth.steamworkssdk.prot"
  "o\022\nproto.dota\032.steammessages_unified_bas"
  "e.steamworkssdk.proto\"{\n)COAuthToken_Imp"
  "licitGrantNoPrompt_Request\022N\n\010clientid\030\001"
  " \001(\tB<\202\265\0308Client ID for which to count t"
  "he number of issued tokens\"\267\001\n*COAuthTok"
  "en_ImplicitGrantNoPrompt_Response\0229\n\014acc"
  "ess_token\030\001 \001(\tB#\202\265\030\037OAuth Token, grante"
  "d on success\022N\n\014redirect_uri\030\002 \001(\tB8\202\265\0304"
  "Redirection URI provided during client r"
  "egistration.2\307\002\n\nOAuthToken\022\201\002\n\025Implicit"
  "GrantNoPrompt\0225.proto.dota.COAuthToken_I"
  "mplicitGrantNoPrompt_Request\0326.proto.dot"
  "a.COAuthToken_ImplicitGrantNoPrompt_Resp"
  "onse\"y\202\265\030uGrants an implicit OAuth token"
  " (grant type \'token\') for the specified "
  "client ID on behalf of a user without pr"
  "ompting\0325\202\265\0301Service containing methods "
  "to manage OAuth tokens"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto = {
  false, InitDefaults_steammessages_5foauth_2esteamworkssdk_2eproto, 
  descriptor_table_protodef_steammessages_5foauth_2esteamworkssdk_2eproto,
  "steammessages_oauth.steamworkssdk.proto", &assign_descriptors_table_steammessages_5foauth_2esteamworkssdk_2eproto, 742,
};

void AddDescriptors_steammessages_5foauth_2esteamworkssdk_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_steammessages_5funified_5fbase_2esteamworkssdk_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_steammessages_5foauth_2esteamworkssdk_2eproto = []() { AddDescriptors_steammessages_5foauth_2esteamworkssdk_2eproto(); return true; }();
namespace proto {
namespace dota {

// ===================================================================

void COAuthToken_ImplicitGrantNoPrompt_Request::InitAsDefaultInstance() {
}
class COAuthToken_ImplicitGrantNoPrompt_Request::HasBitSetters {
 public:
  static void set_has_clientid(COAuthToken_ImplicitGrantNoPrompt_Request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int COAuthToken_ImplicitGrantNoPrompt_Request::kClientidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

COAuthToken_ImplicitGrantNoPrompt_Request::COAuthToken_ImplicitGrantNoPrompt_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
}
COAuthToken_ImplicitGrantNoPrompt_Request::COAuthToken_ImplicitGrantNoPrompt_Request(const COAuthToken_ImplicitGrantNoPrompt_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clientid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_clientid()) {
    clientid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientid_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
}

void COAuthToken_ImplicitGrantNoPrompt_Request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_COAuthToken_ImplicitGrantNoPrompt_Request_steammessages_5foauth_2esteamworkssdk_2eproto.base);
  clientid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

COAuthToken_ImplicitGrantNoPrompt_Request::~COAuthToken_ImplicitGrantNoPrompt_Request() {
  // @@protoc_insertion_point(destructor:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
  SharedDtor();
}

void COAuthToken_ImplicitGrantNoPrompt_Request::SharedDtor() {
  clientid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void COAuthToken_ImplicitGrantNoPrompt_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const COAuthToken_ImplicitGrantNoPrompt_Request& COAuthToken_ImplicitGrantNoPrompt_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_COAuthToken_ImplicitGrantNoPrompt_Request_steammessages_5foauth_2esteamworkssdk_2eproto.base);
  return *internal_default_instance();
}


void COAuthToken_ImplicitGrantNoPrompt_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    clientid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* COAuthToken_ImplicitGrantNoPrompt_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<COAuthToken_ImplicitGrantNoPrompt_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string clientid = 1 [(.proto.dota.description) = "Client ID for which to count the number of issued tokens"];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request.clientid");
        object = msg->mutable_clientid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool COAuthToken_ImplicitGrantNoPrompt_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string clientid = 1 [(.proto.dota.description) = "Client ID for which to count the number of issued tokens"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clientid().data(), static_cast<int>(this->clientid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request.clientid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void COAuthToken_ImplicitGrantNoPrompt_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string clientid = 1 [(.proto.dota.description) = "Client ID for which to count the number of issued tokens"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientid().data(), static_cast<int>(this->clientid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request.clientid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->clientid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
}

::google::protobuf::uint8* COAuthToken_ImplicitGrantNoPrompt_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string clientid = 1 [(.proto.dota.description) = "Client ID for which to count the number of issued tokens"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientid().data(), static_cast<int>(this->clientid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request.clientid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->clientid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
  return target;
}

size_t COAuthToken_ImplicitGrantNoPrompt_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string clientid = 1 [(.proto.dota.description) = "Client ID for which to count the number of issued tokens"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void COAuthToken_ImplicitGrantNoPrompt_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const COAuthToken_ImplicitGrantNoPrompt_Request* source =
      ::google::protobuf::DynamicCastToGenerated<COAuthToken_ImplicitGrantNoPrompt_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
    MergeFrom(*source);
  }
}

void COAuthToken_ImplicitGrantNoPrompt_Request::MergeFrom(const COAuthToken_ImplicitGrantNoPrompt_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_clientid()) {
    _has_bits_[0] |= 0x00000001u;
    clientid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientid_);
  }
}

void COAuthToken_ImplicitGrantNoPrompt_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COAuthToken_ImplicitGrantNoPrompt_Request::CopyFrom(const COAuthToken_ImplicitGrantNoPrompt_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COAuthToken_ImplicitGrantNoPrompt_Request::IsInitialized() const {
  return true;
}

void COAuthToken_ImplicitGrantNoPrompt_Request::Swap(COAuthToken_ImplicitGrantNoPrompt_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void COAuthToken_ImplicitGrantNoPrompt_Request::InternalSwap(COAuthToken_ImplicitGrantNoPrompt_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  clientid_.Swap(&other->clientid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata COAuthToken_ImplicitGrantNoPrompt_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5foauth_2esteamworkssdk_2eproto);
  return ::file_level_metadata_steammessages_5foauth_2esteamworkssdk_2eproto[kIndexInFileMessages];
}


// ===================================================================

void COAuthToken_ImplicitGrantNoPrompt_Response::InitAsDefaultInstance() {
}
class COAuthToken_ImplicitGrantNoPrompt_Response::HasBitSetters {
 public:
  static void set_has_access_token(COAuthToken_ImplicitGrantNoPrompt_Response* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_redirect_uri(COAuthToken_ImplicitGrantNoPrompt_Response* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int COAuthToken_ImplicitGrantNoPrompt_Response::kAccessTokenFieldNumber;
const int COAuthToken_ImplicitGrantNoPrompt_Response::kRedirectUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

COAuthToken_ImplicitGrantNoPrompt_Response::COAuthToken_ImplicitGrantNoPrompt_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
}
COAuthToken_ImplicitGrantNoPrompt_Response::COAuthToken_ImplicitGrantNoPrompt_Response(const COAuthToken_ImplicitGrantNoPrompt_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_access_token()) {
    access_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token_);
  }
  redirect_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redirect_uri()) {
    redirect_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_uri_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
}

void COAuthToken_ImplicitGrantNoPrompt_Response::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_COAuthToken_ImplicitGrantNoPrompt_Response_steammessages_5foauth_2esteamworkssdk_2eproto.base);
  access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

COAuthToken_ImplicitGrantNoPrompt_Response::~COAuthToken_ImplicitGrantNoPrompt_Response() {
  // @@protoc_insertion_point(destructor:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
  SharedDtor();
}

void COAuthToken_ImplicitGrantNoPrompt_Response::SharedDtor() {
  access_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void COAuthToken_ImplicitGrantNoPrompt_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const COAuthToken_ImplicitGrantNoPrompt_Response& COAuthToken_ImplicitGrantNoPrompt_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_COAuthToken_ImplicitGrantNoPrompt_Response_steammessages_5foauth_2esteamworkssdk_2eproto.base);
  return *internal_default_instance();
}


void COAuthToken_ImplicitGrantNoPrompt_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      access_token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      redirect_uri_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* COAuthToken_ImplicitGrantNoPrompt_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<COAuthToken_ImplicitGrantNoPrompt_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string access_token = 1 [(.proto.dota.description) = "OAuth Token, granted on success"];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response.access_token");
        object = msg->mutable_access_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string redirect_uri = 2 [(.proto.dota.description) = "Redirection URI provided during client registration."];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri");
        object = msg->mutable_redirect_uri();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool COAuthToken_ImplicitGrantNoPrompt_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string access_token = 1 [(.proto.dota.description) = "OAuth Token, granted on success"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->access_token().data(), static_cast<int>(this->access_token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response.access_token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redirect_uri = 2 [(.proto.dota.description) = "Redirection URI provided during client registration."];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect_uri()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirect_uri().data(), static_cast<int>(this->redirect_uri().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void COAuthToken_ImplicitGrantNoPrompt_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string access_token = 1 [(.proto.dota.description) = "OAuth Token, granted on success"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->access_token().data(), static_cast<int>(this->access_token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response.access_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->access_token(), output);
  }

  // optional string redirect_uri = 2 [(.proto.dota.description) = "Redirection URI provided during client registration."];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect_uri().data(), static_cast<int>(this->redirect_uri().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redirect_uri(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
}

::google::protobuf::uint8* COAuthToken_ImplicitGrantNoPrompt_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string access_token = 1 [(.proto.dota.description) = "OAuth Token, granted on success"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->access_token().data(), static_cast<int>(this->access_token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response.access_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->access_token(), target);
  }

  // optional string redirect_uri = 2 [(.proto.dota.description) = "Redirection URI provided during client registration."];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirect_uri().data(), static_cast<int>(this->redirect_uri().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redirect_uri(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
  return target;
}

size_t COAuthToken_ImplicitGrantNoPrompt_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string access_token = 1 [(.proto.dota.description) = "OAuth Token, granted on success"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->access_token());
    }

    // optional string redirect_uri = 2 [(.proto.dota.description) = "Redirection URI provided during client registration."];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirect_uri());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void COAuthToken_ImplicitGrantNoPrompt_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const COAuthToken_ImplicitGrantNoPrompt_Response* source =
      ::google::protobuf::DynamicCastToGenerated<COAuthToken_ImplicitGrantNoPrompt_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
    MergeFrom(*source);
  }
}

void COAuthToken_ImplicitGrantNoPrompt_Response::MergeFrom(const COAuthToken_ImplicitGrantNoPrompt_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      access_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      redirect_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_uri_);
    }
  }
}

void COAuthToken_ImplicitGrantNoPrompt_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COAuthToken_ImplicitGrantNoPrompt_Response::CopyFrom(const COAuthToken_ImplicitGrantNoPrompt_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.COAuthToken_ImplicitGrantNoPrompt_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COAuthToken_ImplicitGrantNoPrompt_Response::IsInitialized() const {
  return true;
}

void COAuthToken_ImplicitGrantNoPrompt_Response::Swap(COAuthToken_ImplicitGrantNoPrompt_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void COAuthToken_ImplicitGrantNoPrompt_Response::InternalSwap(COAuthToken_ImplicitGrantNoPrompt_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  access_token_.Swap(&other->access_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_uri_.Swap(&other->redirect_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata COAuthToken_ImplicitGrantNoPrompt_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5foauth_2esteamworkssdk_2eproto);
  return ::file_level_metadata_steammessages_5foauth_2esteamworkssdk_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Request* Arena::CreateMaybeMessage< ::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Response* Arena::CreateMaybeMessage< ::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::COAuthToken_ImplicitGrantNoPrompt_Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
