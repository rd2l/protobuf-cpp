// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages.proto

#ifndef PROTOBUF_INCLUDED_steammessages_2eproto
#define PROTOBUF_INCLUDED_steammessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[88]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_2eproto();
namespace proto {
namespace dota {
class CGCMsgGetIPASN;
class CGCMsgGetIPASNDefaultTypeInternal;
extern CGCMsgGetIPASNDefaultTypeInternal _CGCMsgGetIPASN_default_instance_;
class CGCMsgGetIPASNResponse;
class CGCMsgGetIPASNResponseDefaultTypeInternal;
extern CGCMsgGetIPASNResponseDefaultTypeInternal _CGCMsgGetIPASNResponse_default_instance_;
class CGCMsgGetIPLocation;
class CGCMsgGetIPLocationDefaultTypeInternal;
extern CGCMsgGetIPLocationDefaultTypeInternal _CGCMsgGetIPLocation_default_instance_;
class CGCMsgGetIPLocationResponse;
class CGCMsgGetIPLocationResponseDefaultTypeInternal;
extern CGCMsgGetIPLocationResponseDefaultTypeInternal _CGCMsgGetIPLocationResponse_default_instance_;
class CGCMsgGetSystemStats;
class CGCMsgGetSystemStatsDefaultTypeInternal;
extern CGCMsgGetSystemStatsDefaultTypeInternal _CGCMsgGetSystemStats_default_instance_;
class CGCMsgGetSystemStatsResponse;
class CGCMsgGetSystemStatsResponseDefaultTypeInternal;
extern CGCMsgGetSystemStatsResponseDefaultTypeInternal _CGCMsgGetSystemStatsResponse_default_instance_;
class CGCMsgMemCachedDelete;
class CGCMsgMemCachedDeleteDefaultTypeInternal;
extern CGCMsgMemCachedDeleteDefaultTypeInternal _CGCMsgMemCachedDelete_default_instance_;
class CGCMsgMemCachedGet;
class CGCMsgMemCachedGetDefaultTypeInternal;
extern CGCMsgMemCachedGetDefaultTypeInternal _CGCMsgMemCachedGet_default_instance_;
class CGCMsgMemCachedGetResponse;
class CGCMsgMemCachedGetResponseDefaultTypeInternal;
extern CGCMsgMemCachedGetResponseDefaultTypeInternal _CGCMsgMemCachedGetResponse_default_instance_;
class CGCMsgMemCachedGetResponse_ValueTag;
class CGCMsgMemCachedGetResponse_ValueTagDefaultTypeInternal;
extern CGCMsgMemCachedGetResponse_ValueTagDefaultTypeInternal _CGCMsgMemCachedGetResponse_ValueTag_default_instance_;
class CGCMsgMemCachedSet;
class CGCMsgMemCachedSetDefaultTypeInternal;
extern CGCMsgMemCachedSetDefaultTypeInternal _CGCMsgMemCachedSet_default_instance_;
class CGCMsgMemCachedSet_KeyPair;
class CGCMsgMemCachedSet_KeyPairDefaultTypeInternal;
extern CGCMsgMemCachedSet_KeyPairDefaultTypeInternal _CGCMsgMemCachedSet_KeyPair_default_instance_;
class CGCMsgMemCachedStats;
class CGCMsgMemCachedStatsDefaultTypeInternal;
extern CGCMsgMemCachedStatsDefaultTypeInternal _CGCMsgMemCachedStats_default_instance_;
class CGCMsgMemCachedStatsResponse;
class CGCMsgMemCachedStatsResponseDefaultTypeInternal;
extern CGCMsgMemCachedStatsResponseDefaultTypeInternal _CGCMsgMemCachedStatsResponse_default_instance_;
class CGCMsgSQLStats;
class CGCMsgSQLStatsDefaultTypeInternal;
extern CGCMsgSQLStatsDefaultTypeInternal _CGCMsgSQLStats_default_instance_;
class CGCMsgSQLStatsResponse;
class CGCMsgSQLStatsResponseDefaultTypeInternal;
extern CGCMsgSQLStatsResponseDefaultTypeInternal _CGCMsgSQLStatsResponse_default_instance_;
class CGCMsgSystemStatsSchema;
class CGCMsgSystemStatsSchemaDefaultTypeInternal;
extern CGCMsgSystemStatsSchemaDefaultTypeInternal _CGCMsgSystemStatsSchema_default_instance_;
class CGCSystemMsg_GetAccountDetails;
class CGCSystemMsg_GetAccountDetailsDefaultTypeInternal;
extern CGCSystemMsg_GetAccountDetailsDefaultTypeInternal _CGCSystemMsg_GetAccountDetails_default_instance_;
class CGCSystemMsg_GetAccountDetails_Response;
class CGCSystemMsg_GetAccountDetails_ResponseDefaultTypeInternal;
extern CGCSystemMsg_GetAccountDetails_ResponseDefaultTypeInternal _CGCSystemMsg_GetAccountDetails_Response_default_instance_;
class CGCSystemMsg_GetPurchaseTrust_Request;
class CGCSystemMsg_GetPurchaseTrust_RequestDefaultTypeInternal;
extern CGCSystemMsg_GetPurchaseTrust_RequestDefaultTypeInternal _CGCSystemMsg_GetPurchaseTrust_Request_default_instance_;
class CGCSystemMsg_GetPurchaseTrust_Response;
class CGCSystemMsg_GetPurchaseTrust_ResponseDefaultTypeInternal;
extern CGCSystemMsg_GetPurchaseTrust_ResponseDefaultTypeInternal _CGCSystemMsg_GetPurchaseTrust_Response_default_instance_;
class CIPASNInfo;
class CIPASNInfoDefaultTypeInternal;
extern CIPASNInfoDefaultTypeInternal _CIPASNInfo_default_instance_;
class CIPLocationInfo;
class CIPLocationInfoDefaultTypeInternal;
extern CIPLocationInfoDefaultTypeInternal _CIPLocationInfo_default_instance_;
class CMsgAMAddFreeLicense;
class CMsgAMAddFreeLicenseDefaultTypeInternal;
extern CMsgAMAddFreeLicenseDefaultTypeInternal _CMsgAMAddFreeLicense_default_instance_;
class CMsgAMAddFreeLicenseResponse;
class CMsgAMAddFreeLicenseResponseDefaultTypeInternal;
extern CMsgAMAddFreeLicenseResponseDefaultTypeInternal _CMsgAMAddFreeLicenseResponse_default_instance_;
class CMsgAMFindAccounts;
class CMsgAMFindAccountsDefaultTypeInternal;
extern CMsgAMFindAccountsDefaultTypeInternal _CMsgAMFindAccounts_default_instance_;
class CMsgAMFindAccountsResponse;
class CMsgAMFindAccountsResponseDefaultTypeInternal;
extern CMsgAMFindAccountsResponseDefaultTypeInternal _CMsgAMFindAccountsResponse_default_instance_;
class CMsgAMGetLicenses;
class CMsgAMGetLicensesDefaultTypeInternal;
extern CMsgAMGetLicensesDefaultTypeInternal _CMsgAMGetLicenses_default_instance_;
class CMsgAMGetLicensesResponse;
class CMsgAMGetLicensesResponseDefaultTypeInternal;
extern CMsgAMGetLicensesResponseDefaultTypeInternal _CMsgAMGetLicensesResponse_default_instance_;
class CMsgAMGetUserGameStats;
class CMsgAMGetUserGameStatsDefaultTypeInternal;
extern CMsgAMGetUserGameStatsDefaultTypeInternal _CMsgAMGetUserGameStats_default_instance_;
class CMsgAMGetUserGameStatsResponse;
class CMsgAMGetUserGameStatsResponseDefaultTypeInternal;
extern CMsgAMGetUserGameStatsResponseDefaultTypeInternal _CMsgAMGetUserGameStatsResponse_default_instance_;
class CMsgAMGetUserGameStatsResponse_Achievement_Blocks;
class CMsgAMGetUserGameStatsResponse_Achievement_BlocksDefaultTypeInternal;
extern CMsgAMGetUserGameStatsResponse_Achievement_BlocksDefaultTypeInternal _CMsgAMGetUserGameStatsResponse_Achievement_Blocks_default_instance_;
class CMsgAMGetUserGameStatsResponse_Stats;
class CMsgAMGetUserGameStatsResponse_StatsDefaultTypeInternal;
extern CMsgAMGetUserGameStatsResponse_StatsDefaultTypeInternal _CMsgAMGetUserGameStatsResponse_Stats_default_instance_;
class CMsgAMGrantGuestPasses2;
class CMsgAMGrantGuestPasses2DefaultTypeInternal;
extern CMsgAMGrantGuestPasses2DefaultTypeInternal _CMsgAMGrantGuestPasses2_default_instance_;
class CMsgAMGrantGuestPasses2Response;
class CMsgAMGrantGuestPasses2ResponseDefaultTypeInternal;
extern CMsgAMGrantGuestPasses2ResponseDefaultTypeInternal _CMsgAMGrantGuestPasses2Response_default_instance_;
class CMsgAMSendEmail;
class CMsgAMSendEmailDefaultTypeInternal;
extern CMsgAMSendEmailDefaultTypeInternal _CMsgAMSendEmail_default_instance_;
class CMsgAMSendEmailResponse;
class CMsgAMSendEmailResponseDefaultTypeInternal;
extern CMsgAMSendEmailResponseDefaultTypeInternal _CMsgAMSendEmailResponse_default_instance_;
class CMsgAMSendEmail_PersonaNameReplacementToken;
class CMsgAMSendEmail_PersonaNameReplacementTokenDefaultTypeInternal;
extern CMsgAMSendEmail_PersonaNameReplacementTokenDefaultTypeInternal _CMsgAMSendEmail_PersonaNameReplacementToken_default_instance_;
class CMsgAMSendEmail_ReplacementToken;
class CMsgAMSendEmail_ReplacementTokenDefaultTypeInternal;
extern CMsgAMSendEmail_ReplacementTokenDefaultTypeInternal _CMsgAMSendEmail_ReplacementToken_default_instance_;
class CMsgDPPartnerMicroTxns;
class CMsgDPPartnerMicroTxnsDefaultTypeInternal;
extern CMsgDPPartnerMicroTxnsDefaultTypeInternal _CMsgDPPartnerMicroTxns_default_instance_;
class CMsgDPPartnerMicroTxnsResponse;
class CMsgDPPartnerMicroTxnsResponseDefaultTypeInternal;
extern CMsgDPPartnerMicroTxnsResponseDefaultTypeInternal _CMsgDPPartnerMicroTxnsResponse_default_instance_;
class CMsgDPPartnerMicroTxns_PartnerInfo;
class CMsgDPPartnerMicroTxns_PartnerInfoDefaultTypeInternal;
extern CMsgDPPartnerMicroTxns_PartnerInfoDefaultTypeInternal _CMsgDPPartnerMicroTxns_PartnerInfo_default_instance_;
class CMsgDPPartnerMicroTxns_PartnerMicroTxn;
class CMsgDPPartnerMicroTxns_PartnerMicroTxnDefaultTypeInternal;
extern CMsgDPPartnerMicroTxns_PartnerMicroTxnDefaultTypeInternal _CMsgDPPartnerMicroTxns_PartnerMicroTxn_default_instance_;
class CMsgGCCheckClanMembership;
class CMsgGCCheckClanMembershipDefaultTypeInternal;
extern CMsgGCCheckClanMembershipDefaultTypeInternal _CMsgGCCheckClanMembership_default_instance_;
class CMsgGCCheckClanMembership_Response;
class CMsgGCCheckClanMembership_ResponseDefaultTypeInternal;
extern CMsgGCCheckClanMembership_ResponseDefaultTypeInternal _CMsgGCCheckClanMembership_Response_default_instance_;
class CMsgGCCheckFriendship;
class CMsgGCCheckFriendshipDefaultTypeInternal;
extern CMsgGCCheckFriendshipDefaultTypeInternal _CMsgGCCheckFriendship_default_instance_;
class CMsgGCCheckFriendship_Response;
class CMsgGCCheckFriendship_ResponseDefaultTypeInternal;
extern CMsgGCCheckFriendship_ResponseDefaultTypeInternal _CMsgGCCheckFriendship_Response_default_instance_;
class CMsgGCGetAppFriendsList;
class CMsgGCGetAppFriendsListDefaultTypeInternal;
extern CMsgGCGetAppFriendsListDefaultTypeInternal _CMsgGCGetAppFriendsList_default_instance_;
class CMsgGCGetAppFriendsList_Response;
class CMsgGCGetAppFriendsList_ResponseDefaultTypeInternal;
extern CMsgGCGetAppFriendsList_ResponseDefaultTypeInternal _CMsgGCGetAppFriendsList_Response_default_instance_;
class CMsgGCGetCommandList;
class CMsgGCGetCommandListDefaultTypeInternal;
extern CMsgGCGetCommandListDefaultTypeInternal _CMsgGCGetCommandList_default_instance_;
class CMsgGCGetCommandListResponse;
class CMsgGCGetCommandListResponseDefaultTypeInternal;
extern CMsgGCGetCommandListResponseDefaultTypeInternal _CMsgGCGetCommandListResponse_default_instance_;
class CMsgGCGetEmailTemplate;
class CMsgGCGetEmailTemplateDefaultTypeInternal;
extern CMsgGCGetEmailTemplateDefaultTypeInternal _CMsgGCGetEmailTemplate_default_instance_;
class CMsgGCGetEmailTemplateResponse;
class CMsgGCGetEmailTemplateResponseDefaultTypeInternal;
extern CMsgGCGetEmailTemplateResponseDefaultTypeInternal _CMsgGCGetEmailTemplateResponse_default_instance_;
class CMsgGCGetPartnerAccountLink;
class CMsgGCGetPartnerAccountLinkDefaultTypeInternal;
extern CMsgGCGetPartnerAccountLinkDefaultTypeInternal _CMsgGCGetPartnerAccountLink_default_instance_;
class CMsgGCGetPartnerAccountLink_Response;
class CMsgGCGetPartnerAccountLink_ResponseDefaultTypeInternal;
extern CMsgGCGetPartnerAccountLink_ResponseDefaultTypeInternal _CMsgGCGetPartnerAccountLink_Response_default_instance_;
class CMsgGCGetPersonaNames;
class CMsgGCGetPersonaNamesDefaultTypeInternal;
extern CMsgGCGetPersonaNamesDefaultTypeInternal _CMsgGCGetPersonaNames_default_instance_;
class CMsgGCGetPersonaNames_Response;
class CMsgGCGetPersonaNames_ResponseDefaultTypeInternal;
extern CMsgGCGetPersonaNames_ResponseDefaultTypeInternal _CMsgGCGetPersonaNames_Response_default_instance_;
class CMsgGCGetPersonaNames_Response_PersonaName;
class CMsgGCGetPersonaNames_Response_PersonaNameDefaultTypeInternal;
extern CMsgGCGetPersonaNames_Response_PersonaNameDefaultTypeInternal _CMsgGCGetPersonaNames_Response_PersonaName_default_instance_;
class CMsgGCHAccountTwoFactorChange;
class CMsgGCHAccountTwoFactorChangeDefaultTypeInternal;
extern CMsgGCHAccountTwoFactorChangeDefaultTypeInternal _CMsgGCHAccountTwoFactorChange_default_instance_;
class CMsgGCHAccountVacStatusChange;
class CMsgGCHAccountVacStatusChangeDefaultTypeInternal;
extern CMsgGCHAccountVacStatusChangeDefaultTypeInternal _CMsgGCHAccountVacStatusChange_default_instance_;
class CMsgGCHUpdateSession;
class CMsgGCHUpdateSessionDefaultTypeInternal;
extern CMsgGCHUpdateSessionDefaultTypeInternal _CMsgGCHUpdateSession_default_instance_;
class CMsgGCHUpdateSession_ExtraField;
class CMsgGCHUpdateSession_ExtraFieldDefaultTypeInternal;
extern CMsgGCHUpdateSession_ExtraFieldDefaultTypeInternal _CMsgGCHUpdateSession_ExtraField_default_instance_;
class CMsgGCHVacVerificationChange;
class CMsgGCHVacVerificationChangeDefaultTypeInternal;
extern CMsgGCHVacVerificationChangeDefaultTypeInternal _CMsgGCHVacVerificationChange_default_instance_;
class CMsgGCMsgMasterSetClientMsgRouting;
class CMsgGCMsgMasterSetClientMsgRoutingDefaultTypeInternal;
extern CMsgGCMsgMasterSetClientMsgRoutingDefaultTypeInternal _CMsgGCMsgMasterSetClientMsgRouting_default_instance_;
class CMsgGCMsgMasterSetClientMsgRouting_Entry;
class CMsgGCMsgMasterSetClientMsgRouting_EntryDefaultTypeInternal;
extern CMsgGCMsgMasterSetClientMsgRouting_EntryDefaultTypeInternal _CMsgGCMsgMasterSetClientMsgRouting_Entry_default_instance_;
class CMsgGCMsgMasterSetClientMsgRouting_Response;
class CMsgGCMsgMasterSetClientMsgRouting_ResponseDefaultTypeInternal;
extern CMsgGCMsgMasterSetClientMsgRouting_ResponseDefaultTypeInternal _CMsgGCMsgMasterSetClientMsgRouting_Response_default_instance_;
class CMsgGCMsgMasterSetDirectory;
class CMsgGCMsgMasterSetDirectoryDefaultTypeInternal;
extern CMsgGCMsgMasterSetDirectoryDefaultTypeInternal _CMsgGCMsgMasterSetDirectory_default_instance_;
class CMsgGCMsgMasterSetDirectory_Response;
class CMsgGCMsgMasterSetDirectory_ResponseDefaultTypeInternal;
extern CMsgGCMsgMasterSetDirectory_ResponseDefaultTypeInternal _CMsgGCMsgMasterSetDirectory_Response_default_instance_;
class CMsgGCMsgMasterSetDirectory_SubGC;
class CMsgGCMsgMasterSetDirectory_SubGCDefaultTypeInternal;
extern CMsgGCMsgMasterSetDirectory_SubGCDefaultTypeInternal _CMsgGCMsgMasterSetDirectory_SubGC_default_instance_;
class CMsgGCMsgMasterSetWebAPIRouting;
class CMsgGCMsgMasterSetWebAPIRoutingDefaultTypeInternal;
extern CMsgGCMsgMasterSetWebAPIRoutingDefaultTypeInternal _CMsgGCMsgMasterSetWebAPIRouting_default_instance_;
class CMsgGCMsgMasterSetWebAPIRouting_Entry;
class CMsgGCMsgMasterSetWebAPIRouting_EntryDefaultTypeInternal;
extern CMsgGCMsgMasterSetWebAPIRouting_EntryDefaultTypeInternal _CMsgGCMsgMasterSetWebAPIRouting_Entry_default_instance_;
class CMsgGCMsgMasterSetWebAPIRouting_Response;
class CMsgGCMsgMasterSetWebAPIRouting_ResponseDefaultTypeInternal;
extern CMsgGCMsgMasterSetWebAPIRouting_ResponseDefaultTypeInternal _CMsgGCMsgMasterSetWebAPIRouting_Response_default_instance_;
class CMsgGCMsgSetOptions;
class CMsgGCMsgSetOptionsDefaultTypeInternal;
extern CMsgGCMsgSetOptionsDefaultTypeInternal _CMsgGCMsgSetOptions_default_instance_;
class CMsgGCMsgSetOptions_MessageRange;
class CMsgGCMsgSetOptions_MessageRangeDefaultTypeInternal;
extern CMsgGCMsgSetOptions_MessageRangeDefaultTypeInternal _CMsgGCMsgSetOptions_MessageRange_default_instance_;
class CMsgGCMsgWebAPIJobRequestForwardResponse;
class CMsgGCMsgWebAPIJobRequestForwardResponseDefaultTypeInternal;
extern CMsgGCMsgWebAPIJobRequestForwardResponseDefaultTypeInternal _CMsgGCMsgWebAPIJobRequestForwardResponse_default_instance_;
class CMsgGCRoutingInfo;
class CMsgGCRoutingInfoDefaultTypeInternal;
extern CMsgGCRoutingInfoDefaultTypeInternal _CMsgGCRoutingInfo_default_instance_;
class CMsgHttpRequest;
class CMsgHttpRequestDefaultTypeInternal;
extern CMsgHttpRequestDefaultTypeInternal _CMsgHttpRequest_default_instance_;
class CMsgHttpRequest_QueryParam;
class CMsgHttpRequest_QueryParamDefaultTypeInternal;
extern CMsgHttpRequest_QueryParamDefaultTypeInternal _CMsgHttpRequest_QueryParam_default_instance_;
class CMsgHttpRequest_RequestHeader;
class CMsgHttpRequest_RequestHeaderDefaultTypeInternal;
extern CMsgHttpRequest_RequestHeaderDefaultTypeInternal _CMsgHttpRequest_RequestHeader_default_instance_;
class CMsgHttpResponse;
class CMsgHttpResponseDefaultTypeInternal;
extern CMsgHttpResponseDefaultTypeInternal _CMsgHttpResponse_default_instance_;
class CMsgHttpResponse_ResponseHeader;
class CMsgHttpResponse_ResponseHeaderDefaultTypeInternal;
extern CMsgHttpResponse_ResponseHeaderDefaultTypeInternal _CMsgHttpResponse_ResponseHeader_default_instance_;
class CMsgNotificationOfSuspiciousActivity;
class CMsgNotificationOfSuspiciousActivityDefaultTypeInternal;
extern CMsgNotificationOfSuspiciousActivityDefaultTypeInternal _CMsgNotificationOfSuspiciousActivity_default_instance_;
class CMsgNotificationOfSuspiciousActivity_MultipleGameInstances;
class CMsgNotificationOfSuspiciousActivity_MultipleGameInstancesDefaultTypeInternal;
extern CMsgNotificationOfSuspiciousActivity_MultipleGameInstancesDefaultTypeInternal _CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_default_instance_;
class CMsgNotifyWatchdog;
class CMsgNotifyWatchdogDefaultTypeInternal;
extern CMsgNotifyWatchdogDefaultTypeInternal _CMsgNotifyWatchdog_default_instance_;
class CMsgPackageLicense;
class CMsgPackageLicenseDefaultTypeInternal;
extern CMsgPackageLicenseDefaultTypeInternal _CMsgPackageLicense_default_instance_;
class CMsgProtoBufHeader;
class CMsgProtoBufHeaderDefaultTypeInternal;
extern CMsgProtoBufHeaderDefaultTypeInternal _CMsgProtoBufHeader_default_instance_;
class CMsgWebAPIKey;
class CMsgWebAPIKeyDefaultTypeInternal;
extern CMsgWebAPIKeyDefaultTypeInternal _CMsgWebAPIKey_default_instance_;
class CMsgWebAPIRequest;
class CMsgWebAPIRequestDefaultTypeInternal;
extern CMsgWebAPIRequestDefaultTypeInternal _CMsgWebAPIRequest_default_instance_;
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::dota::CGCMsgGetIPASN* Arena::CreateMaybeMessage<::proto::dota::CGCMsgGetIPASN>(Arena*);
template<> ::proto::dota::CGCMsgGetIPASNResponse* Arena::CreateMaybeMessage<::proto::dota::CGCMsgGetIPASNResponse>(Arena*);
template<> ::proto::dota::CGCMsgGetIPLocation* Arena::CreateMaybeMessage<::proto::dota::CGCMsgGetIPLocation>(Arena*);
template<> ::proto::dota::CGCMsgGetIPLocationResponse* Arena::CreateMaybeMessage<::proto::dota::CGCMsgGetIPLocationResponse>(Arena*);
template<> ::proto::dota::CGCMsgGetSystemStats* Arena::CreateMaybeMessage<::proto::dota::CGCMsgGetSystemStats>(Arena*);
template<> ::proto::dota::CGCMsgGetSystemStatsResponse* Arena::CreateMaybeMessage<::proto::dota::CGCMsgGetSystemStatsResponse>(Arena*);
template<> ::proto::dota::CGCMsgMemCachedDelete* Arena::CreateMaybeMessage<::proto::dota::CGCMsgMemCachedDelete>(Arena*);
template<> ::proto::dota::CGCMsgMemCachedGet* Arena::CreateMaybeMessage<::proto::dota::CGCMsgMemCachedGet>(Arena*);
template<> ::proto::dota::CGCMsgMemCachedGetResponse* Arena::CreateMaybeMessage<::proto::dota::CGCMsgMemCachedGetResponse>(Arena*);
template<> ::proto::dota::CGCMsgMemCachedGetResponse_ValueTag* Arena::CreateMaybeMessage<::proto::dota::CGCMsgMemCachedGetResponse_ValueTag>(Arena*);
template<> ::proto::dota::CGCMsgMemCachedSet* Arena::CreateMaybeMessage<::proto::dota::CGCMsgMemCachedSet>(Arena*);
template<> ::proto::dota::CGCMsgMemCachedSet_KeyPair* Arena::CreateMaybeMessage<::proto::dota::CGCMsgMemCachedSet_KeyPair>(Arena*);
template<> ::proto::dota::CGCMsgMemCachedStats* Arena::CreateMaybeMessage<::proto::dota::CGCMsgMemCachedStats>(Arena*);
template<> ::proto::dota::CGCMsgMemCachedStatsResponse* Arena::CreateMaybeMessage<::proto::dota::CGCMsgMemCachedStatsResponse>(Arena*);
template<> ::proto::dota::CGCMsgSQLStats* Arena::CreateMaybeMessage<::proto::dota::CGCMsgSQLStats>(Arena*);
template<> ::proto::dota::CGCMsgSQLStatsResponse* Arena::CreateMaybeMessage<::proto::dota::CGCMsgSQLStatsResponse>(Arena*);
template<> ::proto::dota::CGCMsgSystemStatsSchema* Arena::CreateMaybeMessage<::proto::dota::CGCMsgSystemStatsSchema>(Arena*);
template<> ::proto::dota::CGCSystemMsg_GetAccountDetails* Arena::CreateMaybeMessage<::proto::dota::CGCSystemMsg_GetAccountDetails>(Arena*);
template<> ::proto::dota::CGCSystemMsg_GetAccountDetails_Response* Arena::CreateMaybeMessage<::proto::dota::CGCSystemMsg_GetAccountDetails_Response>(Arena*);
template<> ::proto::dota::CGCSystemMsg_GetPurchaseTrust_Request* Arena::CreateMaybeMessage<::proto::dota::CGCSystemMsg_GetPurchaseTrust_Request>(Arena*);
template<> ::proto::dota::CGCSystemMsg_GetPurchaseTrust_Response* Arena::CreateMaybeMessage<::proto::dota::CGCSystemMsg_GetPurchaseTrust_Response>(Arena*);
template<> ::proto::dota::CIPASNInfo* Arena::CreateMaybeMessage<::proto::dota::CIPASNInfo>(Arena*);
template<> ::proto::dota::CIPLocationInfo* Arena::CreateMaybeMessage<::proto::dota::CIPLocationInfo>(Arena*);
template<> ::proto::dota::CMsgAMAddFreeLicense* Arena::CreateMaybeMessage<::proto::dota::CMsgAMAddFreeLicense>(Arena*);
template<> ::proto::dota::CMsgAMAddFreeLicenseResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgAMAddFreeLicenseResponse>(Arena*);
template<> ::proto::dota::CMsgAMFindAccounts* Arena::CreateMaybeMessage<::proto::dota::CMsgAMFindAccounts>(Arena*);
template<> ::proto::dota::CMsgAMFindAccountsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgAMFindAccountsResponse>(Arena*);
template<> ::proto::dota::CMsgAMGetLicenses* Arena::CreateMaybeMessage<::proto::dota::CMsgAMGetLicenses>(Arena*);
template<> ::proto::dota::CMsgAMGetLicensesResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgAMGetLicensesResponse>(Arena*);
template<> ::proto::dota::CMsgAMGetUserGameStats* Arena::CreateMaybeMessage<::proto::dota::CMsgAMGetUserGameStats>(Arena*);
template<> ::proto::dota::CMsgAMGetUserGameStatsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgAMGetUserGameStatsResponse>(Arena*);
template<> ::proto::dota::CMsgAMGetUserGameStatsResponse_Achievement_Blocks* Arena::CreateMaybeMessage<::proto::dota::CMsgAMGetUserGameStatsResponse_Achievement_Blocks>(Arena*);
template<> ::proto::dota::CMsgAMGetUserGameStatsResponse_Stats* Arena::CreateMaybeMessage<::proto::dota::CMsgAMGetUserGameStatsResponse_Stats>(Arena*);
template<> ::proto::dota::CMsgAMGrantGuestPasses2* Arena::CreateMaybeMessage<::proto::dota::CMsgAMGrantGuestPasses2>(Arena*);
template<> ::proto::dota::CMsgAMGrantGuestPasses2Response* Arena::CreateMaybeMessage<::proto::dota::CMsgAMGrantGuestPasses2Response>(Arena*);
template<> ::proto::dota::CMsgAMSendEmail* Arena::CreateMaybeMessage<::proto::dota::CMsgAMSendEmail>(Arena*);
template<> ::proto::dota::CMsgAMSendEmailResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgAMSendEmailResponse>(Arena*);
template<> ::proto::dota::CMsgAMSendEmail_PersonaNameReplacementToken* Arena::CreateMaybeMessage<::proto::dota::CMsgAMSendEmail_PersonaNameReplacementToken>(Arena*);
template<> ::proto::dota::CMsgAMSendEmail_ReplacementToken* Arena::CreateMaybeMessage<::proto::dota::CMsgAMSendEmail_ReplacementToken>(Arena*);
template<> ::proto::dota::CMsgDPPartnerMicroTxns* Arena::CreateMaybeMessage<::proto::dota::CMsgDPPartnerMicroTxns>(Arena*);
template<> ::proto::dota::CMsgDPPartnerMicroTxnsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDPPartnerMicroTxnsResponse>(Arena*);
template<> ::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo* Arena::CreateMaybeMessage<::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo>(Arena*);
template<> ::proto::dota::CMsgDPPartnerMicroTxns_PartnerMicroTxn* Arena::CreateMaybeMessage<::proto::dota::CMsgDPPartnerMicroTxns_PartnerMicroTxn>(Arena*);
template<> ::proto::dota::CMsgGCCheckClanMembership* Arena::CreateMaybeMessage<::proto::dota::CMsgGCCheckClanMembership>(Arena*);
template<> ::proto::dota::CMsgGCCheckClanMembership_Response* Arena::CreateMaybeMessage<::proto::dota::CMsgGCCheckClanMembership_Response>(Arena*);
template<> ::proto::dota::CMsgGCCheckFriendship* Arena::CreateMaybeMessage<::proto::dota::CMsgGCCheckFriendship>(Arena*);
template<> ::proto::dota::CMsgGCCheckFriendship_Response* Arena::CreateMaybeMessage<::proto::dota::CMsgGCCheckFriendship_Response>(Arena*);
template<> ::proto::dota::CMsgGCGetAppFriendsList* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetAppFriendsList>(Arena*);
template<> ::proto::dota::CMsgGCGetAppFriendsList_Response* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetAppFriendsList_Response>(Arena*);
template<> ::proto::dota::CMsgGCGetCommandList* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetCommandList>(Arena*);
template<> ::proto::dota::CMsgGCGetCommandListResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetCommandListResponse>(Arena*);
template<> ::proto::dota::CMsgGCGetEmailTemplate* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetEmailTemplate>(Arena*);
template<> ::proto::dota::CMsgGCGetEmailTemplateResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetEmailTemplateResponse>(Arena*);
template<> ::proto::dota::CMsgGCGetPartnerAccountLink* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetPartnerAccountLink>(Arena*);
template<> ::proto::dota::CMsgGCGetPartnerAccountLink_Response* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetPartnerAccountLink_Response>(Arena*);
template<> ::proto::dota::CMsgGCGetPersonaNames* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetPersonaNames>(Arena*);
template<> ::proto::dota::CMsgGCGetPersonaNames_Response* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetPersonaNames_Response>(Arena*);
template<> ::proto::dota::CMsgGCGetPersonaNames_Response_PersonaName* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGetPersonaNames_Response_PersonaName>(Arena*);
template<> ::proto::dota::CMsgGCHAccountTwoFactorChange* Arena::CreateMaybeMessage<::proto::dota::CMsgGCHAccountTwoFactorChange>(Arena*);
template<> ::proto::dota::CMsgGCHAccountVacStatusChange* Arena::CreateMaybeMessage<::proto::dota::CMsgGCHAccountVacStatusChange>(Arena*);
template<> ::proto::dota::CMsgGCHUpdateSession* Arena::CreateMaybeMessage<::proto::dota::CMsgGCHUpdateSession>(Arena*);
template<> ::proto::dota::CMsgGCHUpdateSession_ExtraField* Arena::CreateMaybeMessage<::proto::dota::CMsgGCHUpdateSession_ExtraField>(Arena*);
template<> ::proto::dota::CMsgGCHVacVerificationChange* Arena::CreateMaybeMessage<::proto::dota::CMsgGCHVacVerificationChange>(Arena*);
template<> ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMsgMasterSetClientMsgRouting>(Arena*);
template<> ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Entry* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Entry>(Arena*);
template<> ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Response* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Response>(Arena*);
template<> ::proto::dota::CMsgGCMsgMasterSetDirectory* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMsgMasterSetDirectory>(Arena*);
template<> ::proto::dota::CMsgGCMsgMasterSetDirectory_Response* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMsgMasterSetDirectory_Response>(Arena*);
template<> ::proto::dota::CMsgGCMsgMasterSetDirectory_SubGC* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMsgMasterSetDirectory_SubGC>(Arena*);
template<> ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMsgMasterSetWebAPIRouting>(Arena*);
template<> ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Entry* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Entry>(Arena*);
template<> ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Response* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Response>(Arena*);
template<> ::proto::dota::CMsgGCMsgSetOptions* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMsgSetOptions>(Arena*);
template<> ::proto::dota::CMsgGCMsgSetOptions_MessageRange* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMsgSetOptions_MessageRange>(Arena*);
template<> ::proto::dota::CMsgGCMsgWebAPIJobRequestForwardResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCMsgWebAPIJobRequestForwardResponse>(Arena*);
template<> ::proto::dota::CMsgGCRoutingInfo* Arena::CreateMaybeMessage<::proto::dota::CMsgGCRoutingInfo>(Arena*);
template<> ::proto::dota::CMsgHttpRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgHttpRequest>(Arena*);
template<> ::proto::dota::CMsgHttpRequest_QueryParam* Arena::CreateMaybeMessage<::proto::dota::CMsgHttpRequest_QueryParam>(Arena*);
template<> ::proto::dota::CMsgHttpRequest_RequestHeader* Arena::CreateMaybeMessage<::proto::dota::CMsgHttpRequest_RequestHeader>(Arena*);
template<> ::proto::dota::CMsgHttpResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgHttpResponse>(Arena*);
template<> ::proto::dota::CMsgHttpResponse_ResponseHeader* Arena::CreateMaybeMessage<::proto::dota::CMsgHttpResponse_ResponseHeader>(Arena*);
template<> ::proto::dota::CMsgNotificationOfSuspiciousActivity* Arena::CreateMaybeMessage<::proto::dota::CMsgNotificationOfSuspiciousActivity>(Arena*);
template<> ::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* Arena::CreateMaybeMessage<::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances>(Arena*);
template<> ::proto::dota::CMsgNotifyWatchdog* Arena::CreateMaybeMessage<::proto::dota::CMsgNotifyWatchdog>(Arena*);
template<> ::proto::dota::CMsgPackageLicense* Arena::CreateMaybeMessage<::proto::dota::CMsgPackageLicense>(Arena*);
template<> ::proto::dota::CMsgProtoBufHeader* Arena::CreateMaybeMessage<::proto::dota::CMsgProtoBufHeader>(Arena*);
template<> ::proto::dota::CMsgWebAPIKey* Arena::CreateMaybeMessage<::proto::dota::CMsgWebAPIKey>(Arena*);
template<> ::proto::dota::CMsgWebAPIRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgWebAPIRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace dota {

enum CMsgGCRoutingInfo_RoutingMethod {
  CMsgGCRoutingInfo_RoutingMethod_RANDOM = 0,
  CMsgGCRoutingInfo_RoutingMethod_DISCARD = 1,
  CMsgGCRoutingInfo_RoutingMethod_CLIENT_STEAMID = 2,
  CMsgGCRoutingInfo_RoutingMethod_PROTOBUF_FIELD_UINT64 = 3,
  CMsgGCRoutingInfo_RoutingMethod_WEBAPI_PARAM = 4,
  CMsgGCRoutingInfo_RoutingMethod_WEBAPI_PARAM_STEAMID_ACCOUNTID = 5
};
bool CMsgGCRoutingInfo_RoutingMethod_IsValid(int value);
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_MIN = CMsgGCRoutingInfo_RoutingMethod_RANDOM;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_MAX = CMsgGCRoutingInfo_RoutingMethod_WEBAPI_PARAM_STEAMID_ACCOUNTID;
const int CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_ARRAYSIZE = CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCRoutingInfo_RoutingMethod_descriptor();
inline const ::std::string& CMsgGCRoutingInfo_RoutingMethod_Name(CMsgGCRoutingInfo_RoutingMethod value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCRoutingInfo_RoutingMethod_descriptor(), value);
}
inline bool CMsgGCRoutingInfo_RoutingMethod_Parse(
    const ::std::string& name, CMsgGCRoutingInfo_RoutingMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCRoutingInfo_RoutingMethod>(
    CMsgGCRoutingInfo_RoutingMethod_descriptor(), name, value);
}
enum CMsgGCMsgSetOptions_Option {
  CMsgGCMsgSetOptions_Option_NOTIFY_USER_SESSIONS = 0,
  CMsgGCMsgSetOptions_Option_NOTIFY_SERVER_SESSIONS = 1,
  CMsgGCMsgSetOptions_Option_NOTIFY_ACHIEVEMENTS = 2,
  CMsgGCMsgSetOptions_Option_NOTIFY_VAC_ACTION = 3
};
bool CMsgGCMsgSetOptions_Option_IsValid(int value);
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions_Option_Option_MIN = CMsgGCMsgSetOptions_Option_NOTIFY_USER_SESSIONS;
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions_Option_Option_MAX = CMsgGCMsgSetOptions_Option_NOTIFY_VAC_ACTION;
const int CMsgGCMsgSetOptions_Option_Option_ARRAYSIZE = CMsgGCMsgSetOptions_Option_Option_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCMsgSetOptions_Option_descriptor();
inline const ::std::string& CMsgGCMsgSetOptions_Option_Name(CMsgGCMsgSetOptions_Option value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCMsgSetOptions_Option_descriptor(), value);
}
inline bool CMsgGCMsgSetOptions_Option_Parse(
    const ::std::string& name, CMsgGCMsgSetOptions_Option* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCMsgSetOptions_Option>(
    CMsgGCMsgSetOptions_Option_descriptor(), name, value);
}
enum CMsgGCMsgSetOptions_GCSQLVersion {
  CMsgGCMsgSetOptions_GCSQLVersion_GCSQL_VERSION_BASELINE = 1,
  CMsgGCMsgSetOptions_GCSQLVersion_GCSQL_VERSION_BOOLTYPE = 2
};
bool CMsgGCMsgSetOptions_GCSQLVersion_IsValid(int value);
const CMsgGCMsgSetOptions_GCSQLVersion CMsgGCMsgSetOptions_GCSQLVersion_GCSQLVersion_MIN = CMsgGCMsgSetOptions_GCSQLVersion_GCSQL_VERSION_BASELINE;
const CMsgGCMsgSetOptions_GCSQLVersion CMsgGCMsgSetOptions_GCSQLVersion_GCSQLVersion_MAX = CMsgGCMsgSetOptions_GCSQLVersion_GCSQL_VERSION_BOOLTYPE;
const int CMsgGCMsgSetOptions_GCSQLVersion_GCSQLVersion_ARRAYSIZE = CMsgGCMsgSetOptions_GCSQLVersion_GCSQLVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCMsgSetOptions_GCSQLVersion_descriptor();
inline const ::std::string& CMsgGCMsgSetOptions_GCSQLVersion_Name(CMsgGCMsgSetOptions_GCSQLVersion value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCMsgSetOptions_GCSQLVersion_descriptor(), value);
}
inline bool CMsgGCMsgSetOptions_GCSQLVersion_Parse(
    const ::std::string& name, CMsgGCMsgSetOptions_GCSQLVersion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCMsgSetOptions_GCSQLVersion>(
    CMsgGCMsgSetOptions_GCSQLVersion_descriptor(), name, value);
}
enum CMsgDPPartnerMicroTxnsResponse_EErrorCode {
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgValid = 0,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidAppID = 1,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidPartnerInfo = 2,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgNoTransactions = 3,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgSQLFailure = 4,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgPartnerInfoDiscrepancy = 5,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgTransactionInsertFailed = 7,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgAlreadyRunning = 8,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidTransactionData = 9
};
bool CMsgDPPartnerMicroTxnsResponse_EErrorCode_IsValid(int value);
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_MIN = CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgValid;
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_MAX = CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidTransactionData;
const int CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_ARRAYSIZE = CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor();
inline const ::std::string& CMsgDPPartnerMicroTxnsResponse_EErrorCode_Name(CMsgDPPartnerMicroTxnsResponse_EErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor(), value);
}
inline bool CMsgDPPartnerMicroTxnsResponse_EErrorCode_Parse(
    const ::std::string& name, CMsgDPPartnerMicroTxnsResponse_EErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDPPartnerMicroTxnsResponse_EErrorCode>(
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor(), name, value);
}
enum GCProtoBufMsgSrc {
  GCProtoBufMsgSrc_Unspecified = 0,
  GCProtoBufMsgSrc_FromSystem = 1,
  GCProtoBufMsgSrc_FromSteamID = 2,
  GCProtoBufMsgSrc_FromGC = 3,
  GCProtoBufMsgSrc_ReplySystem = 4,
  GCProtoBufMsgSrc_SpoofedSteamID = 5
};
bool GCProtoBufMsgSrc_IsValid(int value);
const GCProtoBufMsgSrc GCProtoBufMsgSrc_MIN = GCProtoBufMsgSrc_Unspecified;
const GCProtoBufMsgSrc GCProtoBufMsgSrc_MAX = GCProtoBufMsgSrc_SpoofedSteamID;
const int GCProtoBufMsgSrc_ARRAYSIZE = GCProtoBufMsgSrc_MAX + 1;

const ::google::protobuf::EnumDescriptor* GCProtoBufMsgSrc_descriptor();
inline const ::std::string& GCProtoBufMsgSrc_Name(GCProtoBufMsgSrc value) {
  return ::google::protobuf::internal::NameOfEnum(
    GCProtoBufMsgSrc_descriptor(), value);
}
inline bool GCProtoBufMsgSrc_Parse(
    const ::std::string& name, GCProtoBufMsgSrc* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GCProtoBufMsgSrc>(
    GCProtoBufMsgSrc_descriptor(), name, value);
}
// ===================================================================

class CMsgProtoBufHeader final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgProtoBufHeader) */ {
 public:
  CMsgProtoBufHeader();
  virtual ~CMsgProtoBufHeader();

  CMsgProtoBufHeader(const CMsgProtoBufHeader& from);

  inline CMsgProtoBufHeader& operator=(const CMsgProtoBufHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgProtoBufHeader(CMsgProtoBufHeader&& from) noexcept
    : CMsgProtoBufHeader() {
    *this = ::std::move(from);
  }

  inline CMsgProtoBufHeader& operator=(CMsgProtoBufHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgProtoBufHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgProtoBufHeader* internal_default_instance() {
    return reinterpret_cast<const CMsgProtoBufHeader*>(
               &_CMsgProtoBufHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CMsgProtoBufHeader* other);
  friend void swap(CMsgProtoBufHeader& a, CMsgProtoBufHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgProtoBufHeader* New() const final {
    return CreateMaybeMessage<CMsgProtoBufHeader>(nullptr);
  }

  CMsgProtoBufHeader* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgProtoBufHeader>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgProtoBufHeader& from);
  void MergeFrom(const CMsgProtoBufHeader& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgProtoBufHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string target_job_name = 12;
  bool has_target_job_name() const;
  void clear_target_job_name();
  static const int kTargetJobNameFieldNumber = 12;
  const ::std::string& target_job_name() const;
  void set_target_job_name(const ::std::string& value);
  #if LANG_CXX11
  void set_target_job_name(::std::string&& value);
  #endif
  void set_target_job_name(const char* value);
  void set_target_job_name(const char* value, size_t size);
  ::std::string* mutable_target_job_name();
  ::std::string* release_target_job_name();
  void set_allocated_target_job_name(::std::string* target_job_name);

  // optional string error_message = 14;
  bool has_error_message() const;
  void clear_error_message();
  static const int kErrorMessageFieldNumber = 14;
  const ::std::string& error_message() const;
  void set_error_message(const ::std::string& value);
  #if LANG_CXX11
  void set_error_message(::std::string&& value);
  #endif
  void set_error_message(const char* value);
  void set_error_message(const char* value, size_t size);
  ::std::string* mutable_error_message();
  ::std::string* release_error_message();
  void set_allocated_error_message(::std::string* error_message);

  // optional fixed64 client_steam_id = 1;
  bool has_client_steam_id() const;
  void clear_client_steam_id();
  static const int kClientSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 client_steam_id() const;
  void set_client_steam_id(::google::protobuf::uint64 value);

  // optional int32 client_session_id = 2;
  bool has_client_session_id() const;
  void clear_client_session_id();
  static const int kClientSessionIdFieldNumber = 2;
  ::google::protobuf::int32 client_session_id() const;
  void set_client_session_id(::google::protobuf::int32 value);

  // optional uint32 source_app_id = 3;
  bool has_source_app_id() const;
  void clear_source_app_id();
  static const int kSourceAppIdFieldNumber = 3;
  ::google::protobuf::uint32 source_app_id() const;
  void set_source_app_id(::google::protobuf::uint32 value);

  // optional .proto.dota.GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
  bool has_gc_msg_src() const;
  void clear_gc_msg_src();
  static const int kGcMsgSrcFieldNumber = 200;
  ::proto::dota::GCProtoBufMsgSrc gc_msg_src() const;
  void set_gc_msg_src(::proto::dota::GCProtoBufMsgSrc value);

  // optional uint32 gc_dir_index_source = 201;
  bool has_gc_dir_index_source() const;
  void clear_gc_dir_index_source();
  static const int kGcDirIndexSourceFieldNumber = 201;
  ::google::protobuf::uint32 gc_dir_index_source() const;
  void set_gc_dir_index_source(::google::protobuf::uint32 value);

  // optional int32 eresult = 13 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 13;
  ::google::protobuf::int32 eresult() const;
  void set_eresult(::google::protobuf::int32 value);

  // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
  bool has_job_id_source() const;
  void clear_job_id_source();
  static const int kJobIdSourceFieldNumber = 10;
  ::google::protobuf::uint64 job_id_source() const;
  void set_job_id_source(::google::protobuf::uint64 value);

  // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
  bool has_job_id_target() const;
  void clear_job_id_target();
  static const int kJobIdTargetFieldNumber = 11;
  ::google::protobuf::uint64 job_id_target() const;
  void set_job_id_target(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgProtoBufHeader)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr target_job_name_;
  ::google::protobuf::internal::ArenaStringPtr error_message_;
  ::google::protobuf::uint64 client_steam_id_;
  ::google::protobuf::int32 client_session_id_;
  ::google::protobuf::uint32 source_app_id_;
  int gc_msg_src_;
  ::google::protobuf::uint32 gc_dir_index_source_;
  ::google::protobuf::int32 eresult_;
  ::google::protobuf::uint64 job_id_source_;
  ::google::protobuf::uint64 job_id_target_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgWebAPIKey final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgWebAPIKey) */ {
 public:
  CMsgWebAPIKey();
  virtual ~CMsgWebAPIKey();

  CMsgWebAPIKey(const CMsgWebAPIKey& from);

  inline CMsgWebAPIKey& operator=(const CMsgWebAPIKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgWebAPIKey(CMsgWebAPIKey&& from) noexcept
    : CMsgWebAPIKey() {
    *this = ::std::move(from);
  }

  inline CMsgWebAPIKey& operator=(CMsgWebAPIKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgWebAPIKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgWebAPIKey* internal_default_instance() {
    return reinterpret_cast<const CMsgWebAPIKey*>(
               &_CMsgWebAPIKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CMsgWebAPIKey* other);
  friend void swap(CMsgWebAPIKey& a, CMsgWebAPIKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgWebAPIKey* New() const final {
    return CreateMaybeMessage<CMsgWebAPIKey>(nullptr);
  }

  CMsgWebAPIKey* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgWebAPIKey>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgWebAPIKey& from);
  void MergeFrom(const CMsgWebAPIKey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgWebAPIKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string domain = 5;
  bool has_domain() const;
  void clear_domain();
  static const int kDomainFieldNumber = 5;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // optional uint32 account_id = 2 [default = 0];
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 publisher_group_id = 3 [default = 0];
  bool has_publisher_group_id() const;
  void clear_publisher_group_id();
  static const int kPublisherGroupIdFieldNumber = 3;
  ::google::protobuf::uint32 publisher_group_id() const;
  void set_publisher_group_id(::google::protobuf::uint32 value);

  // optional uint32 key_id = 4;
  bool has_key_id() const;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 4;
  ::google::protobuf::uint32 key_id() const;
  void set_key_id(::google::protobuf::uint32 value);

  // optional uint32 status = 1 [default = 255];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgWebAPIKey)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 publisher_group_id_;
  ::google::protobuf::uint32 key_id_;
  ::google::protobuf::uint32 status_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgHttpRequest_RequestHeader final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgHttpRequest.RequestHeader) */ {
 public:
  CMsgHttpRequest_RequestHeader();
  virtual ~CMsgHttpRequest_RequestHeader();

  CMsgHttpRequest_RequestHeader(const CMsgHttpRequest_RequestHeader& from);

  inline CMsgHttpRequest_RequestHeader& operator=(const CMsgHttpRequest_RequestHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgHttpRequest_RequestHeader(CMsgHttpRequest_RequestHeader&& from) noexcept
    : CMsgHttpRequest_RequestHeader() {
    *this = ::std::move(from);
  }

  inline CMsgHttpRequest_RequestHeader& operator=(CMsgHttpRequest_RequestHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgHttpRequest_RequestHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgHttpRequest_RequestHeader* internal_default_instance() {
    return reinterpret_cast<const CMsgHttpRequest_RequestHeader*>(
               &_CMsgHttpRequest_RequestHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CMsgHttpRequest_RequestHeader* other);
  friend void swap(CMsgHttpRequest_RequestHeader& a, CMsgHttpRequest_RequestHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgHttpRequest_RequestHeader* New() const final {
    return CreateMaybeMessage<CMsgHttpRequest_RequestHeader>(nullptr);
  }

  CMsgHttpRequest_RequestHeader* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgHttpRequest_RequestHeader>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgHttpRequest_RequestHeader& from);
  void MergeFrom(const CMsgHttpRequest_RequestHeader& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHttpRequest_RequestHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgHttpRequest.RequestHeader)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgHttpRequest_QueryParam final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgHttpRequest.QueryParam) */ {
 public:
  CMsgHttpRequest_QueryParam();
  virtual ~CMsgHttpRequest_QueryParam();

  CMsgHttpRequest_QueryParam(const CMsgHttpRequest_QueryParam& from);

  inline CMsgHttpRequest_QueryParam& operator=(const CMsgHttpRequest_QueryParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgHttpRequest_QueryParam(CMsgHttpRequest_QueryParam&& from) noexcept
    : CMsgHttpRequest_QueryParam() {
    *this = ::std::move(from);
  }

  inline CMsgHttpRequest_QueryParam& operator=(CMsgHttpRequest_QueryParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgHttpRequest_QueryParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgHttpRequest_QueryParam* internal_default_instance() {
    return reinterpret_cast<const CMsgHttpRequest_QueryParam*>(
               &_CMsgHttpRequest_QueryParam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CMsgHttpRequest_QueryParam* other);
  friend void swap(CMsgHttpRequest_QueryParam& a, CMsgHttpRequest_QueryParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgHttpRequest_QueryParam* New() const final {
    return CreateMaybeMessage<CMsgHttpRequest_QueryParam>(nullptr);
  }

  CMsgHttpRequest_QueryParam* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgHttpRequest_QueryParam>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgHttpRequest_QueryParam& from);
  void MergeFrom(const CMsgHttpRequest_QueryParam& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHttpRequest_QueryParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bytes value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgHttpRequest.QueryParam)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgHttpRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgHttpRequest) */ {
 public:
  CMsgHttpRequest();
  virtual ~CMsgHttpRequest();

  CMsgHttpRequest(const CMsgHttpRequest& from);

  inline CMsgHttpRequest& operator=(const CMsgHttpRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgHttpRequest(CMsgHttpRequest&& from) noexcept
    : CMsgHttpRequest() {
    *this = ::std::move(from);
  }

  inline CMsgHttpRequest& operator=(CMsgHttpRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgHttpRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgHttpRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgHttpRequest*>(
               &_CMsgHttpRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CMsgHttpRequest* other);
  friend void swap(CMsgHttpRequest& a, CMsgHttpRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgHttpRequest* New() const final {
    return CreateMaybeMessage<CMsgHttpRequest>(nullptr);
  }

  CMsgHttpRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgHttpRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgHttpRequest& from);
  void MergeFrom(const CMsgHttpRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHttpRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgHttpRequest_RequestHeader RequestHeader;
  typedef CMsgHttpRequest_QueryParam QueryParam;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgHttpRequest.RequestHeader headers = 4;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 4;
  ::proto::dota::CMsgHttpRequest_RequestHeader* mutable_headers(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_RequestHeader >*
      mutable_headers();
  const ::proto::dota::CMsgHttpRequest_RequestHeader& headers(int index) const;
  ::proto::dota::CMsgHttpRequest_RequestHeader* add_headers();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_RequestHeader >&
      headers() const;

  // repeated .proto.dota.CMsgHttpRequest.QueryParam get_params = 5;
  int get_params_size() const;
  void clear_get_params();
  static const int kGetParamsFieldNumber = 5;
  ::proto::dota::CMsgHttpRequest_QueryParam* mutable_get_params(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_QueryParam >*
      mutable_get_params();
  const ::proto::dota::CMsgHttpRequest_QueryParam& get_params(int index) const;
  ::proto::dota::CMsgHttpRequest_QueryParam* add_get_params();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_QueryParam >&
      get_params() const;

  // repeated .proto.dota.CMsgHttpRequest.QueryParam post_params = 6;
  int post_params_size() const;
  void clear_post_params();
  static const int kPostParamsFieldNumber = 6;
  ::proto::dota::CMsgHttpRequest_QueryParam* mutable_post_params(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_QueryParam >*
      mutable_post_params();
  const ::proto::dota::CMsgHttpRequest_QueryParam& post_params(int index) const;
  ::proto::dota::CMsgHttpRequest_QueryParam* add_post_params();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_QueryParam >&
      post_params() const;

  // optional string hostname = 2;
  bool has_hostname() const;
  void clear_hostname();
  static const int kHostnameFieldNumber = 2;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // optional string url = 3;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional bytes body = 7;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 7;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // optional uint32 request_method = 1;
  bool has_request_method() const;
  void clear_request_method();
  static const int kRequestMethodFieldNumber = 1;
  ::google::protobuf::uint32 request_method() const;
  void set_request_method(::google::protobuf::uint32 value);

  // optional uint32 absolute_timeout = 8;
  bool has_absolute_timeout() const;
  void clear_absolute_timeout();
  static const int kAbsoluteTimeoutFieldNumber = 8;
  ::google::protobuf::uint32 absolute_timeout() const;
  void set_absolute_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgHttpRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_RequestHeader > headers_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_QueryParam > get_params_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_QueryParam > post_params_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::uint32 request_method_;
  ::google::protobuf::uint32 absolute_timeout_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgWebAPIRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgWebAPIRequest) */ {
 public:
  CMsgWebAPIRequest();
  virtual ~CMsgWebAPIRequest();

  CMsgWebAPIRequest(const CMsgWebAPIRequest& from);

  inline CMsgWebAPIRequest& operator=(const CMsgWebAPIRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgWebAPIRequest(CMsgWebAPIRequest&& from) noexcept
    : CMsgWebAPIRequest() {
    *this = ::std::move(from);
  }

  inline CMsgWebAPIRequest& operator=(CMsgWebAPIRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgWebAPIRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgWebAPIRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgWebAPIRequest*>(
               &_CMsgWebAPIRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CMsgWebAPIRequest* other);
  friend void swap(CMsgWebAPIRequest& a, CMsgWebAPIRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgWebAPIRequest* New() const final {
    return CreateMaybeMessage<CMsgWebAPIRequest>(nullptr);
  }

  CMsgWebAPIRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgWebAPIRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgWebAPIRequest& from);
  void MergeFrom(const CMsgWebAPIRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgWebAPIRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UNUSED_job_name = 1;
  bool has_unused_job_name() const;
  void clear_unused_job_name();
  static const int kUNUSEDJobNameFieldNumber = 1;
  const ::std::string& unused_job_name() const;
  void set_unused_job_name(const ::std::string& value);
  #if LANG_CXX11
  void set_unused_job_name(::std::string&& value);
  #endif
  void set_unused_job_name(const char* value);
  void set_unused_job_name(const char* value, size_t size);
  ::std::string* mutable_unused_job_name();
  ::std::string* release_unused_job_name();
  void set_allocated_unused_job_name(::std::string* unused_job_name);

  // optional string interface_name = 2;
  bool has_interface_name() const;
  void clear_interface_name();
  static const int kInterfaceNameFieldNumber = 2;
  const ::std::string& interface_name() const;
  void set_interface_name(const ::std::string& value);
  #if LANG_CXX11
  void set_interface_name(::std::string&& value);
  #endif
  void set_interface_name(const char* value);
  void set_interface_name(const char* value, size_t size);
  ::std::string* mutable_interface_name();
  ::std::string* release_interface_name();
  void set_allocated_interface_name(::std::string* interface_name);

  // optional string method_name = 3;
  bool has_method_name() const;
  void clear_method_name();
  static const int kMethodNameFieldNumber = 3;
  const ::std::string& method_name() const;
  void set_method_name(const ::std::string& value);
  #if LANG_CXX11
  void set_method_name(::std::string&& value);
  #endif
  void set_method_name(const char* value);
  void set_method_name(const char* value, size_t size);
  ::std::string* mutable_method_name();
  ::std::string* release_method_name();
  void set_allocated_method_name(::std::string* method_name);

  // optional .proto.dota.CMsgWebAPIKey api_key = 5;
  bool has_api_key() const;
  void clear_api_key();
  static const int kApiKeyFieldNumber = 5;
  const ::proto::dota::CMsgWebAPIKey& api_key() const;
  ::proto::dota::CMsgWebAPIKey* release_api_key();
  ::proto::dota::CMsgWebAPIKey* mutable_api_key();
  void set_allocated_api_key(::proto::dota::CMsgWebAPIKey* api_key);

  // optional .proto.dota.CMsgHttpRequest request = 6;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 6;
  const ::proto::dota::CMsgHttpRequest& request() const;
  ::proto::dota::CMsgHttpRequest* release_request();
  ::proto::dota::CMsgHttpRequest* mutable_request();
  void set_allocated_request(::proto::dota::CMsgHttpRequest* request);

  // optional uint32 version = 4;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional uint32 routing_app_id = 7;
  bool has_routing_app_id() const;
  void clear_routing_app_id();
  static const int kRoutingAppIdFieldNumber = 7;
  ::google::protobuf::uint32 routing_app_id() const;
  void set_routing_app_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgWebAPIRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr unused_job_name_;
  ::google::protobuf::internal::ArenaStringPtr interface_name_;
  ::google::protobuf::internal::ArenaStringPtr method_name_;
  ::proto::dota::CMsgWebAPIKey* api_key_;
  ::proto::dota::CMsgHttpRequest* request_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 routing_app_id_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgHttpResponse_ResponseHeader final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgHttpResponse.ResponseHeader) */ {
 public:
  CMsgHttpResponse_ResponseHeader();
  virtual ~CMsgHttpResponse_ResponseHeader();

  CMsgHttpResponse_ResponseHeader(const CMsgHttpResponse_ResponseHeader& from);

  inline CMsgHttpResponse_ResponseHeader& operator=(const CMsgHttpResponse_ResponseHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgHttpResponse_ResponseHeader(CMsgHttpResponse_ResponseHeader&& from) noexcept
    : CMsgHttpResponse_ResponseHeader() {
    *this = ::std::move(from);
  }

  inline CMsgHttpResponse_ResponseHeader& operator=(CMsgHttpResponse_ResponseHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgHttpResponse_ResponseHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgHttpResponse_ResponseHeader* internal_default_instance() {
    return reinterpret_cast<const CMsgHttpResponse_ResponseHeader*>(
               &_CMsgHttpResponse_ResponseHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CMsgHttpResponse_ResponseHeader* other);
  friend void swap(CMsgHttpResponse_ResponseHeader& a, CMsgHttpResponse_ResponseHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgHttpResponse_ResponseHeader* New() const final {
    return CreateMaybeMessage<CMsgHttpResponse_ResponseHeader>(nullptr);
  }

  CMsgHttpResponse_ResponseHeader* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgHttpResponse_ResponseHeader>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgHttpResponse_ResponseHeader& from);
  void MergeFrom(const CMsgHttpResponse_ResponseHeader& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHttpResponse_ResponseHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgHttpResponse.ResponseHeader)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgHttpResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgHttpResponse) */ {
 public:
  CMsgHttpResponse();
  virtual ~CMsgHttpResponse();

  CMsgHttpResponse(const CMsgHttpResponse& from);

  inline CMsgHttpResponse& operator=(const CMsgHttpResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgHttpResponse(CMsgHttpResponse&& from) noexcept
    : CMsgHttpResponse() {
    *this = ::std::move(from);
  }

  inline CMsgHttpResponse& operator=(CMsgHttpResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgHttpResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgHttpResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgHttpResponse*>(
               &_CMsgHttpResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CMsgHttpResponse* other);
  friend void swap(CMsgHttpResponse& a, CMsgHttpResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgHttpResponse* New() const final {
    return CreateMaybeMessage<CMsgHttpResponse>(nullptr);
  }

  CMsgHttpResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgHttpResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgHttpResponse& from);
  void MergeFrom(const CMsgHttpResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHttpResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgHttpResponse_ResponseHeader ResponseHeader;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgHttpResponse.ResponseHeader headers = 2;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 2;
  ::proto::dota::CMsgHttpResponse_ResponseHeader* mutable_headers(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpResponse_ResponseHeader >*
      mutable_headers();
  const ::proto::dota::CMsgHttpResponse_ResponseHeader& headers(int index) const;
  ::proto::dota::CMsgHttpResponse_ResponseHeader* add_headers();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpResponse_ResponseHeader >&
      headers() const;

  // optional bytes body = 3;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 3;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // optional uint32 status_code = 1;
  bool has_status_code() const;
  void clear_status_code();
  static const int kStatusCodeFieldNumber = 1;
  ::google::protobuf::uint32 status_code() const;
  void set_status_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgHttpResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpResponse_ResponseHeader > headers_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::uint32 status_code_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMFindAccounts final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMFindAccounts) */ {
 public:
  CMsgAMFindAccounts();
  virtual ~CMsgAMFindAccounts();

  CMsgAMFindAccounts(const CMsgAMFindAccounts& from);

  inline CMsgAMFindAccounts& operator=(const CMsgAMFindAccounts& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMFindAccounts(CMsgAMFindAccounts&& from) noexcept
    : CMsgAMFindAccounts() {
    *this = ::std::move(from);
  }

  inline CMsgAMFindAccounts& operator=(CMsgAMFindAccounts&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMFindAccounts& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMFindAccounts* internal_default_instance() {
    return reinterpret_cast<const CMsgAMFindAccounts*>(
               &_CMsgAMFindAccounts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CMsgAMFindAccounts* other);
  friend void swap(CMsgAMFindAccounts& a, CMsgAMFindAccounts& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMFindAccounts* New() const final {
    return CreateMaybeMessage<CMsgAMFindAccounts>(nullptr);
  }

  CMsgAMFindAccounts* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMFindAccounts>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMFindAccounts& from);
  void MergeFrom(const CMsgAMFindAccounts& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMFindAccounts* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string search_string = 2;
  bool has_search_string() const;
  void clear_search_string();
  static const int kSearchStringFieldNumber = 2;
  const ::std::string& search_string() const;
  void set_search_string(const ::std::string& value);
  #if LANG_CXX11
  void set_search_string(::std::string&& value);
  #endif
  void set_search_string(const char* value);
  void set_search_string(const char* value, size_t size);
  ::std::string* mutable_search_string();
  ::std::string* release_search_string();
  void set_allocated_search_string(::std::string* search_string);

  // optional uint32 search_type = 1;
  bool has_search_type() const;
  void clear_search_type();
  static const int kSearchTypeFieldNumber = 1;
  ::google::protobuf::uint32 search_type() const;
  void set_search_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMFindAccounts)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr search_string_;
  ::google::protobuf::uint32 search_type_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMFindAccountsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMFindAccountsResponse) */ {
 public:
  CMsgAMFindAccountsResponse();
  virtual ~CMsgAMFindAccountsResponse();

  CMsgAMFindAccountsResponse(const CMsgAMFindAccountsResponse& from);

  inline CMsgAMFindAccountsResponse& operator=(const CMsgAMFindAccountsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMFindAccountsResponse(CMsgAMFindAccountsResponse&& from) noexcept
    : CMsgAMFindAccountsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgAMFindAccountsResponse& operator=(CMsgAMFindAccountsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMFindAccountsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMFindAccountsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgAMFindAccountsResponse*>(
               &_CMsgAMFindAccountsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CMsgAMFindAccountsResponse* other);
  friend void swap(CMsgAMFindAccountsResponse& a, CMsgAMFindAccountsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMFindAccountsResponse* New() const final {
    return CreateMaybeMessage<CMsgAMFindAccountsResponse>(nullptr);
  }

  CMsgAMFindAccountsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMFindAccountsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMFindAccountsResponse& from);
  void MergeFrom(const CMsgAMFindAccountsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMFindAccountsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 steam_id = 1;
  int steam_id_size() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id(int index) const;
  void set_steam_id(int index, ::google::protobuf::uint64 value);
  void add_steam_id(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steam_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steam_id();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMFindAccountsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steam_id_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgNotifyWatchdog final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgNotifyWatchdog) */ {
 public:
  CMsgNotifyWatchdog();
  virtual ~CMsgNotifyWatchdog();

  CMsgNotifyWatchdog(const CMsgNotifyWatchdog& from);

  inline CMsgNotifyWatchdog& operator=(const CMsgNotifyWatchdog& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgNotifyWatchdog(CMsgNotifyWatchdog&& from) noexcept
    : CMsgNotifyWatchdog() {
    *this = ::std::move(from);
  }

  inline CMsgNotifyWatchdog& operator=(CMsgNotifyWatchdog&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgNotifyWatchdog& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgNotifyWatchdog* internal_default_instance() {
    return reinterpret_cast<const CMsgNotifyWatchdog*>(
               &_CMsgNotifyWatchdog_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CMsgNotifyWatchdog* other);
  friend void swap(CMsgNotifyWatchdog& a, CMsgNotifyWatchdog& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgNotifyWatchdog* New() const final {
    return CreateMaybeMessage<CMsgNotifyWatchdog>(nullptr);
  }

  CMsgNotifyWatchdog* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgNotifyWatchdog>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgNotifyWatchdog& from);
  void MergeFrom(const CMsgNotifyWatchdog& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgNotifyWatchdog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 7;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 7;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional string recipient = 12;
  bool has_recipient() const;
  void clear_recipient();
  static const int kRecipientFieldNumber = 12;
  const ::std::string& recipient() const;
  void set_recipient(const ::std::string& value);
  #if LANG_CXX11
  void set_recipient(::std::string&& value);
  #endif
  void set_recipient(const char* value);
  void set_recipient(const char* value, size_t size);
  ::std::string* mutable_recipient();
  ::std::string* release_recipient();
  void set_allocated_recipient(::std::string* recipient);

  // optional uint32 source = 1;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // optional uint32 alert_type = 2;
  bool has_alert_type() const;
  void clear_alert_type();
  static const int kAlertTypeFieldNumber = 2;
  ::google::protobuf::uint32 alert_type() const;
  void set_alert_type(::google::protobuf::uint32 value);

  // optional bool critical = 4;
  bool has_critical() const;
  void clear_critical();
  static const int kCriticalFieldNumber = 4;
  bool critical() const;
  void set_critical(bool value);

  // optional uint32 time = 5;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 5;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // optional uint32 appid = 6;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 6;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgNotifyWatchdog)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr recipient_;
  ::google::protobuf::uint32 source_;
  ::google::protobuf::uint32 alert_type_;
  bool critical_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMGetLicenses final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMGetLicenses) */ {
 public:
  CMsgAMGetLicenses();
  virtual ~CMsgAMGetLicenses();

  CMsgAMGetLicenses(const CMsgAMGetLicenses& from);

  inline CMsgAMGetLicenses& operator=(const CMsgAMGetLicenses& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMGetLicenses(CMsgAMGetLicenses&& from) noexcept
    : CMsgAMGetLicenses() {
    *this = ::std::move(from);
  }

  inline CMsgAMGetLicenses& operator=(CMsgAMGetLicenses&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMGetLicenses& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMGetLicenses* internal_default_instance() {
    return reinterpret_cast<const CMsgAMGetLicenses*>(
               &_CMsgAMGetLicenses_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CMsgAMGetLicenses* other);
  friend void swap(CMsgAMGetLicenses& a, CMsgAMGetLicenses& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMGetLicenses* New() const final {
    return CreateMaybeMessage<CMsgAMGetLicenses>(nullptr);
  }

  CMsgAMGetLicenses* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMGetLicenses>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMGetLicenses& from);
  void MergeFrom(const CMsgAMGetLicenses& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMGetLicenses* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMGetLicenses)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgPackageLicense final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPackageLicense) */ {
 public:
  CMsgPackageLicense();
  virtual ~CMsgPackageLicense();

  CMsgPackageLicense(const CMsgPackageLicense& from);

  inline CMsgPackageLicense& operator=(const CMsgPackageLicense& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPackageLicense(CMsgPackageLicense&& from) noexcept
    : CMsgPackageLicense() {
    *this = ::std::move(from);
  }

  inline CMsgPackageLicense& operator=(CMsgPackageLicense&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPackageLicense& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPackageLicense* internal_default_instance() {
    return reinterpret_cast<const CMsgPackageLicense*>(
               &_CMsgPackageLicense_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CMsgPackageLicense* other);
  friend void swap(CMsgPackageLicense& a, CMsgPackageLicense& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPackageLicense* New() const final {
    return CreateMaybeMessage<CMsgPackageLicense>(nullptr);
  }

  CMsgPackageLicense* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPackageLicense>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPackageLicense& from);
  void MergeFrom(const CMsgPackageLicense& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPackageLicense* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 package_id = 1;
  bool has_package_id() const;
  void clear_package_id();
  static const int kPackageIdFieldNumber = 1;
  ::google::protobuf::uint32 package_id() const;
  void set_package_id(::google::protobuf::uint32 value);

  // optional uint32 time_created = 2;
  bool has_time_created() const;
  void clear_time_created();
  static const int kTimeCreatedFieldNumber = 2;
  ::google::protobuf::uint32 time_created() const;
  void set_time_created(::google::protobuf::uint32 value);

  // optional uint32 owner_id = 3;
  bool has_owner_id() const;
  void clear_owner_id();
  static const int kOwnerIdFieldNumber = 3;
  ::google::protobuf::uint32 owner_id() const;
  void set_owner_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPackageLicense)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 package_id_;
  ::google::protobuf::uint32 time_created_;
  ::google::protobuf::uint32 owner_id_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMGetLicensesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMGetLicensesResponse) */ {
 public:
  CMsgAMGetLicensesResponse();
  virtual ~CMsgAMGetLicensesResponse();

  CMsgAMGetLicensesResponse(const CMsgAMGetLicensesResponse& from);

  inline CMsgAMGetLicensesResponse& operator=(const CMsgAMGetLicensesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMGetLicensesResponse(CMsgAMGetLicensesResponse&& from) noexcept
    : CMsgAMGetLicensesResponse() {
    *this = ::std::move(from);
  }

  inline CMsgAMGetLicensesResponse& operator=(CMsgAMGetLicensesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMGetLicensesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMGetLicensesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgAMGetLicensesResponse*>(
               &_CMsgAMGetLicensesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CMsgAMGetLicensesResponse* other);
  friend void swap(CMsgAMGetLicensesResponse& a, CMsgAMGetLicensesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMGetLicensesResponse* New() const final {
    return CreateMaybeMessage<CMsgAMGetLicensesResponse>(nullptr);
  }

  CMsgAMGetLicensesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMGetLicensesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMGetLicensesResponse& from);
  void MergeFrom(const CMsgAMGetLicensesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMGetLicensesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgPackageLicense license = 1;
  int license_size() const;
  void clear_license();
  static const int kLicenseFieldNumber = 1;
  ::proto::dota::CMsgPackageLicense* mutable_license(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPackageLicense >*
      mutable_license();
  const ::proto::dota::CMsgPackageLicense& license(int index) const;
  ::proto::dota::CMsgPackageLicense* add_license();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPackageLicense >&
      license() const;

  // optional uint32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMGetLicensesResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPackageLicense > license_;
  ::google::protobuf::uint32 result_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMGetUserGameStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMGetUserGameStats) */ {
 public:
  CMsgAMGetUserGameStats();
  virtual ~CMsgAMGetUserGameStats();

  CMsgAMGetUserGameStats(const CMsgAMGetUserGameStats& from);

  inline CMsgAMGetUserGameStats& operator=(const CMsgAMGetUserGameStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMGetUserGameStats(CMsgAMGetUserGameStats&& from) noexcept
    : CMsgAMGetUserGameStats() {
    *this = ::std::move(from);
  }

  inline CMsgAMGetUserGameStats& operator=(CMsgAMGetUserGameStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMGetUserGameStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMGetUserGameStats* internal_default_instance() {
    return reinterpret_cast<const CMsgAMGetUserGameStats*>(
               &_CMsgAMGetUserGameStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CMsgAMGetUserGameStats* other);
  friend void swap(CMsgAMGetUserGameStats& a, CMsgAMGetUserGameStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMGetUserGameStats* New() const final {
    return CreateMaybeMessage<CMsgAMGetUserGameStats>(nullptr);
  }

  CMsgAMGetUserGameStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMGetUserGameStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMGetUserGameStats& from);
  void MergeFrom(const CMsgAMGetUserGameStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMGetUserGameStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 stats = 3;
  int stats_size() const;
  void clear_stats();
  static const int kStatsFieldNumber = 3;
  ::google::protobuf::uint32 stats(int index) const;
  void set_stats(int index, ::google::protobuf::uint32 value);
  void add_stats(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      stats() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_stats();

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional fixed64 game_id = 2;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::uint64 game_id() const;
  void set_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMGetUserGameStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > stats_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint64 game_id_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMGetUserGameStatsResponse_Stats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMGetUserGameStatsResponse.Stats) */ {
 public:
  CMsgAMGetUserGameStatsResponse_Stats();
  virtual ~CMsgAMGetUserGameStatsResponse_Stats();

  CMsgAMGetUserGameStatsResponse_Stats(const CMsgAMGetUserGameStatsResponse_Stats& from);

  inline CMsgAMGetUserGameStatsResponse_Stats& operator=(const CMsgAMGetUserGameStatsResponse_Stats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMGetUserGameStatsResponse_Stats(CMsgAMGetUserGameStatsResponse_Stats&& from) noexcept
    : CMsgAMGetUserGameStatsResponse_Stats() {
    *this = ::std::move(from);
  }

  inline CMsgAMGetUserGameStatsResponse_Stats& operator=(CMsgAMGetUserGameStatsResponse_Stats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMGetUserGameStatsResponse_Stats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMGetUserGameStatsResponse_Stats* internal_default_instance() {
    return reinterpret_cast<const CMsgAMGetUserGameStatsResponse_Stats*>(
               &_CMsgAMGetUserGameStatsResponse_Stats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(CMsgAMGetUserGameStatsResponse_Stats* other);
  friend void swap(CMsgAMGetUserGameStatsResponse_Stats& a, CMsgAMGetUserGameStatsResponse_Stats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMGetUserGameStatsResponse_Stats* New() const final {
    return CreateMaybeMessage<CMsgAMGetUserGameStatsResponse_Stats>(nullptr);
  }

  CMsgAMGetUserGameStatsResponse_Stats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMGetUserGameStatsResponse_Stats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMGetUserGameStatsResponse_Stats& from);
  void MergeFrom(const CMsgAMGetUserGameStatsResponse_Stats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMGetUserGameStatsResponse_Stats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stat_id = 1;
  bool has_stat_id() const;
  void clear_stat_id();
  static const int kStatIdFieldNumber = 1;
  ::google::protobuf::uint32 stat_id() const;
  void set_stat_id(::google::protobuf::uint32 value);

  // optional uint32 stat_value = 2;
  bool has_stat_value() const;
  void clear_stat_value();
  static const int kStatValueFieldNumber = 2;
  ::google::protobuf::uint32 stat_value() const;
  void set_stat_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMGetUserGameStatsResponse.Stats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 stat_id_;
  ::google::protobuf::uint32 stat_value_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMGetUserGameStatsResponse_Achievement_Blocks final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMGetUserGameStatsResponse.Achievement_Blocks) */ {
 public:
  CMsgAMGetUserGameStatsResponse_Achievement_Blocks();
  virtual ~CMsgAMGetUserGameStatsResponse_Achievement_Blocks();

  CMsgAMGetUserGameStatsResponse_Achievement_Blocks(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from);

  inline CMsgAMGetUserGameStatsResponse_Achievement_Blocks& operator=(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMGetUserGameStatsResponse_Achievement_Blocks(CMsgAMGetUserGameStatsResponse_Achievement_Blocks&& from) noexcept
    : CMsgAMGetUserGameStatsResponse_Achievement_Blocks() {
    *this = ::std::move(from);
  }

  inline CMsgAMGetUserGameStatsResponse_Achievement_Blocks& operator=(CMsgAMGetUserGameStatsResponse_Achievement_Blocks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMGetUserGameStatsResponse_Achievement_Blocks* internal_default_instance() {
    return reinterpret_cast<const CMsgAMGetUserGameStatsResponse_Achievement_Blocks*>(
               &_CMsgAMGetUserGameStatsResponse_Achievement_Blocks_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CMsgAMGetUserGameStatsResponse_Achievement_Blocks* other);
  friend void swap(CMsgAMGetUserGameStatsResponse_Achievement_Blocks& a, CMsgAMGetUserGameStatsResponse_Achievement_Blocks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMGetUserGameStatsResponse_Achievement_Blocks* New() const final {
    return CreateMaybeMessage<CMsgAMGetUserGameStatsResponse_Achievement_Blocks>(nullptr);
  }

  CMsgAMGetUserGameStatsResponse_Achievement_Blocks* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMGetUserGameStatsResponse_Achievement_Blocks>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from);
  void MergeFrom(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMGetUserGameStatsResponse_Achievement_Blocks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 achievement_id = 1;
  bool has_achievement_id() const;
  void clear_achievement_id();
  static const int kAchievementIdFieldNumber = 1;
  ::google::protobuf::uint32 achievement_id() const;
  void set_achievement_id(::google::protobuf::uint32 value);

  // optional uint32 achievement_bit_id = 2;
  bool has_achievement_bit_id() const;
  void clear_achievement_bit_id();
  static const int kAchievementBitIdFieldNumber = 2;
  ::google::protobuf::uint32 achievement_bit_id() const;
  void set_achievement_bit_id(::google::protobuf::uint32 value);

  // optional fixed32 unlock_time = 3;
  bool has_unlock_time() const;
  void clear_unlock_time();
  static const int kUnlockTimeFieldNumber = 3;
  ::google::protobuf::uint32 unlock_time() const;
  void set_unlock_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 achievement_id_;
  ::google::protobuf::uint32 achievement_bit_id_;
  ::google::protobuf::uint32 unlock_time_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMGetUserGameStatsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMGetUserGameStatsResponse) */ {
 public:
  CMsgAMGetUserGameStatsResponse();
  virtual ~CMsgAMGetUserGameStatsResponse();

  CMsgAMGetUserGameStatsResponse(const CMsgAMGetUserGameStatsResponse& from);

  inline CMsgAMGetUserGameStatsResponse& operator=(const CMsgAMGetUserGameStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMGetUserGameStatsResponse(CMsgAMGetUserGameStatsResponse&& from) noexcept
    : CMsgAMGetUserGameStatsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgAMGetUserGameStatsResponse& operator=(CMsgAMGetUserGameStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMGetUserGameStatsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMGetUserGameStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgAMGetUserGameStatsResponse*>(
               &_CMsgAMGetUserGameStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CMsgAMGetUserGameStatsResponse* other);
  friend void swap(CMsgAMGetUserGameStatsResponse& a, CMsgAMGetUserGameStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMGetUserGameStatsResponse* New() const final {
    return CreateMaybeMessage<CMsgAMGetUserGameStatsResponse>(nullptr);
  }

  CMsgAMGetUserGameStatsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMGetUserGameStatsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMGetUserGameStatsResponse& from);
  void MergeFrom(const CMsgAMGetUserGameStatsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMGetUserGameStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgAMGetUserGameStatsResponse_Stats Stats;
  typedef CMsgAMGetUserGameStatsResponse_Achievement_Blocks Achievement_Blocks;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgAMGetUserGameStatsResponse.Stats stats = 4;
  int stats_size() const;
  void clear_stats();
  static const int kStatsFieldNumber = 4;
  ::proto::dota::CMsgAMGetUserGameStatsResponse_Stats* mutable_stats(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMGetUserGameStatsResponse_Stats >*
      mutable_stats();
  const ::proto::dota::CMsgAMGetUserGameStatsResponse_Stats& stats(int index) const;
  ::proto::dota::CMsgAMGetUserGameStatsResponse_Stats* add_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMGetUserGameStatsResponse_Stats >&
      stats() const;

  // repeated .proto.dota.CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
  int achievement_blocks_size() const;
  void clear_achievement_blocks();
  static const int kAchievementBlocksFieldNumber = 5;
  ::proto::dota::CMsgAMGetUserGameStatsResponse_Achievement_Blocks* mutable_achievement_blocks(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMGetUserGameStatsResponse_Achievement_Blocks >*
      mutable_achievement_blocks();
  const ::proto::dota::CMsgAMGetUserGameStatsResponse_Achievement_Blocks& achievement_blocks(int index) const;
  ::proto::dota::CMsgAMGetUserGameStatsResponse_Achievement_Blocks* add_achievement_blocks();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMGetUserGameStatsResponse_Achievement_Blocks >&
      achievement_blocks() const;

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional fixed64 game_id = 2;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::uint64 game_id() const;
  void set_game_id(::google::protobuf::uint64 value);

  // optional int32 eresult = 3 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 3;
  ::google::protobuf::int32 eresult() const;
  void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMGetUserGameStatsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMGetUserGameStatsResponse_Stats > stats_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMGetUserGameStatsResponse_Achievement_Blocks > achievement_blocks_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint64 game_id_;
  ::google::protobuf::int32 eresult_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetCommandList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetCommandList) */ {
 public:
  CMsgGCGetCommandList();
  virtual ~CMsgGCGetCommandList();

  CMsgGCGetCommandList(const CMsgGCGetCommandList& from);

  inline CMsgGCGetCommandList& operator=(const CMsgGCGetCommandList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetCommandList(CMsgGCGetCommandList&& from) noexcept
    : CMsgGCGetCommandList() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetCommandList& operator=(CMsgGCGetCommandList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetCommandList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetCommandList* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetCommandList*>(
               &_CMsgGCGetCommandList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(CMsgGCGetCommandList* other);
  friend void swap(CMsgGCGetCommandList& a, CMsgGCGetCommandList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetCommandList* New() const final {
    return CreateMaybeMessage<CMsgGCGetCommandList>(nullptr);
  }

  CMsgGCGetCommandList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetCommandList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetCommandList& from);
  void MergeFrom(const CMsgGCGetCommandList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetCommandList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string command_prefix = 2;
  bool has_command_prefix() const;
  void clear_command_prefix();
  static const int kCommandPrefixFieldNumber = 2;
  const ::std::string& command_prefix() const;
  void set_command_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_command_prefix(::std::string&& value);
  #endif
  void set_command_prefix(const char* value);
  void set_command_prefix(const char* value, size_t size);
  ::std::string* mutable_command_prefix();
  ::std::string* release_command_prefix();
  void set_allocated_command_prefix(::std::string* command_prefix);

  // optional uint32 app_id = 1;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetCommandList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr command_prefix_;
  ::google::protobuf::uint32 app_id_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetCommandListResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetCommandListResponse) */ {
 public:
  CMsgGCGetCommandListResponse();
  virtual ~CMsgGCGetCommandListResponse();

  CMsgGCGetCommandListResponse(const CMsgGCGetCommandListResponse& from);

  inline CMsgGCGetCommandListResponse& operator=(const CMsgGCGetCommandListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetCommandListResponse(CMsgGCGetCommandListResponse&& from) noexcept
    : CMsgGCGetCommandListResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetCommandListResponse& operator=(CMsgGCGetCommandListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetCommandListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetCommandListResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetCommandListResponse*>(
               &_CMsgGCGetCommandListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(CMsgGCGetCommandListResponse* other);
  friend void swap(CMsgGCGetCommandListResponse& a, CMsgGCGetCommandListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetCommandListResponse* New() const final {
    return CreateMaybeMessage<CMsgGCGetCommandListResponse>(nullptr);
  }

  CMsgGCGetCommandListResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetCommandListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetCommandListResponse& from);
  void MergeFrom(const CMsgGCGetCommandListResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetCommandListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string command_name = 1;
  int command_name_size() const;
  void clear_command_name();
  static const int kCommandNameFieldNumber = 1;
  const ::std::string& command_name(int index) const;
  ::std::string* mutable_command_name(int index);
  void set_command_name(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_command_name(int index, ::std::string&& value);
  #endif
  void set_command_name(int index, const char* value);
  void set_command_name(int index, const char* value, size_t size);
  ::std::string* add_command_name();
  void add_command_name(const ::std::string& value);
  #if LANG_CXX11
  void add_command_name(::std::string&& value);
  #endif
  void add_command_name(const char* value);
  void add_command_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& command_name() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_command_name();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetCommandListResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> command_name_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedGet final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgMemCachedGet) */ {
 public:
  CGCMsgMemCachedGet();
  virtual ~CGCMsgMemCachedGet();

  CGCMsgMemCachedGet(const CGCMsgMemCachedGet& from);

  inline CGCMsgMemCachedGet& operator=(const CGCMsgMemCachedGet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgMemCachedGet(CGCMsgMemCachedGet&& from) noexcept
    : CGCMsgMemCachedGet() {
    *this = ::std::move(from);
  }

  inline CGCMsgMemCachedGet& operator=(CGCMsgMemCachedGet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgMemCachedGet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgMemCachedGet* internal_default_instance() {
    return reinterpret_cast<const CGCMsgMemCachedGet*>(
               &_CGCMsgMemCachedGet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(CGCMsgMemCachedGet* other);
  friend void swap(CGCMsgMemCachedGet& a, CGCMsgMemCachedGet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgMemCachedGet* New() const final {
    return CreateMaybeMessage<CGCMsgMemCachedGet>(nullptr);
  }

  CGCMsgMemCachedGet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgMemCachedGet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgMemCachedGet& from);
  void MergeFrom(const CGCMsgMemCachedGet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgMemCachedGet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string keys = 1;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 1;
  const ::std::string& keys(int index) const;
  ::std::string* mutable_keys(int index);
  void set_keys(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_keys(int index, ::std::string&& value);
  #endif
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, size_t size);
  ::std::string* add_keys();
  void add_keys(const ::std::string& value);
  #if LANG_CXX11
  void add_keys(::std::string&& value);
  #endif
  void add_keys(const char* value);
  void add_keys(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_keys();

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgMemCachedGet)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> keys_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedGetResponse_ValueTag final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgMemCachedGetResponse.ValueTag) */ {
 public:
  CGCMsgMemCachedGetResponse_ValueTag();
  virtual ~CGCMsgMemCachedGetResponse_ValueTag();

  CGCMsgMemCachedGetResponse_ValueTag(const CGCMsgMemCachedGetResponse_ValueTag& from);

  inline CGCMsgMemCachedGetResponse_ValueTag& operator=(const CGCMsgMemCachedGetResponse_ValueTag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgMemCachedGetResponse_ValueTag(CGCMsgMemCachedGetResponse_ValueTag&& from) noexcept
    : CGCMsgMemCachedGetResponse_ValueTag() {
    *this = ::std::move(from);
  }

  inline CGCMsgMemCachedGetResponse_ValueTag& operator=(CGCMsgMemCachedGetResponse_ValueTag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgMemCachedGetResponse_ValueTag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgMemCachedGetResponse_ValueTag* internal_default_instance() {
    return reinterpret_cast<const CGCMsgMemCachedGetResponse_ValueTag*>(
               &_CGCMsgMemCachedGetResponse_ValueTag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(CGCMsgMemCachedGetResponse_ValueTag* other);
  friend void swap(CGCMsgMemCachedGetResponse_ValueTag& a, CGCMsgMemCachedGetResponse_ValueTag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgMemCachedGetResponse_ValueTag* New() const final {
    return CreateMaybeMessage<CGCMsgMemCachedGetResponse_ValueTag>(nullptr);
  }

  CGCMsgMemCachedGetResponse_ValueTag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgMemCachedGetResponse_ValueTag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgMemCachedGetResponse_ValueTag& from);
  void MergeFrom(const CGCMsgMemCachedGetResponse_ValueTag& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgMemCachedGetResponse_ValueTag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional bool found = 1;
  bool has_found() const;
  void clear_found();
  static const int kFoundFieldNumber = 1;
  bool found() const;
  void set_found(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgMemCachedGetResponse.ValueTag)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  bool found_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedGetResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgMemCachedGetResponse) */ {
 public:
  CGCMsgMemCachedGetResponse();
  virtual ~CGCMsgMemCachedGetResponse();

  CGCMsgMemCachedGetResponse(const CGCMsgMemCachedGetResponse& from);

  inline CGCMsgMemCachedGetResponse& operator=(const CGCMsgMemCachedGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgMemCachedGetResponse(CGCMsgMemCachedGetResponse&& from) noexcept
    : CGCMsgMemCachedGetResponse() {
    *this = ::std::move(from);
  }

  inline CGCMsgMemCachedGetResponse& operator=(CGCMsgMemCachedGetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgMemCachedGetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgMemCachedGetResponse* internal_default_instance() {
    return reinterpret_cast<const CGCMsgMemCachedGetResponse*>(
               &_CGCMsgMemCachedGetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(CGCMsgMemCachedGetResponse* other);
  friend void swap(CGCMsgMemCachedGetResponse& a, CGCMsgMemCachedGetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgMemCachedGetResponse* New() const final {
    return CreateMaybeMessage<CGCMsgMemCachedGetResponse>(nullptr);
  }

  CGCMsgMemCachedGetResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgMemCachedGetResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgMemCachedGetResponse& from);
  void MergeFrom(const CGCMsgMemCachedGetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgMemCachedGetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CGCMsgMemCachedGetResponse_ValueTag ValueTag;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CGCMsgMemCachedGetResponse.ValueTag values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::proto::dota::CGCMsgMemCachedGetResponse_ValueTag* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CGCMsgMemCachedGetResponse_ValueTag >*
      mutable_values();
  const ::proto::dota::CGCMsgMemCachedGetResponse_ValueTag& values(int index) const;
  ::proto::dota::CGCMsgMemCachedGetResponse_ValueTag* add_values();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CGCMsgMemCachedGetResponse_ValueTag >&
      values() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgMemCachedGetResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CGCMsgMemCachedGetResponse_ValueTag > values_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedSet_KeyPair final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgMemCachedSet.KeyPair) */ {
 public:
  CGCMsgMemCachedSet_KeyPair();
  virtual ~CGCMsgMemCachedSet_KeyPair();

  CGCMsgMemCachedSet_KeyPair(const CGCMsgMemCachedSet_KeyPair& from);

  inline CGCMsgMemCachedSet_KeyPair& operator=(const CGCMsgMemCachedSet_KeyPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgMemCachedSet_KeyPair(CGCMsgMemCachedSet_KeyPair&& from) noexcept
    : CGCMsgMemCachedSet_KeyPair() {
    *this = ::std::move(from);
  }

  inline CGCMsgMemCachedSet_KeyPair& operator=(CGCMsgMemCachedSet_KeyPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgMemCachedSet_KeyPair& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgMemCachedSet_KeyPair* internal_default_instance() {
    return reinterpret_cast<const CGCMsgMemCachedSet_KeyPair*>(
               &_CGCMsgMemCachedSet_KeyPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(CGCMsgMemCachedSet_KeyPair* other);
  friend void swap(CGCMsgMemCachedSet_KeyPair& a, CGCMsgMemCachedSet_KeyPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgMemCachedSet_KeyPair* New() const final {
    return CreateMaybeMessage<CGCMsgMemCachedSet_KeyPair>(nullptr);
  }

  CGCMsgMemCachedSet_KeyPair* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgMemCachedSet_KeyPair>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgMemCachedSet_KeyPair& from);
  void MergeFrom(const CGCMsgMemCachedSet_KeyPair& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgMemCachedSet_KeyPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bytes value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgMemCachedSet.KeyPair)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedSet final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgMemCachedSet) */ {
 public:
  CGCMsgMemCachedSet();
  virtual ~CGCMsgMemCachedSet();

  CGCMsgMemCachedSet(const CGCMsgMemCachedSet& from);

  inline CGCMsgMemCachedSet& operator=(const CGCMsgMemCachedSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgMemCachedSet(CGCMsgMemCachedSet&& from) noexcept
    : CGCMsgMemCachedSet() {
    *this = ::std::move(from);
  }

  inline CGCMsgMemCachedSet& operator=(CGCMsgMemCachedSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgMemCachedSet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgMemCachedSet* internal_default_instance() {
    return reinterpret_cast<const CGCMsgMemCachedSet*>(
               &_CGCMsgMemCachedSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(CGCMsgMemCachedSet* other);
  friend void swap(CGCMsgMemCachedSet& a, CGCMsgMemCachedSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgMemCachedSet* New() const final {
    return CreateMaybeMessage<CGCMsgMemCachedSet>(nullptr);
  }

  CGCMsgMemCachedSet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgMemCachedSet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgMemCachedSet& from);
  void MergeFrom(const CGCMsgMemCachedSet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgMemCachedSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CGCMsgMemCachedSet_KeyPair KeyPair;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CGCMsgMemCachedSet.KeyPair keys = 1;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 1;
  ::proto::dota::CGCMsgMemCachedSet_KeyPair* mutable_keys(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CGCMsgMemCachedSet_KeyPair >*
      mutable_keys();
  const ::proto::dota::CGCMsgMemCachedSet_KeyPair& keys(int index) const;
  ::proto::dota::CGCMsgMemCachedSet_KeyPair* add_keys();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CGCMsgMemCachedSet_KeyPair >&
      keys() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgMemCachedSet)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CGCMsgMemCachedSet_KeyPair > keys_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedDelete final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgMemCachedDelete) */ {
 public:
  CGCMsgMemCachedDelete();
  virtual ~CGCMsgMemCachedDelete();

  CGCMsgMemCachedDelete(const CGCMsgMemCachedDelete& from);

  inline CGCMsgMemCachedDelete& operator=(const CGCMsgMemCachedDelete& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgMemCachedDelete(CGCMsgMemCachedDelete&& from) noexcept
    : CGCMsgMemCachedDelete() {
    *this = ::std::move(from);
  }

  inline CGCMsgMemCachedDelete& operator=(CGCMsgMemCachedDelete&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgMemCachedDelete& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgMemCachedDelete* internal_default_instance() {
    return reinterpret_cast<const CGCMsgMemCachedDelete*>(
               &_CGCMsgMemCachedDelete_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(CGCMsgMemCachedDelete* other);
  friend void swap(CGCMsgMemCachedDelete& a, CGCMsgMemCachedDelete& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgMemCachedDelete* New() const final {
    return CreateMaybeMessage<CGCMsgMemCachedDelete>(nullptr);
  }

  CGCMsgMemCachedDelete* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgMemCachedDelete>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgMemCachedDelete& from);
  void MergeFrom(const CGCMsgMemCachedDelete& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgMemCachedDelete* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string keys = 1;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 1;
  const ::std::string& keys(int index) const;
  ::std::string* mutable_keys(int index);
  void set_keys(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_keys(int index, ::std::string&& value);
  #endif
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, size_t size);
  ::std::string* add_keys();
  void add_keys(const ::std::string& value);
  #if LANG_CXX11
  void add_keys(::std::string&& value);
  #endif
  void add_keys(const char* value);
  void add_keys(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_keys();

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgMemCachedDelete)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> keys_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgMemCachedStats) */ {
 public:
  CGCMsgMemCachedStats();
  virtual ~CGCMsgMemCachedStats();

  CGCMsgMemCachedStats(const CGCMsgMemCachedStats& from);

  inline CGCMsgMemCachedStats& operator=(const CGCMsgMemCachedStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgMemCachedStats(CGCMsgMemCachedStats&& from) noexcept
    : CGCMsgMemCachedStats() {
    *this = ::std::move(from);
  }

  inline CGCMsgMemCachedStats& operator=(CGCMsgMemCachedStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgMemCachedStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgMemCachedStats* internal_default_instance() {
    return reinterpret_cast<const CGCMsgMemCachedStats*>(
               &_CGCMsgMemCachedStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(CGCMsgMemCachedStats* other);
  friend void swap(CGCMsgMemCachedStats& a, CGCMsgMemCachedStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgMemCachedStats* New() const final {
    return CreateMaybeMessage<CGCMsgMemCachedStats>(nullptr);
  }

  CGCMsgMemCachedStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgMemCachedStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgMemCachedStats& from);
  void MergeFrom(const CGCMsgMemCachedStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgMemCachedStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgMemCachedStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedStatsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgMemCachedStatsResponse) */ {
 public:
  CGCMsgMemCachedStatsResponse();
  virtual ~CGCMsgMemCachedStatsResponse();

  CGCMsgMemCachedStatsResponse(const CGCMsgMemCachedStatsResponse& from);

  inline CGCMsgMemCachedStatsResponse& operator=(const CGCMsgMemCachedStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgMemCachedStatsResponse(CGCMsgMemCachedStatsResponse&& from) noexcept
    : CGCMsgMemCachedStatsResponse() {
    *this = ::std::move(from);
  }

  inline CGCMsgMemCachedStatsResponse& operator=(CGCMsgMemCachedStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgMemCachedStatsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgMemCachedStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CGCMsgMemCachedStatsResponse*>(
               &_CGCMsgMemCachedStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(CGCMsgMemCachedStatsResponse* other);
  friend void swap(CGCMsgMemCachedStatsResponse& a, CGCMsgMemCachedStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgMemCachedStatsResponse* New() const final {
    return CreateMaybeMessage<CGCMsgMemCachedStatsResponse>(nullptr);
  }

  CGCMsgMemCachedStatsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgMemCachedStatsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgMemCachedStatsResponse& from);
  void MergeFrom(const CGCMsgMemCachedStatsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgMemCachedStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 curr_connections = 1;
  bool has_curr_connections() const;
  void clear_curr_connections();
  static const int kCurrConnectionsFieldNumber = 1;
  ::google::protobuf::uint64 curr_connections() const;
  void set_curr_connections(::google::protobuf::uint64 value);

  // optional uint64 cmd_get = 2;
  bool has_cmd_get() const;
  void clear_cmd_get();
  static const int kCmdGetFieldNumber = 2;
  ::google::protobuf::uint64 cmd_get() const;
  void set_cmd_get(::google::protobuf::uint64 value);

  // optional uint64 cmd_set = 3;
  bool has_cmd_set() const;
  void clear_cmd_set();
  static const int kCmdSetFieldNumber = 3;
  ::google::protobuf::uint64 cmd_set() const;
  void set_cmd_set(::google::protobuf::uint64 value);

  // optional uint64 cmd_flush = 4;
  bool has_cmd_flush() const;
  void clear_cmd_flush();
  static const int kCmdFlushFieldNumber = 4;
  ::google::protobuf::uint64 cmd_flush() const;
  void set_cmd_flush(::google::protobuf::uint64 value);

  // optional uint64 get_hits = 5;
  bool has_get_hits() const;
  void clear_get_hits();
  static const int kGetHitsFieldNumber = 5;
  ::google::protobuf::uint64 get_hits() const;
  void set_get_hits(::google::protobuf::uint64 value);

  // optional uint64 get_misses = 6;
  bool has_get_misses() const;
  void clear_get_misses();
  static const int kGetMissesFieldNumber = 6;
  ::google::protobuf::uint64 get_misses() const;
  void set_get_misses(::google::protobuf::uint64 value);

  // optional uint64 delete_hits = 7;
  bool has_delete_hits() const;
  void clear_delete_hits();
  static const int kDeleteHitsFieldNumber = 7;
  ::google::protobuf::uint64 delete_hits() const;
  void set_delete_hits(::google::protobuf::uint64 value);

  // optional uint64 delete_misses = 8;
  bool has_delete_misses() const;
  void clear_delete_misses();
  static const int kDeleteMissesFieldNumber = 8;
  ::google::protobuf::uint64 delete_misses() const;
  void set_delete_misses(::google::protobuf::uint64 value);

  // optional uint64 bytes_read = 9;
  bool has_bytes_read() const;
  void clear_bytes_read();
  static const int kBytesReadFieldNumber = 9;
  ::google::protobuf::uint64 bytes_read() const;
  void set_bytes_read(::google::protobuf::uint64 value);

  // optional uint64 bytes_written = 10;
  bool has_bytes_written() const;
  void clear_bytes_written();
  static const int kBytesWrittenFieldNumber = 10;
  ::google::protobuf::uint64 bytes_written() const;
  void set_bytes_written(::google::protobuf::uint64 value);

  // optional uint64 limit_maxbytes = 11;
  bool has_limit_maxbytes() const;
  void clear_limit_maxbytes();
  static const int kLimitMaxbytesFieldNumber = 11;
  ::google::protobuf::uint64 limit_maxbytes() const;
  void set_limit_maxbytes(::google::protobuf::uint64 value);

  // optional uint64 curr_items = 12;
  bool has_curr_items() const;
  void clear_curr_items();
  static const int kCurrItemsFieldNumber = 12;
  ::google::protobuf::uint64 curr_items() const;
  void set_curr_items(::google::protobuf::uint64 value);

  // optional uint64 evictions = 13;
  bool has_evictions() const;
  void clear_evictions();
  static const int kEvictionsFieldNumber = 13;
  ::google::protobuf::uint64 evictions() const;
  void set_evictions(::google::protobuf::uint64 value);

  // optional uint64 bytes = 14;
  bool has_bytes() const;
  void clear_bytes();
  static const int kBytesFieldNumber = 14;
  ::google::protobuf::uint64 bytes() const;
  void set_bytes(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgMemCachedStatsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 curr_connections_;
  ::google::protobuf::uint64 cmd_get_;
  ::google::protobuf::uint64 cmd_set_;
  ::google::protobuf::uint64 cmd_flush_;
  ::google::protobuf::uint64 get_hits_;
  ::google::protobuf::uint64 get_misses_;
  ::google::protobuf::uint64 delete_hits_;
  ::google::protobuf::uint64 delete_misses_;
  ::google::protobuf::uint64 bytes_read_;
  ::google::protobuf::uint64 bytes_written_;
  ::google::protobuf::uint64 limit_maxbytes_;
  ::google::protobuf::uint64 curr_items_;
  ::google::protobuf::uint64 evictions_;
  ::google::protobuf::uint64 bytes_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgSQLStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgSQLStats) */ {
 public:
  CGCMsgSQLStats();
  virtual ~CGCMsgSQLStats();

  CGCMsgSQLStats(const CGCMsgSQLStats& from);

  inline CGCMsgSQLStats& operator=(const CGCMsgSQLStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgSQLStats(CGCMsgSQLStats&& from) noexcept
    : CGCMsgSQLStats() {
    *this = ::std::move(from);
  }

  inline CGCMsgSQLStats& operator=(CGCMsgSQLStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgSQLStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgSQLStats* internal_default_instance() {
    return reinterpret_cast<const CGCMsgSQLStats*>(
               &_CGCMsgSQLStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(CGCMsgSQLStats* other);
  friend void swap(CGCMsgSQLStats& a, CGCMsgSQLStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgSQLStats* New() const final {
    return CreateMaybeMessage<CGCMsgSQLStats>(nullptr);
  }

  CGCMsgSQLStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgSQLStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgSQLStats& from);
  void MergeFrom(const CGCMsgSQLStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgSQLStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 schema_catalog = 1;
  bool has_schema_catalog() const;
  void clear_schema_catalog();
  static const int kSchemaCatalogFieldNumber = 1;
  ::google::protobuf::uint32 schema_catalog() const;
  void set_schema_catalog(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgSQLStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 schema_catalog_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgSQLStatsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgSQLStatsResponse) */ {
 public:
  CGCMsgSQLStatsResponse();
  virtual ~CGCMsgSQLStatsResponse();

  CGCMsgSQLStatsResponse(const CGCMsgSQLStatsResponse& from);

  inline CGCMsgSQLStatsResponse& operator=(const CGCMsgSQLStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgSQLStatsResponse(CGCMsgSQLStatsResponse&& from) noexcept
    : CGCMsgSQLStatsResponse() {
    *this = ::std::move(from);
  }

  inline CGCMsgSQLStatsResponse& operator=(CGCMsgSQLStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgSQLStatsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgSQLStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CGCMsgSQLStatsResponse*>(
               &_CGCMsgSQLStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(CGCMsgSQLStatsResponse* other);
  friend void swap(CGCMsgSQLStatsResponse& a, CGCMsgSQLStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgSQLStatsResponse* New() const final {
    return CreateMaybeMessage<CGCMsgSQLStatsResponse>(nullptr);
  }

  CGCMsgSQLStatsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgSQLStatsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgSQLStatsResponse& from);
  void MergeFrom(const CGCMsgSQLStatsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgSQLStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 threads = 1;
  bool has_threads() const;
  void clear_threads();
  static const int kThreadsFieldNumber = 1;
  ::google::protobuf::uint32 threads() const;
  void set_threads(::google::protobuf::uint32 value);

  // optional uint32 threads_connected = 2;
  bool has_threads_connected() const;
  void clear_threads_connected();
  static const int kThreadsConnectedFieldNumber = 2;
  ::google::protobuf::uint32 threads_connected() const;
  void set_threads_connected(::google::protobuf::uint32 value);

  // optional uint32 threads_active = 3;
  bool has_threads_active() const;
  void clear_threads_active();
  static const int kThreadsActiveFieldNumber = 3;
  ::google::protobuf::uint32 threads_active() const;
  void set_threads_active(::google::protobuf::uint32 value);

  // optional uint32 operations_submitted = 4;
  bool has_operations_submitted() const;
  void clear_operations_submitted();
  static const int kOperationsSubmittedFieldNumber = 4;
  ::google::protobuf::uint32 operations_submitted() const;
  void set_operations_submitted(::google::protobuf::uint32 value);

  // optional uint32 prepared_statements_executed = 5;
  bool has_prepared_statements_executed() const;
  void clear_prepared_statements_executed();
  static const int kPreparedStatementsExecutedFieldNumber = 5;
  ::google::protobuf::uint32 prepared_statements_executed() const;
  void set_prepared_statements_executed(::google::protobuf::uint32 value);

  // optional uint32 non_prepared_statements_executed = 6;
  bool has_non_prepared_statements_executed() const;
  void clear_non_prepared_statements_executed();
  static const int kNonPreparedStatementsExecutedFieldNumber = 6;
  ::google::protobuf::uint32 non_prepared_statements_executed() const;
  void set_non_prepared_statements_executed(::google::protobuf::uint32 value);

  // optional uint32 deadlock_retries = 7;
  bool has_deadlock_retries() const;
  void clear_deadlock_retries();
  static const int kDeadlockRetriesFieldNumber = 7;
  ::google::protobuf::uint32 deadlock_retries() const;
  void set_deadlock_retries(::google::protobuf::uint32 value);

  // optional uint32 operations_timed_out_in_queue = 8;
  bool has_operations_timed_out_in_queue() const;
  void clear_operations_timed_out_in_queue();
  static const int kOperationsTimedOutInQueueFieldNumber = 8;
  ::google::protobuf::uint32 operations_timed_out_in_queue() const;
  void set_operations_timed_out_in_queue(::google::protobuf::uint32 value);

  // optional uint32 errors = 9;
  bool has_errors() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 9;
  ::google::protobuf::uint32 errors() const;
  void set_errors(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgSQLStatsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 threads_;
  ::google::protobuf::uint32 threads_connected_;
  ::google::protobuf::uint32 threads_active_;
  ::google::protobuf::uint32 operations_submitted_;
  ::google::protobuf::uint32 prepared_statements_executed_;
  ::google::protobuf::uint32 non_prepared_statements_executed_;
  ::google::protobuf::uint32 deadlock_retries_;
  ::google::protobuf::uint32 operations_timed_out_in_queue_;
  ::google::protobuf::uint32 errors_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMAddFreeLicense final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMAddFreeLicense) */ {
 public:
  CMsgAMAddFreeLicense();
  virtual ~CMsgAMAddFreeLicense();

  CMsgAMAddFreeLicense(const CMsgAMAddFreeLicense& from);

  inline CMsgAMAddFreeLicense& operator=(const CMsgAMAddFreeLicense& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMAddFreeLicense(CMsgAMAddFreeLicense&& from) noexcept
    : CMsgAMAddFreeLicense() {
    *this = ::std::move(from);
  }

  inline CMsgAMAddFreeLicense& operator=(CMsgAMAddFreeLicense&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMAddFreeLicense& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMAddFreeLicense* internal_default_instance() {
    return reinterpret_cast<const CMsgAMAddFreeLicense*>(
               &_CMsgAMAddFreeLicense_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(CMsgAMAddFreeLicense* other);
  friend void swap(CMsgAMAddFreeLicense& a, CMsgAMAddFreeLicense& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMAddFreeLicense* New() const final {
    return CreateMaybeMessage<CMsgAMAddFreeLicense>(nullptr);
  }

  CMsgAMAddFreeLicense* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMAddFreeLicense>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMAddFreeLicense& from);
  void MergeFrom(const CMsgAMAddFreeLicense& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMAddFreeLicense* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string store_country_code = 4;
  bool has_store_country_code() const;
  void clear_store_country_code();
  static const int kStoreCountryCodeFieldNumber = 4;
  const ::std::string& store_country_code() const;
  void set_store_country_code(const ::std::string& value);
  #if LANG_CXX11
  void set_store_country_code(::std::string&& value);
  #endif
  void set_store_country_code(const char* value);
  void set_store_country_code(const char* value, size_t size);
  ::std::string* mutable_store_country_code();
  ::std::string* release_store_country_code();
  void set_allocated_store_country_code(::std::string* store_country_code);

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 ip_public = 2;
  bool has_ip_public() const;
  void clear_ip_public();
  static const int kIpPublicFieldNumber = 2;
  ::google::protobuf::uint32 ip_public() const;
  void set_ip_public(::google::protobuf::uint32 value);

  // optional uint32 packageid = 3;
  bool has_packageid() const;
  void clear_packageid();
  static const int kPackageidFieldNumber = 3;
  ::google::protobuf::uint32 packageid() const;
  void set_packageid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMAddFreeLicense)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr store_country_code_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 ip_public_;
  ::google::protobuf::uint32 packageid_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMAddFreeLicenseResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMAddFreeLicenseResponse) */ {
 public:
  CMsgAMAddFreeLicenseResponse();
  virtual ~CMsgAMAddFreeLicenseResponse();

  CMsgAMAddFreeLicenseResponse(const CMsgAMAddFreeLicenseResponse& from);

  inline CMsgAMAddFreeLicenseResponse& operator=(const CMsgAMAddFreeLicenseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMAddFreeLicenseResponse(CMsgAMAddFreeLicenseResponse&& from) noexcept
    : CMsgAMAddFreeLicenseResponse() {
    *this = ::std::move(from);
  }

  inline CMsgAMAddFreeLicenseResponse& operator=(CMsgAMAddFreeLicenseResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMAddFreeLicenseResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMAddFreeLicenseResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgAMAddFreeLicenseResponse*>(
               &_CMsgAMAddFreeLicenseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(CMsgAMAddFreeLicenseResponse* other);
  friend void swap(CMsgAMAddFreeLicenseResponse& a, CMsgAMAddFreeLicenseResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMAddFreeLicenseResponse* New() const final {
    return CreateMaybeMessage<CMsgAMAddFreeLicenseResponse>(nullptr);
  }

  CMsgAMAddFreeLicenseResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMAddFreeLicenseResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMAddFreeLicenseResponse& from);
  void MergeFrom(const CMsgAMAddFreeLicenseResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMAddFreeLicenseResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 transid = 3;
  bool has_transid() const;
  void clear_transid();
  static const int kTransidFieldNumber = 3;
  ::google::protobuf::uint64 transid() const;
  void set_transid(::google::protobuf::uint64 value);

  // optional int32 purchase_result_detail = 2;
  bool has_purchase_result_detail() const;
  void clear_purchase_result_detail();
  static const int kPurchaseResultDetailFieldNumber = 2;
  ::google::protobuf::int32 purchase_result_detail() const;
  void set_purchase_result_detail(::google::protobuf::int32 value);

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::int32 eresult() const;
  void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMAddFreeLicenseResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 transid_;
  ::google::protobuf::int32 purchase_result_detail_;
  ::google::protobuf::int32 eresult_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgGetIPLocation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgGetIPLocation) */ {
 public:
  CGCMsgGetIPLocation();
  virtual ~CGCMsgGetIPLocation();

  CGCMsgGetIPLocation(const CGCMsgGetIPLocation& from);

  inline CGCMsgGetIPLocation& operator=(const CGCMsgGetIPLocation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgGetIPLocation(CGCMsgGetIPLocation&& from) noexcept
    : CGCMsgGetIPLocation() {
    *this = ::std::move(from);
  }

  inline CGCMsgGetIPLocation& operator=(CGCMsgGetIPLocation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgGetIPLocation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgGetIPLocation* internal_default_instance() {
    return reinterpret_cast<const CGCMsgGetIPLocation*>(
               &_CGCMsgGetIPLocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(CGCMsgGetIPLocation* other);
  friend void swap(CGCMsgGetIPLocation& a, CGCMsgGetIPLocation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgGetIPLocation* New() const final {
    return CreateMaybeMessage<CGCMsgGetIPLocation>(nullptr);
  }

  CGCMsgGetIPLocation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgGetIPLocation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgGetIPLocation& from);
  void MergeFrom(const CGCMsgGetIPLocation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgGetIPLocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 ips = 1;
  int ips_size() const;
  void clear_ips();
  static const int kIpsFieldNumber = 1;
  ::google::protobuf::uint32 ips(int index) const;
  void set_ips(int index, ::google::protobuf::uint32 value);
  void add_ips(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ips() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ips();

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgGetIPLocation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ips_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CIPLocationInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CIPLocationInfo) */ {
 public:
  CIPLocationInfo();
  virtual ~CIPLocationInfo();

  CIPLocationInfo(const CIPLocationInfo& from);

  inline CIPLocationInfo& operator=(const CIPLocationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CIPLocationInfo(CIPLocationInfo&& from) noexcept
    : CIPLocationInfo() {
    *this = ::std::move(from);
  }

  inline CIPLocationInfo& operator=(CIPLocationInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CIPLocationInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CIPLocationInfo* internal_default_instance() {
    return reinterpret_cast<const CIPLocationInfo*>(
               &_CIPLocationInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(CIPLocationInfo* other);
  friend void swap(CIPLocationInfo& a, CIPLocationInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CIPLocationInfo* New() const final {
    return CreateMaybeMessage<CIPLocationInfo>(nullptr);
  }

  CIPLocationInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CIPLocationInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CIPLocationInfo& from);
  void MergeFrom(const CIPLocationInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CIPLocationInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string country = 4;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 4;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  #if LANG_CXX11
  void set_country(::std::string&& value);
  #endif
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // optional string state = 5;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 5;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const char* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // optional string city = 6;
  bool has_city() const;
  void clear_city();
  static const int kCityFieldNumber = 6;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // optional uint32 ip = 1;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // optional float latitude = 2;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  float latitude() const;
  void set_latitude(float value);

  // optional float longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  float longitude() const;
  void set_longitude(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CIPLocationInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::uint32 ip_;
  float latitude_;
  float longitude_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgGetIPLocationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgGetIPLocationResponse) */ {
 public:
  CGCMsgGetIPLocationResponse();
  virtual ~CGCMsgGetIPLocationResponse();

  CGCMsgGetIPLocationResponse(const CGCMsgGetIPLocationResponse& from);

  inline CGCMsgGetIPLocationResponse& operator=(const CGCMsgGetIPLocationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgGetIPLocationResponse(CGCMsgGetIPLocationResponse&& from) noexcept
    : CGCMsgGetIPLocationResponse() {
    *this = ::std::move(from);
  }

  inline CGCMsgGetIPLocationResponse& operator=(CGCMsgGetIPLocationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgGetIPLocationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgGetIPLocationResponse* internal_default_instance() {
    return reinterpret_cast<const CGCMsgGetIPLocationResponse*>(
               &_CGCMsgGetIPLocationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(CGCMsgGetIPLocationResponse* other);
  friend void swap(CGCMsgGetIPLocationResponse& a, CGCMsgGetIPLocationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgGetIPLocationResponse* New() const final {
    return CreateMaybeMessage<CGCMsgGetIPLocationResponse>(nullptr);
  }

  CGCMsgGetIPLocationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgGetIPLocationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgGetIPLocationResponse& from);
  void MergeFrom(const CGCMsgGetIPLocationResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgGetIPLocationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CIPLocationInfo infos = 1;
  int infos_size() const;
  void clear_infos();
  static const int kInfosFieldNumber = 1;
  ::proto::dota::CIPLocationInfo* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CIPLocationInfo >*
      mutable_infos();
  const ::proto::dota::CIPLocationInfo& infos(int index) const;
  ::proto::dota::CIPLocationInfo* add_infos();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CIPLocationInfo >&
      infos() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgGetIPLocationResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CIPLocationInfo > infos_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgGetIPASN final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgGetIPASN) */ {
 public:
  CGCMsgGetIPASN();
  virtual ~CGCMsgGetIPASN();

  CGCMsgGetIPASN(const CGCMsgGetIPASN& from);

  inline CGCMsgGetIPASN& operator=(const CGCMsgGetIPASN& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgGetIPASN(CGCMsgGetIPASN&& from) noexcept
    : CGCMsgGetIPASN() {
    *this = ::std::move(from);
  }

  inline CGCMsgGetIPASN& operator=(CGCMsgGetIPASN&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgGetIPASN& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgGetIPASN* internal_default_instance() {
    return reinterpret_cast<const CGCMsgGetIPASN*>(
               &_CGCMsgGetIPASN_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(CGCMsgGetIPASN* other);
  friend void swap(CGCMsgGetIPASN& a, CGCMsgGetIPASN& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgGetIPASN* New() const final {
    return CreateMaybeMessage<CGCMsgGetIPASN>(nullptr);
  }

  CGCMsgGetIPASN* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgGetIPASN>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgGetIPASN& from);
  void MergeFrom(const CGCMsgGetIPASN& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgGetIPASN* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 ips = 1;
  int ips_size() const;
  void clear_ips();
  static const int kIpsFieldNumber = 1;
  ::google::protobuf::uint32 ips(int index) const;
  void set_ips(int index, ::google::protobuf::uint32 value);
  void add_ips(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ips() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ips();

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgGetIPASN)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ips_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CIPASNInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CIPASNInfo) */ {
 public:
  CIPASNInfo();
  virtual ~CIPASNInfo();

  CIPASNInfo(const CIPASNInfo& from);

  inline CIPASNInfo& operator=(const CIPASNInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CIPASNInfo(CIPASNInfo&& from) noexcept
    : CIPASNInfo() {
    *this = ::std::move(from);
  }

  inline CIPASNInfo& operator=(CIPASNInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CIPASNInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CIPASNInfo* internal_default_instance() {
    return reinterpret_cast<const CIPASNInfo*>(
               &_CIPASNInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(CIPASNInfo* other);
  friend void swap(CIPASNInfo& a, CIPASNInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CIPASNInfo* New() const final {
    return CreateMaybeMessage<CIPASNInfo>(nullptr);
  }

  CIPASNInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CIPASNInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CIPASNInfo& from);
  void MergeFrom(const CIPASNInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CIPASNInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 ip = 1;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // optional uint32 asn = 2;
  bool has_asn() const;
  void clear_asn();
  static const int kAsnFieldNumber = 2;
  ::google::protobuf::uint32 asn() const;
  void set_asn(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CIPASNInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 asn_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgGetIPASNResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgGetIPASNResponse) */ {
 public:
  CGCMsgGetIPASNResponse();
  virtual ~CGCMsgGetIPASNResponse();

  CGCMsgGetIPASNResponse(const CGCMsgGetIPASNResponse& from);

  inline CGCMsgGetIPASNResponse& operator=(const CGCMsgGetIPASNResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgGetIPASNResponse(CGCMsgGetIPASNResponse&& from) noexcept
    : CGCMsgGetIPASNResponse() {
    *this = ::std::move(from);
  }

  inline CGCMsgGetIPASNResponse& operator=(CGCMsgGetIPASNResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgGetIPASNResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgGetIPASNResponse* internal_default_instance() {
    return reinterpret_cast<const CGCMsgGetIPASNResponse*>(
               &_CGCMsgGetIPASNResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(CGCMsgGetIPASNResponse* other);
  friend void swap(CGCMsgGetIPASNResponse& a, CGCMsgGetIPASNResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgGetIPASNResponse* New() const final {
    return CreateMaybeMessage<CGCMsgGetIPASNResponse>(nullptr);
  }

  CGCMsgGetIPASNResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgGetIPASNResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgGetIPASNResponse& from);
  void MergeFrom(const CGCMsgGetIPASNResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgGetIPASNResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CIPASNInfo infos = 1;
  int infos_size() const;
  void clear_infos();
  static const int kInfosFieldNumber = 1;
  ::proto::dota::CIPASNInfo* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CIPASNInfo >*
      mutable_infos();
  const ::proto::dota::CIPASNInfo& infos(int index) const;
  ::proto::dota::CIPASNInfo* add_infos();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CIPASNInfo >&
      infos() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgGetIPASNResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CIPASNInfo > infos_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgSystemStatsSchema final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgSystemStatsSchema) */ {
 public:
  CGCMsgSystemStatsSchema();
  virtual ~CGCMsgSystemStatsSchema();

  CGCMsgSystemStatsSchema(const CGCMsgSystemStatsSchema& from);

  inline CGCMsgSystemStatsSchema& operator=(const CGCMsgSystemStatsSchema& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgSystemStatsSchema(CGCMsgSystemStatsSchema&& from) noexcept
    : CGCMsgSystemStatsSchema() {
    *this = ::std::move(from);
  }

  inline CGCMsgSystemStatsSchema& operator=(CGCMsgSystemStatsSchema&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgSystemStatsSchema& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgSystemStatsSchema* internal_default_instance() {
    return reinterpret_cast<const CGCMsgSystemStatsSchema*>(
               &_CGCMsgSystemStatsSchema_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(CGCMsgSystemStatsSchema* other);
  friend void swap(CGCMsgSystemStatsSchema& a, CGCMsgSystemStatsSchema& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgSystemStatsSchema* New() const final {
    return CreateMaybeMessage<CGCMsgSystemStatsSchema>(nullptr);
  }

  CGCMsgSystemStatsSchema* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgSystemStatsSchema>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgSystemStatsSchema& from);
  void MergeFrom(const CGCMsgSystemStatsSchema& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgSystemStatsSchema* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes schema_kv = 2;
  bool has_schema_kv() const;
  void clear_schema_kv();
  static const int kSchemaKvFieldNumber = 2;
  const ::std::string& schema_kv() const;
  void set_schema_kv(const ::std::string& value);
  #if LANG_CXX11
  void set_schema_kv(::std::string&& value);
  #endif
  void set_schema_kv(const char* value);
  void set_schema_kv(const void* value, size_t size);
  ::std::string* mutable_schema_kv();
  ::std::string* release_schema_kv();
  void set_allocated_schema_kv(::std::string* schema_kv);

  // optional uint32 gc_app_id = 1;
  bool has_gc_app_id() const;
  void clear_gc_app_id();
  static const int kGcAppIdFieldNumber = 1;
  ::google::protobuf::uint32 gc_app_id() const;
  void set_gc_app_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgSystemStatsSchema)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr schema_kv_;
  ::google::protobuf::uint32 gc_app_id_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgGetSystemStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgGetSystemStats) */ {
 public:
  CGCMsgGetSystemStats();
  virtual ~CGCMsgGetSystemStats();

  CGCMsgGetSystemStats(const CGCMsgGetSystemStats& from);

  inline CGCMsgGetSystemStats& operator=(const CGCMsgGetSystemStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgGetSystemStats(CGCMsgGetSystemStats&& from) noexcept
    : CGCMsgGetSystemStats() {
    *this = ::std::move(from);
  }

  inline CGCMsgGetSystemStats& operator=(CGCMsgGetSystemStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgGetSystemStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgGetSystemStats* internal_default_instance() {
    return reinterpret_cast<const CGCMsgGetSystemStats*>(
               &_CGCMsgGetSystemStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(CGCMsgGetSystemStats* other);
  friend void swap(CGCMsgGetSystemStats& a, CGCMsgGetSystemStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgGetSystemStats* New() const final {
    return CreateMaybeMessage<CGCMsgGetSystemStats>(nullptr);
  }

  CGCMsgGetSystemStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgGetSystemStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgGetSystemStats& from);
  void MergeFrom(const CGCMsgGetSystemStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgGetSystemStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgGetSystemStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgGetSystemStatsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCMsgGetSystemStatsResponse) */ {
 public:
  CGCMsgGetSystemStatsResponse();
  virtual ~CGCMsgGetSystemStatsResponse();

  CGCMsgGetSystemStatsResponse(const CGCMsgGetSystemStatsResponse& from);

  inline CGCMsgGetSystemStatsResponse& operator=(const CGCMsgGetSystemStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgGetSystemStatsResponse(CGCMsgGetSystemStatsResponse&& from) noexcept
    : CGCMsgGetSystemStatsResponse() {
    *this = ::std::move(from);
  }

  inline CGCMsgGetSystemStatsResponse& operator=(CGCMsgGetSystemStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCMsgGetSystemStatsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgGetSystemStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CGCMsgGetSystemStatsResponse*>(
               &_CGCMsgGetSystemStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(CGCMsgGetSystemStatsResponse* other);
  friend void swap(CGCMsgGetSystemStatsResponse& a, CGCMsgGetSystemStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgGetSystemStatsResponse* New() const final {
    return CreateMaybeMessage<CGCMsgGetSystemStatsResponse>(nullptr);
  }

  CGCMsgGetSystemStatsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgGetSystemStatsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCMsgGetSystemStatsResponse& from);
  void MergeFrom(const CGCMsgGetSystemStatsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgGetSystemStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes stats_kv = 2;
  bool has_stats_kv() const;
  void clear_stats_kv();
  static const int kStatsKvFieldNumber = 2;
  const ::std::string& stats_kv() const;
  void set_stats_kv(const ::std::string& value);
  #if LANG_CXX11
  void set_stats_kv(::std::string&& value);
  #endif
  void set_stats_kv(const char* value);
  void set_stats_kv(const void* value, size_t size);
  ::std::string* mutable_stats_kv();
  ::std::string* release_stats_kv();
  void set_allocated_stats_kv(::std::string* stats_kv);

  // optional uint32 gc_app_id = 1;
  bool has_gc_app_id() const;
  void clear_gc_app_id();
  static const int kGcAppIdFieldNumber = 1;
  ::google::protobuf::uint32 gc_app_id() const;
  void set_gc_app_id(::google::protobuf::uint32 value);

  // optional uint32 active_jobs = 3;
  bool has_active_jobs() const;
  void clear_active_jobs();
  static const int kActiveJobsFieldNumber = 3;
  ::google::protobuf::uint32 active_jobs() const;
  void set_active_jobs(::google::protobuf::uint32 value);

  // optional uint32 yielding_jobs = 4;
  bool has_yielding_jobs() const;
  void clear_yielding_jobs();
  static const int kYieldingJobsFieldNumber = 4;
  ::google::protobuf::uint32 yielding_jobs() const;
  void set_yielding_jobs(::google::protobuf::uint32 value);

  // optional uint32 user_sessions = 5;
  bool has_user_sessions() const;
  void clear_user_sessions();
  static const int kUserSessionsFieldNumber = 5;
  ::google::protobuf::uint32 user_sessions() const;
  void set_user_sessions(::google::protobuf::uint32 value);

  // optional uint32 game_server_sessions = 6;
  bool has_game_server_sessions() const;
  void clear_game_server_sessions();
  static const int kGameServerSessionsFieldNumber = 6;
  ::google::protobuf::uint32 game_server_sessions() const;
  void set_game_server_sessions(::google::protobuf::uint32 value);

  // optional uint32 socaches = 7;
  bool has_socaches() const;
  void clear_socaches();
  static const int kSocachesFieldNumber = 7;
  ::google::protobuf::uint32 socaches() const;
  void set_socaches(::google::protobuf::uint32 value);

  // optional uint32 socaches_to_unload = 8;
  bool has_socaches_to_unload() const;
  void clear_socaches_to_unload();
  static const int kSocachesToUnloadFieldNumber = 8;
  ::google::protobuf::uint32 socaches_to_unload() const;
  void set_socaches_to_unload(::google::protobuf::uint32 value);

  // optional uint32 socaches_loading = 9;
  bool has_socaches_loading() const;
  void clear_socaches_loading();
  static const int kSocachesLoadingFieldNumber = 9;
  ::google::protobuf::uint32 socaches_loading() const;
  void set_socaches_loading(::google::protobuf::uint32 value);

  // optional uint32 writeback_queue = 10;
  bool has_writeback_queue() const;
  void clear_writeback_queue();
  static const int kWritebackQueueFieldNumber = 10;
  ::google::protobuf::uint32 writeback_queue() const;
  void set_writeback_queue(::google::protobuf::uint32 value);

  // optional uint32 steamid_locks = 11;
  bool has_steamid_locks() const;
  void clear_steamid_locks();
  static const int kSteamidLocksFieldNumber = 11;
  ::google::protobuf::uint32 steamid_locks() const;
  void set_steamid_locks(::google::protobuf::uint32 value);

  // optional uint32 logon_queue = 12;
  bool has_logon_queue() const;
  void clear_logon_queue();
  static const int kLogonQueueFieldNumber = 12;
  ::google::protobuf::uint32 logon_queue() const;
  void set_logon_queue(::google::protobuf::uint32 value);

  // optional uint32 logon_jobs = 13;
  bool has_logon_jobs() const;
  void clear_logon_jobs();
  static const int kLogonJobsFieldNumber = 13;
  ::google::protobuf::uint32 logon_jobs() const;
  void set_logon_jobs(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CGCMsgGetSystemStatsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr stats_kv_;
  ::google::protobuf::uint32 gc_app_id_;
  ::google::protobuf::uint32 active_jobs_;
  ::google::protobuf::uint32 yielding_jobs_;
  ::google::protobuf::uint32 user_sessions_;
  ::google::protobuf::uint32 game_server_sessions_;
  ::google::protobuf::uint32 socaches_;
  ::google::protobuf::uint32 socaches_to_unload_;
  ::google::protobuf::uint32 socaches_loading_;
  ::google::protobuf::uint32 writeback_queue_;
  ::google::protobuf::uint32 steamid_locks_;
  ::google::protobuf::uint32 logon_queue_;
  ::google::protobuf::uint32 logon_jobs_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMSendEmail_ReplacementToken final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMSendEmail.ReplacementToken) */ {
 public:
  CMsgAMSendEmail_ReplacementToken();
  virtual ~CMsgAMSendEmail_ReplacementToken();

  CMsgAMSendEmail_ReplacementToken(const CMsgAMSendEmail_ReplacementToken& from);

  inline CMsgAMSendEmail_ReplacementToken& operator=(const CMsgAMSendEmail_ReplacementToken& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMSendEmail_ReplacementToken(CMsgAMSendEmail_ReplacementToken&& from) noexcept
    : CMsgAMSendEmail_ReplacementToken() {
    *this = ::std::move(from);
  }

  inline CMsgAMSendEmail_ReplacementToken& operator=(CMsgAMSendEmail_ReplacementToken&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMSendEmail_ReplacementToken& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMSendEmail_ReplacementToken* internal_default_instance() {
    return reinterpret_cast<const CMsgAMSendEmail_ReplacementToken*>(
               &_CMsgAMSendEmail_ReplacementToken_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(CMsgAMSendEmail_ReplacementToken* other);
  friend void swap(CMsgAMSendEmail_ReplacementToken& a, CMsgAMSendEmail_ReplacementToken& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMSendEmail_ReplacementToken* New() const final {
    return CreateMaybeMessage<CMsgAMSendEmail_ReplacementToken>(nullptr);
  }

  CMsgAMSendEmail_ReplacementToken* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMSendEmail_ReplacementToken>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMSendEmail_ReplacementToken& from);
  void MergeFrom(const CMsgAMSendEmail_ReplacementToken& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMSendEmail_ReplacementToken* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string token_name = 1;
  bool has_token_name() const;
  void clear_token_name();
  static const int kTokenNameFieldNumber = 1;
  const ::std::string& token_name() const;
  void set_token_name(const ::std::string& value);
  #if LANG_CXX11
  void set_token_name(::std::string&& value);
  #endif
  void set_token_name(const char* value);
  void set_token_name(const char* value, size_t size);
  ::std::string* mutable_token_name();
  ::std::string* release_token_name();
  void set_allocated_token_name(::std::string* token_name);

  // optional string token_value = 2;
  bool has_token_value() const;
  void clear_token_value();
  static const int kTokenValueFieldNumber = 2;
  const ::std::string& token_value() const;
  void set_token_value(const ::std::string& value);
  #if LANG_CXX11
  void set_token_value(::std::string&& value);
  #endif
  void set_token_value(const char* value);
  void set_token_value(const char* value, size_t size);
  ::std::string* mutable_token_value();
  ::std::string* release_token_value();
  void set_allocated_token_value(::std::string* token_value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMSendEmail.ReplacementToken)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_name_;
  ::google::protobuf::internal::ArenaStringPtr token_value_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMSendEmail_PersonaNameReplacementToken final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken) */ {
 public:
  CMsgAMSendEmail_PersonaNameReplacementToken();
  virtual ~CMsgAMSendEmail_PersonaNameReplacementToken();

  CMsgAMSendEmail_PersonaNameReplacementToken(const CMsgAMSendEmail_PersonaNameReplacementToken& from);

  inline CMsgAMSendEmail_PersonaNameReplacementToken& operator=(const CMsgAMSendEmail_PersonaNameReplacementToken& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMSendEmail_PersonaNameReplacementToken(CMsgAMSendEmail_PersonaNameReplacementToken&& from) noexcept
    : CMsgAMSendEmail_PersonaNameReplacementToken() {
    *this = ::std::move(from);
  }

  inline CMsgAMSendEmail_PersonaNameReplacementToken& operator=(CMsgAMSendEmail_PersonaNameReplacementToken&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMSendEmail_PersonaNameReplacementToken& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMSendEmail_PersonaNameReplacementToken* internal_default_instance() {
    return reinterpret_cast<const CMsgAMSendEmail_PersonaNameReplacementToken*>(
               &_CMsgAMSendEmail_PersonaNameReplacementToken_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(CMsgAMSendEmail_PersonaNameReplacementToken* other);
  friend void swap(CMsgAMSendEmail_PersonaNameReplacementToken& a, CMsgAMSendEmail_PersonaNameReplacementToken& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMSendEmail_PersonaNameReplacementToken* New() const final {
    return CreateMaybeMessage<CMsgAMSendEmail_PersonaNameReplacementToken>(nullptr);
  }

  CMsgAMSendEmail_PersonaNameReplacementToken* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMSendEmail_PersonaNameReplacementToken>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMSendEmail_PersonaNameReplacementToken& from);
  void MergeFrom(const CMsgAMSendEmail_PersonaNameReplacementToken& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMSendEmail_PersonaNameReplacementToken* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string token_name = 2;
  bool has_token_name() const;
  void clear_token_name();
  static const int kTokenNameFieldNumber = 2;
  const ::std::string& token_name() const;
  void set_token_name(const ::std::string& value);
  #if LANG_CXX11
  void set_token_name(::std::string&& value);
  #endif
  void set_token_name(const char* value);
  void set_token_name(const char* value, size_t size);
  ::std::string* mutable_token_name();
  ::std::string* release_token_name();
  void set_allocated_token_name(::std::string* token_name);

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_name_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMSendEmail final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMSendEmail) */ {
 public:
  CMsgAMSendEmail();
  virtual ~CMsgAMSendEmail();

  CMsgAMSendEmail(const CMsgAMSendEmail& from);

  inline CMsgAMSendEmail& operator=(const CMsgAMSendEmail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMSendEmail(CMsgAMSendEmail&& from) noexcept
    : CMsgAMSendEmail() {
    *this = ::std::move(from);
  }

  inline CMsgAMSendEmail& operator=(CMsgAMSendEmail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMSendEmail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMSendEmail* internal_default_instance() {
    return reinterpret_cast<const CMsgAMSendEmail*>(
               &_CMsgAMSendEmail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(CMsgAMSendEmail* other);
  friend void swap(CMsgAMSendEmail& a, CMsgAMSendEmail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMSendEmail* New() const final {
    return CreateMaybeMessage<CMsgAMSendEmail>(nullptr);
  }

  CMsgAMSendEmail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMSendEmail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMSendEmail& from);
  void MergeFrom(const CMsgAMSendEmail& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMSendEmail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgAMSendEmail_ReplacementToken ReplacementToken;
  typedef CMsgAMSendEmail_PersonaNameReplacementToken PersonaNameReplacementToken;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
  int persona_name_tokens_size() const;
  void clear_persona_name_tokens();
  static const int kPersonaNameTokensFieldNumber = 5;
  ::proto::dota::CMsgAMSendEmail_PersonaNameReplacementToken* mutable_persona_name_tokens(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMSendEmail_PersonaNameReplacementToken >*
      mutable_persona_name_tokens();
  const ::proto::dota::CMsgAMSendEmail_PersonaNameReplacementToken& persona_name_tokens(int index) const;
  ::proto::dota::CMsgAMSendEmail_PersonaNameReplacementToken* add_persona_name_tokens();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMSendEmail_PersonaNameReplacementToken >&
      persona_name_tokens() const;

  // repeated .proto.dota.CMsgAMSendEmail.ReplacementToken tokens = 7;
  int tokens_size() const;
  void clear_tokens();
  static const int kTokensFieldNumber = 7;
  ::proto::dota::CMsgAMSendEmail_ReplacementToken* mutable_tokens(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMSendEmail_ReplacementToken >*
      mutable_tokens();
  const ::proto::dota::CMsgAMSendEmail_ReplacementToken& tokens(int index) const;
  ::proto::dota::CMsgAMSendEmail_ReplacementToken* add_tokens();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMSendEmail_ReplacementToken >&
      tokens() const;

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 email_msg_type = 2;
  bool has_email_msg_type() const;
  void clear_email_msg_type();
  static const int kEmailMsgTypeFieldNumber = 2;
  ::google::protobuf::uint32 email_msg_type() const;
  void set_email_msg_type(::google::protobuf::uint32 value);

  // optional uint32 email_format = 3;
  bool has_email_format() const;
  void clear_email_format();
  static const int kEmailFormatFieldNumber = 3;
  ::google::protobuf::uint32 email_format() const;
  void set_email_format(::google::protobuf::uint32 value);

  // optional uint32 source_gc = 6;
  bool has_source_gc() const;
  void clear_source_gc();
  static const int kSourceGcFieldNumber = 6;
  ::google::protobuf::uint32 source_gc() const;
  void set_source_gc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMSendEmail)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMSendEmail_PersonaNameReplacementToken > persona_name_tokens_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMSendEmail_ReplacementToken > tokens_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 email_msg_type_;
  ::google::protobuf::uint32 email_format_;
  ::google::protobuf::uint32 source_gc_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMSendEmailResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMSendEmailResponse) */ {
 public:
  CMsgAMSendEmailResponse();
  virtual ~CMsgAMSendEmailResponse();

  CMsgAMSendEmailResponse(const CMsgAMSendEmailResponse& from);

  inline CMsgAMSendEmailResponse& operator=(const CMsgAMSendEmailResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMSendEmailResponse(CMsgAMSendEmailResponse&& from) noexcept
    : CMsgAMSendEmailResponse() {
    *this = ::std::move(from);
  }

  inline CMsgAMSendEmailResponse& operator=(CMsgAMSendEmailResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMSendEmailResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMSendEmailResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgAMSendEmailResponse*>(
               &_CMsgAMSendEmailResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(CMsgAMSendEmailResponse* other);
  friend void swap(CMsgAMSendEmailResponse& a, CMsgAMSendEmailResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMSendEmailResponse* New() const final {
    return CreateMaybeMessage<CMsgAMSendEmailResponse>(nullptr);
  }

  CMsgAMSendEmailResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMSendEmailResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMSendEmailResponse& from);
  void MergeFrom(const CMsgAMSendEmailResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMSendEmailResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMSendEmailResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetEmailTemplate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetEmailTemplate) */ {
 public:
  CMsgGCGetEmailTemplate();
  virtual ~CMsgGCGetEmailTemplate();

  CMsgGCGetEmailTemplate(const CMsgGCGetEmailTemplate& from);

  inline CMsgGCGetEmailTemplate& operator=(const CMsgGCGetEmailTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetEmailTemplate(CMsgGCGetEmailTemplate&& from) noexcept
    : CMsgGCGetEmailTemplate() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetEmailTemplate& operator=(CMsgGCGetEmailTemplate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetEmailTemplate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetEmailTemplate* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetEmailTemplate*>(
               &_CMsgGCGetEmailTemplate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(CMsgGCGetEmailTemplate* other);
  friend void swap(CMsgGCGetEmailTemplate& a, CMsgGCGetEmailTemplate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetEmailTemplate* New() const final {
    return CreateMaybeMessage<CMsgGCGetEmailTemplate>(nullptr);
  }

  CMsgGCGetEmailTemplate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetEmailTemplate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetEmailTemplate& from);
  void MergeFrom(const CMsgGCGetEmailTemplate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetEmailTemplate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 email_msg_type = 2;
  bool has_email_msg_type() const;
  void clear_email_msg_type();
  static const int kEmailMsgTypeFieldNumber = 2;
  ::google::protobuf::uint32 email_msg_type() const;
  void set_email_msg_type(::google::protobuf::uint32 value);

  // optional int32 email_lang = 3;
  bool has_email_lang() const;
  void clear_email_lang();
  static const int kEmailLangFieldNumber = 3;
  ::google::protobuf::int32 email_lang() const;
  void set_email_lang(::google::protobuf::int32 value);

  // optional int32 email_format = 4;
  bool has_email_format() const;
  void clear_email_format();
  static const int kEmailFormatFieldNumber = 4;
  ::google::protobuf::int32 email_format() const;
  void set_email_format(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetEmailTemplate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 email_msg_type_;
  ::google::protobuf::int32 email_lang_;
  ::google::protobuf::int32 email_format_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetEmailTemplateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetEmailTemplateResponse) */ {
 public:
  CMsgGCGetEmailTemplateResponse();
  virtual ~CMsgGCGetEmailTemplateResponse();

  CMsgGCGetEmailTemplateResponse(const CMsgGCGetEmailTemplateResponse& from);

  inline CMsgGCGetEmailTemplateResponse& operator=(const CMsgGCGetEmailTemplateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetEmailTemplateResponse(CMsgGCGetEmailTemplateResponse&& from) noexcept
    : CMsgGCGetEmailTemplateResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetEmailTemplateResponse& operator=(CMsgGCGetEmailTemplateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetEmailTemplateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetEmailTemplateResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetEmailTemplateResponse*>(
               &_CMsgGCGetEmailTemplateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(CMsgGCGetEmailTemplateResponse* other);
  friend void swap(CMsgGCGetEmailTemplateResponse& a, CMsgGCGetEmailTemplateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetEmailTemplateResponse* New() const final {
    return CreateMaybeMessage<CMsgGCGetEmailTemplateResponse>(nullptr);
  }

  CMsgGCGetEmailTemplateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetEmailTemplateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetEmailTemplateResponse& from);
  void MergeFrom(const CMsgGCGetEmailTemplateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetEmailTemplateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string template = 3;
  bool has_template_() const;
  void clear_template_();
  static const int kTemplateFieldNumber = 3;
  const ::std::string& template_() const;
  void set_template_(const ::std::string& value);
  #if LANG_CXX11
  void set_template_(::std::string&& value);
  #endif
  void set_template_(const char* value);
  void set_template_(const char* value, size_t size);
  ::std::string* mutable_template_();
  ::std::string* release_template_();
  void set_allocated_template_(::std::string* template_);

  // optional bool template_exists = 2;
  bool has_template_exists() const;
  void clear_template_exists();
  static const int kTemplateExistsFieldNumber = 2;
  bool template_exists() const;
  void set_template_exists(bool value);

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetEmailTemplateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr template__;
  bool template_exists_;
  ::google::protobuf::uint32 eresult_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMGrantGuestPasses2 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMGrantGuestPasses2) */ {
 public:
  CMsgAMGrantGuestPasses2();
  virtual ~CMsgAMGrantGuestPasses2();

  CMsgAMGrantGuestPasses2(const CMsgAMGrantGuestPasses2& from);

  inline CMsgAMGrantGuestPasses2& operator=(const CMsgAMGrantGuestPasses2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMGrantGuestPasses2(CMsgAMGrantGuestPasses2&& from) noexcept
    : CMsgAMGrantGuestPasses2() {
    *this = ::std::move(from);
  }

  inline CMsgAMGrantGuestPasses2& operator=(CMsgAMGrantGuestPasses2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMGrantGuestPasses2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMGrantGuestPasses2* internal_default_instance() {
    return reinterpret_cast<const CMsgAMGrantGuestPasses2*>(
               &_CMsgAMGrantGuestPasses2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(CMsgAMGrantGuestPasses2* other);
  friend void swap(CMsgAMGrantGuestPasses2& a, CMsgAMGrantGuestPasses2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMGrantGuestPasses2* New() const final {
    return CreateMaybeMessage<CMsgAMGrantGuestPasses2>(nullptr);
  }

  CMsgAMGrantGuestPasses2* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMGrantGuestPasses2>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMGrantGuestPasses2& from);
  void MergeFrom(const CMsgAMGrantGuestPasses2& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMGrantGuestPasses2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 package_id = 2;
  bool has_package_id() const;
  void clear_package_id();
  static const int kPackageIdFieldNumber = 2;
  ::google::protobuf::uint32 package_id() const;
  void set_package_id(::google::protobuf::uint32 value);

  // optional int32 passes_to_grant = 3;
  bool has_passes_to_grant() const;
  void clear_passes_to_grant();
  static const int kPassesToGrantFieldNumber = 3;
  ::google::protobuf::int32 passes_to_grant() const;
  void set_passes_to_grant(::google::protobuf::int32 value);

  // optional int32 days_to_expiration = 4;
  bool has_days_to_expiration() const;
  void clear_days_to_expiration();
  static const int kDaysToExpirationFieldNumber = 4;
  ::google::protobuf::int32 days_to_expiration() const;
  void set_days_to_expiration(::google::protobuf::int32 value);

  // optional int32 action = 5;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 5;
  ::google::protobuf::int32 action() const;
  void set_action(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMGrantGuestPasses2)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 package_id_;
  ::google::protobuf::int32 passes_to_grant_;
  ::google::protobuf::int32 days_to_expiration_;
  ::google::protobuf::int32 action_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMGrantGuestPasses2Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgAMGrantGuestPasses2Response) */ {
 public:
  CMsgAMGrantGuestPasses2Response();
  virtual ~CMsgAMGrantGuestPasses2Response();

  CMsgAMGrantGuestPasses2Response(const CMsgAMGrantGuestPasses2Response& from);

  inline CMsgAMGrantGuestPasses2Response& operator=(const CMsgAMGrantGuestPasses2Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAMGrantGuestPasses2Response(CMsgAMGrantGuestPasses2Response&& from) noexcept
    : CMsgAMGrantGuestPasses2Response() {
    *this = ::std::move(from);
  }

  inline CMsgAMGrantGuestPasses2Response& operator=(CMsgAMGrantGuestPasses2Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAMGrantGuestPasses2Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAMGrantGuestPasses2Response* internal_default_instance() {
    return reinterpret_cast<const CMsgAMGrantGuestPasses2Response*>(
               &_CMsgAMGrantGuestPasses2Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(CMsgAMGrantGuestPasses2Response* other);
  friend void swap(CMsgAMGrantGuestPasses2Response& a, CMsgAMGrantGuestPasses2Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMGrantGuestPasses2Response* New() const final {
    return CreateMaybeMessage<CMsgAMGrantGuestPasses2Response>(nullptr);
  }

  CMsgAMGrantGuestPasses2Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMGrantGuestPasses2Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAMGrantGuestPasses2Response& from);
  void MergeFrom(const CMsgAMGrantGuestPasses2Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMGrantGuestPasses2Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 passes_granted = 2 [default = 0];
  bool has_passes_granted() const;
  void clear_passes_granted();
  static const int kPassesGrantedFieldNumber = 2;
  ::google::protobuf::int32 passes_granted() const;
  void set_passes_granted(::google::protobuf::int32 value);

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::int32 eresult() const;
  void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgAMGrantGuestPasses2Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 passes_granted_;
  ::google::protobuf::int32 eresult_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCSystemMsg_GetAccountDetails final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCSystemMsg_GetAccountDetails) */ {
 public:
  CGCSystemMsg_GetAccountDetails();
  virtual ~CGCSystemMsg_GetAccountDetails();

  CGCSystemMsg_GetAccountDetails(const CGCSystemMsg_GetAccountDetails& from);

  inline CGCSystemMsg_GetAccountDetails& operator=(const CGCSystemMsg_GetAccountDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCSystemMsg_GetAccountDetails(CGCSystemMsg_GetAccountDetails&& from) noexcept
    : CGCSystemMsg_GetAccountDetails() {
    *this = ::std::move(from);
  }

  inline CGCSystemMsg_GetAccountDetails& operator=(CGCSystemMsg_GetAccountDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCSystemMsg_GetAccountDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCSystemMsg_GetAccountDetails* internal_default_instance() {
    return reinterpret_cast<const CGCSystemMsg_GetAccountDetails*>(
               &_CGCSystemMsg_GetAccountDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(CGCSystemMsg_GetAccountDetails* other);
  friend void swap(CGCSystemMsg_GetAccountDetails& a, CGCSystemMsg_GetAccountDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCSystemMsg_GetAccountDetails* New() const final {
    return CreateMaybeMessage<CGCSystemMsg_GetAccountDetails>(nullptr);
  }

  CGCSystemMsg_GetAccountDetails* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCSystemMsg_GetAccountDetails>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCSystemMsg_GetAccountDetails& from);
  void MergeFrom(const CGCSystemMsg_GetAccountDetails& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCSystemMsg_GetAccountDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 2;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CGCSystemMsg_GetAccountDetails)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCSystemMsg_GetAccountDetails_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCSystemMsg_GetAccountDetails_Response) */ {
 public:
  CGCSystemMsg_GetAccountDetails_Response();
  virtual ~CGCSystemMsg_GetAccountDetails_Response();

  CGCSystemMsg_GetAccountDetails_Response(const CGCSystemMsg_GetAccountDetails_Response& from);

  inline CGCSystemMsg_GetAccountDetails_Response& operator=(const CGCSystemMsg_GetAccountDetails_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCSystemMsg_GetAccountDetails_Response(CGCSystemMsg_GetAccountDetails_Response&& from) noexcept
    : CGCSystemMsg_GetAccountDetails_Response() {
    *this = ::std::move(from);
  }

  inline CGCSystemMsg_GetAccountDetails_Response& operator=(CGCSystemMsg_GetAccountDetails_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCSystemMsg_GetAccountDetails_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCSystemMsg_GetAccountDetails_Response* internal_default_instance() {
    return reinterpret_cast<const CGCSystemMsg_GetAccountDetails_Response*>(
               &_CGCSystemMsg_GetAccountDetails_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(CGCSystemMsg_GetAccountDetails_Response* other);
  friend void swap(CGCSystemMsg_GetAccountDetails_Response& a, CGCSystemMsg_GetAccountDetails_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCSystemMsg_GetAccountDetails_Response* New() const final {
    return CreateMaybeMessage<CGCSystemMsg_GetAccountDetails_Response>(nullptr);
  }

  CGCSystemMsg_GetAccountDetails_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCSystemMsg_GetAccountDetails_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCSystemMsg_GetAccountDetails_Response& from);
  void MergeFrom(const CGCSystemMsg_GetAccountDetails_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCSystemMsg_GetAccountDetails_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account_name = 2;
  bool has_account_name() const;
  void clear_account_name();
  static const int kAccountNameFieldNumber = 2;
  const ::std::string& account_name() const;
  void set_account_name(const ::std::string& value);
  #if LANG_CXX11
  void set_account_name(::std::string&& value);
  #endif
  void set_account_name(const char* value);
  void set_account_name(const char* value, size_t size);
  ::std::string* mutable_account_name();
  ::std::string* release_account_name();
  void set_allocated_account_name(::std::string* account_name);

  // optional string persona_name = 3;
  bool has_persona_name() const;
  void clear_persona_name();
  static const int kPersonaNameFieldNumber = 3;
  const ::std::string& persona_name() const;
  void set_persona_name(const ::std::string& value);
  #if LANG_CXX11
  void set_persona_name(::std::string&& value);
  #endif
  void set_persona_name(const char* value);
  void set_persona_name(const char* value, size_t size);
  ::std::string* mutable_persona_name();
  ::std::string* release_persona_name();
  void set_allocated_persona_name(::std::string* persona_name);

  // optional string currency = 22;
  bool has_currency() const;
  void clear_currency();
  static const int kCurrencyFieldNumber = 22;
  const ::std::string& currency() const;
  void set_currency(const ::std::string& value);
  #if LANG_CXX11
  void set_currency(::std::string&& value);
  #endif
  void set_currency(const char* value);
  void set_currency(const char* value, size_t size);
  ::std::string* mutable_currency();
  ::std::string* release_currency();
  void set_allocated_currency(::std::string* currency);

  // optional string txn_country_code = 37;
  bool has_txn_country_code() const;
  void clear_txn_country_code();
  static const int kTxnCountryCodeFieldNumber = 37;
  const ::std::string& txn_country_code() const;
  void set_txn_country_code(const ::std::string& value);
  #if LANG_CXX11
  void set_txn_country_code(::std::string&& value);
  #endif
  void set_txn_country_code(const char* value);
  void set_txn_country_code(const char* value, size_t size);
  ::std::string* mutable_txn_country_code();
  ::std::string* release_txn_country_code();
  void set_allocated_txn_country_code(::std::string* txn_country_code);

  // optional bool is_cyber_cafe = 8;
  bool has_is_cyber_cafe() const;
  void clear_is_cyber_cafe();
  static const int kIsCyberCafeFieldNumber = 8;
  bool is_cyber_cafe() const;
  void set_is_cyber_cafe(bool value);

  // optional bool is_school_account = 9;
  bool has_is_school_account() const;
  void clear_is_school_account();
  static const int kIsSchoolAccountFieldNumber = 9;
  bool is_school_account() const;
  void set_is_school_account(bool value);

  // optional bool is_limited = 10;
  bool has_is_limited() const;
  void clear_is_limited();
  static const int kIsLimitedFieldNumber = 10;
  bool is_limited() const;
  void set_is_limited(bool value);

  // optional bool is_subscribed = 11;
  bool has_is_subscribed() const;
  void clear_is_subscribed();
  static const int kIsSubscribedFieldNumber = 11;
  bool is_subscribed() const;
  void set_is_subscribed(bool value);

  // optional bool is_profile_created = 26;
  bool has_is_profile_created() const;
  void clear_is_profile_created();
  static const int kIsProfileCreatedFieldNumber = 26;
  bool is_profile_created() const;
  void set_is_profile_created(bool value);

  // optional bool is_profile_public = 4;
  bool has_is_profile_public() const;
  void clear_is_profile_public();
  static const int kIsProfilePublicFieldNumber = 4;
  bool is_profile_public() const;
  void set_is_profile_public(bool value);

  // optional bool is_inventory_public = 5;
  bool has_is_inventory_public() const;
  void clear_is_inventory_public();
  static const int kIsInventoryPublicFieldNumber = 5;
  bool is_inventory_public() const;
  void set_is_inventory_public(bool value);

  // optional bool is_vac_banned = 7;
  bool has_is_vac_banned() const;
  void clear_is_vac_banned();
  static const int kIsVacBannedFieldNumber = 7;
  bool is_vac_banned() const;
  void set_is_vac_banned(bool value);

  // optional uint32 package = 12;
  bool has_package() const;
  void clear_package();
  static const int kPackageFieldNumber = 12;
  ::google::protobuf::uint32 package() const;
  void set_package(::google::protobuf::uint32 value);

  // optional uint32 free_trial_expiration = 14;
  bool has_free_trial_expiration() const;
  void clear_free_trial_expiration();
  static const int kFreeTrialExpirationFieldNumber = 14;
  ::google::protobuf::uint32 free_trial_expiration() const;
  void set_free_trial_expiration(::google::protobuf::uint32 value);

  // optional bool is_free_trial_account = 13;
  bool has_is_free_trial_account() const;
  void clear_is_free_trial_account();
  static const int kIsFreeTrialAccountFieldNumber = 13;
  bool is_free_trial_account() const;
  void set_is_free_trial_account(bool value);

  // optional bool is_low_violence = 15;
  bool has_is_low_violence() const;
  void clear_is_low_violence();
  static const int kIsLowViolenceFieldNumber = 15;
  bool is_low_violence() const;
  void set_is_low_violence(bool value);

  // optional bool is_account_locked_down = 16;
  bool has_is_account_locked_down() const;
  void clear_is_account_locked_down();
  static const int kIsAccountLockedDownFieldNumber = 16;
  bool is_account_locked_down() const;
  void set_is_account_locked_down(bool value);

  // optional bool is_community_banned = 17;
  bool has_is_community_banned() const;
  void clear_is_community_banned();
  static const int kIsCommunityBannedFieldNumber = 17;
  bool is_community_banned() const;
  void set_is_community_banned(bool value);

  // optional uint32 trade_ban_expiration = 19;
  bool has_trade_ban_expiration() const;
  void clear_trade_ban_expiration();
  static const int kTradeBanExpirationFieldNumber = 19;
  ::google::protobuf::uint32 trade_ban_expiration() const;
  void set_trade_ban_expiration(::google::protobuf::uint32 value);

  // optional uint32 accountid = 20;
  bool has_accountid() const;
  void clear_accountid();
  static const int kAccountidFieldNumber = 20;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // optional uint32 suspension_end_time = 21;
  bool has_suspension_end_time() const;
  void clear_suspension_end_time();
  static const int kSuspensionEndTimeFieldNumber = 21;
  ::google::protobuf::uint32 suspension_end_time() const;
  void set_suspension_end_time(::google::protobuf::uint32 value);

  // optional uint32 steam_level = 23;
  bool has_steam_level() const;
  void clear_steam_level();
  static const int kSteamLevelFieldNumber = 23;
  ::google::protobuf::uint32 steam_level() const;
  void set_steam_level(::google::protobuf::uint32 value);

  // optional uint32 friend_count = 24;
  bool has_friend_count() const;
  void clear_friend_count();
  static const int kFriendCountFieldNumber = 24;
  ::google::protobuf::uint32 friend_count() const;
  void set_friend_count(::google::protobuf::uint32 value);

  // optional uint32 account_creation_time = 25;
  bool has_account_creation_time() const;
  void clear_account_creation_time();
  static const int kAccountCreationTimeFieldNumber = 25;
  ::google::protobuf::uint32 account_creation_time() const;
  void set_account_creation_time(::google::protobuf::uint32 value);

  // optional bool is_trade_banned = 18;
  bool has_is_trade_banned() const;
  void clear_is_trade_banned();
  static const int kIsTradeBannedFieldNumber = 18;
  bool is_trade_banned() const;
  void set_is_trade_banned(bool value);

  // optional bool is_steamguard_enabled = 27;
  bool has_is_steamguard_enabled() const;
  void clear_is_steamguard_enabled();
  static const int kIsSteamguardEnabledFieldNumber = 27;
  bool is_steamguard_enabled() const;
  void set_is_steamguard_enabled(bool value);

  // optional bool is_phone_verified = 28;
  bool has_is_phone_verified() const;
  void clear_is_phone_verified();
  static const int kIsPhoneVerifiedFieldNumber = 28;
  bool is_phone_verified() const;
  void set_is_phone_verified(bool value);

  // optional bool is_two_factor_auth_enabled = 29;
  bool has_is_two_factor_auth_enabled() const;
  void clear_is_two_factor_auth_enabled();
  static const int kIsTwoFactorAuthEnabledFieldNumber = 29;
  bool is_two_factor_auth_enabled() const;
  void set_is_two_factor_auth_enabled(bool value);

  // optional uint32 two_factor_enabled_time = 30;
  bool has_two_factor_enabled_time() const;
  void clear_two_factor_enabled_time();
  static const int kTwoFactorEnabledTimeFieldNumber = 30;
  ::google::protobuf::uint32 two_factor_enabled_time() const;
  void set_two_factor_enabled_time(::google::protobuf::uint32 value);

  // optional uint32 phone_verification_time = 31;
  bool has_phone_verification_time() const;
  void clear_phone_verification_time();
  static const int kPhoneVerificationTimeFieldNumber = 31;
  ::google::protobuf::uint32 phone_verification_time() const;
  void set_phone_verification_time(::google::protobuf::uint32 value);

  // optional uint64 phone_id = 33;
  bool has_phone_id() const;
  void clear_phone_id();
  static const int kPhoneIdFieldNumber = 33;
  ::google::protobuf::uint64 phone_id() const;
  void set_phone_id(::google::protobuf::uint64 value);

  // optional bool is_phone_identifying = 34;
  bool has_is_phone_identifying() const;
  void clear_is_phone_identifying();
  static const int kIsPhoneIdentifyingFieldNumber = 34;
  bool is_phone_identifying() const;
  void set_is_phone_identifying(bool value);

  // optional uint32 rt_identity_linked = 35;
  bool has_rt_identity_linked() const;
  void clear_rt_identity_linked();
  static const int kRtIdentityLinkedFieldNumber = 35;
  ::google::protobuf::uint32 rt_identity_linked() const;
  void set_rt_identity_linked(::google::protobuf::uint32 value);

  // optional uint32 rt_birth_date = 36;
  bool has_rt_birth_date() const;
  void clear_rt_birth_date();
  static const int kRtBirthDateFieldNumber = 36;
  ::google::protobuf::uint32 rt_birth_date() const;
  void set_rt_birth_date(::google::protobuf::uint32 value);

  // optional uint32 eresult_deprecated = 1 [default = 2];
  bool has_eresult_deprecated() const;
  void clear_eresult_deprecated();
  static const int kEresultDeprecatedFieldNumber = 1;
  ::google::protobuf::uint32 eresult_deprecated() const;
  void set_eresult_deprecated(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CGCSystemMsg_GetAccountDetails_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<2> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_name_;
  ::google::protobuf::internal::ArenaStringPtr persona_name_;
  ::google::protobuf::internal::ArenaStringPtr currency_;
  ::google::protobuf::internal::ArenaStringPtr txn_country_code_;
  bool is_cyber_cafe_;
  bool is_school_account_;
  bool is_limited_;
  bool is_subscribed_;
  bool is_profile_created_;
  bool is_profile_public_;
  bool is_inventory_public_;
  bool is_vac_banned_;
  ::google::protobuf::uint32 package_;
  ::google::protobuf::uint32 free_trial_expiration_;
  bool is_free_trial_account_;
  bool is_low_violence_;
  bool is_account_locked_down_;
  bool is_community_banned_;
  ::google::protobuf::uint32 trade_ban_expiration_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 suspension_end_time_;
  ::google::protobuf::uint32 steam_level_;
  ::google::protobuf::uint32 friend_count_;
  ::google::protobuf::uint32 account_creation_time_;
  bool is_trade_banned_;
  bool is_steamguard_enabled_;
  bool is_phone_verified_;
  bool is_two_factor_auth_enabled_;
  ::google::protobuf::uint32 two_factor_enabled_time_;
  ::google::protobuf::uint32 phone_verification_time_;
  ::google::protobuf::uint64 phone_id_;
  bool is_phone_identifying_;
  ::google::protobuf::uint32 rt_identity_linked_;
  ::google::protobuf::uint32 rt_birth_date_;
  ::google::protobuf::uint32 eresult_deprecated_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetPersonaNames final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetPersonaNames) */ {
 public:
  CMsgGCGetPersonaNames();
  virtual ~CMsgGCGetPersonaNames();

  CMsgGCGetPersonaNames(const CMsgGCGetPersonaNames& from);

  inline CMsgGCGetPersonaNames& operator=(const CMsgGCGetPersonaNames& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetPersonaNames(CMsgGCGetPersonaNames&& from) noexcept
    : CMsgGCGetPersonaNames() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetPersonaNames& operator=(CMsgGCGetPersonaNames&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetPersonaNames& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetPersonaNames* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetPersonaNames*>(
               &_CMsgGCGetPersonaNames_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(CMsgGCGetPersonaNames* other);
  friend void swap(CMsgGCGetPersonaNames& a, CMsgGCGetPersonaNames& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetPersonaNames* New() const final {
    return CreateMaybeMessage<CMsgGCGetPersonaNames>(nullptr);
  }

  CMsgGCGetPersonaNames* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetPersonaNames>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetPersonaNames& from);
  void MergeFrom(const CMsgGCGetPersonaNames& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetPersonaNames* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 steamids = 1;
  int steamids_size() const;
  void clear_steamids();
  static const int kSteamidsFieldNumber = 1;
  ::google::protobuf::uint64 steamids(int index) const;
  void set_steamids(int index, ::google::protobuf::uint64 value);
  void add_steamids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steamids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steamids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetPersonaNames)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steamids_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetPersonaNames_Response_PersonaName final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetPersonaNames_Response.PersonaName) */ {
 public:
  CMsgGCGetPersonaNames_Response_PersonaName();
  virtual ~CMsgGCGetPersonaNames_Response_PersonaName();

  CMsgGCGetPersonaNames_Response_PersonaName(const CMsgGCGetPersonaNames_Response_PersonaName& from);

  inline CMsgGCGetPersonaNames_Response_PersonaName& operator=(const CMsgGCGetPersonaNames_Response_PersonaName& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetPersonaNames_Response_PersonaName(CMsgGCGetPersonaNames_Response_PersonaName&& from) noexcept
    : CMsgGCGetPersonaNames_Response_PersonaName() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetPersonaNames_Response_PersonaName& operator=(CMsgGCGetPersonaNames_Response_PersonaName&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetPersonaNames_Response_PersonaName& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetPersonaNames_Response_PersonaName* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetPersonaNames_Response_PersonaName*>(
               &_CMsgGCGetPersonaNames_Response_PersonaName_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(CMsgGCGetPersonaNames_Response_PersonaName* other);
  friend void swap(CMsgGCGetPersonaNames_Response_PersonaName& a, CMsgGCGetPersonaNames_Response_PersonaName& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetPersonaNames_Response_PersonaName* New() const final {
    return CreateMaybeMessage<CMsgGCGetPersonaNames_Response_PersonaName>(nullptr);
  }

  CMsgGCGetPersonaNames_Response_PersonaName* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetPersonaNames_Response_PersonaName>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetPersonaNames_Response_PersonaName& from);
  void MergeFrom(const CMsgGCGetPersonaNames_Response_PersonaName& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetPersonaNames_Response_PersonaName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string persona_name = 2;
  bool has_persona_name() const;
  void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  const ::std::string& persona_name() const;
  void set_persona_name(const ::std::string& value);
  #if LANG_CXX11
  void set_persona_name(::std::string&& value);
  #endif
  void set_persona_name(const char* value);
  void set_persona_name(const char* value, size_t size);
  ::std::string* mutable_persona_name();
  ::std::string* release_persona_name();
  void set_allocated_persona_name(::std::string* persona_name);

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetPersonaNames_Response.PersonaName)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr persona_name_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetPersonaNames_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetPersonaNames_Response) */ {
 public:
  CMsgGCGetPersonaNames_Response();
  virtual ~CMsgGCGetPersonaNames_Response();

  CMsgGCGetPersonaNames_Response(const CMsgGCGetPersonaNames_Response& from);

  inline CMsgGCGetPersonaNames_Response& operator=(const CMsgGCGetPersonaNames_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetPersonaNames_Response(CMsgGCGetPersonaNames_Response&& from) noexcept
    : CMsgGCGetPersonaNames_Response() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetPersonaNames_Response& operator=(CMsgGCGetPersonaNames_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetPersonaNames_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetPersonaNames_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetPersonaNames_Response*>(
               &_CMsgGCGetPersonaNames_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(CMsgGCGetPersonaNames_Response* other);
  friend void swap(CMsgGCGetPersonaNames_Response& a, CMsgGCGetPersonaNames_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetPersonaNames_Response* New() const final {
    return CreateMaybeMessage<CMsgGCGetPersonaNames_Response>(nullptr);
  }

  CMsgGCGetPersonaNames_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetPersonaNames_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetPersonaNames_Response& from);
  void MergeFrom(const CMsgGCGetPersonaNames_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetPersonaNames_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCGetPersonaNames_Response_PersonaName PersonaName;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
  int succeeded_lookups_size() const;
  void clear_succeeded_lookups();
  static const int kSucceededLookupsFieldNumber = 1;
  ::proto::dota::CMsgGCGetPersonaNames_Response_PersonaName* mutable_succeeded_lookups(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetPersonaNames_Response_PersonaName >*
      mutable_succeeded_lookups();
  const ::proto::dota::CMsgGCGetPersonaNames_Response_PersonaName& succeeded_lookups(int index) const;
  ::proto::dota::CMsgGCGetPersonaNames_Response_PersonaName* add_succeeded_lookups();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetPersonaNames_Response_PersonaName >&
      succeeded_lookups() const;

  // repeated fixed64 failed_lookup_steamids = 2;
  int failed_lookup_steamids_size() const;
  void clear_failed_lookup_steamids();
  static const int kFailedLookupSteamidsFieldNumber = 2;
  ::google::protobuf::uint64 failed_lookup_steamids(int index) const;
  void set_failed_lookup_steamids(int index, ::google::protobuf::uint64 value);
  void add_failed_lookup_steamids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      failed_lookup_steamids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_failed_lookup_steamids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetPersonaNames_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetPersonaNames_Response_PersonaName > succeeded_lookups_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > failed_lookup_steamids_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCCheckFriendship final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCCheckFriendship) */ {
 public:
  CMsgGCCheckFriendship();
  virtual ~CMsgGCCheckFriendship();

  CMsgGCCheckFriendship(const CMsgGCCheckFriendship& from);

  inline CMsgGCCheckFriendship& operator=(const CMsgGCCheckFriendship& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCCheckFriendship(CMsgGCCheckFriendship&& from) noexcept
    : CMsgGCCheckFriendship() {
    *this = ::std::move(from);
  }

  inline CMsgGCCheckFriendship& operator=(CMsgGCCheckFriendship&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCCheckFriendship& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCCheckFriendship* internal_default_instance() {
    return reinterpret_cast<const CMsgGCCheckFriendship*>(
               &_CMsgGCCheckFriendship_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(CMsgGCCheckFriendship* other);
  friend void swap(CMsgGCCheckFriendship& a, CMsgGCCheckFriendship& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCCheckFriendship* New() const final {
    return CreateMaybeMessage<CMsgGCCheckFriendship>(nullptr);
  }

  CMsgGCCheckFriendship* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCCheckFriendship>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCCheckFriendship& from);
  void MergeFrom(const CMsgGCCheckFriendship& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCCheckFriendship* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid_left = 1;
  bool has_steamid_left() const;
  void clear_steamid_left();
  static const int kSteamidLeftFieldNumber = 1;
  ::google::protobuf::uint64 steamid_left() const;
  void set_steamid_left(::google::protobuf::uint64 value);

  // optional fixed64 steamid_right = 2;
  bool has_steamid_right() const;
  void clear_steamid_right();
  static const int kSteamidRightFieldNumber = 2;
  ::google::protobuf::uint64 steamid_right() const;
  void set_steamid_right(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCCheckFriendship)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_left_;
  ::google::protobuf::uint64 steamid_right_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCCheckFriendship_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCCheckFriendship_Response) */ {
 public:
  CMsgGCCheckFriendship_Response();
  virtual ~CMsgGCCheckFriendship_Response();

  CMsgGCCheckFriendship_Response(const CMsgGCCheckFriendship_Response& from);

  inline CMsgGCCheckFriendship_Response& operator=(const CMsgGCCheckFriendship_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCCheckFriendship_Response(CMsgGCCheckFriendship_Response&& from) noexcept
    : CMsgGCCheckFriendship_Response() {
    *this = ::std::move(from);
  }

  inline CMsgGCCheckFriendship_Response& operator=(CMsgGCCheckFriendship_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCCheckFriendship_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCCheckFriendship_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgGCCheckFriendship_Response*>(
               &_CMsgGCCheckFriendship_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(CMsgGCCheckFriendship_Response* other);
  friend void swap(CMsgGCCheckFriendship_Response& a, CMsgGCCheckFriendship_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCCheckFriendship_Response* New() const final {
    return CreateMaybeMessage<CMsgGCCheckFriendship_Response>(nullptr);
  }

  CMsgGCCheckFriendship_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCCheckFriendship_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCCheckFriendship_Response& from);
  void MergeFrom(const CMsgGCCheckFriendship_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCCheckFriendship_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // optional bool found_friendship = 2;
  bool has_found_friendship() const;
  void clear_found_friendship();
  static const int kFoundFriendshipFieldNumber = 2;
  bool found_friendship() const;
  void set_found_friendship(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCCheckFriendship_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool success_;
  bool found_friendship_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetAppFriendsList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetAppFriendsList) */ {
 public:
  CMsgGCGetAppFriendsList();
  virtual ~CMsgGCGetAppFriendsList();

  CMsgGCGetAppFriendsList(const CMsgGCGetAppFriendsList& from);

  inline CMsgGCGetAppFriendsList& operator=(const CMsgGCGetAppFriendsList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetAppFriendsList(CMsgGCGetAppFriendsList&& from) noexcept
    : CMsgGCGetAppFriendsList() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetAppFriendsList& operator=(CMsgGCGetAppFriendsList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetAppFriendsList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetAppFriendsList* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetAppFriendsList*>(
               &_CMsgGCGetAppFriendsList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(CMsgGCGetAppFriendsList* other);
  friend void swap(CMsgGCGetAppFriendsList& a, CMsgGCGetAppFriendsList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetAppFriendsList* New() const final {
    return CreateMaybeMessage<CMsgGCGetAppFriendsList>(nullptr);
  }

  CMsgGCGetAppFriendsList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetAppFriendsList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetAppFriendsList& from);
  void MergeFrom(const CMsgGCGetAppFriendsList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetAppFriendsList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional bool include_friendship_timestamps = 2;
  bool has_include_friendship_timestamps() const;
  void clear_include_friendship_timestamps();
  static const int kIncludeFriendshipTimestampsFieldNumber = 2;
  bool include_friendship_timestamps() const;
  void set_include_friendship_timestamps(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetAppFriendsList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  bool include_friendship_timestamps_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetAppFriendsList_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetAppFriendsList_Response) */ {
 public:
  CMsgGCGetAppFriendsList_Response();
  virtual ~CMsgGCGetAppFriendsList_Response();

  CMsgGCGetAppFriendsList_Response(const CMsgGCGetAppFriendsList_Response& from);

  inline CMsgGCGetAppFriendsList_Response& operator=(const CMsgGCGetAppFriendsList_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetAppFriendsList_Response(CMsgGCGetAppFriendsList_Response&& from) noexcept
    : CMsgGCGetAppFriendsList_Response() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetAppFriendsList_Response& operator=(CMsgGCGetAppFriendsList_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetAppFriendsList_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetAppFriendsList_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetAppFriendsList_Response*>(
               &_CMsgGCGetAppFriendsList_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(CMsgGCGetAppFriendsList_Response* other);
  friend void swap(CMsgGCGetAppFriendsList_Response& a, CMsgGCGetAppFriendsList_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetAppFriendsList_Response* New() const final {
    return CreateMaybeMessage<CMsgGCGetAppFriendsList_Response>(nullptr);
  }

  CMsgGCGetAppFriendsList_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetAppFriendsList_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetAppFriendsList_Response& from);
  void MergeFrom(const CMsgGCGetAppFriendsList_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetAppFriendsList_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 steamids = 2;
  int steamids_size() const;
  void clear_steamids();
  static const int kSteamidsFieldNumber = 2;
  ::google::protobuf::uint64 steamids(int index) const;
  void set_steamids(int index, ::google::protobuf::uint64 value);
  void add_steamids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steamids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steamids();

  // repeated fixed32 friendship_timestamps = 3;
  int friendship_timestamps_size() const;
  void clear_friendship_timestamps();
  static const int kFriendshipTimestampsFieldNumber = 3;
  ::google::protobuf::uint32 friendship_timestamps(int index) const;
  void set_friendship_timestamps(int index, ::google::protobuf::uint32 value);
  void add_friendship_timestamps(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      friendship_timestamps() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_friendship_timestamps();

  // repeated fixed32 last_playtimes = 4;
  int last_playtimes_size() const;
  void clear_last_playtimes();
  static const int kLastPlaytimesFieldNumber = 4;
  ::google::protobuf::uint32 last_playtimes(int index) const;
  void set_last_playtimes(int index, ::google::protobuf::uint32 value);
  void add_last_playtimes(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      last_playtimes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_last_playtimes();

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetAppFriendsList_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steamids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > friendship_timestamps_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > last_playtimes_;
  bool success_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetDirectory_SubGC final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC) */ {
 public:
  CMsgGCMsgMasterSetDirectory_SubGC();
  virtual ~CMsgGCMsgMasterSetDirectory_SubGC();

  CMsgGCMsgMasterSetDirectory_SubGC(const CMsgGCMsgMasterSetDirectory_SubGC& from);

  inline CMsgGCMsgMasterSetDirectory_SubGC& operator=(const CMsgGCMsgMasterSetDirectory_SubGC& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMsgMasterSetDirectory_SubGC(CMsgGCMsgMasterSetDirectory_SubGC&& from) noexcept
    : CMsgGCMsgMasterSetDirectory_SubGC() {
    *this = ::std::move(from);
  }

  inline CMsgGCMsgMasterSetDirectory_SubGC& operator=(CMsgGCMsgMasterSetDirectory_SubGC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMsgMasterSetDirectory_SubGC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMsgMasterSetDirectory_SubGC* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMsgMasterSetDirectory_SubGC*>(
               &_CMsgGCMsgMasterSetDirectory_SubGC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(CMsgGCMsgMasterSetDirectory_SubGC* other);
  friend void swap(CMsgGCMsgMasterSetDirectory_SubGC& a, CMsgGCMsgMasterSetDirectory_SubGC& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMsgMasterSetDirectory_SubGC* New() const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetDirectory_SubGC>(nullptr);
  }

  CMsgGCMsgMasterSetDirectory_SubGC* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetDirectory_SubGC>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMsgMasterSetDirectory_SubGC& from);
  void MergeFrom(const CMsgGCMsgMasterSetDirectory_SubGC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMsgMasterSetDirectory_SubGC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string box = 3;
  bool has_box() const;
  void clear_box();
  static const int kBoxFieldNumber = 3;
  const ::std::string& box() const;
  void set_box(const ::std::string& value);
  #if LANG_CXX11
  void set_box(::std::string&& value);
  #endif
  void set_box(const char* value);
  void set_box(const char* value, size_t size);
  ::std::string* mutable_box();
  ::std::string* release_box();
  void set_allocated_box(::std::string* box);

  // optional string command_line = 4;
  bool has_command_line() const;
  void clear_command_line();
  static const int kCommandLineFieldNumber = 4;
  const ::std::string& command_line() const;
  void set_command_line(const ::std::string& value);
  #if LANG_CXX11
  void set_command_line(::std::string&& value);
  #endif
  void set_command_line(const char* value);
  void set_command_line(const char* value, size_t size);
  ::std::string* mutable_command_line();
  ::std::string* release_command_line();
  void set_allocated_command_line(::std::string* command_line);

  // optional string gc_binary = 5;
  bool has_gc_binary() const;
  void clear_gc_binary();
  static const int kGcBinaryFieldNumber = 5;
  const ::std::string& gc_binary() const;
  void set_gc_binary(const ::std::string& value);
  #if LANG_CXX11
  void set_gc_binary(::std::string&& value);
  #endif
  void set_gc_binary(const char* value);
  void set_gc_binary(const char* value, size_t size);
  ::std::string* mutable_gc_binary();
  ::std::string* release_gc_binary();
  void set_allocated_gc_binary(::std::string* gc_binary);

  // optional uint32 dir_index = 1;
  bool has_dir_index() const;
  void clear_dir_index();
  static const int kDirIndexFieldNumber = 1;
  ::google::protobuf::uint32 dir_index() const;
  void set_dir_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr box_;
  ::google::protobuf::internal::ArenaStringPtr command_line_;
  ::google::protobuf::internal::ArenaStringPtr gc_binary_;
  ::google::protobuf::uint32 dir_index_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetDirectory final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMsgMasterSetDirectory) */ {
 public:
  CMsgGCMsgMasterSetDirectory();
  virtual ~CMsgGCMsgMasterSetDirectory();

  CMsgGCMsgMasterSetDirectory(const CMsgGCMsgMasterSetDirectory& from);

  inline CMsgGCMsgMasterSetDirectory& operator=(const CMsgGCMsgMasterSetDirectory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMsgMasterSetDirectory(CMsgGCMsgMasterSetDirectory&& from) noexcept
    : CMsgGCMsgMasterSetDirectory() {
    *this = ::std::move(from);
  }

  inline CMsgGCMsgMasterSetDirectory& operator=(CMsgGCMsgMasterSetDirectory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMsgMasterSetDirectory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMsgMasterSetDirectory* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMsgMasterSetDirectory*>(
               &_CMsgGCMsgMasterSetDirectory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(CMsgGCMsgMasterSetDirectory* other);
  friend void swap(CMsgGCMsgMasterSetDirectory& a, CMsgGCMsgMasterSetDirectory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMsgMasterSetDirectory* New() const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetDirectory>(nullptr);
  }

  CMsgGCMsgMasterSetDirectory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetDirectory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMsgMasterSetDirectory& from);
  void MergeFrom(const CMsgGCMsgMasterSetDirectory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMsgMasterSetDirectory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCMsgMasterSetDirectory_SubGC SubGC;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
  int dir_size() const;
  void clear_dir();
  static const int kDirFieldNumber = 2;
  ::proto::dota::CMsgGCMsgMasterSetDirectory_SubGC* mutable_dir(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetDirectory_SubGC >*
      mutable_dir();
  const ::proto::dota::CMsgGCMsgMasterSetDirectory_SubGC& dir(int index) const;
  ::proto::dota::CMsgGCMsgMasterSetDirectory_SubGC* add_dir();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetDirectory_SubGC >&
      dir() const;

  // optional uint32 master_dir_index = 1;
  bool has_master_dir_index() const;
  void clear_master_dir_index();
  static const int kMasterDirIndexFieldNumber = 1;
  ::google::protobuf::uint32 master_dir_index() const;
  void set_master_dir_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMsgMasterSetDirectory)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetDirectory_SubGC > dir_;
  ::google::protobuf::uint32 master_dir_index_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetDirectory_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMsgMasterSetDirectory_Response) */ {
 public:
  CMsgGCMsgMasterSetDirectory_Response();
  virtual ~CMsgGCMsgMasterSetDirectory_Response();

  CMsgGCMsgMasterSetDirectory_Response(const CMsgGCMsgMasterSetDirectory_Response& from);

  inline CMsgGCMsgMasterSetDirectory_Response& operator=(const CMsgGCMsgMasterSetDirectory_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMsgMasterSetDirectory_Response(CMsgGCMsgMasterSetDirectory_Response&& from) noexcept
    : CMsgGCMsgMasterSetDirectory_Response() {
    *this = ::std::move(from);
  }

  inline CMsgGCMsgMasterSetDirectory_Response& operator=(CMsgGCMsgMasterSetDirectory_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMsgMasterSetDirectory_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMsgMasterSetDirectory_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMsgMasterSetDirectory_Response*>(
               &_CMsgGCMsgMasterSetDirectory_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(CMsgGCMsgMasterSetDirectory_Response* other);
  friend void swap(CMsgGCMsgMasterSetDirectory_Response& a, CMsgGCMsgMasterSetDirectory_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMsgMasterSetDirectory_Response* New() const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetDirectory_Response>(nullptr);
  }

  CMsgGCMsgMasterSetDirectory_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetDirectory_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMsgMasterSetDirectory_Response& from);
  void MergeFrom(const CMsgGCMsgMasterSetDirectory_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMsgMasterSetDirectory_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::int32 eresult() const;
  void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMsgMasterSetDirectory_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 eresult_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMsgWebAPIJobRequestForwardResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMsgWebAPIJobRequestForwardResponse) */ {
 public:
  CMsgGCMsgWebAPIJobRequestForwardResponse();
  virtual ~CMsgGCMsgWebAPIJobRequestForwardResponse();

  CMsgGCMsgWebAPIJobRequestForwardResponse(const CMsgGCMsgWebAPIJobRequestForwardResponse& from);

  inline CMsgGCMsgWebAPIJobRequestForwardResponse& operator=(const CMsgGCMsgWebAPIJobRequestForwardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMsgWebAPIJobRequestForwardResponse(CMsgGCMsgWebAPIJobRequestForwardResponse&& from) noexcept
    : CMsgGCMsgWebAPIJobRequestForwardResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCMsgWebAPIJobRequestForwardResponse& operator=(CMsgGCMsgWebAPIJobRequestForwardResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMsgWebAPIJobRequestForwardResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMsgWebAPIJobRequestForwardResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMsgWebAPIJobRequestForwardResponse*>(
               &_CMsgGCMsgWebAPIJobRequestForwardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(CMsgGCMsgWebAPIJobRequestForwardResponse* other);
  friend void swap(CMsgGCMsgWebAPIJobRequestForwardResponse& a, CMsgGCMsgWebAPIJobRequestForwardResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMsgWebAPIJobRequestForwardResponse* New() const final {
    return CreateMaybeMessage<CMsgGCMsgWebAPIJobRequestForwardResponse>(nullptr);
  }

  CMsgGCMsgWebAPIJobRequestForwardResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMsgWebAPIJobRequestForwardResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMsgWebAPIJobRequestForwardResponse& from);
  void MergeFrom(const CMsgGCMsgWebAPIJobRequestForwardResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMsgWebAPIJobRequestForwardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dir_index = 1;
  bool has_dir_index() const;
  void clear_dir_index();
  static const int kDirIndexFieldNumber = 1;
  ::google::protobuf::uint32 dir_index() const;
  void set_dir_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMsgWebAPIJobRequestForwardResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 dir_index_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCSystemMsg_GetPurchaseTrust_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCSystemMsg_GetPurchaseTrust_Request) */ {
 public:
  CGCSystemMsg_GetPurchaseTrust_Request();
  virtual ~CGCSystemMsg_GetPurchaseTrust_Request();

  CGCSystemMsg_GetPurchaseTrust_Request(const CGCSystemMsg_GetPurchaseTrust_Request& from);

  inline CGCSystemMsg_GetPurchaseTrust_Request& operator=(const CGCSystemMsg_GetPurchaseTrust_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCSystemMsg_GetPurchaseTrust_Request(CGCSystemMsg_GetPurchaseTrust_Request&& from) noexcept
    : CGCSystemMsg_GetPurchaseTrust_Request() {
    *this = ::std::move(from);
  }

  inline CGCSystemMsg_GetPurchaseTrust_Request& operator=(CGCSystemMsg_GetPurchaseTrust_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCSystemMsg_GetPurchaseTrust_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCSystemMsg_GetPurchaseTrust_Request* internal_default_instance() {
    return reinterpret_cast<const CGCSystemMsg_GetPurchaseTrust_Request*>(
               &_CGCSystemMsg_GetPurchaseTrust_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(CGCSystemMsg_GetPurchaseTrust_Request* other);
  friend void swap(CGCSystemMsg_GetPurchaseTrust_Request& a, CGCSystemMsg_GetPurchaseTrust_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCSystemMsg_GetPurchaseTrust_Request* New() const final {
    return CreateMaybeMessage<CGCSystemMsg_GetPurchaseTrust_Request>(nullptr);
  }

  CGCSystemMsg_GetPurchaseTrust_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCSystemMsg_GetPurchaseTrust_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCSystemMsg_GetPurchaseTrust_Request& from);
  void MergeFrom(const CGCSystemMsg_GetPurchaseTrust_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCSystemMsg_GetPurchaseTrust_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CGCSystemMsg_GetPurchaseTrust_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCSystemMsg_GetPurchaseTrust_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CGCSystemMsg_GetPurchaseTrust_Response) */ {
 public:
  CGCSystemMsg_GetPurchaseTrust_Response();
  virtual ~CGCSystemMsg_GetPurchaseTrust_Response();

  CGCSystemMsg_GetPurchaseTrust_Response(const CGCSystemMsg_GetPurchaseTrust_Response& from);

  inline CGCSystemMsg_GetPurchaseTrust_Response& operator=(const CGCSystemMsg_GetPurchaseTrust_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCSystemMsg_GetPurchaseTrust_Response(CGCSystemMsg_GetPurchaseTrust_Response&& from) noexcept
    : CGCSystemMsg_GetPurchaseTrust_Response() {
    *this = ::std::move(from);
  }

  inline CGCSystemMsg_GetPurchaseTrust_Response& operator=(CGCSystemMsg_GetPurchaseTrust_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CGCSystemMsg_GetPurchaseTrust_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCSystemMsg_GetPurchaseTrust_Response* internal_default_instance() {
    return reinterpret_cast<const CGCSystemMsg_GetPurchaseTrust_Response*>(
               &_CGCSystemMsg_GetPurchaseTrust_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(CGCSystemMsg_GetPurchaseTrust_Response* other);
  friend void swap(CGCSystemMsg_GetPurchaseTrust_Response& a, CGCSystemMsg_GetPurchaseTrust_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCSystemMsg_GetPurchaseTrust_Response* New() const final {
    return CreateMaybeMessage<CGCSystemMsg_GetPurchaseTrust_Response>(nullptr);
  }

  CGCSystemMsg_GetPurchaseTrust_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CGCSystemMsg_GetPurchaseTrust_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CGCSystemMsg_GetPurchaseTrust_Response& from);
  void MergeFrom(const CGCSystemMsg_GetPurchaseTrust_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCSystemMsg_GetPurchaseTrust_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool has_prior_purchase_history = 1;
  bool has_has_prior_purchase_history() const;
  void clear_has_prior_purchase_history();
  static const int kHasPriorPurchaseHistoryFieldNumber = 1;
  bool has_prior_purchase_history() const;
  void set_has_prior_purchase_history(bool value);

  // optional bool has_no_recent_password_resets = 2;
  bool has_has_no_recent_password_resets() const;
  void clear_has_no_recent_password_resets();
  static const int kHasNoRecentPasswordResetsFieldNumber = 2;
  bool has_no_recent_password_resets() const;
  void set_has_no_recent_password_resets(bool value);

  // optional bool is_wallet_cash_trusted = 3;
  bool has_is_wallet_cash_trusted() const;
  void clear_is_wallet_cash_trusted();
  static const int kIsWalletCashTrustedFieldNumber = 3;
  bool is_wallet_cash_trusted() const;
  void set_is_wallet_cash_trusted(bool value);

  // optional uint32 time_all_trusted = 4;
  bool has_time_all_trusted() const;
  void clear_time_all_trusted();
  static const int kTimeAllTrustedFieldNumber = 4;
  ::google::protobuf::uint32 time_all_trusted() const;
  void set_time_all_trusted(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CGCSystemMsg_GetPurchaseTrust_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool has_prior_purchase_history_;
  bool has_no_recent_password_resets_;
  bool is_wallet_cash_trusted_;
  ::google::protobuf::uint32 time_all_trusted_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCHAccountVacStatusChange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCHAccountVacStatusChange) */ {
 public:
  CMsgGCHAccountVacStatusChange();
  virtual ~CMsgGCHAccountVacStatusChange();

  CMsgGCHAccountVacStatusChange(const CMsgGCHAccountVacStatusChange& from);

  inline CMsgGCHAccountVacStatusChange& operator=(const CMsgGCHAccountVacStatusChange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCHAccountVacStatusChange(CMsgGCHAccountVacStatusChange&& from) noexcept
    : CMsgGCHAccountVacStatusChange() {
    *this = ::std::move(from);
  }

  inline CMsgGCHAccountVacStatusChange& operator=(CMsgGCHAccountVacStatusChange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCHAccountVacStatusChange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCHAccountVacStatusChange* internal_default_instance() {
    return reinterpret_cast<const CMsgGCHAccountVacStatusChange*>(
               &_CMsgGCHAccountVacStatusChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(CMsgGCHAccountVacStatusChange* other);
  friend void swap(CMsgGCHAccountVacStatusChange& a, CMsgGCHAccountVacStatusChange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCHAccountVacStatusChange* New() const final {
    return CreateMaybeMessage<CMsgGCHAccountVacStatusChange>(nullptr);
  }

  CMsgGCHAccountVacStatusChange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCHAccountVacStatusChange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCHAccountVacStatusChange& from);
  void MergeFrom(const CMsgGCHAccountVacStatusChange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCHAccountVacStatusChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 app_id = 2;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 rtime_vacban_starts = 3;
  bool has_rtime_vacban_starts() const;
  void clear_rtime_vacban_starts();
  static const int kRtimeVacbanStartsFieldNumber = 3;
  ::google::protobuf::uint32 rtime_vacban_starts() const;
  void set_rtime_vacban_starts(::google::protobuf::uint32 value);

  // optional bool is_banned_now = 4;
  bool has_is_banned_now() const;
  void clear_is_banned_now();
  static const int kIsBannedNowFieldNumber = 4;
  bool is_banned_now() const;
  void set_is_banned_now(bool value);

  // optional bool is_banned_future = 5;
  bool has_is_banned_future() const;
  void clear_is_banned_future();
  static const int kIsBannedFutureFieldNumber = 5;
  bool is_banned_future() const;
  void set_is_banned_future(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCHAccountVacStatusChange)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 rtime_vacban_starts_;
  bool is_banned_now_;
  bool is_banned_future_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetPartnerAccountLink final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetPartnerAccountLink) */ {
 public:
  CMsgGCGetPartnerAccountLink();
  virtual ~CMsgGCGetPartnerAccountLink();

  CMsgGCGetPartnerAccountLink(const CMsgGCGetPartnerAccountLink& from);

  inline CMsgGCGetPartnerAccountLink& operator=(const CMsgGCGetPartnerAccountLink& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetPartnerAccountLink(CMsgGCGetPartnerAccountLink&& from) noexcept
    : CMsgGCGetPartnerAccountLink() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetPartnerAccountLink& operator=(CMsgGCGetPartnerAccountLink&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetPartnerAccountLink& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetPartnerAccountLink* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetPartnerAccountLink*>(
               &_CMsgGCGetPartnerAccountLink_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(CMsgGCGetPartnerAccountLink* other);
  friend void swap(CMsgGCGetPartnerAccountLink& a, CMsgGCGetPartnerAccountLink& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetPartnerAccountLink* New() const final {
    return CreateMaybeMessage<CMsgGCGetPartnerAccountLink>(nullptr);
  }

  CMsgGCGetPartnerAccountLink* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetPartnerAccountLink>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetPartnerAccountLink& from);
  void MergeFrom(const CMsgGCGetPartnerAccountLink& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetPartnerAccountLink* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetPartnerAccountLink)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGetPartnerAccountLink_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetPartnerAccountLink_Response) */ {
 public:
  CMsgGCGetPartnerAccountLink_Response();
  virtual ~CMsgGCGetPartnerAccountLink_Response();

  CMsgGCGetPartnerAccountLink_Response(const CMsgGCGetPartnerAccountLink_Response& from);

  inline CMsgGCGetPartnerAccountLink_Response& operator=(const CMsgGCGetPartnerAccountLink_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGetPartnerAccountLink_Response(CMsgGCGetPartnerAccountLink_Response&& from) noexcept
    : CMsgGCGetPartnerAccountLink_Response() {
    *this = ::std::move(from);
  }

  inline CMsgGCGetPartnerAccountLink_Response& operator=(CMsgGCGetPartnerAccountLink_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGetPartnerAccountLink_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGetPartnerAccountLink_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetPartnerAccountLink_Response*>(
               &_CMsgGCGetPartnerAccountLink_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(CMsgGCGetPartnerAccountLink_Response* other);
  friend void swap(CMsgGCGetPartnerAccountLink_Response& a, CMsgGCGetPartnerAccountLink_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGetPartnerAccountLink_Response* New() const final {
    return CreateMaybeMessage<CMsgGCGetPartnerAccountLink_Response>(nullptr);
  }

  CMsgGCGetPartnerAccountLink_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGetPartnerAccountLink_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGetPartnerAccountLink_Response& from);
  void MergeFrom(const CMsgGCGetPartnerAccountLink_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGetPartnerAccountLink_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pwid = 1;
  bool has_pwid() const;
  void clear_pwid();
  static const int kPwidFieldNumber = 1;
  ::google::protobuf::uint32 pwid() const;
  void set_pwid(::google::protobuf::uint32 value);

  // optional uint32 nexonid = 2;
  bool has_nexonid() const;
  void clear_nexonid();
  static const int kNexonidFieldNumber = 2;
  ::google::protobuf::uint32 nexonid() const;
  void set_nexonid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetPartnerAccountLink_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 pwid_;
  ::google::protobuf::uint32 nexonid_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCRoutingInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCRoutingInfo) */ {
 public:
  CMsgGCRoutingInfo();
  virtual ~CMsgGCRoutingInfo();

  CMsgGCRoutingInfo(const CMsgGCRoutingInfo& from);

  inline CMsgGCRoutingInfo& operator=(const CMsgGCRoutingInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCRoutingInfo(CMsgGCRoutingInfo&& from) noexcept
    : CMsgGCRoutingInfo() {
    *this = ::std::move(from);
  }

  inline CMsgGCRoutingInfo& operator=(CMsgGCRoutingInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCRoutingInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCRoutingInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRoutingInfo*>(
               &_CMsgGCRoutingInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(CMsgGCRoutingInfo* other);
  friend void swap(CMsgGCRoutingInfo& a, CMsgGCRoutingInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRoutingInfo* New() const final {
    return CreateMaybeMessage<CMsgGCRoutingInfo>(nullptr);
  }

  CMsgGCRoutingInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCRoutingInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCRoutingInfo& from);
  void MergeFrom(const CMsgGCRoutingInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRoutingInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCRoutingInfo_RoutingMethod RoutingMethod;
  static const RoutingMethod RANDOM =
    CMsgGCRoutingInfo_RoutingMethod_RANDOM;
  static const RoutingMethod DISCARD =
    CMsgGCRoutingInfo_RoutingMethod_DISCARD;
  static const RoutingMethod CLIENT_STEAMID =
    CMsgGCRoutingInfo_RoutingMethod_CLIENT_STEAMID;
  static const RoutingMethod PROTOBUF_FIELD_UINT64 =
    CMsgGCRoutingInfo_RoutingMethod_PROTOBUF_FIELD_UINT64;
  static const RoutingMethod WEBAPI_PARAM =
    CMsgGCRoutingInfo_RoutingMethod_WEBAPI_PARAM;
  static const RoutingMethod WEBAPI_PARAM_STEAMID_ACCOUNTID =
    CMsgGCRoutingInfo_RoutingMethod_WEBAPI_PARAM_STEAMID_ACCOUNTID;
  static inline bool RoutingMethod_IsValid(int value) {
    return CMsgGCRoutingInfo_RoutingMethod_IsValid(value);
  }
  static const RoutingMethod RoutingMethod_MIN =
    CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_MIN;
  static const RoutingMethod RoutingMethod_MAX =
    CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_MAX;
  static const int RoutingMethod_ARRAYSIZE =
    CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RoutingMethod_descriptor() {
    return CMsgGCRoutingInfo_RoutingMethod_descriptor();
  }
  static inline const ::std::string& RoutingMethod_Name(RoutingMethod value) {
    return CMsgGCRoutingInfo_RoutingMethod_Name(value);
  }
  static inline bool RoutingMethod_Parse(const ::std::string& name,
      RoutingMethod* value) {
    return CMsgGCRoutingInfo_RoutingMethod_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 dir_index = 1;
  int dir_index_size() const;
  void clear_dir_index();
  static const int kDirIndexFieldNumber = 1;
  ::google::protobuf::uint32 dir_index(int index) const;
  void set_dir_index(int index, ::google::protobuf::uint32 value);
  void add_dir_index(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dir_index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dir_index();

  // optional string webapi_param = 5;
  bool has_webapi_param() const;
  void clear_webapi_param();
  static const int kWebapiParamFieldNumber = 5;
  const ::std::string& webapi_param() const;
  void set_webapi_param(const ::std::string& value);
  #if LANG_CXX11
  void set_webapi_param(::std::string&& value);
  #endif
  void set_webapi_param(const char* value);
  void set_webapi_param(const char* value, size_t size);
  ::std::string* mutable_webapi_param();
  ::std::string* release_webapi_param();
  void set_allocated_webapi_param(::std::string* webapi_param);

  // optional .proto.dota.CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  ::proto::dota::CMsgGCRoutingInfo_RoutingMethod method() const;
  void set_method(::proto::dota::CMsgGCRoutingInfo_RoutingMethod value);

  // optional uint32 protobuf_field = 4;
  bool has_protobuf_field() const;
  void clear_protobuf_field();
  static const int kProtobufFieldFieldNumber = 4;
  ::google::protobuf::uint32 protobuf_field() const;
  void set_protobuf_field(::google::protobuf::uint32 value);

  // optional .proto.dota.CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
  bool has_fallback() const;
  void clear_fallback();
  static const int kFallbackFieldNumber = 3;
  ::proto::dota::CMsgGCRoutingInfo_RoutingMethod fallback() const;
  void set_fallback(::proto::dota::CMsgGCRoutingInfo_RoutingMethod value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCRoutingInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dir_index_;
  ::google::protobuf::internal::ArenaStringPtr webapi_param_;
  int method_;
  ::google::protobuf::uint32 protobuf_field_;
  int fallback_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetWebAPIRouting_Entry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry) */ {
 public:
  CMsgGCMsgMasterSetWebAPIRouting_Entry();
  virtual ~CMsgGCMsgMasterSetWebAPIRouting_Entry();

  CMsgGCMsgMasterSetWebAPIRouting_Entry(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from);

  inline CMsgGCMsgMasterSetWebAPIRouting_Entry& operator=(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMsgMasterSetWebAPIRouting_Entry(CMsgGCMsgMasterSetWebAPIRouting_Entry&& from) noexcept
    : CMsgGCMsgMasterSetWebAPIRouting_Entry() {
    *this = ::std::move(from);
  }

  inline CMsgGCMsgMasterSetWebAPIRouting_Entry& operator=(CMsgGCMsgMasterSetWebAPIRouting_Entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMsgMasterSetWebAPIRouting_Entry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMsgMasterSetWebAPIRouting_Entry* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMsgMasterSetWebAPIRouting_Entry*>(
               &_CMsgGCMsgMasterSetWebAPIRouting_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(CMsgGCMsgMasterSetWebAPIRouting_Entry* other);
  friend void swap(CMsgGCMsgMasterSetWebAPIRouting_Entry& a, CMsgGCMsgMasterSetWebAPIRouting_Entry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMsgMasterSetWebAPIRouting_Entry* New() const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetWebAPIRouting_Entry>(nullptr);
  }

  CMsgGCMsgMasterSetWebAPIRouting_Entry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetWebAPIRouting_Entry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from);
  void MergeFrom(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMsgMasterSetWebAPIRouting_Entry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string interface_name = 1;
  bool has_interface_name() const;
  void clear_interface_name();
  static const int kInterfaceNameFieldNumber = 1;
  const ::std::string& interface_name() const;
  void set_interface_name(const ::std::string& value);
  #if LANG_CXX11
  void set_interface_name(::std::string&& value);
  #endif
  void set_interface_name(const char* value);
  void set_interface_name(const char* value, size_t size);
  ::std::string* mutable_interface_name();
  ::std::string* release_interface_name();
  void set_allocated_interface_name(::std::string* interface_name);

  // optional string method_name = 2;
  bool has_method_name() const;
  void clear_method_name();
  static const int kMethodNameFieldNumber = 2;
  const ::std::string& method_name() const;
  void set_method_name(const ::std::string& value);
  #if LANG_CXX11
  void set_method_name(::std::string&& value);
  #endif
  void set_method_name(const char* value);
  void set_method_name(const char* value, size_t size);
  ::std::string* mutable_method_name();
  ::std::string* release_method_name();
  void set_allocated_method_name(::std::string* method_name);

  // optional .proto.dota.CMsgGCRoutingInfo routing = 3;
  bool has_routing() const;
  void clear_routing();
  static const int kRoutingFieldNumber = 3;
  const ::proto::dota::CMsgGCRoutingInfo& routing() const;
  ::proto::dota::CMsgGCRoutingInfo* release_routing();
  ::proto::dota::CMsgGCRoutingInfo* mutable_routing();
  void set_allocated_routing(::proto::dota::CMsgGCRoutingInfo* routing);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr interface_name_;
  ::google::protobuf::internal::ArenaStringPtr method_name_;
  ::proto::dota::CMsgGCRoutingInfo* routing_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetWebAPIRouting final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMsgMasterSetWebAPIRouting) */ {
 public:
  CMsgGCMsgMasterSetWebAPIRouting();
  virtual ~CMsgGCMsgMasterSetWebAPIRouting();

  CMsgGCMsgMasterSetWebAPIRouting(const CMsgGCMsgMasterSetWebAPIRouting& from);

  inline CMsgGCMsgMasterSetWebAPIRouting& operator=(const CMsgGCMsgMasterSetWebAPIRouting& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMsgMasterSetWebAPIRouting(CMsgGCMsgMasterSetWebAPIRouting&& from) noexcept
    : CMsgGCMsgMasterSetWebAPIRouting() {
    *this = ::std::move(from);
  }

  inline CMsgGCMsgMasterSetWebAPIRouting& operator=(CMsgGCMsgMasterSetWebAPIRouting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMsgMasterSetWebAPIRouting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMsgMasterSetWebAPIRouting* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMsgMasterSetWebAPIRouting*>(
               &_CMsgGCMsgMasterSetWebAPIRouting_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(CMsgGCMsgMasterSetWebAPIRouting* other);
  friend void swap(CMsgGCMsgMasterSetWebAPIRouting& a, CMsgGCMsgMasterSetWebAPIRouting& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMsgMasterSetWebAPIRouting* New() const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetWebAPIRouting>(nullptr);
  }

  CMsgGCMsgMasterSetWebAPIRouting* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetWebAPIRouting>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting& from);
  void MergeFrom(const CMsgGCMsgMasterSetWebAPIRouting& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMsgMasterSetWebAPIRouting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCMsgMasterSetWebAPIRouting_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 1;
  ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Entry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Entry >*
      mutable_entries();
  const ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Entry& entries(int index) const;
  ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Entry* add_entries();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Entry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMsgMasterSetWebAPIRouting)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Entry > entries_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetClientMsgRouting_Entry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMsgMasterSetClientMsgRouting.Entry) */ {
 public:
  CMsgGCMsgMasterSetClientMsgRouting_Entry();
  virtual ~CMsgGCMsgMasterSetClientMsgRouting_Entry();

  CMsgGCMsgMasterSetClientMsgRouting_Entry(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from);

  inline CMsgGCMsgMasterSetClientMsgRouting_Entry& operator=(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMsgMasterSetClientMsgRouting_Entry(CMsgGCMsgMasterSetClientMsgRouting_Entry&& from) noexcept
    : CMsgGCMsgMasterSetClientMsgRouting_Entry() {
    *this = ::std::move(from);
  }

  inline CMsgGCMsgMasterSetClientMsgRouting_Entry& operator=(CMsgGCMsgMasterSetClientMsgRouting_Entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMsgMasterSetClientMsgRouting_Entry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMsgMasterSetClientMsgRouting_Entry* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMsgMasterSetClientMsgRouting_Entry*>(
               &_CMsgGCMsgMasterSetClientMsgRouting_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(CMsgGCMsgMasterSetClientMsgRouting_Entry* other);
  friend void swap(CMsgGCMsgMasterSetClientMsgRouting_Entry& a, CMsgGCMsgMasterSetClientMsgRouting_Entry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMsgMasterSetClientMsgRouting_Entry* New() const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetClientMsgRouting_Entry>(nullptr);
  }

  CMsgGCMsgMasterSetClientMsgRouting_Entry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetClientMsgRouting_Entry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from);
  void MergeFrom(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMsgMasterSetClientMsgRouting_Entry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgGCRoutingInfo routing = 2;
  bool has_routing() const;
  void clear_routing();
  static const int kRoutingFieldNumber = 2;
  const ::proto::dota::CMsgGCRoutingInfo& routing() const;
  ::proto::dota::CMsgGCRoutingInfo* release_routing();
  ::proto::dota::CMsgGCRoutingInfo* mutable_routing();
  void set_allocated_routing(::proto::dota::CMsgGCRoutingInfo* routing);

  // optional uint32 msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::google::protobuf::uint32 msg_type() const;
  void set_msg_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMsgMasterSetClientMsgRouting.Entry)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgGCRoutingInfo* routing_;
  ::google::protobuf::uint32 msg_type_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetClientMsgRouting final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMsgMasterSetClientMsgRouting) */ {
 public:
  CMsgGCMsgMasterSetClientMsgRouting();
  virtual ~CMsgGCMsgMasterSetClientMsgRouting();

  CMsgGCMsgMasterSetClientMsgRouting(const CMsgGCMsgMasterSetClientMsgRouting& from);

  inline CMsgGCMsgMasterSetClientMsgRouting& operator=(const CMsgGCMsgMasterSetClientMsgRouting& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMsgMasterSetClientMsgRouting(CMsgGCMsgMasterSetClientMsgRouting&& from) noexcept
    : CMsgGCMsgMasterSetClientMsgRouting() {
    *this = ::std::move(from);
  }

  inline CMsgGCMsgMasterSetClientMsgRouting& operator=(CMsgGCMsgMasterSetClientMsgRouting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMsgMasterSetClientMsgRouting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMsgMasterSetClientMsgRouting* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMsgMasterSetClientMsgRouting*>(
               &_CMsgGCMsgMasterSetClientMsgRouting_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(CMsgGCMsgMasterSetClientMsgRouting* other);
  friend void swap(CMsgGCMsgMasterSetClientMsgRouting& a, CMsgGCMsgMasterSetClientMsgRouting& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMsgMasterSetClientMsgRouting* New() const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetClientMsgRouting>(nullptr);
  }

  CMsgGCMsgMasterSetClientMsgRouting* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetClientMsgRouting>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting& from);
  void MergeFrom(const CMsgGCMsgMasterSetClientMsgRouting& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMsgMasterSetClientMsgRouting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCMsgMasterSetClientMsgRouting_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 1;
  ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Entry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Entry >*
      mutable_entries();
  const ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Entry& entries(int index) const;
  ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Entry* add_entries();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Entry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMsgMasterSetClientMsgRouting)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Entry > entries_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetWebAPIRouting_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMsgMasterSetWebAPIRouting_Response) */ {
 public:
  CMsgGCMsgMasterSetWebAPIRouting_Response();
  virtual ~CMsgGCMsgMasterSetWebAPIRouting_Response();

  CMsgGCMsgMasterSetWebAPIRouting_Response(const CMsgGCMsgMasterSetWebAPIRouting_Response& from);

  inline CMsgGCMsgMasterSetWebAPIRouting_Response& operator=(const CMsgGCMsgMasterSetWebAPIRouting_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMsgMasterSetWebAPIRouting_Response(CMsgGCMsgMasterSetWebAPIRouting_Response&& from) noexcept
    : CMsgGCMsgMasterSetWebAPIRouting_Response() {
    *this = ::std::move(from);
  }

  inline CMsgGCMsgMasterSetWebAPIRouting_Response& operator=(CMsgGCMsgMasterSetWebAPIRouting_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMsgMasterSetWebAPIRouting_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMsgMasterSetWebAPIRouting_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMsgMasterSetWebAPIRouting_Response*>(
               &_CMsgGCMsgMasterSetWebAPIRouting_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(CMsgGCMsgMasterSetWebAPIRouting_Response* other);
  friend void swap(CMsgGCMsgMasterSetWebAPIRouting_Response& a, CMsgGCMsgMasterSetWebAPIRouting_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMsgMasterSetWebAPIRouting_Response* New() const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetWebAPIRouting_Response>(nullptr);
  }

  CMsgGCMsgMasterSetWebAPIRouting_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetWebAPIRouting_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting_Response& from);
  void MergeFrom(const CMsgGCMsgMasterSetWebAPIRouting_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMsgMasterSetWebAPIRouting_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::int32 eresult() const;
  void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMsgMasterSetWebAPIRouting_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 eresult_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetClientMsgRouting_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMsgMasterSetClientMsgRouting_Response) */ {
 public:
  CMsgGCMsgMasterSetClientMsgRouting_Response();
  virtual ~CMsgGCMsgMasterSetClientMsgRouting_Response();

  CMsgGCMsgMasterSetClientMsgRouting_Response(const CMsgGCMsgMasterSetClientMsgRouting_Response& from);

  inline CMsgGCMsgMasterSetClientMsgRouting_Response& operator=(const CMsgGCMsgMasterSetClientMsgRouting_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMsgMasterSetClientMsgRouting_Response(CMsgGCMsgMasterSetClientMsgRouting_Response&& from) noexcept
    : CMsgGCMsgMasterSetClientMsgRouting_Response() {
    *this = ::std::move(from);
  }

  inline CMsgGCMsgMasterSetClientMsgRouting_Response& operator=(CMsgGCMsgMasterSetClientMsgRouting_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMsgMasterSetClientMsgRouting_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMsgMasterSetClientMsgRouting_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMsgMasterSetClientMsgRouting_Response*>(
               &_CMsgGCMsgMasterSetClientMsgRouting_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(CMsgGCMsgMasterSetClientMsgRouting_Response* other);
  friend void swap(CMsgGCMsgMasterSetClientMsgRouting_Response& a, CMsgGCMsgMasterSetClientMsgRouting_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMsgMasterSetClientMsgRouting_Response* New() const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetClientMsgRouting_Response>(nullptr);
  }

  CMsgGCMsgMasterSetClientMsgRouting_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMsgMasterSetClientMsgRouting_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting_Response& from);
  void MergeFrom(const CMsgGCMsgMasterSetClientMsgRouting_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMsgMasterSetClientMsgRouting_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::int32 eresult() const;
  void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMsgMasterSetClientMsgRouting_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 eresult_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMsgSetOptions_MessageRange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMsgSetOptions.MessageRange) */ {
 public:
  CMsgGCMsgSetOptions_MessageRange();
  virtual ~CMsgGCMsgSetOptions_MessageRange();

  CMsgGCMsgSetOptions_MessageRange(const CMsgGCMsgSetOptions_MessageRange& from);

  inline CMsgGCMsgSetOptions_MessageRange& operator=(const CMsgGCMsgSetOptions_MessageRange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMsgSetOptions_MessageRange(CMsgGCMsgSetOptions_MessageRange&& from) noexcept
    : CMsgGCMsgSetOptions_MessageRange() {
    *this = ::std::move(from);
  }

  inline CMsgGCMsgSetOptions_MessageRange& operator=(CMsgGCMsgSetOptions_MessageRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMsgSetOptions_MessageRange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMsgSetOptions_MessageRange* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMsgSetOptions_MessageRange*>(
               &_CMsgGCMsgSetOptions_MessageRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(CMsgGCMsgSetOptions_MessageRange* other);
  friend void swap(CMsgGCMsgSetOptions_MessageRange& a, CMsgGCMsgSetOptions_MessageRange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMsgSetOptions_MessageRange* New() const final {
    return CreateMaybeMessage<CMsgGCMsgSetOptions_MessageRange>(nullptr);
  }

  CMsgGCMsgSetOptions_MessageRange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMsgSetOptions_MessageRange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMsgSetOptions_MessageRange& from);
  void MergeFrom(const CMsgGCMsgSetOptions_MessageRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMsgSetOptions_MessageRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 low = 1;
  bool has_low() const;
  void clear_low();
  static const int kLowFieldNumber = 1;
  ::google::protobuf::uint32 low() const;
  void set_low(::google::protobuf::uint32 value);

  // required uint32 high = 2;
  bool has_high() const;
  void clear_high();
  static const int kHighFieldNumber = 2;
  ::google::protobuf::uint32 high() const;
  void set_high(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMsgSetOptions.MessageRange)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 low_;
  ::google::protobuf::uint32 high_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMsgSetOptions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMsgSetOptions) */ {
 public:
  CMsgGCMsgSetOptions();
  virtual ~CMsgGCMsgSetOptions();

  CMsgGCMsgSetOptions(const CMsgGCMsgSetOptions& from);

  inline CMsgGCMsgSetOptions& operator=(const CMsgGCMsgSetOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMsgSetOptions(CMsgGCMsgSetOptions&& from) noexcept
    : CMsgGCMsgSetOptions() {
    *this = ::std::move(from);
  }

  inline CMsgGCMsgSetOptions& operator=(CMsgGCMsgSetOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCMsgSetOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMsgSetOptions* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMsgSetOptions*>(
               &_CMsgGCMsgSetOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(CMsgGCMsgSetOptions* other);
  friend void swap(CMsgGCMsgSetOptions& a, CMsgGCMsgSetOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMsgSetOptions* New() const final {
    return CreateMaybeMessage<CMsgGCMsgSetOptions>(nullptr);
  }

  CMsgGCMsgSetOptions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMsgSetOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCMsgSetOptions& from);
  void MergeFrom(const CMsgGCMsgSetOptions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMsgSetOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCMsgSetOptions_MessageRange MessageRange;

  typedef CMsgGCMsgSetOptions_Option Option;
  static const Option NOTIFY_USER_SESSIONS =
    CMsgGCMsgSetOptions_Option_NOTIFY_USER_SESSIONS;
  static const Option NOTIFY_SERVER_SESSIONS =
    CMsgGCMsgSetOptions_Option_NOTIFY_SERVER_SESSIONS;
  static const Option NOTIFY_ACHIEVEMENTS =
    CMsgGCMsgSetOptions_Option_NOTIFY_ACHIEVEMENTS;
  static const Option NOTIFY_VAC_ACTION =
    CMsgGCMsgSetOptions_Option_NOTIFY_VAC_ACTION;
  static inline bool Option_IsValid(int value) {
    return CMsgGCMsgSetOptions_Option_IsValid(value);
  }
  static const Option Option_MIN =
    CMsgGCMsgSetOptions_Option_Option_MIN;
  static const Option Option_MAX =
    CMsgGCMsgSetOptions_Option_Option_MAX;
  static const int Option_ARRAYSIZE =
    CMsgGCMsgSetOptions_Option_Option_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Option_descriptor() {
    return CMsgGCMsgSetOptions_Option_descriptor();
  }
  static inline const ::std::string& Option_Name(Option value) {
    return CMsgGCMsgSetOptions_Option_Name(value);
  }
  static inline bool Option_Parse(const ::std::string& name,
      Option* value) {
    return CMsgGCMsgSetOptions_Option_Parse(name, value);
  }

  typedef CMsgGCMsgSetOptions_GCSQLVersion GCSQLVersion;
  static const GCSQLVersion GCSQL_VERSION_BASELINE =
    CMsgGCMsgSetOptions_GCSQLVersion_GCSQL_VERSION_BASELINE;
  static const GCSQLVersion GCSQL_VERSION_BOOLTYPE =
    CMsgGCMsgSetOptions_GCSQLVersion_GCSQL_VERSION_BOOLTYPE;
  static inline bool GCSQLVersion_IsValid(int value) {
    return CMsgGCMsgSetOptions_GCSQLVersion_IsValid(value);
  }
  static const GCSQLVersion GCSQLVersion_MIN =
    CMsgGCMsgSetOptions_GCSQLVersion_GCSQLVersion_MIN;
  static const GCSQLVersion GCSQLVersion_MAX =
    CMsgGCMsgSetOptions_GCSQLVersion_GCSQLVersion_MAX;
  static const int GCSQLVersion_ARRAYSIZE =
    CMsgGCMsgSetOptions_GCSQLVersion_GCSQLVersion_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GCSQLVersion_descriptor() {
    return CMsgGCMsgSetOptions_GCSQLVersion_descriptor();
  }
  static inline const ::std::string& GCSQLVersion_Name(GCSQLVersion value) {
    return CMsgGCMsgSetOptions_GCSQLVersion_Name(value);
  }
  static inline bool GCSQLVersion_Parse(const ::std::string& name,
      GCSQLVersion* value) {
    return CMsgGCMsgSetOptions_GCSQLVersion_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCMsgSetOptions.Option options = 1;
  int options_size() const;
  void clear_options();
  static const int kOptionsFieldNumber = 1;
  ::proto::dota::CMsgGCMsgSetOptions_Option options(int index) const;
  void set_options(int index, ::proto::dota::CMsgGCMsgSetOptions_Option value);
  void add_options(::proto::dota::CMsgGCMsgSetOptions_Option value);
  const ::google::protobuf::RepeatedField<int>& options() const;
  ::google::protobuf::RepeatedField<int>* mutable_options();

  // repeated .proto.dota.CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
  int client_msg_ranges_size() const;
  void clear_client_msg_ranges();
  static const int kClientMsgRangesFieldNumber = 2;
  ::proto::dota::CMsgGCMsgSetOptions_MessageRange* mutable_client_msg_ranges(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgSetOptions_MessageRange >*
      mutable_client_msg_ranges();
  const ::proto::dota::CMsgGCMsgSetOptions_MessageRange& client_msg_ranges(int index) const;
  ::proto::dota::CMsgGCMsgSetOptions_MessageRange* add_client_msg_ranges();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgSetOptions_MessageRange >&
      client_msg_ranges() const;

  // optional .proto.dota.CMsgGCMsgSetOptions.GCSQLVersion gcsql_version = 3 [default = GCSQL_VERSION_BASELINE];
  bool has_gcsql_version() const;
  void clear_gcsql_version();
  static const int kGcsqlVersionFieldNumber = 3;
  ::proto::dota::CMsgGCMsgSetOptions_GCSQLVersion gcsql_version() const;
  void set_gcsql_version(::proto::dota::CMsgGCMsgSetOptions_GCSQLVersion value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMsgSetOptions)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField<int> options_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgSetOptions_MessageRange > client_msg_ranges_;
  int gcsql_version_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCHUpdateSession_ExtraField final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCHUpdateSession.ExtraField) */ {
 public:
  CMsgGCHUpdateSession_ExtraField();
  virtual ~CMsgGCHUpdateSession_ExtraField();

  CMsgGCHUpdateSession_ExtraField(const CMsgGCHUpdateSession_ExtraField& from);

  inline CMsgGCHUpdateSession_ExtraField& operator=(const CMsgGCHUpdateSession_ExtraField& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCHUpdateSession_ExtraField(CMsgGCHUpdateSession_ExtraField&& from) noexcept
    : CMsgGCHUpdateSession_ExtraField() {
    *this = ::std::move(from);
  }

  inline CMsgGCHUpdateSession_ExtraField& operator=(CMsgGCHUpdateSession_ExtraField&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCHUpdateSession_ExtraField& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCHUpdateSession_ExtraField* internal_default_instance() {
    return reinterpret_cast<const CMsgGCHUpdateSession_ExtraField*>(
               &_CMsgGCHUpdateSession_ExtraField_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(CMsgGCHUpdateSession_ExtraField* other);
  friend void swap(CMsgGCHUpdateSession_ExtraField& a, CMsgGCHUpdateSession_ExtraField& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCHUpdateSession_ExtraField* New() const final {
    return CreateMaybeMessage<CMsgGCHUpdateSession_ExtraField>(nullptr);
  }

  CMsgGCHUpdateSession_ExtraField* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCHUpdateSession_ExtraField>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCHUpdateSession_ExtraField& from);
  void MergeFrom(const CMsgGCHUpdateSession_ExtraField& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCHUpdateSession_ExtraField* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCHUpdateSession.ExtraField)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCHUpdateSession final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCHUpdateSession) */ {
 public:
  CMsgGCHUpdateSession();
  virtual ~CMsgGCHUpdateSession();

  CMsgGCHUpdateSession(const CMsgGCHUpdateSession& from);

  inline CMsgGCHUpdateSession& operator=(const CMsgGCHUpdateSession& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCHUpdateSession(CMsgGCHUpdateSession&& from) noexcept
    : CMsgGCHUpdateSession() {
    *this = ::std::move(from);
  }

  inline CMsgGCHUpdateSession& operator=(CMsgGCHUpdateSession&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCHUpdateSession& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCHUpdateSession* internal_default_instance() {
    return reinterpret_cast<const CMsgGCHUpdateSession*>(
               &_CMsgGCHUpdateSession_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(CMsgGCHUpdateSession* other);
  friend void swap(CMsgGCHUpdateSession& a, CMsgGCHUpdateSession& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCHUpdateSession* New() const final {
    return CreateMaybeMessage<CMsgGCHUpdateSession>(nullptr);
  }

  CMsgGCHUpdateSession* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCHUpdateSession>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCHUpdateSession& from);
  void MergeFrom(const CMsgGCHUpdateSession& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCHUpdateSession* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCHUpdateSession_ExtraField ExtraField;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCHUpdateSession.ExtraField extra_fields = 9;
  int extra_fields_size() const;
  void clear_extra_fields();
  static const int kExtraFieldsFieldNumber = 9;
  ::proto::dota::CMsgGCHUpdateSession_ExtraField* mutable_extra_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCHUpdateSession_ExtraField >*
      mutable_extra_fields();
  const ::proto::dota::CMsgGCHUpdateSession_ExtraField& extra_fields(int index) const;
  ::proto::dota::CMsgGCHUpdateSession_ExtraField* add_extra_fields();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCHUpdateSession_ExtraField >&
      extra_fields() const;

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 app_id = 2;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // optional bool online = 3;
  bool has_online() const;
  void clear_online();
  static const int kOnlineFieldNumber = 3;
  bool online() const;
  void set_online(bool value);

  // optional fixed64 server_steam_id = 4;
  bool has_server_steam_id() const;
  void clear_server_steam_id();
  static const int kServerSteamIdFieldNumber = 4;
  ::google::protobuf::uint64 server_steam_id() const;
  void set_server_steam_id(::google::protobuf::uint64 value);

  // optional uint32 server_addr = 5;
  bool has_server_addr() const;
  void clear_server_addr();
  static const int kServerAddrFieldNumber = 5;
  ::google::protobuf::uint32 server_addr() const;
  void set_server_addr(::google::protobuf::uint32 value);

  // optional uint32 server_port = 6;
  bool has_server_port() const;
  void clear_server_port();
  static const int kServerPortFieldNumber = 6;
  ::google::protobuf::uint32 server_port() const;
  void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 os_type = 7;
  bool has_os_type() const;
  void clear_os_type();
  static const int kOsTypeFieldNumber = 7;
  ::google::protobuf::uint32 os_type() const;
  void set_os_type(::google::protobuf::uint32 value);

  // optional uint32 client_addr = 8;
  bool has_client_addr() const;
  void clear_client_addr();
  static const int kClientAddrFieldNumber = 8;
  ::google::protobuf::uint32 client_addr() const;
  void set_client_addr(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCHUpdateSession)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCHUpdateSession_ExtraField > extra_fields_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 app_id_;
  bool online_;
  ::google::protobuf::uint64 server_steam_id_;
  ::google::protobuf::uint32 server_addr_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 os_type_;
  ::google::protobuf::uint32 client_addr_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgNotificationOfSuspiciousActivity_MultipleGameInstances final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances) */ {
 public:
  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances();
  virtual ~CMsgNotificationOfSuspiciousActivity_MultipleGameInstances();

  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from);

  inline CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& operator=(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances&& from) noexcept
    : CMsgNotificationOfSuspiciousActivity_MultipleGameInstances() {
    *this = ::std::move(from);
  }

  inline CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& operator=(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* internal_default_instance() {
    return reinterpret_cast<const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances*>(
               &_CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* other);
  friend void swap(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& a, CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* New() const final {
    return CreateMaybeMessage<CMsgNotificationOfSuspiciousActivity_MultipleGameInstances>(nullptr);
  }

  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgNotificationOfSuspiciousActivity_MultipleGameInstances>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from);
  void MergeFrom(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 other_steamids = 2;
  int other_steamids_size() const;
  void clear_other_steamids();
  static const int kOtherSteamidsFieldNumber = 2;
  ::google::protobuf::uint64 other_steamids(int index) const;
  void set_other_steamids(int index, ::google::protobuf::uint64 value);
  void add_other_steamids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      other_steamids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_other_steamids();

  // optional uint32 app_instance_count = 1;
  bool has_app_instance_count() const;
  void clear_app_instance_count();
  static const int kAppInstanceCountFieldNumber = 1;
  ::google::protobuf::uint32 app_instance_count() const;
  void set_app_instance_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > other_steamids_;
  ::google::protobuf::uint32 app_instance_count_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgNotificationOfSuspiciousActivity final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgNotificationOfSuspiciousActivity) */ {
 public:
  CMsgNotificationOfSuspiciousActivity();
  virtual ~CMsgNotificationOfSuspiciousActivity();

  CMsgNotificationOfSuspiciousActivity(const CMsgNotificationOfSuspiciousActivity& from);

  inline CMsgNotificationOfSuspiciousActivity& operator=(const CMsgNotificationOfSuspiciousActivity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgNotificationOfSuspiciousActivity(CMsgNotificationOfSuspiciousActivity&& from) noexcept
    : CMsgNotificationOfSuspiciousActivity() {
    *this = ::std::move(from);
  }

  inline CMsgNotificationOfSuspiciousActivity& operator=(CMsgNotificationOfSuspiciousActivity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgNotificationOfSuspiciousActivity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgNotificationOfSuspiciousActivity* internal_default_instance() {
    return reinterpret_cast<const CMsgNotificationOfSuspiciousActivity*>(
               &_CMsgNotificationOfSuspiciousActivity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(CMsgNotificationOfSuspiciousActivity* other);
  friend void swap(CMsgNotificationOfSuspiciousActivity& a, CMsgNotificationOfSuspiciousActivity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgNotificationOfSuspiciousActivity* New() const final {
    return CreateMaybeMessage<CMsgNotificationOfSuspiciousActivity>(nullptr);
  }

  CMsgNotificationOfSuspiciousActivity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgNotificationOfSuspiciousActivity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgNotificationOfSuspiciousActivity& from);
  void MergeFrom(const CMsgNotificationOfSuspiciousActivity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgNotificationOfSuspiciousActivity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgNotificationOfSuspiciousActivity_MultipleGameInstances MultipleGameInstances;

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
  bool has_multiple_instances() const;
  void clear_multiple_instances();
  static const int kMultipleInstancesFieldNumber = 3;
  const ::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& multiple_instances() const;
  ::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* release_multiple_instances();
  ::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* mutable_multiple_instances();
  void set_allocated_multiple_instances(::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* multiple_instances);

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 2;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgNotificationOfSuspiciousActivity)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* multiple_instances_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgDPPartnerMicroTxns_PartnerMicroTxn final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn) */ {
 public:
  CMsgDPPartnerMicroTxns_PartnerMicroTxn();
  virtual ~CMsgDPPartnerMicroTxns_PartnerMicroTxn();

  CMsgDPPartnerMicroTxns_PartnerMicroTxn(const CMsgDPPartnerMicroTxns_PartnerMicroTxn& from);

  inline CMsgDPPartnerMicroTxns_PartnerMicroTxn& operator=(const CMsgDPPartnerMicroTxns_PartnerMicroTxn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDPPartnerMicroTxns_PartnerMicroTxn(CMsgDPPartnerMicroTxns_PartnerMicroTxn&& from) noexcept
    : CMsgDPPartnerMicroTxns_PartnerMicroTxn() {
    *this = ::std::move(from);
  }

  inline CMsgDPPartnerMicroTxns_PartnerMicroTxn& operator=(CMsgDPPartnerMicroTxns_PartnerMicroTxn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDPPartnerMicroTxns_PartnerMicroTxn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDPPartnerMicroTxns_PartnerMicroTxn* internal_default_instance() {
    return reinterpret_cast<const CMsgDPPartnerMicroTxns_PartnerMicroTxn*>(
               &_CMsgDPPartnerMicroTxns_PartnerMicroTxn_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(CMsgDPPartnerMicroTxns_PartnerMicroTxn* other);
  friend void swap(CMsgDPPartnerMicroTxns_PartnerMicroTxn& a, CMsgDPPartnerMicroTxns_PartnerMicroTxn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDPPartnerMicroTxns_PartnerMicroTxn* New() const final {
    return CreateMaybeMessage<CMsgDPPartnerMicroTxns_PartnerMicroTxn>(nullptr);
  }

  CMsgDPPartnerMicroTxns_PartnerMicroTxn* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDPPartnerMicroTxns_PartnerMicroTxn>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDPPartnerMicroTxns_PartnerMicroTxn& from);
  void MergeFrom(const CMsgDPPartnerMicroTxns_PartnerMicroTxn& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDPPartnerMicroTxns_PartnerMicroTxn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string country_code = 14;
  bool has_country_code() const;
  void clear_country_code();
  static const int kCountryCodeFieldNumber = 14;
  const ::std::string& country_code() const;
  void set_country_code(const ::std::string& value);
  #if LANG_CXX11
  void set_country_code(::std::string&& value);
  #endif
  void set_country_code(const char* value);
  void set_country_code(const char* value, size_t size);
  ::std::string* mutable_country_code();
  ::std::string* release_country_code();
  void set_allocated_country_code(::std::string* country_code);

  // optional string region_code = 15;
  bool has_region_code() const;
  void clear_region_code();
  static const int kRegionCodeFieldNumber = 15;
  const ::std::string& region_code() const;
  void set_region_code(const ::std::string& value);
  #if LANG_CXX11
  void set_region_code(::std::string&& value);
  #endif
  void set_region_code(const char* value);
  void set_region_code(const char* value, size_t size);
  ::std::string* mutable_region_code();
  ::std::string* release_region_code();
  void set_allocated_region_code(::std::string* region_code);

  // optional uint32 init_time = 1;
  bool has_init_time() const;
  void clear_init_time();
  static const int kInitTimeFieldNumber = 1;
  ::google::protobuf::uint32 init_time() const;
  void set_init_time(::google::protobuf::uint32 value);

  // optional uint32 last_update_time = 2;
  bool has_last_update_time() const;
  void clear_last_update_time();
  static const int kLastUpdateTimeFieldNumber = 2;
  ::google::protobuf::uint32 last_update_time() const;
  void set_last_update_time(::google::protobuf::uint32 value);

  // optional uint64 txn_id = 3;
  bool has_txn_id() const;
  void clear_txn_id();
  static const int kTxnIdFieldNumber = 3;
  ::google::protobuf::uint64 txn_id() const;
  void set_txn_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 4;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 4;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 line_item = 5;
  bool has_line_item() const;
  void clear_line_item();
  static const int kLineItemFieldNumber = 5;
  ::google::protobuf::uint32 line_item() const;
  void set_line_item(::google::protobuf::uint32 value);

  // optional uint64 item_id = 6;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 6;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // optional uint64 price = 8;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 8;
  ::google::protobuf::uint64 price() const;
  void set_price(::google::protobuf::uint64 value);

  // optional uint64 tax = 9;
  bool has_tax() const;
  void clear_tax();
  static const int kTaxFieldNumber = 9;
  ::google::protobuf::uint64 tax() const;
  void set_tax(::google::protobuf::uint64 value);

  // optional uint32 def_index = 7;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 7;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // optional uint32 purchase_type = 12;
  bool has_purchase_type() const;
  void clear_purchase_type();
  static const int kPurchaseTypeFieldNumber = 12;
  ::google::protobuf::uint32 purchase_type() const;
  void set_purchase_type(::google::protobuf::uint32 value);

  // optional uint64 price_usd = 10;
  bool has_price_usd() const;
  void clear_price_usd();
  static const int kPriceUsdFieldNumber = 10;
  ::google::protobuf::uint64 price_usd() const;
  void set_price_usd(::google::protobuf::uint64 value);

  // optional uint64 tax_usd = 11;
  bool has_tax_usd() const;
  void clear_tax_usd();
  static const int kTaxUsdFieldNumber = 11;
  ::google::protobuf::uint64 tax_usd() const;
  void set_tax_usd(::google::protobuf::uint64 value);

  // optional uint32 steam_txn_type = 13;
  bool has_steam_txn_type() const;
  void clear_steam_txn_type();
  static const int kSteamTxnTypeFieldNumber = 13;
  ::google::protobuf::uint32 steam_txn_type() const;
  void set_steam_txn_type(::google::protobuf::uint32 value);

  // optional int32 quantity = 16;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 16;
  ::google::protobuf::int32 quantity() const;
  void set_quantity(::google::protobuf::int32 value);

  // optional uint64 ref_trans_id = 17;
  bool has_ref_trans_id() const;
  void clear_ref_trans_id();
  static const int kRefTransIdFieldNumber = 17;
  ::google::protobuf::uint64 ref_trans_id() const;
  void set_ref_trans_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr country_code_;
  ::google::protobuf::internal::ArenaStringPtr region_code_;
  ::google::protobuf::uint32 init_time_;
  ::google::protobuf::uint32 last_update_time_;
  ::google::protobuf::uint64 txn_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 line_item_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint64 price_;
  ::google::protobuf::uint64 tax_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 purchase_type_;
  ::google::protobuf::uint64 price_usd_;
  ::google::protobuf::uint64 tax_usd_;
  ::google::protobuf::uint32 steam_txn_type_;
  ::google::protobuf::int32 quantity_;
  ::google::protobuf::uint64 ref_trans_id_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgDPPartnerMicroTxns_PartnerInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo) */ {
 public:
  CMsgDPPartnerMicroTxns_PartnerInfo();
  virtual ~CMsgDPPartnerMicroTxns_PartnerInfo();

  CMsgDPPartnerMicroTxns_PartnerInfo(const CMsgDPPartnerMicroTxns_PartnerInfo& from);

  inline CMsgDPPartnerMicroTxns_PartnerInfo& operator=(const CMsgDPPartnerMicroTxns_PartnerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDPPartnerMicroTxns_PartnerInfo(CMsgDPPartnerMicroTxns_PartnerInfo&& from) noexcept
    : CMsgDPPartnerMicroTxns_PartnerInfo() {
    *this = ::std::move(from);
  }

  inline CMsgDPPartnerMicroTxns_PartnerInfo& operator=(CMsgDPPartnerMicroTxns_PartnerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDPPartnerMicroTxns_PartnerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDPPartnerMicroTxns_PartnerInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgDPPartnerMicroTxns_PartnerInfo*>(
               &_CMsgDPPartnerMicroTxns_PartnerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(CMsgDPPartnerMicroTxns_PartnerInfo* other);
  friend void swap(CMsgDPPartnerMicroTxns_PartnerInfo& a, CMsgDPPartnerMicroTxns_PartnerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDPPartnerMicroTxns_PartnerInfo* New() const final {
    return CreateMaybeMessage<CMsgDPPartnerMicroTxns_PartnerInfo>(nullptr);
  }

  CMsgDPPartnerMicroTxns_PartnerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDPPartnerMicroTxns_PartnerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDPPartnerMicroTxns_PartnerInfo& from);
  void MergeFrom(const CMsgDPPartnerMicroTxns_PartnerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDPPartnerMicroTxns_PartnerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string partner_name = 2;
  bool has_partner_name() const;
  void clear_partner_name();
  static const int kPartnerNameFieldNumber = 2;
  const ::std::string& partner_name() const;
  void set_partner_name(const ::std::string& value);
  #if LANG_CXX11
  void set_partner_name(::std::string&& value);
  #endif
  void set_partner_name(const char* value);
  void set_partner_name(const char* value, size_t size);
  ::std::string* mutable_partner_name();
  ::std::string* release_partner_name();
  void set_allocated_partner_name(::std::string* partner_name);

  // optional string currency_code = 3;
  bool has_currency_code() const;
  void clear_currency_code();
  static const int kCurrencyCodeFieldNumber = 3;
  const ::std::string& currency_code() const;
  void set_currency_code(const ::std::string& value);
  #if LANG_CXX11
  void set_currency_code(::std::string&& value);
  #endif
  void set_currency_code(const char* value);
  void set_currency_code(const char* value, size_t size);
  ::std::string* mutable_currency_code();
  ::std::string* release_currency_code();
  void set_allocated_currency_code(::std::string* currency_code);

  // optional string currency_name = 4;
  bool has_currency_name() const;
  void clear_currency_name();
  static const int kCurrencyNameFieldNumber = 4;
  const ::std::string& currency_name() const;
  void set_currency_name(const ::std::string& value);
  #if LANG_CXX11
  void set_currency_name(::std::string&& value);
  #endif
  void set_currency_name(const char* value);
  void set_currency_name(const char* value, size_t size);
  ::std::string* mutable_currency_name();
  ::std::string* release_currency_name();
  void set_allocated_currency_name(::std::string* currency_name);

  // optional uint32 partner_id = 1;
  bool has_partner_id() const;
  void clear_partner_id();
  static const int kPartnerIdFieldNumber = 1;
  ::google::protobuf::uint32 partner_id() const;
  void set_partner_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr partner_name_;
  ::google::protobuf::internal::ArenaStringPtr currency_code_;
  ::google::protobuf::internal::ArenaStringPtr currency_name_;
  ::google::protobuf::uint32 partner_id_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgDPPartnerMicroTxns final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDPPartnerMicroTxns) */ {
 public:
  CMsgDPPartnerMicroTxns();
  virtual ~CMsgDPPartnerMicroTxns();

  CMsgDPPartnerMicroTxns(const CMsgDPPartnerMicroTxns& from);

  inline CMsgDPPartnerMicroTxns& operator=(const CMsgDPPartnerMicroTxns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDPPartnerMicroTxns(CMsgDPPartnerMicroTxns&& from) noexcept
    : CMsgDPPartnerMicroTxns() {
    *this = ::std::move(from);
  }

  inline CMsgDPPartnerMicroTxns& operator=(CMsgDPPartnerMicroTxns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDPPartnerMicroTxns& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDPPartnerMicroTxns* internal_default_instance() {
    return reinterpret_cast<const CMsgDPPartnerMicroTxns*>(
               &_CMsgDPPartnerMicroTxns_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(CMsgDPPartnerMicroTxns* other);
  friend void swap(CMsgDPPartnerMicroTxns& a, CMsgDPPartnerMicroTxns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDPPartnerMicroTxns* New() const final {
    return CreateMaybeMessage<CMsgDPPartnerMicroTxns>(nullptr);
  }

  CMsgDPPartnerMicroTxns* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDPPartnerMicroTxns>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDPPartnerMicroTxns& from);
  void MergeFrom(const CMsgDPPartnerMicroTxns& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDPPartnerMicroTxns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDPPartnerMicroTxns_PartnerMicroTxn PartnerMicroTxn;
  typedef CMsgDPPartnerMicroTxns_PartnerInfo PartnerInfo;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn transactions = 4;
  int transactions_size() const;
  void clear_transactions();
  static const int kTransactionsFieldNumber = 4;
  ::proto::dota::CMsgDPPartnerMicroTxns_PartnerMicroTxn* mutable_transactions(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDPPartnerMicroTxns_PartnerMicroTxn >*
      mutable_transactions();
  const ::proto::dota::CMsgDPPartnerMicroTxns_PartnerMicroTxn& transactions(int index) const;
  ::proto::dota::CMsgDPPartnerMicroTxns_PartnerMicroTxn* add_transactions();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDPPartnerMicroTxns_PartnerMicroTxn >&
      transactions() const;

  // optional string gc_name = 2;
  bool has_gc_name() const;
  void clear_gc_name();
  static const int kGcNameFieldNumber = 2;
  const ::std::string& gc_name() const;
  void set_gc_name(const ::std::string& value);
  #if LANG_CXX11
  void set_gc_name(::std::string&& value);
  #endif
  void set_gc_name(const char* value);
  void set_gc_name(const char* value, size_t size);
  ::std::string* mutable_gc_name();
  ::std::string* release_gc_name();
  void set_allocated_gc_name(::std::string* gc_name);

  // optional .proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo partner = 3;
  bool has_partner() const;
  void clear_partner();
  static const int kPartnerFieldNumber = 3;
  const ::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo& partner() const;
  ::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo* release_partner();
  ::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo* mutable_partner();
  void set_allocated_partner(::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo* partner);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDPPartnerMicroTxns)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDPPartnerMicroTxns_PartnerMicroTxn > transactions_;
  ::google::protobuf::internal::ArenaStringPtr gc_name_;
  ::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo* partner_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgDPPartnerMicroTxnsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDPPartnerMicroTxnsResponse) */ {
 public:
  CMsgDPPartnerMicroTxnsResponse();
  virtual ~CMsgDPPartnerMicroTxnsResponse();

  CMsgDPPartnerMicroTxnsResponse(const CMsgDPPartnerMicroTxnsResponse& from);

  inline CMsgDPPartnerMicroTxnsResponse& operator=(const CMsgDPPartnerMicroTxnsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDPPartnerMicroTxnsResponse(CMsgDPPartnerMicroTxnsResponse&& from) noexcept
    : CMsgDPPartnerMicroTxnsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDPPartnerMicroTxnsResponse& operator=(CMsgDPPartnerMicroTxnsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDPPartnerMicroTxnsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDPPartnerMicroTxnsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDPPartnerMicroTxnsResponse*>(
               &_CMsgDPPartnerMicroTxnsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  void Swap(CMsgDPPartnerMicroTxnsResponse* other);
  friend void swap(CMsgDPPartnerMicroTxnsResponse& a, CMsgDPPartnerMicroTxnsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDPPartnerMicroTxnsResponse* New() const final {
    return CreateMaybeMessage<CMsgDPPartnerMicroTxnsResponse>(nullptr);
  }

  CMsgDPPartnerMicroTxnsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDPPartnerMicroTxnsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDPPartnerMicroTxnsResponse& from);
  void MergeFrom(const CMsgDPPartnerMicroTxnsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDPPartnerMicroTxnsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDPPartnerMicroTxnsResponse_EErrorCode EErrorCode;
  static const EErrorCode k_MsgValid =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgValid;
  static const EErrorCode k_MsgInvalidAppID =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidAppID;
  static const EErrorCode k_MsgInvalidPartnerInfo =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidPartnerInfo;
  static const EErrorCode k_MsgNoTransactions =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgNoTransactions;
  static const EErrorCode k_MsgSQLFailure =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgSQLFailure;
  static const EErrorCode k_MsgPartnerInfoDiscrepancy =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgPartnerInfoDiscrepancy;
  static const EErrorCode k_MsgTransactionInsertFailed =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgTransactionInsertFailed;
  static const EErrorCode k_MsgAlreadyRunning =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgAlreadyRunning;
  static const EErrorCode k_MsgInvalidTransactionData =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidTransactionData;
  static inline bool EErrorCode_IsValid(int value) {
    return CMsgDPPartnerMicroTxnsResponse_EErrorCode_IsValid(value);
  }
  static const EErrorCode EErrorCode_MIN =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_MIN;
  static const EErrorCode EErrorCode_MAX =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_MAX;
  static const int EErrorCode_ARRAYSIZE =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EErrorCode_descriptor() {
    return CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor();
  }
  static inline const ::std::string& EErrorCode_Name(EErrorCode value) {
    return CMsgDPPartnerMicroTxnsResponse_EErrorCode_Name(value);
  }
  static inline bool EErrorCode_Parse(const ::std::string& name,
      EErrorCode* value) {
    return CMsgDPPartnerMicroTxnsResponse_EErrorCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDPPartnerMicroTxnsResponse.EErrorCode eerrorcode = 2 [default = k_MsgValid];
  bool has_eerrorcode() const;
  void clear_eerrorcode();
  static const int kEerrorcodeFieldNumber = 2;
  ::proto::dota::CMsgDPPartnerMicroTxnsResponse_EErrorCode eerrorcode() const;
  void set_eerrorcode(::proto::dota::CMsgDPPartnerMicroTxnsResponse_EErrorCode value);

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDPPartnerMicroTxnsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int eerrorcode_;
  ::google::protobuf::uint32 eresult_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCHVacVerificationChange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCHVacVerificationChange) */ {
 public:
  CMsgGCHVacVerificationChange();
  virtual ~CMsgGCHVacVerificationChange();

  CMsgGCHVacVerificationChange(const CMsgGCHVacVerificationChange& from);

  inline CMsgGCHVacVerificationChange& operator=(const CMsgGCHVacVerificationChange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCHVacVerificationChange(CMsgGCHVacVerificationChange&& from) noexcept
    : CMsgGCHVacVerificationChange() {
    *this = ::std::move(from);
  }

  inline CMsgGCHVacVerificationChange& operator=(CMsgGCHVacVerificationChange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCHVacVerificationChange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCHVacVerificationChange* internal_default_instance() {
    return reinterpret_cast<const CMsgGCHVacVerificationChange*>(
               &_CMsgGCHVacVerificationChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  void Swap(CMsgGCHVacVerificationChange* other);
  friend void swap(CMsgGCHVacVerificationChange& a, CMsgGCHVacVerificationChange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCHVacVerificationChange* New() const final {
    return CreateMaybeMessage<CMsgGCHVacVerificationChange>(nullptr);
  }

  CMsgGCHVacVerificationChange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCHVacVerificationChange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCHVacVerificationChange& from);
  void MergeFrom(const CMsgGCHVacVerificationChange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCHVacVerificationChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 2;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional bool is_verified = 3;
  bool has_is_verified() const;
  void clear_is_verified();
  static const int kIsVerifiedFieldNumber = 3;
  bool is_verified() const;
  void set_is_verified(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCHVacVerificationChange)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;
  bool is_verified_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCHAccountTwoFactorChange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCHAccountTwoFactorChange) */ {
 public:
  CMsgGCHAccountTwoFactorChange();
  virtual ~CMsgGCHAccountTwoFactorChange();

  CMsgGCHAccountTwoFactorChange(const CMsgGCHAccountTwoFactorChange& from);

  inline CMsgGCHAccountTwoFactorChange& operator=(const CMsgGCHAccountTwoFactorChange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCHAccountTwoFactorChange(CMsgGCHAccountTwoFactorChange&& from) noexcept
    : CMsgGCHAccountTwoFactorChange() {
    *this = ::std::move(from);
  }

  inline CMsgGCHAccountTwoFactorChange& operator=(CMsgGCHAccountTwoFactorChange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCHAccountTwoFactorChange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCHAccountTwoFactorChange* internal_default_instance() {
    return reinterpret_cast<const CMsgGCHAccountTwoFactorChange*>(
               &_CMsgGCHAccountTwoFactorChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  void Swap(CMsgGCHAccountTwoFactorChange* other);
  friend void swap(CMsgGCHAccountTwoFactorChange& a, CMsgGCHAccountTwoFactorChange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCHAccountTwoFactorChange* New() const final {
    return CreateMaybeMessage<CMsgGCHAccountTwoFactorChange>(nullptr);
  }

  CMsgGCHAccountTwoFactorChange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCHAccountTwoFactorChange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCHAccountTwoFactorChange& from);
  void MergeFrom(const CMsgGCHAccountTwoFactorChange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCHAccountTwoFactorChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 2;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional bool twofactor_enabled = 3;
  bool has_twofactor_enabled() const;
  void clear_twofactor_enabled();
  static const int kTwofactorEnabledFieldNumber = 3;
  bool twofactor_enabled() const;
  void set_twofactor_enabled(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCHAccountTwoFactorChange)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;
  bool twofactor_enabled_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCCheckClanMembership final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCCheckClanMembership) */ {
 public:
  CMsgGCCheckClanMembership();
  virtual ~CMsgGCCheckClanMembership();

  CMsgGCCheckClanMembership(const CMsgGCCheckClanMembership& from);

  inline CMsgGCCheckClanMembership& operator=(const CMsgGCCheckClanMembership& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCCheckClanMembership(CMsgGCCheckClanMembership&& from) noexcept
    : CMsgGCCheckClanMembership() {
    *this = ::std::move(from);
  }

  inline CMsgGCCheckClanMembership& operator=(CMsgGCCheckClanMembership&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCCheckClanMembership& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCCheckClanMembership* internal_default_instance() {
    return reinterpret_cast<const CMsgGCCheckClanMembership*>(
               &_CMsgGCCheckClanMembership_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  void Swap(CMsgGCCheckClanMembership* other);
  friend void swap(CMsgGCCheckClanMembership& a, CMsgGCCheckClanMembership& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCCheckClanMembership* New() const final {
    return CreateMaybeMessage<CMsgGCCheckClanMembership>(nullptr);
  }

  CMsgGCCheckClanMembership* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCCheckClanMembership>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCCheckClanMembership& from);
  void MergeFrom(const CMsgGCCheckClanMembership& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCCheckClanMembership* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 clanid = 2;
  bool has_clanid() const;
  void clear_clanid();
  static const int kClanidFieldNumber = 2;
  ::google::protobuf::uint32 clanid() const;
  void set_clanid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCCheckClanMembership)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 clanid_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCCheckClanMembership_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCCheckClanMembership_Response) */ {
 public:
  CMsgGCCheckClanMembership_Response();
  virtual ~CMsgGCCheckClanMembership_Response();

  CMsgGCCheckClanMembership_Response(const CMsgGCCheckClanMembership_Response& from);

  inline CMsgGCCheckClanMembership_Response& operator=(const CMsgGCCheckClanMembership_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCCheckClanMembership_Response(CMsgGCCheckClanMembership_Response&& from) noexcept
    : CMsgGCCheckClanMembership_Response() {
    *this = ::std::move(from);
  }

  inline CMsgGCCheckClanMembership_Response& operator=(CMsgGCCheckClanMembership_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCCheckClanMembership_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCCheckClanMembership_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgGCCheckClanMembership_Response*>(
               &_CMsgGCCheckClanMembership_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  void Swap(CMsgGCCheckClanMembership_Response* other);
  friend void swap(CMsgGCCheckClanMembership_Response& a, CMsgGCCheckClanMembership_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCCheckClanMembership_Response* New() const final {
    return CreateMaybeMessage<CMsgGCCheckClanMembership_Response>(nullptr);
  }

  CMsgGCCheckClanMembership_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCCheckClanMembership_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCCheckClanMembership_Response& from);
  void MergeFrom(const CMsgGCCheckClanMembership_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCCheckClanMembership_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool ismember = 1;
  bool has_ismember() const;
  void clear_ismember();
  static const int kIsmemberFieldNumber = 1;
  bool ismember() const;
  void set_ismember(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCCheckClanMembership_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool ismember_;
  friend struct ::TableStruct_steammessages_2eproto;
};
// ===================================================================

static const int kKeyFieldFieldNumber = 60000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  key_field;
static const int kMsgpoolSoftLimitFieldNumber = 60000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  msgpool_soft_limit;
static const int kMsgpoolHardLimitFieldNumber = 60001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  msgpool_hard_limit;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgProtoBufHeader

// optional fixed64 client_steam_id = 1;
inline bool CMsgProtoBufHeader::has_client_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgProtoBufHeader::clear_client_steam_id() {
  client_steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::client_steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProtoBufHeader.client_steam_id)
  return client_steam_id_;
}
inline void CMsgProtoBufHeader::set_client_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  client_steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProtoBufHeader.client_steam_id)
}

// optional int32 client_session_id = 2;
inline bool CMsgProtoBufHeader::has_client_session_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgProtoBufHeader::clear_client_session_id() {
  client_session_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CMsgProtoBufHeader::client_session_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProtoBufHeader.client_session_id)
  return client_session_id_;
}
inline void CMsgProtoBufHeader::set_client_session_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  client_session_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProtoBufHeader.client_session_id)
}

// optional uint32 source_app_id = 3;
inline bool CMsgProtoBufHeader::has_source_app_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgProtoBufHeader::clear_source_app_id() {
  source_app_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::source_app_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProtoBufHeader.source_app_id)
  return source_app_id_;
}
inline void CMsgProtoBufHeader::set_source_app_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  source_app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProtoBufHeader.source_app_id)
}

// optional fixed64 job_id_source = 10 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_job_id_source() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgProtoBufHeader::clear_job_id_source() {
  job_id_source_ = PROTOBUF_ULONGLONG(18446744073709551615);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::job_id_source() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProtoBufHeader.job_id_source)
  return job_id_source_;
}
inline void CMsgProtoBufHeader::set_job_id_source(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000100u;
  job_id_source_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProtoBufHeader.job_id_source)
}

// optional fixed64 job_id_target = 11 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_job_id_target() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgProtoBufHeader::clear_job_id_target() {
  job_id_target_ = PROTOBUF_ULONGLONG(18446744073709551615);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::job_id_target() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProtoBufHeader.job_id_target)
  return job_id_target_;
}
inline void CMsgProtoBufHeader::set_job_id_target(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000200u;
  job_id_target_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProtoBufHeader.job_id_target)
}

// optional string target_job_name = 12;
inline bool CMsgProtoBufHeader::has_target_job_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgProtoBufHeader::clear_target_job_name() {
  target_job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgProtoBufHeader::target_job_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProtoBufHeader.target_job_name)
  return target_job_name_.GetNoArena();
}
inline void CMsgProtoBufHeader::set_target_job_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  target_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProtoBufHeader.target_job_name)
}
#if LANG_CXX11
inline void CMsgProtoBufHeader::set_target_job_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  target_job_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgProtoBufHeader.target_job_name)
}
#endif
inline void CMsgProtoBufHeader::set_target_job_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  target_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgProtoBufHeader.target_job_name)
}
inline void CMsgProtoBufHeader::set_target_job_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  target_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgProtoBufHeader.target_job_name)
}
inline ::std::string* CMsgProtoBufHeader::mutable_target_job_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgProtoBufHeader.target_job_name)
  return target_job_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgProtoBufHeader::release_target_job_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgProtoBufHeader.target_job_name)
  if (!has_target_job_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return target_job_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgProtoBufHeader::set_allocated_target_job_name(::std::string* target_job_name) {
  if (target_job_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  target_job_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_job_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgProtoBufHeader.target_job_name)
}

// optional int32 eresult = 13 [default = 2];
inline bool CMsgProtoBufHeader::has_eresult() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgProtoBufHeader::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::int32 CMsgProtoBufHeader::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProtoBufHeader.eresult)
  return eresult_;
}
inline void CMsgProtoBufHeader::set_eresult(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProtoBufHeader.eresult)
}

// optional string error_message = 14;
inline bool CMsgProtoBufHeader::has_error_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgProtoBufHeader::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgProtoBufHeader::error_message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProtoBufHeader.error_message)
  return error_message_.GetNoArena();
}
inline void CMsgProtoBufHeader::set_error_message(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProtoBufHeader.error_message)
}
#if LANG_CXX11
inline void CMsgProtoBufHeader::set_error_message(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgProtoBufHeader.error_message)
}
#endif
inline void CMsgProtoBufHeader::set_error_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgProtoBufHeader.error_message)
}
inline void CMsgProtoBufHeader::set_error_message(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgProtoBufHeader.error_message)
}
inline ::std::string* CMsgProtoBufHeader::mutable_error_message() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgProtoBufHeader.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgProtoBufHeader::release_error_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgProtoBufHeader.error_message)
  if (!has_error_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return error_message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgProtoBufHeader::set_allocated_error_message(::std::string* error_message) {
  if (error_message != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgProtoBufHeader.error_message)
}

// optional .proto.dota.GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
inline bool CMsgProtoBufHeader::has_gc_msg_src() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgProtoBufHeader::clear_gc_msg_src() {
  gc_msg_src_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::proto::dota::GCProtoBufMsgSrc CMsgProtoBufHeader::gc_msg_src() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProtoBufHeader.gc_msg_src)
  return static_cast< ::proto::dota::GCProtoBufMsgSrc >(gc_msg_src_);
}
inline void CMsgProtoBufHeader::set_gc_msg_src(::proto::dota::GCProtoBufMsgSrc value) {
  assert(::proto::dota::GCProtoBufMsgSrc_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  gc_msg_src_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProtoBufHeader.gc_msg_src)
}

// optional uint32 gc_dir_index_source = 201;
inline bool CMsgProtoBufHeader::has_gc_dir_index_source() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgProtoBufHeader::clear_gc_dir_index_source() {
  gc_dir_index_source_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::gc_dir_index_source() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProtoBufHeader.gc_dir_index_source)
  return gc_dir_index_source_;
}
inline void CMsgProtoBufHeader::set_gc_dir_index_source(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  gc_dir_index_source_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProtoBufHeader.gc_dir_index_source)
}

// -------------------------------------------------------------------

// CMsgWebAPIKey

// optional uint32 status = 1 [default = 255];
inline bool CMsgWebAPIKey::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgWebAPIKey::clear_status() {
  status_ = 255u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgWebAPIKey::status() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgWebAPIKey.status)
  return status_;
}
inline void CMsgWebAPIKey::set_status(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgWebAPIKey.status)
}

// optional uint32 account_id = 2 [default = 0];
inline bool CMsgWebAPIKey::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgWebAPIKey::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgWebAPIKey::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgWebAPIKey.account_id)
  return account_id_;
}
inline void CMsgWebAPIKey::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgWebAPIKey.account_id)
}

// optional uint32 publisher_group_id = 3 [default = 0];
inline bool CMsgWebAPIKey::has_publisher_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgWebAPIKey::clear_publisher_group_id() {
  publisher_group_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgWebAPIKey::publisher_group_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgWebAPIKey.publisher_group_id)
  return publisher_group_id_;
}
inline void CMsgWebAPIKey::set_publisher_group_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  publisher_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgWebAPIKey.publisher_group_id)
}

// optional uint32 key_id = 4;
inline bool CMsgWebAPIKey::has_key_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgWebAPIKey::clear_key_id() {
  key_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgWebAPIKey::key_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgWebAPIKey.key_id)
  return key_id_;
}
inline void CMsgWebAPIKey::set_key_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  key_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgWebAPIKey.key_id)
}

// optional string domain = 5;
inline bool CMsgWebAPIKey::has_domain() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgWebAPIKey::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgWebAPIKey::domain() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgWebAPIKey.domain)
  return domain_.GetNoArena();
}
inline void CMsgWebAPIKey::set_domain(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgWebAPIKey.domain)
}
#if LANG_CXX11
inline void CMsgWebAPIKey::set_domain(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgWebAPIKey.domain)
}
#endif
inline void CMsgWebAPIKey::set_domain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgWebAPIKey.domain)
}
inline void CMsgWebAPIKey::set_domain(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgWebAPIKey.domain)
}
inline ::std::string* CMsgWebAPIKey::mutable_domain() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgWebAPIKey.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgWebAPIKey::release_domain() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgWebAPIKey.domain)
  if (!has_domain()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return domain_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgWebAPIKey::set_allocated_domain(::std::string* domain) {
  if (domain != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgWebAPIKey.domain)
}

// -------------------------------------------------------------------

// CMsgHttpRequest_RequestHeader

// optional string name = 1;
inline bool CMsgHttpRequest_RequestHeader::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHttpRequest_RequestHeader::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgHttpRequest_RequestHeader::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpRequest.RequestHeader.name)
  return name_.GetNoArena();
}
inline void CMsgHttpRequest_RequestHeader::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHttpRequest.RequestHeader.name)
}
#if LANG_CXX11
inline void CMsgHttpRequest_RequestHeader::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgHttpRequest.RequestHeader.name)
}
#endif
inline void CMsgHttpRequest_RequestHeader::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgHttpRequest.RequestHeader.name)
}
inline void CMsgHttpRequest_RequestHeader::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgHttpRequest.RequestHeader.name)
}
inline ::std::string* CMsgHttpRequest_RequestHeader::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpRequest.RequestHeader.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgHttpRequest_RequestHeader::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgHttpRequest.RequestHeader.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgHttpRequest_RequestHeader::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgHttpRequest.RequestHeader.name)
}

// optional string value = 2;
inline bool CMsgHttpRequest_RequestHeader::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHttpRequest_RequestHeader::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgHttpRequest_RequestHeader::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpRequest.RequestHeader.value)
  return value_.GetNoArena();
}
inline void CMsgHttpRequest_RequestHeader::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHttpRequest.RequestHeader.value)
}
#if LANG_CXX11
inline void CMsgHttpRequest_RequestHeader::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgHttpRequest.RequestHeader.value)
}
#endif
inline void CMsgHttpRequest_RequestHeader::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgHttpRequest.RequestHeader.value)
}
inline void CMsgHttpRequest_RequestHeader::set_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgHttpRequest.RequestHeader.value)
}
inline ::std::string* CMsgHttpRequest_RequestHeader::mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpRequest.RequestHeader.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgHttpRequest_RequestHeader::release_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgHttpRequest.RequestHeader.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgHttpRequest_RequestHeader::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgHttpRequest.RequestHeader.value)
}

// -------------------------------------------------------------------

// CMsgHttpRequest_QueryParam

// optional string name = 1;
inline bool CMsgHttpRequest_QueryParam::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHttpRequest_QueryParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgHttpRequest_QueryParam::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpRequest.QueryParam.name)
  return name_.GetNoArena();
}
inline void CMsgHttpRequest_QueryParam::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHttpRequest.QueryParam.name)
}
#if LANG_CXX11
inline void CMsgHttpRequest_QueryParam::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgHttpRequest.QueryParam.name)
}
#endif
inline void CMsgHttpRequest_QueryParam::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgHttpRequest.QueryParam.name)
}
inline void CMsgHttpRequest_QueryParam::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgHttpRequest.QueryParam.name)
}
inline ::std::string* CMsgHttpRequest_QueryParam::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpRequest.QueryParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgHttpRequest_QueryParam::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgHttpRequest.QueryParam.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgHttpRequest_QueryParam::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgHttpRequest.QueryParam.name)
}

// optional bytes value = 2;
inline bool CMsgHttpRequest_QueryParam::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHttpRequest_QueryParam::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgHttpRequest_QueryParam::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpRequest.QueryParam.value)
  return value_.GetNoArena();
}
inline void CMsgHttpRequest_QueryParam::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHttpRequest.QueryParam.value)
}
#if LANG_CXX11
inline void CMsgHttpRequest_QueryParam::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgHttpRequest.QueryParam.value)
}
#endif
inline void CMsgHttpRequest_QueryParam::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgHttpRequest.QueryParam.value)
}
inline void CMsgHttpRequest_QueryParam::set_value(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgHttpRequest.QueryParam.value)
}
inline ::std::string* CMsgHttpRequest_QueryParam::mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpRequest.QueryParam.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgHttpRequest_QueryParam::release_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgHttpRequest.QueryParam.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgHttpRequest_QueryParam::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgHttpRequest.QueryParam.value)
}

// -------------------------------------------------------------------

// CMsgHttpRequest

// optional uint32 request_method = 1;
inline bool CMsgHttpRequest::has_request_method() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgHttpRequest::clear_request_method() {
  request_method_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgHttpRequest::request_method() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpRequest.request_method)
  return request_method_;
}
inline void CMsgHttpRequest::set_request_method(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  request_method_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHttpRequest.request_method)
}

// optional string hostname = 2;
inline bool CMsgHttpRequest::has_hostname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHttpRequest::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgHttpRequest::hostname() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpRequest.hostname)
  return hostname_.GetNoArena();
}
inline void CMsgHttpRequest::set_hostname(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHttpRequest.hostname)
}
#if LANG_CXX11
inline void CMsgHttpRequest::set_hostname(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgHttpRequest.hostname)
}
#endif
inline void CMsgHttpRequest::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgHttpRequest.hostname)
}
inline void CMsgHttpRequest::set_hostname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgHttpRequest.hostname)
}
inline ::std::string* CMsgHttpRequest::mutable_hostname() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpRequest.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgHttpRequest::release_hostname() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgHttpRequest.hostname)
  if (!has_hostname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return hostname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgHttpRequest::set_allocated_hostname(::std::string* hostname) {
  if (hostname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgHttpRequest.hostname)
}

// optional string url = 3;
inline bool CMsgHttpRequest::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHttpRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgHttpRequest::url() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpRequest.url)
  return url_.GetNoArena();
}
inline void CMsgHttpRequest::set_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHttpRequest.url)
}
#if LANG_CXX11
inline void CMsgHttpRequest::set_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgHttpRequest.url)
}
#endif
inline void CMsgHttpRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgHttpRequest.url)
}
inline void CMsgHttpRequest::set_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgHttpRequest.url)
}
inline ::std::string* CMsgHttpRequest::mutable_url() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgHttpRequest::release_url() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgHttpRequest.url)
  if (!has_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgHttpRequest::set_allocated_url(::std::string* url) {
  if (url != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgHttpRequest.url)
}

// repeated .proto.dota.CMsgHttpRequest.RequestHeader headers = 4;
inline int CMsgHttpRequest::headers_size() const {
  return headers_.size();
}
inline void CMsgHttpRequest::clear_headers() {
  headers_.Clear();
}
inline ::proto::dota::CMsgHttpRequest_RequestHeader* CMsgHttpRequest::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpRequest.headers)
  return headers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_RequestHeader >*
CMsgHttpRequest::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgHttpRequest.headers)
  return &headers_;
}
inline const ::proto::dota::CMsgHttpRequest_RequestHeader& CMsgHttpRequest::headers(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpRequest.headers)
  return headers_.Get(index);
}
inline ::proto::dota::CMsgHttpRequest_RequestHeader* CMsgHttpRequest::add_headers() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgHttpRequest.headers)
  return headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_RequestHeader >&
CMsgHttpRequest::headers() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgHttpRequest.headers)
  return headers_;
}

// repeated .proto.dota.CMsgHttpRequest.QueryParam get_params = 5;
inline int CMsgHttpRequest::get_params_size() const {
  return get_params_.size();
}
inline void CMsgHttpRequest::clear_get_params() {
  get_params_.Clear();
}
inline ::proto::dota::CMsgHttpRequest_QueryParam* CMsgHttpRequest::mutable_get_params(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpRequest.get_params)
  return get_params_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_QueryParam >*
CMsgHttpRequest::mutable_get_params() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgHttpRequest.get_params)
  return &get_params_;
}
inline const ::proto::dota::CMsgHttpRequest_QueryParam& CMsgHttpRequest::get_params(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpRequest.get_params)
  return get_params_.Get(index);
}
inline ::proto::dota::CMsgHttpRequest_QueryParam* CMsgHttpRequest::add_get_params() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgHttpRequest.get_params)
  return get_params_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_QueryParam >&
CMsgHttpRequest::get_params() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgHttpRequest.get_params)
  return get_params_;
}

// repeated .proto.dota.CMsgHttpRequest.QueryParam post_params = 6;
inline int CMsgHttpRequest::post_params_size() const {
  return post_params_.size();
}
inline void CMsgHttpRequest::clear_post_params() {
  post_params_.Clear();
}
inline ::proto::dota::CMsgHttpRequest_QueryParam* CMsgHttpRequest::mutable_post_params(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpRequest.post_params)
  return post_params_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_QueryParam >*
CMsgHttpRequest::mutable_post_params() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgHttpRequest.post_params)
  return &post_params_;
}
inline const ::proto::dota::CMsgHttpRequest_QueryParam& CMsgHttpRequest::post_params(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpRequest.post_params)
  return post_params_.Get(index);
}
inline ::proto::dota::CMsgHttpRequest_QueryParam* CMsgHttpRequest::add_post_params() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgHttpRequest.post_params)
  return post_params_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpRequest_QueryParam >&
CMsgHttpRequest::post_params() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgHttpRequest.post_params)
  return post_params_;
}

// optional bytes body = 7;
inline bool CMsgHttpRequest::has_body() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHttpRequest::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CMsgHttpRequest::body() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpRequest.body)
  return body_.GetNoArena();
}
inline void CMsgHttpRequest::set_body(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHttpRequest.body)
}
#if LANG_CXX11
inline void CMsgHttpRequest::set_body(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgHttpRequest.body)
}
#endif
inline void CMsgHttpRequest::set_body(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgHttpRequest.body)
}
inline void CMsgHttpRequest::set_body(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgHttpRequest.body)
}
inline ::std::string* CMsgHttpRequest::mutable_body() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpRequest.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgHttpRequest::release_body() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgHttpRequest.body)
  if (!has_body()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return body_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgHttpRequest::set_allocated_body(::std::string* body) {
  if (body != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgHttpRequest.body)
}

// optional uint32 absolute_timeout = 8;
inline bool CMsgHttpRequest::has_absolute_timeout() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgHttpRequest::clear_absolute_timeout() {
  absolute_timeout_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgHttpRequest::absolute_timeout() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpRequest.absolute_timeout)
  return absolute_timeout_;
}
inline void CMsgHttpRequest::set_absolute_timeout(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  absolute_timeout_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHttpRequest.absolute_timeout)
}

// -------------------------------------------------------------------

// CMsgWebAPIRequest

// optional string UNUSED_job_name = 1;
inline bool CMsgWebAPIRequest::has_unused_job_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgWebAPIRequest::clear_unused_job_name() {
  unused_job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgWebAPIRequest::unused_job_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgWebAPIRequest.UNUSED_job_name)
  return unused_job_name_.GetNoArena();
}
inline void CMsgWebAPIRequest::set_unused_job_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  unused_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgWebAPIRequest.UNUSED_job_name)
}
#if LANG_CXX11
inline void CMsgWebAPIRequest::set_unused_job_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  unused_job_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgWebAPIRequest.UNUSED_job_name)
}
#endif
inline void CMsgWebAPIRequest::set_unused_job_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  unused_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgWebAPIRequest.UNUSED_job_name)
}
inline void CMsgWebAPIRequest::set_unused_job_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  unused_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgWebAPIRequest.UNUSED_job_name)
}
inline ::std::string* CMsgWebAPIRequest::mutable_unused_job_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgWebAPIRequest.UNUSED_job_name)
  return unused_job_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgWebAPIRequest::release_unused_job_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgWebAPIRequest.UNUSED_job_name)
  if (!has_unused_job_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return unused_job_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgWebAPIRequest::set_allocated_unused_job_name(::std::string* unused_job_name) {
  if (unused_job_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  unused_job_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unused_job_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgWebAPIRequest.UNUSED_job_name)
}

// optional string interface_name = 2;
inline bool CMsgWebAPIRequest::has_interface_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgWebAPIRequest::clear_interface_name() {
  interface_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgWebAPIRequest::interface_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgWebAPIRequest.interface_name)
  return interface_name_.GetNoArena();
}
inline void CMsgWebAPIRequest::set_interface_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgWebAPIRequest.interface_name)
}
#if LANG_CXX11
inline void CMsgWebAPIRequest::set_interface_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  interface_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgWebAPIRequest.interface_name)
}
#endif
inline void CMsgWebAPIRequest::set_interface_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgWebAPIRequest.interface_name)
}
inline void CMsgWebAPIRequest::set_interface_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgWebAPIRequest.interface_name)
}
inline ::std::string* CMsgWebAPIRequest::mutable_interface_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgWebAPIRequest.interface_name)
  return interface_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgWebAPIRequest::release_interface_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgWebAPIRequest.interface_name)
  if (!has_interface_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return interface_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgWebAPIRequest::set_allocated_interface_name(::std::string* interface_name) {
  if (interface_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  interface_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interface_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgWebAPIRequest.interface_name)
}

// optional string method_name = 3;
inline bool CMsgWebAPIRequest::has_method_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgWebAPIRequest::clear_method_name() {
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CMsgWebAPIRequest::method_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgWebAPIRequest.method_name)
  return method_name_.GetNoArena();
}
inline void CMsgWebAPIRequest::set_method_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgWebAPIRequest.method_name)
}
#if LANG_CXX11
inline void CMsgWebAPIRequest::set_method_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  method_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgWebAPIRequest.method_name)
}
#endif
inline void CMsgWebAPIRequest::set_method_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgWebAPIRequest.method_name)
}
inline void CMsgWebAPIRequest::set_method_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgWebAPIRequest.method_name)
}
inline ::std::string* CMsgWebAPIRequest::mutable_method_name() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgWebAPIRequest.method_name)
  return method_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgWebAPIRequest::release_method_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgWebAPIRequest.method_name)
  if (!has_method_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return method_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgWebAPIRequest::set_allocated_method_name(::std::string* method_name) {
  if (method_name != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  method_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgWebAPIRequest.method_name)
}

// optional uint32 version = 4;
inline bool CMsgWebAPIRequest::has_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgWebAPIRequest::clear_version() {
  version_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgWebAPIRequest::version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgWebAPIRequest.version)
  return version_;
}
inline void CMsgWebAPIRequest::set_version(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgWebAPIRequest.version)
}

// optional .proto.dota.CMsgWebAPIKey api_key = 5;
inline bool CMsgWebAPIRequest::has_api_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgWebAPIRequest::clear_api_key() {
  if (api_key_ != nullptr) api_key_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::proto::dota::CMsgWebAPIKey& CMsgWebAPIRequest::api_key() const {
  const ::proto::dota::CMsgWebAPIKey* p = api_key_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgWebAPIRequest.api_key)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgWebAPIKey*>(
      &::proto::dota::_CMsgWebAPIKey_default_instance_);
}
inline ::proto::dota::CMsgWebAPIKey* CMsgWebAPIRequest::release_api_key() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgWebAPIRequest.api_key)
  _has_bits_[0] &= ~0x00000008u;
  ::proto::dota::CMsgWebAPIKey* temp = api_key_;
  api_key_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgWebAPIKey* CMsgWebAPIRequest::mutable_api_key() {
  _has_bits_[0] |= 0x00000008u;
  if (api_key_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgWebAPIKey>(GetArenaNoVirtual());
    api_key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgWebAPIRequest.api_key)
  return api_key_;
}
inline void CMsgWebAPIRequest::set_allocated_api_key(::proto::dota::CMsgWebAPIKey* api_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete api_key_;
  }
  if (api_key) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      api_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, api_key, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  api_key_ = api_key;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgWebAPIRequest.api_key)
}

// optional .proto.dota.CMsgHttpRequest request = 6;
inline bool CMsgWebAPIRequest::has_request() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgWebAPIRequest::clear_request() {
  if (request_ != nullptr) request_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::proto::dota::CMsgHttpRequest& CMsgWebAPIRequest::request() const {
  const ::proto::dota::CMsgHttpRequest* p = request_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgWebAPIRequest.request)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgHttpRequest*>(
      &::proto::dota::_CMsgHttpRequest_default_instance_);
}
inline ::proto::dota::CMsgHttpRequest* CMsgWebAPIRequest::release_request() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgWebAPIRequest.request)
  _has_bits_[0] &= ~0x00000010u;
  ::proto::dota::CMsgHttpRequest* temp = request_;
  request_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgHttpRequest* CMsgWebAPIRequest::mutable_request() {
  _has_bits_[0] |= 0x00000010u;
  if (request_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgHttpRequest>(GetArenaNoVirtual());
    request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgWebAPIRequest.request)
  return request_;
}
inline void CMsgWebAPIRequest::set_allocated_request(::proto::dota::CMsgHttpRequest* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete request_;
  }
  if (request) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgWebAPIRequest.request)
}

// optional uint32 routing_app_id = 7;
inline bool CMsgWebAPIRequest::has_routing_app_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgWebAPIRequest::clear_routing_app_id() {
  routing_app_id_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgWebAPIRequest::routing_app_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgWebAPIRequest.routing_app_id)
  return routing_app_id_;
}
inline void CMsgWebAPIRequest::set_routing_app_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  routing_app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgWebAPIRequest.routing_app_id)
}

// -------------------------------------------------------------------

// CMsgHttpResponse_ResponseHeader

// optional string name = 1;
inline bool CMsgHttpResponse_ResponseHeader::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHttpResponse_ResponseHeader::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgHttpResponse_ResponseHeader::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpResponse.ResponseHeader.name)
  return name_.GetNoArena();
}
inline void CMsgHttpResponse_ResponseHeader::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHttpResponse.ResponseHeader.name)
}
#if LANG_CXX11
inline void CMsgHttpResponse_ResponseHeader::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgHttpResponse.ResponseHeader.name)
}
#endif
inline void CMsgHttpResponse_ResponseHeader::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgHttpResponse.ResponseHeader.name)
}
inline void CMsgHttpResponse_ResponseHeader::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgHttpResponse.ResponseHeader.name)
}
inline ::std::string* CMsgHttpResponse_ResponseHeader::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpResponse.ResponseHeader.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgHttpResponse_ResponseHeader::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgHttpResponse.ResponseHeader.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgHttpResponse_ResponseHeader::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgHttpResponse.ResponseHeader.name)
}

// optional string value = 2;
inline bool CMsgHttpResponse_ResponseHeader::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHttpResponse_ResponseHeader::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgHttpResponse_ResponseHeader::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpResponse.ResponseHeader.value)
  return value_.GetNoArena();
}
inline void CMsgHttpResponse_ResponseHeader::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHttpResponse.ResponseHeader.value)
}
#if LANG_CXX11
inline void CMsgHttpResponse_ResponseHeader::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgHttpResponse.ResponseHeader.value)
}
#endif
inline void CMsgHttpResponse_ResponseHeader::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgHttpResponse.ResponseHeader.value)
}
inline void CMsgHttpResponse_ResponseHeader::set_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgHttpResponse.ResponseHeader.value)
}
inline ::std::string* CMsgHttpResponse_ResponseHeader::mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpResponse.ResponseHeader.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgHttpResponse_ResponseHeader::release_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgHttpResponse.ResponseHeader.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgHttpResponse_ResponseHeader::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgHttpResponse.ResponseHeader.value)
}

// -------------------------------------------------------------------

// CMsgHttpResponse

// optional uint32 status_code = 1;
inline bool CMsgHttpResponse::has_status_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHttpResponse::clear_status_code() {
  status_code_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgHttpResponse::status_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpResponse.status_code)
  return status_code_;
}
inline void CMsgHttpResponse::set_status_code(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  status_code_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHttpResponse.status_code)
}

// repeated .proto.dota.CMsgHttpResponse.ResponseHeader headers = 2;
inline int CMsgHttpResponse::headers_size() const {
  return headers_.size();
}
inline void CMsgHttpResponse::clear_headers() {
  headers_.Clear();
}
inline ::proto::dota::CMsgHttpResponse_ResponseHeader* CMsgHttpResponse::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpResponse.headers)
  return headers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpResponse_ResponseHeader >*
CMsgHttpResponse::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgHttpResponse.headers)
  return &headers_;
}
inline const ::proto::dota::CMsgHttpResponse_ResponseHeader& CMsgHttpResponse::headers(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpResponse.headers)
  return headers_.Get(index);
}
inline ::proto::dota::CMsgHttpResponse_ResponseHeader* CMsgHttpResponse::add_headers() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgHttpResponse.headers)
  return headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHttpResponse_ResponseHeader >&
CMsgHttpResponse::headers() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgHttpResponse.headers)
  return headers_;
}

// optional bytes body = 3;
inline bool CMsgHttpResponse::has_body() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHttpResponse::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgHttpResponse::body() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHttpResponse.body)
  return body_.GetNoArena();
}
inline void CMsgHttpResponse::set_body(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHttpResponse.body)
}
#if LANG_CXX11
inline void CMsgHttpResponse::set_body(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgHttpResponse.body)
}
#endif
inline void CMsgHttpResponse::set_body(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgHttpResponse.body)
}
inline void CMsgHttpResponse::set_body(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgHttpResponse.body)
}
inline ::std::string* CMsgHttpResponse::mutable_body() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgHttpResponse.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgHttpResponse::release_body() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgHttpResponse.body)
  if (!has_body()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return body_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgHttpResponse::set_allocated_body(::std::string* body) {
  if (body != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgHttpResponse.body)
}

// -------------------------------------------------------------------

// CMsgAMFindAccounts

// optional uint32 search_type = 1;
inline bool CMsgAMFindAccounts::has_search_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMFindAccounts::clear_search_type() {
  search_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgAMFindAccounts::search_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMFindAccounts.search_type)
  return search_type_;
}
inline void CMsgAMFindAccounts::set_search_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  search_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMFindAccounts.search_type)
}

// optional string search_string = 2;
inline bool CMsgAMFindAccounts::has_search_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMFindAccounts::clear_search_string() {
  search_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgAMFindAccounts::search_string() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMFindAccounts.search_string)
  return search_string_.GetNoArena();
}
inline void CMsgAMFindAccounts::set_search_string(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  search_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMFindAccounts.search_string)
}
#if LANG_CXX11
inline void CMsgAMFindAccounts::set_search_string(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  search_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgAMFindAccounts.search_string)
}
#endif
inline void CMsgAMFindAccounts::set_search_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  search_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgAMFindAccounts.search_string)
}
inline void CMsgAMFindAccounts::set_search_string(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  search_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgAMFindAccounts.search_string)
}
inline ::std::string* CMsgAMFindAccounts::mutable_search_string() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgAMFindAccounts.search_string)
  return search_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgAMFindAccounts::release_search_string() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgAMFindAccounts.search_string)
  if (!has_search_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return search_string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgAMFindAccounts::set_allocated_search_string(::std::string* search_string) {
  if (search_string != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  search_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_string);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgAMFindAccounts.search_string)
}

// -------------------------------------------------------------------

// CMsgAMFindAccountsResponse

// repeated fixed64 steam_id = 1;
inline int CMsgAMFindAccountsResponse::steam_id_size() const {
  return steam_id_.size();
}
inline void CMsgAMFindAccountsResponse::clear_steam_id() {
  steam_id_.Clear();
}
inline ::google::protobuf::uint64 CMsgAMFindAccountsResponse::steam_id(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMFindAccountsResponse.steam_id)
  return steam_id_.Get(index);
}
inline void CMsgAMFindAccountsResponse::set_steam_id(int index, ::google::protobuf::uint64 value) {
  steam_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMFindAccountsResponse.steam_id)
}
inline void CMsgAMFindAccountsResponse::add_steam_id(::google::protobuf::uint64 value) {
  steam_id_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgAMFindAccountsResponse.steam_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgAMFindAccountsResponse::steam_id() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgAMFindAccountsResponse.steam_id)
  return steam_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgAMFindAccountsResponse::mutable_steam_id() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgAMFindAccountsResponse.steam_id)
  return &steam_id_;
}

// -------------------------------------------------------------------

// CMsgNotifyWatchdog

// optional uint32 source = 1;
inline bool CMsgNotifyWatchdog::has_source() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgNotifyWatchdog::clear_source() {
  source_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgNotifyWatchdog::source() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNotifyWatchdog.source)
  return source_;
}
inline void CMsgNotifyWatchdog::set_source(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  source_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNotifyWatchdog.source)
}

// optional uint32 alert_type = 2;
inline bool CMsgNotifyWatchdog::has_alert_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgNotifyWatchdog::clear_alert_type() {
  alert_type_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgNotifyWatchdog::alert_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNotifyWatchdog.alert_type)
  return alert_type_;
}
inline void CMsgNotifyWatchdog::set_alert_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  alert_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNotifyWatchdog.alert_type)
}

// optional bool critical = 4;
inline bool CMsgNotifyWatchdog::has_critical() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgNotifyWatchdog::clear_critical() {
  critical_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgNotifyWatchdog::critical() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNotifyWatchdog.critical)
  return critical_;
}
inline void CMsgNotifyWatchdog::set_critical(bool value) {
  _has_bits_[0] |= 0x00000010u;
  critical_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNotifyWatchdog.critical)
}

// optional uint32 time = 5;
inline bool CMsgNotifyWatchdog::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgNotifyWatchdog::clear_time() {
  time_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgNotifyWatchdog::time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNotifyWatchdog.time)
  return time_;
}
inline void CMsgNotifyWatchdog::set_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNotifyWatchdog.time)
}

// optional uint32 appid = 6;
inline bool CMsgNotifyWatchdog::has_appid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgNotifyWatchdog::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgNotifyWatchdog::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNotifyWatchdog.appid)
  return appid_;
}
inline void CMsgNotifyWatchdog::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNotifyWatchdog.appid)
}

// optional string text = 7;
inline bool CMsgNotifyWatchdog::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgNotifyWatchdog::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgNotifyWatchdog::text() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNotifyWatchdog.text)
  return text_.GetNoArena();
}
inline void CMsgNotifyWatchdog::set_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNotifyWatchdog.text)
}
#if LANG_CXX11
inline void CMsgNotifyWatchdog::set_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgNotifyWatchdog.text)
}
#endif
inline void CMsgNotifyWatchdog::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgNotifyWatchdog.text)
}
inline void CMsgNotifyWatchdog::set_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgNotifyWatchdog.text)
}
inline ::std::string* CMsgNotifyWatchdog::mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgNotifyWatchdog.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgNotifyWatchdog::release_text() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgNotifyWatchdog.text)
  if (!has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgNotifyWatchdog::set_allocated_text(::std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgNotifyWatchdog.text)
}

// optional string recipient = 12;
inline bool CMsgNotifyWatchdog::has_recipient() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgNotifyWatchdog::clear_recipient() {
  recipient_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgNotifyWatchdog::recipient() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNotifyWatchdog.recipient)
  return recipient_.GetNoArena();
}
inline void CMsgNotifyWatchdog::set_recipient(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  recipient_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNotifyWatchdog.recipient)
}
#if LANG_CXX11
inline void CMsgNotifyWatchdog::set_recipient(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  recipient_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgNotifyWatchdog.recipient)
}
#endif
inline void CMsgNotifyWatchdog::set_recipient(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  recipient_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgNotifyWatchdog.recipient)
}
inline void CMsgNotifyWatchdog::set_recipient(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  recipient_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgNotifyWatchdog.recipient)
}
inline ::std::string* CMsgNotifyWatchdog::mutable_recipient() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgNotifyWatchdog.recipient)
  return recipient_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgNotifyWatchdog::release_recipient() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgNotifyWatchdog.recipient)
  if (!has_recipient()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return recipient_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgNotifyWatchdog::set_allocated_recipient(::std::string* recipient) {
  if (recipient != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  recipient_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recipient);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgNotifyWatchdog.recipient)
}

// -------------------------------------------------------------------

// CMsgAMGetLicenses

// optional fixed64 steamid = 1;
inline bool CMsgAMGetLicenses::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGetLicenses::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgAMGetLicenses::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetLicenses.steamid)
  return steamid_;
}
inline void CMsgAMGetLicenses::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGetLicenses.steamid)
}

// -------------------------------------------------------------------

// CMsgPackageLicense

// optional uint32 package_id = 1;
inline bool CMsgPackageLicense::has_package_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPackageLicense::clear_package_id() {
  package_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgPackageLicense::package_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPackageLicense.package_id)
  return package_id_;
}
inline void CMsgPackageLicense::set_package_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  package_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPackageLicense.package_id)
}

// optional uint32 time_created = 2;
inline bool CMsgPackageLicense::has_time_created() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPackageLicense::clear_time_created() {
  time_created_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgPackageLicense::time_created() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPackageLicense.time_created)
  return time_created_;
}
inline void CMsgPackageLicense::set_time_created(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  time_created_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPackageLicense.time_created)
}

// optional uint32 owner_id = 3;
inline bool CMsgPackageLicense::has_owner_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPackageLicense::clear_owner_id() {
  owner_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgPackageLicense::owner_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPackageLicense.owner_id)
  return owner_id_;
}
inline void CMsgPackageLicense::set_owner_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  owner_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPackageLicense.owner_id)
}

// -------------------------------------------------------------------

// CMsgAMGetLicensesResponse

// repeated .proto.dota.CMsgPackageLicense license = 1;
inline int CMsgAMGetLicensesResponse::license_size() const {
  return license_.size();
}
inline void CMsgAMGetLicensesResponse::clear_license() {
  license_.Clear();
}
inline ::proto::dota::CMsgPackageLicense* CMsgAMGetLicensesResponse::mutable_license(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgAMGetLicensesResponse.license)
  return license_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPackageLicense >*
CMsgAMGetLicensesResponse::mutable_license() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgAMGetLicensesResponse.license)
  return &license_;
}
inline const ::proto::dota::CMsgPackageLicense& CMsgAMGetLicensesResponse::license(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetLicensesResponse.license)
  return license_.Get(index);
}
inline ::proto::dota::CMsgPackageLicense* CMsgAMGetLicensesResponse::add_license() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgAMGetLicensesResponse.license)
  return license_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPackageLicense >&
CMsgAMGetLicensesResponse::license() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgAMGetLicensesResponse.license)
  return license_;
}

// optional uint32 result = 2;
inline bool CMsgAMGetLicensesResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGetLicensesResponse::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgAMGetLicensesResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetLicensesResponse.result)
  return result_;
}
inline void CMsgAMGetLicensesResponse::set_result(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGetLicensesResponse.result)
}

// -------------------------------------------------------------------

// CMsgAMGetUserGameStats

// optional fixed64 steam_id = 1;
inline bool CMsgAMGetUserGameStats::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGetUserGameStats::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgAMGetUserGameStats::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetUserGameStats.steam_id)
  return steam_id_;
}
inline void CMsgAMGetUserGameStats::set_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGetUserGameStats.steam_id)
}

// optional fixed64 game_id = 2;
inline bool CMsgAMGetUserGameStats::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMGetUserGameStats::clear_game_id() {
  game_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgAMGetUserGameStats::game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetUserGameStats.game_id)
  return game_id_;
}
inline void CMsgAMGetUserGameStats::set_game_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGetUserGameStats.game_id)
}

// repeated uint32 stats = 3;
inline int CMsgAMGetUserGameStats::stats_size() const {
  return stats_.size();
}
inline void CMsgAMGetUserGameStats::clear_stats() {
  stats_.Clear();
}
inline ::google::protobuf::uint32 CMsgAMGetUserGameStats::stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetUserGameStats.stats)
  return stats_.Get(index);
}
inline void CMsgAMGetUserGameStats::set_stats(int index, ::google::protobuf::uint32 value) {
  stats_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGetUserGameStats.stats)
}
inline void CMsgAMGetUserGameStats::add_stats(::google::protobuf::uint32 value) {
  stats_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgAMGetUserGameStats.stats)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgAMGetUserGameStats::stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgAMGetUserGameStats.stats)
  return stats_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgAMGetUserGameStats::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgAMGetUserGameStats.stats)
  return &stats_;
}

// -------------------------------------------------------------------

// CMsgAMGetUserGameStatsResponse_Stats

// optional uint32 stat_id = 1;
inline bool CMsgAMGetUserGameStatsResponse_Stats::has_stat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse_Stats::clear_stat_id() {
  stat_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Stats::stat_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetUserGameStatsResponse.Stats.stat_id)
  return stat_id_;
}
inline void CMsgAMGetUserGameStatsResponse_Stats::set_stat_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  stat_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGetUserGameStatsResponse.Stats.stat_id)
}

// optional uint32 stat_value = 2;
inline bool CMsgAMGetUserGameStatsResponse_Stats::has_stat_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse_Stats::clear_stat_value() {
  stat_value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Stats::stat_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetUserGameStatsResponse.Stats.stat_value)
  return stat_value_;
}
inline void CMsgAMGetUserGameStatsResponse_Stats::set_stat_value(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  stat_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGetUserGameStatsResponse.Stats.stat_value)
}

// -------------------------------------------------------------------

// CMsgAMGetUserGameStatsResponse_Achievement_Blocks

// optional uint32 achievement_id = 1;
inline bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::has_achievement_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_achievement_id() {
  achievement_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Achievement_Blocks::achievement_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.achievement_id)
  return achievement_id_;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_achievement_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  achievement_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.achievement_id)
}

// optional uint32 achievement_bit_id = 2;
inline bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::has_achievement_bit_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_achievement_bit_id() {
  achievement_bit_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Achievement_Blocks::achievement_bit_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.achievement_bit_id)
  return achievement_bit_id_;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_achievement_bit_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  achievement_bit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.achievement_bit_id)
}

// optional fixed32 unlock_time = 3;
inline bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::has_unlock_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_unlock_time() {
  unlock_time_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Achievement_Blocks::unlock_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.unlock_time)
  return unlock_time_;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_unlock_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  unlock_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.unlock_time)
}

// -------------------------------------------------------------------

// CMsgAMGetUserGameStatsResponse

// optional fixed64 steam_id = 1;
inline bool CMsgAMGetUserGameStatsResponse::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgAMGetUserGameStatsResponse::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetUserGameStatsResponse.steam_id)
  return steam_id_;
}
inline void CMsgAMGetUserGameStatsResponse::set_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGetUserGameStatsResponse.steam_id)
}

// optional fixed64 game_id = 2;
inline bool CMsgAMGetUserGameStatsResponse::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse::clear_game_id() {
  game_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgAMGetUserGameStatsResponse::game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetUserGameStatsResponse.game_id)
  return game_id_;
}
inline void CMsgAMGetUserGameStatsResponse::set_game_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGetUserGameStatsResponse.game_id)
}

// optional int32 eresult = 3 [default = 2];
inline bool CMsgAMGetUserGameStatsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CMsgAMGetUserGameStatsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetUserGameStatsResponse.eresult)
  return eresult_;
}
inline void CMsgAMGetUserGameStatsResponse::set_eresult(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGetUserGameStatsResponse.eresult)
}

// repeated .proto.dota.CMsgAMGetUserGameStatsResponse.Stats stats = 4;
inline int CMsgAMGetUserGameStatsResponse::stats_size() const {
  return stats_.size();
}
inline void CMsgAMGetUserGameStatsResponse::clear_stats() {
  stats_.Clear();
}
inline ::proto::dota::CMsgAMGetUserGameStatsResponse_Stats* CMsgAMGetUserGameStatsResponse::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgAMGetUserGameStatsResponse.stats)
  return stats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMGetUserGameStatsResponse_Stats >*
CMsgAMGetUserGameStatsResponse::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgAMGetUserGameStatsResponse.stats)
  return &stats_;
}
inline const ::proto::dota::CMsgAMGetUserGameStatsResponse_Stats& CMsgAMGetUserGameStatsResponse::stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetUserGameStatsResponse.stats)
  return stats_.Get(index);
}
inline ::proto::dota::CMsgAMGetUserGameStatsResponse_Stats* CMsgAMGetUserGameStatsResponse::add_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgAMGetUserGameStatsResponse.stats)
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMGetUserGameStatsResponse_Stats >&
CMsgAMGetUserGameStatsResponse::stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgAMGetUserGameStatsResponse.stats)
  return stats_;
}

// repeated .proto.dota.CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
inline int CMsgAMGetUserGameStatsResponse::achievement_blocks_size() const {
  return achievement_blocks_.size();
}
inline void CMsgAMGetUserGameStatsResponse::clear_achievement_blocks() {
  achievement_blocks_.Clear();
}
inline ::proto::dota::CMsgAMGetUserGameStatsResponse_Achievement_Blocks* CMsgAMGetUserGameStatsResponse::mutable_achievement_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgAMGetUserGameStatsResponse.achievement_blocks)
  return achievement_blocks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMGetUserGameStatsResponse_Achievement_Blocks >*
CMsgAMGetUserGameStatsResponse::mutable_achievement_blocks() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgAMGetUserGameStatsResponse.achievement_blocks)
  return &achievement_blocks_;
}
inline const ::proto::dota::CMsgAMGetUserGameStatsResponse_Achievement_Blocks& CMsgAMGetUserGameStatsResponse::achievement_blocks(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGetUserGameStatsResponse.achievement_blocks)
  return achievement_blocks_.Get(index);
}
inline ::proto::dota::CMsgAMGetUserGameStatsResponse_Achievement_Blocks* CMsgAMGetUserGameStatsResponse::add_achievement_blocks() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgAMGetUserGameStatsResponse.achievement_blocks)
  return achievement_blocks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMGetUserGameStatsResponse_Achievement_Blocks >&
CMsgAMGetUserGameStatsResponse::achievement_blocks() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgAMGetUserGameStatsResponse.achievement_blocks)
  return achievement_blocks_;
}

// -------------------------------------------------------------------

// CMsgGCGetCommandList

// optional uint32 app_id = 1;
inline bool CMsgGCGetCommandList::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetCommandList::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCGetCommandList::app_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetCommandList.app_id)
  return app_id_;
}
inline void CMsgGCGetCommandList::set_app_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetCommandList.app_id)
}

// optional string command_prefix = 2;
inline bool CMsgGCGetCommandList::has_command_prefix() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetCommandList::clear_command_prefix() {
  command_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCGetCommandList::command_prefix() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetCommandList.command_prefix)
  return command_prefix_.GetNoArena();
}
inline void CMsgGCGetCommandList::set_command_prefix(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  command_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetCommandList.command_prefix)
}
#if LANG_CXX11
inline void CMsgGCGetCommandList::set_command_prefix(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  command_prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCGetCommandList.command_prefix)
}
#endif
inline void CMsgGCGetCommandList::set_command_prefix(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  command_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCGetCommandList.command_prefix)
}
inline void CMsgGCGetCommandList::set_command_prefix(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  command_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCGetCommandList.command_prefix)
}
inline ::std::string* CMsgGCGetCommandList::mutable_command_prefix() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetCommandList.command_prefix)
  return command_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCGetCommandList::release_command_prefix() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCGetCommandList.command_prefix)
  if (!has_command_prefix()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return command_prefix_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCGetCommandList::set_allocated_command_prefix(::std::string* command_prefix) {
  if (command_prefix != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  command_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command_prefix);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCGetCommandList.command_prefix)
}

// -------------------------------------------------------------------

// CMsgGCGetCommandListResponse

// repeated string command_name = 1;
inline int CMsgGCGetCommandListResponse::command_name_size() const {
  return command_name_.size();
}
inline void CMsgGCGetCommandListResponse::clear_command_name() {
  command_name_.Clear();
}
inline const ::std::string& CMsgGCGetCommandListResponse::command_name(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetCommandListResponse.command_name)
  return command_name_.Get(index);
}
inline ::std::string* CMsgGCGetCommandListResponse::mutable_command_name(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetCommandListResponse.command_name)
  return command_name_.Mutable(index);
}
inline void CMsgGCGetCommandListResponse::set_command_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetCommandListResponse.command_name)
  command_name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgGCGetCommandListResponse::set_command_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetCommandListResponse.command_name)
  command_name_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgGCGetCommandListResponse::set_command_name(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  command_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCGetCommandListResponse.command_name)
}
inline void CMsgGCGetCommandListResponse::set_command_name(int index, const char* value, size_t size) {
  command_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCGetCommandListResponse.command_name)
}
inline ::std::string* CMsgGCGetCommandListResponse::add_command_name() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CMsgGCGetCommandListResponse.command_name)
  return command_name_.Add();
}
inline void CMsgGCGetCommandListResponse::add_command_name(const ::std::string& value) {
  command_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetCommandListResponse.command_name)
}
#if LANG_CXX11
inline void CMsgGCGetCommandListResponse::add_command_name(::std::string&& value) {
  command_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetCommandListResponse.command_name)
}
#endif
inline void CMsgGCGetCommandListResponse::add_command_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  command_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CMsgGCGetCommandListResponse.command_name)
}
inline void CMsgGCGetCommandListResponse::add_command_name(const char* value, size_t size) {
  command_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CMsgGCGetCommandListResponse.command_name)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CMsgGCGetCommandListResponse::command_name() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCGetCommandListResponse.command_name)
  return command_name_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CMsgGCGetCommandListResponse::mutable_command_name() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCGetCommandListResponse.command_name)
  return &command_name_;
}

// -------------------------------------------------------------------

// CGCMsgMemCachedGet

// repeated string keys = 1;
inline int CGCMsgMemCachedGet::keys_size() const {
  return keys_.size();
}
inline void CGCMsgMemCachedGet::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& CGCMsgMemCachedGet::keys(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedGet.keys)
  return keys_.Get(index);
}
inline ::std::string* CGCMsgMemCachedGet::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCMsgMemCachedGet.keys)
  return keys_.Mutable(index);
}
inline void CGCMsgMemCachedGet::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedGet.keys)
  keys_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CGCMsgMemCachedGet::set_keys(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedGet.keys)
  keys_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CGCMsgMemCachedGet::set_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CGCMsgMemCachedGet.keys)
}
inline void CGCMsgMemCachedGet::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CGCMsgMemCachedGet.keys)
}
inline ::std::string* CGCMsgMemCachedGet::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CGCMsgMemCachedGet.keys)
  return keys_.Add();
}
inline void CGCMsgMemCachedGet::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CGCMsgMemCachedGet.keys)
}
#if LANG_CXX11
inline void CGCMsgMemCachedGet::add_keys(::std::string&& value) {
  keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CGCMsgMemCachedGet.keys)
}
#endif
inline void CGCMsgMemCachedGet::add_keys(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CGCMsgMemCachedGet.keys)
}
inline void CGCMsgMemCachedGet::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CGCMsgMemCachedGet.keys)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CGCMsgMemCachedGet::keys() const {
  // @@protoc_insertion_point(field_list:proto.dota.CGCMsgMemCachedGet.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CGCMsgMemCachedGet::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CGCMsgMemCachedGet.keys)
  return &keys_;
}

// -------------------------------------------------------------------

// CGCMsgMemCachedGetResponse_ValueTag

// optional bool found = 1;
inline bool CGCMsgMemCachedGetResponse_ValueTag::has_found() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgMemCachedGetResponse_ValueTag::clear_found() {
  found_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CGCMsgMemCachedGetResponse_ValueTag::found() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedGetResponse.ValueTag.found)
  return found_;
}
inline void CGCMsgMemCachedGetResponse_ValueTag::set_found(bool value) {
  _has_bits_[0] |= 0x00000002u;
  found_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedGetResponse.ValueTag.found)
}

// optional bytes value = 2;
inline bool CGCMsgMemCachedGetResponse_ValueTag::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgMemCachedGetResponse_ValueTag::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CGCMsgMemCachedGetResponse_ValueTag::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedGetResponse.ValueTag.value)
  return value_.GetNoArena();
}
inline void CGCMsgMemCachedGetResponse_ValueTag::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedGetResponse.ValueTag.value)
}
#if LANG_CXX11
inline void CGCMsgMemCachedGetResponse_ValueTag::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CGCMsgMemCachedGetResponse.ValueTag.value)
}
#endif
inline void CGCMsgMemCachedGetResponse_ValueTag::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CGCMsgMemCachedGetResponse.ValueTag.value)
}
inline void CGCMsgMemCachedGetResponse_ValueTag::set_value(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CGCMsgMemCachedGetResponse.ValueTag.value)
}
inline ::std::string* CGCMsgMemCachedGetResponse_ValueTag::mutable_value() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCMsgMemCachedGetResponse.ValueTag.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCMsgMemCachedGetResponse_ValueTag::release_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CGCMsgMemCachedGetResponse.ValueTag.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCMsgMemCachedGetResponse_ValueTag::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CGCMsgMemCachedGetResponse.ValueTag.value)
}

// -------------------------------------------------------------------

// CGCMsgMemCachedGetResponse

// repeated .proto.dota.CGCMsgMemCachedGetResponse.ValueTag values = 1;
inline int CGCMsgMemCachedGetResponse::values_size() const {
  return values_.size();
}
inline void CGCMsgMemCachedGetResponse::clear_values() {
  values_.Clear();
}
inline ::proto::dota::CGCMsgMemCachedGetResponse_ValueTag* CGCMsgMemCachedGetResponse::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCMsgMemCachedGetResponse.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CGCMsgMemCachedGetResponse_ValueTag >*
CGCMsgMemCachedGetResponse::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CGCMsgMemCachedGetResponse.values)
  return &values_;
}
inline const ::proto::dota::CGCMsgMemCachedGetResponse_ValueTag& CGCMsgMemCachedGetResponse::values(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedGetResponse.values)
  return values_.Get(index);
}
inline ::proto::dota::CGCMsgMemCachedGetResponse_ValueTag* CGCMsgMemCachedGetResponse::add_values() {
  // @@protoc_insertion_point(field_add:proto.dota.CGCMsgMemCachedGetResponse.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CGCMsgMemCachedGetResponse_ValueTag >&
CGCMsgMemCachedGetResponse::values() const {
  // @@protoc_insertion_point(field_list:proto.dota.CGCMsgMemCachedGetResponse.values)
  return values_;
}

// -------------------------------------------------------------------

// CGCMsgMemCachedSet_KeyPair

// optional string name = 1;
inline bool CGCMsgMemCachedSet_KeyPair::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgMemCachedSet_KeyPair::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CGCMsgMemCachedSet_KeyPair::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedSet.KeyPair.name)
  return name_.GetNoArena();
}
inline void CGCMsgMemCachedSet_KeyPair::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedSet.KeyPair.name)
}
#if LANG_CXX11
inline void CGCMsgMemCachedSet_KeyPair::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CGCMsgMemCachedSet.KeyPair.name)
}
#endif
inline void CGCMsgMemCachedSet_KeyPair::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CGCMsgMemCachedSet.KeyPair.name)
}
inline void CGCMsgMemCachedSet_KeyPair::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CGCMsgMemCachedSet.KeyPair.name)
}
inline ::std::string* CGCMsgMemCachedSet_KeyPair::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCMsgMemCachedSet.KeyPair.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCMsgMemCachedSet_KeyPair::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CGCMsgMemCachedSet.KeyPair.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCMsgMemCachedSet_KeyPair::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CGCMsgMemCachedSet.KeyPair.name)
}

// optional bytes value = 2;
inline bool CGCMsgMemCachedSet_KeyPair::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgMemCachedSet_KeyPair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CGCMsgMemCachedSet_KeyPair::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedSet.KeyPair.value)
  return value_.GetNoArena();
}
inline void CGCMsgMemCachedSet_KeyPair::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedSet.KeyPair.value)
}
#if LANG_CXX11
inline void CGCMsgMemCachedSet_KeyPair::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CGCMsgMemCachedSet.KeyPair.value)
}
#endif
inline void CGCMsgMemCachedSet_KeyPair::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CGCMsgMemCachedSet.KeyPair.value)
}
inline void CGCMsgMemCachedSet_KeyPair::set_value(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CGCMsgMemCachedSet.KeyPair.value)
}
inline ::std::string* CGCMsgMemCachedSet_KeyPair::mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCMsgMemCachedSet.KeyPair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCMsgMemCachedSet_KeyPair::release_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CGCMsgMemCachedSet.KeyPair.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCMsgMemCachedSet_KeyPair::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CGCMsgMemCachedSet.KeyPair.value)
}

// -------------------------------------------------------------------

// CGCMsgMemCachedSet

// repeated .proto.dota.CGCMsgMemCachedSet.KeyPair keys = 1;
inline int CGCMsgMemCachedSet::keys_size() const {
  return keys_.size();
}
inline void CGCMsgMemCachedSet::clear_keys() {
  keys_.Clear();
}
inline ::proto::dota::CGCMsgMemCachedSet_KeyPair* CGCMsgMemCachedSet::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCMsgMemCachedSet.keys)
  return keys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CGCMsgMemCachedSet_KeyPair >*
CGCMsgMemCachedSet::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CGCMsgMemCachedSet.keys)
  return &keys_;
}
inline const ::proto::dota::CGCMsgMemCachedSet_KeyPair& CGCMsgMemCachedSet::keys(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedSet.keys)
  return keys_.Get(index);
}
inline ::proto::dota::CGCMsgMemCachedSet_KeyPair* CGCMsgMemCachedSet::add_keys() {
  // @@protoc_insertion_point(field_add:proto.dota.CGCMsgMemCachedSet.keys)
  return keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CGCMsgMemCachedSet_KeyPair >&
CGCMsgMemCachedSet::keys() const {
  // @@protoc_insertion_point(field_list:proto.dota.CGCMsgMemCachedSet.keys)
  return keys_;
}

// -------------------------------------------------------------------

// CGCMsgMemCachedDelete

// repeated string keys = 1;
inline int CGCMsgMemCachedDelete::keys_size() const {
  return keys_.size();
}
inline void CGCMsgMemCachedDelete::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& CGCMsgMemCachedDelete::keys(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedDelete.keys)
  return keys_.Get(index);
}
inline ::std::string* CGCMsgMemCachedDelete::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCMsgMemCachedDelete.keys)
  return keys_.Mutable(index);
}
inline void CGCMsgMemCachedDelete::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedDelete.keys)
  keys_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CGCMsgMemCachedDelete::set_keys(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedDelete.keys)
  keys_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CGCMsgMemCachedDelete::set_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CGCMsgMemCachedDelete.keys)
}
inline void CGCMsgMemCachedDelete::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CGCMsgMemCachedDelete.keys)
}
inline ::std::string* CGCMsgMemCachedDelete::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CGCMsgMemCachedDelete.keys)
  return keys_.Add();
}
inline void CGCMsgMemCachedDelete::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CGCMsgMemCachedDelete.keys)
}
#if LANG_CXX11
inline void CGCMsgMemCachedDelete::add_keys(::std::string&& value) {
  keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CGCMsgMemCachedDelete.keys)
}
#endif
inline void CGCMsgMemCachedDelete::add_keys(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CGCMsgMemCachedDelete.keys)
}
inline void CGCMsgMemCachedDelete::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CGCMsgMemCachedDelete.keys)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CGCMsgMemCachedDelete::keys() const {
  // @@protoc_insertion_point(field_list:proto.dota.CGCMsgMemCachedDelete.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CGCMsgMemCachedDelete::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CGCMsgMemCachedDelete.keys)
  return &keys_;
}

// -------------------------------------------------------------------

// CGCMsgMemCachedStats

// -------------------------------------------------------------------

// CGCMsgMemCachedStatsResponse

// optional uint64 curr_connections = 1;
inline bool CGCMsgMemCachedStatsResponse::has_curr_connections() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_curr_connections() {
  curr_connections_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::curr_connections() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.curr_connections)
  return curr_connections_;
}
inline void CGCMsgMemCachedStatsResponse::set_curr_connections(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  curr_connections_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.curr_connections)
}

// optional uint64 cmd_get = 2;
inline bool CGCMsgMemCachedStatsResponse::has_cmd_get() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_cmd_get() {
  cmd_get_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::cmd_get() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.cmd_get)
  return cmd_get_;
}
inline void CGCMsgMemCachedStatsResponse::set_cmd_get(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  cmd_get_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.cmd_get)
}

// optional uint64 cmd_set = 3;
inline bool CGCMsgMemCachedStatsResponse::has_cmd_set() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_cmd_set() {
  cmd_set_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::cmd_set() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.cmd_set)
  return cmd_set_;
}
inline void CGCMsgMemCachedStatsResponse::set_cmd_set(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  cmd_set_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.cmd_set)
}

// optional uint64 cmd_flush = 4;
inline bool CGCMsgMemCachedStatsResponse::has_cmd_flush() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_cmd_flush() {
  cmd_flush_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::cmd_flush() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.cmd_flush)
  return cmd_flush_;
}
inline void CGCMsgMemCachedStatsResponse::set_cmd_flush(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  cmd_flush_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.cmd_flush)
}

// optional uint64 get_hits = 5;
inline bool CGCMsgMemCachedStatsResponse::has_get_hits() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_get_hits() {
  get_hits_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::get_hits() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.get_hits)
  return get_hits_;
}
inline void CGCMsgMemCachedStatsResponse::set_get_hits(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  get_hits_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.get_hits)
}

// optional uint64 get_misses = 6;
inline bool CGCMsgMemCachedStatsResponse::has_get_misses() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_get_misses() {
  get_misses_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::get_misses() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.get_misses)
  return get_misses_;
}
inline void CGCMsgMemCachedStatsResponse::set_get_misses(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  get_misses_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.get_misses)
}

// optional uint64 delete_hits = 7;
inline bool CGCMsgMemCachedStatsResponse::has_delete_hits() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_delete_hits() {
  delete_hits_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::delete_hits() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.delete_hits)
  return delete_hits_;
}
inline void CGCMsgMemCachedStatsResponse::set_delete_hits(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  delete_hits_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.delete_hits)
}

// optional uint64 delete_misses = 8;
inline bool CGCMsgMemCachedStatsResponse::has_delete_misses() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_delete_misses() {
  delete_misses_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::delete_misses() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.delete_misses)
  return delete_misses_;
}
inline void CGCMsgMemCachedStatsResponse::set_delete_misses(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  delete_misses_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.delete_misses)
}

// optional uint64 bytes_read = 9;
inline bool CGCMsgMemCachedStatsResponse::has_bytes_read() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_bytes_read() {
  bytes_read_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::bytes_read() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.bytes_read)
  return bytes_read_;
}
inline void CGCMsgMemCachedStatsResponse::set_bytes_read(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000100u;
  bytes_read_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.bytes_read)
}

// optional uint64 bytes_written = 10;
inline bool CGCMsgMemCachedStatsResponse::has_bytes_written() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_bytes_written() {
  bytes_written_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::bytes_written() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.bytes_written)
  return bytes_written_;
}
inline void CGCMsgMemCachedStatsResponse::set_bytes_written(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000200u;
  bytes_written_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.bytes_written)
}

// optional uint64 limit_maxbytes = 11;
inline bool CGCMsgMemCachedStatsResponse::has_limit_maxbytes() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_limit_maxbytes() {
  limit_maxbytes_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::limit_maxbytes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.limit_maxbytes)
  return limit_maxbytes_;
}
inline void CGCMsgMemCachedStatsResponse::set_limit_maxbytes(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000400u;
  limit_maxbytes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.limit_maxbytes)
}

// optional uint64 curr_items = 12;
inline bool CGCMsgMemCachedStatsResponse::has_curr_items() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_curr_items() {
  curr_items_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::curr_items() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.curr_items)
  return curr_items_;
}
inline void CGCMsgMemCachedStatsResponse::set_curr_items(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000800u;
  curr_items_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.curr_items)
}

// optional uint64 evictions = 13;
inline bool CGCMsgMemCachedStatsResponse::has_evictions() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_evictions() {
  evictions_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::evictions() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.evictions)
  return evictions_;
}
inline void CGCMsgMemCachedStatsResponse::set_evictions(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00001000u;
  evictions_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.evictions)
}

// optional uint64 bytes = 14;
inline bool CGCMsgMemCachedStatsResponse::has_bytes() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::clear_bytes() {
  bytes_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::bytes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgMemCachedStatsResponse.bytes)
  return bytes_;
}
inline void CGCMsgMemCachedStatsResponse::set_bytes(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00002000u;
  bytes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgMemCachedStatsResponse.bytes)
}

// -------------------------------------------------------------------

// CGCMsgSQLStats

// optional uint32 schema_catalog = 1;
inline bool CGCMsgSQLStats::has_schema_catalog() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgSQLStats::clear_schema_catalog() {
  schema_catalog_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CGCMsgSQLStats::schema_catalog() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgSQLStats.schema_catalog)
  return schema_catalog_;
}
inline void CGCMsgSQLStats::set_schema_catalog(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  schema_catalog_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgSQLStats.schema_catalog)
}

// -------------------------------------------------------------------

// CGCMsgSQLStatsResponse

// optional uint32 threads = 1;
inline bool CGCMsgSQLStatsResponse::has_threads() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgSQLStatsResponse::clear_threads() {
  threads_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::threads() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgSQLStatsResponse.threads)
  return threads_;
}
inline void CGCMsgSQLStatsResponse::set_threads(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  threads_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgSQLStatsResponse.threads)
}

// optional uint32 threads_connected = 2;
inline bool CGCMsgSQLStatsResponse::has_threads_connected() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgSQLStatsResponse::clear_threads_connected() {
  threads_connected_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::threads_connected() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgSQLStatsResponse.threads_connected)
  return threads_connected_;
}
inline void CGCMsgSQLStatsResponse::set_threads_connected(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  threads_connected_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgSQLStatsResponse.threads_connected)
}

// optional uint32 threads_active = 3;
inline bool CGCMsgSQLStatsResponse::has_threads_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgSQLStatsResponse::clear_threads_active() {
  threads_active_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::threads_active() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgSQLStatsResponse.threads_active)
  return threads_active_;
}
inline void CGCMsgSQLStatsResponse::set_threads_active(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  threads_active_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgSQLStatsResponse.threads_active)
}

// optional uint32 operations_submitted = 4;
inline bool CGCMsgSQLStatsResponse::has_operations_submitted() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsgSQLStatsResponse::clear_operations_submitted() {
  operations_submitted_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::operations_submitted() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgSQLStatsResponse.operations_submitted)
  return operations_submitted_;
}
inline void CGCMsgSQLStatsResponse::set_operations_submitted(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  operations_submitted_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgSQLStatsResponse.operations_submitted)
}

// optional uint32 prepared_statements_executed = 5;
inline bool CGCMsgSQLStatsResponse::has_prepared_statements_executed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCMsgSQLStatsResponse::clear_prepared_statements_executed() {
  prepared_statements_executed_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::prepared_statements_executed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgSQLStatsResponse.prepared_statements_executed)
  return prepared_statements_executed_;
}
inline void CGCMsgSQLStatsResponse::set_prepared_statements_executed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  prepared_statements_executed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgSQLStatsResponse.prepared_statements_executed)
}

// optional uint32 non_prepared_statements_executed = 6;
inline bool CGCMsgSQLStatsResponse::has_non_prepared_statements_executed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGCMsgSQLStatsResponse::clear_non_prepared_statements_executed() {
  non_prepared_statements_executed_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::non_prepared_statements_executed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgSQLStatsResponse.non_prepared_statements_executed)
  return non_prepared_statements_executed_;
}
inline void CGCMsgSQLStatsResponse::set_non_prepared_statements_executed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  non_prepared_statements_executed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgSQLStatsResponse.non_prepared_statements_executed)
}

// optional uint32 deadlock_retries = 7;
inline bool CGCMsgSQLStatsResponse::has_deadlock_retries() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGCMsgSQLStatsResponse::clear_deadlock_retries() {
  deadlock_retries_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::deadlock_retries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgSQLStatsResponse.deadlock_retries)
  return deadlock_retries_;
}
inline void CGCMsgSQLStatsResponse::set_deadlock_retries(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  deadlock_retries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgSQLStatsResponse.deadlock_retries)
}

// optional uint32 operations_timed_out_in_queue = 8;
inline bool CGCMsgSQLStatsResponse::has_operations_timed_out_in_queue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CGCMsgSQLStatsResponse::clear_operations_timed_out_in_queue() {
  operations_timed_out_in_queue_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::operations_timed_out_in_queue() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgSQLStatsResponse.operations_timed_out_in_queue)
  return operations_timed_out_in_queue_;
}
inline void CGCMsgSQLStatsResponse::set_operations_timed_out_in_queue(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  operations_timed_out_in_queue_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgSQLStatsResponse.operations_timed_out_in_queue)
}

// optional uint32 errors = 9;
inline bool CGCMsgSQLStatsResponse::has_errors() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CGCMsgSQLStatsResponse::clear_errors() {
  errors_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::errors() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgSQLStatsResponse.errors)
  return errors_;
}
inline void CGCMsgSQLStatsResponse::set_errors(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  errors_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgSQLStatsResponse.errors)
}

// -------------------------------------------------------------------

// CMsgAMAddFreeLicense

// optional fixed64 steamid = 1;
inline bool CMsgAMAddFreeLicense::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMAddFreeLicense::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgAMAddFreeLicense::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMAddFreeLicense.steamid)
  return steamid_;
}
inline void CMsgAMAddFreeLicense::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMAddFreeLicense.steamid)
}

// optional uint32 ip_public = 2;
inline bool CMsgAMAddFreeLicense::has_ip_public() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAMAddFreeLicense::clear_ip_public() {
  ip_public_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgAMAddFreeLicense::ip_public() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMAddFreeLicense.ip_public)
  return ip_public_;
}
inline void CMsgAMAddFreeLicense::set_ip_public(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  ip_public_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMAddFreeLicense.ip_public)
}

// optional uint32 packageid = 3;
inline bool CMsgAMAddFreeLicense::has_packageid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgAMAddFreeLicense::clear_packageid() {
  packageid_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgAMAddFreeLicense::packageid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMAddFreeLicense.packageid)
  return packageid_;
}
inline void CMsgAMAddFreeLicense::set_packageid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  packageid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMAddFreeLicense.packageid)
}

// optional string store_country_code = 4;
inline bool CMsgAMAddFreeLicense::has_store_country_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMAddFreeLicense::clear_store_country_code() {
  store_country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgAMAddFreeLicense::store_country_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMAddFreeLicense.store_country_code)
  return store_country_code_.GetNoArena();
}
inline void CMsgAMAddFreeLicense::set_store_country_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  store_country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMAddFreeLicense.store_country_code)
}
#if LANG_CXX11
inline void CMsgAMAddFreeLicense::set_store_country_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  store_country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgAMAddFreeLicense.store_country_code)
}
#endif
inline void CMsgAMAddFreeLicense::set_store_country_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  store_country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgAMAddFreeLicense.store_country_code)
}
inline void CMsgAMAddFreeLicense::set_store_country_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  store_country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgAMAddFreeLicense.store_country_code)
}
inline ::std::string* CMsgAMAddFreeLicense::mutable_store_country_code() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgAMAddFreeLicense.store_country_code)
  return store_country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgAMAddFreeLicense::release_store_country_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgAMAddFreeLicense.store_country_code)
  if (!has_store_country_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return store_country_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgAMAddFreeLicense::set_allocated_store_country_code(::std::string* store_country_code) {
  if (store_country_code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  store_country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgAMAddFreeLicense.store_country_code)
}

// -------------------------------------------------------------------

// CMsgAMAddFreeLicenseResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgAMAddFreeLicenseResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAMAddFreeLicenseResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CMsgAMAddFreeLicenseResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMAddFreeLicenseResponse.eresult)
  return eresult_;
}
inline void CMsgAMAddFreeLicenseResponse::set_eresult(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMAddFreeLicenseResponse.eresult)
}

// optional int32 purchase_result_detail = 2;
inline bool CMsgAMAddFreeLicenseResponse::has_purchase_result_detail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMAddFreeLicenseResponse::clear_purchase_result_detail() {
  purchase_result_detail_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CMsgAMAddFreeLicenseResponse::purchase_result_detail() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMAddFreeLicenseResponse.purchase_result_detail)
  return purchase_result_detail_;
}
inline void CMsgAMAddFreeLicenseResponse::set_purchase_result_detail(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  purchase_result_detail_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMAddFreeLicenseResponse.purchase_result_detail)
}

// optional fixed64 transid = 3;
inline bool CMsgAMAddFreeLicenseResponse::has_transid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMAddFreeLicenseResponse::clear_transid() {
  transid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgAMAddFreeLicenseResponse::transid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMAddFreeLicenseResponse.transid)
  return transid_;
}
inline void CMsgAMAddFreeLicenseResponse::set_transid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  transid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMAddFreeLicenseResponse.transid)
}

// -------------------------------------------------------------------

// CGCMsgGetIPLocation

// repeated fixed32 ips = 1;
inline int CGCMsgGetIPLocation::ips_size() const {
  return ips_.size();
}
inline void CGCMsgGetIPLocation::clear_ips() {
  ips_.Clear();
}
inline ::google::protobuf::uint32 CGCMsgGetIPLocation::ips(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetIPLocation.ips)
  return ips_.Get(index);
}
inline void CGCMsgGetIPLocation::set_ips(int index, ::google::protobuf::uint32 value) {
  ips_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetIPLocation.ips)
}
inline void CGCMsgGetIPLocation::add_ips(::google::protobuf::uint32 value) {
  ips_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CGCMsgGetIPLocation.ips)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CGCMsgGetIPLocation::ips() const {
  // @@protoc_insertion_point(field_list:proto.dota.CGCMsgGetIPLocation.ips)
  return ips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CGCMsgGetIPLocation::mutable_ips() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CGCMsgGetIPLocation.ips)
  return &ips_;
}

// -------------------------------------------------------------------

// CIPLocationInfo

// optional uint32 ip = 1;
inline bool CIPLocationInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CIPLocationInfo::clear_ip() {
  ip_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CIPLocationInfo::ip() const {
  // @@protoc_insertion_point(field_get:proto.dota.CIPLocationInfo.ip)
  return ip_;
}
inline void CIPLocationInfo::set_ip(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  ip_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CIPLocationInfo.ip)
}

// optional float latitude = 2;
inline bool CIPLocationInfo::has_latitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CIPLocationInfo::clear_latitude() {
  latitude_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CIPLocationInfo::latitude() const {
  // @@protoc_insertion_point(field_get:proto.dota.CIPLocationInfo.latitude)
  return latitude_;
}
inline void CIPLocationInfo::set_latitude(float value) {
  _has_bits_[0] |= 0x00000010u;
  latitude_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CIPLocationInfo.latitude)
}

// optional float longitude = 3;
inline bool CIPLocationInfo::has_longitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CIPLocationInfo::clear_longitude() {
  longitude_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float CIPLocationInfo::longitude() const {
  // @@protoc_insertion_point(field_get:proto.dota.CIPLocationInfo.longitude)
  return longitude_;
}
inline void CIPLocationInfo::set_longitude(float value) {
  _has_bits_[0] |= 0x00000020u;
  longitude_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CIPLocationInfo.longitude)
}

// optional string country = 4;
inline bool CIPLocationInfo::has_country() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CIPLocationInfo::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CIPLocationInfo::country() const {
  // @@protoc_insertion_point(field_get:proto.dota.CIPLocationInfo.country)
  return country_.GetNoArena();
}
inline void CIPLocationInfo::set_country(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CIPLocationInfo.country)
}
#if LANG_CXX11
inline void CIPLocationInfo::set_country(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CIPLocationInfo.country)
}
#endif
inline void CIPLocationInfo::set_country(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CIPLocationInfo.country)
}
inline void CIPLocationInfo::set_country(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CIPLocationInfo.country)
}
inline ::std::string* CIPLocationInfo::mutable_country() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CIPLocationInfo.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CIPLocationInfo::release_country() {
  // @@protoc_insertion_point(field_release:proto.dota.CIPLocationInfo.country)
  if (!has_country()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return country_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CIPLocationInfo::set_allocated_country(::std::string* country) {
  if (country != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CIPLocationInfo.country)
}

// optional string state = 5;
inline bool CIPLocationInfo::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CIPLocationInfo::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CIPLocationInfo::state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CIPLocationInfo.state)
  return state_.GetNoArena();
}
inline void CIPLocationInfo::set_state(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CIPLocationInfo.state)
}
#if LANG_CXX11
inline void CIPLocationInfo::set_state(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CIPLocationInfo.state)
}
#endif
inline void CIPLocationInfo::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CIPLocationInfo.state)
}
inline void CIPLocationInfo::set_state(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CIPLocationInfo.state)
}
inline ::std::string* CIPLocationInfo::mutable_state() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CIPLocationInfo.state)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CIPLocationInfo::release_state() {
  // @@protoc_insertion_point(field_release:proto.dota.CIPLocationInfo.state)
  if (!has_state()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return state_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CIPLocationInfo::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CIPLocationInfo.state)
}

// optional string city = 6;
inline bool CIPLocationInfo::has_city() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CIPLocationInfo::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CIPLocationInfo::city() const {
  // @@protoc_insertion_point(field_get:proto.dota.CIPLocationInfo.city)
  return city_.GetNoArena();
}
inline void CIPLocationInfo::set_city(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CIPLocationInfo.city)
}
#if LANG_CXX11
inline void CIPLocationInfo::set_city(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CIPLocationInfo.city)
}
#endif
inline void CIPLocationInfo::set_city(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CIPLocationInfo.city)
}
inline void CIPLocationInfo::set_city(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CIPLocationInfo.city)
}
inline ::std::string* CIPLocationInfo::mutable_city() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CIPLocationInfo.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CIPLocationInfo::release_city() {
  // @@protoc_insertion_point(field_release:proto.dota.CIPLocationInfo.city)
  if (!has_city()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return city_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CIPLocationInfo::set_allocated_city(::std::string* city) {
  if (city != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CIPLocationInfo.city)
}

// -------------------------------------------------------------------

// CGCMsgGetIPLocationResponse

// repeated .proto.dota.CIPLocationInfo infos = 1;
inline int CGCMsgGetIPLocationResponse::infos_size() const {
  return infos_.size();
}
inline void CGCMsgGetIPLocationResponse::clear_infos() {
  infos_.Clear();
}
inline ::proto::dota::CIPLocationInfo* CGCMsgGetIPLocationResponse::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCMsgGetIPLocationResponse.infos)
  return infos_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CIPLocationInfo >*
CGCMsgGetIPLocationResponse::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CGCMsgGetIPLocationResponse.infos)
  return &infos_;
}
inline const ::proto::dota::CIPLocationInfo& CGCMsgGetIPLocationResponse::infos(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetIPLocationResponse.infos)
  return infos_.Get(index);
}
inline ::proto::dota::CIPLocationInfo* CGCMsgGetIPLocationResponse::add_infos() {
  // @@protoc_insertion_point(field_add:proto.dota.CGCMsgGetIPLocationResponse.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CIPLocationInfo >&
CGCMsgGetIPLocationResponse::infos() const {
  // @@protoc_insertion_point(field_list:proto.dota.CGCMsgGetIPLocationResponse.infos)
  return infos_;
}

// -------------------------------------------------------------------

// CGCMsgGetIPASN

// repeated fixed32 ips = 1;
inline int CGCMsgGetIPASN::ips_size() const {
  return ips_.size();
}
inline void CGCMsgGetIPASN::clear_ips() {
  ips_.Clear();
}
inline ::google::protobuf::uint32 CGCMsgGetIPASN::ips(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetIPASN.ips)
  return ips_.Get(index);
}
inline void CGCMsgGetIPASN::set_ips(int index, ::google::protobuf::uint32 value) {
  ips_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetIPASN.ips)
}
inline void CGCMsgGetIPASN::add_ips(::google::protobuf::uint32 value) {
  ips_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CGCMsgGetIPASN.ips)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CGCMsgGetIPASN::ips() const {
  // @@protoc_insertion_point(field_list:proto.dota.CGCMsgGetIPASN.ips)
  return ips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CGCMsgGetIPASN::mutable_ips() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CGCMsgGetIPASN.ips)
  return &ips_;
}

// -------------------------------------------------------------------

// CIPASNInfo

// optional fixed32 ip = 1;
inline bool CIPASNInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CIPASNInfo::clear_ip() {
  ip_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CIPASNInfo::ip() const {
  // @@protoc_insertion_point(field_get:proto.dota.CIPASNInfo.ip)
  return ip_;
}
inline void CIPASNInfo::set_ip(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ip_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CIPASNInfo.ip)
}

// optional uint32 asn = 2;
inline bool CIPASNInfo::has_asn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CIPASNInfo::clear_asn() {
  asn_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CIPASNInfo::asn() const {
  // @@protoc_insertion_point(field_get:proto.dota.CIPASNInfo.asn)
  return asn_;
}
inline void CIPASNInfo::set_asn(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  asn_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CIPASNInfo.asn)
}

// -------------------------------------------------------------------

// CGCMsgGetIPASNResponse

// repeated .proto.dota.CIPASNInfo infos = 1;
inline int CGCMsgGetIPASNResponse::infos_size() const {
  return infos_.size();
}
inline void CGCMsgGetIPASNResponse::clear_infos() {
  infos_.Clear();
}
inline ::proto::dota::CIPASNInfo* CGCMsgGetIPASNResponse::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCMsgGetIPASNResponse.infos)
  return infos_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CIPASNInfo >*
CGCMsgGetIPASNResponse::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CGCMsgGetIPASNResponse.infos)
  return &infos_;
}
inline const ::proto::dota::CIPASNInfo& CGCMsgGetIPASNResponse::infos(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetIPASNResponse.infos)
  return infos_.Get(index);
}
inline ::proto::dota::CIPASNInfo* CGCMsgGetIPASNResponse::add_infos() {
  // @@protoc_insertion_point(field_add:proto.dota.CGCMsgGetIPASNResponse.infos)
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CIPASNInfo >&
CGCMsgGetIPASNResponse::infos() const {
  // @@protoc_insertion_point(field_list:proto.dota.CGCMsgGetIPASNResponse.infos)
  return infos_;
}

// -------------------------------------------------------------------

// CGCMsgSystemStatsSchema

// optional uint32 gc_app_id = 1;
inline bool CGCMsgSystemStatsSchema::has_gc_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgSystemStatsSchema::clear_gc_app_id() {
  gc_app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CGCMsgSystemStatsSchema::gc_app_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgSystemStatsSchema.gc_app_id)
  return gc_app_id_;
}
inline void CGCMsgSystemStatsSchema::set_gc_app_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  gc_app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgSystemStatsSchema.gc_app_id)
}

// optional bytes schema_kv = 2;
inline bool CGCMsgSystemStatsSchema::has_schema_kv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgSystemStatsSchema::clear_schema_kv() {
  schema_kv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CGCMsgSystemStatsSchema::schema_kv() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgSystemStatsSchema.schema_kv)
  return schema_kv_.GetNoArena();
}
inline void CGCMsgSystemStatsSchema::set_schema_kv(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  schema_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgSystemStatsSchema.schema_kv)
}
#if LANG_CXX11
inline void CGCMsgSystemStatsSchema::set_schema_kv(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  schema_kv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CGCMsgSystemStatsSchema.schema_kv)
}
#endif
inline void CGCMsgSystemStatsSchema::set_schema_kv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  schema_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CGCMsgSystemStatsSchema.schema_kv)
}
inline void CGCMsgSystemStatsSchema::set_schema_kv(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  schema_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CGCMsgSystemStatsSchema.schema_kv)
}
inline ::std::string* CGCMsgSystemStatsSchema::mutable_schema_kv() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCMsgSystemStatsSchema.schema_kv)
  return schema_kv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCMsgSystemStatsSchema::release_schema_kv() {
  // @@protoc_insertion_point(field_release:proto.dota.CGCMsgSystemStatsSchema.schema_kv)
  if (!has_schema_kv()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return schema_kv_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCMsgSystemStatsSchema::set_allocated_schema_kv(::std::string* schema_kv) {
  if (schema_kv != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  schema_kv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), schema_kv);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CGCMsgSystemStatsSchema.schema_kv)
}

// -------------------------------------------------------------------

// CGCMsgGetSystemStats

// -------------------------------------------------------------------

// CGCMsgGetSystemStatsResponse

// optional uint32 gc_app_id = 1;
inline bool CGCMsgGetSystemStatsResponse::has_gc_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::clear_gc_app_id() {
  gc_app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::gc_app_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetSystemStatsResponse.gc_app_id)
  return gc_app_id_;
}
inline void CGCMsgGetSystemStatsResponse::set_gc_app_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  gc_app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetSystemStatsResponse.gc_app_id)
}

// optional bytes stats_kv = 2;
inline bool CGCMsgGetSystemStatsResponse::has_stats_kv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::clear_stats_kv() {
  stats_kv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CGCMsgGetSystemStatsResponse::stats_kv() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetSystemStatsResponse.stats_kv)
  return stats_kv_.GetNoArena();
}
inline void CGCMsgGetSystemStatsResponse::set_stats_kv(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  stats_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetSystemStatsResponse.stats_kv)
}
#if LANG_CXX11
inline void CGCMsgGetSystemStatsResponse::set_stats_kv(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  stats_kv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CGCMsgGetSystemStatsResponse.stats_kv)
}
#endif
inline void CGCMsgGetSystemStatsResponse::set_stats_kv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  stats_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CGCMsgGetSystemStatsResponse.stats_kv)
}
inline void CGCMsgGetSystemStatsResponse::set_stats_kv(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  stats_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CGCMsgGetSystemStatsResponse.stats_kv)
}
inline ::std::string* CGCMsgGetSystemStatsResponse::mutable_stats_kv() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCMsgGetSystemStatsResponse.stats_kv)
  return stats_kv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCMsgGetSystemStatsResponse::release_stats_kv() {
  // @@protoc_insertion_point(field_release:proto.dota.CGCMsgGetSystemStatsResponse.stats_kv)
  if (!has_stats_kv()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return stats_kv_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCMsgGetSystemStatsResponse::set_allocated_stats_kv(::std::string* stats_kv) {
  if (stats_kv != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stats_kv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stats_kv);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CGCMsgGetSystemStatsResponse.stats_kv)
}

// optional uint32 active_jobs = 3;
inline bool CGCMsgGetSystemStatsResponse::has_active_jobs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::clear_active_jobs() {
  active_jobs_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::active_jobs() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetSystemStatsResponse.active_jobs)
  return active_jobs_;
}
inline void CGCMsgGetSystemStatsResponse::set_active_jobs(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  active_jobs_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetSystemStatsResponse.active_jobs)
}

// optional uint32 yielding_jobs = 4;
inline bool CGCMsgGetSystemStatsResponse::has_yielding_jobs() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::clear_yielding_jobs() {
  yielding_jobs_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::yielding_jobs() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetSystemStatsResponse.yielding_jobs)
  return yielding_jobs_;
}
inline void CGCMsgGetSystemStatsResponse::set_yielding_jobs(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  yielding_jobs_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetSystemStatsResponse.yielding_jobs)
}

// optional uint32 user_sessions = 5;
inline bool CGCMsgGetSystemStatsResponse::has_user_sessions() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::clear_user_sessions() {
  user_sessions_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::user_sessions() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetSystemStatsResponse.user_sessions)
  return user_sessions_;
}
inline void CGCMsgGetSystemStatsResponse::set_user_sessions(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  user_sessions_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetSystemStatsResponse.user_sessions)
}

// optional uint32 game_server_sessions = 6;
inline bool CGCMsgGetSystemStatsResponse::has_game_server_sessions() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::clear_game_server_sessions() {
  game_server_sessions_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::game_server_sessions() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetSystemStatsResponse.game_server_sessions)
  return game_server_sessions_;
}
inline void CGCMsgGetSystemStatsResponse::set_game_server_sessions(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  game_server_sessions_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetSystemStatsResponse.game_server_sessions)
}

// optional uint32 socaches = 7;
inline bool CGCMsgGetSystemStatsResponse::has_socaches() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::clear_socaches() {
  socaches_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::socaches() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetSystemStatsResponse.socaches)
  return socaches_;
}
inline void CGCMsgGetSystemStatsResponse::set_socaches(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  socaches_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetSystemStatsResponse.socaches)
}

// optional uint32 socaches_to_unload = 8;
inline bool CGCMsgGetSystemStatsResponse::has_socaches_to_unload() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::clear_socaches_to_unload() {
  socaches_to_unload_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::socaches_to_unload() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetSystemStatsResponse.socaches_to_unload)
  return socaches_to_unload_;
}
inline void CGCMsgGetSystemStatsResponse::set_socaches_to_unload(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  socaches_to_unload_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetSystemStatsResponse.socaches_to_unload)
}

// optional uint32 socaches_loading = 9;
inline bool CGCMsgGetSystemStatsResponse::has_socaches_loading() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::clear_socaches_loading() {
  socaches_loading_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::socaches_loading() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetSystemStatsResponse.socaches_loading)
  return socaches_loading_;
}
inline void CGCMsgGetSystemStatsResponse::set_socaches_loading(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  socaches_loading_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetSystemStatsResponse.socaches_loading)
}

// optional uint32 writeback_queue = 10;
inline bool CGCMsgGetSystemStatsResponse::has_writeback_queue() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::clear_writeback_queue() {
  writeback_queue_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::writeback_queue() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetSystemStatsResponse.writeback_queue)
  return writeback_queue_;
}
inline void CGCMsgGetSystemStatsResponse::set_writeback_queue(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  writeback_queue_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetSystemStatsResponse.writeback_queue)
}

// optional uint32 steamid_locks = 11;
inline bool CGCMsgGetSystemStatsResponse::has_steamid_locks() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::clear_steamid_locks() {
  steamid_locks_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::steamid_locks() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetSystemStatsResponse.steamid_locks)
  return steamid_locks_;
}
inline void CGCMsgGetSystemStatsResponse::set_steamid_locks(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  steamid_locks_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetSystemStatsResponse.steamid_locks)
}

// optional uint32 logon_queue = 12;
inline bool CGCMsgGetSystemStatsResponse::has_logon_queue() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::clear_logon_queue() {
  logon_queue_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::logon_queue() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetSystemStatsResponse.logon_queue)
  return logon_queue_;
}
inline void CGCMsgGetSystemStatsResponse::set_logon_queue(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  logon_queue_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetSystemStatsResponse.logon_queue)
}

// optional uint32 logon_jobs = 13;
inline bool CGCMsgGetSystemStatsResponse::has_logon_jobs() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::clear_logon_jobs() {
  logon_jobs_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::logon_jobs() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCMsgGetSystemStatsResponse.logon_jobs)
  return logon_jobs_;
}
inline void CGCMsgGetSystemStatsResponse::set_logon_jobs(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  logon_jobs_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCMsgGetSystemStatsResponse.logon_jobs)
}

// -------------------------------------------------------------------

// CMsgAMSendEmail_ReplacementToken

// optional string token_name = 1;
inline bool CMsgAMSendEmail_ReplacementToken::has_token_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMSendEmail_ReplacementToken::clear_token_name() {
  token_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgAMSendEmail_ReplacementToken::token_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMSendEmail.ReplacementToken.token_name)
  return token_name_.GetNoArena();
}
inline void CMsgAMSendEmail_ReplacementToken::set_token_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMSendEmail.ReplacementToken.token_name)
}
#if LANG_CXX11
inline void CMsgAMSendEmail_ReplacementToken::set_token_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgAMSendEmail.ReplacementToken.token_name)
}
#endif
inline void CMsgAMSendEmail_ReplacementToken::set_token_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgAMSendEmail.ReplacementToken.token_name)
}
inline void CMsgAMSendEmail_ReplacementToken::set_token_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgAMSendEmail.ReplacementToken.token_name)
}
inline ::std::string* CMsgAMSendEmail_ReplacementToken::mutable_token_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgAMSendEmail.ReplacementToken.token_name)
  return token_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgAMSendEmail_ReplacementToken::release_token_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgAMSendEmail.ReplacementToken.token_name)
  if (!has_token_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgAMSendEmail_ReplacementToken::set_allocated_token_name(::std::string* token_name) {
  if (token_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgAMSendEmail.ReplacementToken.token_name)
}

// optional string token_value = 2;
inline bool CMsgAMSendEmail_ReplacementToken::has_token_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMSendEmail_ReplacementToken::clear_token_value() {
  token_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgAMSendEmail_ReplacementToken::token_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMSendEmail.ReplacementToken.token_value)
  return token_value_.GetNoArena();
}
inline void CMsgAMSendEmail_ReplacementToken::set_token_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  token_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMSendEmail.ReplacementToken.token_value)
}
#if LANG_CXX11
inline void CMsgAMSendEmail_ReplacementToken::set_token_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  token_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgAMSendEmail.ReplacementToken.token_value)
}
#endif
inline void CMsgAMSendEmail_ReplacementToken::set_token_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  token_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgAMSendEmail.ReplacementToken.token_value)
}
inline void CMsgAMSendEmail_ReplacementToken::set_token_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  token_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgAMSendEmail.ReplacementToken.token_value)
}
inline ::std::string* CMsgAMSendEmail_ReplacementToken::mutable_token_value() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgAMSendEmail.ReplacementToken.token_value)
  return token_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgAMSendEmail_ReplacementToken::release_token_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgAMSendEmail.ReplacementToken.token_value)
  if (!has_token_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return token_value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgAMSendEmail_ReplacementToken::set_allocated_token_value(::std::string* token_value) {
  if (token_value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  token_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token_value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgAMSendEmail.ReplacementToken.token_value)
}

// -------------------------------------------------------------------

// CMsgAMSendEmail_PersonaNameReplacementToken

// optional fixed64 steamid = 1;
inline bool CMsgAMSendEmail_PersonaNameReplacementToken::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgAMSendEmail_PersonaNameReplacementToken::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken.steamid)
  return steamid_;
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken.steamid)
}

// optional string token_name = 2;
inline bool CMsgAMSendEmail_PersonaNameReplacementToken::has_token_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::clear_token_name() {
  token_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgAMSendEmail_PersonaNameReplacementToken::token_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
  return token_name_.GetNoArena();
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::set_token_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
}
#if LANG_CXX11
inline void CMsgAMSendEmail_PersonaNameReplacementToken::set_token_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
}
#endif
inline void CMsgAMSendEmail_PersonaNameReplacementToken::set_token_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::set_token_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
}
inline ::std::string* CMsgAMSendEmail_PersonaNameReplacementToken::mutable_token_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
  return token_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgAMSendEmail_PersonaNameReplacementToken::release_token_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
  if (!has_token_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::set_allocated_token_name(::std::string* token_name) {
  if (token_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken.token_name)
}

// -------------------------------------------------------------------

// CMsgAMSendEmail

// optional fixed64 steamid = 1;
inline bool CMsgAMSendEmail::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMSendEmail::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgAMSendEmail::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMSendEmail.steamid)
  return steamid_;
}
inline void CMsgAMSendEmail::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMSendEmail.steamid)
}

// optional uint32 email_msg_type = 2;
inline bool CMsgAMSendEmail::has_email_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMSendEmail::clear_email_msg_type() {
  email_msg_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgAMSendEmail::email_msg_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMSendEmail.email_msg_type)
  return email_msg_type_;
}
inline void CMsgAMSendEmail::set_email_msg_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  email_msg_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMSendEmail.email_msg_type)
}

// optional uint32 email_format = 3;
inline bool CMsgAMSendEmail::has_email_format() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAMSendEmail::clear_email_format() {
  email_format_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgAMSendEmail::email_format() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMSendEmail.email_format)
  return email_format_;
}
inline void CMsgAMSendEmail::set_email_format(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  email_format_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMSendEmail.email_format)
}

// repeated .proto.dota.CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
inline int CMsgAMSendEmail::persona_name_tokens_size() const {
  return persona_name_tokens_.size();
}
inline void CMsgAMSendEmail::clear_persona_name_tokens() {
  persona_name_tokens_.Clear();
}
inline ::proto::dota::CMsgAMSendEmail_PersonaNameReplacementToken* CMsgAMSendEmail::mutable_persona_name_tokens(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgAMSendEmail.persona_name_tokens)
  return persona_name_tokens_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMSendEmail_PersonaNameReplacementToken >*
CMsgAMSendEmail::mutable_persona_name_tokens() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgAMSendEmail.persona_name_tokens)
  return &persona_name_tokens_;
}
inline const ::proto::dota::CMsgAMSendEmail_PersonaNameReplacementToken& CMsgAMSendEmail::persona_name_tokens(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMSendEmail.persona_name_tokens)
  return persona_name_tokens_.Get(index);
}
inline ::proto::dota::CMsgAMSendEmail_PersonaNameReplacementToken* CMsgAMSendEmail::add_persona_name_tokens() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgAMSendEmail.persona_name_tokens)
  return persona_name_tokens_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMSendEmail_PersonaNameReplacementToken >&
CMsgAMSendEmail::persona_name_tokens() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgAMSendEmail.persona_name_tokens)
  return persona_name_tokens_;
}

// optional uint32 source_gc = 6;
inline bool CMsgAMSendEmail::has_source_gc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgAMSendEmail::clear_source_gc() {
  source_gc_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgAMSendEmail::source_gc() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMSendEmail.source_gc)
  return source_gc_;
}
inline void CMsgAMSendEmail::set_source_gc(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  source_gc_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMSendEmail.source_gc)
}

// repeated .proto.dota.CMsgAMSendEmail.ReplacementToken tokens = 7;
inline int CMsgAMSendEmail::tokens_size() const {
  return tokens_.size();
}
inline void CMsgAMSendEmail::clear_tokens() {
  tokens_.Clear();
}
inline ::proto::dota::CMsgAMSendEmail_ReplacementToken* CMsgAMSendEmail::mutable_tokens(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgAMSendEmail.tokens)
  return tokens_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMSendEmail_ReplacementToken >*
CMsgAMSendEmail::mutable_tokens() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgAMSendEmail.tokens)
  return &tokens_;
}
inline const ::proto::dota::CMsgAMSendEmail_ReplacementToken& CMsgAMSendEmail::tokens(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMSendEmail.tokens)
  return tokens_.Get(index);
}
inline ::proto::dota::CMsgAMSendEmail_ReplacementToken* CMsgAMSendEmail::add_tokens() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgAMSendEmail.tokens)
  return tokens_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAMSendEmail_ReplacementToken >&
CMsgAMSendEmail::tokens() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgAMSendEmail.tokens)
  return tokens_;
}

// -------------------------------------------------------------------

// CMsgAMSendEmailResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgAMSendEmailResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMSendEmailResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgAMSendEmailResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMSendEmailResponse.eresult)
  return eresult_;
}
inline void CMsgAMSendEmailResponse::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMSendEmailResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgGCGetEmailTemplate

// optional uint32 app_id = 1;
inline bool CMsgGCGetEmailTemplate::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetEmailTemplate::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCGetEmailTemplate::app_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetEmailTemplate.app_id)
  return app_id_;
}
inline void CMsgGCGetEmailTemplate::set_app_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetEmailTemplate.app_id)
}

// optional uint32 email_msg_type = 2;
inline bool CMsgGCGetEmailTemplate::has_email_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetEmailTemplate::clear_email_msg_type() {
  email_msg_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCGetEmailTemplate::email_msg_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetEmailTemplate.email_msg_type)
  return email_msg_type_;
}
inline void CMsgGCGetEmailTemplate::set_email_msg_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  email_msg_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetEmailTemplate.email_msg_type)
}

// optional int32 email_lang = 3;
inline bool CMsgGCGetEmailTemplate::has_email_lang() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCGetEmailTemplate::clear_email_lang() {
  email_lang_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CMsgGCGetEmailTemplate::email_lang() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetEmailTemplate.email_lang)
  return email_lang_;
}
inline void CMsgGCGetEmailTemplate::set_email_lang(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  email_lang_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetEmailTemplate.email_lang)
}

// optional int32 email_format = 4;
inline bool CMsgGCGetEmailTemplate::has_email_format() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCGetEmailTemplate::clear_email_format() {
  email_format_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CMsgGCGetEmailTemplate::email_format() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetEmailTemplate.email_format)
  return email_format_;
}
inline void CMsgGCGetEmailTemplate::set_email_format(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  email_format_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetEmailTemplate.email_format)
}

// -------------------------------------------------------------------

// CMsgGCGetEmailTemplateResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgGCGetEmailTemplateResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCGetEmailTemplateResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCGetEmailTemplateResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetEmailTemplateResponse.eresult)
  return eresult_;
}
inline void CMsgGCGetEmailTemplateResponse::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetEmailTemplateResponse.eresult)
}

// optional bool template_exists = 2;
inline bool CMsgGCGetEmailTemplateResponse::has_template_exists() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetEmailTemplateResponse::clear_template_exists() {
  template_exists_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCGetEmailTemplateResponse::template_exists() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetEmailTemplateResponse.template_exists)
  return template_exists_;
}
inline void CMsgGCGetEmailTemplateResponse::set_template_exists(bool value) {
  _has_bits_[0] |= 0x00000002u;
  template_exists_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetEmailTemplateResponse.template_exists)
}

// optional string template = 3;
inline bool CMsgGCGetEmailTemplateResponse::has_template_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetEmailTemplateResponse::clear_template_() {
  template__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCGetEmailTemplateResponse::template_() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetEmailTemplateResponse.template)
  return template__.GetNoArena();
}
inline void CMsgGCGetEmailTemplateResponse::set_template_(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  template__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetEmailTemplateResponse.template)
}
#if LANG_CXX11
inline void CMsgGCGetEmailTemplateResponse::set_template_(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  template__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCGetEmailTemplateResponse.template)
}
#endif
inline void CMsgGCGetEmailTemplateResponse::set_template_(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  template__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCGetEmailTemplateResponse.template)
}
inline void CMsgGCGetEmailTemplateResponse::set_template_(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  template__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCGetEmailTemplateResponse.template)
}
inline ::std::string* CMsgGCGetEmailTemplateResponse::mutable_template_() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetEmailTemplateResponse.template)
  return template__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCGetEmailTemplateResponse::release_template_() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCGetEmailTemplateResponse.template)
  if (!has_template_()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return template__.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCGetEmailTemplateResponse::set_allocated_template_(::std::string* template_) {
  if (template_ != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  template__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), template_);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCGetEmailTemplateResponse.template)
}

// -------------------------------------------------------------------

// CMsgAMGrantGuestPasses2

// optional fixed64 steam_id = 1;
inline bool CMsgAMGrantGuestPasses2::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGrantGuestPasses2::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgAMGrantGuestPasses2::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGrantGuestPasses2.steam_id)
  return steam_id_;
}
inline void CMsgAMGrantGuestPasses2::set_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGrantGuestPasses2.steam_id)
}

// optional uint32 package_id = 2;
inline bool CMsgAMGrantGuestPasses2::has_package_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMGrantGuestPasses2::clear_package_id() {
  package_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgAMGrantGuestPasses2::package_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGrantGuestPasses2.package_id)
  return package_id_;
}
inline void CMsgAMGrantGuestPasses2::set_package_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  package_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGrantGuestPasses2.package_id)
}

// optional int32 passes_to_grant = 3;
inline bool CMsgAMGrantGuestPasses2::has_passes_to_grant() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAMGrantGuestPasses2::clear_passes_to_grant() {
  passes_to_grant_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CMsgAMGrantGuestPasses2::passes_to_grant() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGrantGuestPasses2.passes_to_grant)
  return passes_to_grant_;
}
inline void CMsgAMGrantGuestPasses2::set_passes_to_grant(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  passes_to_grant_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGrantGuestPasses2.passes_to_grant)
}

// optional int32 days_to_expiration = 4;
inline bool CMsgAMGrantGuestPasses2::has_days_to_expiration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgAMGrantGuestPasses2::clear_days_to_expiration() {
  days_to_expiration_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CMsgAMGrantGuestPasses2::days_to_expiration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGrantGuestPasses2.days_to_expiration)
  return days_to_expiration_;
}
inline void CMsgAMGrantGuestPasses2::set_days_to_expiration(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  days_to_expiration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGrantGuestPasses2.days_to_expiration)
}

// optional int32 action = 5;
inline bool CMsgAMGrantGuestPasses2::has_action() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgAMGrantGuestPasses2::clear_action() {
  action_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 CMsgAMGrantGuestPasses2::action() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGrantGuestPasses2.action)
  return action_;
}
inline void CMsgAMGrantGuestPasses2::set_action(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  action_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGrantGuestPasses2.action)
}

// -------------------------------------------------------------------

// CMsgAMGrantGuestPasses2Response

// optional int32 eresult = 1 [default = 2];
inline bool CMsgAMGrantGuestPasses2Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMGrantGuestPasses2Response::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CMsgAMGrantGuestPasses2Response::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGrantGuestPasses2Response.eresult)
  return eresult_;
}
inline void CMsgAMGrantGuestPasses2Response::set_eresult(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGrantGuestPasses2Response.eresult)
}

// optional int32 passes_granted = 2 [default = 0];
inline bool CMsgAMGrantGuestPasses2Response::has_passes_granted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGrantGuestPasses2Response::clear_passes_granted() {
  passes_granted_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CMsgAMGrantGuestPasses2Response::passes_granted() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAMGrantGuestPasses2Response.passes_granted)
  return passes_granted_;
}
inline void CMsgAMGrantGuestPasses2Response::set_passes_granted(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  passes_granted_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAMGrantGuestPasses2Response.passes_granted)
}

// -------------------------------------------------------------------

// CGCSystemMsg_GetAccountDetails

// optional fixed64 steamid = 1;
inline bool CGCSystemMsg_GetAccountDetails::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CGCSystemMsg_GetAccountDetails::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails.steamid)
  return steamid_;
}
inline void CGCSystemMsg_GetAccountDetails::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails.steamid)
}

// optional uint32 appid = 2;
inline bool CGCSystemMsg_GetAccountDetails::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails.appid)
  return appid_;
}
inline void CGCSystemMsg_GetAccountDetails::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails.appid)
}

// -------------------------------------------------------------------

// CGCSystemMsg_GetAccountDetails_Response

// optional uint32 eresult_deprecated = 1 [default = 2];
inline bool CGCSystemMsg_GetAccountDetails_Response::has_eresult_deprecated() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_eresult_deprecated() {
  eresult_deprecated_ = 2u;
  _has_bits_[1] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::eresult_deprecated() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.eresult_deprecated)
  return eresult_deprecated_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_eresult_deprecated(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000004u;
  eresult_deprecated_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.eresult_deprecated)
}

// optional string account_name = 2;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_account_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CGCSystemMsg_GetAccountDetails_Response::account_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.account_name)
  return account_name_.GetNoArena();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_account_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.account_name)
}
#if LANG_CXX11
inline void CGCSystemMsg_GetAccountDetails_Response::set_account_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CGCSystemMsg_GetAccountDetails_Response.account_name)
}
#endif
inline void CGCSystemMsg_GetAccountDetails_Response::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CGCSystemMsg_GetAccountDetails_Response.account_name)
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_account_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CGCSystemMsg_GetAccountDetails_Response.account_name)
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_account_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCSystemMsg_GetAccountDetails_Response.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::release_account_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CGCSystemMsg_GetAccountDetails_Response.account_name)
  if (!has_account_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return account_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_allocated_account_name(::std::string* account_name) {
  if (account_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CGCSystemMsg_GetAccountDetails_Response.account_name)
}

// optional string persona_name = 3;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_persona_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_persona_name() {
  persona_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CGCSystemMsg_GetAccountDetails_Response::persona_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.persona_name)
  return persona_name_.GetNoArena();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_persona_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.persona_name)
}
#if LANG_CXX11
inline void CGCSystemMsg_GetAccountDetails_Response::set_persona_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  persona_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CGCSystemMsg_GetAccountDetails_Response.persona_name)
}
#endif
inline void CGCSystemMsg_GetAccountDetails_Response::set_persona_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CGCSystemMsg_GetAccountDetails_Response.persona_name)
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_persona_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CGCSystemMsg_GetAccountDetails_Response.persona_name)
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_persona_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCSystemMsg_GetAccountDetails_Response.persona_name)
  return persona_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::release_persona_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CGCSystemMsg_GetAccountDetails_Response.persona_name)
  if (!has_persona_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return persona_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  persona_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CGCSystemMsg_GetAccountDetails_Response.persona_name)
}

// optional bool is_profile_created = 26;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_profile_created() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_profile_created() {
  is_profile_created_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_profile_created() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_profile_created)
  return is_profile_created_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_profile_created(bool value) {
  _has_bits_[0] |= 0x00000100u;
  is_profile_created_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_profile_created)
}

// optional bool is_profile_public = 4;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_profile_public() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_profile_public() {
  is_profile_public_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_profile_public() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_profile_public)
  return is_profile_public_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_profile_public(bool value) {
  _has_bits_[0] |= 0x00000200u;
  is_profile_public_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_profile_public)
}

// optional bool is_inventory_public = 5;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_inventory_public() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_inventory_public() {
  is_inventory_public_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_inventory_public() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_inventory_public)
  return is_inventory_public_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_inventory_public(bool value) {
  _has_bits_[0] |= 0x00000400u;
  is_inventory_public_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_inventory_public)
}

// optional bool is_vac_banned = 7;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_vac_banned() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_vac_banned() {
  is_vac_banned_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_vac_banned() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_vac_banned)
  return is_vac_banned_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_vac_banned(bool value) {
  _has_bits_[0] |= 0x00000800u;
  is_vac_banned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_vac_banned)
}

// optional bool is_cyber_cafe = 8;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_cyber_cafe() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_cyber_cafe() {
  is_cyber_cafe_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_cyber_cafe() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_cyber_cafe)
  return is_cyber_cafe_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_cyber_cafe(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_cyber_cafe_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_cyber_cafe)
}

// optional bool is_school_account = 9;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_school_account() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_school_account() {
  is_school_account_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_school_account() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_school_account)
  return is_school_account_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_school_account(bool value) {
  _has_bits_[0] |= 0x00000020u;
  is_school_account_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_school_account)
}

// optional bool is_limited = 10;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_limited() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_limited() {
  is_limited_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_limited() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_limited)
  return is_limited_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_limited(bool value) {
  _has_bits_[0] |= 0x00000040u;
  is_limited_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_limited)
}

// optional bool is_subscribed = 11;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_subscribed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_subscribed() {
  is_subscribed_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_subscribed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_subscribed)
  return is_subscribed_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_subscribed(bool value) {
  _has_bits_[0] |= 0x00000080u;
  is_subscribed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_subscribed)
}

// optional uint32 package = 12;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_package() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_package() {
  package_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::package() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.package)
  return package_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_package(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  package_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.package)
}

// optional bool is_free_trial_account = 13;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_free_trial_account() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_free_trial_account() {
  is_free_trial_account_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_free_trial_account() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_free_trial_account)
  return is_free_trial_account_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_free_trial_account(bool value) {
  _has_bits_[0] |= 0x00004000u;
  is_free_trial_account_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_free_trial_account)
}

// optional uint32 free_trial_expiration = 14;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_free_trial_expiration() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_free_trial_expiration() {
  free_trial_expiration_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::free_trial_expiration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.free_trial_expiration)
  return free_trial_expiration_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_free_trial_expiration(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  free_trial_expiration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.free_trial_expiration)
}

// optional bool is_low_violence = 15;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_low_violence() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_low_violence() {
  is_low_violence_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_low_violence() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_low_violence)
  return is_low_violence_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_low_violence(bool value) {
  _has_bits_[0] |= 0x00008000u;
  is_low_violence_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_low_violence)
}

// optional bool is_account_locked_down = 16;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_account_locked_down() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_account_locked_down() {
  is_account_locked_down_ = false;
  _has_bits_[0] &= ~0x00010000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_account_locked_down() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_account_locked_down)
  return is_account_locked_down_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_account_locked_down(bool value) {
  _has_bits_[0] |= 0x00010000u;
  is_account_locked_down_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_account_locked_down)
}

// optional bool is_community_banned = 17;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_community_banned() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_community_banned() {
  is_community_banned_ = false;
  _has_bits_[0] &= ~0x00020000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_community_banned() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_community_banned)
  return is_community_banned_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_community_banned(bool value) {
  _has_bits_[0] |= 0x00020000u;
  is_community_banned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_community_banned)
}

// optional bool is_trade_banned = 18;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_trade_banned() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_trade_banned() {
  is_trade_banned_ = false;
  _has_bits_[0] &= ~0x01000000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_trade_banned() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_trade_banned)
  return is_trade_banned_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_trade_banned(bool value) {
  _has_bits_[0] |= 0x01000000u;
  is_trade_banned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_trade_banned)
}

// optional uint32 trade_ban_expiration = 19;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_trade_ban_expiration() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_trade_ban_expiration() {
  trade_ban_expiration_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::trade_ban_expiration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.trade_ban_expiration)
  return trade_ban_expiration_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_trade_ban_expiration(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  trade_ban_expiration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.trade_ban_expiration)
}

// optional uint32 accountid = 20;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_accountid() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_accountid() {
  accountid_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::accountid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.accountid)
  return accountid_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_accountid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  accountid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.accountid)
}

// optional uint32 suspension_end_time = 21;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_suspension_end_time() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_suspension_end_time() {
  suspension_end_time_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::suspension_end_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.suspension_end_time)
  return suspension_end_time_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_suspension_end_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  suspension_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.suspension_end_time)
}

// optional string currency = 22;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_currency() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_currency() {
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CGCSystemMsg_GetAccountDetails_Response::currency() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.currency)
  return currency_.GetNoArena();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_currency(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.currency)
}
#if LANG_CXX11
inline void CGCSystemMsg_GetAccountDetails_Response::set_currency(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  currency_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CGCSystemMsg_GetAccountDetails_Response.currency)
}
#endif
inline void CGCSystemMsg_GetAccountDetails_Response::set_currency(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CGCSystemMsg_GetAccountDetails_Response.currency)
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_currency(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CGCSystemMsg_GetAccountDetails_Response.currency)
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_currency() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCSystemMsg_GetAccountDetails_Response.currency)
  return currency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::release_currency() {
  // @@protoc_insertion_point(field_release:proto.dota.CGCSystemMsg_GetAccountDetails_Response.currency)
  if (!has_currency()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return currency_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_allocated_currency(::std::string* currency) {
  if (currency != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  currency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CGCSystemMsg_GetAccountDetails_Response.currency)
}

// optional uint32 steam_level = 23;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_steam_level() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_steam_level() {
  steam_level_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::steam_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.steam_level)
  return steam_level_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_steam_level(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  steam_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.steam_level)
}

// optional uint32 friend_count = 24;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_friend_count() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_friend_count() {
  friend_count_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::friend_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.friend_count)
  return friend_count_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_friend_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  friend_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.friend_count)
}

// optional uint32 account_creation_time = 25;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_account_creation_time() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_account_creation_time() {
  account_creation_time_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::account_creation_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.account_creation_time)
  return account_creation_time_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_account_creation_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  account_creation_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.account_creation_time)
}

// optional bool is_steamguard_enabled = 27;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_steamguard_enabled() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_steamguard_enabled() {
  is_steamguard_enabled_ = false;
  _has_bits_[0] &= ~0x02000000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_steamguard_enabled() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_steamguard_enabled)
  return is_steamguard_enabled_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_steamguard_enabled(bool value) {
  _has_bits_[0] |= 0x02000000u;
  is_steamguard_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_steamguard_enabled)
}

// optional bool is_phone_verified = 28;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_phone_verified() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_phone_verified() {
  is_phone_verified_ = false;
  _has_bits_[0] &= ~0x04000000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_phone_verified() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_phone_verified)
  return is_phone_verified_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_phone_verified(bool value) {
  _has_bits_[0] |= 0x04000000u;
  is_phone_verified_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_phone_verified)
}

// optional bool is_two_factor_auth_enabled = 29;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_two_factor_auth_enabled() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_two_factor_auth_enabled() {
  is_two_factor_auth_enabled_ = false;
  _has_bits_[0] &= ~0x08000000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_two_factor_auth_enabled() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_two_factor_auth_enabled)
  return is_two_factor_auth_enabled_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_two_factor_auth_enabled(bool value) {
  _has_bits_[0] |= 0x08000000u;
  is_two_factor_auth_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_two_factor_auth_enabled)
}

// optional uint32 two_factor_enabled_time = 30;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_two_factor_enabled_time() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_two_factor_enabled_time() {
  two_factor_enabled_time_ = 0u;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::two_factor_enabled_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.two_factor_enabled_time)
  return two_factor_enabled_time_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_two_factor_enabled_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x10000000u;
  two_factor_enabled_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.two_factor_enabled_time)
}

// optional uint32 phone_verification_time = 31;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_phone_verification_time() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_phone_verification_time() {
  phone_verification_time_ = 0u;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::phone_verification_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.phone_verification_time)
  return phone_verification_time_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_phone_verification_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x20000000u;
  phone_verification_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.phone_verification_time)
}

// optional uint64 phone_id = 33;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_phone_id() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_phone_id() {
  phone_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x40000000u;
}
inline ::google::protobuf::uint64 CGCSystemMsg_GetAccountDetails_Response::phone_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.phone_id)
  return phone_id_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_phone_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x40000000u;
  phone_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.phone_id)
}

// optional bool is_phone_identifying = 34;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_phone_identifying() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_phone_identifying() {
  is_phone_identifying_ = false;
  _has_bits_[0] &= ~0x80000000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_phone_identifying() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_phone_identifying)
  return is_phone_identifying_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_phone_identifying(bool value) {
  _has_bits_[0] |= 0x80000000u;
  is_phone_identifying_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.is_phone_identifying)
}

// optional uint32 rt_identity_linked = 35;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_rt_identity_linked() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_rt_identity_linked() {
  rt_identity_linked_ = 0u;
  _has_bits_[1] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::rt_identity_linked() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.rt_identity_linked)
  return rt_identity_linked_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_rt_identity_linked(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000001u;
  rt_identity_linked_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.rt_identity_linked)
}

// optional uint32 rt_birth_date = 36;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_rt_birth_date() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_rt_birth_date() {
  rt_birth_date_ = 0u;
  _has_bits_[1] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::rt_birth_date() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.rt_birth_date)
  return rt_birth_date_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_rt_birth_date(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000002u;
  rt_birth_date_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.rt_birth_date)
}

// optional string txn_country_code = 37;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_txn_country_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_txn_country_code() {
  txn_country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& CGCSystemMsg_GetAccountDetails_Response::txn_country_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetAccountDetails_Response.txn_country_code)
  return txn_country_code_.GetNoArena();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_txn_country_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  txn_country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetAccountDetails_Response.txn_country_code)
}
#if LANG_CXX11
inline void CGCSystemMsg_GetAccountDetails_Response::set_txn_country_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  txn_country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CGCSystemMsg_GetAccountDetails_Response.txn_country_code)
}
#endif
inline void CGCSystemMsg_GetAccountDetails_Response::set_txn_country_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  txn_country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CGCSystemMsg_GetAccountDetails_Response.txn_country_code)
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_txn_country_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  txn_country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CGCSystemMsg_GetAccountDetails_Response.txn_country_code)
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_txn_country_code() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CGCSystemMsg_GetAccountDetails_Response.txn_country_code)
  return txn_country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::release_txn_country_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CGCSystemMsg_GetAccountDetails_Response.txn_country_code)
  if (!has_txn_country_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return txn_country_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_allocated_txn_country_code(::std::string* txn_country_code) {
  if (txn_country_code != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  txn_country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txn_country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CGCSystemMsg_GetAccountDetails_Response.txn_country_code)
}

// -------------------------------------------------------------------

// CMsgGCGetPersonaNames

// repeated fixed64 steamids = 1;
inline int CMsgGCGetPersonaNames::steamids_size() const {
  return steamids_.size();
}
inline void CMsgGCGetPersonaNames::clear_steamids() {
  steamids_.Clear();
}
inline ::google::protobuf::uint64 CMsgGCGetPersonaNames::steamids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetPersonaNames.steamids)
  return steamids_.Get(index);
}
inline void CMsgGCGetPersonaNames::set_steamids(int index, ::google::protobuf::uint64 value) {
  steamids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetPersonaNames.steamids)
}
inline void CMsgGCGetPersonaNames::add_steamids(::google::protobuf::uint64 value) {
  steamids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetPersonaNames.steamids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGCGetPersonaNames::steamids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCGetPersonaNames.steamids)
  return steamids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGCGetPersonaNames::mutable_steamids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCGetPersonaNames.steamids)
  return &steamids_;
}

// -------------------------------------------------------------------

// CMsgGCGetPersonaNames_Response_PersonaName

// optional fixed64 steamid = 1;
inline bool CMsgGCGetPersonaNames_Response_PersonaName::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgGCGetPersonaNames_Response_PersonaName::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetPersonaNames_Response.PersonaName.steamid)
  return steamid_;
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetPersonaNames_Response.PersonaName.steamid)
}

// optional string persona_name = 2;
inline bool CMsgGCGetPersonaNames_Response_PersonaName::has_persona_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::clear_persona_name() {
  persona_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCGetPersonaNames_Response_PersonaName::persona_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
  return persona_name_.GetNoArena();
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::set_persona_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
}
#if LANG_CXX11
inline void CMsgGCGetPersonaNames_Response_PersonaName::set_persona_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  persona_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
}
#endif
inline void CMsgGCGetPersonaNames_Response_PersonaName::set_persona_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::set_persona_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
}
inline ::std::string* CMsgGCGetPersonaNames_Response_PersonaName::mutable_persona_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
  return persona_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCGetPersonaNames_Response_PersonaName::release_persona_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
  if (!has_persona_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return persona_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  persona_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCGetPersonaNames_Response.PersonaName.persona_name)
}

// -------------------------------------------------------------------

// CMsgGCGetPersonaNames_Response

// repeated .proto.dota.CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
inline int CMsgGCGetPersonaNames_Response::succeeded_lookups_size() const {
  return succeeded_lookups_.size();
}
inline void CMsgGCGetPersonaNames_Response::clear_succeeded_lookups() {
  succeeded_lookups_.Clear();
}
inline ::proto::dota::CMsgGCGetPersonaNames_Response_PersonaName* CMsgGCGetPersonaNames_Response::mutable_succeeded_lookups(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetPersonaNames_Response.succeeded_lookups)
  return succeeded_lookups_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetPersonaNames_Response_PersonaName >*
CMsgGCGetPersonaNames_Response::mutable_succeeded_lookups() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCGetPersonaNames_Response.succeeded_lookups)
  return &succeeded_lookups_;
}
inline const ::proto::dota::CMsgGCGetPersonaNames_Response_PersonaName& CMsgGCGetPersonaNames_Response::succeeded_lookups(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetPersonaNames_Response.succeeded_lookups)
  return succeeded_lookups_.Get(index);
}
inline ::proto::dota::CMsgGCGetPersonaNames_Response_PersonaName* CMsgGCGetPersonaNames_Response::add_succeeded_lookups() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetPersonaNames_Response.succeeded_lookups)
  return succeeded_lookups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetPersonaNames_Response_PersonaName >&
CMsgGCGetPersonaNames_Response::succeeded_lookups() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCGetPersonaNames_Response.succeeded_lookups)
  return succeeded_lookups_;
}

// repeated fixed64 failed_lookup_steamids = 2;
inline int CMsgGCGetPersonaNames_Response::failed_lookup_steamids_size() const {
  return failed_lookup_steamids_.size();
}
inline void CMsgGCGetPersonaNames_Response::clear_failed_lookup_steamids() {
  failed_lookup_steamids_.Clear();
}
inline ::google::protobuf::uint64 CMsgGCGetPersonaNames_Response::failed_lookup_steamids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetPersonaNames_Response.failed_lookup_steamids)
  return failed_lookup_steamids_.Get(index);
}
inline void CMsgGCGetPersonaNames_Response::set_failed_lookup_steamids(int index, ::google::protobuf::uint64 value) {
  failed_lookup_steamids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetPersonaNames_Response.failed_lookup_steamids)
}
inline void CMsgGCGetPersonaNames_Response::add_failed_lookup_steamids(::google::protobuf::uint64 value) {
  failed_lookup_steamids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetPersonaNames_Response.failed_lookup_steamids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGCGetPersonaNames_Response::failed_lookup_steamids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCGetPersonaNames_Response.failed_lookup_steamids)
  return failed_lookup_steamids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGCGetPersonaNames_Response::mutable_failed_lookup_steamids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCGetPersonaNames_Response.failed_lookup_steamids)
  return &failed_lookup_steamids_;
}

// -------------------------------------------------------------------

// CMsgGCCheckFriendship

// optional fixed64 steamid_left = 1;
inline bool CMsgGCCheckFriendship::has_steamid_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCCheckFriendship::clear_steamid_left() {
  steamid_left_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCCheckFriendship::steamid_left() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCCheckFriendship.steamid_left)
  return steamid_left_;
}
inline void CMsgGCCheckFriendship::set_steamid_left(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_left_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCCheckFriendship.steamid_left)
}

// optional fixed64 steamid_right = 2;
inline bool CMsgGCCheckFriendship::has_steamid_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCCheckFriendship::clear_steamid_right() {
  steamid_right_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgGCCheckFriendship::steamid_right() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCCheckFriendship.steamid_right)
  return steamid_right_;
}
inline void CMsgGCCheckFriendship::set_steamid_right(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_right_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCCheckFriendship.steamid_right)
}

// -------------------------------------------------------------------

// CMsgGCCheckFriendship_Response

// optional bool success = 1;
inline bool CMsgGCCheckFriendship_Response::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCCheckFriendship_Response::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCCheckFriendship_Response::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCCheckFriendship_Response.success)
  return success_;
}
inline void CMsgGCCheckFriendship_Response::set_success(bool value) {
  _has_bits_[0] |= 0x00000001u;
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCCheckFriendship_Response.success)
}

// optional bool found_friendship = 2;
inline bool CMsgGCCheckFriendship_Response::has_found_friendship() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCCheckFriendship_Response::clear_found_friendship() {
  found_friendship_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCCheckFriendship_Response::found_friendship() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCCheckFriendship_Response.found_friendship)
  return found_friendship_;
}
inline void CMsgGCCheckFriendship_Response::set_found_friendship(bool value) {
  _has_bits_[0] |= 0x00000002u;
  found_friendship_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCCheckFriendship_Response.found_friendship)
}

// -------------------------------------------------------------------

// CMsgGCGetAppFriendsList

// optional fixed64 steamid = 1;
inline bool CMsgGCGetAppFriendsList::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetAppFriendsList::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCGetAppFriendsList::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetAppFriendsList.steamid)
  return steamid_;
}
inline void CMsgGCGetAppFriendsList::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetAppFriendsList.steamid)
}

// optional bool include_friendship_timestamps = 2;
inline bool CMsgGCGetAppFriendsList::has_include_friendship_timestamps() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetAppFriendsList::clear_include_friendship_timestamps() {
  include_friendship_timestamps_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCGetAppFriendsList::include_friendship_timestamps() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetAppFriendsList.include_friendship_timestamps)
  return include_friendship_timestamps_;
}
inline void CMsgGCGetAppFriendsList::set_include_friendship_timestamps(bool value) {
  _has_bits_[0] |= 0x00000002u;
  include_friendship_timestamps_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetAppFriendsList.include_friendship_timestamps)
}

// -------------------------------------------------------------------

// CMsgGCGetAppFriendsList_Response

// optional bool success = 1;
inline bool CMsgGCGetAppFriendsList_Response::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetAppFriendsList_Response::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCGetAppFriendsList_Response::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetAppFriendsList_Response.success)
  return success_;
}
inline void CMsgGCGetAppFriendsList_Response::set_success(bool value) {
  _has_bits_[0] |= 0x00000001u;
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetAppFriendsList_Response.success)
}

// repeated fixed64 steamids = 2;
inline int CMsgGCGetAppFriendsList_Response::steamids_size() const {
  return steamids_.size();
}
inline void CMsgGCGetAppFriendsList_Response::clear_steamids() {
  steamids_.Clear();
}
inline ::google::protobuf::uint64 CMsgGCGetAppFriendsList_Response::steamids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetAppFriendsList_Response.steamids)
  return steamids_.Get(index);
}
inline void CMsgGCGetAppFriendsList_Response::set_steamids(int index, ::google::protobuf::uint64 value) {
  steamids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetAppFriendsList_Response.steamids)
}
inline void CMsgGCGetAppFriendsList_Response::add_steamids(::google::protobuf::uint64 value) {
  steamids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetAppFriendsList_Response.steamids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGCGetAppFriendsList_Response::steamids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCGetAppFriendsList_Response.steamids)
  return steamids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGCGetAppFriendsList_Response::mutable_steamids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCGetAppFriendsList_Response.steamids)
  return &steamids_;
}

// repeated fixed32 friendship_timestamps = 3;
inline int CMsgGCGetAppFriendsList_Response::friendship_timestamps_size() const {
  return friendship_timestamps_.size();
}
inline void CMsgGCGetAppFriendsList_Response::clear_friendship_timestamps() {
  friendship_timestamps_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCGetAppFriendsList_Response::friendship_timestamps(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetAppFriendsList_Response.friendship_timestamps)
  return friendship_timestamps_.Get(index);
}
inline void CMsgGCGetAppFriendsList_Response::set_friendship_timestamps(int index, ::google::protobuf::uint32 value) {
  friendship_timestamps_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetAppFriendsList_Response.friendship_timestamps)
}
inline void CMsgGCGetAppFriendsList_Response::add_friendship_timestamps(::google::protobuf::uint32 value) {
  friendship_timestamps_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetAppFriendsList_Response.friendship_timestamps)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCGetAppFriendsList_Response::friendship_timestamps() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCGetAppFriendsList_Response.friendship_timestamps)
  return friendship_timestamps_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCGetAppFriendsList_Response::mutable_friendship_timestamps() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCGetAppFriendsList_Response.friendship_timestamps)
  return &friendship_timestamps_;
}

// repeated fixed32 last_playtimes = 4;
inline int CMsgGCGetAppFriendsList_Response::last_playtimes_size() const {
  return last_playtimes_.size();
}
inline void CMsgGCGetAppFriendsList_Response::clear_last_playtimes() {
  last_playtimes_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCGetAppFriendsList_Response::last_playtimes(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetAppFriendsList_Response.last_playtimes)
  return last_playtimes_.Get(index);
}
inline void CMsgGCGetAppFriendsList_Response::set_last_playtimes(int index, ::google::protobuf::uint32 value) {
  last_playtimes_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetAppFriendsList_Response.last_playtimes)
}
inline void CMsgGCGetAppFriendsList_Response::add_last_playtimes(::google::protobuf::uint32 value) {
  last_playtimes_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetAppFriendsList_Response.last_playtimes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCGetAppFriendsList_Response::last_playtimes() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCGetAppFriendsList_Response.last_playtimes)
  return last_playtimes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCGetAppFriendsList_Response::mutable_last_playtimes() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCGetAppFriendsList_Response.last_playtimes)
  return &last_playtimes_;
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetDirectory_SubGC

// optional uint32 dir_index = 1;
inline bool CMsgGCMsgMasterSetDirectory_SubGC::has_dir_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_dir_index() {
  dir_index_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCMsgMasterSetDirectory_SubGC::dir_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.dir_index)
  return dir_index_;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_dir_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  dir_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.dir_index)
}

// optional string name = 2;
inline bool CMsgGCMsgMasterSetDirectory_SubGC::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCMsgMasterSetDirectory_SubGC::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.name)
  return name_.GetNoArena();
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.name)
}
#if LANG_CXX11
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.name)
}
#endif
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.name)
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.name)
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.name)
}

// optional string box = 3;
inline bool CMsgGCMsgMasterSetDirectory_SubGC::has_box() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_box() {
  box_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgGCMsgMasterSetDirectory_SubGC::box() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.box)
  return box_.GetNoArena();
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_box(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  box_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.box)
}
#if LANG_CXX11
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_box(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  box_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.box)
}
#endif
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_box(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  box_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.box)
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_box(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  box_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.box)
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::mutable_box() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.box)
  return box_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::release_box() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.box)
  if (!has_box()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return box_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_allocated_box(::std::string* box) {
  if (box != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  box_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), box);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.box)
}

// optional string command_line = 4;
inline bool CMsgGCMsgMasterSetDirectory_SubGC::has_command_line() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_command_line() {
  command_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CMsgGCMsgMasterSetDirectory_SubGC::command_line() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.command_line)
  return command_line_.GetNoArena();
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_command_line(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.command_line)
}
#if LANG_CXX11
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_command_line(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  command_line_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.command_line)
}
#endif
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_command_line(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.command_line)
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_command_line(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.command_line)
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::mutable_command_line() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.command_line)
  return command_line_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::release_command_line() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.command_line)
  if (!has_command_line()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return command_line_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_allocated_command_line(::std::string* command_line) {
  if (command_line != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  command_line_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command_line);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.command_line)
}

// optional string gc_binary = 5;
inline bool CMsgGCMsgMasterSetDirectory_SubGC::has_gc_binary() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_gc_binary() {
  gc_binary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& CMsgGCMsgMasterSetDirectory_SubGC::gc_binary() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
  return gc_binary_.GetNoArena();
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_gc_binary(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  gc_binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
}
#if LANG_CXX11
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_gc_binary(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  gc_binary_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
}
#endif
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_gc_binary(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  gc_binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_gc_binary(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  gc_binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::mutable_gc_binary() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
  return gc_binary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::release_gc_binary() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
  if (!has_gc_binary()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return gc_binary_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_allocated_gc_binary(::std::string* gc_binary) {
  if (gc_binary != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  gc_binary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gc_binary);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCMsgMasterSetDirectory.SubGC.gc_binary)
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetDirectory

// optional uint32 master_dir_index = 1;
inline bool CMsgGCMsgMasterSetDirectory::has_master_dir_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory::clear_master_dir_index() {
  master_dir_index_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCMsgMasterSetDirectory::master_dir_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetDirectory.master_dir_index)
  return master_dir_index_;
}
inline void CMsgGCMsgMasterSetDirectory::set_master_dir_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  master_dir_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgMasterSetDirectory.master_dir_index)
}

// repeated .proto.dota.CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
inline int CMsgGCMsgMasterSetDirectory::dir_size() const {
  return dir_.size();
}
inline void CMsgGCMsgMasterSetDirectory::clear_dir() {
  dir_.Clear();
}
inline ::proto::dota::CMsgGCMsgMasterSetDirectory_SubGC* CMsgGCMsgMasterSetDirectory::mutable_dir(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMsgMasterSetDirectory.dir)
  return dir_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetDirectory_SubGC >*
CMsgGCMsgMasterSetDirectory::mutable_dir() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCMsgMasterSetDirectory.dir)
  return &dir_;
}
inline const ::proto::dota::CMsgGCMsgMasterSetDirectory_SubGC& CMsgGCMsgMasterSetDirectory::dir(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetDirectory.dir)
  return dir_.Get(index);
}
inline ::proto::dota::CMsgGCMsgMasterSetDirectory_SubGC* CMsgGCMsgMasterSetDirectory::add_dir() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCMsgMasterSetDirectory.dir)
  return dir_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetDirectory_SubGC >&
CMsgGCMsgMasterSetDirectory::dir() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCMsgMasterSetDirectory.dir)
  return dir_;
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetDirectory_Response

// optional int32 eresult = 1 [default = 2];
inline bool CMsgGCMsgMasterSetDirectory_Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory_Response::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CMsgGCMsgMasterSetDirectory_Response::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetDirectory_Response.eresult)
  return eresult_;
}
inline void CMsgGCMsgMasterSetDirectory_Response::set_eresult(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgMasterSetDirectory_Response.eresult)
}

// optional string message = 2;
inline bool CMsgGCMsgMasterSetDirectory_Response::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory_Response::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCMsgMasterSetDirectory_Response::message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetDirectory_Response.message)
  return message_.GetNoArena();
}
inline void CMsgGCMsgMasterSetDirectory_Response::set_message(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgMasterSetDirectory_Response.message)
}
#if LANG_CXX11
inline void CMsgGCMsgMasterSetDirectory_Response::set_message(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCMsgMasterSetDirectory_Response.message)
}
#endif
inline void CMsgGCMsgMasterSetDirectory_Response::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCMsgMasterSetDirectory_Response.message)
}
inline void CMsgGCMsgMasterSetDirectory_Response::set_message(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCMsgMasterSetDirectory_Response.message)
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_Response::mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMsgMasterSetDirectory_Response.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_Response::release_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCMsgMasterSetDirectory_Response.message)
  if (!has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCMsgMasterSetDirectory_Response::set_allocated_message(::std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCMsgMasterSetDirectory_Response.message)
}

// -------------------------------------------------------------------

// CMsgGCMsgWebAPIJobRequestForwardResponse

// optional uint32 dir_index = 1;
inline bool CMsgGCMsgWebAPIJobRequestForwardResponse::has_dir_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgWebAPIJobRequestForwardResponse::clear_dir_index() {
  dir_index_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCMsgWebAPIJobRequestForwardResponse::dir_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgWebAPIJobRequestForwardResponse.dir_index)
  return dir_index_;
}
inline void CMsgGCMsgWebAPIJobRequestForwardResponse::set_dir_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  dir_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgWebAPIJobRequestForwardResponse.dir_index)
}

// -------------------------------------------------------------------

// CGCSystemMsg_GetPurchaseTrust_Request

// optional fixed64 steamid = 1;
inline bool CGCSystemMsg_GetPurchaseTrust_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCSystemMsg_GetPurchaseTrust_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CGCSystemMsg_GetPurchaseTrust_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetPurchaseTrust_Request.steamid)
  return steamid_;
}
inline void CGCSystemMsg_GetPurchaseTrust_Request::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetPurchaseTrust_Request.steamid)
}

// -------------------------------------------------------------------

// CGCSystemMsg_GetPurchaseTrust_Response

// optional bool has_prior_purchase_history = 1;
inline bool CGCSystemMsg_GetPurchaseTrust_Response::has_has_prior_purchase_history() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_prior_purchase_history() {
  has_prior_purchase_history_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CGCSystemMsg_GetPurchaseTrust_Response::has_prior_purchase_history() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetPurchaseTrust_Response.has_prior_purchase_history)
  return has_prior_purchase_history_;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::set_has_prior_purchase_history(bool value) {
  _has_bits_[0] |= 0x00000001u;
  has_prior_purchase_history_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetPurchaseTrust_Response.has_prior_purchase_history)
}

// optional bool has_no_recent_password_resets = 2;
inline bool CGCSystemMsg_GetPurchaseTrust_Response::has_has_no_recent_password_resets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_no_recent_password_resets() {
  has_no_recent_password_resets_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CGCSystemMsg_GetPurchaseTrust_Response::has_no_recent_password_resets() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetPurchaseTrust_Response.has_no_recent_password_resets)
  return has_no_recent_password_resets_;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::set_has_no_recent_password_resets(bool value) {
  _has_bits_[0] |= 0x00000002u;
  has_no_recent_password_resets_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetPurchaseTrust_Response.has_no_recent_password_resets)
}

// optional bool is_wallet_cash_trusted = 3;
inline bool CGCSystemMsg_GetPurchaseTrust_Response::has_is_wallet_cash_trusted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::clear_is_wallet_cash_trusted() {
  is_wallet_cash_trusted_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CGCSystemMsg_GetPurchaseTrust_Response::is_wallet_cash_trusted() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetPurchaseTrust_Response.is_wallet_cash_trusted)
  return is_wallet_cash_trusted_;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::set_is_wallet_cash_trusted(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_wallet_cash_trusted_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetPurchaseTrust_Response.is_wallet_cash_trusted)
}

// optional uint32 time_all_trusted = 4;
inline bool CGCSystemMsg_GetPurchaseTrust_Response::has_time_all_trusted() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::clear_time_all_trusted() {
  time_all_trusted_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetPurchaseTrust_Response::time_all_trusted() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCSystemMsg_GetPurchaseTrust_Response.time_all_trusted)
  return time_all_trusted_;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::set_time_all_trusted(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  time_all_trusted_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCSystemMsg_GetPurchaseTrust_Response.time_all_trusted)
}

// -------------------------------------------------------------------

// CMsgGCHAccountVacStatusChange

// optional fixed64 steam_id = 1;
inline bool CMsgGCHAccountVacStatusChange::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHAccountVacStatusChange::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCHAccountVacStatusChange::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHAccountVacStatusChange.steam_id)
  return steam_id_;
}
inline void CMsgGCHAccountVacStatusChange::set_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHAccountVacStatusChange.steam_id)
}

// optional uint32 app_id = 2;
inline bool CMsgGCHAccountVacStatusChange::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHAccountVacStatusChange::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCHAccountVacStatusChange::app_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHAccountVacStatusChange.app_id)
  return app_id_;
}
inline void CMsgGCHAccountVacStatusChange::set_app_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHAccountVacStatusChange.app_id)
}

// optional uint32 rtime_vacban_starts = 3;
inline bool CMsgGCHAccountVacStatusChange::has_rtime_vacban_starts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCHAccountVacStatusChange::clear_rtime_vacban_starts() {
  rtime_vacban_starts_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCHAccountVacStatusChange::rtime_vacban_starts() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHAccountVacStatusChange.rtime_vacban_starts)
  return rtime_vacban_starts_;
}
inline void CMsgGCHAccountVacStatusChange::set_rtime_vacban_starts(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  rtime_vacban_starts_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHAccountVacStatusChange.rtime_vacban_starts)
}

// optional bool is_banned_now = 4;
inline bool CMsgGCHAccountVacStatusChange::has_is_banned_now() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCHAccountVacStatusChange::clear_is_banned_now() {
  is_banned_now_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgGCHAccountVacStatusChange::is_banned_now() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHAccountVacStatusChange.is_banned_now)
  return is_banned_now_;
}
inline void CMsgGCHAccountVacStatusChange::set_is_banned_now(bool value) {
  _has_bits_[0] |= 0x00000008u;
  is_banned_now_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHAccountVacStatusChange.is_banned_now)
}

// optional bool is_banned_future = 5;
inline bool CMsgGCHAccountVacStatusChange::has_is_banned_future() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCHAccountVacStatusChange::clear_is_banned_future() {
  is_banned_future_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgGCHAccountVacStatusChange::is_banned_future() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHAccountVacStatusChange.is_banned_future)
  return is_banned_future_;
}
inline void CMsgGCHAccountVacStatusChange::set_is_banned_future(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_banned_future_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHAccountVacStatusChange.is_banned_future)
}

// -------------------------------------------------------------------

// CMsgGCGetPartnerAccountLink

// optional fixed64 steamid = 1;
inline bool CMsgGCGetPartnerAccountLink::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetPartnerAccountLink::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCGetPartnerAccountLink::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetPartnerAccountLink.steamid)
  return steamid_;
}
inline void CMsgGCGetPartnerAccountLink::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetPartnerAccountLink.steamid)
}

// -------------------------------------------------------------------

// CMsgGCGetPartnerAccountLink_Response

// optional uint32 pwid = 1;
inline bool CMsgGCGetPartnerAccountLink_Response::has_pwid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetPartnerAccountLink_Response::clear_pwid() {
  pwid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCGetPartnerAccountLink_Response::pwid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetPartnerAccountLink_Response.pwid)
  return pwid_;
}
inline void CMsgGCGetPartnerAccountLink_Response::set_pwid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  pwid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetPartnerAccountLink_Response.pwid)
}

// optional uint32 nexonid = 2;
inline bool CMsgGCGetPartnerAccountLink_Response::has_nexonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetPartnerAccountLink_Response::clear_nexonid() {
  nexonid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCGetPartnerAccountLink_Response::nexonid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetPartnerAccountLink_Response.nexonid)
  return nexonid_;
}
inline void CMsgGCGetPartnerAccountLink_Response::set_nexonid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  nexonid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetPartnerAccountLink_Response.nexonid)
}

// -------------------------------------------------------------------

// CMsgGCRoutingInfo

// repeated uint32 dir_index = 1;
inline int CMsgGCRoutingInfo::dir_index_size() const {
  return dir_index_.size();
}
inline void CMsgGCRoutingInfo::clear_dir_index() {
  dir_index_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCRoutingInfo::dir_index(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRoutingInfo.dir_index)
  return dir_index_.Get(index);
}
inline void CMsgGCRoutingInfo::set_dir_index(int index, ::google::protobuf::uint32 value) {
  dir_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRoutingInfo.dir_index)
}
inline void CMsgGCRoutingInfo::add_dir_index(::google::protobuf::uint32 value) {
  dir_index_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCRoutingInfo.dir_index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCRoutingInfo::dir_index() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCRoutingInfo.dir_index)
  return dir_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCRoutingInfo::mutable_dir_index() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCRoutingInfo.dir_index)
  return &dir_index_;
}

// optional .proto.dota.CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
inline bool CMsgGCRoutingInfo::has_method() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCRoutingInfo::clear_method() {
  method_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::method() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRoutingInfo.method)
  return static_cast< ::proto::dota::CMsgGCRoutingInfo_RoutingMethod >(method_);
}
inline void CMsgGCRoutingInfo::set_method(::proto::dota::CMsgGCRoutingInfo_RoutingMethod value) {
  assert(::proto::dota::CMsgGCRoutingInfo_RoutingMethod_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  method_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRoutingInfo.method)
}

// optional .proto.dota.CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
inline bool CMsgGCRoutingInfo::has_fallback() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCRoutingInfo::clear_fallback() {
  fallback_ = 1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::proto::dota::CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::fallback() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRoutingInfo.fallback)
  return static_cast< ::proto::dota::CMsgGCRoutingInfo_RoutingMethod >(fallback_);
}
inline void CMsgGCRoutingInfo::set_fallback(::proto::dota::CMsgGCRoutingInfo_RoutingMethod value) {
  assert(::proto::dota::CMsgGCRoutingInfo_RoutingMethod_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  fallback_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRoutingInfo.fallback)
}

// optional uint32 protobuf_field = 4;
inline bool CMsgGCRoutingInfo::has_protobuf_field() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCRoutingInfo::clear_protobuf_field() {
  protobuf_field_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCRoutingInfo::protobuf_field() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRoutingInfo.protobuf_field)
  return protobuf_field_;
}
inline void CMsgGCRoutingInfo::set_protobuf_field(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  protobuf_field_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRoutingInfo.protobuf_field)
}

// optional string webapi_param = 5;
inline bool CMsgGCRoutingInfo::has_webapi_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCRoutingInfo::clear_webapi_param() {
  webapi_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCRoutingInfo::webapi_param() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRoutingInfo.webapi_param)
  return webapi_param_.GetNoArena();
}
inline void CMsgGCRoutingInfo::set_webapi_param(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  webapi_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRoutingInfo.webapi_param)
}
#if LANG_CXX11
inline void CMsgGCRoutingInfo::set_webapi_param(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  webapi_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCRoutingInfo.webapi_param)
}
#endif
inline void CMsgGCRoutingInfo::set_webapi_param(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  webapi_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCRoutingInfo.webapi_param)
}
inline void CMsgGCRoutingInfo::set_webapi_param(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  webapi_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCRoutingInfo.webapi_param)
}
inline ::std::string* CMsgGCRoutingInfo::mutable_webapi_param() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCRoutingInfo.webapi_param)
  return webapi_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCRoutingInfo::release_webapi_param() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCRoutingInfo.webapi_param)
  if (!has_webapi_param()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return webapi_param_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCRoutingInfo::set_allocated_webapi_param(::std::string* webapi_param) {
  if (webapi_param != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  webapi_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), webapi_param);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCRoutingInfo.webapi_param)
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetWebAPIRouting_Entry

// optional string interface_name = 1;
inline bool CMsgGCMsgMasterSetWebAPIRouting_Entry::has_interface_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_interface_name() {
  interface_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCMsgMasterSetWebAPIRouting_Entry::interface_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
  return interface_name_.GetNoArena();
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_interface_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
}
#if LANG_CXX11
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_interface_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  interface_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
}
#endif
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_interface_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_interface_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
}
inline ::std::string* CMsgGCMsgMasterSetWebAPIRouting_Entry::mutable_interface_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
  return interface_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCMsgMasterSetWebAPIRouting_Entry::release_interface_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
  if (!has_interface_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return interface_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_allocated_interface_name(::std::string* interface_name) {
  if (interface_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  interface_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interface_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name)
}

// optional string method_name = 2;
inline bool CMsgGCMsgMasterSetWebAPIRouting_Entry::has_method_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_method_name() {
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgGCMsgMasterSetWebAPIRouting_Entry::method_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
  return method_name_.GetNoArena();
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_method_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
}
#if LANG_CXX11
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_method_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  method_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
}
#endif
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_method_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_method_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
}
inline ::std::string* CMsgGCMsgMasterSetWebAPIRouting_Entry::mutable_method_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
  return method_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCMsgMasterSetWebAPIRouting_Entry::release_method_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
  if (!has_method_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return method_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_allocated_method_name(::std::string* method_name) {
  if (method_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  method_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name)
}

// optional .proto.dota.CMsgGCRoutingInfo routing = 3;
inline bool CMsgGCMsgMasterSetWebAPIRouting_Entry::has_routing() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_routing() {
  if (routing_ != nullptr) routing_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::proto::dota::CMsgGCRoutingInfo& CMsgGCMsgMasterSetWebAPIRouting_Entry::routing() const {
  const ::proto::dota::CMsgGCRoutingInfo* p = routing_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.routing)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCRoutingInfo*>(
      &::proto::dota::_CMsgGCRoutingInfo_default_instance_);
}
inline ::proto::dota::CMsgGCRoutingInfo* CMsgGCMsgMasterSetWebAPIRouting_Entry::release_routing() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.routing)
  _has_bits_[0] &= ~0x00000004u;
  ::proto::dota::CMsgGCRoutingInfo* temp = routing_;
  routing_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCRoutingInfo* CMsgGCMsgMasterSetWebAPIRouting_Entry::mutable_routing() {
  _has_bits_[0] |= 0x00000004u;
  if (routing_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCRoutingInfo>(GetArenaNoVirtual());
    routing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.routing)
  return routing_;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_allocated_routing(::proto::dota::CMsgGCRoutingInfo* routing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete routing_;
  }
  if (routing) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      routing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, routing, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  routing_ = routing;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.routing)
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetWebAPIRouting

// repeated .proto.dota.CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
inline int CMsgGCMsgMasterSetWebAPIRouting::entries_size() const {
  return entries_.size();
}
inline void CMsgGCMsgMasterSetWebAPIRouting::clear_entries() {
  entries_.Clear();
}
inline ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Entry* CMsgGCMsgMasterSetWebAPIRouting::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.entries)
  return entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Entry >*
CMsgGCMsgMasterSetWebAPIRouting::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.entries)
  return &entries_;
}
inline const ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Entry& CMsgGCMsgMasterSetWebAPIRouting::entries(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.entries)
  return entries_.Get(index);
}
inline ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Entry* CMsgGCMsgMasterSetWebAPIRouting::add_entries() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.entries)
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetWebAPIRouting_Entry >&
CMsgGCMsgMasterSetWebAPIRouting::entries() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCMsgMasterSetWebAPIRouting.entries)
  return entries_;
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetClientMsgRouting_Entry

// optional uint32 msg_type = 1;
inline bool CMsgGCMsgMasterSetClientMsgRouting_Entry::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::clear_msg_type() {
  msg_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCMsgMasterSetClientMsgRouting_Entry::msg_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetClientMsgRouting.Entry.msg_type)
  return msg_type_;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::set_msg_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgMasterSetClientMsgRouting.Entry.msg_type)
}

// optional .proto.dota.CMsgGCRoutingInfo routing = 2;
inline bool CMsgGCMsgMasterSetClientMsgRouting_Entry::has_routing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::clear_routing() {
  if (routing_ != nullptr) routing_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgGCRoutingInfo& CMsgGCMsgMasterSetClientMsgRouting_Entry::routing() const {
  const ::proto::dota::CMsgGCRoutingInfo* p = routing_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetClientMsgRouting.Entry.routing)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGCRoutingInfo*>(
      &::proto::dota::_CMsgGCRoutingInfo_default_instance_);
}
inline ::proto::dota::CMsgGCRoutingInfo* CMsgGCMsgMasterSetClientMsgRouting_Entry::release_routing() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCMsgMasterSetClientMsgRouting.Entry.routing)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgGCRoutingInfo* temp = routing_;
  routing_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGCRoutingInfo* CMsgGCMsgMasterSetClientMsgRouting_Entry::mutable_routing() {
  _has_bits_[0] |= 0x00000001u;
  if (routing_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGCRoutingInfo>(GetArenaNoVirtual());
    routing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMsgMasterSetClientMsgRouting.Entry.routing)
  return routing_;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::set_allocated_routing(::proto::dota::CMsgGCRoutingInfo* routing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete routing_;
  }
  if (routing) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      routing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, routing, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  routing_ = routing;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCMsgMasterSetClientMsgRouting.Entry.routing)
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetClientMsgRouting

// repeated .proto.dota.CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
inline int CMsgGCMsgMasterSetClientMsgRouting::entries_size() const {
  return entries_.size();
}
inline void CMsgGCMsgMasterSetClientMsgRouting::clear_entries() {
  entries_.Clear();
}
inline ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Entry* CMsgGCMsgMasterSetClientMsgRouting::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMsgMasterSetClientMsgRouting.entries)
  return entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Entry >*
CMsgGCMsgMasterSetClientMsgRouting::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCMsgMasterSetClientMsgRouting.entries)
  return &entries_;
}
inline const ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Entry& CMsgGCMsgMasterSetClientMsgRouting::entries(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetClientMsgRouting.entries)
  return entries_.Get(index);
}
inline ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Entry* CMsgGCMsgMasterSetClientMsgRouting::add_entries() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCMsgMasterSetClientMsgRouting.entries)
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgMasterSetClientMsgRouting_Entry >&
CMsgGCMsgMasterSetClientMsgRouting::entries() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCMsgMasterSetClientMsgRouting.entries)
  return entries_;
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetWebAPIRouting_Response

// optional int32 eresult = 1 [default = 2];
inline bool CMsgGCMsgMasterSetWebAPIRouting_Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Response::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CMsgGCMsgMasterSetWebAPIRouting_Response::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetWebAPIRouting_Response.eresult)
  return eresult_;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Response::set_eresult(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgMasterSetWebAPIRouting_Response.eresult)
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetClientMsgRouting_Response

// optional int32 eresult = 1 [default = 2];
inline bool CMsgGCMsgMasterSetClientMsgRouting_Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Response::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CMsgGCMsgMasterSetClientMsgRouting_Response::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgMasterSetClientMsgRouting_Response.eresult)
  return eresult_;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Response::set_eresult(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgMasterSetClientMsgRouting_Response.eresult)
}

// -------------------------------------------------------------------

// CMsgGCMsgSetOptions_MessageRange

// required uint32 low = 1;
inline bool CMsgGCMsgSetOptions_MessageRange::has_low() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgSetOptions_MessageRange::clear_low() {
  low_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCMsgSetOptions_MessageRange::low() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgSetOptions.MessageRange.low)
  return low_;
}
inline void CMsgGCMsgSetOptions_MessageRange::set_low(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  low_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgSetOptions.MessageRange.low)
}

// required uint32 high = 2;
inline bool CMsgGCMsgSetOptions_MessageRange::has_high() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMsgSetOptions_MessageRange::clear_high() {
  high_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCMsgSetOptions_MessageRange::high() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgSetOptions.MessageRange.high)
  return high_;
}
inline void CMsgGCMsgSetOptions_MessageRange::set_high(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  high_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgSetOptions.MessageRange.high)
}

// -------------------------------------------------------------------

// CMsgGCMsgSetOptions

// repeated .proto.dota.CMsgGCMsgSetOptions.Option options = 1;
inline int CMsgGCMsgSetOptions::options_size() const {
  return options_.size();
}
inline void CMsgGCMsgSetOptions::clear_options() {
  options_.Clear();
}
inline ::proto::dota::CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::options(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgSetOptions.options)
  return static_cast< ::proto::dota::CMsgGCMsgSetOptions_Option >(options_.Get(index));
}
inline void CMsgGCMsgSetOptions::set_options(int index, ::proto::dota::CMsgGCMsgSetOptions_Option value) {
  assert(::proto::dota::CMsgGCMsgSetOptions_Option_IsValid(value));
  options_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgSetOptions.options)
}
inline void CMsgGCMsgSetOptions::add_options(::proto::dota::CMsgGCMsgSetOptions_Option value) {
  assert(::proto::dota::CMsgGCMsgSetOptions_Option_IsValid(value));
  options_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCMsgSetOptions.options)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgGCMsgSetOptions::options() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCMsgSetOptions.options)
  return options_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgGCMsgSetOptions::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCMsgSetOptions.options)
  return &options_;
}

// repeated .proto.dota.CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
inline int CMsgGCMsgSetOptions::client_msg_ranges_size() const {
  return client_msg_ranges_.size();
}
inline void CMsgGCMsgSetOptions::clear_client_msg_ranges() {
  client_msg_ranges_.Clear();
}
inline ::proto::dota::CMsgGCMsgSetOptions_MessageRange* CMsgGCMsgSetOptions::mutable_client_msg_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMsgSetOptions.client_msg_ranges)
  return client_msg_ranges_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgSetOptions_MessageRange >*
CMsgGCMsgSetOptions::mutable_client_msg_ranges() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCMsgSetOptions.client_msg_ranges)
  return &client_msg_ranges_;
}
inline const ::proto::dota::CMsgGCMsgSetOptions_MessageRange& CMsgGCMsgSetOptions::client_msg_ranges(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgSetOptions.client_msg_ranges)
  return client_msg_ranges_.Get(index);
}
inline ::proto::dota::CMsgGCMsgSetOptions_MessageRange* CMsgGCMsgSetOptions::add_client_msg_ranges() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCMsgSetOptions.client_msg_ranges)
  return client_msg_ranges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCMsgSetOptions_MessageRange >&
CMsgGCMsgSetOptions::client_msg_ranges() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCMsgSetOptions.client_msg_ranges)
  return client_msg_ranges_;
}

// optional .proto.dota.CMsgGCMsgSetOptions.GCSQLVersion gcsql_version = 3 [default = GCSQL_VERSION_BASELINE];
inline bool CMsgGCMsgSetOptions::has_gcsql_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgSetOptions::clear_gcsql_version() {
  gcsql_version_ = 1;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgGCMsgSetOptions_GCSQLVersion CMsgGCMsgSetOptions::gcsql_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMsgSetOptions.gcsql_version)
  return static_cast< ::proto::dota::CMsgGCMsgSetOptions_GCSQLVersion >(gcsql_version_);
}
inline void CMsgGCMsgSetOptions::set_gcsql_version(::proto::dota::CMsgGCMsgSetOptions_GCSQLVersion value) {
  assert(::proto::dota::CMsgGCMsgSetOptions_GCSQLVersion_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  gcsql_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMsgSetOptions.gcsql_version)
}

// -------------------------------------------------------------------

// CMsgGCHUpdateSession_ExtraField

// optional string name = 1;
inline bool CMsgGCHUpdateSession_ExtraField::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHUpdateSession_ExtraField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCHUpdateSession_ExtraField::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHUpdateSession.ExtraField.name)
  return name_.GetNoArena();
}
inline void CMsgGCHUpdateSession_ExtraField::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHUpdateSession.ExtraField.name)
}
#if LANG_CXX11
inline void CMsgGCHUpdateSession_ExtraField::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCHUpdateSession.ExtraField.name)
}
#endif
inline void CMsgGCHUpdateSession_ExtraField::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCHUpdateSession.ExtraField.name)
}
inline void CMsgGCHUpdateSession_ExtraField::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCHUpdateSession.ExtraField.name)
}
inline ::std::string* CMsgGCHUpdateSession_ExtraField::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCHUpdateSession.ExtraField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCHUpdateSession_ExtraField::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCHUpdateSession.ExtraField.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCHUpdateSession_ExtraField::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCHUpdateSession.ExtraField.name)
}

// optional string value = 2;
inline bool CMsgGCHUpdateSession_ExtraField::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHUpdateSession_ExtraField::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgGCHUpdateSession_ExtraField::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHUpdateSession.ExtraField.value)
  return value_.GetNoArena();
}
inline void CMsgGCHUpdateSession_ExtraField::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHUpdateSession.ExtraField.value)
}
#if LANG_CXX11
inline void CMsgGCHUpdateSession_ExtraField::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCHUpdateSession.ExtraField.value)
}
#endif
inline void CMsgGCHUpdateSession_ExtraField::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCHUpdateSession.ExtraField.value)
}
inline void CMsgGCHUpdateSession_ExtraField::set_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCHUpdateSession.ExtraField.value)
}
inline ::std::string* CMsgGCHUpdateSession_ExtraField::mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCHUpdateSession.ExtraField.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCHUpdateSession_ExtraField::release_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCHUpdateSession.ExtraField.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCHUpdateSession_ExtraField::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCHUpdateSession.ExtraField.value)
}

// -------------------------------------------------------------------

// CMsgGCHUpdateSession

// optional fixed64 steam_id = 1;
inline bool CMsgGCHUpdateSession::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHUpdateSession::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCHUpdateSession::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHUpdateSession.steam_id)
  return steam_id_;
}
inline void CMsgGCHUpdateSession::set_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHUpdateSession.steam_id)
}

// optional uint32 app_id = 2;
inline bool CMsgGCHUpdateSession::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHUpdateSession::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCHUpdateSession::app_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHUpdateSession.app_id)
  return app_id_;
}
inline void CMsgGCHUpdateSession::set_app_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHUpdateSession.app_id)
}

// optional bool online = 3;
inline bool CMsgGCHUpdateSession::has_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCHUpdateSession::clear_online() {
  online_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgGCHUpdateSession::online() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHUpdateSession.online)
  return online_;
}
inline void CMsgGCHUpdateSession::set_online(bool value) {
  _has_bits_[0] |= 0x00000004u;
  online_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHUpdateSession.online)
}

// optional fixed64 server_steam_id = 4;
inline bool CMsgGCHUpdateSession::has_server_steam_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCHUpdateSession::clear_server_steam_id() {
  server_steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CMsgGCHUpdateSession::server_steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHUpdateSession.server_steam_id)
  return server_steam_id_;
}
inline void CMsgGCHUpdateSession::set_server_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  server_steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHUpdateSession.server_steam_id)
}

// optional uint32 server_addr = 5;
inline bool CMsgGCHUpdateSession::has_server_addr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCHUpdateSession::clear_server_addr() {
  server_addr_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCHUpdateSession::server_addr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHUpdateSession.server_addr)
  return server_addr_;
}
inline void CMsgGCHUpdateSession::set_server_addr(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  server_addr_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHUpdateSession.server_addr)
}

// optional uint32 server_port = 6;
inline bool CMsgGCHUpdateSession::has_server_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCHUpdateSession::clear_server_port() {
  server_port_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgGCHUpdateSession::server_port() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHUpdateSession.server_port)
  return server_port_;
}
inline void CMsgGCHUpdateSession::set_server_port(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  server_port_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHUpdateSession.server_port)
}

// optional uint32 os_type = 7;
inline bool CMsgGCHUpdateSession::has_os_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCHUpdateSession::clear_os_type() {
  os_type_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGCHUpdateSession::os_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHUpdateSession.os_type)
  return os_type_;
}
inline void CMsgGCHUpdateSession::set_os_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  os_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHUpdateSession.os_type)
}

// optional uint32 client_addr = 8;
inline bool CMsgGCHUpdateSession::has_client_addr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCHUpdateSession::clear_client_addr() {
  client_addr_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgGCHUpdateSession::client_addr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHUpdateSession.client_addr)
  return client_addr_;
}
inline void CMsgGCHUpdateSession::set_client_addr(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  client_addr_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHUpdateSession.client_addr)
}

// repeated .proto.dota.CMsgGCHUpdateSession.ExtraField extra_fields = 9;
inline int CMsgGCHUpdateSession::extra_fields_size() const {
  return extra_fields_.size();
}
inline void CMsgGCHUpdateSession::clear_extra_fields() {
  extra_fields_.Clear();
}
inline ::proto::dota::CMsgGCHUpdateSession_ExtraField* CMsgGCHUpdateSession::mutable_extra_fields(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCHUpdateSession.extra_fields)
  return extra_fields_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCHUpdateSession_ExtraField >*
CMsgGCHUpdateSession::mutable_extra_fields() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCHUpdateSession.extra_fields)
  return &extra_fields_;
}
inline const ::proto::dota::CMsgGCHUpdateSession_ExtraField& CMsgGCHUpdateSession::extra_fields(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHUpdateSession.extra_fields)
  return extra_fields_.Get(index);
}
inline ::proto::dota::CMsgGCHUpdateSession_ExtraField* CMsgGCHUpdateSession::add_extra_fields() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCHUpdateSession.extra_fields)
  return extra_fields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCHUpdateSession_ExtraField >&
CMsgGCHUpdateSession::extra_fields() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCHUpdateSession.extra_fields)
  return extra_fields_;
}

// -------------------------------------------------------------------

// CMsgNotificationOfSuspiciousActivity_MultipleGameInstances

// optional uint32 app_instance_count = 1;
inline bool CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::has_app_instance_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::clear_app_instance_count() {
  app_instance_count_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::app_instance_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.app_instance_count)
  return app_instance_count_;
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::set_app_instance_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  app_instance_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.app_instance_count)
}

// repeated fixed64 other_steamids = 2;
inline int CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::other_steamids_size() const {
  return other_steamids_.size();
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::clear_other_steamids() {
  other_steamids_.Clear();
}
inline ::google::protobuf::uint64 CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::other_steamids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.other_steamids)
  return other_steamids_.Get(index);
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::set_other_steamids(int index, ::google::protobuf::uint64 value) {
  other_steamids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.other_steamids)
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::add_other_steamids(::google::protobuf::uint64 value) {
  other_steamids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.other_steamids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::other_steamids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.other_steamids)
  return other_steamids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::mutable_other_steamids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.other_steamids)
  return &other_steamids_;
}

// -------------------------------------------------------------------

// CMsgNotificationOfSuspiciousActivity

// optional fixed64 steamid = 1;
inline bool CMsgNotificationOfSuspiciousActivity::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgNotificationOfSuspiciousActivity::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgNotificationOfSuspiciousActivity::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNotificationOfSuspiciousActivity.steamid)
  return steamid_;
}
inline void CMsgNotificationOfSuspiciousActivity::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNotificationOfSuspiciousActivity.steamid)
}

// optional uint32 appid = 2;
inline bool CMsgNotificationOfSuspiciousActivity::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgNotificationOfSuspiciousActivity::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgNotificationOfSuspiciousActivity::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNotificationOfSuspiciousActivity.appid)
  return appid_;
}
inline void CMsgNotificationOfSuspiciousActivity::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNotificationOfSuspiciousActivity.appid)
}

// optional .proto.dota.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
inline bool CMsgNotificationOfSuspiciousActivity::has_multiple_instances() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgNotificationOfSuspiciousActivity::clear_multiple_instances() {
  if (multiple_instances_ != nullptr) multiple_instances_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& CMsgNotificationOfSuspiciousActivity::multiple_instances() const {
  const ::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* p = multiple_instances_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNotificationOfSuspiciousActivity.multiple_instances)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances*>(
      &::proto::dota::_CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_default_instance_);
}
inline ::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* CMsgNotificationOfSuspiciousActivity::release_multiple_instances() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgNotificationOfSuspiciousActivity.multiple_instances)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* temp = multiple_instances_;
  multiple_instances_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* CMsgNotificationOfSuspiciousActivity::mutable_multiple_instances() {
  _has_bits_[0] |= 0x00000001u;
  if (multiple_instances_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances>(GetArenaNoVirtual());
    multiple_instances_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgNotificationOfSuspiciousActivity.multiple_instances)
  return multiple_instances_;
}
inline void CMsgNotificationOfSuspiciousActivity::set_allocated_multiple_instances(::proto::dota::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* multiple_instances) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete multiple_instances_;
  }
  if (multiple_instances) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      multiple_instances = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, multiple_instances, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  multiple_instances_ = multiple_instances;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgNotificationOfSuspiciousActivity.multiple_instances)
}

// -------------------------------------------------------------------

// CMsgDPPartnerMicroTxns_PartnerMicroTxn

// optional uint32 init_time = 1;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_init_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_init_time() {
  init_time_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::init_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.init_time)
  return init_time_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_init_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  init_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.init_time)
}

// optional uint32 last_update_time = 2;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_last_update_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_last_update_time() {
  last_update_time_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::last_update_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.last_update_time)
  return last_update_time_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_last_update_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  last_update_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.last_update_time)
}

// optional uint64 txn_id = 3;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_txn_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_txn_id() {
  txn_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::txn_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.txn_id)
  return txn_id_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_txn_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  txn_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.txn_id)
}

// optional uint32 account_id = 4;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_account_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.account_id)
  return account_id_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.account_id)
}

// optional uint32 line_item = 5;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_line_item() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_line_item() {
  line_item_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::line_item() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.line_item)
  return line_item_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_line_item(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  line_item_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.line_item)
}

// optional uint64 item_id = 6;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_item_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_item_id() {
  item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.item_id)
  return item_id_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.item_id)
}

// optional uint32 def_index = 7;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_def_index() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_def_index() {
  def_index_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.def_index)
  return def_index_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_def_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.def_index)
}

// optional uint64 price = 8;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_price() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_price() {
  price_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::price() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.price)
  return price_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_price(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000100u;
  price_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.price)
}

// optional uint64 tax = 9;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_tax() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_tax() {
  tax_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::tax() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.tax)
  return tax_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_tax(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000200u;
  tax_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.tax)
}

// optional uint64 price_usd = 10;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_price_usd() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_price_usd() {
  price_usd_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::price_usd() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.price_usd)
  return price_usd_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_price_usd(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00001000u;
  price_usd_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.price_usd)
}

// optional uint64 tax_usd = 11;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_tax_usd() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_tax_usd() {
  tax_usd_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::tax_usd() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.tax_usd)
  return tax_usd_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_tax_usd(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00002000u;
  tax_usd_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.tax_usd)
}

// optional uint32 purchase_type = 12;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_purchase_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_purchase_type() {
  purchase_type_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::purchase_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.purchase_type)
  return purchase_type_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_purchase_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  purchase_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.purchase_type)
}

// optional uint32 steam_txn_type = 13;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_steam_txn_type() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_steam_txn_type() {
  steam_txn_type_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::steam_txn_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.steam_txn_type)
  return steam_txn_type_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_steam_txn_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  steam_txn_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.steam_txn_type)
}

// optional string country_code = 14;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_country_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDPPartnerMicroTxns_PartnerMicroTxn::country_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
  return country_code_.GetNoArena();
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_country_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
}
#if LANG_CXX11
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_country_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
}
#endif
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_country_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerMicroTxn::mutable_country_code() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerMicroTxn::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
  if (!has_country_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return country_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_allocated_country_code(::std::string* country_code) {
  if (country_code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code)
}

// optional string region_code = 15;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_region_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_region_code() {
  region_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgDPPartnerMicroTxns_PartnerMicroTxn::region_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
  return region_code_.GetNoArena();
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_region_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  region_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
}
#if LANG_CXX11
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_region_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  region_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
}
#endif
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_region_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  region_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_region_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  region_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerMicroTxn::mutable_region_code() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
  return region_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerMicroTxn::release_region_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
  if (!has_region_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return region_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_allocated_region_code(::std::string* region_code) {
  if (region_code != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  region_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code)
}

// optional int32 quantity = 16;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_quantity() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_quantity() {
  quantity_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::google::protobuf::int32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::quantity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.quantity)
  return quantity_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_quantity(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00008000u;
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.quantity)
}

// optional uint64 ref_trans_id = 17;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_ref_trans_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_ref_trans_id() {
  ref_trans_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00010000u;
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::ref_trans_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.ref_trans_id)
  return ref_trans_id_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_ref_trans_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00010000u;
  ref_trans_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn.ref_trans_id)
}

// -------------------------------------------------------------------

// CMsgDPPartnerMicroTxns_PartnerInfo

// optional uint32 partner_id = 1;
inline bool CMsgDPPartnerMicroTxns_PartnerInfo::has_partner_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::clear_partner_id() {
  partner_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerInfo::partner_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.partner_id)
  return partner_id_;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_partner_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  partner_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.partner_id)
}

// optional string partner_name = 2;
inline bool CMsgDPPartnerMicroTxns_PartnerInfo::has_partner_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::clear_partner_name() {
  partner_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDPPartnerMicroTxns_PartnerInfo::partner_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
  return partner_name_.GetNoArena();
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_partner_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  partner_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
}
#if LANG_CXX11
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_partner_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  partner_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
}
#endif
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_partner_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  partner_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_partner_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  partner_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::mutable_partner_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
  return partner_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::release_partner_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
  if (!has_partner_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return partner_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_allocated_partner_name(::std::string* partner_name) {
  if (partner_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  partner_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), partner_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.partner_name)
}

// optional string currency_code = 3;
inline bool CMsgDPPartnerMicroTxns_PartnerInfo::has_currency_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::clear_currency_code() {
  currency_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgDPPartnerMicroTxns_PartnerInfo::currency_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
  return currency_code_.GetNoArena();
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  currency_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
}
#if LANG_CXX11
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  currency_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
}
#endif
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  currency_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  currency_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::mutable_currency_code() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
  return currency_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::release_currency_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
  if (!has_currency_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return currency_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_allocated_currency_code(::std::string* currency_code) {
  if (currency_code != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  currency_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency_code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_code)
}

// optional string currency_name = 4;
inline bool CMsgDPPartnerMicroTxns_PartnerInfo::has_currency_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::clear_currency_name() {
  currency_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CMsgDPPartnerMicroTxns_PartnerInfo::currency_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
  return currency_name_.GetNoArena();
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  currency_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
}
#if LANG_CXX11
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  currency_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
}
#endif
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  currency_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  currency_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::mutable_currency_name() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
  return currency_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::release_currency_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
  if (!has_currency_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return currency_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_allocated_currency_name(::std::string* currency_name) {
  if (currency_name != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  currency_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo.currency_name)
}

// -------------------------------------------------------------------

// CMsgDPPartnerMicroTxns

// optional uint32 appid = 1;
inline bool CMsgDPPartnerMicroTxns::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDPPartnerMicroTxns::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.appid)
  return appid_;
}
inline void CMsgDPPartnerMicroTxns::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.appid)
}

// optional string gc_name = 2;
inline bool CMsgDPPartnerMicroTxns::has_gc_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDPPartnerMicroTxns::clear_gc_name() {
  gc_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDPPartnerMicroTxns::gc_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.gc_name)
  return gc_name_.GetNoArena();
}
inline void CMsgDPPartnerMicroTxns::set_gc_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  gc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxns.gc_name)
}
#if LANG_CXX11
inline void CMsgDPPartnerMicroTxns::set_gc_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  gc_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDPPartnerMicroTxns.gc_name)
}
#endif
inline void CMsgDPPartnerMicroTxns::set_gc_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  gc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDPPartnerMicroTxns.gc_name)
}
inline void CMsgDPPartnerMicroTxns::set_gc_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  gc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDPPartnerMicroTxns.gc_name)
}
inline ::std::string* CMsgDPPartnerMicroTxns::mutable_gc_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDPPartnerMicroTxns.gc_name)
  return gc_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDPPartnerMicroTxns::release_gc_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDPPartnerMicroTxns.gc_name)
  if (!has_gc_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return gc_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDPPartnerMicroTxns::set_allocated_gc_name(::std::string* gc_name) {
  if (gc_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  gc_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gc_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDPPartnerMicroTxns.gc_name)
}

// optional .proto.dota.CMsgDPPartnerMicroTxns.PartnerInfo partner = 3;
inline bool CMsgDPPartnerMicroTxns::has_partner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDPPartnerMicroTxns::clear_partner() {
  if (partner_ != nullptr) partner_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo& CMsgDPPartnerMicroTxns::partner() const {
  const ::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo* p = partner_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.partner)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo*>(
      &::proto::dota::_CMsgDPPartnerMicroTxns_PartnerInfo_default_instance_);
}
inline ::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo* CMsgDPPartnerMicroTxns::release_partner() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDPPartnerMicroTxns.partner)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo* temp = partner_;
  partner_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo* CMsgDPPartnerMicroTxns::mutable_partner() {
  _has_bits_[0] |= 0x00000002u;
  if (partner_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo>(GetArenaNoVirtual());
    partner_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDPPartnerMicroTxns.partner)
  return partner_;
}
inline void CMsgDPPartnerMicroTxns::set_allocated_partner(::proto::dota::CMsgDPPartnerMicroTxns_PartnerInfo* partner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete partner_;
  }
  if (partner) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      partner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, partner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  partner_ = partner;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDPPartnerMicroTxns.partner)
}

// repeated .proto.dota.CMsgDPPartnerMicroTxns.PartnerMicroTxn transactions = 4;
inline int CMsgDPPartnerMicroTxns::transactions_size() const {
  return transactions_.size();
}
inline void CMsgDPPartnerMicroTxns::clear_transactions() {
  transactions_.Clear();
}
inline ::proto::dota::CMsgDPPartnerMicroTxns_PartnerMicroTxn* CMsgDPPartnerMicroTxns::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDPPartnerMicroTxns.transactions)
  return transactions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDPPartnerMicroTxns_PartnerMicroTxn >*
CMsgDPPartnerMicroTxns::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDPPartnerMicroTxns.transactions)
  return &transactions_;
}
inline const ::proto::dota::CMsgDPPartnerMicroTxns_PartnerMicroTxn& CMsgDPPartnerMicroTxns::transactions(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxns.transactions)
  return transactions_.Get(index);
}
inline ::proto::dota::CMsgDPPartnerMicroTxns_PartnerMicroTxn* CMsgDPPartnerMicroTxns::add_transactions() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDPPartnerMicroTxns.transactions)
  return transactions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDPPartnerMicroTxns_PartnerMicroTxn >&
CMsgDPPartnerMicroTxns::transactions() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDPPartnerMicroTxns.transactions)
  return transactions_;
}

// -------------------------------------------------------------------

// CMsgDPPartnerMicroTxnsResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDPPartnerMicroTxnsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDPPartnerMicroTxnsResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxnsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxnsResponse.eresult)
  return eresult_;
}
inline void CMsgDPPartnerMicroTxnsResponse::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxnsResponse.eresult)
}

// optional .proto.dota.CMsgDPPartnerMicroTxnsResponse.EErrorCode eerrorcode = 2 [default = k_MsgValid];
inline bool CMsgDPPartnerMicroTxnsResponse::has_eerrorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDPPartnerMicroTxnsResponse::clear_eerrorcode() {
  eerrorcode_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::eerrorcode() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDPPartnerMicroTxnsResponse.eerrorcode)
  return static_cast< ::proto::dota::CMsgDPPartnerMicroTxnsResponse_EErrorCode >(eerrorcode_);
}
inline void CMsgDPPartnerMicroTxnsResponse::set_eerrorcode(::proto::dota::CMsgDPPartnerMicroTxnsResponse_EErrorCode value) {
  assert(::proto::dota::CMsgDPPartnerMicroTxnsResponse_EErrorCode_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  eerrorcode_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDPPartnerMicroTxnsResponse.eerrorcode)
}

// -------------------------------------------------------------------

// CMsgGCHVacVerificationChange

// optional fixed64 steamid = 1;
inline bool CMsgGCHVacVerificationChange::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHVacVerificationChange::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCHVacVerificationChange::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHVacVerificationChange.steamid)
  return steamid_;
}
inline void CMsgGCHVacVerificationChange::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHVacVerificationChange.steamid)
}

// optional uint32 appid = 2;
inline bool CMsgGCHVacVerificationChange::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHVacVerificationChange::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCHVacVerificationChange::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHVacVerificationChange.appid)
  return appid_;
}
inline void CMsgGCHVacVerificationChange::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHVacVerificationChange.appid)
}

// optional bool is_verified = 3;
inline bool CMsgGCHVacVerificationChange::has_is_verified() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCHVacVerificationChange::clear_is_verified() {
  is_verified_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgGCHVacVerificationChange::is_verified() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHVacVerificationChange.is_verified)
  return is_verified_;
}
inline void CMsgGCHVacVerificationChange::set_is_verified(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_verified_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHVacVerificationChange.is_verified)
}

// -------------------------------------------------------------------

// CMsgGCHAccountTwoFactorChange

// optional fixed64 steamid = 1;
inline bool CMsgGCHAccountTwoFactorChange::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHAccountTwoFactorChange::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCHAccountTwoFactorChange::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHAccountTwoFactorChange.steamid)
  return steamid_;
}
inline void CMsgGCHAccountTwoFactorChange::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHAccountTwoFactorChange.steamid)
}

// optional uint32 appid = 2;
inline bool CMsgGCHAccountTwoFactorChange::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHAccountTwoFactorChange::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCHAccountTwoFactorChange::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHAccountTwoFactorChange.appid)
  return appid_;
}
inline void CMsgGCHAccountTwoFactorChange::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHAccountTwoFactorChange.appid)
}

// optional bool twofactor_enabled = 3;
inline bool CMsgGCHAccountTwoFactorChange::has_twofactor_enabled() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCHAccountTwoFactorChange::clear_twofactor_enabled() {
  twofactor_enabled_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgGCHAccountTwoFactorChange::twofactor_enabled() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCHAccountTwoFactorChange.twofactor_enabled)
  return twofactor_enabled_;
}
inline void CMsgGCHAccountTwoFactorChange::set_twofactor_enabled(bool value) {
  _has_bits_[0] |= 0x00000004u;
  twofactor_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCHAccountTwoFactorChange.twofactor_enabled)
}

// -------------------------------------------------------------------

// CMsgGCCheckClanMembership

// optional fixed64 steamid = 1;
inline bool CMsgGCCheckClanMembership::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCCheckClanMembership::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCCheckClanMembership::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCCheckClanMembership.steamid)
  return steamid_;
}
inline void CMsgGCCheckClanMembership::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCCheckClanMembership.steamid)
}

// optional uint32 clanid = 2;
inline bool CMsgGCCheckClanMembership::has_clanid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCCheckClanMembership::clear_clanid() {
  clanid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCCheckClanMembership::clanid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCCheckClanMembership.clanid)
  return clanid_;
}
inline void CMsgGCCheckClanMembership::set_clanid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  clanid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCCheckClanMembership.clanid)
}

// -------------------------------------------------------------------

// CMsgGCCheckClanMembership_Response

// optional bool ismember = 1;
inline bool CMsgGCCheckClanMembership_Response::has_ismember() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCCheckClanMembership_Response::clear_ismember() {
  ismember_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCCheckClanMembership_Response::ismember() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCCheckClanMembership_Response.ismember)
  return ismember_;
}
inline void CMsgGCCheckClanMembership_Response::set_ismember(bool value) {
  _has_bits_[0] |= 0x00000001u;
  ismember_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCCheckClanMembership_Response.ismember)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::dota::CMsgGCRoutingInfo_RoutingMethod> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgGCRoutingInfo_RoutingMethod>() {
  return ::proto::dota::CMsgGCRoutingInfo_RoutingMethod_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgGCMsgSetOptions_Option> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgGCMsgSetOptions_Option>() {
  return ::proto::dota::CMsgGCMsgSetOptions_Option_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgGCMsgSetOptions_GCSQLVersion> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgGCMsgSetOptions_GCSQLVersion>() {
  return ::proto::dota::CMsgGCMsgSetOptions_GCSQLVersion_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDPPartnerMicroTxnsResponse_EErrorCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDPPartnerMicroTxnsResponse_EErrorCode>() {
  return ::proto::dota::CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::GCProtoBufMsgSrc> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::GCProtoBufMsgSrc>() {
  return ::proto::dota::GCProtoBufMsgSrc_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_2eproto
