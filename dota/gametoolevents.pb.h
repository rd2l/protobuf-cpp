// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gametoolevents.proto

#ifndef PROTOBUF_INCLUDED_gametoolevents_2eproto
#define PROTOBUF_INCLUDED_gametoolevents_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "networkbasetypes.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_gametoolevents_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_gametoolevents_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[15]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_gametoolevents_2eproto();
namespace proto {
namespace dota {
class ChangeMapToolEvent;
class ChangeMapToolEventDefaultTypeInternal;
extern ChangeMapToolEventDefaultTypeInternal _ChangeMapToolEvent_default_instance_;
class DestroyAllEntitiesToolEvent;
class DestroyAllEntitiesToolEventDefaultTypeInternal;
extern DestroyAllEntitiesToolEventDefaultTypeInternal _DestroyAllEntitiesToolEvent_default_instance_;
class DestroyEntityToolEvent;
class DestroyEntityToolEventDefaultTypeInternal;
extern DestroyEntityToolEventDefaultTypeInternal _DestroyEntityToolEvent_default_instance_;
class RestartMapToolEvent;
class RestartMapToolEventDefaultTypeInternal;
extern RestartMapToolEventDefaultTypeInternal _RestartMapToolEvent_default_instance_;
class SpawnEntityToolEvent;
class SpawnEntityToolEventDefaultTypeInternal;
extern SpawnEntityToolEventDefaultTypeInternal _SpawnEntityToolEvent_default_instance_;
class SpawnEntityToolEventResult;
class SpawnEntityToolEventResultDefaultTypeInternal;
extern SpawnEntityToolEventResultDefaultTypeInternal _SpawnEntityToolEventResult_default_instance_;
class ToolEvent_FireEntityInput;
class ToolEvent_FireEntityInputDefaultTypeInternal;
extern ToolEvent_FireEntityInputDefaultTypeInternal _ToolEvent_FireEntityInput_default_instance_;
class ToolEvent_GetEntityInfo;
class ToolEvent_GetEntityInfoDefaultTypeInternal;
extern ToolEvent_GetEntityInfoDefaultTypeInternal _ToolEvent_GetEntityInfo_default_instance_;
class ToolEvent_GetEntityInfoResult;
class ToolEvent_GetEntityInfoResultDefaultTypeInternal;
extern ToolEvent_GetEntityInfoResultDefaultTypeInternal _ToolEvent_GetEntityInfoResult_default_instance_;
class ToolEvent_GetEntityInputs;
class ToolEvent_GetEntityInputsDefaultTypeInternal;
extern ToolEvent_GetEntityInputsDefaultTypeInternal _ToolEvent_GetEntityInputs_default_instance_;
class ToolEvent_GetEntityInputsResult;
class ToolEvent_GetEntityInputsResultDefaultTypeInternal;
extern ToolEvent_GetEntityInputsResultDefaultTypeInternal _ToolEvent_GetEntityInputsResult_default_instance_;
class ToolEvent_SFMRecordingStateChanged;
class ToolEvent_SFMRecordingStateChangedDefaultTypeInternal;
extern ToolEvent_SFMRecordingStateChangedDefaultTypeInternal _ToolEvent_SFMRecordingStateChanged_default_instance_;
class ToolEvent_SFMToolActiveStateChanged;
class ToolEvent_SFMToolActiveStateChangedDefaultTypeInternal;
extern ToolEvent_SFMToolActiveStateChangedDefaultTypeInternal _ToolEvent_SFMToolActiveStateChanged_default_instance_;
class ToolTraceRayResult;
class ToolTraceRayResultDefaultTypeInternal;
extern ToolTraceRayResultDefaultTypeInternal _ToolTraceRayResult_default_instance_;
class TraceRayServerToolEvent;
class TraceRayServerToolEventDefaultTypeInternal;
extern TraceRayServerToolEventDefaultTypeInternal _TraceRayServerToolEvent_default_instance_;
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::dota::ChangeMapToolEvent* Arena::CreateMaybeMessage<::proto::dota::ChangeMapToolEvent>(Arena*);
template<> ::proto::dota::DestroyAllEntitiesToolEvent* Arena::CreateMaybeMessage<::proto::dota::DestroyAllEntitiesToolEvent>(Arena*);
template<> ::proto::dota::DestroyEntityToolEvent* Arena::CreateMaybeMessage<::proto::dota::DestroyEntityToolEvent>(Arena*);
template<> ::proto::dota::RestartMapToolEvent* Arena::CreateMaybeMessage<::proto::dota::RestartMapToolEvent>(Arena*);
template<> ::proto::dota::SpawnEntityToolEvent* Arena::CreateMaybeMessage<::proto::dota::SpawnEntityToolEvent>(Arena*);
template<> ::proto::dota::SpawnEntityToolEventResult* Arena::CreateMaybeMessage<::proto::dota::SpawnEntityToolEventResult>(Arena*);
template<> ::proto::dota::ToolEvent_FireEntityInput* Arena::CreateMaybeMessage<::proto::dota::ToolEvent_FireEntityInput>(Arena*);
template<> ::proto::dota::ToolEvent_GetEntityInfo* Arena::CreateMaybeMessage<::proto::dota::ToolEvent_GetEntityInfo>(Arena*);
template<> ::proto::dota::ToolEvent_GetEntityInfoResult* Arena::CreateMaybeMessage<::proto::dota::ToolEvent_GetEntityInfoResult>(Arena*);
template<> ::proto::dota::ToolEvent_GetEntityInputs* Arena::CreateMaybeMessage<::proto::dota::ToolEvent_GetEntityInputs>(Arena*);
template<> ::proto::dota::ToolEvent_GetEntityInputsResult* Arena::CreateMaybeMessage<::proto::dota::ToolEvent_GetEntityInputsResult>(Arena*);
template<> ::proto::dota::ToolEvent_SFMRecordingStateChanged* Arena::CreateMaybeMessage<::proto::dota::ToolEvent_SFMRecordingStateChanged>(Arena*);
template<> ::proto::dota::ToolEvent_SFMToolActiveStateChanged* Arena::CreateMaybeMessage<::proto::dota::ToolEvent_SFMToolActiveStateChanged>(Arena*);
template<> ::proto::dota::ToolTraceRayResult* Arena::CreateMaybeMessage<::proto::dota::ToolTraceRayResult>(Arena*);
template<> ::proto::dota::TraceRayServerToolEvent* Arena::CreateMaybeMessage<::proto::dota::TraceRayServerToolEvent>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace dota {

// ===================================================================

class ChangeMapToolEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.ChangeMapToolEvent) */ {
 public:
  ChangeMapToolEvent();
  virtual ~ChangeMapToolEvent();

  ChangeMapToolEvent(const ChangeMapToolEvent& from);

  inline ChangeMapToolEvent& operator=(const ChangeMapToolEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeMapToolEvent(ChangeMapToolEvent&& from) noexcept
    : ChangeMapToolEvent() {
    *this = ::std::move(from);
  }

  inline ChangeMapToolEvent& operator=(ChangeMapToolEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ChangeMapToolEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChangeMapToolEvent* internal_default_instance() {
    return reinterpret_cast<const ChangeMapToolEvent*>(
               &_ChangeMapToolEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ChangeMapToolEvent* other);
  friend void swap(ChangeMapToolEvent& a, ChangeMapToolEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeMapToolEvent* New() const final {
    return CreateMaybeMessage<ChangeMapToolEvent>(nullptr);
  }

  ChangeMapToolEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChangeMapToolEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChangeMapToolEvent& from);
  void MergeFrom(const ChangeMapToolEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChangeMapToolEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string mapname = 1;
  bool has_mapname() const;
  void clear_mapname();
  static const int kMapnameFieldNumber = 1;
  const ::std::string& mapname() const;
  void set_mapname(const ::std::string& value);
  #if LANG_CXX11
  void set_mapname(::std::string&& value);
  #endif
  void set_mapname(const char* value);
  void set_mapname(const char* value, size_t size);
  ::std::string* mutable_mapname();
  ::std::string* release_mapname();
  void set_allocated_mapname(::std::string* mapname);

  // @@protoc_insertion_point(class_scope:proto.dota.ChangeMapToolEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr mapname_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class TraceRayServerToolEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.TraceRayServerToolEvent) */ {
 public:
  TraceRayServerToolEvent();
  virtual ~TraceRayServerToolEvent();

  TraceRayServerToolEvent(const TraceRayServerToolEvent& from);

  inline TraceRayServerToolEvent& operator=(const TraceRayServerToolEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TraceRayServerToolEvent(TraceRayServerToolEvent&& from) noexcept
    : TraceRayServerToolEvent() {
    *this = ::std::move(from);
  }

  inline TraceRayServerToolEvent& operator=(TraceRayServerToolEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TraceRayServerToolEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TraceRayServerToolEvent* internal_default_instance() {
    return reinterpret_cast<const TraceRayServerToolEvent*>(
               &_TraceRayServerToolEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(TraceRayServerToolEvent* other);
  friend void swap(TraceRayServerToolEvent& a, TraceRayServerToolEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TraceRayServerToolEvent* New() const final {
    return CreateMaybeMessage<TraceRayServerToolEvent>(nullptr);
  }

  TraceRayServerToolEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TraceRayServerToolEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TraceRayServerToolEvent& from);
  void MergeFrom(const TraceRayServerToolEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TraceRayServerToolEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector start = 1;
  bool has_start() const;
  void clear_start();
  static const int kStartFieldNumber = 1;
  const ::proto::dota::CMsgVector& start() const;
  ::proto::dota::CMsgVector* release_start();
  ::proto::dota::CMsgVector* mutable_start();
  void set_allocated_start(::proto::dota::CMsgVector* start);

  // optional .proto.dota.CMsgVector end = 2;
  bool has_end() const;
  void clear_end();
  static const int kEndFieldNumber = 2;
  const ::proto::dota::CMsgVector& end() const;
  ::proto::dota::CMsgVector* release_end();
  ::proto::dota::CMsgVector* mutable_end();
  void set_allocated_end(::proto::dota::CMsgVector* end);

  // @@protoc_insertion_point(class_scope:proto.dota.TraceRayServerToolEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgVector* start_;
  ::proto::dota::CMsgVector* end_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class ToolTraceRayResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.ToolTraceRayResult) */ {
 public:
  ToolTraceRayResult();
  virtual ~ToolTraceRayResult();

  ToolTraceRayResult(const ToolTraceRayResult& from);

  inline ToolTraceRayResult& operator=(const ToolTraceRayResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToolTraceRayResult(ToolTraceRayResult&& from) noexcept
    : ToolTraceRayResult() {
    *this = ::std::move(from);
  }

  inline ToolTraceRayResult& operator=(ToolTraceRayResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ToolTraceRayResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToolTraceRayResult* internal_default_instance() {
    return reinterpret_cast<const ToolTraceRayResult*>(
               &_ToolTraceRayResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ToolTraceRayResult* other);
  friend void swap(ToolTraceRayResult& a, ToolTraceRayResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToolTraceRayResult* New() const final {
    return CreateMaybeMessage<ToolTraceRayResult>(nullptr);
  }

  ToolTraceRayResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ToolTraceRayResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ToolTraceRayResult& from);
  void MergeFrom(const ToolTraceRayResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToolTraceRayResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector impact = 2;
  bool has_impact() const;
  void clear_impact();
  static const int kImpactFieldNumber = 2;
  const ::proto::dota::CMsgVector& impact() const;
  ::proto::dota::CMsgVector* release_impact();
  ::proto::dota::CMsgVector* mutable_impact();
  void set_allocated_impact(::proto::dota::CMsgVector* impact);

  // optional .proto.dota.CMsgVector normal = 3;
  bool has_normal() const;
  void clear_normal();
  static const int kNormalFieldNumber = 3;
  const ::proto::dota::CMsgVector& normal() const;
  ::proto::dota::CMsgVector* release_normal();
  ::proto::dota::CMsgVector* mutable_normal();
  void set_allocated_normal(::proto::dota::CMsgVector* normal);

  // optional bool hit = 1;
  bool has_hit() const;
  void clear_hit();
  static const int kHitFieldNumber = 1;
  bool hit() const;
  void set_hit(bool value);

  // optional float distance = 4;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 4;
  float distance() const;
  void set_distance(float value);

  // optional float fraction = 5;
  bool has_fraction() const;
  void clear_fraction();
  static const int kFractionFieldNumber = 5;
  float fraction() const;
  void set_fraction(float value);

  // optional int32 ehandle = 6;
  bool has_ehandle() const;
  void clear_ehandle();
  static const int kEhandleFieldNumber = 6;
  ::google::protobuf::int32 ehandle() const;
  void set_ehandle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.ToolTraceRayResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgVector* impact_;
  ::proto::dota::CMsgVector* normal_;
  bool hit_;
  float distance_;
  float fraction_;
  ::google::protobuf::int32 ehandle_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class SpawnEntityToolEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.SpawnEntityToolEvent) */ {
 public:
  SpawnEntityToolEvent();
  virtual ~SpawnEntityToolEvent();

  SpawnEntityToolEvent(const SpawnEntityToolEvent& from);

  inline SpawnEntityToolEvent& operator=(const SpawnEntityToolEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpawnEntityToolEvent(SpawnEntityToolEvent&& from) noexcept
    : SpawnEntityToolEvent() {
    *this = ::std::move(from);
  }

  inline SpawnEntityToolEvent& operator=(SpawnEntityToolEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SpawnEntityToolEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpawnEntityToolEvent* internal_default_instance() {
    return reinterpret_cast<const SpawnEntityToolEvent*>(
               &_SpawnEntityToolEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SpawnEntityToolEvent* other);
  friend void swap(SpawnEntityToolEvent& a, SpawnEntityToolEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpawnEntityToolEvent* New() const final {
    return CreateMaybeMessage<SpawnEntityToolEvent>(nullptr);
  }

  SpawnEntityToolEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SpawnEntityToolEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SpawnEntityToolEvent& from);
  void MergeFrom(const SpawnEntityToolEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpawnEntityToolEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes entity_keyvalues = 1;
  bool has_entity_keyvalues() const;
  void clear_entity_keyvalues();
  static const int kEntityKeyvaluesFieldNumber = 1;
  const ::std::string& entity_keyvalues() const;
  void set_entity_keyvalues(const ::std::string& value);
  #if LANG_CXX11
  void set_entity_keyvalues(::std::string&& value);
  #endif
  void set_entity_keyvalues(const char* value);
  void set_entity_keyvalues(const void* value, size_t size);
  ::std::string* mutable_entity_keyvalues();
  ::std::string* release_entity_keyvalues();
  void set_allocated_entity_keyvalues(::std::string* entity_keyvalues);

  // optional bool clientsideentity = 2;
  bool has_clientsideentity() const;
  void clear_clientsideentity();
  static const int kClientsideentityFieldNumber = 2;
  bool clientsideentity() const;
  void set_clientsideentity(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.SpawnEntityToolEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entity_keyvalues_;
  bool clientsideentity_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class SpawnEntityToolEventResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.SpawnEntityToolEventResult) */ {
 public:
  SpawnEntityToolEventResult();
  virtual ~SpawnEntityToolEventResult();

  SpawnEntityToolEventResult(const SpawnEntityToolEventResult& from);

  inline SpawnEntityToolEventResult& operator=(const SpawnEntityToolEventResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpawnEntityToolEventResult(SpawnEntityToolEventResult&& from) noexcept
    : SpawnEntityToolEventResult() {
    *this = ::std::move(from);
  }

  inline SpawnEntityToolEventResult& operator=(SpawnEntityToolEventResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SpawnEntityToolEventResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpawnEntityToolEventResult* internal_default_instance() {
    return reinterpret_cast<const SpawnEntityToolEventResult*>(
               &_SpawnEntityToolEventResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SpawnEntityToolEventResult* other);
  friend void swap(SpawnEntityToolEventResult& a, SpawnEntityToolEventResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpawnEntityToolEventResult* New() const final {
    return CreateMaybeMessage<SpawnEntityToolEventResult>(nullptr);
  }

  SpawnEntityToolEventResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SpawnEntityToolEventResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SpawnEntityToolEventResult& from);
  void MergeFrom(const SpawnEntityToolEventResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpawnEntityToolEventResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ehandle = 1;
  bool has_ehandle() const;
  void clear_ehandle();
  static const int kEhandleFieldNumber = 1;
  ::google::protobuf::int32 ehandle() const;
  void set_ehandle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.SpawnEntityToolEventResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ehandle_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class DestroyEntityToolEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.DestroyEntityToolEvent) */ {
 public:
  DestroyEntityToolEvent();
  virtual ~DestroyEntityToolEvent();

  DestroyEntityToolEvent(const DestroyEntityToolEvent& from);

  inline DestroyEntityToolEvent& operator=(const DestroyEntityToolEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DestroyEntityToolEvent(DestroyEntityToolEvent&& from) noexcept
    : DestroyEntityToolEvent() {
    *this = ::std::move(from);
  }

  inline DestroyEntityToolEvent& operator=(DestroyEntityToolEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DestroyEntityToolEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DestroyEntityToolEvent* internal_default_instance() {
    return reinterpret_cast<const DestroyEntityToolEvent*>(
               &_DestroyEntityToolEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(DestroyEntityToolEvent* other);
  friend void swap(DestroyEntityToolEvent& a, DestroyEntityToolEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DestroyEntityToolEvent* New() const final {
    return CreateMaybeMessage<DestroyEntityToolEvent>(nullptr);
  }

  DestroyEntityToolEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DestroyEntityToolEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DestroyEntityToolEvent& from);
  void MergeFrom(const DestroyEntityToolEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DestroyEntityToolEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ehandle = 1;
  bool has_ehandle() const;
  void clear_ehandle();
  static const int kEhandleFieldNumber = 1;
  ::google::protobuf::int32 ehandle() const;
  void set_ehandle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.DestroyEntityToolEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ehandle_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class DestroyAllEntitiesToolEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.DestroyAllEntitiesToolEvent) */ {
 public:
  DestroyAllEntitiesToolEvent();
  virtual ~DestroyAllEntitiesToolEvent();

  DestroyAllEntitiesToolEvent(const DestroyAllEntitiesToolEvent& from);

  inline DestroyAllEntitiesToolEvent& operator=(const DestroyAllEntitiesToolEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DestroyAllEntitiesToolEvent(DestroyAllEntitiesToolEvent&& from) noexcept
    : DestroyAllEntitiesToolEvent() {
    *this = ::std::move(from);
  }

  inline DestroyAllEntitiesToolEvent& operator=(DestroyAllEntitiesToolEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DestroyAllEntitiesToolEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DestroyAllEntitiesToolEvent* internal_default_instance() {
    return reinterpret_cast<const DestroyAllEntitiesToolEvent*>(
               &_DestroyAllEntitiesToolEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(DestroyAllEntitiesToolEvent* other);
  friend void swap(DestroyAllEntitiesToolEvent& a, DestroyAllEntitiesToolEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DestroyAllEntitiesToolEvent* New() const final {
    return CreateMaybeMessage<DestroyAllEntitiesToolEvent>(nullptr);
  }

  DestroyAllEntitiesToolEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DestroyAllEntitiesToolEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DestroyAllEntitiesToolEvent& from);
  void MergeFrom(const DestroyAllEntitiesToolEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DestroyAllEntitiesToolEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.DestroyAllEntitiesToolEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class RestartMapToolEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.RestartMapToolEvent) */ {
 public:
  RestartMapToolEvent();
  virtual ~RestartMapToolEvent();

  RestartMapToolEvent(const RestartMapToolEvent& from);

  inline RestartMapToolEvent& operator=(const RestartMapToolEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RestartMapToolEvent(RestartMapToolEvent&& from) noexcept
    : RestartMapToolEvent() {
    *this = ::std::move(from);
  }

  inline RestartMapToolEvent& operator=(RestartMapToolEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RestartMapToolEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RestartMapToolEvent* internal_default_instance() {
    return reinterpret_cast<const RestartMapToolEvent*>(
               &_RestartMapToolEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(RestartMapToolEvent* other);
  friend void swap(RestartMapToolEvent& a, RestartMapToolEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RestartMapToolEvent* New() const final {
    return CreateMaybeMessage<RestartMapToolEvent>(nullptr);
  }

  RestartMapToolEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RestartMapToolEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RestartMapToolEvent& from);
  void MergeFrom(const RestartMapToolEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RestartMapToolEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.RestartMapToolEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class ToolEvent_GetEntityInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.ToolEvent_GetEntityInfo) */ {
 public:
  ToolEvent_GetEntityInfo();
  virtual ~ToolEvent_GetEntityInfo();

  ToolEvent_GetEntityInfo(const ToolEvent_GetEntityInfo& from);

  inline ToolEvent_GetEntityInfo& operator=(const ToolEvent_GetEntityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToolEvent_GetEntityInfo(ToolEvent_GetEntityInfo&& from) noexcept
    : ToolEvent_GetEntityInfo() {
    *this = ::std::move(from);
  }

  inline ToolEvent_GetEntityInfo& operator=(ToolEvent_GetEntityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ToolEvent_GetEntityInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToolEvent_GetEntityInfo* internal_default_instance() {
    return reinterpret_cast<const ToolEvent_GetEntityInfo*>(
               &_ToolEvent_GetEntityInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ToolEvent_GetEntityInfo* other);
  friend void swap(ToolEvent_GetEntityInfo& a, ToolEvent_GetEntityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToolEvent_GetEntityInfo* New() const final {
    return CreateMaybeMessage<ToolEvent_GetEntityInfo>(nullptr);
  }

  ToolEvent_GetEntityInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ToolEvent_GetEntityInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ToolEvent_GetEntityInfo& from);
  void MergeFrom(const ToolEvent_GetEntityInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToolEvent_GetEntityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ehandle = 1;
  bool has_ehandle() const;
  void clear_ehandle();
  static const int kEhandleFieldNumber = 1;
  ::google::protobuf::int32 ehandle() const;
  void set_ehandle(::google::protobuf::int32 value);

  // optional bool clientsideentity = 2;
  bool has_clientsideentity() const;
  void clear_clientsideentity();
  static const int kClientsideentityFieldNumber = 2;
  bool clientsideentity() const;
  void set_clientsideentity(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.ToolEvent_GetEntityInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ehandle_;
  bool clientsideentity_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class ToolEvent_GetEntityInfoResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.ToolEvent_GetEntityInfoResult) */ {
 public:
  ToolEvent_GetEntityInfoResult();
  virtual ~ToolEvent_GetEntityInfoResult();

  ToolEvent_GetEntityInfoResult(const ToolEvent_GetEntityInfoResult& from);

  inline ToolEvent_GetEntityInfoResult& operator=(const ToolEvent_GetEntityInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToolEvent_GetEntityInfoResult(ToolEvent_GetEntityInfoResult&& from) noexcept
    : ToolEvent_GetEntityInfoResult() {
    *this = ::std::move(from);
  }

  inline ToolEvent_GetEntityInfoResult& operator=(ToolEvent_GetEntityInfoResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ToolEvent_GetEntityInfoResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToolEvent_GetEntityInfoResult* internal_default_instance() {
    return reinterpret_cast<const ToolEvent_GetEntityInfoResult*>(
               &_ToolEvent_GetEntityInfoResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ToolEvent_GetEntityInfoResult* other);
  friend void swap(ToolEvent_GetEntityInfoResult& a, ToolEvent_GetEntityInfoResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToolEvent_GetEntityInfoResult* New() const final {
    return CreateMaybeMessage<ToolEvent_GetEntityInfoResult>(nullptr);
  }

  ToolEvent_GetEntityInfoResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ToolEvent_GetEntityInfoResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ToolEvent_GetEntityInfoResult& from);
  void MergeFrom(const ToolEvent_GetEntityInfoResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToolEvent_GetEntityInfoResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cppclass = 1 [default = "shithead"];
  bool has_cppclass() const;
  void clear_cppclass();
  static const int kCppclassFieldNumber = 1;
  const ::std::string& cppclass() const;
  void set_cppclass(const ::std::string& value);
  #if LANG_CXX11
  void set_cppclass(::std::string&& value);
  #endif
  void set_cppclass(const char* value);
  void set_cppclass(const char* value, size_t size);
  ::std::string* mutable_cppclass();
  ::std::string* release_cppclass();
  void set_allocated_cppclass(::std::string* cppclass);

  // optional string classname = 2;
  bool has_classname() const;
  void clear_classname();
  static const int kClassnameFieldNumber = 2;
  const ::std::string& classname() const;
  void set_classname(const ::std::string& value);
  #if LANG_CXX11
  void set_classname(::std::string&& value);
  #endif
  void set_classname(const char* value);
  void set_classname(const char* value, size_t size);
  ::std::string* mutable_classname();
  ::std::string* release_classname();
  void set_allocated_classname(::std::string* classname);

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .proto.dota.CMsgVector origin = 4;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 4;
  const ::proto::dota::CMsgVector& origin() const;
  ::proto::dota::CMsgVector* release_origin();
  ::proto::dota::CMsgVector* mutable_origin();
  void set_allocated_origin(::proto::dota::CMsgVector* origin);

  // optional .proto.dota.CMsgVector mins = 5;
  bool has_mins() const;
  void clear_mins();
  static const int kMinsFieldNumber = 5;
  const ::proto::dota::CMsgVector& mins() const;
  ::proto::dota::CMsgVector* release_mins();
  ::proto::dota::CMsgVector* mutable_mins();
  void set_allocated_mins(::proto::dota::CMsgVector* mins);

  // optional .proto.dota.CMsgVector maxs = 6;
  bool has_maxs() const;
  void clear_maxs();
  static const int kMaxsFieldNumber = 6;
  const ::proto::dota::CMsgVector& maxs() const;
  ::proto::dota::CMsgVector* release_maxs();
  ::proto::dota::CMsgVector* mutable_maxs();
  void set_allocated_maxs(::proto::dota::CMsgVector* maxs);

  // @@protoc_insertion_point(class_scope:proto.dota.ToolEvent_GetEntityInfoResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  public:
  static ::google::protobuf::internal::ExplicitlyConstructed<::std::string> _i_give_permission_to_break_this_code_default_cppclass_;
  private:
  ::google::protobuf::internal::ArenaStringPtr cppclass_;
  ::google::protobuf::internal::ArenaStringPtr classname_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::proto::dota::CMsgVector* origin_;
  ::proto::dota::CMsgVector* mins_;
  ::proto::dota::CMsgVector* maxs_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class ToolEvent_GetEntityInputs final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.ToolEvent_GetEntityInputs) */ {
 public:
  ToolEvent_GetEntityInputs();
  virtual ~ToolEvent_GetEntityInputs();

  ToolEvent_GetEntityInputs(const ToolEvent_GetEntityInputs& from);

  inline ToolEvent_GetEntityInputs& operator=(const ToolEvent_GetEntityInputs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToolEvent_GetEntityInputs(ToolEvent_GetEntityInputs&& from) noexcept
    : ToolEvent_GetEntityInputs() {
    *this = ::std::move(from);
  }

  inline ToolEvent_GetEntityInputs& operator=(ToolEvent_GetEntityInputs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ToolEvent_GetEntityInputs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToolEvent_GetEntityInputs* internal_default_instance() {
    return reinterpret_cast<const ToolEvent_GetEntityInputs*>(
               &_ToolEvent_GetEntityInputs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ToolEvent_GetEntityInputs* other);
  friend void swap(ToolEvent_GetEntityInputs& a, ToolEvent_GetEntityInputs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToolEvent_GetEntityInputs* New() const final {
    return CreateMaybeMessage<ToolEvent_GetEntityInputs>(nullptr);
  }

  ToolEvent_GetEntityInputs* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ToolEvent_GetEntityInputs>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ToolEvent_GetEntityInputs& from);
  void MergeFrom(const ToolEvent_GetEntityInputs& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToolEvent_GetEntityInputs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ehandle = 1;
  bool has_ehandle() const;
  void clear_ehandle();
  static const int kEhandleFieldNumber = 1;
  ::google::protobuf::int32 ehandle() const;
  void set_ehandle(::google::protobuf::int32 value);

  // optional bool clientsideentity = 2;
  bool has_clientsideentity() const;
  void clear_clientsideentity();
  static const int kClientsideentityFieldNumber = 2;
  bool clientsideentity() const;
  void set_clientsideentity(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.ToolEvent_GetEntityInputs)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ehandle_;
  bool clientsideentity_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class ToolEvent_GetEntityInputsResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.ToolEvent_GetEntityInputsResult) */ {
 public:
  ToolEvent_GetEntityInputsResult();
  virtual ~ToolEvent_GetEntityInputsResult();

  ToolEvent_GetEntityInputsResult(const ToolEvent_GetEntityInputsResult& from);

  inline ToolEvent_GetEntityInputsResult& operator=(const ToolEvent_GetEntityInputsResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToolEvent_GetEntityInputsResult(ToolEvent_GetEntityInputsResult&& from) noexcept
    : ToolEvent_GetEntityInputsResult() {
    *this = ::std::move(from);
  }

  inline ToolEvent_GetEntityInputsResult& operator=(ToolEvent_GetEntityInputsResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ToolEvent_GetEntityInputsResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToolEvent_GetEntityInputsResult* internal_default_instance() {
    return reinterpret_cast<const ToolEvent_GetEntityInputsResult*>(
               &_ToolEvent_GetEntityInputsResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ToolEvent_GetEntityInputsResult* other);
  friend void swap(ToolEvent_GetEntityInputsResult& a, ToolEvent_GetEntityInputsResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToolEvent_GetEntityInputsResult* New() const final {
    return CreateMaybeMessage<ToolEvent_GetEntityInputsResult>(nullptr);
  }

  ToolEvent_GetEntityInputsResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ToolEvent_GetEntityInputsResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ToolEvent_GetEntityInputsResult& from);
  void MergeFrom(const ToolEvent_GetEntityInputsResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToolEvent_GetEntityInputsResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string input_list = 1;
  int input_list_size() const;
  void clear_input_list();
  static const int kInputListFieldNumber = 1;
  const ::std::string& input_list(int index) const;
  ::std::string* mutable_input_list(int index);
  void set_input_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_input_list(int index, ::std::string&& value);
  #endif
  void set_input_list(int index, const char* value);
  void set_input_list(int index, const char* value, size_t size);
  ::std::string* add_input_list();
  void add_input_list(const ::std::string& value);
  #if LANG_CXX11
  void add_input_list(::std::string&& value);
  #endif
  void add_input_list(const char* value);
  void add_input_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& input_list() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_input_list();

  // @@protoc_insertion_point(class_scope:proto.dota.ToolEvent_GetEntityInputsResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> input_list_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class ToolEvent_FireEntityInput final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.ToolEvent_FireEntityInput) */ {
 public:
  ToolEvent_FireEntityInput();
  virtual ~ToolEvent_FireEntityInput();

  ToolEvent_FireEntityInput(const ToolEvent_FireEntityInput& from);

  inline ToolEvent_FireEntityInput& operator=(const ToolEvent_FireEntityInput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToolEvent_FireEntityInput(ToolEvent_FireEntityInput&& from) noexcept
    : ToolEvent_FireEntityInput() {
    *this = ::std::move(from);
  }

  inline ToolEvent_FireEntityInput& operator=(ToolEvent_FireEntityInput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ToolEvent_FireEntityInput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToolEvent_FireEntityInput* internal_default_instance() {
    return reinterpret_cast<const ToolEvent_FireEntityInput*>(
               &_ToolEvent_FireEntityInput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(ToolEvent_FireEntityInput* other);
  friend void swap(ToolEvent_FireEntityInput& a, ToolEvent_FireEntityInput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToolEvent_FireEntityInput* New() const final {
    return CreateMaybeMessage<ToolEvent_FireEntityInput>(nullptr);
  }

  ToolEvent_FireEntityInput* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ToolEvent_FireEntityInput>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ToolEvent_FireEntityInput& from);
  void MergeFrom(const ToolEvent_FireEntityInput& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToolEvent_FireEntityInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string input_name = 3;
  bool has_input_name() const;
  void clear_input_name();
  static const int kInputNameFieldNumber = 3;
  const ::std::string& input_name() const;
  void set_input_name(const ::std::string& value);
  #if LANG_CXX11
  void set_input_name(::std::string&& value);
  #endif
  void set_input_name(const char* value);
  void set_input_name(const char* value, size_t size);
  ::std::string* mutable_input_name();
  ::std::string* release_input_name();
  void set_allocated_input_name(::std::string* input_name);

  // optional string input_param = 4;
  bool has_input_param() const;
  void clear_input_param();
  static const int kInputParamFieldNumber = 4;
  const ::std::string& input_param() const;
  void set_input_param(const ::std::string& value);
  #if LANG_CXX11
  void set_input_param(::std::string&& value);
  #endif
  void set_input_param(const char* value);
  void set_input_param(const char* value, size_t size);
  ::std::string* mutable_input_param();
  ::std::string* release_input_param();
  void set_allocated_input_param(::std::string* input_param);

  // optional int32 ehandle = 1;
  bool has_ehandle() const;
  void clear_ehandle();
  static const int kEhandleFieldNumber = 1;
  ::google::protobuf::int32 ehandle() const;
  void set_ehandle(::google::protobuf::int32 value);

  // optional bool clientsideentity = 2;
  bool has_clientsideentity() const;
  void clear_clientsideentity();
  static const int kClientsideentityFieldNumber = 2;
  bool clientsideentity() const;
  void set_clientsideentity(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.ToolEvent_FireEntityInput)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr input_name_;
  ::google::protobuf::internal::ArenaStringPtr input_param_;
  ::google::protobuf::int32 ehandle_;
  bool clientsideentity_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class ToolEvent_SFMRecordingStateChanged final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.ToolEvent_SFMRecordingStateChanged) */ {
 public:
  ToolEvent_SFMRecordingStateChanged();
  virtual ~ToolEvent_SFMRecordingStateChanged();

  ToolEvent_SFMRecordingStateChanged(const ToolEvent_SFMRecordingStateChanged& from);

  inline ToolEvent_SFMRecordingStateChanged& operator=(const ToolEvent_SFMRecordingStateChanged& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToolEvent_SFMRecordingStateChanged(ToolEvent_SFMRecordingStateChanged&& from) noexcept
    : ToolEvent_SFMRecordingStateChanged() {
    *this = ::std::move(from);
  }

  inline ToolEvent_SFMRecordingStateChanged& operator=(ToolEvent_SFMRecordingStateChanged&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ToolEvent_SFMRecordingStateChanged& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToolEvent_SFMRecordingStateChanged* internal_default_instance() {
    return reinterpret_cast<const ToolEvent_SFMRecordingStateChanged*>(
               &_ToolEvent_SFMRecordingStateChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ToolEvent_SFMRecordingStateChanged* other);
  friend void swap(ToolEvent_SFMRecordingStateChanged& a, ToolEvent_SFMRecordingStateChanged& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToolEvent_SFMRecordingStateChanged* New() const final {
    return CreateMaybeMessage<ToolEvent_SFMRecordingStateChanged>(nullptr);
  }

  ToolEvent_SFMRecordingStateChanged* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ToolEvent_SFMRecordingStateChanged>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ToolEvent_SFMRecordingStateChanged& from);
  void MergeFrom(const ToolEvent_SFMRecordingStateChanged& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToolEvent_SFMRecordingStateChanged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isrecording = 1;
  bool has_isrecording() const;
  void clear_isrecording();
  static const int kIsrecordingFieldNumber = 1;
  bool isrecording() const;
  void set_isrecording(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.ToolEvent_SFMRecordingStateChanged)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool isrecording_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// -------------------------------------------------------------------

class ToolEvent_SFMToolActiveStateChanged final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.ToolEvent_SFMToolActiveStateChanged) */ {
 public:
  ToolEvent_SFMToolActiveStateChanged();
  virtual ~ToolEvent_SFMToolActiveStateChanged();

  ToolEvent_SFMToolActiveStateChanged(const ToolEvent_SFMToolActiveStateChanged& from);

  inline ToolEvent_SFMToolActiveStateChanged& operator=(const ToolEvent_SFMToolActiveStateChanged& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToolEvent_SFMToolActiveStateChanged(ToolEvent_SFMToolActiveStateChanged&& from) noexcept
    : ToolEvent_SFMToolActiveStateChanged() {
    *this = ::std::move(from);
  }

  inline ToolEvent_SFMToolActiveStateChanged& operator=(ToolEvent_SFMToolActiveStateChanged&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ToolEvent_SFMToolActiveStateChanged& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToolEvent_SFMToolActiveStateChanged* internal_default_instance() {
    return reinterpret_cast<const ToolEvent_SFMToolActiveStateChanged*>(
               &_ToolEvent_SFMToolActiveStateChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(ToolEvent_SFMToolActiveStateChanged* other);
  friend void swap(ToolEvent_SFMToolActiveStateChanged& a, ToolEvent_SFMToolActiveStateChanged& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToolEvent_SFMToolActiveStateChanged* New() const final {
    return CreateMaybeMessage<ToolEvent_SFMToolActiveStateChanged>(nullptr);
  }

  ToolEvent_SFMToolActiveStateChanged* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ToolEvent_SFMToolActiveStateChanged>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ToolEvent_SFMToolActiveStateChanged& from);
  void MergeFrom(const ToolEvent_SFMToolActiveStateChanged& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToolEvent_SFMToolActiveStateChanged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isactive = 1;
  bool has_isactive() const;
  void clear_isactive();
  static const int kIsactiveFieldNumber = 1;
  bool isactive() const;
  void set_isactive(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.ToolEvent_SFMToolActiveStateChanged)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool isactive_;
  friend struct ::TableStruct_gametoolevents_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ChangeMapToolEvent

// optional string mapname = 1;
inline bool ChangeMapToolEvent::has_mapname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeMapToolEvent::clear_mapname() {
  mapname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ChangeMapToolEvent::mapname() const {
  // @@protoc_insertion_point(field_get:proto.dota.ChangeMapToolEvent.mapname)
  return mapname_.GetNoArena();
}
inline void ChangeMapToolEvent::set_mapname(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.ChangeMapToolEvent.mapname)
}
#if LANG_CXX11
inline void ChangeMapToolEvent::set_mapname(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  mapname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.ChangeMapToolEvent.mapname)
}
#endif
inline void ChangeMapToolEvent::set_mapname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.ChangeMapToolEvent.mapname)
}
inline void ChangeMapToolEvent::set_mapname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.ChangeMapToolEvent.mapname)
}
inline ::std::string* ChangeMapToolEvent::mutable_mapname() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.ChangeMapToolEvent.mapname)
  return mapname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeMapToolEvent::release_mapname() {
  // @@protoc_insertion_point(field_release:proto.dota.ChangeMapToolEvent.mapname)
  if (!has_mapname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return mapname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeMapToolEvent::set_allocated_mapname(::std::string* mapname) {
  if (mapname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  mapname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapname);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.ChangeMapToolEvent.mapname)
}

// -------------------------------------------------------------------

// TraceRayServerToolEvent

// optional .proto.dota.CMsgVector start = 1;
inline bool TraceRayServerToolEvent::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CMsgVector& TraceRayServerToolEvent::start() const {
  const ::proto::dota::CMsgVector* p = start_;
  // @@protoc_insertion_point(field_get:proto.dota.TraceRayServerToolEvent.start)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgVector*>(
      &::proto::dota::_CMsgVector_default_instance_);
}
inline ::proto::dota::CMsgVector* TraceRayServerToolEvent::release_start() {
  // @@protoc_insertion_point(field_release:proto.dota.TraceRayServerToolEvent.start)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgVector* temp = start_;
  start_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgVector* TraceRayServerToolEvent::mutable_start() {
  _has_bits_[0] |= 0x00000001u;
  if (start_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgVector>(GetArenaNoVirtual());
    start_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.TraceRayServerToolEvent.start)
  return start_;
}
inline void TraceRayServerToolEvent::set_allocated_start(::proto::dota::CMsgVector* start) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_);
  }
  if (start) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      start = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  start_ = start;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.TraceRayServerToolEvent.start)
}

// optional .proto.dota.CMsgVector end = 2;
inline bool TraceRayServerToolEvent::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::proto::dota::CMsgVector& TraceRayServerToolEvent::end() const {
  const ::proto::dota::CMsgVector* p = end_;
  // @@protoc_insertion_point(field_get:proto.dota.TraceRayServerToolEvent.end)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgVector*>(
      &::proto::dota::_CMsgVector_default_instance_);
}
inline ::proto::dota::CMsgVector* TraceRayServerToolEvent::release_end() {
  // @@protoc_insertion_point(field_release:proto.dota.TraceRayServerToolEvent.end)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgVector* temp = end_;
  end_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgVector* TraceRayServerToolEvent::mutable_end() {
  _has_bits_[0] |= 0x00000002u;
  if (end_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgVector>(GetArenaNoVirtual());
    end_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.TraceRayServerToolEvent.end)
  return end_;
}
inline void TraceRayServerToolEvent::set_allocated_end(::proto::dota::CMsgVector* end) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(end_);
  }
  if (end) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      end = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  end_ = end;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.TraceRayServerToolEvent.end)
}

// -------------------------------------------------------------------

// ToolTraceRayResult

// optional bool hit = 1;
inline bool ToolTraceRayResult::has_hit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ToolTraceRayResult::clear_hit() {
  hit_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool ToolTraceRayResult::hit() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolTraceRayResult.hit)
  return hit_;
}
inline void ToolTraceRayResult::set_hit(bool value) {
  _has_bits_[0] |= 0x00000004u;
  hit_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ToolTraceRayResult.hit)
}

// optional .proto.dota.CMsgVector impact = 2;
inline bool ToolTraceRayResult::has_impact() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CMsgVector& ToolTraceRayResult::impact() const {
  const ::proto::dota::CMsgVector* p = impact_;
  // @@protoc_insertion_point(field_get:proto.dota.ToolTraceRayResult.impact)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgVector*>(
      &::proto::dota::_CMsgVector_default_instance_);
}
inline ::proto::dota::CMsgVector* ToolTraceRayResult::release_impact() {
  // @@protoc_insertion_point(field_release:proto.dota.ToolTraceRayResult.impact)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgVector* temp = impact_;
  impact_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgVector* ToolTraceRayResult::mutable_impact() {
  _has_bits_[0] |= 0x00000001u;
  if (impact_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgVector>(GetArenaNoVirtual());
    impact_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.ToolTraceRayResult.impact)
  return impact_;
}
inline void ToolTraceRayResult::set_allocated_impact(::proto::dota::CMsgVector* impact) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(impact_);
  }
  if (impact) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      impact = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, impact, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  impact_ = impact;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.ToolTraceRayResult.impact)
}

// optional .proto.dota.CMsgVector normal = 3;
inline bool ToolTraceRayResult::has_normal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::proto::dota::CMsgVector& ToolTraceRayResult::normal() const {
  const ::proto::dota::CMsgVector* p = normal_;
  // @@protoc_insertion_point(field_get:proto.dota.ToolTraceRayResult.normal)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgVector*>(
      &::proto::dota::_CMsgVector_default_instance_);
}
inline ::proto::dota::CMsgVector* ToolTraceRayResult::release_normal() {
  // @@protoc_insertion_point(field_release:proto.dota.ToolTraceRayResult.normal)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgVector* temp = normal_;
  normal_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgVector* ToolTraceRayResult::mutable_normal() {
  _has_bits_[0] |= 0x00000002u;
  if (normal_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgVector>(GetArenaNoVirtual());
    normal_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.ToolTraceRayResult.normal)
  return normal_;
}
inline void ToolTraceRayResult::set_allocated_normal(::proto::dota::CMsgVector* normal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(normal_);
  }
  if (normal) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      normal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, normal, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  normal_ = normal;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.ToolTraceRayResult.normal)
}

// optional float distance = 4;
inline bool ToolTraceRayResult::has_distance() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ToolTraceRayResult::clear_distance() {
  distance_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float ToolTraceRayResult::distance() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolTraceRayResult.distance)
  return distance_;
}
inline void ToolTraceRayResult::set_distance(float value) {
  _has_bits_[0] |= 0x00000008u;
  distance_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ToolTraceRayResult.distance)
}

// optional float fraction = 5;
inline bool ToolTraceRayResult::has_fraction() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ToolTraceRayResult::clear_fraction() {
  fraction_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float ToolTraceRayResult::fraction() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolTraceRayResult.fraction)
  return fraction_;
}
inline void ToolTraceRayResult::set_fraction(float value) {
  _has_bits_[0] |= 0x00000010u;
  fraction_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ToolTraceRayResult.fraction)
}

// optional int32 ehandle = 6;
inline bool ToolTraceRayResult::has_ehandle() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ToolTraceRayResult::clear_ehandle() {
  ehandle_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 ToolTraceRayResult::ehandle() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolTraceRayResult.ehandle)
  return ehandle_;
}
inline void ToolTraceRayResult::set_ehandle(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ehandle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ToolTraceRayResult.ehandle)
}

// -------------------------------------------------------------------

// SpawnEntityToolEvent

// optional bytes entity_keyvalues = 1;
inline bool SpawnEntityToolEvent::has_entity_keyvalues() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpawnEntityToolEvent::clear_entity_keyvalues() {
  entity_keyvalues_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SpawnEntityToolEvent::entity_keyvalues() const {
  // @@protoc_insertion_point(field_get:proto.dota.SpawnEntityToolEvent.entity_keyvalues)
  return entity_keyvalues_.GetNoArena();
}
inline void SpawnEntityToolEvent::set_entity_keyvalues(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  entity_keyvalues_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.SpawnEntityToolEvent.entity_keyvalues)
}
#if LANG_CXX11
inline void SpawnEntityToolEvent::set_entity_keyvalues(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  entity_keyvalues_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.SpawnEntityToolEvent.entity_keyvalues)
}
#endif
inline void SpawnEntityToolEvent::set_entity_keyvalues(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  entity_keyvalues_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.SpawnEntityToolEvent.entity_keyvalues)
}
inline void SpawnEntityToolEvent::set_entity_keyvalues(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  entity_keyvalues_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.SpawnEntityToolEvent.entity_keyvalues)
}
inline ::std::string* SpawnEntityToolEvent::mutable_entity_keyvalues() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.SpawnEntityToolEvent.entity_keyvalues)
  return entity_keyvalues_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpawnEntityToolEvent::release_entity_keyvalues() {
  // @@protoc_insertion_point(field_release:proto.dota.SpawnEntityToolEvent.entity_keyvalues)
  if (!has_entity_keyvalues()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return entity_keyvalues_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpawnEntityToolEvent::set_allocated_entity_keyvalues(::std::string* entity_keyvalues) {
  if (entity_keyvalues != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  entity_keyvalues_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_keyvalues);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.SpawnEntityToolEvent.entity_keyvalues)
}

// optional bool clientsideentity = 2;
inline bool SpawnEntityToolEvent::has_clientsideentity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpawnEntityToolEvent::clear_clientsideentity() {
  clientsideentity_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool SpawnEntityToolEvent::clientsideentity() const {
  // @@protoc_insertion_point(field_get:proto.dota.SpawnEntityToolEvent.clientsideentity)
  return clientsideentity_;
}
inline void SpawnEntityToolEvent::set_clientsideentity(bool value) {
  _has_bits_[0] |= 0x00000002u;
  clientsideentity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.SpawnEntityToolEvent.clientsideentity)
}

// -------------------------------------------------------------------

// SpawnEntityToolEventResult

// optional int32 ehandle = 1;
inline bool SpawnEntityToolEventResult::has_ehandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpawnEntityToolEventResult::clear_ehandle() {
  ehandle_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 SpawnEntityToolEventResult::ehandle() const {
  // @@protoc_insertion_point(field_get:proto.dota.SpawnEntityToolEventResult.ehandle)
  return ehandle_;
}
inline void SpawnEntityToolEventResult::set_ehandle(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  ehandle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.SpawnEntityToolEventResult.ehandle)
}

// -------------------------------------------------------------------

// DestroyEntityToolEvent

// optional int32 ehandle = 1;
inline bool DestroyEntityToolEvent::has_ehandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyEntityToolEvent::clear_ehandle() {
  ehandle_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 DestroyEntityToolEvent::ehandle() const {
  // @@protoc_insertion_point(field_get:proto.dota.DestroyEntityToolEvent.ehandle)
  return ehandle_;
}
inline void DestroyEntityToolEvent::set_ehandle(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  ehandle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.DestroyEntityToolEvent.ehandle)
}

// -------------------------------------------------------------------

// DestroyAllEntitiesToolEvent

// -------------------------------------------------------------------

// RestartMapToolEvent

// -------------------------------------------------------------------

// ToolEvent_GetEntityInfo

// optional int32 ehandle = 1;
inline bool ToolEvent_GetEntityInfo::has_ehandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToolEvent_GetEntityInfo::clear_ehandle() {
  ehandle_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ToolEvent_GetEntityInfo::ehandle() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_GetEntityInfo.ehandle)
  return ehandle_;
}
inline void ToolEvent_GetEntityInfo::set_ehandle(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  ehandle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_GetEntityInfo.ehandle)
}

// optional bool clientsideentity = 2;
inline bool ToolEvent_GetEntityInfo::has_clientsideentity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToolEvent_GetEntityInfo::clear_clientsideentity() {
  clientsideentity_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool ToolEvent_GetEntityInfo::clientsideentity() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_GetEntityInfo.clientsideentity)
  return clientsideentity_;
}
inline void ToolEvent_GetEntityInfo::set_clientsideentity(bool value) {
  _has_bits_[0] |= 0x00000002u;
  clientsideentity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_GetEntityInfo.clientsideentity)
}

// -------------------------------------------------------------------

// ToolEvent_GetEntityInfoResult

// optional string cppclass = 1 [default = "shithead"];
inline bool ToolEvent_GetEntityInfoResult::has_cppclass() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToolEvent_GetEntityInfoResult::clear_cppclass() {
  cppclass_.ClearToDefaultNoArena(&::proto::dota::ToolEvent_GetEntityInfoResult::_i_give_permission_to_break_this_code_default_cppclass_.get());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ToolEvent_GetEntityInfoResult::cppclass() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_GetEntityInfoResult.cppclass)
  return cppclass_.GetNoArena();
}
inline void ToolEvent_GetEntityInfoResult::set_cppclass(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  cppclass_.SetNoArena(&::proto::dota::ToolEvent_GetEntityInfoResult::_i_give_permission_to_break_this_code_default_cppclass_.get(), value);
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_GetEntityInfoResult.cppclass)
}
#if LANG_CXX11
inline void ToolEvent_GetEntityInfoResult::set_cppclass(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  cppclass_.SetNoArena(
    &::proto::dota::ToolEvent_GetEntityInfoResult::_i_give_permission_to_break_this_code_default_cppclass_.get(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.ToolEvent_GetEntityInfoResult.cppclass)
}
#endif
inline void ToolEvent_GetEntityInfoResult::set_cppclass(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  cppclass_.SetNoArena(&::proto::dota::ToolEvent_GetEntityInfoResult::_i_give_permission_to_break_this_code_default_cppclass_.get(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.ToolEvent_GetEntityInfoResult.cppclass)
}
inline void ToolEvent_GetEntityInfoResult::set_cppclass(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  cppclass_.SetNoArena(&::proto::dota::ToolEvent_GetEntityInfoResult::_i_give_permission_to_break_this_code_default_cppclass_.get(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.ToolEvent_GetEntityInfoResult.cppclass)
}
inline ::std::string* ToolEvent_GetEntityInfoResult::mutable_cppclass() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.ToolEvent_GetEntityInfoResult.cppclass)
  return cppclass_.MutableNoArena(&::proto::dota::ToolEvent_GetEntityInfoResult::_i_give_permission_to_break_this_code_default_cppclass_.get());
}
inline ::std::string* ToolEvent_GetEntityInfoResult::release_cppclass() {
  // @@protoc_insertion_point(field_release:proto.dota.ToolEvent_GetEntityInfoResult.cppclass)
  if (!has_cppclass()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return cppclass_.ReleaseNonDefaultNoArena(&::proto::dota::ToolEvent_GetEntityInfoResult::_i_give_permission_to_break_this_code_default_cppclass_.get());
}
inline void ToolEvent_GetEntityInfoResult::set_allocated_cppclass(::std::string* cppclass) {
  if (cppclass != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  cppclass_.SetAllocatedNoArena(&::proto::dota::ToolEvent_GetEntityInfoResult::_i_give_permission_to_break_this_code_default_cppclass_.get(), cppclass);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.ToolEvent_GetEntityInfoResult.cppclass)
}

// optional string classname = 2;
inline bool ToolEvent_GetEntityInfoResult::has_classname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToolEvent_GetEntityInfoResult::clear_classname() {
  classname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ToolEvent_GetEntityInfoResult::classname() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_GetEntityInfoResult.classname)
  return classname_.GetNoArena();
}
inline void ToolEvent_GetEntityInfoResult::set_classname(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  classname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_GetEntityInfoResult.classname)
}
#if LANG_CXX11
inline void ToolEvent_GetEntityInfoResult::set_classname(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  classname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.ToolEvent_GetEntityInfoResult.classname)
}
#endif
inline void ToolEvent_GetEntityInfoResult::set_classname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  classname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.ToolEvent_GetEntityInfoResult.classname)
}
inline void ToolEvent_GetEntityInfoResult::set_classname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  classname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.ToolEvent_GetEntityInfoResult.classname)
}
inline ::std::string* ToolEvent_GetEntityInfoResult::mutable_classname() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.ToolEvent_GetEntityInfoResult.classname)
  return classname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ToolEvent_GetEntityInfoResult::release_classname() {
  // @@protoc_insertion_point(field_release:proto.dota.ToolEvent_GetEntityInfoResult.classname)
  if (!has_classname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return classname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ToolEvent_GetEntityInfoResult::set_allocated_classname(::std::string* classname) {
  if (classname != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  classname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), classname);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.ToolEvent_GetEntityInfoResult.classname)
}

// optional string name = 3;
inline bool ToolEvent_GetEntityInfoResult::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ToolEvent_GetEntityInfoResult::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& ToolEvent_GetEntityInfoResult::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_GetEntityInfoResult.name)
  return name_.GetNoArena();
}
inline void ToolEvent_GetEntityInfoResult::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_GetEntityInfoResult.name)
}
#if LANG_CXX11
inline void ToolEvent_GetEntityInfoResult::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.ToolEvent_GetEntityInfoResult.name)
}
#endif
inline void ToolEvent_GetEntityInfoResult::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.ToolEvent_GetEntityInfoResult.name)
}
inline void ToolEvent_GetEntityInfoResult::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.ToolEvent_GetEntityInfoResult.name)
}
inline ::std::string* ToolEvent_GetEntityInfoResult::mutable_name() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.ToolEvent_GetEntityInfoResult.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ToolEvent_GetEntityInfoResult::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.ToolEvent_GetEntityInfoResult.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ToolEvent_GetEntityInfoResult::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.ToolEvent_GetEntityInfoResult.name)
}

// optional .proto.dota.CMsgVector origin = 4;
inline bool ToolEvent_GetEntityInfoResult::has_origin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::proto::dota::CMsgVector& ToolEvent_GetEntityInfoResult::origin() const {
  const ::proto::dota::CMsgVector* p = origin_;
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_GetEntityInfoResult.origin)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgVector*>(
      &::proto::dota::_CMsgVector_default_instance_);
}
inline ::proto::dota::CMsgVector* ToolEvent_GetEntityInfoResult::release_origin() {
  // @@protoc_insertion_point(field_release:proto.dota.ToolEvent_GetEntityInfoResult.origin)
  _has_bits_[0] &= ~0x00000008u;
  ::proto::dota::CMsgVector* temp = origin_;
  origin_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgVector* ToolEvent_GetEntityInfoResult::mutable_origin() {
  _has_bits_[0] |= 0x00000008u;
  if (origin_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgVector>(GetArenaNoVirtual());
    origin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.ToolEvent_GetEntityInfoResult.origin)
  return origin_;
}
inline void ToolEvent_GetEntityInfoResult::set_allocated_origin(::proto::dota::CMsgVector* origin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(origin_);
  }
  if (origin) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      origin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.ToolEvent_GetEntityInfoResult.origin)
}

// optional .proto.dota.CMsgVector mins = 5;
inline bool ToolEvent_GetEntityInfoResult::has_mins() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline const ::proto::dota::CMsgVector& ToolEvent_GetEntityInfoResult::mins() const {
  const ::proto::dota::CMsgVector* p = mins_;
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_GetEntityInfoResult.mins)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgVector*>(
      &::proto::dota::_CMsgVector_default_instance_);
}
inline ::proto::dota::CMsgVector* ToolEvent_GetEntityInfoResult::release_mins() {
  // @@protoc_insertion_point(field_release:proto.dota.ToolEvent_GetEntityInfoResult.mins)
  _has_bits_[0] &= ~0x00000010u;
  ::proto::dota::CMsgVector* temp = mins_;
  mins_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgVector* ToolEvent_GetEntityInfoResult::mutable_mins() {
  _has_bits_[0] |= 0x00000010u;
  if (mins_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgVector>(GetArenaNoVirtual());
    mins_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.ToolEvent_GetEntityInfoResult.mins)
  return mins_;
}
inline void ToolEvent_GetEntityInfoResult::set_allocated_mins(::proto::dota::CMsgVector* mins) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mins_);
  }
  if (mins) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mins = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mins, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  mins_ = mins;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.ToolEvent_GetEntityInfoResult.mins)
}

// optional .proto.dota.CMsgVector maxs = 6;
inline bool ToolEvent_GetEntityInfoResult::has_maxs() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline const ::proto::dota::CMsgVector& ToolEvent_GetEntityInfoResult::maxs() const {
  const ::proto::dota::CMsgVector* p = maxs_;
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_GetEntityInfoResult.maxs)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgVector*>(
      &::proto::dota::_CMsgVector_default_instance_);
}
inline ::proto::dota::CMsgVector* ToolEvent_GetEntityInfoResult::release_maxs() {
  // @@protoc_insertion_point(field_release:proto.dota.ToolEvent_GetEntityInfoResult.maxs)
  _has_bits_[0] &= ~0x00000020u;
  ::proto::dota::CMsgVector* temp = maxs_;
  maxs_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgVector* ToolEvent_GetEntityInfoResult::mutable_maxs() {
  _has_bits_[0] |= 0x00000020u;
  if (maxs_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgVector>(GetArenaNoVirtual());
    maxs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.ToolEvent_GetEntityInfoResult.maxs)
  return maxs_;
}
inline void ToolEvent_GetEntityInfoResult::set_allocated_maxs(::proto::dota::CMsgVector* maxs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(maxs_);
  }
  if (maxs) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      maxs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, maxs, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  maxs_ = maxs;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.ToolEvent_GetEntityInfoResult.maxs)
}

// -------------------------------------------------------------------

// ToolEvent_GetEntityInputs

// optional int32 ehandle = 1;
inline bool ToolEvent_GetEntityInputs::has_ehandle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToolEvent_GetEntityInputs::clear_ehandle() {
  ehandle_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ToolEvent_GetEntityInputs::ehandle() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_GetEntityInputs.ehandle)
  return ehandle_;
}
inline void ToolEvent_GetEntityInputs::set_ehandle(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  ehandle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_GetEntityInputs.ehandle)
}

// optional bool clientsideentity = 2;
inline bool ToolEvent_GetEntityInputs::has_clientsideentity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToolEvent_GetEntityInputs::clear_clientsideentity() {
  clientsideentity_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool ToolEvent_GetEntityInputs::clientsideentity() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_GetEntityInputs.clientsideentity)
  return clientsideentity_;
}
inline void ToolEvent_GetEntityInputs::set_clientsideentity(bool value) {
  _has_bits_[0] |= 0x00000002u;
  clientsideentity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_GetEntityInputs.clientsideentity)
}

// -------------------------------------------------------------------

// ToolEvent_GetEntityInputsResult

// repeated string input_list = 1;
inline int ToolEvent_GetEntityInputsResult::input_list_size() const {
  return input_list_.size();
}
inline void ToolEvent_GetEntityInputsResult::clear_input_list() {
  input_list_.Clear();
}
inline const ::std::string& ToolEvent_GetEntityInputsResult::input_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_GetEntityInputsResult.input_list)
  return input_list_.Get(index);
}
inline ::std::string* ToolEvent_GetEntityInputsResult::mutable_input_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.ToolEvent_GetEntityInputsResult.input_list)
  return input_list_.Mutable(index);
}
inline void ToolEvent_GetEntityInputsResult::set_input_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_GetEntityInputsResult.input_list)
  input_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ToolEvent_GetEntityInputsResult::set_input_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_GetEntityInputsResult.input_list)
  input_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ToolEvent_GetEntityInputsResult::set_input_list(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  input_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.ToolEvent_GetEntityInputsResult.input_list)
}
inline void ToolEvent_GetEntityInputsResult::set_input_list(int index, const char* value, size_t size) {
  input_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.ToolEvent_GetEntityInputsResult.input_list)
}
inline ::std::string* ToolEvent_GetEntityInputsResult::add_input_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.ToolEvent_GetEntityInputsResult.input_list)
  return input_list_.Add();
}
inline void ToolEvent_GetEntityInputsResult::add_input_list(const ::std::string& value) {
  input_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.ToolEvent_GetEntityInputsResult.input_list)
}
#if LANG_CXX11
inline void ToolEvent_GetEntityInputsResult::add_input_list(::std::string&& value) {
  input_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.ToolEvent_GetEntityInputsResult.input_list)
}
#endif
inline void ToolEvent_GetEntityInputsResult::add_input_list(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  input_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.ToolEvent_GetEntityInputsResult.input_list)
}
inline void ToolEvent_GetEntityInputsResult::add_input_list(const char* value, size_t size) {
  input_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.ToolEvent_GetEntityInputsResult.input_list)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ToolEvent_GetEntityInputsResult::input_list() const {
  // @@protoc_insertion_point(field_list:proto.dota.ToolEvent_GetEntityInputsResult.input_list)
  return input_list_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
ToolEvent_GetEntityInputsResult::mutable_input_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.ToolEvent_GetEntityInputsResult.input_list)
  return &input_list_;
}

// -------------------------------------------------------------------

// ToolEvent_FireEntityInput

// optional int32 ehandle = 1;
inline bool ToolEvent_FireEntityInput::has_ehandle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ToolEvent_FireEntityInput::clear_ehandle() {
  ehandle_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ToolEvent_FireEntityInput::ehandle() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_FireEntityInput.ehandle)
  return ehandle_;
}
inline void ToolEvent_FireEntityInput::set_ehandle(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  ehandle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_FireEntityInput.ehandle)
}

// optional bool clientsideentity = 2;
inline bool ToolEvent_FireEntityInput::has_clientsideentity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ToolEvent_FireEntityInput::clear_clientsideentity() {
  clientsideentity_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool ToolEvent_FireEntityInput::clientsideentity() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_FireEntityInput.clientsideentity)
  return clientsideentity_;
}
inline void ToolEvent_FireEntityInput::set_clientsideentity(bool value) {
  _has_bits_[0] |= 0x00000008u;
  clientsideentity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_FireEntityInput.clientsideentity)
}

// optional string input_name = 3;
inline bool ToolEvent_FireEntityInput::has_input_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToolEvent_FireEntityInput::clear_input_name() {
  input_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ToolEvent_FireEntityInput::input_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_FireEntityInput.input_name)
  return input_name_.GetNoArena();
}
inline void ToolEvent_FireEntityInput::set_input_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  input_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_FireEntityInput.input_name)
}
#if LANG_CXX11
inline void ToolEvent_FireEntityInput::set_input_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  input_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.ToolEvent_FireEntityInput.input_name)
}
#endif
inline void ToolEvent_FireEntityInput::set_input_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  input_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.ToolEvent_FireEntityInput.input_name)
}
inline void ToolEvent_FireEntityInput::set_input_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  input_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.ToolEvent_FireEntityInput.input_name)
}
inline ::std::string* ToolEvent_FireEntityInput::mutable_input_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.ToolEvent_FireEntityInput.input_name)
  return input_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ToolEvent_FireEntityInput::release_input_name() {
  // @@protoc_insertion_point(field_release:proto.dota.ToolEvent_FireEntityInput.input_name)
  if (!has_input_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return input_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ToolEvent_FireEntityInput::set_allocated_input_name(::std::string* input_name) {
  if (input_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  input_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.ToolEvent_FireEntityInput.input_name)
}

// optional string input_param = 4;
inline bool ToolEvent_FireEntityInput::has_input_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToolEvent_FireEntityInput::clear_input_param() {
  input_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ToolEvent_FireEntityInput::input_param() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_FireEntityInput.input_param)
  return input_param_.GetNoArena();
}
inline void ToolEvent_FireEntityInput::set_input_param(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  input_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_FireEntityInput.input_param)
}
#if LANG_CXX11
inline void ToolEvent_FireEntityInput::set_input_param(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  input_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.ToolEvent_FireEntityInput.input_param)
}
#endif
inline void ToolEvent_FireEntityInput::set_input_param(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  input_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.ToolEvent_FireEntityInput.input_param)
}
inline void ToolEvent_FireEntityInput::set_input_param(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  input_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.ToolEvent_FireEntityInput.input_param)
}
inline ::std::string* ToolEvent_FireEntityInput::mutable_input_param() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.ToolEvent_FireEntityInput.input_param)
  return input_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ToolEvent_FireEntityInput::release_input_param() {
  // @@protoc_insertion_point(field_release:proto.dota.ToolEvent_FireEntityInput.input_param)
  if (!has_input_param()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return input_param_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ToolEvent_FireEntityInput::set_allocated_input_param(::std::string* input_param) {
  if (input_param != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  input_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_param);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.ToolEvent_FireEntityInput.input_param)
}

// -------------------------------------------------------------------

// ToolEvent_SFMRecordingStateChanged

// optional bool isrecording = 1;
inline bool ToolEvent_SFMRecordingStateChanged::has_isrecording() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToolEvent_SFMRecordingStateChanged::clear_isrecording() {
  isrecording_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool ToolEvent_SFMRecordingStateChanged::isrecording() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_SFMRecordingStateChanged.isrecording)
  return isrecording_;
}
inline void ToolEvent_SFMRecordingStateChanged::set_isrecording(bool value) {
  _has_bits_[0] |= 0x00000001u;
  isrecording_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_SFMRecordingStateChanged.isrecording)
}

// -------------------------------------------------------------------

// ToolEvent_SFMToolActiveStateChanged

// optional bool isactive = 1;
inline bool ToolEvent_SFMToolActiveStateChanged::has_isactive() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToolEvent_SFMToolActiveStateChanged::clear_isactive() {
  isactive_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool ToolEvent_SFMToolActiveStateChanged::isactive() const {
  // @@protoc_insertion_point(field_get:proto.dota.ToolEvent_SFMToolActiveStateChanged.isactive)
  return isactive_;
}
inline void ToolEvent_SFMToolActiveStateChanged::set_isactive(bool value) {
  _has_bits_[0] |= 0x00000001u;
  isactive_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ToolEvent_SFMToolActiveStateChanged.isactive)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_gametoolevents_2eproto
