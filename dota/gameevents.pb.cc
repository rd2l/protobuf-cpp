// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gameevents.proto

#include "gameevents.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_gameevents_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSource1LegacyGameEventList_key_t_gameevents_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gameevents_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSource1LegacyGameEvent_key_t_gameevents_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gameevents_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgSource1LegacyGameEventList_descriptor_t_gameevents_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVector_networkbasetypes_2eproto;
namespace proto {
namespace dota {
class CMsgVDebugGameSessionIDEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgVDebugGameSessionIDEvent> _instance;
} _CMsgVDebugGameSessionIDEvent_default_instance_;
class CMsgPlaceDecalEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgPlaceDecalEvent> _instance;
} _CMsgPlaceDecalEvent_default_instance_;
class CMsgClearWorldDecalsEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClearWorldDecalsEvent> _instance;
} _CMsgClearWorldDecalsEvent_default_instance_;
class CMsgClearEntityDecalsEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClearEntityDecalsEvent> _instance;
} _CMsgClearEntityDecalsEvent_default_instance_;
class CMsgClearDecalsForSkeletonInstanceEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClearDecalsForSkeletonInstanceEvent> _instance;
} _CMsgClearDecalsForSkeletonInstanceEvent_default_instance_;
class CMsgSource1LegacyGameEventList_key_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSource1LegacyGameEventList_key_t> _instance;
} _CMsgSource1LegacyGameEventList_key_t_default_instance_;
class CMsgSource1LegacyGameEventList_descriptor_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSource1LegacyGameEventList_descriptor_t> _instance;
} _CMsgSource1LegacyGameEventList_descriptor_t_default_instance_;
class CMsgSource1LegacyGameEventListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSource1LegacyGameEventList> _instance;
} _CMsgSource1LegacyGameEventList_default_instance_;
class CMsgSource1LegacyListenEventsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSource1LegacyListenEvents> _instance;
} _CMsgSource1LegacyListenEvents_default_instance_;
class CMsgSource1LegacyGameEvent_key_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSource1LegacyGameEvent_key_t> _instance;
} _CMsgSource1LegacyGameEvent_key_t_default_instance_;
class CMsgSource1LegacyGameEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSource1LegacyGameEvent> _instance;
} _CMsgSource1LegacyGameEvent_default_instance_;
class CMsgSosStartSoundEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSosStartSoundEvent> _instance;
} _CMsgSosStartSoundEvent_default_instance_;
class CMsgSosStopSoundEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSosStopSoundEvent> _instance;
} _CMsgSosStopSoundEvent_default_instance_;
class CMsgSosStopSoundEventHashDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSosStopSoundEventHash> _instance;
} _CMsgSosStopSoundEventHash_default_instance_;
class CMsgSosSetSoundEventParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSosSetSoundEventParams> _instance;
} _CMsgSosSetSoundEventParams_default_instance_;
class CMsgSosSetLibraryStackFieldsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSosSetLibraryStackFields> _instance;
} _CMsgSosSetLibraryStackFields_default_instance_;
}  // namespace dota
}  // namespace proto
static void InitDefaultsCMsgVDebugGameSessionIDEvent_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgVDebugGameSessionIDEvent_default_instance_;
    new (ptr) ::proto::dota::CMsgVDebugGameSessionIDEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgVDebugGameSessionIDEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVDebugGameSessionIDEvent_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgVDebugGameSessionIDEvent_gameevents_2eproto}, {}};

static void InitDefaultsCMsgPlaceDecalEvent_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgPlaceDecalEvent_default_instance_;
    new (ptr) ::proto::dota::CMsgPlaceDecalEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgPlaceDecalEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgPlaceDecalEvent_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgPlaceDecalEvent_gameevents_2eproto}, {
      &scc_info_CMsgVector_networkbasetypes_2eproto.base,}};

static void InitDefaultsCMsgClearWorldDecalsEvent_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClearWorldDecalsEvent_default_instance_;
    new (ptr) ::proto::dota::CMsgClearWorldDecalsEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClearWorldDecalsEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClearWorldDecalsEvent_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClearWorldDecalsEvent_gameevents_2eproto}, {}};

static void InitDefaultsCMsgClearEntityDecalsEvent_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClearEntityDecalsEvent_default_instance_;
    new (ptr) ::proto::dota::CMsgClearEntityDecalsEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClearEntityDecalsEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClearEntityDecalsEvent_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClearEntityDecalsEvent_gameevents_2eproto}, {}};

static void InitDefaultsCMsgClearDecalsForSkeletonInstanceEvent_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClearDecalsForSkeletonInstanceEvent_default_instance_;
    new (ptr) ::proto::dota::CMsgClearDecalsForSkeletonInstanceEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClearDecalsForSkeletonInstanceEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClearDecalsForSkeletonInstanceEvent_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClearDecalsForSkeletonInstanceEvent_gameevents_2eproto}, {}};

static void InitDefaultsCMsgSource1LegacyGameEventList_key_t_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSource1LegacyGameEventList_key_t_default_instance_;
    new (ptr) ::proto::dota::CMsgSource1LegacyGameEventList_key_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSource1LegacyGameEventList_key_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSource1LegacyGameEventList_key_t_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSource1LegacyGameEventList_key_t_gameevents_2eproto}, {}};

static void InitDefaultsCMsgSource1LegacyGameEventList_descriptor_t_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSource1LegacyGameEventList_descriptor_t_default_instance_;
    new (ptr) ::proto::dota::CMsgSource1LegacyGameEventList_descriptor_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSource1LegacyGameEventList_descriptor_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgSource1LegacyGameEventList_descriptor_t_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgSource1LegacyGameEventList_descriptor_t_gameevents_2eproto}, {
      &scc_info_CMsgSource1LegacyGameEventList_key_t_gameevents_2eproto.base,}};

static void InitDefaultsCMsgSource1LegacyGameEventList_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSource1LegacyGameEventList_default_instance_;
    new (ptr) ::proto::dota::CMsgSource1LegacyGameEventList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSource1LegacyGameEventList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgSource1LegacyGameEventList_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgSource1LegacyGameEventList_gameevents_2eproto}, {
      &scc_info_CMsgSource1LegacyGameEventList_descriptor_t_gameevents_2eproto.base,}};

static void InitDefaultsCMsgSource1LegacyListenEvents_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSource1LegacyListenEvents_default_instance_;
    new (ptr) ::proto::dota::CMsgSource1LegacyListenEvents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSource1LegacyListenEvents::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSource1LegacyListenEvents_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSource1LegacyListenEvents_gameevents_2eproto}, {}};

static void InitDefaultsCMsgSource1LegacyGameEvent_key_t_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSource1LegacyGameEvent_key_t_default_instance_;
    new (ptr) ::proto::dota::CMsgSource1LegacyGameEvent_key_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSource1LegacyGameEvent_key_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSource1LegacyGameEvent_key_t_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSource1LegacyGameEvent_key_t_gameevents_2eproto}, {}};

static void InitDefaultsCMsgSource1LegacyGameEvent_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSource1LegacyGameEvent_default_instance_;
    new (ptr) ::proto::dota::CMsgSource1LegacyGameEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSource1LegacyGameEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgSource1LegacyGameEvent_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgSource1LegacyGameEvent_gameevents_2eproto}, {
      &scc_info_CMsgSource1LegacyGameEvent_key_t_gameevents_2eproto.base,}};

static void InitDefaultsCMsgSosStartSoundEvent_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSosStartSoundEvent_default_instance_;
    new (ptr) ::proto::dota::CMsgSosStartSoundEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSosStartSoundEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSosStartSoundEvent_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSosStartSoundEvent_gameevents_2eproto}, {}};

static void InitDefaultsCMsgSosStopSoundEvent_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSosStopSoundEvent_default_instance_;
    new (ptr) ::proto::dota::CMsgSosStopSoundEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSosStopSoundEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSosStopSoundEvent_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSosStopSoundEvent_gameevents_2eproto}, {}};

static void InitDefaultsCMsgSosStopSoundEventHash_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSosStopSoundEventHash_default_instance_;
    new (ptr) ::proto::dota::CMsgSosStopSoundEventHash();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSosStopSoundEventHash::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSosStopSoundEventHash_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSosStopSoundEventHash_gameevents_2eproto}, {}};

static void InitDefaultsCMsgSosSetSoundEventParams_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSosSetSoundEventParams_default_instance_;
    new (ptr) ::proto::dota::CMsgSosSetSoundEventParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSosSetSoundEventParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSosSetSoundEventParams_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSosSetSoundEventParams_gameevents_2eproto}, {}};

static void InitDefaultsCMsgSosSetLibraryStackFields_gameevents_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSosSetLibraryStackFields_default_instance_;
    new (ptr) ::proto::dota::CMsgSosSetLibraryStackFields();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSosSetLibraryStackFields::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSosSetLibraryStackFields_gameevents_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSosSetLibraryStackFields_gameevents_2eproto}, {}};

void InitDefaults_gameevents_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgVDebugGameSessionIDEvent_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgPlaceDecalEvent_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClearWorldDecalsEvent_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClearEntityDecalsEvent_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClearDecalsForSkeletonInstanceEvent_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSource1LegacyGameEventList_key_t_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSource1LegacyGameEventList_descriptor_t_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSource1LegacyGameEventList_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSource1LegacyListenEvents_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSource1LegacyGameEvent_key_t_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSource1LegacyGameEvent_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSosStartSoundEvent_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSosStopSoundEvent_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSosStopSoundEventHash_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSosSetSoundEventParams_gameevents_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSosSetLibraryStackFields_gameevents_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_gameevents_2eproto[16];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_gameevents_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_gameevents_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_gameevents_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgVDebugGameSessionIDEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgVDebugGameSessionIDEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgVDebugGameSessionIDEvent, clientid_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgVDebugGameSessionIDEvent, gamesessionid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, position_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, normal_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, saxis_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, decalmaterialindex_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, flags_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, color_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, width_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, height_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, depth_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, entityhandleindex_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, skeletoninstancehash_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, boneindex_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, translucenthit_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgPlaceDecalEvent, is_adjacent_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClearWorldDecalsEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClearWorldDecalsEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClearWorldDecalsEvent, flagstoclear_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClearEntityDecalsEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClearEntityDecalsEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClearEntityDecalsEvent, flagstoclear_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClearDecalsForSkeletonInstanceEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClearDecalsForSkeletonInstanceEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClearDecalsForSkeletonInstanceEvent, flagstoclear_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClearDecalsForSkeletonInstanceEvent, entityhandleindex_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClearDecalsForSkeletonInstanceEvent, skeletoninstancehash_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEventList_key_t, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEventList_key_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEventList_key_t, type_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEventList_key_t, name_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEventList_descriptor_t, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEventList_descriptor_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEventList_descriptor_t, eventid_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEventList_descriptor_t, name_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEventList_descriptor_t, keys_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEventList, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEventList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEventList, descriptors_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyListenEvents, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyListenEvents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyListenEvents, playerslot_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyListenEvents, eventarraybits_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent_key_t, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent_key_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent_key_t, type_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent_key_t, val_string_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent_key_t, val_float_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent_key_t, val_long_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent_key_t, val_short_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent_key_t, val_byte_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent_key_t, val_bool_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent_key_t, val_uint64_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent, event_name_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent, eventid_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSource1LegacyGameEvent, keys_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStartSoundEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStartSoundEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStartSoundEvent, soundevent_guid_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStartSoundEvent, soundevent_hash_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStartSoundEvent, source_entity_index_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStartSoundEvent, seed_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStartSoundEvent, packed_params_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStartSoundEvent, start_time_),
  1,
  2,
  3,
  4,
  0,
  5,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStopSoundEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStopSoundEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStopSoundEvent, soundevent_guid_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStopSoundEventHash, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStopSoundEventHash, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStopSoundEventHash, soundevent_hash_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosStopSoundEventHash, source_entity_index_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosSetSoundEventParams, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosSetSoundEventParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosSetSoundEventParams, soundevent_guid_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosSetSoundEventParams, packed_params_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosSetLibraryStackFields, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosSetLibraryStackFields, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosSetLibraryStackFields, stack_hash_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSosSetLibraryStackFields, packed_fields_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::proto::dota::CMsgVDebugGameSessionIDEvent)},
  { 9, 28, sizeof(::proto::dota::CMsgPlaceDecalEvent)},
  { 42, 48, sizeof(::proto::dota::CMsgClearWorldDecalsEvent)},
  { 49, 55, sizeof(::proto::dota::CMsgClearEntityDecalsEvent)},
  { 56, 64, sizeof(::proto::dota::CMsgClearDecalsForSkeletonInstanceEvent)},
  { 67, 74, sizeof(::proto::dota::CMsgSource1LegacyGameEventList_key_t)},
  { 76, 84, sizeof(::proto::dota::CMsgSource1LegacyGameEventList_descriptor_t)},
  { 87, 93, sizeof(::proto::dota::CMsgSource1LegacyGameEventList)},
  { 94, 101, sizeof(::proto::dota::CMsgSource1LegacyListenEvents)},
  { 103, 116, sizeof(::proto::dota::CMsgSource1LegacyGameEvent_key_t)},
  { 124, 132, sizeof(::proto::dota::CMsgSource1LegacyGameEvent)},
  { 135, 146, sizeof(::proto::dota::CMsgSosStartSoundEvent)},
  { 152, 158, sizeof(::proto::dota::CMsgSosStopSoundEvent)},
  { 159, 166, sizeof(::proto::dota::CMsgSosStopSoundEventHash)},
  { 168, 175, sizeof(::proto::dota::CMsgSosSetSoundEventParams)},
  { 177, 184, sizeof(::proto::dota::CMsgSosSetLibraryStackFields)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgVDebugGameSessionIDEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgPlaceDecalEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClearWorldDecalsEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClearEntityDecalsEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClearDecalsForSkeletonInstanceEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSource1LegacyGameEventList_key_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSource1LegacyGameEventList_descriptor_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSource1LegacyGameEventList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSource1LegacyListenEvents_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSource1LegacyGameEvent_key_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSource1LegacyGameEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSosStartSoundEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSosStopSoundEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSosStopSoundEventHash_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSosSetSoundEventParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSosSetLibraryStackFields_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_gameevents_2eproto = {
  {}, AddDescriptors_gameevents_2eproto, "gameevents.proto", schemas,
  file_default_instances, TableStruct_gameevents_2eproto::offsets,
  file_level_metadata_gameevents_2eproto, 16, file_level_enum_descriptors_gameevents_2eproto, file_level_service_descriptors_gameevents_2eproto,
};

const char descriptor_table_protodef_gameevents_2eproto[] =
  "\n\020gameevents.proto\022\nproto.dota\032\026networkb"
  "asetypes.proto\"G\n\034CMsgVDebugGameSessionI"
  "DEvent\022\020\n\010clientid\030\001 \001(\005\022\025\n\rgamesessioni"
  "d\030\002 \001(\t\"\357\002\n\023CMsgPlaceDecalEvent\022(\n\010posit"
  "ion\030\001 \001(\0132\026.proto.dota.CMsgVector\022&\n\006nor"
  "mal\030\002 \001(\0132\026.proto.dota.CMsgVector\022%\n\005sax"
  "is\030\003 \001(\0132\026.proto.dota.CMsgVector\022\032\n\022deca"
  "lmaterialindex\030\004 \001(\r\022\r\n\005flags\030\005 \001(\r\022\r\n\005c"
  "olor\030\006 \001(\007\022\r\n\005width\030\007 \001(\002\022\016\n\006height\030\010 \001("
  "\002\022\r\n\005depth\030\t \001(\002\022\031\n\021entityhandleindex\030\n "
  "\001(\r\022\034\n\024skeletoninstancehash\030\013 \001(\007\022\021\n\tbon"
  "eindex\030\014 \001(\005\022\026\n\016translucenthit\030\r \001(\010\022\023\n\013"
  "is_adjacent\030\016 \001(\010\"1\n\031CMsgClearWorldDecal"
  "sEvent\022\024\n\014flagstoclear\030\001 \001(\r\"2\n\032CMsgClea"
  "rEntityDecalsEvent\022\024\n\014flagstoclear\030\001 \001(\r"
  "\"x\n\'CMsgClearDecalsForSkeletonInstanceEv"
  "ent\022\024\n\014flagstoclear\030\001 \001(\r\022\031\n\021entityhandl"
  "eindex\030\002 \001(\r\022\034\n\024skeletoninstancehash\030\003 \001"
  "(\r\"\202\002\n\036CMsgSource1LegacyGameEventList\022L\n"
  "\013descriptors\030\001 \003(\01327.proto.dota.CMsgSour"
  "ce1LegacyGameEventList.descriptor_t\032#\n\005k"
  "ey_t\022\014\n\004type\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\032m\n\014desc"
  "riptor_t\022\017\n\007eventid\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022"
  ">\n\004keys\030\003 \003(\01320.proto.dota.CMsgSource1Le"
  "gacyGameEventList.key_t\"K\n\035CMsgSource1Le"
  "gacyListenEvents\022\022\n\nplayerslot\030\001 \001(\005\022\026\n\016"
  "eventarraybits\030\002 \003(\r\"\231\002\n\032CMsgSource1Lega"
  "cyGameEvent\022\022\n\nevent_name\030\001 \001(\t\022\017\n\007event"
  "id\030\002 \001(\005\022:\n\004keys\030\003 \003(\0132,.proto.dota.CMsg"
  "Source1LegacyGameEvent.key_t\032\231\001\n\005key_t\022\014"
  "\n\004type\030\001 \001(\005\022\022\n\nval_string\030\002 \001(\t\022\021\n\tval_"
  "float\030\003 \001(\002\022\020\n\010val_long\030\004 \001(\005\022\021\n\tval_sho"
  "rt\030\005 \001(\005\022\020\n\010val_byte\030\006 \001(\005\022\020\n\010val_bool\030\007"
  " \001(\010\022\022\n\nval_uint64\030\010 \001(\004\"\240\001\n\026CMsgSosStar"
  "tSoundEvent\022\027\n\017soundevent_guid\030\001 \001(\005\022\027\n\017"
  "soundevent_hash\030\002 \001(\007\022\033\n\023source_entity_i"
  "ndex\030\003 \001(\005\022\014\n\004seed\030\004 \001(\005\022\025\n\rpacked_param"
  "s\030\005 \001(\014\022\022\n\nstart_time\030\006 \001(\002\"0\n\025CMsgSosSt"
  "opSoundEvent\022\027\n\017soundevent_guid\030\001 \001(\005\"Q\n"
  "\031CMsgSosStopSoundEventHash\022\027\n\017soundevent"
  "_hash\030\001 \001(\007\022\033\n\023source_entity_index\030\002 \001(\005"
  "\"L\n\032CMsgSosSetSoundEventParams\022\027\n\017sounde"
  "vent_guid\030\001 \001(\005\022\025\n\rpacked_params\030\005 \001(\014\"I"
  "\n\034CMsgSosSetLibraryStackFields\022\022\n\nstack_"
  "hash\030\001 \001(\007\022\025\n\rpacked_fields\030\005 \001(\014*\267\003\n\017EB"
  "aseGameEvents\022 \n\033GE_VDebugGameSessionIDE"
  "vent\020\310\001\022\027\n\022GE_PlaceDecalEvent\020\311\001\022\035\n\030GE_C"
  "learWorldDecalsEvent\020\312\001\022\036\n\031GE_ClearEntit"
  "yDecalsEvent\020\313\001\022+\n&GE_ClearDecalsForSkel"
  "etonInstanceEvent\020\314\001\022\"\n\035GE_Source1Legacy"
  "GameEventList\020\315\001\022!\n\034GE_Source1LegacyList"
  "enEvents\020\316\001\022\036\n\031GE_Source1LegacyGameEvent"
  "\020\317\001\022\032\n\025GE_SosStartSoundEvent\020\320\001\022\031\n\024GE_So"
  "sStopSoundEvent\020\321\001\022\036\n\031GE_SosSetSoundEven"
  "tParams\020\322\001\022 \n\033GE_SosSetLibraryStackField"
  "s\020\323\001\022\035\n\030GE_SosStopSoundEventHash\020\324\001B\005H\001\200"
  "\001\000"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_gameevents_2eproto = {
  false, InitDefaults_gameevents_2eproto, 
  descriptor_table_protodef_gameevents_2eproto,
  "gameevents.proto", &assign_descriptors_table_gameevents_2eproto, 2242,
};

void AddDescriptors_gameevents_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_networkbasetypes_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_gameevents_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_gameevents_2eproto = []() { AddDescriptors_gameevents_2eproto(); return true; }();
namespace proto {
namespace dota {
const ::google::protobuf::EnumDescriptor* EBaseGameEvents_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_gameevents_2eproto);
  return file_level_enum_descriptors_gameevents_2eproto[0];
}
bool EBaseGameEvents_IsValid(int value) {
  switch (value) {
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CMsgVDebugGameSessionIDEvent::InitAsDefaultInstance() {
}
class CMsgVDebugGameSessionIDEvent::HasBitSetters {
 public:
  static void set_has_clientid(CMsgVDebugGameSessionIDEvent* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_gamesessionid(CMsgVDebugGameSessionIDEvent* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgVDebugGameSessionIDEvent::kClientidFieldNumber;
const int CMsgVDebugGameSessionIDEvent::kGamesessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgVDebugGameSessionIDEvent::CMsgVDebugGameSessionIDEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgVDebugGameSessionIDEvent)
}
CMsgVDebugGameSessionIDEvent::CMsgVDebugGameSessionIDEvent(const CMsgVDebugGameSessionIDEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gamesessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamesessionid()) {
    gamesessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamesessionid_);
  }
  clientid_ = from.clientid_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgVDebugGameSessionIDEvent)
}

void CMsgVDebugGameSessionIDEvent::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgVDebugGameSessionIDEvent_gameevents_2eproto.base);
  gamesessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientid_ = 0;
}

CMsgVDebugGameSessionIDEvent::~CMsgVDebugGameSessionIDEvent() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgVDebugGameSessionIDEvent)
  SharedDtor();
}

void CMsgVDebugGameSessionIDEvent::SharedDtor() {
  gamesessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgVDebugGameSessionIDEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgVDebugGameSessionIDEvent& CMsgVDebugGameSessionIDEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgVDebugGameSessionIDEvent_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgVDebugGameSessionIDEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgVDebugGameSessionIDEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    gamesessionid_.ClearNonDefaultToEmptyNoArena();
  }
  clientid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgVDebugGameSessionIDEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgVDebugGameSessionIDEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 clientid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_clientid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string gamesessionid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgVDebugGameSessionIDEvent.gamesessionid");
        object = msg->mutable_gamesessionid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgVDebugGameSessionIDEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgVDebugGameSessionIDEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 clientid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_clientid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gamesessionid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gamesessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gamesessionid().data(), static_cast<int>(this->gamesessionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgVDebugGameSessionIDEvent.gamesessionid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgVDebugGameSessionIDEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgVDebugGameSessionIDEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgVDebugGameSessionIDEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgVDebugGameSessionIDEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 clientid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->clientid(), output);
  }

  // optional string gamesessionid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamesessionid().data(), static_cast<int>(this->gamesessionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgVDebugGameSessionIDEvent.gamesessionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gamesessionid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgVDebugGameSessionIDEvent)
}

::google::protobuf::uint8* CMsgVDebugGameSessionIDEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgVDebugGameSessionIDEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 clientid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->clientid(), target);
  }

  // optional string gamesessionid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamesessionid().data(), static_cast<int>(this->gamesessionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgVDebugGameSessionIDEvent.gamesessionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gamesessionid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgVDebugGameSessionIDEvent)
  return target;
}

size_t CMsgVDebugGameSessionIDEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgVDebugGameSessionIDEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string gamesessionid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gamesessionid());
    }

    // optional int32 clientid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clientid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgVDebugGameSessionIDEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgVDebugGameSessionIDEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgVDebugGameSessionIDEvent* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgVDebugGameSessionIDEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgVDebugGameSessionIDEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgVDebugGameSessionIDEvent)
    MergeFrom(*source);
  }
}

void CMsgVDebugGameSessionIDEvent::MergeFrom(const CMsgVDebugGameSessionIDEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgVDebugGameSessionIDEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      gamesessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamesessionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      clientid_ = from.clientid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgVDebugGameSessionIDEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgVDebugGameSessionIDEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgVDebugGameSessionIDEvent::CopyFrom(const CMsgVDebugGameSessionIDEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgVDebugGameSessionIDEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgVDebugGameSessionIDEvent::IsInitialized() const {
  return true;
}

void CMsgVDebugGameSessionIDEvent::Swap(CMsgVDebugGameSessionIDEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgVDebugGameSessionIDEvent::InternalSwap(CMsgVDebugGameSessionIDEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  gamesessionid_.Swap(&other->gamesessionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clientid_, other->clientid_);
}

::google::protobuf::Metadata CMsgVDebugGameSessionIDEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgPlaceDecalEvent::InitAsDefaultInstance() {
  ::proto::dota::_CMsgPlaceDecalEvent_default_instance_._instance.get_mutable()->position_ = const_cast< ::proto::dota::CMsgVector*>(
      ::proto::dota::CMsgVector::internal_default_instance());
  ::proto::dota::_CMsgPlaceDecalEvent_default_instance_._instance.get_mutable()->normal_ = const_cast< ::proto::dota::CMsgVector*>(
      ::proto::dota::CMsgVector::internal_default_instance());
  ::proto::dota::_CMsgPlaceDecalEvent_default_instance_._instance.get_mutable()->saxis_ = const_cast< ::proto::dota::CMsgVector*>(
      ::proto::dota::CMsgVector::internal_default_instance());
}
class CMsgPlaceDecalEvent::HasBitSetters {
 public:
  static const ::proto::dota::CMsgVector& position(const CMsgPlaceDecalEvent* msg);
  static void set_has_position(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::proto::dota::CMsgVector& normal(const CMsgPlaceDecalEvent* msg);
  static void set_has_normal(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::proto::dota::CMsgVector& saxis(const CMsgPlaceDecalEvent* msg);
  static void set_has_saxis(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_decalmaterialindex(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_flags(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_color(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_width(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_height(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_depth(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_entityhandleindex(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_skeletoninstancehash(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00000400u;
  }
  static void set_has_boneindex(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00000800u;
  }
  static void set_has_translucenthit(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00001000u;
  }
  static void set_has_is_adjacent(CMsgPlaceDecalEvent* msg) {
    msg->_has_bits_[0] |= 0x00002000u;
  }
};

const ::proto::dota::CMsgVector&
CMsgPlaceDecalEvent::HasBitSetters::position(const CMsgPlaceDecalEvent* msg) {
  return *msg->position_;
}
const ::proto::dota::CMsgVector&
CMsgPlaceDecalEvent::HasBitSetters::normal(const CMsgPlaceDecalEvent* msg) {
  return *msg->normal_;
}
const ::proto::dota::CMsgVector&
CMsgPlaceDecalEvent::HasBitSetters::saxis(const CMsgPlaceDecalEvent* msg) {
  return *msg->saxis_;
}
void CMsgPlaceDecalEvent::clear_position() {
  if (position_ != nullptr) position_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgPlaceDecalEvent::clear_normal() {
  if (normal_ != nullptr) normal_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgPlaceDecalEvent::clear_saxis() {
  if (saxis_ != nullptr) saxis_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgPlaceDecalEvent::kPositionFieldNumber;
const int CMsgPlaceDecalEvent::kNormalFieldNumber;
const int CMsgPlaceDecalEvent::kSaxisFieldNumber;
const int CMsgPlaceDecalEvent::kDecalmaterialindexFieldNumber;
const int CMsgPlaceDecalEvent::kFlagsFieldNumber;
const int CMsgPlaceDecalEvent::kColorFieldNumber;
const int CMsgPlaceDecalEvent::kWidthFieldNumber;
const int CMsgPlaceDecalEvent::kHeightFieldNumber;
const int CMsgPlaceDecalEvent::kDepthFieldNumber;
const int CMsgPlaceDecalEvent::kEntityhandleindexFieldNumber;
const int CMsgPlaceDecalEvent::kSkeletoninstancehashFieldNumber;
const int CMsgPlaceDecalEvent::kBoneindexFieldNumber;
const int CMsgPlaceDecalEvent::kTranslucenthitFieldNumber;
const int CMsgPlaceDecalEvent::kIsAdjacentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgPlaceDecalEvent::CMsgPlaceDecalEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgPlaceDecalEvent)
}
CMsgPlaceDecalEvent::CMsgPlaceDecalEvent(const CMsgPlaceDecalEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::proto::dota::CMsgVector(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from.has_normal()) {
    normal_ = new ::proto::dota::CMsgVector(*from.normal_);
  } else {
    normal_ = nullptr;
  }
  if (from.has_saxis()) {
    saxis_ = new ::proto::dota::CMsgVector(*from.saxis_);
  } else {
    saxis_ = nullptr;
  }
  ::memcpy(&decalmaterialindex_, &from.decalmaterialindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_adjacent_) -
    reinterpret_cast<char*>(&decalmaterialindex_)) + sizeof(is_adjacent_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgPlaceDecalEvent)
}

void CMsgPlaceDecalEvent::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgPlaceDecalEvent_gameevents_2eproto.base);
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_adjacent_) -
      reinterpret_cast<char*>(&position_)) + sizeof(is_adjacent_));
}

CMsgPlaceDecalEvent::~CMsgPlaceDecalEvent() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgPlaceDecalEvent)
  SharedDtor();
}

void CMsgPlaceDecalEvent::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete normal_;
  if (this != internal_default_instance()) delete saxis_;
}

void CMsgPlaceDecalEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgPlaceDecalEvent& CMsgPlaceDecalEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgPlaceDecalEvent_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgPlaceDecalEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgPlaceDecalEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(position_ != nullptr);
      position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(normal_ != nullptr);
      normal_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(saxis_ != nullptr);
      saxis_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&decalmaterialindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&decalmaterialindex_)) + sizeof(height_));
  }
  if (cached_has_bits & 0x00003f00u) {
    ::memset(&depth_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_adjacent_) -
        reinterpret_cast<char*>(&depth_)) + sizeof(is_adjacent_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgPlaceDecalEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgPlaceDecalEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgVector position = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CMsgVector::_InternalParse;
        object = msg->mutable_position();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional .proto.dota.CMsgVector normal = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CMsgVector::_InternalParse;
        object = msg->mutable_normal();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional .proto.dota.CMsgVector saxis = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CMsgVector::_InternalParse;
        object = msg->mutable_saxis();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional uint32 decalmaterialindex = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_decalmaterialindex(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 flags = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed32 color = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 53) goto handle_unusual;
        msg->set_color(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // optional float width = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 61) goto handle_unusual;
        msg->set_width(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // optional float height = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 69) goto handle_unusual;
        msg->set_height(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // optional float depth = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 77) goto handle_unusual;
        msg->set_depth(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // optional uint32 entityhandleindex = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_entityhandleindex(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed32 skeletoninstancehash = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 93) goto handle_unusual;
        msg->set_skeletoninstancehash(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // optional int32 boneindex = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_boneindex(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool translucenthit = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_translucenthit(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool is_adjacent = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        msg->set_is_adjacent(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgPlaceDecalEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgPlaceDecalEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgVector position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.CMsgVector normal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_normal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.CMsgVector saxis = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_saxis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 decalmaterialindex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_decalmaterialindex(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &decalmaterialindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 color = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (53 & 0xFF)) {
          HasBitSetters::set_has_color(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float width = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (61 & 0xFF)) {
          HasBitSetters::set_has_width(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float height = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (69 & 0xFF)) {
          HasBitSetters::set_has_height(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float depth = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (77 & 0xFF)) {
          HasBitSetters::set_has_depth(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 entityhandleindex = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          HasBitSetters::set_has_entityhandleindex(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityhandleindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 skeletoninstancehash = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (93 & 0xFF)) {
          HasBitSetters::set_has_skeletoninstancehash(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &skeletoninstancehash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 boneindex = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {
          HasBitSetters::set_has_boneindex(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boneindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool translucenthit = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {
          HasBitSetters::set_has_translucenthit(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &translucenthit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_adjacent = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {
          HasBitSetters::set_has_is_adjacent(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_adjacent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgPlaceDecalEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgPlaceDecalEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgPlaceDecalEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgPlaceDecalEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgVector position = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::position(this), output);
  }

  // optional .proto.dota.CMsgVector normal = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::normal(this), output);
  }

  // optional .proto.dota.CMsgVector saxis = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::saxis(this), output);
  }

  // optional uint32 decalmaterialindex = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->decalmaterialindex(), output);
  }

  // optional uint32 flags = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->flags(), output);
  }

  // optional fixed32 color = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(6, this->color(), output);
  }

  // optional float width = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->width(), output);
  }

  // optional float height = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->height(), output);
  }

  // optional float depth = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->depth(), output);
  }

  // optional uint32 entityhandleindex = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->entityhandleindex(), output);
  }

  // optional fixed32 skeletoninstancehash = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(11, this->skeletoninstancehash(), output);
  }

  // optional int32 boneindex = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->boneindex(), output);
  }

  // optional bool translucenthit = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->translucenthit(), output);
  }

  // optional bool is_adjacent = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->is_adjacent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgPlaceDecalEvent)
}

::google::protobuf::uint8* CMsgPlaceDecalEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgPlaceDecalEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgVector position = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::position(this), target);
  }

  // optional .proto.dota.CMsgVector normal = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::normal(this), target);
  }

  // optional .proto.dota.CMsgVector saxis = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::saxis(this), target);
  }

  // optional uint32 decalmaterialindex = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->decalmaterialindex(), target);
  }

  // optional uint32 flags = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->flags(), target);
  }

  // optional fixed32 color = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(6, this->color(), target);
  }

  // optional float width = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->width(), target);
  }

  // optional float height = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->height(), target);
  }

  // optional float depth = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->depth(), target);
  }

  // optional uint32 entityhandleindex = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->entityhandleindex(), target);
  }

  // optional fixed32 skeletoninstancehash = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(11, this->skeletoninstancehash(), target);
  }

  // optional int32 boneindex = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->boneindex(), target);
  }

  // optional bool translucenthit = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->translucenthit(), target);
  }

  // optional bool is_adjacent = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->is_adjacent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgPlaceDecalEvent)
  return target;
}

size_t CMsgPlaceDecalEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgPlaceDecalEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .proto.dota.CMsgVector position = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *position_);
    }

    // optional .proto.dota.CMsgVector normal = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *normal_);
    }

    // optional .proto.dota.CMsgVector saxis = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *saxis_);
    }

    // optional uint32 decalmaterialindex = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->decalmaterialindex());
    }

    // optional uint32 flags = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

    // optional fixed32 color = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 4;
    }

    // optional float width = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 4;
    }

    // optional float height = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 4;
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional float depth = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 4;
    }

    // optional uint32 entityhandleindex = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->entityhandleindex());
    }

    // optional fixed32 skeletoninstancehash = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 4;
    }

    // optional int32 boneindex = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boneindex());
    }

    // optional bool translucenthit = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional bool is_adjacent = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPlaceDecalEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgPlaceDecalEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPlaceDecalEvent* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgPlaceDecalEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgPlaceDecalEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgPlaceDecalEvent)
    MergeFrom(*source);
  }
}

void CMsgPlaceDecalEvent::MergeFrom(const CMsgPlaceDecalEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgPlaceDecalEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position()->::proto::dota::CMsgVector::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_normal()->::proto::dota::CMsgVector::MergeFrom(from.normal());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_saxis()->::proto::dota::CMsgVector::MergeFrom(from.saxis());
    }
    if (cached_has_bits & 0x00000008u) {
      decalmaterialindex_ = from.decalmaterialindex_;
    }
    if (cached_has_bits & 0x00000010u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000020u) {
      color_ = from.color_;
    }
    if (cached_has_bits & 0x00000040u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000080u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      depth_ = from.depth_;
    }
    if (cached_has_bits & 0x00000200u) {
      entityhandleindex_ = from.entityhandleindex_;
    }
    if (cached_has_bits & 0x00000400u) {
      skeletoninstancehash_ = from.skeletoninstancehash_;
    }
    if (cached_has_bits & 0x00000800u) {
      boneindex_ = from.boneindex_;
    }
    if (cached_has_bits & 0x00001000u) {
      translucenthit_ = from.translucenthit_;
    }
    if (cached_has_bits & 0x00002000u) {
      is_adjacent_ = from.is_adjacent_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgPlaceDecalEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgPlaceDecalEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPlaceDecalEvent::CopyFrom(const CMsgPlaceDecalEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgPlaceDecalEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPlaceDecalEvent::IsInitialized() const {
  return true;
}

void CMsgPlaceDecalEvent::Swap(CMsgPlaceDecalEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgPlaceDecalEvent::InternalSwap(CMsgPlaceDecalEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(position_, other->position_);
  swap(normal_, other->normal_);
  swap(saxis_, other->saxis_);
  swap(decalmaterialindex_, other->decalmaterialindex_);
  swap(flags_, other->flags_);
  swap(color_, other->color_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(depth_, other->depth_);
  swap(entityhandleindex_, other->entityhandleindex_);
  swap(skeletoninstancehash_, other->skeletoninstancehash_);
  swap(boneindex_, other->boneindex_);
  swap(translucenthit_, other->translucenthit_);
  swap(is_adjacent_, other->is_adjacent_);
}

::google::protobuf::Metadata CMsgPlaceDecalEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClearWorldDecalsEvent::InitAsDefaultInstance() {
}
class CMsgClearWorldDecalsEvent::HasBitSetters {
 public:
  static void set_has_flagstoclear(CMsgClearWorldDecalsEvent* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClearWorldDecalsEvent::kFlagstoclearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClearWorldDecalsEvent::CMsgClearWorldDecalsEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClearWorldDecalsEvent)
}
CMsgClearWorldDecalsEvent::CMsgClearWorldDecalsEvent(const CMsgClearWorldDecalsEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flagstoclear_ = from.flagstoclear_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClearWorldDecalsEvent)
}

void CMsgClearWorldDecalsEvent::SharedCtor() {
  flagstoclear_ = 0u;
}

CMsgClearWorldDecalsEvent::~CMsgClearWorldDecalsEvent() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClearWorldDecalsEvent)
  SharedDtor();
}

void CMsgClearWorldDecalsEvent::SharedDtor() {
}

void CMsgClearWorldDecalsEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClearWorldDecalsEvent& CMsgClearWorldDecalsEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClearWorldDecalsEvent_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgClearWorldDecalsEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClearWorldDecalsEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flagstoclear_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClearWorldDecalsEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClearWorldDecalsEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 flagstoclear = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_flagstoclear(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClearWorldDecalsEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClearWorldDecalsEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 flagstoclear = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_flagstoclear(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flagstoclear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClearWorldDecalsEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClearWorldDecalsEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClearWorldDecalsEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClearWorldDecalsEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 flagstoclear = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flagstoclear(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClearWorldDecalsEvent)
}

::google::protobuf::uint8* CMsgClearWorldDecalsEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClearWorldDecalsEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 flagstoclear = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flagstoclear(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClearWorldDecalsEvent)
  return target;
}

size_t CMsgClearWorldDecalsEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClearWorldDecalsEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 flagstoclear = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flagstoclear());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClearWorldDecalsEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClearWorldDecalsEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClearWorldDecalsEvent* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClearWorldDecalsEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClearWorldDecalsEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClearWorldDecalsEvent)
    MergeFrom(*source);
  }
}

void CMsgClearWorldDecalsEvent::MergeFrom(const CMsgClearWorldDecalsEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClearWorldDecalsEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_flagstoclear()) {
    set_flagstoclear(from.flagstoclear());
  }
}

void CMsgClearWorldDecalsEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClearWorldDecalsEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClearWorldDecalsEvent::CopyFrom(const CMsgClearWorldDecalsEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClearWorldDecalsEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClearWorldDecalsEvent::IsInitialized() const {
  return true;
}

void CMsgClearWorldDecalsEvent::Swap(CMsgClearWorldDecalsEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClearWorldDecalsEvent::InternalSwap(CMsgClearWorldDecalsEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(flagstoclear_, other->flagstoclear_);
}

::google::protobuf::Metadata CMsgClearWorldDecalsEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClearEntityDecalsEvent::InitAsDefaultInstance() {
}
class CMsgClearEntityDecalsEvent::HasBitSetters {
 public:
  static void set_has_flagstoclear(CMsgClearEntityDecalsEvent* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClearEntityDecalsEvent::kFlagstoclearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClearEntityDecalsEvent::CMsgClearEntityDecalsEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClearEntityDecalsEvent)
}
CMsgClearEntityDecalsEvent::CMsgClearEntityDecalsEvent(const CMsgClearEntityDecalsEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flagstoclear_ = from.flagstoclear_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClearEntityDecalsEvent)
}

void CMsgClearEntityDecalsEvent::SharedCtor() {
  flagstoclear_ = 0u;
}

CMsgClearEntityDecalsEvent::~CMsgClearEntityDecalsEvent() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClearEntityDecalsEvent)
  SharedDtor();
}

void CMsgClearEntityDecalsEvent::SharedDtor() {
}

void CMsgClearEntityDecalsEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClearEntityDecalsEvent& CMsgClearEntityDecalsEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClearEntityDecalsEvent_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgClearEntityDecalsEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClearEntityDecalsEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flagstoclear_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClearEntityDecalsEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClearEntityDecalsEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 flagstoclear = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_flagstoclear(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClearEntityDecalsEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClearEntityDecalsEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 flagstoclear = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_flagstoclear(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flagstoclear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClearEntityDecalsEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClearEntityDecalsEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClearEntityDecalsEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClearEntityDecalsEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 flagstoclear = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flagstoclear(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClearEntityDecalsEvent)
}

::google::protobuf::uint8* CMsgClearEntityDecalsEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClearEntityDecalsEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 flagstoclear = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flagstoclear(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClearEntityDecalsEvent)
  return target;
}

size_t CMsgClearEntityDecalsEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClearEntityDecalsEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 flagstoclear = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flagstoclear());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClearEntityDecalsEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClearEntityDecalsEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClearEntityDecalsEvent* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClearEntityDecalsEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClearEntityDecalsEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClearEntityDecalsEvent)
    MergeFrom(*source);
  }
}

void CMsgClearEntityDecalsEvent::MergeFrom(const CMsgClearEntityDecalsEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClearEntityDecalsEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_flagstoclear()) {
    set_flagstoclear(from.flagstoclear());
  }
}

void CMsgClearEntityDecalsEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClearEntityDecalsEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClearEntityDecalsEvent::CopyFrom(const CMsgClearEntityDecalsEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClearEntityDecalsEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClearEntityDecalsEvent::IsInitialized() const {
  return true;
}

void CMsgClearEntityDecalsEvent::Swap(CMsgClearEntityDecalsEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClearEntityDecalsEvent::InternalSwap(CMsgClearEntityDecalsEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(flagstoclear_, other->flagstoclear_);
}

::google::protobuf::Metadata CMsgClearEntityDecalsEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClearDecalsForSkeletonInstanceEvent::InitAsDefaultInstance() {
}
class CMsgClearDecalsForSkeletonInstanceEvent::HasBitSetters {
 public:
  static void set_has_flagstoclear(CMsgClearDecalsForSkeletonInstanceEvent* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_entityhandleindex(CMsgClearDecalsForSkeletonInstanceEvent* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_skeletoninstancehash(CMsgClearDecalsForSkeletonInstanceEvent* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClearDecalsForSkeletonInstanceEvent::kFlagstoclearFieldNumber;
const int CMsgClearDecalsForSkeletonInstanceEvent::kEntityhandleindexFieldNumber;
const int CMsgClearDecalsForSkeletonInstanceEvent::kSkeletoninstancehashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClearDecalsForSkeletonInstanceEvent::CMsgClearDecalsForSkeletonInstanceEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
}
CMsgClearDecalsForSkeletonInstanceEvent::CMsgClearDecalsForSkeletonInstanceEvent(const CMsgClearDecalsForSkeletonInstanceEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&flagstoclear_, &from.flagstoclear_,
    static_cast<size_t>(reinterpret_cast<char*>(&skeletoninstancehash_) -
    reinterpret_cast<char*>(&flagstoclear_)) + sizeof(skeletoninstancehash_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
}

void CMsgClearDecalsForSkeletonInstanceEvent::SharedCtor() {
  ::memset(&flagstoclear_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skeletoninstancehash_) -
      reinterpret_cast<char*>(&flagstoclear_)) + sizeof(skeletoninstancehash_));
}

CMsgClearDecalsForSkeletonInstanceEvent::~CMsgClearDecalsForSkeletonInstanceEvent() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
  SharedDtor();
}

void CMsgClearDecalsForSkeletonInstanceEvent::SharedDtor() {
}

void CMsgClearDecalsForSkeletonInstanceEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClearDecalsForSkeletonInstanceEvent& CMsgClearDecalsForSkeletonInstanceEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClearDecalsForSkeletonInstanceEvent_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgClearDecalsForSkeletonInstanceEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&flagstoclear_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&skeletoninstancehash_) -
        reinterpret_cast<char*>(&flagstoclear_)) + sizeof(skeletoninstancehash_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClearDecalsForSkeletonInstanceEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClearDecalsForSkeletonInstanceEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 flagstoclear = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_flagstoclear(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 entityhandleindex = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_entityhandleindex(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 skeletoninstancehash = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_skeletoninstancehash(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClearDecalsForSkeletonInstanceEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 flagstoclear = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_flagstoclear(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flagstoclear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 entityhandleindex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_entityhandleindex(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityhandleindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 skeletoninstancehash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_skeletoninstancehash(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skeletoninstancehash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClearDecalsForSkeletonInstanceEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 flagstoclear = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flagstoclear(), output);
  }

  // optional uint32 entityhandleindex = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entityhandleindex(), output);
  }

  // optional uint32 skeletoninstancehash = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->skeletoninstancehash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
}

::google::protobuf::uint8* CMsgClearDecalsForSkeletonInstanceEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 flagstoclear = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flagstoclear(), target);
  }

  // optional uint32 entityhandleindex = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entityhandleindex(), target);
  }

  // optional uint32 skeletoninstancehash = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->skeletoninstancehash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
  return target;
}

size_t CMsgClearDecalsForSkeletonInstanceEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 flagstoclear = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flagstoclear());
    }

    // optional uint32 entityhandleindex = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->entityhandleindex());
    }

    // optional uint32 skeletoninstancehash = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skeletoninstancehash());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClearDecalsForSkeletonInstanceEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClearDecalsForSkeletonInstanceEvent* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClearDecalsForSkeletonInstanceEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
    MergeFrom(*source);
  }
}

void CMsgClearDecalsForSkeletonInstanceEvent::MergeFrom(const CMsgClearDecalsForSkeletonInstanceEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      flagstoclear_ = from.flagstoclear_;
    }
    if (cached_has_bits & 0x00000002u) {
      entityhandleindex_ = from.entityhandleindex_;
    }
    if (cached_has_bits & 0x00000004u) {
      skeletoninstancehash_ = from.skeletoninstancehash_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClearDecalsForSkeletonInstanceEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClearDecalsForSkeletonInstanceEvent::CopyFrom(const CMsgClearDecalsForSkeletonInstanceEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClearDecalsForSkeletonInstanceEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClearDecalsForSkeletonInstanceEvent::IsInitialized() const {
  return true;
}

void CMsgClearDecalsForSkeletonInstanceEvent::Swap(CMsgClearDecalsForSkeletonInstanceEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClearDecalsForSkeletonInstanceEvent::InternalSwap(CMsgClearDecalsForSkeletonInstanceEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(flagstoclear_, other->flagstoclear_);
  swap(entityhandleindex_, other->entityhandleindex_);
  swap(skeletoninstancehash_, other->skeletoninstancehash_);
}

::google::protobuf::Metadata CMsgClearDecalsForSkeletonInstanceEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSource1LegacyGameEventList_key_t::InitAsDefaultInstance() {
}
class CMsgSource1LegacyGameEventList_key_t::HasBitSetters {
 public:
  static void set_has_type(CMsgSource1LegacyGameEventList_key_t* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_name(CMsgSource1LegacyGameEventList_key_t* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSource1LegacyGameEventList_key_t::kTypeFieldNumber;
const int CMsgSource1LegacyGameEventList_key_t::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSource1LegacyGameEventList_key_t::CMsgSource1LegacyGameEventList_key_t()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSource1LegacyGameEventList.key_t)
}
CMsgSource1LegacyGameEventList_key_t::CMsgSource1LegacyGameEventList_key_t(const CMsgSource1LegacyGameEventList_key_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSource1LegacyGameEventList.key_t)
}

void CMsgSource1LegacyGameEventList_key_t::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgSource1LegacyGameEventList_key_t_gameevents_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

CMsgSource1LegacyGameEventList_key_t::~CMsgSource1LegacyGameEventList_key_t() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSource1LegacyGameEventList.key_t)
  SharedDtor();
}

void CMsgSource1LegacyGameEventList_key_t::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSource1LegacyGameEventList_key_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSource1LegacyGameEventList_key_t& CMsgSource1LegacyGameEventList_key_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSource1LegacyGameEventList_key_t_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgSource1LegacyGameEventList_key_t::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSource1LegacyGameEventList.key_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSource1LegacyGameEventList_key_t::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSource1LegacyGameEventList_key_t*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgSource1LegacyGameEventList.key_t.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSource1LegacyGameEventList_key_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSource1LegacyGameEventList.key_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgSource1LegacyGameEventList.key_t.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSource1LegacyGameEventList.key_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSource1LegacyGameEventList.key_t)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSource1LegacyGameEventList_key_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSource1LegacyGameEventList.key_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgSource1LegacyGameEventList.key_t.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSource1LegacyGameEventList.key_t)
}

::google::protobuf::uint8* CMsgSource1LegacyGameEventList_key_t::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSource1LegacyGameEventList.key_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgSource1LegacyGameEventList.key_t.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSource1LegacyGameEventList.key_t)
  return target;
}

size_t CMsgSource1LegacyGameEventList_key_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSource1LegacyGameEventList.key_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSource1LegacyGameEventList_key_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSource1LegacyGameEventList.key_t)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSource1LegacyGameEventList_key_t* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSource1LegacyGameEventList_key_t>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSource1LegacyGameEventList.key_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSource1LegacyGameEventList.key_t)
    MergeFrom(*source);
  }
}

void CMsgSource1LegacyGameEventList_key_t::MergeFrom(const CMsgSource1LegacyGameEventList_key_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSource1LegacyGameEventList.key_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSource1LegacyGameEventList_key_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSource1LegacyGameEventList.key_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSource1LegacyGameEventList_key_t::CopyFrom(const CMsgSource1LegacyGameEventList_key_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSource1LegacyGameEventList.key_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSource1LegacyGameEventList_key_t::IsInitialized() const {
  return true;
}

void CMsgSource1LegacyGameEventList_key_t::Swap(CMsgSource1LegacyGameEventList_key_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSource1LegacyGameEventList_key_t::InternalSwap(CMsgSource1LegacyGameEventList_key_t* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
}

::google::protobuf::Metadata CMsgSource1LegacyGameEventList_key_t::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSource1LegacyGameEventList_descriptor_t::InitAsDefaultInstance() {
}
class CMsgSource1LegacyGameEventList_descriptor_t::HasBitSetters {
 public:
  static void set_has_eventid(CMsgSource1LegacyGameEventList_descriptor_t* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_name(CMsgSource1LegacyGameEventList_descriptor_t* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSource1LegacyGameEventList_descriptor_t::kEventidFieldNumber;
const int CMsgSource1LegacyGameEventList_descriptor_t::kNameFieldNumber;
const int CMsgSource1LegacyGameEventList_descriptor_t::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSource1LegacyGameEventList_descriptor_t::CMsgSource1LegacyGameEventList_descriptor_t()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
}
CMsgSource1LegacyGameEventList_descriptor_t::CMsgSource1LegacyGameEventList_descriptor_t(const CMsgSource1LegacyGameEventList_descriptor_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  eventid_ = from.eventid_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
}

void CMsgSource1LegacyGameEventList_descriptor_t::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgSource1LegacyGameEventList_descriptor_t_gameevents_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eventid_ = 0;
}

CMsgSource1LegacyGameEventList_descriptor_t::~CMsgSource1LegacyGameEventList_descriptor_t() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
  SharedDtor();
}

void CMsgSource1LegacyGameEventList_descriptor_t::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSource1LegacyGameEventList_descriptor_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSource1LegacyGameEventList_descriptor_t& CMsgSource1LegacyGameEventList_descriptor_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSource1LegacyGameEventList_descriptor_t_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgSource1LegacyGameEventList_descriptor_t::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  eventid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSource1LegacyGameEventList_descriptor_t::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSource1LegacyGameEventList_descriptor_t*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eventid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eventid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgSource1LegacyGameEventList.descriptor_t.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .proto.dota.CMsgSource1LegacyGameEventList.key_t keys = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgSource1LegacyGameEventList_key_t::_InternalParse;
          object = msg->add_keys();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSource1LegacyGameEventList_descriptor_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eventid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eventid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eventid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgSource1LegacyGameEventList.descriptor_t.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgSource1LegacyGameEventList.key_t keys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSource1LegacyGameEventList_descriptor_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eventid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eventid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgSource1LegacyGameEventList.descriptor_t.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .proto.dota.CMsgSource1LegacyGameEventList.key_t keys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->keys(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
}

::google::protobuf::uint8* CMsgSource1LegacyGameEventList_descriptor_t::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eventid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eventid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgSource1LegacyGameEventList.descriptor_t.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .proto.dota.CMsgSource1LegacyGameEventList.key_t keys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->keys(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
  return target;
}

size_t CMsgSource1LegacyGameEventList_descriptor_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgSource1LegacyGameEventList.key_t keys = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 eventid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eventid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSource1LegacyGameEventList_descriptor_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSource1LegacyGameEventList_descriptor_t* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSource1LegacyGameEventList_descriptor_t>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
    MergeFrom(*source);
  }
}

void CMsgSource1LegacyGameEventList_descriptor_t::MergeFrom(const CMsgSource1LegacyGameEventList_descriptor_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      eventid_ = from.eventid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSource1LegacyGameEventList_descriptor_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSource1LegacyGameEventList_descriptor_t::CopyFrom(const CMsgSource1LegacyGameEventList_descriptor_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSource1LegacyGameEventList.descriptor_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSource1LegacyGameEventList_descriptor_t::IsInitialized() const {
  return true;
}

void CMsgSource1LegacyGameEventList_descriptor_t::Swap(CMsgSource1LegacyGameEventList_descriptor_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSource1LegacyGameEventList_descriptor_t::InternalSwap(CMsgSource1LegacyGameEventList_descriptor_t* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eventid_, other->eventid_);
}

::google::protobuf::Metadata CMsgSource1LegacyGameEventList_descriptor_t::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSource1LegacyGameEventList::InitAsDefaultInstance() {
}
class CMsgSource1LegacyGameEventList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSource1LegacyGameEventList::kDescriptorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSource1LegacyGameEventList::CMsgSource1LegacyGameEventList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSource1LegacyGameEventList)
}
CMsgSource1LegacyGameEventList::CMsgSource1LegacyGameEventList(const CMsgSource1LegacyGameEventList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      descriptors_(from.descriptors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSource1LegacyGameEventList)
}

void CMsgSource1LegacyGameEventList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgSource1LegacyGameEventList_gameevents_2eproto.base);
}

CMsgSource1LegacyGameEventList::~CMsgSource1LegacyGameEventList() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSource1LegacyGameEventList)
  SharedDtor();
}

void CMsgSource1LegacyGameEventList::SharedDtor() {
}

void CMsgSource1LegacyGameEventList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSource1LegacyGameEventList& CMsgSource1LegacyGameEventList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSource1LegacyGameEventList_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgSource1LegacyGameEventList::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSource1LegacyGameEventList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  descriptors_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSource1LegacyGameEventList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSource1LegacyGameEventList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.dota.CMsgSource1LegacyGameEventList.descriptor_t descriptors = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgSource1LegacyGameEventList_descriptor_t::_InternalParse;
          object = msg->add_descriptors();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSource1LegacyGameEventList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSource1LegacyGameEventList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CMsgSource1LegacyGameEventList.descriptor_t descriptors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_descriptors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSource1LegacyGameEventList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSource1LegacyGameEventList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSource1LegacyGameEventList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSource1LegacyGameEventList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgSource1LegacyGameEventList.descriptor_t descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->descriptors(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSource1LegacyGameEventList)
}

::google::protobuf::uint8* CMsgSource1LegacyGameEventList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSource1LegacyGameEventList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgSource1LegacyGameEventList.descriptor_t descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->descriptors(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSource1LegacyGameEventList)
  return target;
}

size_t CMsgSource1LegacyGameEventList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSource1LegacyGameEventList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgSource1LegacyGameEventList.descriptor_t descriptors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->descriptors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->descriptors(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSource1LegacyGameEventList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSource1LegacyGameEventList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSource1LegacyGameEventList* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSource1LegacyGameEventList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSource1LegacyGameEventList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSource1LegacyGameEventList)
    MergeFrom(*source);
  }
}

void CMsgSource1LegacyGameEventList::MergeFrom(const CMsgSource1LegacyGameEventList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSource1LegacyGameEventList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  descriptors_.MergeFrom(from.descriptors_);
}

void CMsgSource1LegacyGameEventList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSource1LegacyGameEventList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSource1LegacyGameEventList::CopyFrom(const CMsgSource1LegacyGameEventList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSource1LegacyGameEventList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSource1LegacyGameEventList::IsInitialized() const {
  return true;
}

void CMsgSource1LegacyGameEventList::Swap(CMsgSource1LegacyGameEventList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSource1LegacyGameEventList::InternalSwap(CMsgSource1LegacyGameEventList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&descriptors_)->InternalSwap(CastToBase(&other->descriptors_));
}

::google::protobuf::Metadata CMsgSource1LegacyGameEventList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSource1LegacyListenEvents::InitAsDefaultInstance() {
}
class CMsgSource1LegacyListenEvents::HasBitSetters {
 public:
  static void set_has_playerslot(CMsgSource1LegacyListenEvents* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSource1LegacyListenEvents::kPlayerslotFieldNumber;
const int CMsgSource1LegacyListenEvents::kEventarraybitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSource1LegacyListenEvents::CMsgSource1LegacyListenEvents()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSource1LegacyListenEvents)
}
CMsgSource1LegacyListenEvents::CMsgSource1LegacyListenEvents(const CMsgSource1LegacyListenEvents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      eventarraybits_(from.eventarraybits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerslot_ = from.playerslot_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSource1LegacyListenEvents)
}

void CMsgSource1LegacyListenEvents::SharedCtor() {
  playerslot_ = 0;
}

CMsgSource1LegacyListenEvents::~CMsgSource1LegacyListenEvents() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSource1LegacyListenEvents)
  SharedDtor();
}

void CMsgSource1LegacyListenEvents::SharedDtor() {
}

void CMsgSource1LegacyListenEvents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSource1LegacyListenEvents& CMsgSource1LegacyListenEvents::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSource1LegacyListenEvents_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgSource1LegacyListenEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSource1LegacyListenEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eventarraybits_.Clear();
  playerslot_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSource1LegacyListenEvents::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSource1LegacyListenEvents*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 playerslot = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_playerslot(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 eventarraybits = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_eventarraybits(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_eventarraybits();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSource1LegacyListenEvents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSource1LegacyListenEvents)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 playerslot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_playerslot(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerslot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 eventarraybits = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_eventarraybits())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_eventarraybits())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSource1LegacyListenEvents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSource1LegacyListenEvents)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSource1LegacyListenEvents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSource1LegacyListenEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 playerslot = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerslot(), output);
  }

  // repeated uint32 eventarraybits = 2;
  for (int i = 0, n = this->eventarraybits_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->eventarraybits(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSource1LegacyListenEvents)
}

::google::protobuf::uint8* CMsgSource1LegacyListenEvents::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSource1LegacyListenEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 playerslot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerslot(), target);
  }

  // repeated uint32 eventarraybits = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->eventarraybits_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSource1LegacyListenEvents)
  return target;
}

size_t CMsgSource1LegacyListenEvents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSource1LegacyListenEvents)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 eventarraybits = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->eventarraybits_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->eventarraybits_size());
    total_size += data_size;
  }

  // optional int32 playerslot = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerslot());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSource1LegacyListenEvents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSource1LegacyListenEvents)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSource1LegacyListenEvents* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSource1LegacyListenEvents>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSource1LegacyListenEvents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSource1LegacyListenEvents)
    MergeFrom(*source);
  }
}

void CMsgSource1LegacyListenEvents::MergeFrom(const CMsgSource1LegacyListenEvents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSource1LegacyListenEvents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  eventarraybits_.MergeFrom(from.eventarraybits_);
  if (from.has_playerslot()) {
    set_playerslot(from.playerslot());
  }
}

void CMsgSource1LegacyListenEvents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSource1LegacyListenEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSource1LegacyListenEvents::CopyFrom(const CMsgSource1LegacyListenEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSource1LegacyListenEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSource1LegacyListenEvents::IsInitialized() const {
  return true;
}

void CMsgSource1LegacyListenEvents::Swap(CMsgSource1LegacyListenEvents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSource1LegacyListenEvents::InternalSwap(CMsgSource1LegacyListenEvents* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  eventarraybits_.InternalSwap(&other->eventarraybits_);
  swap(playerslot_, other->playerslot_);
}

::google::protobuf::Metadata CMsgSource1LegacyListenEvents::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSource1LegacyGameEvent_key_t::InitAsDefaultInstance() {
}
class CMsgSource1LegacyGameEvent_key_t::HasBitSetters {
 public:
  static void set_has_type(CMsgSource1LegacyGameEvent_key_t* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_val_string(CMsgSource1LegacyGameEvent_key_t* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_val_float(CMsgSource1LegacyGameEvent_key_t* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_val_long(CMsgSource1LegacyGameEvent_key_t* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_val_short(CMsgSource1LegacyGameEvent_key_t* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_val_byte(CMsgSource1LegacyGameEvent_key_t* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_val_bool(CMsgSource1LegacyGameEvent_key_t* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_val_uint64(CMsgSource1LegacyGameEvent_key_t* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSource1LegacyGameEvent_key_t::kTypeFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValStringFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValFloatFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValLongFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValShortFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValByteFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValBoolFieldNumber;
const int CMsgSource1LegacyGameEvent_key_t::kValUint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSource1LegacyGameEvent_key_t::CMsgSource1LegacyGameEvent_key_t()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSource1LegacyGameEvent.key_t)
}
CMsgSource1LegacyGameEvent_key_t::CMsgSource1LegacyGameEvent_key_t(const CMsgSource1LegacyGameEvent_key_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  val_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_val_string()) {
    val_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_string_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&val_uint64_) -
    reinterpret_cast<char*>(&type_)) + sizeof(val_uint64_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSource1LegacyGameEvent.key_t)
}

void CMsgSource1LegacyGameEvent_key_t::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgSource1LegacyGameEvent_key_t_gameevents_2eproto.base);
  val_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&val_uint64_) -
      reinterpret_cast<char*>(&type_)) + sizeof(val_uint64_));
}

CMsgSource1LegacyGameEvent_key_t::~CMsgSource1LegacyGameEvent_key_t() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSource1LegacyGameEvent.key_t)
  SharedDtor();
}

void CMsgSource1LegacyGameEvent_key_t::SharedDtor() {
  val_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSource1LegacyGameEvent_key_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSource1LegacyGameEvent_key_t& CMsgSource1LegacyGameEvent_key_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSource1LegacyGameEvent_key_t_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgSource1LegacyGameEvent_key_t::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSource1LegacyGameEvent.key_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    val_string_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&val_uint64_) -
        reinterpret_cast<char*>(&type_)) + sizeof(val_uint64_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSource1LegacyGameEvent_key_t::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSource1LegacyGameEvent_key_t*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string val_string = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgSource1LegacyGameEvent.key_t.val_string");
        object = msg->mutable_val_string();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional float val_float = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_val_float(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // optional int32 val_long = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_val_long(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 val_short = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_val_short(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 val_byte = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_val_byte(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool val_bool = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_val_bool(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 val_uint64 = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_val_uint64(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSource1LegacyGameEvent_key_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSource1LegacyGameEvent.key_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string val_string = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_val_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->val_string().data(), static_cast<int>(this->val_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgSource1LegacyGameEvent.key_t.val_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float val_float = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {
          HasBitSetters::set_has_val_float(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &val_float_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 val_long = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_val_long(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val_long_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 val_short = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_val_short(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val_short_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 val_byte = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_val_byte(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val_byte_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool val_bool = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_val_bool(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &val_bool_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 val_uint64 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_val_uint64(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &val_uint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSource1LegacyGameEvent.key_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSource1LegacyGameEvent.key_t)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSource1LegacyGameEvent_key_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSource1LegacyGameEvent.key_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string val_string = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val_string().data(), static_cast<int>(this->val_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgSource1LegacyGameEvent.key_t.val_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->val_string(), output);
  }

  // optional float val_float = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->val_float(), output);
  }

  // optional int32 val_long = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->val_long(), output);
  }

  // optional int32 val_short = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->val_short(), output);
  }

  // optional int32 val_byte = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->val_byte(), output);
  }

  // optional bool val_bool = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->val_bool(), output);
  }

  // optional uint64 val_uint64 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->val_uint64(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSource1LegacyGameEvent.key_t)
}

::google::protobuf::uint8* CMsgSource1LegacyGameEvent_key_t::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSource1LegacyGameEvent.key_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string val_string = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val_string().data(), static_cast<int>(this->val_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgSource1LegacyGameEvent.key_t.val_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->val_string(), target);
  }

  // optional float val_float = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->val_float(), target);
  }

  // optional int32 val_long = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->val_long(), target);
  }

  // optional int32 val_short = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->val_short(), target);
  }

  // optional int32 val_byte = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->val_byte(), target);
  }

  // optional bool val_bool = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->val_bool(), target);
  }

  // optional uint64 val_uint64 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->val_uint64(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSource1LegacyGameEvent.key_t)
  return target;
}

size_t CMsgSource1LegacyGameEvent_key_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSource1LegacyGameEvent.key_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string val_string = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->val_string());
    }

    // optional int32 type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional float val_float = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional int32 val_long = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val_long());
    }

    // optional int32 val_short = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val_short());
    }

    // optional int32 val_byte = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val_byte());
    }

    // optional bool val_bool = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional uint64 val_uint64 = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->val_uint64());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSource1LegacyGameEvent_key_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSource1LegacyGameEvent.key_t)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSource1LegacyGameEvent_key_t* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSource1LegacyGameEvent_key_t>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSource1LegacyGameEvent.key_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSource1LegacyGameEvent.key_t)
    MergeFrom(*source);
  }
}

void CMsgSource1LegacyGameEvent_key_t::MergeFrom(const CMsgSource1LegacyGameEvent_key_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSource1LegacyGameEvent.key_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      val_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_string_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      val_float_ = from.val_float_;
    }
    if (cached_has_bits & 0x00000008u) {
      val_long_ = from.val_long_;
    }
    if (cached_has_bits & 0x00000010u) {
      val_short_ = from.val_short_;
    }
    if (cached_has_bits & 0x00000020u) {
      val_byte_ = from.val_byte_;
    }
    if (cached_has_bits & 0x00000040u) {
      val_bool_ = from.val_bool_;
    }
    if (cached_has_bits & 0x00000080u) {
      val_uint64_ = from.val_uint64_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSource1LegacyGameEvent_key_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSource1LegacyGameEvent.key_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSource1LegacyGameEvent_key_t::CopyFrom(const CMsgSource1LegacyGameEvent_key_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSource1LegacyGameEvent.key_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSource1LegacyGameEvent_key_t::IsInitialized() const {
  return true;
}

void CMsgSource1LegacyGameEvent_key_t::Swap(CMsgSource1LegacyGameEvent_key_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSource1LegacyGameEvent_key_t::InternalSwap(CMsgSource1LegacyGameEvent_key_t* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  val_string_.Swap(&other->val_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(val_float_, other->val_float_);
  swap(val_long_, other->val_long_);
  swap(val_short_, other->val_short_);
  swap(val_byte_, other->val_byte_);
  swap(val_bool_, other->val_bool_);
  swap(val_uint64_, other->val_uint64_);
}

::google::protobuf::Metadata CMsgSource1LegacyGameEvent_key_t::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSource1LegacyGameEvent::InitAsDefaultInstance() {
}
class CMsgSource1LegacyGameEvent::HasBitSetters {
 public:
  static void set_has_event_name(CMsgSource1LegacyGameEvent* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_eventid(CMsgSource1LegacyGameEvent* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSource1LegacyGameEvent::kEventNameFieldNumber;
const int CMsgSource1LegacyGameEvent::kEventidFieldNumber;
const int CMsgSource1LegacyGameEvent::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSource1LegacyGameEvent::CMsgSource1LegacyGameEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSource1LegacyGameEvent)
}
CMsgSource1LegacyGameEvent::CMsgSource1LegacyGameEvent(const CMsgSource1LegacyGameEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_event_name()) {
    event_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_name_);
  }
  eventid_ = from.eventid_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSource1LegacyGameEvent)
}

void CMsgSource1LegacyGameEvent::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgSource1LegacyGameEvent_gameevents_2eproto.base);
  event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eventid_ = 0;
}

CMsgSource1LegacyGameEvent::~CMsgSource1LegacyGameEvent() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSource1LegacyGameEvent)
  SharedDtor();
}

void CMsgSource1LegacyGameEvent::SharedDtor() {
  event_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSource1LegacyGameEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSource1LegacyGameEvent& CMsgSource1LegacyGameEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSource1LegacyGameEvent_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgSource1LegacyGameEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSource1LegacyGameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    event_name_.ClearNonDefaultToEmptyNoArena();
  }
  eventid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSource1LegacyGameEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSource1LegacyGameEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string event_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgSource1LegacyGameEvent.event_name");
        object = msg->mutable_event_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional int32 eventid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_eventid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgSource1LegacyGameEvent.key_t keys = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgSource1LegacyGameEvent_key_t::_InternalParse;
          object = msg->add_keys();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSource1LegacyGameEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSource1LegacyGameEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string event_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->event_name().data(), static_cast<int>(this->event_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgSource1LegacyGameEvent.event_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eventid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_eventid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eventid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgSource1LegacyGameEvent.key_t keys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSource1LegacyGameEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSource1LegacyGameEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSource1LegacyGameEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSource1LegacyGameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string event_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->event_name().data(), static_cast<int>(this->event_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgSource1LegacyGameEvent.event_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_name(), output);
  }

  // optional int32 eventid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->eventid(), output);
  }

  // repeated .proto.dota.CMsgSource1LegacyGameEvent.key_t keys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->keys(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSource1LegacyGameEvent)
}

::google::protobuf::uint8* CMsgSource1LegacyGameEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSource1LegacyGameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string event_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->event_name().data(), static_cast<int>(this->event_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgSource1LegacyGameEvent.event_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_name(), target);
  }

  // optional int32 eventid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->eventid(), target);
  }

  // repeated .proto.dota.CMsgSource1LegacyGameEvent.key_t keys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->keys(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSource1LegacyGameEvent)
  return target;
}

size_t CMsgSource1LegacyGameEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSource1LegacyGameEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgSource1LegacyGameEvent.key_t keys = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string event_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event_name());
    }

    // optional int32 eventid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eventid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSource1LegacyGameEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSource1LegacyGameEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSource1LegacyGameEvent* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSource1LegacyGameEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSource1LegacyGameEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSource1LegacyGameEvent)
    MergeFrom(*source);
  }
}

void CMsgSource1LegacyGameEvent::MergeFrom(const CMsgSource1LegacyGameEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSource1LegacyGameEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      event_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      eventid_ = from.eventid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSource1LegacyGameEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSource1LegacyGameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSource1LegacyGameEvent::CopyFrom(const CMsgSource1LegacyGameEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSource1LegacyGameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSource1LegacyGameEvent::IsInitialized() const {
  return true;
}

void CMsgSource1LegacyGameEvent::Swap(CMsgSource1LegacyGameEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSource1LegacyGameEvent::InternalSwap(CMsgSource1LegacyGameEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  event_name_.Swap(&other->event_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eventid_, other->eventid_);
}

::google::protobuf::Metadata CMsgSource1LegacyGameEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSosStartSoundEvent::InitAsDefaultInstance() {
}
class CMsgSosStartSoundEvent::HasBitSetters {
 public:
  static void set_has_soundevent_guid(CMsgSosStartSoundEvent* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_soundevent_hash(CMsgSosStartSoundEvent* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_source_entity_index(CMsgSosStartSoundEvent* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_seed(CMsgSosStartSoundEvent* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_packed_params(CMsgSosStartSoundEvent* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_start_time(CMsgSosStartSoundEvent* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSosStartSoundEvent::kSoundeventGuidFieldNumber;
const int CMsgSosStartSoundEvent::kSoundeventHashFieldNumber;
const int CMsgSosStartSoundEvent::kSourceEntityIndexFieldNumber;
const int CMsgSosStartSoundEvent::kSeedFieldNumber;
const int CMsgSosStartSoundEvent::kPackedParamsFieldNumber;
const int CMsgSosStartSoundEvent::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSosStartSoundEvent::CMsgSosStartSoundEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSosStartSoundEvent)
}
CMsgSosStartSoundEvent::CMsgSosStartSoundEvent(const CMsgSosStartSoundEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  packed_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_packed_params()) {
    packed_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packed_params_);
  }
  ::memcpy(&soundevent_guid_, &from.soundevent_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&start_time_) -
    reinterpret_cast<char*>(&soundevent_guid_)) + sizeof(start_time_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSosStartSoundEvent)
}

void CMsgSosStartSoundEvent::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgSosStartSoundEvent_gameevents_2eproto.base);
  packed_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&soundevent_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_time_) -
      reinterpret_cast<char*>(&soundevent_guid_)) + sizeof(start_time_));
}

CMsgSosStartSoundEvent::~CMsgSosStartSoundEvent() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSosStartSoundEvent)
  SharedDtor();
}

void CMsgSosStartSoundEvent::SharedDtor() {
  packed_params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSosStartSoundEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSosStartSoundEvent& CMsgSosStartSoundEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSosStartSoundEvent_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgSosStartSoundEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSosStartSoundEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    packed_params_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&soundevent_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&start_time_) -
        reinterpret_cast<char*>(&soundevent_guid_)) + sizeof(start_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSosStartSoundEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSosStartSoundEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 soundevent_guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_soundevent_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed32 soundevent_hash = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_soundevent_hash(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // optional int32 source_entity_index = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_source_entity_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 seed = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_seed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes packed_params = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_packed_params();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional float start_time = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 53) goto handle_unusual;
        msg->set_start_time(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSosStartSoundEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSosStartSoundEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 soundevent_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_soundevent_guid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soundevent_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 soundevent_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {
          HasBitSetters::set_has_soundevent_hash(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &soundevent_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 source_entity_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_source_entity_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_entity_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 seed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_seed(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes packed_params = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_packed_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float start_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (53 & 0xFF)) {
          HasBitSetters::set_has_start_time(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSosStartSoundEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSosStartSoundEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSosStartSoundEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSosStartSoundEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 soundevent_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->soundevent_guid(), output);
  }

  // optional fixed32 soundevent_hash = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->soundevent_hash(), output);
  }

  // optional int32 source_entity_index = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->source_entity_index(), output);
  }

  // optional int32 seed = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->seed(), output);
  }

  // optional bytes packed_params = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->packed_params(), output);
  }

  // optional float start_time = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->start_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSosStartSoundEvent)
}

::google::protobuf::uint8* CMsgSosStartSoundEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSosStartSoundEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 soundevent_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->soundevent_guid(), target);
  }

  // optional fixed32 soundevent_hash = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->soundevent_hash(), target);
  }

  // optional int32 source_entity_index = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->source_entity_index(), target);
  }

  // optional int32 seed = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->seed(), target);
  }

  // optional bytes packed_params = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->packed_params(), target);
  }

  // optional float start_time = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->start_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSosStartSoundEvent)
  return target;
}

size_t CMsgSosStartSoundEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSosStartSoundEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional bytes packed_params = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->packed_params());
    }

    // optional int32 soundevent_guid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->soundevent_guid());
    }

    // optional fixed32 soundevent_hash = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional int32 source_entity_index = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source_entity_index());
    }

    // optional int32 seed = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seed());
    }

    // optional float start_time = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSosStartSoundEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSosStartSoundEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSosStartSoundEvent* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSosStartSoundEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSosStartSoundEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSosStartSoundEvent)
    MergeFrom(*source);
  }
}

void CMsgSosStartSoundEvent::MergeFrom(const CMsgSosStartSoundEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSosStartSoundEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      packed_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packed_params_);
    }
    if (cached_has_bits & 0x00000002u) {
      soundevent_guid_ = from.soundevent_guid_;
    }
    if (cached_has_bits & 0x00000004u) {
      soundevent_hash_ = from.soundevent_hash_;
    }
    if (cached_has_bits & 0x00000008u) {
      source_entity_index_ = from.source_entity_index_;
    }
    if (cached_has_bits & 0x00000010u) {
      seed_ = from.seed_;
    }
    if (cached_has_bits & 0x00000020u) {
      start_time_ = from.start_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSosStartSoundEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSosStartSoundEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSosStartSoundEvent::CopyFrom(const CMsgSosStartSoundEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSosStartSoundEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSosStartSoundEvent::IsInitialized() const {
  return true;
}

void CMsgSosStartSoundEvent::Swap(CMsgSosStartSoundEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSosStartSoundEvent::InternalSwap(CMsgSosStartSoundEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  packed_params_.Swap(&other->packed_params_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(soundevent_guid_, other->soundevent_guid_);
  swap(soundevent_hash_, other->soundevent_hash_);
  swap(source_entity_index_, other->source_entity_index_);
  swap(seed_, other->seed_);
  swap(start_time_, other->start_time_);
}

::google::protobuf::Metadata CMsgSosStartSoundEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSosStopSoundEvent::InitAsDefaultInstance() {
}
class CMsgSosStopSoundEvent::HasBitSetters {
 public:
  static void set_has_soundevent_guid(CMsgSosStopSoundEvent* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSosStopSoundEvent::kSoundeventGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSosStopSoundEvent::CMsgSosStopSoundEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSosStopSoundEvent)
}
CMsgSosStopSoundEvent::CMsgSosStopSoundEvent(const CMsgSosStopSoundEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  soundevent_guid_ = from.soundevent_guid_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSosStopSoundEvent)
}

void CMsgSosStopSoundEvent::SharedCtor() {
  soundevent_guid_ = 0;
}

CMsgSosStopSoundEvent::~CMsgSosStopSoundEvent() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSosStopSoundEvent)
  SharedDtor();
}

void CMsgSosStopSoundEvent::SharedDtor() {
}

void CMsgSosStopSoundEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSosStopSoundEvent& CMsgSosStopSoundEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSosStopSoundEvent_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgSosStopSoundEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSosStopSoundEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  soundevent_guid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSosStopSoundEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSosStopSoundEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 soundevent_guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_soundevent_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSosStopSoundEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSosStopSoundEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 soundevent_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_soundevent_guid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soundevent_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSosStopSoundEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSosStopSoundEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSosStopSoundEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSosStopSoundEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 soundevent_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->soundevent_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSosStopSoundEvent)
}

::google::protobuf::uint8* CMsgSosStopSoundEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSosStopSoundEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 soundevent_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->soundevent_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSosStopSoundEvent)
  return target;
}

size_t CMsgSosStopSoundEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSosStopSoundEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 soundevent_guid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->soundevent_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSosStopSoundEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSosStopSoundEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSosStopSoundEvent* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSosStopSoundEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSosStopSoundEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSosStopSoundEvent)
    MergeFrom(*source);
  }
}

void CMsgSosStopSoundEvent::MergeFrom(const CMsgSosStopSoundEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSosStopSoundEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_soundevent_guid()) {
    set_soundevent_guid(from.soundevent_guid());
  }
}

void CMsgSosStopSoundEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSosStopSoundEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSosStopSoundEvent::CopyFrom(const CMsgSosStopSoundEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSosStopSoundEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSosStopSoundEvent::IsInitialized() const {
  return true;
}

void CMsgSosStopSoundEvent::Swap(CMsgSosStopSoundEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSosStopSoundEvent::InternalSwap(CMsgSosStopSoundEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(soundevent_guid_, other->soundevent_guid_);
}

::google::protobuf::Metadata CMsgSosStopSoundEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSosStopSoundEventHash::InitAsDefaultInstance() {
}
class CMsgSosStopSoundEventHash::HasBitSetters {
 public:
  static void set_has_soundevent_hash(CMsgSosStopSoundEventHash* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_source_entity_index(CMsgSosStopSoundEventHash* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSosStopSoundEventHash::kSoundeventHashFieldNumber;
const int CMsgSosStopSoundEventHash::kSourceEntityIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSosStopSoundEventHash::CMsgSosStopSoundEventHash()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSosStopSoundEventHash)
}
CMsgSosStopSoundEventHash::CMsgSosStopSoundEventHash(const CMsgSosStopSoundEventHash& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&soundevent_hash_, &from.soundevent_hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&source_entity_index_) -
    reinterpret_cast<char*>(&soundevent_hash_)) + sizeof(source_entity_index_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSosStopSoundEventHash)
}

void CMsgSosStopSoundEventHash::SharedCtor() {
  ::memset(&soundevent_hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_entity_index_) -
      reinterpret_cast<char*>(&soundevent_hash_)) + sizeof(source_entity_index_));
}

CMsgSosStopSoundEventHash::~CMsgSosStopSoundEventHash() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSosStopSoundEventHash)
  SharedDtor();
}

void CMsgSosStopSoundEventHash::SharedDtor() {
}

void CMsgSosStopSoundEventHash::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSosStopSoundEventHash& CMsgSosStopSoundEventHash::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSosStopSoundEventHash_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgSosStopSoundEventHash::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSosStopSoundEventHash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&soundevent_hash_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&source_entity_index_) -
        reinterpret_cast<char*>(&soundevent_hash_)) + sizeof(source_entity_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSosStopSoundEventHash::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSosStopSoundEventHash*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed32 soundevent_hash = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_soundevent_hash(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // optional int32 source_entity_index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_source_entity_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSosStopSoundEventHash::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSosStopSoundEventHash)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 soundevent_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {
          HasBitSetters::set_has_soundevent_hash(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &soundevent_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 source_entity_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_source_entity_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_entity_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSosStopSoundEventHash)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSosStopSoundEventHash)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSosStopSoundEventHash::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSosStopSoundEventHash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 soundevent_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->soundevent_hash(), output);
  }

  // optional int32 source_entity_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->source_entity_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSosStopSoundEventHash)
}

::google::protobuf::uint8* CMsgSosStopSoundEventHash::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSosStopSoundEventHash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 soundevent_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->soundevent_hash(), target);
  }

  // optional int32 source_entity_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->source_entity_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSosStopSoundEventHash)
  return target;
}

size_t CMsgSosStopSoundEventHash::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSosStopSoundEventHash)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed32 soundevent_hash = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional int32 source_entity_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source_entity_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSosStopSoundEventHash::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSosStopSoundEventHash)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSosStopSoundEventHash* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSosStopSoundEventHash>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSosStopSoundEventHash)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSosStopSoundEventHash)
    MergeFrom(*source);
  }
}

void CMsgSosStopSoundEventHash::MergeFrom(const CMsgSosStopSoundEventHash& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSosStopSoundEventHash)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      soundevent_hash_ = from.soundevent_hash_;
    }
    if (cached_has_bits & 0x00000002u) {
      source_entity_index_ = from.source_entity_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSosStopSoundEventHash::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSosStopSoundEventHash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSosStopSoundEventHash::CopyFrom(const CMsgSosStopSoundEventHash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSosStopSoundEventHash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSosStopSoundEventHash::IsInitialized() const {
  return true;
}

void CMsgSosStopSoundEventHash::Swap(CMsgSosStopSoundEventHash* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSosStopSoundEventHash::InternalSwap(CMsgSosStopSoundEventHash* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(soundevent_hash_, other->soundevent_hash_);
  swap(source_entity_index_, other->source_entity_index_);
}

::google::protobuf::Metadata CMsgSosStopSoundEventHash::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSosSetSoundEventParams::InitAsDefaultInstance() {
}
class CMsgSosSetSoundEventParams::HasBitSetters {
 public:
  static void set_has_soundevent_guid(CMsgSosSetSoundEventParams* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_packed_params(CMsgSosSetSoundEventParams* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSosSetSoundEventParams::kSoundeventGuidFieldNumber;
const int CMsgSosSetSoundEventParams::kPackedParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSosSetSoundEventParams::CMsgSosSetSoundEventParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSosSetSoundEventParams)
}
CMsgSosSetSoundEventParams::CMsgSosSetSoundEventParams(const CMsgSosSetSoundEventParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  packed_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_packed_params()) {
    packed_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packed_params_);
  }
  soundevent_guid_ = from.soundevent_guid_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSosSetSoundEventParams)
}

void CMsgSosSetSoundEventParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgSosSetSoundEventParams_gameevents_2eproto.base);
  packed_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  soundevent_guid_ = 0;
}

CMsgSosSetSoundEventParams::~CMsgSosSetSoundEventParams() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSosSetSoundEventParams)
  SharedDtor();
}

void CMsgSosSetSoundEventParams::SharedDtor() {
  packed_params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSosSetSoundEventParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSosSetSoundEventParams& CMsgSosSetSoundEventParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSosSetSoundEventParams_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgSosSetSoundEventParams::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSosSetSoundEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    packed_params_.ClearNonDefaultToEmptyNoArena();
  }
  soundevent_guid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSosSetSoundEventParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSosSetSoundEventParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 soundevent_guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_soundevent_guid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes packed_params = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_packed_params();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSosSetSoundEventParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSosSetSoundEventParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 soundevent_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_soundevent_guid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soundevent_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes packed_params = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_packed_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSosSetSoundEventParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSosSetSoundEventParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSosSetSoundEventParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSosSetSoundEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 soundevent_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->soundevent_guid(), output);
  }

  // optional bytes packed_params = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->packed_params(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSosSetSoundEventParams)
}

::google::protobuf::uint8* CMsgSosSetSoundEventParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSosSetSoundEventParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 soundevent_guid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->soundevent_guid(), target);
  }

  // optional bytes packed_params = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->packed_params(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSosSetSoundEventParams)
  return target;
}

size_t CMsgSosSetSoundEventParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSosSetSoundEventParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes packed_params = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->packed_params());
    }

    // optional int32 soundevent_guid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->soundevent_guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSosSetSoundEventParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSosSetSoundEventParams)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSosSetSoundEventParams* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSosSetSoundEventParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSosSetSoundEventParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSosSetSoundEventParams)
    MergeFrom(*source);
  }
}

void CMsgSosSetSoundEventParams::MergeFrom(const CMsgSosSetSoundEventParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSosSetSoundEventParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      packed_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packed_params_);
    }
    if (cached_has_bits & 0x00000002u) {
      soundevent_guid_ = from.soundevent_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSosSetSoundEventParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSosSetSoundEventParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSosSetSoundEventParams::CopyFrom(const CMsgSosSetSoundEventParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSosSetSoundEventParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSosSetSoundEventParams::IsInitialized() const {
  return true;
}

void CMsgSosSetSoundEventParams::Swap(CMsgSosSetSoundEventParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSosSetSoundEventParams::InternalSwap(CMsgSosSetSoundEventParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  packed_params_.Swap(&other->packed_params_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(soundevent_guid_, other->soundevent_guid_);
}

::google::protobuf::Metadata CMsgSosSetSoundEventParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSosSetLibraryStackFields::InitAsDefaultInstance() {
}
class CMsgSosSetLibraryStackFields::HasBitSetters {
 public:
  static void set_has_stack_hash(CMsgSosSetLibraryStackFields* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_packed_fields(CMsgSosSetLibraryStackFields* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSosSetLibraryStackFields::kStackHashFieldNumber;
const int CMsgSosSetLibraryStackFields::kPackedFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSosSetLibraryStackFields::CMsgSosSetLibraryStackFields()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSosSetLibraryStackFields)
}
CMsgSosSetLibraryStackFields::CMsgSosSetLibraryStackFields(const CMsgSosSetLibraryStackFields& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  packed_fields_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_packed_fields()) {
    packed_fields_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packed_fields_);
  }
  stack_hash_ = from.stack_hash_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSosSetLibraryStackFields)
}

void CMsgSosSetLibraryStackFields::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgSosSetLibraryStackFields_gameevents_2eproto.base);
  packed_fields_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stack_hash_ = 0u;
}

CMsgSosSetLibraryStackFields::~CMsgSosSetLibraryStackFields() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSosSetLibraryStackFields)
  SharedDtor();
}

void CMsgSosSetLibraryStackFields::SharedDtor() {
  packed_fields_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSosSetLibraryStackFields::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSosSetLibraryStackFields& CMsgSosSetLibraryStackFields::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSosSetLibraryStackFields_gameevents_2eproto.base);
  return *internal_default_instance();
}


void CMsgSosSetLibraryStackFields::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSosSetLibraryStackFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    packed_fields_.ClearNonDefaultToEmptyNoArena();
  }
  stack_hash_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSosSetLibraryStackFields::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSosSetLibraryStackFields*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed32 stack_hash = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_stack_hash(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // optional bytes packed_fields = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_packed_fields();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSosSetLibraryStackFields::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSosSetLibraryStackFields)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 stack_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {
          HasBitSetters::set_has_stack_hash(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &stack_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes packed_fields = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_packed_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSosSetLibraryStackFields)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSosSetLibraryStackFields)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSosSetLibraryStackFields::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSosSetLibraryStackFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 stack_hash = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->stack_hash(), output);
  }

  // optional bytes packed_fields = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->packed_fields(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSosSetLibraryStackFields)
}

::google::protobuf::uint8* CMsgSosSetLibraryStackFields::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSosSetLibraryStackFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 stack_hash = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->stack_hash(), target);
  }

  // optional bytes packed_fields = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->packed_fields(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSosSetLibraryStackFields)
  return target;
}

size_t CMsgSosSetLibraryStackFields::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSosSetLibraryStackFields)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes packed_fields = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->packed_fields());
    }

    // optional fixed32 stack_hash = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSosSetLibraryStackFields::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSosSetLibraryStackFields)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSosSetLibraryStackFields* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSosSetLibraryStackFields>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSosSetLibraryStackFields)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSosSetLibraryStackFields)
    MergeFrom(*source);
  }
}

void CMsgSosSetLibraryStackFields::MergeFrom(const CMsgSosSetLibraryStackFields& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSosSetLibraryStackFields)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      packed_fields_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packed_fields_);
    }
    if (cached_has_bits & 0x00000002u) {
      stack_hash_ = from.stack_hash_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSosSetLibraryStackFields::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSosSetLibraryStackFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSosSetLibraryStackFields::CopyFrom(const CMsgSosSetLibraryStackFields& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSosSetLibraryStackFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSosSetLibraryStackFields::IsInitialized() const {
  return true;
}

void CMsgSosSetLibraryStackFields::Swap(CMsgSosSetLibraryStackFields* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSosSetLibraryStackFields::InternalSwap(CMsgSosSetLibraryStackFields* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  packed_fields_.Swap(&other->packed_fields_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stack_hash_, other->stack_hash_);
}

::google::protobuf::Metadata CMsgSosSetLibraryStackFields::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_gameevents_2eproto);
  return ::file_level_metadata_gameevents_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgVDebugGameSessionIDEvent* Arena::CreateMaybeMessage< ::proto::dota::CMsgVDebugGameSessionIDEvent >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgVDebugGameSessionIDEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgPlaceDecalEvent* Arena::CreateMaybeMessage< ::proto::dota::CMsgPlaceDecalEvent >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgPlaceDecalEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClearWorldDecalsEvent* Arena::CreateMaybeMessage< ::proto::dota::CMsgClearWorldDecalsEvent >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClearWorldDecalsEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClearEntityDecalsEvent* Arena::CreateMaybeMessage< ::proto::dota::CMsgClearEntityDecalsEvent >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClearEntityDecalsEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClearDecalsForSkeletonInstanceEvent* Arena::CreateMaybeMessage< ::proto::dota::CMsgClearDecalsForSkeletonInstanceEvent >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClearDecalsForSkeletonInstanceEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSource1LegacyGameEventList_key_t* Arena::CreateMaybeMessage< ::proto::dota::CMsgSource1LegacyGameEventList_key_t >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSource1LegacyGameEventList_key_t >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSource1LegacyGameEventList_descriptor_t* Arena::CreateMaybeMessage< ::proto::dota::CMsgSource1LegacyGameEventList_descriptor_t >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSource1LegacyGameEventList_descriptor_t >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSource1LegacyGameEventList* Arena::CreateMaybeMessage< ::proto::dota::CMsgSource1LegacyGameEventList >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSource1LegacyGameEventList >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSource1LegacyListenEvents* Arena::CreateMaybeMessage< ::proto::dota::CMsgSource1LegacyListenEvents >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSource1LegacyListenEvents >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSource1LegacyGameEvent_key_t* Arena::CreateMaybeMessage< ::proto::dota::CMsgSource1LegacyGameEvent_key_t >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSource1LegacyGameEvent_key_t >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSource1LegacyGameEvent* Arena::CreateMaybeMessage< ::proto::dota::CMsgSource1LegacyGameEvent >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSource1LegacyGameEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSosStartSoundEvent* Arena::CreateMaybeMessage< ::proto::dota::CMsgSosStartSoundEvent >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSosStartSoundEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSosStopSoundEvent* Arena::CreateMaybeMessage< ::proto::dota::CMsgSosStopSoundEvent >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSosStopSoundEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSosStopSoundEventHash* Arena::CreateMaybeMessage< ::proto::dota::CMsgSosStopSoundEventHash >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSosStopSoundEventHash >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSosSetSoundEventParams* Arena::CreateMaybeMessage< ::proto::dota::CMsgSosSetSoundEventParams >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSosSetSoundEventParams >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSosSetLibraryStackFields* Arena::CreateMaybeMessage< ::proto::dota::CMsgSosSetLibraryStackFields >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSosSetLibraryStackFields >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
