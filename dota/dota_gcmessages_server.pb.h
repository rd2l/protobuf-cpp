// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_server.proto

#ifndef PROTOBUF_INCLUDED_dota_5fgcmessages_5fserver_2eproto
#define PROTOBUF_INCLUDED_dota_5fgcmessages_5fserver_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
#include "dota_shared_enums.pb.h"
#include "dota_gcmessages_common.pb.h"
#include "econ_gcmessages.pb.h"
#include "network_connection.pb.h"
#include "dota_gcmessages_common_match_management.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dota_5fgcmessages_5fserver_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_dota_5fgcmessages_5fserver_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[133]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_dota_5fgcmessages_5fserver_2eproto();
namespace proto {
namespace dota {
class CMsgConnectedPlayers;
class CMsgConnectedPlayersDefaultTypeInternal;
extern CMsgConnectedPlayersDefaultTypeInternal _CMsgConnectedPlayers_default_instance_;
class CMsgConnectedPlayers_Player;
class CMsgConnectedPlayers_PlayerDefaultTypeInternal;
extern CMsgConnectedPlayers_PlayerDefaultTypeInternal _CMsgConnectedPlayers_Player_default_instance_;
class CMsgDOTAAwardEventPoints;
class CMsgDOTAAwardEventPointsDefaultTypeInternal;
extern CMsgDOTAAwardEventPointsDefaultTypeInternal _CMsgDOTAAwardEventPoints_default_instance_;
class CMsgDOTAAwardEventPoints_AwardPoints;
class CMsgDOTAAwardEventPoints_AwardPointsDefaultTypeInternal;
extern CMsgDOTAAwardEventPoints_AwardPointsDefaultTypeInternal _CMsgDOTAAwardEventPoints_AwardPoints_default_instance_;
class CMsgDOTADiretidePrizesRewardedResponse;
class CMsgDOTADiretidePrizesRewardedResponseDefaultTypeInternal;
extern CMsgDOTADiretidePrizesRewardedResponseDefaultTypeInternal _CMsgDOTADiretidePrizesRewardedResponse_default_instance_;
class CMsgDOTAFantasyFinalPlayerStats;
class CMsgDOTAFantasyFinalPlayerStatsDefaultTypeInternal;
extern CMsgDOTAFantasyFinalPlayerStatsDefaultTypeInternal _CMsgDOTAFantasyFinalPlayerStats_default_instance_;
class CMsgDOTAFantasyLivePlayerStats;
class CMsgDOTAFantasyLivePlayerStatsDefaultTypeInternal;
extern CMsgDOTAFantasyLivePlayerStatsDefaultTypeInternal _CMsgDOTAFantasyLivePlayerStats_default_instance_;
class CMsgDOTAFantasyMatch;
class CMsgDOTAFantasyMatchDefaultTypeInternal;
extern CMsgDOTAFantasyMatchDefaultTypeInternal _CMsgDOTAFantasyMatch_default_instance_;
class CMsgDOTAFrostivusTimeElapsed;
class CMsgDOTAFrostivusTimeElapsedDefaultTypeInternal;
extern CMsgDOTAFrostivusTimeElapsedDefaultTypeInternal _CMsgDOTAFrostivusTimeElapsed_default_instance_;
class CMsgDOTAFrostivusTimeElapsed_User;
class CMsgDOTAFrostivusTimeElapsed_UserDefaultTypeInternal;
extern CMsgDOTAFrostivusTimeElapsed_UserDefaultTypeInternal _CMsgDOTAFrostivusTimeElapsed_User_default_instance_;
class CMsgDOTAGenerateDiretidePrizeList;
class CMsgDOTAGenerateDiretidePrizeListDefaultTypeInternal;
extern CMsgDOTAGenerateDiretidePrizeListDefaultTypeInternal _CMsgDOTAGenerateDiretidePrizeList_default_instance_;
class CMsgDOTAGenerateDiretidePrizeListResponse;
class CMsgDOTAGenerateDiretidePrizeListResponseDefaultTypeInternal;
extern CMsgDOTAGenerateDiretidePrizeListResponseDefaultTypeInternal _CMsgDOTAGenerateDiretidePrizeListResponse_default_instance_;
class CMsgDOTALiveScoreboardUpdate;
class CMsgDOTALiveScoreboardUpdateDefaultTypeInternal;
extern CMsgDOTALiveScoreboardUpdateDefaultTypeInternal _CMsgDOTALiveScoreboardUpdate_default_instance_;
class CMsgDOTALiveScoreboardUpdate_Team;
class CMsgDOTALiveScoreboardUpdate_TeamDefaultTypeInternal;
extern CMsgDOTALiveScoreboardUpdate_TeamDefaultTypeInternal _CMsgDOTALiveScoreboardUpdate_Team_default_instance_;
class CMsgDOTALiveScoreboardUpdate_Team_Player;
class CMsgDOTALiveScoreboardUpdate_Team_PlayerDefaultTypeInternal;
extern CMsgDOTALiveScoreboardUpdate_Team_PlayerDefaultTypeInternal _CMsgDOTALiveScoreboardUpdate_Team_Player_default_instance_;
class CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility;
class CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbilityDefaultTypeInternal;
extern CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbilityDefaultTypeInternal _CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility_default_instance_;
class CMsgDOTAPlayerFailedToConnect;
class CMsgDOTAPlayerFailedToConnectDefaultTypeInternal;
extern CMsgDOTAPlayerFailedToConnectDefaultTypeInternal _CMsgDOTAPlayerFailedToConnect_default_instance_;
class CMsgDOTARequestBatchPlayerResources;
class CMsgDOTARequestBatchPlayerResourcesDefaultTypeInternal;
extern CMsgDOTARequestBatchPlayerResourcesDefaultTypeInternal _CMsgDOTARequestBatchPlayerResources_default_instance_;
class CMsgDOTARequestBatchPlayerResourcesResponse;
class CMsgDOTARequestBatchPlayerResourcesResponseDefaultTypeInternal;
extern CMsgDOTARequestBatchPlayerResourcesResponseDefaultTypeInternal _CMsgDOTARequestBatchPlayerResourcesResponse_default_instance_;
class CMsgDOTARequestBatchPlayerResourcesResponse_Result;
class CMsgDOTARequestBatchPlayerResourcesResponse_ResultDefaultTypeInternal;
extern CMsgDOTARequestBatchPlayerResourcesResponse_ResultDefaultTypeInternal _CMsgDOTARequestBatchPlayerResourcesResponse_Result_default_instance_;
class CMsgDOTARequestPlayerResources;
class CMsgDOTARequestPlayerResourcesDefaultTypeInternal;
extern CMsgDOTARequestPlayerResourcesDefaultTypeInternal _CMsgDOTARequestPlayerResources_default_instance_;
class CMsgDOTARequestPlayerResourcesResponse;
class CMsgDOTARequestPlayerResourcesResponseDefaultTypeInternal;
extern CMsgDOTARequestPlayerResourcesResponseDefaultTypeInternal _CMsgDOTARequestPlayerResourcesResponse_default_instance_;
class CMsgDOTARewardDiretidePrizes;
class CMsgDOTARewardDiretidePrizesDefaultTypeInternal;
extern CMsgDOTARewardDiretidePrizesDefaultTypeInternal _CMsgDOTARewardDiretidePrizes_default_instance_;
class CMsgDOTAUpdateClippy;
class CMsgDOTAUpdateClippyDefaultTypeInternal;
extern CMsgDOTAUpdateClippyDefaultTypeInternal _CMsgDOTAUpdateClippy_default_instance_;
class CMsgGCBanStatusRequest;
class CMsgGCBanStatusRequestDefaultTypeInternal;
extern CMsgGCBanStatusRequestDefaultTypeInternal _CMsgGCBanStatusRequest_default_instance_;
class CMsgGCBanStatusResponse;
class CMsgGCBanStatusResponseDefaultTypeInternal;
extern CMsgGCBanStatusResponseDefaultTypeInternal _CMsgGCBanStatusResponse_default_instance_;
class CMsgGCGCToLANServerRelayConnect;
class CMsgGCGCToLANServerRelayConnectDefaultTypeInternal;
extern CMsgGCGCToLANServerRelayConnectDefaultTypeInternal _CMsgGCGCToLANServerRelayConnect_default_instance_;
class CMsgGCToGCCompendiumInGamePredictionResults;
class CMsgGCToGCCompendiumInGamePredictionResultsDefaultTypeInternal;
extern CMsgGCToGCCompendiumInGamePredictionResultsDefaultTypeInternal _CMsgGCToGCCompendiumInGamePredictionResults_default_instance_;
class CMsgGCToRelayConnect;
class CMsgGCToRelayConnectDefaultTypeInternal;
extern CMsgGCToRelayConnectDefaultTypeInternal _CMsgGCToRelayConnect_default_instance_;
class CMsgGCToRelayConnectResponse;
class CMsgGCToRelayConnectResponseDefaultTypeInternal;
extern CMsgGCToRelayConnectResponseDefaultTypeInternal _CMsgGCToRelayConnectResponse_default_instance_;
class CMsgGCToServerConsoleCommand;
class CMsgGCToServerConsoleCommandDefaultTypeInternal;
extern CMsgGCToServerConsoleCommandDefaultTypeInternal _CMsgGCToServerConsoleCommand_default_instance_;
class CMsgGCToServerIngameEventDataOraclePA;
class CMsgGCToServerIngameEventDataOraclePADefaultTypeInternal;
extern CMsgGCToServerIngameEventDataOraclePADefaultTypeInternal _CMsgGCToServerIngameEventDataOraclePA_default_instance_;
class CMsgGCToServerPingRequest;
class CMsgGCToServerPingRequestDefaultTypeInternal;
extern CMsgGCToServerPingRequestDefaultTypeInternal _CMsgGCToServerPingRequest_default_instance_;
class CMsgGCToServerPingResponse;
class CMsgGCToServerPingResponseDefaultTypeInternal;
extern CMsgGCToServerPingResponseDefaultTypeInternal _CMsgGCToServerPingResponse_default_instance_;
class CMsgGCToServerPredictionResult;
class CMsgGCToServerPredictionResultDefaultTypeInternal;
extern CMsgGCToServerPredictionResultDefaultTypeInternal _CMsgGCToServerPredictionResult_default_instance_;
class CMsgGCToServerPredictionResult_Prediction;
class CMsgGCToServerPredictionResult_PredictionDefaultTypeInternal;
extern CMsgGCToServerPredictionResult_PredictionDefaultTypeInternal _CMsgGCToServerPredictionResult_Prediction_default_instance_;
class CMsgGCToServerRealtimeStatsStartStop;
class CMsgGCToServerRealtimeStatsStartStopDefaultTypeInternal;
extern CMsgGCToServerRealtimeStatsStartStopDefaultTypeInternal _CMsgGCToServerRealtimeStatsStartStop_default_instance_;
class CMsgGCToServerUpdateSteamBroadcasting;
class CMsgGCToServerUpdateSteamBroadcastingDefaultTypeInternal;
extern CMsgGCToServerUpdateSteamBroadcastingDefaultTypeInternal _CMsgGCToServerUpdateSteamBroadcasting_default_instance_;
class CMsgGCtoServerTensorflowInstance;
class CMsgGCtoServerTensorflowInstanceDefaultTypeInternal;
extern CMsgGCtoServerTensorflowInstanceDefaultTypeInternal _CMsgGCtoServerTensorflowInstance_default_instance_;
class CMsgGameMatchSignOut;
class CMsgGameMatchSignOutDefaultTypeInternal;
extern CMsgGameMatchSignOutDefaultTypeInternal _CMsgGameMatchSignOut_default_instance_;
class CMsgGameMatchSignOutEventGameData;
class CMsgGameMatchSignOutEventGameDataDefaultTypeInternal;
extern CMsgGameMatchSignOutEventGameDataDefaultTypeInternal _CMsgGameMatchSignOutEventGameData_default_instance_;
class CMsgGameMatchSignOutPermissionRequest;
class CMsgGameMatchSignOutPermissionRequestDefaultTypeInternal;
extern CMsgGameMatchSignOutPermissionRequestDefaultTypeInternal _CMsgGameMatchSignOutPermissionRequest_default_instance_;
class CMsgGameMatchSignOutPermissionResponse;
class CMsgGameMatchSignOutPermissionResponseDefaultTypeInternal;
extern CMsgGameMatchSignOutPermissionResponseDefaultTypeInternal _CMsgGameMatchSignOutPermissionResponse_default_instance_;
class CMsgGameMatchSignOut_CAdditionalSignoutMsg;
class CMsgGameMatchSignOut_CAdditionalSignoutMsgDefaultTypeInternal;
extern CMsgGameMatchSignOut_CAdditionalSignoutMsgDefaultTypeInternal _CMsgGameMatchSignOut_CAdditionalSignoutMsg_default_instance_;
class CMsgGameMatchSignOut_CCustomGameData;
class CMsgGameMatchSignOut_CCustomGameDataDefaultTypeInternal;
extern CMsgGameMatchSignOut_CCustomGameDataDefaultTypeInternal _CMsgGameMatchSignOut_CCustomGameData_default_instance_;
class CMsgGameMatchSignOut_CSocialFeedMatchEvent;
class CMsgGameMatchSignOut_CSocialFeedMatchEventDefaultTypeInternal;
extern CMsgGameMatchSignOut_CSocialFeedMatchEventDefaultTypeInternal _CMsgGameMatchSignOut_CSocialFeedMatchEvent_default_instance_;
class CMsgGameMatchSignOut_CTeam;
class CMsgGameMatchSignOut_CTeamDefaultTypeInternal;
extern CMsgGameMatchSignOut_CTeamDefaultTypeInternal _CMsgGameMatchSignOut_CTeam_default_instance_;
class CMsgGameMatchSignOut_CTeam_CPlayer;
class CMsgGameMatchSignOut_CTeam_CPlayerDefaultTypeInternal;
extern CMsgGameMatchSignOut_CTeam_CPlayerDefaultTypeInternal _CMsgGameMatchSignOut_CTeam_CPlayer_default_instance_;
class CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData;
class CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameDataDefaultTypeInternal;
extern CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameDataDefaultTypeInternal _CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData_default_instance_;
class CMsgGameMatchSignOut_EventGameLeaderboardEntry;
class CMsgGameMatchSignOut_EventGameLeaderboardEntryDefaultTypeInternal;
extern CMsgGameMatchSignOut_EventGameLeaderboardEntryDefaultTypeInternal _CMsgGameMatchSignOut_EventGameLeaderboardEntry_default_instance_;
class CMsgGameMatchSignOut_WardPlacement;
class CMsgGameMatchSignOut_WardPlacementDefaultTypeInternal;
extern CMsgGameMatchSignOut_WardPlacementDefaultTypeInternal _CMsgGameMatchSignOut_WardPlacement_default_instance_;
class CMsgGameMatchSignoutResponse;
class CMsgGameMatchSignoutResponseDefaultTypeInternal;
extern CMsgGameMatchSignoutResponseDefaultTypeInternal _CMsgGameMatchSignoutResponse_default_instance_;
class CMsgGameMatchSignoutResponse_PlayerMetadata;
class CMsgGameMatchSignoutResponse_PlayerMetadataDefaultTypeInternal;
extern CMsgGameMatchSignoutResponse_PlayerMetadataDefaultTypeInternal _CMsgGameMatchSignoutResponse_PlayerMetadata_default_instance_;
class CMsgGameServerGetLoadGame;
class CMsgGameServerGetLoadGameDefaultTypeInternal;
extern CMsgGameServerGetLoadGameDefaultTypeInternal _CMsgGameServerGetLoadGame_default_instance_;
class CMsgGameServerGetLoadGameResult;
class CMsgGameServerGetLoadGameResultDefaultTypeInternal;
extern CMsgGameServerGetLoadGameResultDefaultTypeInternal _CMsgGameServerGetLoadGameResult_default_instance_;
class CMsgGameServerInfo;
class CMsgGameServerInfoDefaultTypeInternal;
extern CMsgGameServerInfoDefaultTypeInternal _CMsgGameServerInfo_default_instance_;
class CMsgGameServerSaveGameResult;
class CMsgGameServerSaveGameResultDefaultTypeInternal;
extern CMsgGameServerSaveGameResultDefaultTypeInternal _CMsgGameServerSaveGameResult_default_instance_;
class CMsgGameServerUploadSaveGame;
class CMsgGameServerUploadSaveGameDefaultTypeInternal;
extern CMsgGameServerUploadSaveGameDefaultTypeInternal _CMsgGameServerUploadSaveGame_default_instance_;
class CMsgGameserverCrash;
class CMsgGameserverCrashDefaultTypeInternal;
extern CMsgGameserverCrashDefaultTypeInternal _CMsgGameserverCrash_default_instance_;
class CMsgLeaverDetected;
class CMsgLeaverDetectedDefaultTypeInternal;
extern CMsgLeaverDetectedDefaultTypeInternal _CMsgLeaverDetected_default_instance_;
class CMsgLeaverDetectedResponse;
class CMsgLeaverDetectedResponseDefaultTypeInternal;
extern CMsgLeaverDetectedResponseDefaultTypeInternal _CMsgLeaverDetectedResponse_default_instance_;
class CMsgPoorNetworkConditions;
class CMsgPoorNetworkConditionsDefaultTypeInternal;
extern CMsgPoorNetworkConditionsDefaultTypeInternal _CMsgPoorNetworkConditions_default_instance_;
class CMsgPoorNetworkConditions_Player;
class CMsgPoorNetworkConditions_PlayerDefaultTypeInternal;
extern CMsgPoorNetworkConditions_PlayerDefaultTypeInternal _CMsgPoorNetworkConditions_Player_default_instance_;
class CMsgResponseTeamFanfare;
class CMsgResponseTeamFanfareDefaultTypeInternal;
extern CMsgResponseTeamFanfareDefaultTypeInternal _CMsgResponseTeamFanfare_default_instance_;
class CMsgServerGCUpdateSpectatorCount;
class CMsgServerGCUpdateSpectatorCountDefaultTypeInternal;
extern CMsgServerGCUpdateSpectatorCountDefaultTypeInternal _CMsgServerGCUpdateSpectatorCount_default_instance_;
class CMsgServerGetEventPoints;
class CMsgServerGetEventPointsDefaultTypeInternal;
extern CMsgServerGetEventPointsDefaultTypeInternal _CMsgServerGetEventPoints_default_instance_;
class CMsgServerGetEventPointsResponse;
class CMsgServerGetEventPointsResponseDefaultTypeInternal;
extern CMsgServerGetEventPointsResponseDefaultTypeInternal _CMsgServerGetEventPointsResponse_default_instance_;
class CMsgServerGetEventPointsResponse_Points;
class CMsgServerGetEventPointsResponse_PointsDefaultTypeInternal;
extern CMsgServerGetEventPointsResponse_PointsDefaultTypeInternal _CMsgServerGetEventPointsResponse_Points_default_instance_;
class CMsgServerGrantSurveyPermission;
class CMsgServerGrantSurveyPermissionDefaultTypeInternal;
extern CMsgServerGrantSurveyPermissionDefaultTypeInternal _CMsgServerGrantSurveyPermission_default_instance_;
class CMsgServerGrantSurveyPermissionResponse;
class CMsgServerGrantSurveyPermissionResponseDefaultTypeInternal;
extern CMsgServerGrantSurveyPermissionResponseDefaultTypeInternal _CMsgServerGrantSurveyPermissionResponse_default_instance_;
class CMsgServerGrantSurveyPermission_Survey;
class CMsgServerGrantSurveyPermission_SurveyDefaultTypeInternal;
extern CMsgServerGrantSurveyPermission_SurveyDefaultTypeInternal _CMsgServerGrantSurveyPermission_Survey_default_instance_;
class CMsgServerToGCCavernCrawlIsHeroActive;
class CMsgServerToGCCavernCrawlIsHeroActiveDefaultTypeInternal;
extern CMsgServerToGCCavernCrawlIsHeroActiveDefaultTypeInternal _CMsgServerToGCCavernCrawlIsHeroActive_default_instance_;
class CMsgServerToGCCavernCrawlIsHeroActiveResponse;
class CMsgServerToGCCavernCrawlIsHeroActiveResponseDefaultTypeInternal;
extern CMsgServerToGCCavernCrawlIsHeroActiveResponseDefaultTypeInternal _CMsgServerToGCCavernCrawlIsHeroActiveResponse_default_instance_;
class CMsgServerToGCCloseCompendiumInGamePredictionVoting;
class CMsgServerToGCCloseCompendiumInGamePredictionVotingDefaultTypeInternal;
extern CMsgServerToGCCloseCompendiumInGamePredictionVotingDefaultTypeInternal _CMsgServerToGCCloseCompendiumInGamePredictionVoting_default_instance_;
class CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse;
class CMsgServerToGCCloseCompendiumInGamePredictionVotingResponseDefaultTypeInternal;
extern CMsgServerToGCCloseCompendiumInGamePredictionVotingResponseDefaultTypeInternal _CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse_default_instance_;
class CMsgServerToGCCompendiumInGamePredictionResults;
class CMsgServerToGCCompendiumInGamePredictionResultsDefaultTypeInternal;
extern CMsgServerToGCCompendiumInGamePredictionResultsDefaultTypeInternal _CMsgServerToGCCompendiumInGamePredictionResults_default_instance_;
class CMsgServerToGCCompendiumInGamePredictionResultsResponse;
class CMsgServerToGCCompendiumInGamePredictionResultsResponseDefaultTypeInternal;
extern CMsgServerToGCCompendiumInGamePredictionResultsResponseDefaultTypeInternal _CMsgServerToGCCompendiumInGamePredictionResultsResponse_default_instance_;
class CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult;
class CMsgServerToGCCompendiumInGamePredictionResults_PredictionResultDefaultTypeInternal;
extern CMsgServerToGCCompendiumInGamePredictionResults_PredictionResultDefaultTypeInternal _CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult_default_instance_;
class CMsgServerToGCGetAdditionalEquips;
class CMsgServerToGCGetAdditionalEquipsDefaultTypeInternal;
extern CMsgServerToGCGetAdditionalEquipsDefaultTypeInternal _CMsgServerToGCGetAdditionalEquips_default_instance_;
class CMsgServerToGCGetAdditionalEquipsResponse;
class CMsgServerToGCGetAdditionalEquipsResponseDefaultTypeInternal;
extern CMsgServerToGCGetAdditionalEquipsResponseDefaultTypeInternal _CMsgServerToGCGetAdditionalEquipsResponse_default_instance_;
class CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips;
class CMsgServerToGCGetAdditionalEquipsResponse_CUserEquipsDefaultTypeInternal;
extern CMsgServerToGCGetAdditionalEquipsResponse_CUserEquipsDefaultTypeInternal _CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips_default_instance_;
class CMsgServerToGCGetIngameEventData;
class CMsgServerToGCGetIngameEventDataDefaultTypeInternal;
extern CMsgServerToGCGetIngameEventDataDefaultTypeInternal _CMsgServerToGCGetIngameEventData_default_instance_;
class CMsgServerToGCGetProfileCard;
class CMsgServerToGCGetProfileCardDefaultTypeInternal;
extern CMsgServerToGCGetProfileCardDefaultTypeInternal _CMsgServerToGCGetProfileCard_default_instance_;
class CMsgServerToGCGetProfileCardResponse;
class CMsgServerToGCGetProfileCardResponseDefaultTypeInternal;
extern CMsgServerToGCGetProfileCardResponseDefaultTypeInternal _CMsgServerToGCGetProfileCardResponse_default_instance_;
class CMsgServerToGCHoldEventPoints;
class CMsgServerToGCHoldEventPointsDefaultTypeInternal;
extern CMsgServerToGCHoldEventPointsDefaultTypeInternal _CMsgServerToGCHoldEventPoints_default_instance_;
class CMsgServerToGCHoldEventPoints_HoldRequest;
class CMsgServerToGCHoldEventPoints_HoldRequestDefaultTypeInternal;
extern CMsgServerToGCHoldEventPoints_HoldRequestDefaultTypeInternal _CMsgServerToGCHoldEventPoints_HoldRequest_default_instance_;
class CMsgServerToGCKillSummaries;
class CMsgServerToGCKillSummariesDefaultTypeInternal;
extern CMsgServerToGCKillSummariesDefaultTypeInternal _CMsgServerToGCKillSummaries_default_instance_;
class CMsgServerToGCKillSummaries_KillSummary;
class CMsgServerToGCKillSummaries_KillSummaryDefaultTypeInternal;
extern CMsgServerToGCKillSummaries_KillSummaryDefaultTypeInternal _CMsgServerToGCKillSummaries_KillSummary_default_instance_;
class CMsgServerToGCLockCharmTrading;
class CMsgServerToGCLockCharmTradingDefaultTypeInternal;
extern CMsgServerToGCLockCharmTradingDefaultTypeInternal _CMsgServerToGCLockCharmTrading_default_instance_;
class CMsgServerToGCMatchConnectionStats;
class CMsgServerToGCMatchConnectionStatsDefaultTypeInternal;
extern CMsgServerToGCMatchConnectionStatsDefaultTypeInternal _CMsgServerToGCMatchConnectionStats_default_instance_;
class CMsgServerToGCMatchConnectionStats_Player;
class CMsgServerToGCMatchConnectionStats_PlayerDefaultTypeInternal;
extern CMsgServerToGCMatchConnectionStats_PlayerDefaultTypeInternal _CMsgServerToGCMatchConnectionStats_Player_default_instance_;
class CMsgServerToGCMatchPlayerItemPurchaseHistory;
class CMsgServerToGCMatchPlayerItemPurchaseHistoryDefaultTypeInternal;
extern CMsgServerToGCMatchPlayerItemPurchaseHistoryDefaultTypeInternal _CMsgServerToGCMatchPlayerItemPurchaseHistory_default_instance_;
class CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase;
class CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchaseDefaultTypeInternal;
extern CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchaseDefaultTypeInternal _CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase_default_instance_;
class CMsgServerToGCMatchPlayerItemPurchaseHistory_Player;
class CMsgServerToGCMatchPlayerItemPurchaseHistory_PlayerDefaultTypeInternal;
extern CMsgServerToGCMatchPlayerItemPurchaseHistory_PlayerDefaultTypeInternal _CMsgServerToGCMatchPlayerItemPurchaseHistory_Player_default_instance_;
class CMsgServerToGCMatchStateHistory;
class CMsgServerToGCMatchStateHistoryDefaultTypeInternal;
extern CMsgServerToGCMatchStateHistoryDefaultTypeInternal _CMsgServerToGCMatchStateHistory_default_instance_;
class CMsgServerToGCMatchStateHistory_MatchState;
class CMsgServerToGCMatchStateHistory_MatchStateDefaultTypeInternal;
extern CMsgServerToGCMatchStateHistory_MatchStateDefaultTypeInternal _CMsgServerToGCMatchStateHistory_MatchState_default_instance_;
class CMsgServerToGCMatchStateHistory_PlayerState;
class CMsgServerToGCMatchStateHistory_PlayerStateDefaultTypeInternal;
extern CMsgServerToGCMatchStateHistory_PlayerStateDefaultTypeInternal _CMsgServerToGCMatchStateHistory_PlayerState_default_instance_;
class CMsgServerToGCMatchStateHistory_TeamState;
class CMsgServerToGCMatchStateHistory_TeamStateDefaultTypeInternal;
extern CMsgServerToGCMatchStateHistory_TeamStateDefaultTypeInternal _CMsgServerToGCMatchStateHistory_TeamState_default_instance_;
class CMsgServerToGCPostMatchTip;
class CMsgServerToGCPostMatchTipDefaultTypeInternal;
extern CMsgServerToGCPostMatchTipDefaultTypeInternal _CMsgServerToGCPostMatchTip_default_instance_;
class CMsgServerToGCPostMatchTipResponse;
class CMsgServerToGCPostMatchTipResponseDefaultTypeInternal;
extern CMsgServerToGCPostMatchTipResponseDefaultTypeInternal _CMsgServerToGCPostMatchTipResponse_default_instance_;
class CMsgServerToGCRealtimeStats;
class CMsgServerToGCRealtimeStatsDefaultTypeInternal;
extern CMsgServerToGCRealtimeStatsDefaultTypeInternal _CMsgServerToGCRealtimeStats_default_instance_;
class CMsgServerToGCRequestStatus;
class CMsgServerToGCRequestStatusDefaultTypeInternal;
extern CMsgServerToGCRequestStatusDefaultTypeInternal _CMsgServerToGCRequestStatus_default_instance_;
class CMsgServerToGCRequestStatus_Response;
class CMsgServerToGCRequestStatus_ResponseDefaultTypeInternal;
extern CMsgServerToGCRequestStatus_ResponseDefaultTypeInternal _CMsgServerToGCRequestStatus_Response_default_instance_;
class CMsgServerToGCRerollPlayerChallenge;
class CMsgServerToGCRerollPlayerChallengeDefaultTypeInternal;
extern CMsgServerToGCRerollPlayerChallengeDefaultTypeInternal _CMsgServerToGCRerollPlayerChallenge_default_instance_;
class CMsgServerToGCSignoutAwardAdditionalDrops;
class CMsgServerToGCSignoutAwardAdditionalDropsDefaultTypeInternal;
extern CMsgServerToGCSignoutAwardAdditionalDropsDefaultTypeInternal _CMsgServerToGCSignoutAwardAdditionalDrops_default_instance_;
class CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops;
class CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDropsDefaultTypeInternal;
extern CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDropsDefaultTypeInternal _CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops_default_instance_;
class CMsgServerToGCVictoryPredictions;
class CMsgServerToGCVictoryPredictionsDefaultTypeInternal;
extern CMsgServerToGCVictoryPredictionsDefaultTypeInternal _CMsgServerToGCVictoryPredictions_default_instance_;
class CMsgServerToGCVictoryPredictions_Record;
class CMsgServerToGCVictoryPredictions_RecordDefaultTypeInternal;
extern CMsgServerToGCVictoryPredictions_RecordDefaultTypeInternal _CMsgServerToGCVictoryPredictions_Record_default_instance_;
class CMsgSignOutAssassinMiniGameInfo;
class CMsgSignOutAssassinMiniGameInfoDefaultTypeInternal;
extern CMsgSignOutAssassinMiniGameInfoDefaultTypeInternal _CMsgSignOutAssassinMiniGameInfo_default_instance_;
class CMsgSignOutBotInfo;
class CMsgSignOutBotInfoDefaultTypeInternal;
extern CMsgSignOutBotInfoDefaultTypeInternal _CMsgSignOutBotInfo_default_instance_;
class CMsgSignOutCommunicationSummary;
class CMsgSignOutCommunicationSummaryDefaultTypeInternal;
extern CMsgSignOutCommunicationSummaryDefaultTypeInternal _CMsgSignOutCommunicationSummary_default_instance_;
class CMsgSignOutCommunicationSummary_PlayerCommunication;
class CMsgSignOutCommunicationSummary_PlayerCommunicationDefaultTypeInternal;
extern CMsgSignOutCommunicationSummary_PlayerCommunicationDefaultTypeInternal _CMsgSignOutCommunicationSummary_PlayerCommunication_default_instance_;
class CMsgSignOutCommunityGoalProgress;
class CMsgSignOutCommunityGoalProgressDefaultTypeInternal;
extern CMsgSignOutCommunityGoalProgressDefaultTypeInternal _CMsgSignOutCommunityGoalProgress_default_instance_;
class CMsgSignOutCommunityGoalProgress_EventGoalIncrement;
class CMsgSignOutCommunityGoalProgress_EventGoalIncrementDefaultTypeInternal;
extern CMsgSignOutCommunityGoalProgress_EventGoalIncrementDefaultTypeInternal _CMsgSignOutCommunityGoalProgress_EventGoalIncrement_default_instance_;
class CMsgSignOutDraftInfo;
class CMsgSignOutDraftInfoDefaultTypeInternal;
extern CMsgSignOutDraftInfoDefaultTypeInternal _CMsgSignOutDraftInfo_default_instance_;
class CMsgSignOutPlayerStats;
class CMsgSignOutPlayerStatsDefaultTypeInternal;
extern CMsgSignOutPlayerStatsDefaultTypeInternal _CMsgSignOutPlayerStats_default_instance_;
class CMsgSignOutReleaseEventPointHolds;
class CMsgSignOutReleaseEventPointHoldsDefaultTypeInternal;
extern CMsgSignOutReleaseEventPointHoldsDefaultTypeInternal _CMsgSignOutReleaseEventPointHolds_default_instance_;
class CMsgSignOutUpdatePlayerChallenge;
class CMsgSignOutUpdatePlayerChallengeDefaultTypeInternal;
extern CMsgSignOutUpdatePlayerChallengeDefaultTypeInternal _CMsgSignOutUpdatePlayerChallenge_default_instance_;
class CMsgSignOutUpdatePlayerChallenge_Challenge;
class CMsgSignOutUpdatePlayerChallenge_ChallengeDefaultTypeInternal;
extern CMsgSignOutUpdatePlayerChallenge_ChallengeDefaultTypeInternal _CMsgSignOutUpdatePlayerChallenge_Challenge_default_instance_;
class CMsgSignOutWagerStats;
class CMsgSignOutWagerStatsDefaultTypeInternal;
extern CMsgSignOutWagerStatsDefaultTypeInternal _CMsgSignOutWagerStats_default_instance_;
class CMsgSignOutWagerStats_Player;
class CMsgSignOutWagerStats_PlayerDefaultTypeInternal;
extern CMsgSignOutWagerStats_PlayerDefaultTypeInternal _CMsgSignOutWagerStats_Player_default_instance_;
class CMsgSignOutXPCoins;
class CMsgSignOutXPCoinsDefaultTypeInternal;
extern CMsgSignOutXPCoinsDefaultTypeInternal _CMsgSignOutXPCoins_default_instance_;
class CMsgSignOutXPCoins_Player;
class CMsgSignOutXPCoins_PlayerDefaultTypeInternal;
extern CMsgSignOutXPCoins_PlayerDefaultTypeInternal _CMsgSignOutXPCoins_Player_default_instance_;
class CMsgSpendWager;
class CMsgSpendWagerDefaultTypeInternal;
extern CMsgSpendWagerDefaultTypeInternal _CMsgSpendWager_default_instance_;
class CMsgSpendWager_Player;
class CMsgSpendWager_PlayerDefaultTypeInternal;
extern CMsgSpendWager_PlayerDefaultTypeInternal _CMsgSpendWager_Player_default_instance_;
class CMsgSuspiciousActivity;
class CMsgSuspiciousActivityDefaultTypeInternal;
extern CMsgSuspiciousActivityDefaultTypeInternal _CMsgSuspiciousActivity_default_instance_;
class CMsgTeamFanfare;
class CMsgTeamFanfareDefaultTypeInternal;
extern CMsgTeamFanfareDefaultTypeInternal _CMsgTeamFanfare_default_instance_;
class CMsgTimedRewardContainer;
class CMsgTimedRewardContainerDefaultTypeInternal;
extern CMsgTimedRewardContainerDefaultTypeInternal _CMsgTimedRewardContainer_default_instance_;
class CMsgTournamentItemEvent;
class CMsgTournamentItemEventDefaultTypeInternal;
extern CMsgTournamentItemEventDefaultTypeInternal _CMsgTournamentItemEvent_default_instance_;
class CMsgTournamentItemEventResponse;
class CMsgTournamentItemEventResponseDefaultTypeInternal;
extern CMsgTournamentItemEventResponseDefaultTypeInternal _CMsgTournamentItemEventResponse_default_instance_;
class CSerializedCombatLog;
class CSerializedCombatLogDefaultTypeInternal;
extern CSerializedCombatLogDefaultTypeInternal _CSerializedCombatLog_default_instance_;
class CSerializedCombatLog_Dictionary;
class CSerializedCombatLog_DictionaryDefaultTypeInternal;
extern CSerializedCombatLog_DictionaryDefaultTypeInternal _CSerializedCombatLog_Dictionary_default_instance_;
class CSerializedCombatLog_Dictionary_DictString;
class CSerializedCombatLog_Dictionary_DictStringDefaultTypeInternal;
extern CSerializedCombatLog_Dictionary_DictStringDefaultTypeInternal _CSerializedCombatLog_Dictionary_DictString_default_instance_;
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::dota::CMsgConnectedPlayers* Arena::CreateMaybeMessage<::proto::dota::CMsgConnectedPlayers>(Arena*);
template<> ::proto::dota::CMsgConnectedPlayers_Player* Arena::CreateMaybeMessage<::proto::dota::CMsgConnectedPlayers_Player>(Arena*);
template<> ::proto::dota::CMsgDOTAAwardEventPoints* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAAwardEventPoints>(Arena*);
template<> ::proto::dota::CMsgDOTAAwardEventPoints_AwardPoints* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAAwardEventPoints_AwardPoints>(Arena*);
template<> ::proto::dota::CMsgDOTADiretidePrizesRewardedResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTADiretidePrizesRewardedResponse>(Arena*);
template<> ::proto::dota::CMsgDOTAFantasyFinalPlayerStats* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAFantasyFinalPlayerStats>(Arena*);
template<> ::proto::dota::CMsgDOTAFantasyLivePlayerStats* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAFantasyLivePlayerStats>(Arena*);
template<> ::proto::dota::CMsgDOTAFantasyMatch* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAFantasyMatch>(Arena*);
template<> ::proto::dota::CMsgDOTAFrostivusTimeElapsed* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAFrostivusTimeElapsed>(Arena*);
template<> ::proto::dota::CMsgDOTAFrostivusTimeElapsed_User* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAFrostivusTimeElapsed_User>(Arena*);
template<> ::proto::dota::CMsgDOTAGenerateDiretidePrizeList* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGenerateDiretidePrizeList>(Arena*);
template<> ::proto::dota::CMsgDOTAGenerateDiretidePrizeListResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAGenerateDiretidePrizeListResponse>(Arena*);
template<> ::proto::dota::CMsgDOTALiveScoreboardUpdate* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTALiveScoreboardUpdate>(Arena*);
template<> ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTALiveScoreboardUpdate_Team>(Arena*);
template<> ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player>(Arena*);
template<> ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility>(Arena*);
template<> ::proto::dota::CMsgDOTAPlayerFailedToConnect* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAPlayerFailedToConnect>(Arena*);
template<> ::proto::dota::CMsgDOTARequestBatchPlayerResources* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARequestBatchPlayerResources>(Arena*);
template<> ::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse>(Arena*);
template<> ::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse_Result* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse_Result>(Arena*);
template<> ::proto::dota::CMsgDOTARequestPlayerResources* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARequestPlayerResources>(Arena*);
template<> ::proto::dota::CMsgDOTARequestPlayerResourcesResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARequestPlayerResourcesResponse>(Arena*);
template<> ::proto::dota::CMsgDOTARewardDiretidePrizes* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTARewardDiretidePrizes>(Arena*);
template<> ::proto::dota::CMsgDOTAUpdateClippy* Arena::CreateMaybeMessage<::proto::dota::CMsgDOTAUpdateClippy>(Arena*);
template<> ::proto::dota::CMsgGCBanStatusRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgGCBanStatusRequest>(Arena*);
template<> ::proto::dota::CMsgGCBanStatusResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCBanStatusResponse>(Arena*);
template<> ::proto::dota::CMsgGCGCToLANServerRelayConnect* Arena::CreateMaybeMessage<::proto::dota::CMsgGCGCToLANServerRelayConnect>(Arena*);
template<> ::proto::dota::CMsgGCToGCCompendiumInGamePredictionResults* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToGCCompendiumInGamePredictionResults>(Arena*);
template<> ::proto::dota::CMsgGCToRelayConnect* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToRelayConnect>(Arena*);
template<> ::proto::dota::CMsgGCToRelayConnectResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToRelayConnectResponse>(Arena*);
template<> ::proto::dota::CMsgGCToServerConsoleCommand* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToServerConsoleCommand>(Arena*);
template<> ::proto::dota::CMsgGCToServerIngameEventDataOraclePA* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToServerIngameEventDataOraclePA>(Arena*);
template<> ::proto::dota::CMsgGCToServerPingRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToServerPingRequest>(Arena*);
template<> ::proto::dota::CMsgGCToServerPingResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToServerPingResponse>(Arena*);
template<> ::proto::dota::CMsgGCToServerPredictionResult* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToServerPredictionResult>(Arena*);
template<> ::proto::dota::CMsgGCToServerPredictionResult_Prediction* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToServerPredictionResult_Prediction>(Arena*);
template<> ::proto::dota::CMsgGCToServerRealtimeStatsStartStop* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToServerRealtimeStatsStartStop>(Arena*);
template<> ::proto::dota::CMsgGCToServerUpdateSteamBroadcasting* Arena::CreateMaybeMessage<::proto::dota::CMsgGCToServerUpdateSteamBroadcasting>(Arena*);
template<> ::proto::dota::CMsgGCtoServerTensorflowInstance* Arena::CreateMaybeMessage<::proto::dota::CMsgGCtoServerTensorflowInstance>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignOut* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOut>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignOutEventGameData* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOutEventGameData>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignOutPermissionRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOutPermissionRequest>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignOutPermissionResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOutPermissionResponse>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignOut_CAdditionalSignoutMsg* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOut_CAdditionalSignoutMsg>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignOut_CCustomGameData* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOut_CCustomGameData>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignOut_CSocialFeedMatchEvent* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOut_CSocialFeedMatchEvent>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignOut_CTeam* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOut_CTeam>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignOut_EventGameLeaderboardEntry* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOut_EventGameLeaderboardEntry>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignOut_WardPlacement* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOut_WardPlacement>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignoutResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignoutResponse>(Arena*);
template<> ::proto::dota::CMsgGameMatchSignoutResponse_PlayerMetadata* Arena::CreateMaybeMessage<::proto::dota::CMsgGameMatchSignoutResponse_PlayerMetadata>(Arena*);
template<> ::proto::dota::CMsgGameServerGetLoadGame* Arena::CreateMaybeMessage<::proto::dota::CMsgGameServerGetLoadGame>(Arena*);
template<> ::proto::dota::CMsgGameServerGetLoadGameResult* Arena::CreateMaybeMessage<::proto::dota::CMsgGameServerGetLoadGameResult>(Arena*);
template<> ::proto::dota::CMsgGameServerInfo* Arena::CreateMaybeMessage<::proto::dota::CMsgGameServerInfo>(Arena*);
template<> ::proto::dota::CMsgGameServerSaveGameResult* Arena::CreateMaybeMessage<::proto::dota::CMsgGameServerSaveGameResult>(Arena*);
template<> ::proto::dota::CMsgGameServerUploadSaveGame* Arena::CreateMaybeMessage<::proto::dota::CMsgGameServerUploadSaveGame>(Arena*);
template<> ::proto::dota::CMsgGameserverCrash* Arena::CreateMaybeMessage<::proto::dota::CMsgGameserverCrash>(Arena*);
template<> ::proto::dota::CMsgLeaverDetected* Arena::CreateMaybeMessage<::proto::dota::CMsgLeaverDetected>(Arena*);
template<> ::proto::dota::CMsgLeaverDetectedResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgLeaverDetectedResponse>(Arena*);
template<> ::proto::dota::CMsgPoorNetworkConditions* Arena::CreateMaybeMessage<::proto::dota::CMsgPoorNetworkConditions>(Arena*);
template<> ::proto::dota::CMsgPoorNetworkConditions_Player* Arena::CreateMaybeMessage<::proto::dota::CMsgPoorNetworkConditions_Player>(Arena*);
template<> ::proto::dota::CMsgResponseTeamFanfare* Arena::CreateMaybeMessage<::proto::dota::CMsgResponseTeamFanfare>(Arena*);
template<> ::proto::dota::CMsgServerGCUpdateSpectatorCount* Arena::CreateMaybeMessage<::proto::dota::CMsgServerGCUpdateSpectatorCount>(Arena*);
template<> ::proto::dota::CMsgServerGetEventPoints* Arena::CreateMaybeMessage<::proto::dota::CMsgServerGetEventPoints>(Arena*);
template<> ::proto::dota::CMsgServerGetEventPointsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgServerGetEventPointsResponse>(Arena*);
template<> ::proto::dota::CMsgServerGetEventPointsResponse_Points* Arena::CreateMaybeMessage<::proto::dota::CMsgServerGetEventPointsResponse_Points>(Arena*);
template<> ::proto::dota::CMsgServerGrantSurveyPermission* Arena::CreateMaybeMessage<::proto::dota::CMsgServerGrantSurveyPermission>(Arena*);
template<> ::proto::dota::CMsgServerGrantSurveyPermissionResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgServerGrantSurveyPermissionResponse>(Arena*);
template<> ::proto::dota::CMsgServerGrantSurveyPermission_Survey* Arena::CreateMaybeMessage<::proto::dota::CMsgServerGrantSurveyPermission_Survey>(Arena*);
template<> ::proto::dota::CMsgServerToGCCavernCrawlIsHeroActive* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCCavernCrawlIsHeroActive>(Arena*);
template<> ::proto::dota::CMsgServerToGCCavernCrawlIsHeroActiveResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCCavernCrawlIsHeroActiveResponse>(Arena*);
template<> ::proto::dota::CMsgServerToGCCloseCompendiumInGamePredictionVoting* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCCloseCompendiumInGamePredictionVoting>(Arena*);
template<> ::proto::dota::CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse>(Arena*);
template<> ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults>(Arena*);
template<> ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResultsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCCompendiumInGamePredictionResultsResponse>(Arena*);
template<> ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult>(Arena*);
template<> ::proto::dota::CMsgServerToGCGetAdditionalEquips* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCGetAdditionalEquips>(Arena*);
template<> ::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse>(Arena*);
template<> ::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips>(Arena*);
template<> ::proto::dota::CMsgServerToGCGetIngameEventData* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCGetIngameEventData>(Arena*);
template<> ::proto::dota::CMsgServerToGCGetProfileCard* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCGetProfileCard>(Arena*);
template<> ::proto::dota::CMsgServerToGCGetProfileCardResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCGetProfileCardResponse>(Arena*);
template<> ::proto::dota::CMsgServerToGCHoldEventPoints* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCHoldEventPoints>(Arena*);
template<> ::proto::dota::CMsgServerToGCHoldEventPoints_HoldRequest* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCHoldEventPoints_HoldRequest>(Arena*);
template<> ::proto::dota::CMsgServerToGCKillSummaries* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCKillSummaries>(Arena*);
template<> ::proto::dota::CMsgServerToGCKillSummaries_KillSummary* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCKillSummaries_KillSummary>(Arena*);
template<> ::proto::dota::CMsgServerToGCLockCharmTrading* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCLockCharmTrading>(Arena*);
template<> ::proto::dota::CMsgServerToGCMatchConnectionStats* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCMatchConnectionStats>(Arena*);
template<> ::proto::dota::CMsgServerToGCMatchConnectionStats_Player* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCMatchConnectionStats_Player>(Arena*);
template<> ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory>(Arena*);
template<> ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase>(Arena*);
template<> ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_Player* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_Player>(Arena*);
template<> ::proto::dota::CMsgServerToGCMatchStateHistory* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCMatchStateHistory>(Arena*);
template<> ::proto::dota::CMsgServerToGCMatchStateHistory_MatchState* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCMatchStateHistory_MatchState>(Arena*);
template<> ::proto::dota::CMsgServerToGCMatchStateHistory_PlayerState* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCMatchStateHistory_PlayerState>(Arena*);
template<> ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCMatchStateHistory_TeamState>(Arena*);
template<> ::proto::dota::CMsgServerToGCPostMatchTip* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCPostMatchTip>(Arena*);
template<> ::proto::dota::CMsgServerToGCPostMatchTipResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCPostMatchTipResponse>(Arena*);
template<> ::proto::dota::CMsgServerToGCRealtimeStats* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCRealtimeStats>(Arena*);
template<> ::proto::dota::CMsgServerToGCRequestStatus* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCRequestStatus>(Arena*);
template<> ::proto::dota::CMsgServerToGCRequestStatus_Response* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCRequestStatus_Response>(Arena*);
template<> ::proto::dota::CMsgServerToGCRerollPlayerChallenge* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCRerollPlayerChallenge>(Arena*);
template<> ::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops>(Arena*);
template<> ::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops>(Arena*);
template<> ::proto::dota::CMsgServerToGCVictoryPredictions* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCVictoryPredictions>(Arena*);
template<> ::proto::dota::CMsgServerToGCVictoryPredictions_Record* Arena::CreateMaybeMessage<::proto::dota::CMsgServerToGCVictoryPredictions_Record>(Arena*);
template<> ::proto::dota::CMsgSignOutAssassinMiniGameInfo* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutAssassinMiniGameInfo>(Arena*);
template<> ::proto::dota::CMsgSignOutBotInfo* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutBotInfo>(Arena*);
template<> ::proto::dota::CMsgSignOutCommunicationSummary* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutCommunicationSummary>(Arena*);
template<> ::proto::dota::CMsgSignOutCommunicationSummary_PlayerCommunication* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutCommunicationSummary_PlayerCommunication>(Arena*);
template<> ::proto::dota::CMsgSignOutCommunityGoalProgress* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutCommunityGoalProgress>(Arena*);
template<> ::proto::dota::CMsgSignOutCommunityGoalProgress_EventGoalIncrement* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutCommunityGoalProgress_EventGoalIncrement>(Arena*);
template<> ::proto::dota::CMsgSignOutDraftInfo* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutDraftInfo>(Arena*);
template<> ::proto::dota::CMsgSignOutPlayerStats* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutPlayerStats>(Arena*);
template<> ::proto::dota::CMsgSignOutReleaseEventPointHolds* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutReleaseEventPointHolds>(Arena*);
template<> ::proto::dota::CMsgSignOutUpdatePlayerChallenge* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutUpdatePlayerChallenge>(Arena*);
template<> ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge>(Arena*);
template<> ::proto::dota::CMsgSignOutWagerStats* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutWagerStats>(Arena*);
template<> ::proto::dota::CMsgSignOutWagerStats_Player* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutWagerStats_Player>(Arena*);
template<> ::proto::dota::CMsgSignOutXPCoins* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutXPCoins>(Arena*);
template<> ::proto::dota::CMsgSignOutXPCoins_Player* Arena::CreateMaybeMessage<::proto::dota::CMsgSignOutXPCoins_Player>(Arena*);
template<> ::proto::dota::CMsgSpendWager* Arena::CreateMaybeMessage<::proto::dota::CMsgSpendWager>(Arena*);
template<> ::proto::dota::CMsgSpendWager_Player* Arena::CreateMaybeMessage<::proto::dota::CMsgSpendWager_Player>(Arena*);
template<> ::proto::dota::CMsgSuspiciousActivity* Arena::CreateMaybeMessage<::proto::dota::CMsgSuspiciousActivity>(Arena*);
template<> ::proto::dota::CMsgTeamFanfare* Arena::CreateMaybeMessage<::proto::dota::CMsgTeamFanfare>(Arena*);
template<> ::proto::dota::CMsgTimedRewardContainer* Arena::CreateMaybeMessage<::proto::dota::CMsgTimedRewardContainer>(Arena*);
template<> ::proto::dota::CMsgTournamentItemEvent* Arena::CreateMaybeMessage<::proto::dota::CMsgTournamentItemEvent>(Arena*);
template<> ::proto::dota::CMsgTournamentItemEventResponse* Arena::CreateMaybeMessage<::proto::dota::CMsgTournamentItemEventResponse>(Arena*);
template<> ::proto::dota::CSerializedCombatLog* Arena::CreateMaybeMessage<::proto::dota::CSerializedCombatLog>(Arena*);
template<> ::proto::dota::CSerializedCombatLog_Dictionary* Arena::CreateMaybeMessage<::proto::dota::CSerializedCombatLog_Dictionary>(Arena*);
template<> ::proto::dota::CSerializedCombatLog_Dictionary_DictString* Arena::CreateMaybeMessage<::proto::dota::CSerializedCombatLog_Dictionary_DictString>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace dota {

enum CMsgConnectedPlayers_SendReason {
  CMsgConnectedPlayers_SendReason_INVALID = 0,
  CMsgConnectedPlayers_SendReason_HEARTBEAT = 1,
  CMsgConnectedPlayers_SendReason_GAME_STATE = 2,
  CMsgConnectedPlayers_SendReason_FIRST_BLOOD = 3,
  CMsgConnectedPlayers_SendReason_PLAYER_CONNECTED = 4,
  CMsgConnectedPlayers_SendReason_PLAYER_HERO = 5,
  CMsgConnectedPlayers_SendReason_PLAYER_DISCONNECTED_CONSEQUENCES = 6,
  CMsgConnectedPlayers_SendReason_PLAYER_DISCONNECTED_NOCONSEQUENCES = 7,
  CMsgConnectedPlayers_SendReason_GAMESTATE_TIMEOUT = 10,
  CMsgConnectedPlayers_SendReason_MASS_DISCONNECT = 11,
  CMsgConnectedPlayers_SendReason_KILLS = 13,
  CMsgConnectedPlayers_SendReason_BUILDING_STATE = 14
};
bool CMsgConnectedPlayers_SendReason_IsValid(int value);
const CMsgConnectedPlayers_SendReason CMsgConnectedPlayers_SendReason_SendReason_MIN = CMsgConnectedPlayers_SendReason_INVALID;
const CMsgConnectedPlayers_SendReason CMsgConnectedPlayers_SendReason_SendReason_MAX = CMsgConnectedPlayers_SendReason_BUILDING_STATE;
const int CMsgConnectedPlayers_SendReason_SendReason_ARRAYSIZE = CMsgConnectedPlayers_SendReason_SendReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgConnectedPlayers_SendReason_descriptor();
inline const ::std::string& CMsgConnectedPlayers_SendReason_Name(CMsgConnectedPlayers_SendReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgConnectedPlayers_SendReason_descriptor(), value);
}
inline bool CMsgConnectedPlayers_SendReason_Parse(
    const ::std::string& name, CMsgConnectedPlayers_SendReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgConnectedPlayers_SendReason>(
    CMsgConnectedPlayers_SendReason_descriptor(), name, value);
}
enum CMsgGameServerInfo_ServerType {
  CMsgGameServerInfo_ServerType_UNSPECIFIED = 0,
  CMsgGameServerInfo_ServerType_GAME = 1,
  CMsgGameServerInfo_ServerType_PROXY = 2,
  CMsgGameServerInfo_ServerType_TENSORFLOW = 3
};
bool CMsgGameServerInfo_ServerType_IsValid(int value);
const CMsgGameServerInfo_ServerType CMsgGameServerInfo_ServerType_ServerType_MIN = CMsgGameServerInfo_ServerType_UNSPECIFIED;
const CMsgGameServerInfo_ServerType CMsgGameServerInfo_ServerType_ServerType_MAX = CMsgGameServerInfo_ServerType_TENSORFLOW;
const int CMsgGameServerInfo_ServerType_ServerType_ARRAYSIZE = CMsgGameServerInfo_ServerType_ServerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerInfo_ServerType_descriptor();
inline const ::std::string& CMsgGameServerInfo_ServerType_Name(CMsgGameServerInfo_ServerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerInfo_ServerType_descriptor(), value);
}
inline bool CMsgGameServerInfo_ServerType_Parse(
    const ::std::string& name, CMsgGameServerInfo_ServerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerInfo_ServerType>(
    CMsgGameServerInfo_ServerType_descriptor(), name, value);
}
enum CMsgGameServerInfo_CustomGames {
  CMsgGameServerInfo_CustomGames_BOTH = 0,
  CMsgGameServerInfo_CustomGames_NONE = 1,
  CMsgGameServerInfo_CustomGames_ONLY = 2
};
bool CMsgGameServerInfo_CustomGames_IsValid(int value);
const CMsgGameServerInfo_CustomGames CMsgGameServerInfo_CustomGames_CustomGames_MIN = CMsgGameServerInfo_CustomGames_BOTH;
const CMsgGameServerInfo_CustomGames CMsgGameServerInfo_CustomGames_CustomGames_MAX = CMsgGameServerInfo_CustomGames_ONLY;
const int CMsgGameServerInfo_CustomGames_CustomGames_ARRAYSIZE = CMsgGameServerInfo_CustomGames_CustomGames_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerInfo_CustomGames_descriptor();
inline const ::std::string& CMsgGameServerInfo_CustomGames_Name(CMsgGameServerInfo_CustomGames value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerInfo_CustomGames_descriptor(), value);
}
inline bool CMsgGameServerInfo_CustomGames_Parse(
    const ::std::string& name, CMsgGameServerInfo_CustomGames* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerInfo_CustomGames>(
    CMsgGameServerInfo_CustomGames_descriptor(), name, value);
}
enum CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState {
  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateNotLearned = 0,
  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateCooldown = 1,
  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateNeedsMana = 2,
  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateReady = 3
};
bool CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_IsValid(int value);
const CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_MIN = CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateNotLearned;
const CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_MAX = CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateReady;
const int CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_ARRAYSIZE = CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_descriptor();
inline const ::std::string& CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_Name(CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_descriptor(), value);
}
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_Parse(
    const ::std::string& name, CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState>(
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_descriptor(), name, value);
}
enum CMsgGameServerSaveGameResult_Result {
  CMsgGameServerSaveGameResult_Result_SaveSuccessful = 0,
  CMsgGameServerSaveGameResult_Result_SessionNotFound = 1,
  CMsgGameServerSaveGameResult_Result_DatabaseError = 2,
  CMsgGameServerSaveGameResult_Result_TooBig = 3
};
bool CMsgGameServerSaveGameResult_Result_IsValid(int value);
const CMsgGameServerSaveGameResult_Result CMsgGameServerSaveGameResult_Result_Result_MIN = CMsgGameServerSaveGameResult_Result_SaveSuccessful;
const CMsgGameServerSaveGameResult_Result CMsgGameServerSaveGameResult_Result_Result_MAX = CMsgGameServerSaveGameResult_Result_TooBig;
const int CMsgGameServerSaveGameResult_Result_Result_ARRAYSIZE = CMsgGameServerSaveGameResult_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerSaveGameResult_Result_descriptor();
inline const ::std::string& CMsgGameServerSaveGameResult_Result_Name(CMsgGameServerSaveGameResult_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerSaveGameResult_Result_descriptor(), value);
}
inline bool CMsgGameServerSaveGameResult_Result_Parse(
    const ::std::string& name, CMsgGameServerSaveGameResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerSaveGameResult_Result>(
    CMsgGameServerSaveGameResult_Result_descriptor(), name, value);
}
enum CMsgGCToServerPredictionResult_Prediction_EResult {
  CMsgGCToServerPredictionResult_Prediction_EResult_k_eResult_ItemGranted = 1,
  CMsgGCToServerPredictionResult_Prediction_EResult_k_eResult_Destroyed = 2
};
bool CMsgGCToServerPredictionResult_Prediction_EResult_IsValid(int value);
const CMsgGCToServerPredictionResult_Prediction_EResult CMsgGCToServerPredictionResult_Prediction_EResult_EResult_MIN = CMsgGCToServerPredictionResult_Prediction_EResult_k_eResult_ItemGranted;
const CMsgGCToServerPredictionResult_Prediction_EResult CMsgGCToServerPredictionResult_Prediction_EResult_EResult_MAX = CMsgGCToServerPredictionResult_Prediction_EResult_k_eResult_Destroyed;
const int CMsgGCToServerPredictionResult_Prediction_EResult_EResult_ARRAYSIZE = CMsgGCToServerPredictionResult_Prediction_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCToServerPredictionResult_Prediction_EResult_descriptor();
inline const ::std::string& CMsgGCToServerPredictionResult_Prediction_EResult_Name(CMsgGCToServerPredictionResult_Prediction_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCToServerPredictionResult_Prediction_EResult_descriptor(), value);
}
inline bool CMsgGCToServerPredictionResult_Prediction_EResult_Parse(
    const ::std::string& name, CMsgGCToServerPredictionResult_Prediction_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCToServerPredictionResult_Prediction_EResult>(
    CMsgGCToServerPredictionResult_Prediction_EResult_descriptor(), name, value);
}
enum CMsgServerToGCPostMatchTipResponse_Result {
  CMsgServerToGCPostMatchTipResponse_Result_SUCCESS = 0,
  CMsgServerToGCPostMatchTipResponse_Result_FAILURE = 1
};
bool CMsgServerToGCPostMatchTipResponse_Result_IsValid(int value);
const CMsgServerToGCPostMatchTipResponse_Result CMsgServerToGCPostMatchTipResponse_Result_Result_MIN = CMsgServerToGCPostMatchTipResponse_Result_SUCCESS;
const CMsgServerToGCPostMatchTipResponse_Result CMsgServerToGCPostMatchTipResponse_Result_Result_MAX = CMsgServerToGCPostMatchTipResponse_Result_FAILURE;
const int CMsgServerToGCPostMatchTipResponse_Result_Result_ARRAYSIZE = CMsgServerToGCPostMatchTipResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgServerToGCPostMatchTipResponse_Result_descriptor();
inline const ::std::string& CMsgServerToGCPostMatchTipResponse_Result_Name(CMsgServerToGCPostMatchTipResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgServerToGCPostMatchTipResponse_Result_descriptor(), value);
}
inline bool CMsgServerToGCPostMatchTipResponse_Result_Parse(
    const ::std::string& name, CMsgServerToGCPostMatchTipResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgServerToGCPostMatchTipResponse_Result>(
    CMsgServerToGCPostMatchTipResponse_Result_descriptor(), name, value);
}
enum EPoorNetworkConditionsType {
  k_EPoorNetworkConditions_None = 0,
  k_EPoorNetworkConditions_Unknown = 1,
  k_EPoorNetworkConditions_MassDisconnect = 2,
  k_EPoorNetworkConditions_ExcessBadQosIntervals = 3
};
bool EPoorNetworkConditionsType_IsValid(int value);
const EPoorNetworkConditionsType EPoorNetworkConditionsType_MIN = k_EPoorNetworkConditions_None;
const EPoorNetworkConditionsType EPoorNetworkConditionsType_MAX = k_EPoorNetworkConditions_ExcessBadQosIntervals;
const int EPoorNetworkConditionsType_ARRAYSIZE = EPoorNetworkConditionsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPoorNetworkConditionsType_descriptor();
inline const ::std::string& EPoorNetworkConditionsType_Name(EPoorNetworkConditionsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPoorNetworkConditionsType_descriptor(), value);
}
inline bool EPoorNetworkConditionsType_Parse(
    const ::std::string& name, EPoorNetworkConditionsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPoorNetworkConditionsType>(
    EPoorNetworkConditionsType_descriptor(), name, value);
}
enum EAbilityAbuseType {
  k_EAbilityAbuseType_None = 0,
  k_EAbilityAbuseType_Io_Relocate = 1,
  k_EAbilityAbuseType_Chen_Test_Of_Faith = 2,
  k_EAbilityAbuseType_Bane_Nightmare = 3,
  k_EAbilityAbuseType_Bloodseeker_Bloodrage = 4,
  k_EAbilityAbuseType_Outworld_Astral_Imprisonment = 5,
  k_EAbilityAbuseType_Shadow_Demon_Disruption = 6,
  k_EAbilityAbuseType_Grimstroke_InkSwell = 7
};
bool EAbilityAbuseType_IsValid(int value);
const EAbilityAbuseType EAbilityAbuseType_MIN = k_EAbilityAbuseType_None;
const EAbilityAbuseType EAbilityAbuseType_MAX = k_EAbilityAbuseType_Grimstroke_InkSwell;
const int EAbilityAbuseType_ARRAYSIZE = EAbilityAbuseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EAbilityAbuseType_descriptor();
inline const ::std::string& EAbilityAbuseType_Name(EAbilityAbuseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EAbilityAbuseType_descriptor(), value);
}
inline bool EAbilityAbuseType_Parse(
    const ::std::string& name, EAbilityAbuseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EAbilityAbuseType>(
    EAbilityAbuseType_descriptor(), name, value);
}
enum EIntentionalFeedingType {
  k_EIntentionalFeedingType_None = 0,
  k_EIntentionalFeedingType_ExcessiveDeaths = 1,
  k_EIntentionalFeedingType_MultipleCourierPurchases = 2,
  k_EIntentionalFeedingType_MultipleCourierDeaths = 4,
  k_EIntentionalFeedingType_LowActivity = 8,
  k_EIntentionalFeedingType_LowDamage = 16,
  k_EIntentionalFeedingType_HighUnspentGold = 32,
  k_EIntentionalFeedingType_SoldTooMuchItemValue = 64,
  k_EIntentionalFeedingType_TooManyDroppedItems = 128,
  k_EIntentionalFeedingType_ExcessiveTowerDamage = 256,
  k_EIntentionalFeedingType_LastHitsDenies = 512,
  k_EIntentionalFeedingType_XPPM = 1024,
  k_EIntentionalFeedingType_SuspiciousOrders = 2048
};
bool EIntentionalFeedingType_IsValid(int value);
const EIntentionalFeedingType EIntentionalFeedingType_MIN = k_EIntentionalFeedingType_None;
const EIntentionalFeedingType EIntentionalFeedingType_MAX = k_EIntentionalFeedingType_SuspiciousOrders;
const int EIntentionalFeedingType_ARRAYSIZE = EIntentionalFeedingType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EIntentionalFeedingType_descriptor();
inline const ::std::string& EIntentionalFeedingType_Name(EIntentionalFeedingType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EIntentionalFeedingType_descriptor(), value);
}
inline bool EIntentionalFeedingType_Parse(
    const ::std::string& name, EIntentionalFeedingType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EIntentionalFeedingType>(
    EIntentionalFeedingType_descriptor(), name, value);
}
enum ESuspiciousActivity {
  k_ESuspiciousActivity_VAC_MultipleInstances = 1,
  k_ESuspiciousActivity_IntentionalFeeding = 100,
  k_ESuspiciousActivity_SuspectedBotFarming = 101
};
bool ESuspiciousActivity_IsValid(int value);
const ESuspiciousActivity ESuspiciousActivity_MIN = k_ESuspiciousActivity_VAC_MultipleInstances;
const ESuspiciousActivity ESuspiciousActivity_MAX = k_ESuspiciousActivity_SuspectedBotFarming;
const int ESuspiciousActivity_ARRAYSIZE = ESuspiciousActivity_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESuspiciousActivity_descriptor();
inline const ::std::string& ESuspiciousActivity_Name(ESuspiciousActivity value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESuspiciousActivity_descriptor(), value);
}
inline bool ESuspiciousActivity_Parse(
    const ::std::string& name, ESuspiciousActivity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESuspiciousActivity>(
    ESuspiciousActivity_descriptor(), name, value);
}
enum ESuspiciousBuildType {
  k_ESuspiciousBuildType_None = 0,
  k_ESuspiciousBuildType_NoGoldSpent = 1,
  k_ESuspiciousBuildType_NoItems = 2,
  k_ESuspiciousBuildType_NoSignificantItems = 3,
  k_ESuspiciousBuildType_TooManyBoots = 4,
  k_ESuspiciousBuildType_Bot1 = 101,
  k_ESuspiciousBuildType_Bot2 = 102,
  k_ESuspiciousBuildType_Bot3 = 103,
  k_ESuspiciousBuildType_Bot4 = 104,
  k_ESuspiciousBuildType_Bot5 = 105
};
bool ESuspiciousBuildType_IsValid(int value);
const ESuspiciousBuildType ESuspiciousBuildType_MIN = k_ESuspiciousBuildType_None;
const ESuspiciousBuildType ESuspiciousBuildType_MAX = k_ESuspiciousBuildType_Bot5;
const int ESuspiciousBuildType_ARRAYSIZE = ESuspiciousBuildType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESuspiciousBuildType_descriptor();
inline const ::std::string& ESuspiciousBuildType_Name(ESuspiciousBuildType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESuspiciousBuildType_descriptor(), value);
}
inline bool ESuspiciousBuildType_Parse(
    const ::std::string& name, ESuspiciousBuildType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESuspiciousBuildType>(
    ESuspiciousBuildType_descriptor(), name, value);
}
// ===================================================================

class CMsgPoorNetworkConditions_Player final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPoorNetworkConditions.Player) */ {
 public:
  CMsgPoorNetworkConditions_Player();
  virtual ~CMsgPoorNetworkConditions_Player();

  CMsgPoorNetworkConditions_Player(const CMsgPoorNetworkConditions_Player& from);

  inline CMsgPoorNetworkConditions_Player& operator=(const CMsgPoorNetworkConditions_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPoorNetworkConditions_Player(CMsgPoorNetworkConditions_Player&& from) noexcept
    : CMsgPoorNetworkConditions_Player() {
    *this = ::std::move(from);
  }

  inline CMsgPoorNetworkConditions_Player& operator=(CMsgPoorNetworkConditions_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPoorNetworkConditions_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPoorNetworkConditions_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgPoorNetworkConditions_Player*>(
               &_CMsgPoorNetworkConditions_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CMsgPoorNetworkConditions_Player* other);
  friend void swap(CMsgPoorNetworkConditions_Player& a, CMsgPoorNetworkConditions_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPoorNetworkConditions_Player* New() const final {
    return CreateMaybeMessage<CMsgPoorNetworkConditions_Player>(nullptr);
  }

  CMsgPoorNetworkConditions_Player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPoorNetworkConditions_Player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPoorNetworkConditions_Player& from);
  void MergeFrom(const CMsgPoorNetworkConditions_Player& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPoorNetworkConditions_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional .proto.dota.ENetworkDisconnectionReason disconnect_reason = 2 [default = NETWORK_DISCONNECT_INVALID];
  bool has_disconnect_reason() const;
  void clear_disconnect_reason();
  static const int kDisconnectReasonFieldNumber = 2;
  ::proto::dota::ENetworkDisconnectionReason disconnect_reason() const;
  void set_disconnect_reason(::proto::dota::ENetworkDisconnectionReason value);

  // optional uint32 num_bad_intervals = 3;
  bool has_num_bad_intervals() const;
  void clear_num_bad_intervals();
  static const int kNumBadIntervalsFieldNumber = 3;
  ::google::protobuf::uint32 num_bad_intervals() const;
  void set_num_bad_intervals(::google::protobuf::uint32 value);

  // optional uint32 peak_loss_pct = 4;
  bool has_peak_loss_pct() const;
  void clear_peak_loss_pct();
  static const int kPeakLossPctFieldNumber = 4;
  ::google::protobuf::uint32 peak_loss_pct() const;
  void set_peak_loss_pct(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPoorNetworkConditions.Player)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  int disconnect_reason_;
  ::google::protobuf::uint32 num_bad_intervals_;
  ::google::protobuf::uint32 peak_loss_pct_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgPoorNetworkConditions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPoorNetworkConditions) */ {
 public:
  CMsgPoorNetworkConditions();
  virtual ~CMsgPoorNetworkConditions();

  CMsgPoorNetworkConditions(const CMsgPoorNetworkConditions& from);

  inline CMsgPoorNetworkConditions& operator=(const CMsgPoorNetworkConditions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPoorNetworkConditions(CMsgPoorNetworkConditions&& from) noexcept
    : CMsgPoorNetworkConditions() {
    *this = ::std::move(from);
  }

  inline CMsgPoorNetworkConditions& operator=(CMsgPoorNetworkConditions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgPoorNetworkConditions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPoorNetworkConditions* internal_default_instance() {
    return reinterpret_cast<const CMsgPoorNetworkConditions*>(
               &_CMsgPoorNetworkConditions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CMsgPoorNetworkConditions* other);
  friend void swap(CMsgPoorNetworkConditions& a, CMsgPoorNetworkConditions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPoorNetworkConditions* New() const final {
    return CreateMaybeMessage<CMsgPoorNetworkConditions>(nullptr);
  }

  CMsgPoorNetworkConditions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPoorNetworkConditions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgPoorNetworkConditions& from);
  void MergeFrom(const CMsgPoorNetworkConditions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPoorNetworkConditions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgPoorNetworkConditions_Player Player;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgPoorNetworkConditions.Player players = 2;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 2;
  ::proto::dota::CMsgPoorNetworkConditions_Player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPoorNetworkConditions_Player >*
      mutable_players();
  const ::proto::dota::CMsgPoorNetworkConditions_Player& players(int index) const;
  ::proto::dota::CMsgPoorNetworkConditions_Player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPoorNetworkConditions_Player >&
      players() const;

  // optional .proto.dota.EPoorNetworkConditionsType detection_type = 1 [default = k_EPoorNetworkConditions_None];
  bool has_detection_type() const;
  void clear_detection_type();
  static const int kDetectionTypeFieldNumber = 1;
  ::proto::dota::EPoorNetworkConditionsType detection_type() const;
  void set_detection_type(::proto::dota::EPoorNetworkConditionsType value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPoorNetworkConditions)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPoorNetworkConditions_Player > players_;
  int detection_type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameserverCrash final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameserverCrash) */ {
 public:
  CMsgGameserverCrash();
  virtual ~CMsgGameserverCrash();

  CMsgGameserverCrash(const CMsgGameserverCrash& from);

  inline CMsgGameserverCrash& operator=(const CMsgGameserverCrash& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameserverCrash(CMsgGameserverCrash&& from) noexcept
    : CMsgGameserverCrash() {
    *this = ::std::move(from);
  }

  inline CMsgGameserverCrash& operator=(CMsgGameserverCrash&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameserverCrash& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameserverCrash* internal_default_instance() {
    return reinterpret_cast<const CMsgGameserverCrash*>(
               &_CMsgGameserverCrash_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CMsgGameserverCrash* other);
  friend void swap(CMsgGameserverCrash& a, CMsgGameserverCrash& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameserverCrash* New() const final {
    return CreateMaybeMessage<CMsgGameserverCrash>(nullptr);
  }

  CMsgGameserverCrash* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameserverCrash>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameserverCrash& from);
  void MergeFrom(const CMsgGameserverCrash& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameserverCrash* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional fixed64 lobby_id = 2;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 2;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional .proto.dota.DOTA_GameState game_state = 3 [default = DOTA_GAMERULES_STATE_INIT];
  bool has_game_state() const;
  void clear_game_state();
  static const int kGameStateFieldNumber = 3;
  ::proto::dota::DOTA_GameState game_state() const;
  void set_game_state(::proto::dota::DOTA_GameState value);

  // optional fixed32 sentinel_save_time = 4;
  bool has_sentinel_save_time() const;
  void clear_sentinel_save_time();
  static const int kSentinelSaveTimeFieldNumber = 4;
  ::google::protobuf::uint32 sentinel_save_time() const;
  void set_sentinel_save_time(::google::protobuf::uint32 value);

  // optional fixed64 server_steam_id = 5;
  bool has_server_steam_id() const;
  void clear_server_steam_id();
  static const int kServerSteamIdFieldNumber = 5;
  ::google::protobuf::uint64 server_steam_id() const;
  void set_server_steam_id(::google::protobuf::uint64 value);

  // optional fixed32 server_public_ip_addr = 6;
  bool has_server_public_ip_addr() const;
  void clear_server_public_ip_addr();
  static const int kServerPublicIpAddrFieldNumber = 6;
  ::google::protobuf::uint32 server_public_ip_addr() const;
  void set_server_public_ip_addr(::google::protobuf::uint32 value);

  // optional uint32 server_port = 7;
  bool has_server_port() const;
  void clear_server_port();
  static const int kServerPortFieldNumber = 7;
  ::google::protobuf::uint32 server_port() const;
  void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 server_cluster = 8;
  bool has_server_cluster() const;
  void clear_server_cluster();
  static const int kServerClusterFieldNumber = 8;
  ::google::protobuf::uint32 server_cluster() const;
  void set_server_cluster(::google::protobuf::uint32 value);

  // optional uint32 pid = 9;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 9;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional fixed64 custom_game_id = 11;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 11;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // optional uint32 engine = 10;
  bool has_engine() const;
  void clear_engine();
  static const int kEngineFieldNumber = 10;
  ::google::protobuf::uint32 engine() const;
  void set_engine(::google::protobuf::uint32 value);

  // optional uint32 tournament_id = 12;
  bool has_tournament_id() const;
  void clear_tournament_id();
  static const int kTournamentIdFieldNumber = 12;
  ::google::protobuf::uint32 tournament_id() const;
  void set_tournament_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameserverCrash)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint64 lobby_id_;
  int game_state_;
  ::google::protobuf::uint32 sentinel_save_time_;
  ::google::protobuf::uint64 server_steam_id_;
  ::google::protobuf::uint32 server_public_ip_addr_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 server_cluster_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint32 engine_;
  ::google::protobuf::uint32 tournament_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgConnectedPlayers_Player final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgConnectedPlayers.Player) */ {
 public:
  CMsgConnectedPlayers_Player();
  virtual ~CMsgConnectedPlayers_Player();

  CMsgConnectedPlayers_Player(const CMsgConnectedPlayers_Player& from);

  inline CMsgConnectedPlayers_Player& operator=(const CMsgConnectedPlayers_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgConnectedPlayers_Player(CMsgConnectedPlayers_Player&& from) noexcept
    : CMsgConnectedPlayers_Player() {
    *this = ::std::move(from);
  }

  inline CMsgConnectedPlayers_Player& operator=(CMsgConnectedPlayers_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgConnectedPlayers_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgConnectedPlayers_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgConnectedPlayers_Player*>(
               &_CMsgConnectedPlayers_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CMsgConnectedPlayers_Player* other);
  friend void swap(CMsgConnectedPlayers_Player& a, CMsgConnectedPlayers_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgConnectedPlayers_Player* New() const final {
    return CreateMaybeMessage<CMsgConnectedPlayers_Player>(nullptr);
  }

  CMsgConnectedPlayers_Player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgConnectedPlayers_Player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgConnectedPlayers_Player& from);
  void MergeFrom(const CMsgConnectedPlayers_Player& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgConnectedPlayers_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgLeaverState leaver_state = 3;
  bool has_leaver_state() const;
  void clear_leaver_state();
  static const int kLeaverStateFieldNumber = 3;
  const ::proto::dota::CMsgLeaverState& leaver_state() const;
  ::proto::dota::CMsgLeaverState* release_leaver_state();
  ::proto::dota::CMsgLeaverState* mutable_leaver_state();
  void set_allocated_leaver_state(::proto::dota::CMsgLeaverState* leaver_state);

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional .proto.dota.ENetworkDisconnectionReason disconnect_reason = 4 [default = NETWORK_DISCONNECT_INVALID];
  bool has_disconnect_reason() const;
  void clear_disconnect_reason();
  static const int kDisconnectReasonFieldNumber = 4;
  ::proto::dota::ENetworkDisconnectionReason disconnect_reason() const;
  void set_disconnect_reason(::proto::dota::ENetworkDisconnectionReason value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgConnectedPlayers.Player)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgLeaverState* leaver_state_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 hero_id_;
  int disconnect_reason_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgConnectedPlayers final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgConnectedPlayers) */ {
 public:
  CMsgConnectedPlayers();
  virtual ~CMsgConnectedPlayers();

  CMsgConnectedPlayers(const CMsgConnectedPlayers& from);

  inline CMsgConnectedPlayers& operator=(const CMsgConnectedPlayers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgConnectedPlayers(CMsgConnectedPlayers&& from) noexcept
    : CMsgConnectedPlayers() {
    *this = ::std::move(from);
  }

  inline CMsgConnectedPlayers& operator=(CMsgConnectedPlayers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgConnectedPlayers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgConnectedPlayers* internal_default_instance() {
    return reinterpret_cast<const CMsgConnectedPlayers*>(
               &_CMsgConnectedPlayers_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CMsgConnectedPlayers* other);
  friend void swap(CMsgConnectedPlayers& a, CMsgConnectedPlayers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgConnectedPlayers* New() const final {
    return CreateMaybeMessage<CMsgConnectedPlayers>(nullptr);
  }

  CMsgConnectedPlayers* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgConnectedPlayers>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgConnectedPlayers& from);
  void MergeFrom(const CMsgConnectedPlayers& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgConnectedPlayers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgConnectedPlayers_Player Player;

  typedef CMsgConnectedPlayers_SendReason SendReason;
  static const SendReason INVALID =
    CMsgConnectedPlayers_SendReason_INVALID;
  static const SendReason HEARTBEAT =
    CMsgConnectedPlayers_SendReason_HEARTBEAT;
  static const SendReason GAME_STATE =
    CMsgConnectedPlayers_SendReason_GAME_STATE;
  static const SendReason FIRST_BLOOD =
    CMsgConnectedPlayers_SendReason_FIRST_BLOOD;
  static const SendReason PLAYER_CONNECTED =
    CMsgConnectedPlayers_SendReason_PLAYER_CONNECTED;
  static const SendReason PLAYER_HERO =
    CMsgConnectedPlayers_SendReason_PLAYER_HERO;
  static const SendReason PLAYER_DISCONNECTED_CONSEQUENCES =
    CMsgConnectedPlayers_SendReason_PLAYER_DISCONNECTED_CONSEQUENCES;
  static const SendReason PLAYER_DISCONNECTED_NOCONSEQUENCES =
    CMsgConnectedPlayers_SendReason_PLAYER_DISCONNECTED_NOCONSEQUENCES;
  static const SendReason GAMESTATE_TIMEOUT =
    CMsgConnectedPlayers_SendReason_GAMESTATE_TIMEOUT;
  static const SendReason MASS_DISCONNECT =
    CMsgConnectedPlayers_SendReason_MASS_DISCONNECT;
  static const SendReason KILLS =
    CMsgConnectedPlayers_SendReason_KILLS;
  static const SendReason BUILDING_STATE =
    CMsgConnectedPlayers_SendReason_BUILDING_STATE;
  static inline bool SendReason_IsValid(int value) {
    return CMsgConnectedPlayers_SendReason_IsValid(value);
  }
  static const SendReason SendReason_MIN =
    CMsgConnectedPlayers_SendReason_SendReason_MIN;
  static const SendReason SendReason_MAX =
    CMsgConnectedPlayers_SendReason_SendReason_MAX;
  static const int SendReason_ARRAYSIZE =
    CMsgConnectedPlayers_SendReason_SendReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SendReason_descriptor() {
    return CMsgConnectedPlayers_SendReason_descriptor();
  }
  static inline const ::std::string& SendReason_Name(SendReason value) {
    return CMsgConnectedPlayers_SendReason_Name(value);
  }
  static inline bool SendReason_Parse(const ::std::string& name,
      SendReason* value) {
    return CMsgConnectedPlayers_SendReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgConnectedPlayers.Player connected_players = 1;
  int connected_players_size() const;
  void clear_connected_players();
  static const int kConnectedPlayersFieldNumber = 1;
  ::proto::dota::CMsgConnectedPlayers_Player* mutable_connected_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgConnectedPlayers_Player >*
      mutable_connected_players();
  const ::proto::dota::CMsgConnectedPlayers_Player& connected_players(int index) const;
  ::proto::dota::CMsgConnectedPlayers_Player* add_connected_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgConnectedPlayers_Player >&
      connected_players() const;

  // repeated .proto.dota.CMsgConnectedPlayers.Player disconnected_players = 7;
  int disconnected_players_size() const;
  void clear_disconnected_players();
  static const int kDisconnectedPlayersFieldNumber = 7;
  ::proto::dota::CMsgConnectedPlayers_Player* mutable_disconnected_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgConnectedPlayers_Player >*
      mutable_disconnected_players();
  const ::proto::dota::CMsgConnectedPlayers_Player& disconnected_players(int index) const;
  ::proto::dota::CMsgConnectedPlayers_Player* add_disconnected_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgConnectedPlayers_Player >&
      disconnected_players() const;

  // optional .proto.dota.CMsgPoorNetworkConditions poor_network_conditions = 10;
  bool has_poor_network_conditions() const;
  void clear_poor_network_conditions();
  static const int kPoorNetworkConditionsFieldNumber = 10;
  const ::proto::dota::CMsgPoorNetworkConditions& poor_network_conditions() const;
  ::proto::dota::CMsgPoorNetworkConditions* release_poor_network_conditions();
  ::proto::dota::CMsgPoorNetworkConditions* mutable_poor_network_conditions();
  void set_allocated_poor_network_conditions(::proto::dota::CMsgPoorNetworkConditions* poor_network_conditions);

  // optional .proto.dota.DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];
  bool has_game_state() const;
  void clear_game_state();
  static const int kGameStateFieldNumber = 2;
  ::proto::dota::DOTA_GameState game_state() const;
  void set_game_state(::proto::dota::DOTA_GameState value);

  // optional bool first_blood_happened = 6;
  bool has_first_blood_happened() const;
  void clear_first_blood_happened();
  static const int kFirstBloodHappenedFieldNumber = 6;
  bool first_blood_happened() const;
  void set_first_blood_happened(bool value);

  // optional bool legacy_mass_disconnect = 9;
  bool has_legacy_mass_disconnect() const;
  void clear_legacy_mass_disconnect();
  static const int kLegacyMassDisconnectFieldNumber = 9;
  bool legacy_mass_disconnect() const;
  void set_legacy_mass_disconnect(bool value);

  // optional .proto.dota.CMsgConnectedPlayers.SendReason send_reason = 8 [default = INVALID];
  bool has_send_reason() const;
  void clear_send_reason();
  static const int kSendReasonFieldNumber = 8;
  ::proto::dota::CMsgConnectedPlayers_SendReason send_reason() const;
  void set_send_reason(::proto::dota::CMsgConnectedPlayers_SendReason value);

  // optional uint32 radiant_kills = 11;
  bool has_radiant_kills() const;
  void clear_radiant_kills();
  static const int kRadiantKillsFieldNumber = 11;
  ::google::protobuf::uint32 radiant_kills() const;
  void set_radiant_kills(::google::protobuf::uint32 value);

  // optional uint32 building_state = 15;
  bool has_building_state() const;
  void clear_building_state();
  static const int kBuildingStateFieldNumber = 15;
  ::google::protobuf::uint32 building_state() const;
  void set_building_state(::google::protobuf::uint32 value);

  // optional uint32 dire_kills = 12;
  bool has_dire_kills() const;
  void clear_dire_kills();
  static const int kDireKillsFieldNumber = 12;
  ::google::protobuf::uint32 dire_kills() const;
  void set_dire_kills(::google::protobuf::uint32 value);

  // optional int32 radiant_lead = 14;
  bool has_radiant_lead() const;
  void clear_radiant_lead();
  static const int kRadiantLeadFieldNumber = 14;
  ::google::protobuf::int32 radiant_lead() const;
  void set_radiant_lead(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgConnectedPlayers)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgConnectedPlayers_Player > connected_players_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgConnectedPlayers_Player > disconnected_players_;
  ::proto::dota::CMsgPoorNetworkConditions* poor_network_conditions_;
  int game_state_;
  bool first_blood_happened_;
  bool legacy_mass_disconnect_;
  int send_reason_;
  ::google::protobuf::uint32 radiant_kills_;
  ::google::protobuf::uint32 building_state_;
  ::google::protobuf::uint32 dire_kills_;
  ::google::protobuf::int32 radiant_lead_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameServerInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameServerInfo) */ {
 public:
  CMsgGameServerInfo();
  virtual ~CMsgGameServerInfo();

  CMsgGameServerInfo(const CMsgGameServerInfo& from);

  inline CMsgGameServerInfo& operator=(const CMsgGameServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameServerInfo(CMsgGameServerInfo&& from) noexcept
    : CMsgGameServerInfo() {
    *this = ::std::move(from);
  }

  inline CMsgGameServerInfo& operator=(CMsgGameServerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameServerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameServerInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGameServerInfo*>(
               &_CMsgGameServerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CMsgGameServerInfo* other);
  friend void swap(CMsgGameServerInfo& a, CMsgGameServerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameServerInfo* New() const final {
    return CreateMaybeMessage<CMsgGameServerInfo>(nullptr);
  }

  CMsgGameServerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameServerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameServerInfo& from);
  void MergeFrom(const CMsgGameServerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGameServerInfo_ServerType ServerType;
  static const ServerType UNSPECIFIED =
    CMsgGameServerInfo_ServerType_UNSPECIFIED;
  static const ServerType GAME =
    CMsgGameServerInfo_ServerType_GAME;
  static const ServerType PROXY =
    CMsgGameServerInfo_ServerType_PROXY;
  static const ServerType TENSORFLOW =
    CMsgGameServerInfo_ServerType_TENSORFLOW;
  static inline bool ServerType_IsValid(int value) {
    return CMsgGameServerInfo_ServerType_IsValid(value);
  }
  static const ServerType ServerType_MIN =
    CMsgGameServerInfo_ServerType_ServerType_MIN;
  static const ServerType ServerType_MAX =
    CMsgGameServerInfo_ServerType_ServerType_MAX;
  static const int ServerType_ARRAYSIZE =
    CMsgGameServerInfo_ServerType_ServerType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ServerType_descriptor() {
    return CMsgGameServerInfo_ServerType_descriptor();
  }
  static inline const ::std::string& ServerType_Name(ServerType value) {
    return CMsgGameServerInfo_ServerType_Name(value);
  }
  static inline bool ServerType_Parse(const ::std::string& name,
      ServerType* value) {
    return CMsgGameServerInfo_ServerType_Parse(name, value);
  }

  typedef CMsgGameServerInfo_CustomGames CustomGames;
  static const CustomGames BOTH =
    CMsgGameServerInfo_CustomGames_BOTH;
  static const CustomGames NONE =
    CMsgGameServerInfo_CustomGames_NONE;
  static const CustomGames ONLY =
    CMsgGameServerInfo_CustomGames_ONLY;
  static inline bool CustomGames_IsValid(int value) {
    return CMsgGameServerInfo_CustomGames_IsValid(value);
  }
  static const CustomGames CustomGames_MIN =
    CMsgGameServerInfo_CustomGames_CustomGames_MIN;
  static const CustomGames CustomGames_MAX =
    CMsgGameServerInfo_CustomGames_CustomGames_MAX;
  static const int CustomGames_ARRAYSIZE =
    CMsgGameServerInfo_CustomGames_CustomGames_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CustomGames_descriptor() {
    return CMsgGameServerInfo_CustomGames_descriptor();
  }
  static inline const ::std::string& CustomGames_Name(CustomGames value) {
    return CMsgGameServerInfo_CustomGames_Name(value);
  }
  static inline bool CustomGames_Parse(const ::std::string& name,
      CustomGames* value) {
    return CMsgGameServerInfo_CustomGames_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string server_key = 5;
  bool has_server_key() const;
  void clear_server_key();
  static const int kServerKeyFieldNumber = 5;
  const ::std::string& server_key() const;
  void set_server_key(const ::std::string& value);
  #if LANG_CXX11
  void set_server_key(::std::string&& value);
  #endif
  void set_server_key(const char* value);
  void set_server_key(const char* value, size_t size);
  ::std::string* mutable_server_key();
  ::std::string* release_server_key();
  void set_allocated_server_key(::std::string* server_key);

  // optional bytes server_steamdatagram_address = 27;
  bool has_server_steamdatagram_address() const;
  void clear_server_steamdatagram_address();
  static const int kServerSteamdatagramAddressFieldNumber = 27;
  const ::std::string& server_steamdatagram_address() const;
  void set_server_steamdatagram_address(const ::std::string& value);
  #if LANG_CXX11
  void set_server_steamdatagram_address(::std::string&& value);
  #endif
  void set_server_steamdatagram_address(const char* value);
  void set_server_steamdatagram_address(const void* value, size_t size);
  ::std::string* mutable_server_steamdatagram_address();
  ::std::string* release_server_steamdatagram_address();
  void set_allocated_server_steamdatagram_address(::std::string* server_steamdatagram_address);

  // optional fixed32 server_public_ip_addr = 1;
  bool has_server_public_ip_addr() const;
  void clear_server_public_ip_addr();
  static const int kServerPublicIpAddrFieldNumber = 1;
  ::google::protobuf::uint32 server_public_ip_addr() const;
  void set_server_public_ip_addr(::google::protobuf::uint32 value);

  // optional fixed32 server_private_ip_addr = 2;
  bool has_server_private_ip_addr() const;
  void clear_server_private_ip_addr();
  static const int kServerPrivateIpAddrFieldNumber = 2;
  ::google::protobuf::uint32 server_private_ip_addr() const;
  void set_server_private_ip_addr(::google::protobuf::uint32 value);

  // optional uint32 server_port = 3;
  bool has_server_port() const;
  void clear_server_port();
  static const int kServerPortFieldNumber = 3;
  ::google::protobuf::uint32 server_port() const;
  void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 server_tv_port = 4;
  bool has_server_tv_port() const;
  void clear_server_tv_port();
  static const int kServerTvPortFieldNumber = 4;
  ::google::protobuf::uint32 server_tv_port() const;
  void set_server_tv_port(::google::protobuf::uint32 value);

  // optional bool server_hibernation = 6;
  bool has_server_hibernation() const;
  void clear_server_hibernation();
  static const int kServerHibernationFieldNumber = 6;
  bool server_hibernation() const;
  void set_server_hibernation(bool value);

  // optional .proto.dota.CMsgGameServerInfo.ServerType server_type = 7 [default = UNSPECIFIED];
  bool has_server_type() const;
  void clear_server_type();
  static const int kServerTypeFieldNumber = 7;
  ::proto::dota::CMsgGameServerInfo_ServerType server_type() const;
  void set_server_type(::proto::dota::CMsgGameServerInfo_ServerType value);

  // optional uint32 server_region = 8;
  bool has_server_region() const;
  void clear_server_region();
  static const int kServerRegionFieldNumber = 8;
  ::google::protobuf::uint32 server_region() const;
  void set_server_region(::google::protobuf::uint32 value);

  // optional float server_loadavg = 9;
  bool has_server_loadavg() const;
  void clear_server_loadavg();
  static const int kServerLoadavgFieldNumber = 9;
  float server_loadavg() const;
  void set_server_loadavg(float value);

  // optional float server_tv_broadcast_time = 10;
  bool has_server_tv_broadcast_time() const;
  void clear_server_tv_broadcast_time();
  static const int kServerTvBroadcastTimeFieldNumber = 10;
  float server_tv_broadcast_time() const;
  void set_server_tv_broadcast_time(float value);

  // optional float server_game_time = 11;
  bool has_server_game_time() const;
  void clear_server_game_time();
  static const int kServerGameTimeFieldNumber = 11;
  float server_game_time() const;
  void set_server_game_time(float value);

  // optional fixed64 server_relay_connected_steam_id = 12;
  bool has_server_relay_connected_steam_id() const;
  void clear_server_relay_connected_steam_id();
  static const int kServerRelayConnectedSteamIdFieldNumber = 12;
  ::google::protobuf::uint64 server_relay_connected_steam_id() const;
  void set_server_relay_connected_steam_id(::google::protobuf::uint64 value);

  // optional uint32 relay_slots_max = 13;
  bool has_relay_slots_max() const;
  void clear_relay_slots_max();
  static const int kRelaySlotsMaxFieldNumber = 13;
  ::google::protobuf::uint32 relay_slots_max() const;
  void set_relay_slots_max(::google::protobuf::uint32 value);

  // optional int32 relays_connected = 14;
  bool has_relays_connected() const;
  void clear_relays_connected();
  static const int kRelaysConnectedFieldNumber = 14;
  ::google::protobuf::int32 relays_connected() const;
  void set_relays_connected(::google::protobuf::int32 value);

  // optional fixed64 relayed_game_server_steam_id = 16;
  bool has_relayed_game_server_steam_id() const;
  void clear_relayed_game_server_steam_id();
  static const int kRelayedGameServerSteamIdFieldNumber = 16;
  ::google::protobuf::uint64 relayed_game_server_steam_id() const;
  void set_relayed_game_server_steam_id(::google::protobuf::uint64 value);

  // optional int32 relay_clients_connected = 15;
  bool has_relay_clients_connected() const;
  void clear_relay_clients_connected();
  static const int kRelayClientsConnectedFieldNumber = 15;
  ::google::protobuf::int32 relay_clients_connected() const;
  void set_relay_clients_connected(::google::protobuf::int32 value);

  // optional uint32 parent_relay_count = 17;
  bool has_parent_relay_count() const;
  void clear_parent_relay_count();
  static const int kParentRelayCountFieldNumber = 17;
  ::google::protobuf::uint32 parent_relay_count() const;
  void set_parent_relay_count(::google::protobuf::uint32 value);

  // optional fixed64 tv_secret_code = 18;
  bool has_tv_secret_code() const;
  void clear_tv_secret_code();
  static const int kTvSecretCodeFieldNumber = 18;
  ::google::protobuf::uint64 tv_secret_code() const;
  void set_tv_secret_code(::google::protobuf::uint64 value);

  // optional uint32 server_version = 19;
  bool has_server_version() const;
  void clear_server_version();
  static const int kServerVersionFieldNumber = 19;
  ::google::protobuf::uint32 server_version() const;
  void set_server_version(::google::protobuf::uint32 value);

  // optional uint32 server_cluster = 20;
  bool has_server_cluster() const;
  void clear_server_cluster();
  static const int kServerClusterFieldNumber = 20;
  ::google::protobuf::uint32 server_cluster() const;
  void set_server_cluster(::google::protobuf::uint32 value);

  // optional uint32 legacy_server_steamdatagram_port = 21;
  bool has_legacy_server_steamdatagram_port() const;
  void clear_legacy_server_steamdatagram_port();
  static const int kLegacyServerSteamdatagramPortFieldNumber = 21;
  ::google::protobuf::uint32 legacy_server_steamdatagram_port() const;
  void set_legacy_server_steamdatagram_port(::google::protobuf::uint32 value);

  // optional uint32 assigned_server_tv_port = 22;
  bool has_assigned_server_tv_port() const;
  void clear_assigned_server_tv_port();
  static const int kAssignedServerTvPortFieldNumber = 22;
  ::google::protobuf::uint32 assigned_server_tv_port() const;
  void set_assigned_server_tv_port(::google::protobuf::uint32 value);

  // optional .proto.dota.CMsgGameServerInfo.CustomGames allow_custom_games = 23 [default = BOTH];
  bool has_allow_custom_games() const;
  void clear_allow_custom_games();
  static const int kAllowCustomGamesFieldNumber = 23;
  ::proto::dota::CMsgGameServerInfo_CustomGames allow_custom_games() const;
  void set_allow_custom_games(::proto::dota::CMsgGameServerInfo_CustomGames value);

  // optional uint32 build_version = 24;
  bool has_build_version() const;
  void clear_build_version();
  static const int kBuildVersionFieldNumber = 24;
  ::google::protobuf::uint32 build_version() const;
  void set_build_version(::google::protobuf::uint32 value);

  // optional uint32 tf_server_count = 25;
  bool has_tf_server_count() const;
  void clear_tf_server_count();
  static const int kTfServerCountFieldNumber = 25;
  ::google::protobuf::uint32 tf_server_count() const;
  void set_tf_server_count(::google::protobuf::uint32 value);

  // optional uint32 srcds_instance = 26;
  bool has_srcds_instance() const;
  void clear_srcds_instance();
  static const int kSrcdsInstanceFieldNumber = 26;
  ::google::protobuf::uint32 srcds_instance() const;
  void set_srcds_instance(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameServerInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr server_key_;
  ::google::protobuf::internal::ArenaStringPtr server_steamdatagram_address_;
  ::google::protobuf::uint32 server_public_ip_addr_;
  ::google::protobuf::uint32 server_private_ip_addr_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 server_tv_port_;
  bool server_hibernation_;
  int server_type_;
  ::google::protobuf::uint32 server_region_;
  float server_loadavg_;
  float server_tv_broadcast_time_;
  float server_game_time_;
  ::google::protobuf::uint64 server_relay_connected_steam_id_;
  ::google::protobuf::uint32 relay_slots_max_;
  ::google::protobuf::int32 relays_connected_;
  ::google::protobuf::uint64 relayed_game_server_steam_id_;
  ::google::protobuf::int32 relay_clients_connected_;
  ::google::protobuf::uint32 parent_relay_count_;
  ::google::protobuf::uint64 tv_secret_code_;
  ::google::protobuf::uint32 server_version_;
  ::google::protobuf::uint32 server_cluster_;
  ::google::protobuf::uint32 legacy_server_steamdatagram_port_;
  ::google::protobuf::uint32 assigned_server_tv_port_;
  int allow_custom_games_;
  ::google::protobuf::uint32 build_version_;
  ::google::protobuf::uint32 tf_server_count_;
  ::google::protobuf::uint32 srcds_instance_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgLeaverDetected final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgLeaverDetected) */ {
 public:
  CMsgLeaverDetected();
  virtual ~CMsgLeaverDetected();

  CMsgLeaverDetected(const CMsgLeaverDetected& from);

  inline CMsgLeaverDetected& operator=(const CMsgLeaverDetected& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgLeaverDetected(CMsgLeaverDetected&& from) noexcept
    : CMsgLeaverDetected() {
    *this = ::std::move(from);
  }

  inline CMsgLeaverDetected& operator=(CMsgLeaverDetected&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgLeaverDetected& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgLeaverDetected* internal_default_instance() {
    return reinterpret_cast<const CMsgLeaverDetected*>(
               &_CMsgLeaverDetected_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CMsgLeaverDetected* other);
  friend void swap(CMsgLeaverDetected& a, CMsgLeaverDetected& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgLeaverDetected* New() const final {
    return CreateMaybeMessage<CMsgLeaverDetected>(nullptr);
  }

  CMsgLeaverDetected* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgLeaverDetected>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgLeaverDetected& from);
  void MergeFrom(const CMsgLeaverDetected& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgLeaverDetected* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgLeaverState leaver_state = 4;
  bool has_leaver_state() const;
  void clear_leaver_state();
  static const int kLeaverStateFieldNumber = 4;
  const ::proto::dota::CMsgLeaverState& leaver_state() const;
  ::proto::dota::CMsgLeaverState* release_leaver_state();
  ::proto::dota::CMsgLeaverState* mutable_leaver_state();
  void set_allocated_leaver_state(::proto::dota::CMsgLeaverState* leaver_state);

  // optional .proto.dota.CMsgPoorNetworkConditions poor_network_conditions = 7;
  bool has_poor_network_conditions() const;
  void clear_poor_network_conditions();
  static const int kPoorNetworkConditionsFieldNumber = 7;
  const ::proto::dota::CMsgPoorNetworkConditions& poor_network_conditions() const;
  ::proto::dota::CMsgPoorNetworkConditions* release_poor_network_conditions();
  ::proto::dota::CMsgPoorNetworkConditions* mutable_poor_network_conditions();
  void set_allocated_poor_network_conditions(::proto::dota::CMsgPoorNetworkConditions* poor_network_conditions);

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional .proto.dota.DOTALeaverStatus_t leaver_status = 2 [default = DOTA_LEAVER_NONE];
  bool has_leaver_status() const;
  void clear_leaver_status();
  static const int kLeaverStatusFieldNumber = 2;
  ::proto::dota::DOTALeaverStatus_t leaver_status() const;
  void set_leaver_status(::proto::dota::DOTALeaverStatus_t value);

  // optional uint32 server_cluster = 5;
  bool has_server_cluster() const;
  void clear_server_cluster();
  static const int kServerClusterFieldNumber = 5;
  ::google::protobuf::uint32 server_cluster() const;
  void set_server_cluster(::google::protobuf::uint32 value);

  // optional .proto.dota.ENetworkDisconnectionReason disconnect_reason = 6 [default = NETWORK_DISCONNECT_INVALID];
  bool has_disconnect_reason() const;
  void clear_disconnect_reason();
  static const int kDisconnectReasonFieldNumber = 6;
  ::proto::dota::ENetworkDisconnectionReason disconnect_reason() const;
  void set_disconnect_reason(::proto::dota::ENetworkDisconnectionReason value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgLeaverDetected)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgLeaverState* leaver_state_;
  ::proto::dota::CMsgPoorNetworkConditions* poor_network_conditions_;
  ::google::protobuf::uint64 steam_id_;
  int leaver_status_;
  ::google::protobuf::uint32 server_cluster_;
  int disconnect_reason_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgLeaverDetectedResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgLeaverDetectedResponse) */ {
 public:
  CMsgLeaverDetectedResponse();
  virtual ~CMsgLeaverDetectedResponse();

  CMsgLeaverDetectedResponse(const CMsgLeaverDetectedResponse& from);

  inline CMsgLeaverDetectedResponse& operator=(const CMsgLeaverDetectedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgLeaverDetectedResponse(CMsgLeaverDetectedResponse&& from) noexcept
    : CMsgLeaverDetectedResponse() {
    *this = ::std::move(from);
  }

  inline CMsgLeaverDetectedResponse& operator=(CMsgLeaverDetectedResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgLeaverDetectedResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgLeaverDetectedResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgLeaverDetectedResponse*>(
               &_CMsgLeaverDetectedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CMsgLeaverDetectedResponse* other);
  friend void swap(CMsgLeaverDetectedResponse& a, CMsgLeaverDetectedResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgLeaverDetectedResponse* New() const final {
    return CreateMaybeMessage<CMsgLeaverDetectedResponse>(nullptr);
  }

  CMsgLeaverDetectedResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgLeaverDetectedResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgLeaverDetectedResponse& from);
  void MergeFrom(const CMsgLeaverDetectedResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgLeaverDetectedResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgLeaverDetectedResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAFantasyFinalPlayerStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFantasyFinalPlayerStats) */ {
 public:
  CMsgDOTAFantasyFinalPlayerStats();
  virtual ~CMsgDOTAFantasyFinalPlayerStats();

  CMsgDOTAFantasyFinalPlayerStats(const CMsgDOTAFantasyFinalPlayerStats& from);

  inline CMsgDOTAFantasyFinalPlayerStats& operator=(const CMsgDOTAFantasyFinalPlayerStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAFantasyFinalPlayerStats(CMsgDOTAFantasyFinalPlayerStats&& from) noexcept
    : CMsgDOTAFantasyFinalPlayerStats() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAFantasyFinalPlayerStats& operator=(CMsgDOTAFantasyFinalPlayerStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAFantasyFinalPlayerStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAFantasyFinalPlayerStats* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFantasyFinalPlayerStats*>(
               &_CMsgDOTAFantasyFinalPlayerStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CMsgDOTAFantasyFinalPlayerStats* other);
  friend void swap(CMsgDOTAFantasyFinalPlayerStats& a, CMsgDOTAFantasyFinalPlayerStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAFantasyFinalPlayerStats* New() const final {
    return CreateMaybeMessage<CMsgDOTAFantasyFinalPlayerStats>(nullptr);
  }

  CMsgDOTAFantasyFinalPlayerStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAFantasyFinalPlayerStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAFantasyFinalPlayerStats& from);
  void MergeFrom(const CMsgDOTAFantasyFinalPlayerStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAFantasyFinalPlayerStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAFantasyPlayerStats stats = 2;
  int stats_size() const;
  void clear_stats();
  static const int kStatsFieldNumber = 2;
  ::proto::dota::CMsgDOTAFantasyPlayerStats* mutable_stats(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats >*
      mutable_stats();
  const ::proto::dota::CMsgDOTAFantasyPlayerStats& stats(int index) const;
  ::proto::dota::CMsgDOTAFantasyPlayerStats* add_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats >&
      stats() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFantasyFinalPlayerStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats > stats_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAFantasyLivePlayerStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFantasyLivePlayerStats) */ {
 public:
  CMsgDOTAFantasyLivePlayerStats();
  virtual ~CMsgDOTAFantasyLivePlayerStats();

  CMsgDOTAFantasyLivePlayerStats(const CMsgDOTAFantasyLivePlayerStats& from);

  inline CMsgDOTAFantasyLivePlayerStats& operator=(const CMsgDOTAFantasyLivePlayerStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAFantasyLivePlayerStats(CMsgDOTAFantasyLivePlayerStats&& from) noexcept
    : CMsgDOTAFantasyLivePlayerStats() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAFantasyLivePlayerStats& operator=(CMsgDOTAFantasyLivePlayerStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAFantasyLivePlayerStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAFantasyLivePlayerStats* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFantasyLivePlayerStats*>(
               &_CMsgDOTAFantasyLivePlayerStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CMsgDOTAFantasyLivePlayerStats* other);
  friend void swap(CMsgDOTAFantasyLivePlayerStats& a, CMsgDOTAFantasyLivePlayerStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAFantasyLivePlayerStats* New() const final {
    return CreateMaybeMessage<CMsgDOTAFantasyLivePlayerStats>(nullptr);
  }

  CMsgDOTAFantasyLivePlayerStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAFantasyLivePlayerStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAFantasyLivePlayerStats& from);
  void MergeFrom(const CMsgDOTAFantasyLivePlayerStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAFantasyLivePlayerStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAFantasyPlayerStats stats = 2;
  int stats_size() const;
  void clear_stats();
  static const int kStatsFieldNumber = 2;
  ::proto::dota::CMsgDOTAFantasyPlayerStats* mutable_stats(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats >*
      mutable_stats();
  const ::proto::dota::CMsgDOTAFantasyPlayerStats& stats(int index) const;
  ::proto::dota::CMsgDOTAFantasyPlayerStats* add_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats >&
      stats() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFantasyLivePlayerStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats > stats_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAFantasyMatch final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFantasyMatch) */ {
 public:
  CMsgDOTAFantasyMatch();
  virtual ~CMsgDOTAFantasyMatch();

  CMsgDOTAFantasyMatch(const CMsgDOTAFantasyMatch& from);

  inline CMsgDOTAFantasyMatch& operator=(const CMsgDOTAFantasyMatch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAFantasyMatch(CMsgDOTAFantasyMatch&& from) noexcept
    : CMsgDOTAFantasyMatch() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAFantasyMatch& operator=(CMsgDOTAFantasyMatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAFantasyMatch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAFantasyMatch* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFantasyMatch*>(
               &_CMsgDOTAFantasyMatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CMsgDOTAFantasyMatch* other);
  friend void swap(CMsgDOTAFantasyMatch& a, CMsgDOTAFantasyMatch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAFantasyMatch* New() const final {
    return CreateMaybeMessage<CMsgDOTAFantasyMatch>(nullptr);
  }

  CMsgDOTAFantasyMatch* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAFantasyMatch>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAFantasyMatch& from);
  void MergeFrom(const CMsgDOTAFantasyMatch& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAFantasyMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 league_id = 2;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 2;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 series_id = 3;
  bool has_series_id() const;
  void clear_series_id();
  static const int kSeriesIdFieldNumber = 3;
  ::google::protobuf::uint32 series_id() const;
  void set_series_id(::google::protobuf::uint32 value);

  // optional uint32 start_time = 4;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // optional uint32 series_type = 5;
  bool has_series_type() const;
  void clear_series_type();
  static const int kSeriesTypeFieldNumber = 5;
  ::google::protobuf::uint32 series_type() const;
  void set_series_type(::google::protobuf::uint32 value);

  // optional uint32 team_1 = 6;
  bool has_team_1() const;
  void clear_team_1();
  static const int kTeam1FieldNumber = 6;
  ::google::protobuf::uint32 team_1() const;
  void set_team_1(::google::protobuf::uint32 value);

  // optional uint32 team_2 = 7;
  bool has_team_2() const;
  void clear_team_2();
  static const int kTeam2FieldNumber = 7;
  ::google::protobuf::uint32 team_2() const;
  void set_team_2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFantasyMatch)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 series_id_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 series_type_;
  ::google::protobuf::uint32 team_1_;
  ::google::protobuf::uint32 team_2_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAUpdateClippy final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAUpdateClippy) */ {
 public:
  CMsgDOTAUpdateClippy();
  virtual ~CMsgDOTAUpdateClippy();

  CMsgDOTAUpdateClippy(const CMsgDOTAUpdateClippy& from);

  inline CMsgDOTAUpdateClippy& operator=(const CMsgDOTAUpdateClippy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAUpdateClippy(CMsgDOTAUpdateClippy&& from) noexcept
    : CMsgDOTAUpdateClippy() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAUpdateClippy& operator=(CMsgDOTAUpdateClippy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAUpdateClippy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAUpdateClippy* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAUpdateClippy*>(
               &_CMsgDOTAUpdateClippy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CMsgDOTAUpdateClippy* other);
  friend void swap(CMsgDOTAUpdateClippy& a, CMsgDOTAUpdateClippy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAUpdateClippy* New() const final {
    return CreateMaybeMessage<CMsgDOTAUpdateClippy>(nullptr);
  }

  CMsgDOTAUpdateClippy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAUpdateClippy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAUpdateClippy& from);
  void MergeFrom(const CMsgDOTAUpdateClippy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAUpdateClippy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 good_team_hero_ids = 1;
  int good_team_hero_ids_size() const;
  void clear_good_team_hero_ids();
  static const int kGoodTeamHeroIdsFieldNumber = 1;
  ::google::protobuf::uint32 good_team_hero_ids(int index) const;
  void set_good_team_hero_ids(int index, ::google::protobuf::uint32 value);
  void add_good_team_hero_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      good_team_hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_good_team_hero_ids();

  // repeated uint32 bad_team_hero_ids = 2;
  int bad_team_hero_ids_size() const;
  void clear_bad_team_hero_ids();
  static const int kBadTeamHeroIdsFieldNumber = 2;
  ::google::protobuf::uint32 bad_team_hero_ids(int index) const;
  void set_bad_team_hero_ids(int index, ::google::protobuf::uint32 value);
  void add_bad_team_hero_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bad_team_hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bad_team_hero_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAUpdateClippy)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > good_team_hero_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bad_team_hero_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCRealtimeStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCRealtimeStats) */ {
 public:
  CMsgServerToGCRealtimeStats();
  virtual ~CMsgServerToGCRealtimeStats();

  CMsgServerToGCRealtimeStats(const CMsgServerToGCRealtimeStats& from);

  inline CMsgServerToGCRealtimeStats& operator=(const CMsgServerToGCRealtimeStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCRealtimeStats(CMsgServerToGCRealtimeStats&& from) noexcept
    : CMsgServerToGCRealtimeStats() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCRealtimeStats& operator=(CMsgServerToGCRealtimeStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCRealtimeStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCRealtimeStats* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCRealtimeStats*>(
               &_CMsgServerToGCRealtimeStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CMsgServerToGCRealtimeStats* other);
  friend void swap(CMsgServerToGCRealtimeStats& a, CMsgServerToGCRealtimeStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCRealtimeStats* New() const final {
    return CreateMaybeMessage<CMsgServerToGCRealtimeStats>(nullptr);
  }

  CMsgServerToGCRealtimeStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCRealtimeStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCRealtimeStats& from);
  void MergeFrom(const CMsgServerToGCRealtimeStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCRealtimeStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTARealtimeGameStatsTerse delayed = 1;
  bool has_delayed() const;
  void clear_delayed();
  static const int kDelayedFieldNumber = 1;
  const ::proto::dota::CMsgDOTARealtimeGameStatsTerse& delayed() const;
  ::proto::dota::CMsgDOTARealtimeGameStatsTerse* release_delayed();
  ::proto::dota::CMsgDOTARealtimeGameStatsTerse* mutable_delayed();
  void set_allocated_delayed(::proto::dota::CMsgDOTARealtimeGameStatsTerse* delayed);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCRealtimeStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTARealtimeGameStatsTerse* delayed_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToServerRealtimeStatsStartStop final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToServerRealtimeStatsStartStop) */ {
 public:
  CMsgGCToServerRealtimeStatsStartStop();
  virtual ~CMsgGCToServerRealtimeStatsStartStop();

  CMsgGCToServerRealtimeStatsStartStop(const CMsgGCToServerRealtimeStatsStartStop& from);

  inline CMsgGCToServerRealtimeStatsStartStop& operator=(const CMsgGCToServerRealtimeStatsStartStop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToServerRealtimeStatsStartStop(CMsgGCToServerRealtimeStatsStartStop&& from) noexcept
    : CMsgGCToServerRealtimeStatsStartStop() {
    *this = ::std::move(from);
  }

  inline CMsgGCToServerRealtimeStatsStartStop& operator=(CMsgGCToServerRealtimeStatsStartStop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToServerRealtimeStatsStartStop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToServerRealtimeStatsStartStop* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToServerRealtimeStatsStartStop*>(
               &_CMsgGCToServerRealtimeStatsStartStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CMsgGCToServerRealtimeStatsStartStop* other);
  friend void swap(CMsgGCToServerRealtimeStatsStartStop& a, CMsgGCToServerRealtimeStatsStartStop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToServerRealtimeStatsStartStop* New() const final {
    return CreateMaybeMessage<CMsgGCToServerRealtimeStatsStartStop>(nullptr);
  }

  CMsgGCToServerRealtimeStatsStartStop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToServerRealtimeStatsStartStop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToServerRealtimeStatsStartStop& from);
  void MergeFrom(const CMsgGCToServerRealtimeStatsStartStop& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToServerRealtimeStatsStartStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool delayed = 1;
  bool has_delayed() const;
  void clear_delayed();
  static const int kDelayedFieldNumber = 1;
  bool delayed() const;
  void set_delayed(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToServerRealtimeStatsStartStop)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool delayed_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToServerUpdateSteamBroadcasting final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToServerUpdateSteamBroadcasting) */ {
 public:
  CMsgGCToServerUpdateSteamBroadcasting();
  virtual ~CMsgGCToServerUpdateSteamBroadcasting();

  CMsgGCToServerUpdateSteamBroadcasting(const CMsgGCToServerUpdateSteamBroadcasting& from);

  inline CMsgGCToServerUpdateSteamBroadcasting& operator=(const CMsgGCToServerUpdateSteamBroadcasting& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToServerUpdateSteamBroadcasting(CMsgGCToServerUpdateSteamBroadcasting&& from) noexcept
    : CMsgGCToServerUpdateSteamBroadcasting() {
    *this = ::std::move(from);
  }

  inline CMsgGCToServerUpdateSteamBroadcasting& operator=(CMsgGCToServerUpdateSteamBroadcasting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToServerUpdateSteamBroadcasting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToServerUpdateSteamBroadcasting* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToServerUpdateSteamBroadcasting*>(
               &_CMsgGCToServerUpdateSteamBroadcasting_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CMsgGCToServerUpdateSteamBroadcasting* other);
  friend void swap(CMsgGCToServerUpdateSteamBroadcasting& a, CMsgGCToServerUpdateSteamBroadcasting& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToServerUpdateSteamBroadcasting* New() const final {
    return CreateMaybeMessage<CMsgGCToServerUpdateSteamBroadcasting>(nullptr);
  }

  CMsgGCToServerUpdateSteamBroadcasting* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToServerUpdateSteamBroadcasting>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToServerUpdateSteamBroadcasting& from);
  void MergeFrom(const CMsgGCToServerUpdateSteamBroadcasting& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToServerUpdateSteamBroadcasting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool active = 1;
  bool has_active() const;
  void clear_active();
  static const int kActiveFieldNumber = 1;
  bool active() const;
  void set_active(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToServerUpdateSteamBroadcasting)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool active_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData) */ {
 public:
  CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData();
  virtual ~CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData();

  CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData(const CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& from);

  inline CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& operator=(const CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData(CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData&& from) noexcept
    : CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& operator=(CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData*>(
               &_CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* other);
  friend void swap(CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& a, CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData>(nullptr);
  }

  CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& from);
  void MergeFrom(const CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dota_team = 1;
  bool has_dota_team() const;
  void clear_dota_team();
  static const int kDotaTeamFieldNumber = 1;
  ::google::protobuf::uint32 dota_team() const;
  void set_dota_team(::google::protobuf::uint32 value);

  // optional bool winner = 2;
  bool has_winner() const;
  void clear_winner();
  static const int kWinnerFieldNumber = 2;
  bool winner() const;
  void set_winner(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 dota_team_;
  bool winner_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_CTeam_CPlayer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer) */ {
 public:
  CMsgGameMatchSignOut_CTeam_CPlayer();
  virtual ~CMsgGameMatchSignOut_CTeam_CPlayer();

  CMsgGameMatchSignOut_CTeam_CPlayer(const CMsgGameMatchSignOut_CTeam_CPlayer& from);

  inline CMsgGameMatchSignOut_CTeam_CPlayer& operator=(const CMsgGameMatchSignOut_CTeam_CPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignOut_CTeam_CPlayer(CMsgGameMatchSignOut_CTeam_CPlayer&& from) noexcept
    : CMsgGameMatchSignOut_CTeam_CPlayer() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignOut_CTeam_CPlayer& operator=(CMsgGameMatchSignOut_CTeam_CPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignOut_CTeam_CPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignOut_CTeam_CPlayer* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignOut_CTeam_CPlayer*>(
               &_CMsgGameMatchSignOut_CTeam_CPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CMsgGameMatchSignOut_CTeam_CPlayer* other);
  friend void swap(CMsgGameMatchSignOut_CTeam_CPlayer& a, CMsgGameMatchSignOut_CTeam_CPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_CTeam_CPlayer* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_CTeam_CPlayer>(nullptr);
  }

  CMsgGameMatchSignOut_CTeam_CPlayer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_CTeam_CPlayer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignOut_CTeam_CPlayer& from);
  void MergeFrom(const CMsgGameMatchSignOut_CTeam_CPlayer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignOut_CTeam_CPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData CCustomGameData;

  // accessors -------------------------------------------------------

  // repeated uint32 items = 4;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 4;
  ::google::protobuf::uint32 items(int index) const;
  void set_items(int index, ::google::protobuf::uint32 value);
  void add_items(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      items() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_items();

  // repeated .proto.dota.CMatchPlayerAbilityUpgrade ability_upgrades = 32;
  int ability_upgrades_size() const;
  void clear_ability_upgrades();
  static const int kAbilityUpgradesFieldNumber = 32;
  ::proto::dota::CMatchPlayerAbilityUpgrade* mutable_ability_upgrades(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerAbilityUpgrade >*
      mutable_ability_upgrades();
  const ::proto::dota::CMatchPlayerAbilityUpgrade& ability_upgrades(int index) const;
  ::proto::dota::CMatchPlayerAbilityUpgrade* add_ability_upgrades();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerAbilityUpgrade >&
      ability_upgrades() const;

  // repeated .proto.dota.CMatchAdditionalUnitInventory additional_units_inventory = 33;
  int additional_units_inventory_size() const;
  void clear_additional_units_inventory();
  static const int kAdditionalUnitsInventoryFieldNumber = 33;
  ::proto::dota::CMatchAdditionalUnitInventory* mutable_additional_units_inventory(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchAdditionalUnitInventory >*
      mutable_additional_units_inventory();
  const ::proto::dota::CMatchAdditionalUnitInventory& additional_units_inventory(int index) const;
  ::proto::dota::CMatchAdditionalUnitInventory* add_additional_units_inventory();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchAdditionalUnitInventory >&
      additional_units_inventory() const;

  // repeated .proto.dota.CMatchPlayerPermanentBuff permanent_buffs = 40;
  int permanent_buffs_size() const;
  void clear_permanent_buffs();
  static const int kPermanentBuffsFieldNumber = 40;
  ::proto::dota::CMatchPlayerPermanentBuff* mutable_permanent_buffs(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerPermanentBuff >*
      mutable_permanent_buffs();
  const ::proto::dota::CMatchPlayerPermanentBuff& permanent_buffs(int index) const;
  ::proto::dota::CMatchPlayerPermanentBuff* add_permanent_buffs();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerPermanentBuff >&
      permanent_buffs() const;

  // repeated uint32 talent_ability_ids = 41;
  int talent_ability_ids_size() const;
  void clear_talent_ability_ids();
  static const int kTalentAbilityIdsFieldNumber = 41;
  ::google::protobuf::uint32 talent_ability_ids(int index) const;
  void set_talent_ability_ids(int index, ::google::protobuf::uint32 value);
  void add_talent_ability_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      talent_ability_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_talent_ability_ids();

  // repeated .proto.dota.CMatchPlayerTimedStats timed_stats = 46;
  int timed_stats_size() const;
  void clear_timed_stats();
  static const int kTimedStatsFieldNumber = 46;
  ::proto::dota::CMatchPlayerTimedStats* mutable_timed_stats(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerTimedStats >*
      mutable_timed_stats();
  const ::proto::dota::CMatchPlayerTimedStats& timed_stats(int index) const;
  ::proto::dota::CMatchPlayerTimedStats* add_timed_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerTimedStats >&
      timed_stats() const;

  // optional .proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData custom_game_data = 35;
  bool has_custom_game_data() const;
  void clear_custom_game_data();
  static const int kCustomGameDataFieldNumber = 35;
  const ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& custom_game_data() const;
  ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* release_custom_game_data();
  ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* mutable_custom_game_data();
  void set_allocated_custom_game_data(::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* custom_game_data);

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 3;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 gold = 5;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 5;
  ::google::protobuf::uint32 gold() const;
  void set_gold(::google::protobuf::uint32 value);

  // optional uint32 kills = 6;
  bool has_kills() const;
  void clear_kills();
  static const int kKillsFieldNumber = 6;
  ::google::protobuf::uint32 kills() const;
  void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 7;
  bool has_deaths() const;
  void clear_deaths();
  static const int kDeathsFieldNumber = 7;
  ::google::protobuf::uint32 deaths() const;
  void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 assists = 8;
  bool has_assists() const;
  void clear_assists();
  static const int kAssistsFieldNumber = 8;
  ::google::protobuf::uint32 assists() const;
  void set_assists(::google::protobuf::uint32 value);

  // optional uint32 leaver_status = 9;
  bool has_leaver_status() const;
  void clear_leaver_status();
  static const int kLeaverStatusFieldNumber = 9;
  ::google::protobuf::uint32 leaver_status() const;
  void set_leaver_status(::google::protobuf::uint32 value);

  // optional uint32 last_hits = 10;
  bool has_last_hits() const;
  void clear_last_hits();
  static const int kLastHitsFieldNumber = 10;
  ::google::protobuf::uint32 last_hits() const;
  void set_last_hits(::google::protobuf::uint32 value);

  // optional uint32 denies = 11;
  bool has_denies() const;
  void clear_denies();
  static const int kDeniesFieldNumber = 11;
  ::google::protobuf::uint32 denies() const;
  void set_denies(::google::protobuf::uint32 value);

  // optional uint32 gold_per_min = 12;
  bool has_gold_per_min() const;
  void clear_gold_per_min();
  static const int kGoldPerMinFieldNumber = 12;
  ::google::protobuf::uint32 gold_per_min() const;
  void set_gold_per_min(::google::protobuf::uint32 value);

  // optional uint32 xp_per_minute = 13;
  bool has_xp_per_minute() const;
  void clear_xp_per_minute();
  static const int kXpPerMinuteFieldNumber = 13;
  ::google::protobuf::uint32 xp_per_minute() const;
  void set_xp_per_minute(::google::protobuf::uint32 value);

  // optional uint32 gold_spent = 14;
  bool has_gold_spent() const;
  void clear_gold_spent();
  static const int kGoldSpentFieldNumber = 14;
  ::google::protobuf::uint32 gold_spent() const;
  void set_gold_spent(::google::protobuf::uint32 value);

  // optional uint32 level = 15;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 15;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 scaled_hero_damage = 16;
  bool has_scaled_hero_damage() const;
  void clear_scaled_hero_damage();
  static const int kScaledHeroDamageFieldNumber = 16;
  ::google::protobuf::uint32 scaled_hero_damage() const;
  void set_scaled_hero_damage(::google::protobuf::uint32 value);

  // optional uint32 scaled_tower_damage = 17;
  bool has_scaled_tower_damage() const;
  void clear_scaled_tower_damage();
  static const int kScaledTowerDamageFieldNumber = 17;
  ::google::protobuf::uint32 scaled_tower_damage() const;
  void set_scaled_tower_damage(::google::protobuf::uint32 value);

  // optional uint32 scaled_hero_healing = 18;
  bool has_scaled_hero_healing() const;
  void clear_scaled_hero_healing();
  static const int kScaledHeroHealingFieldNumber = 18;
  ::google::protobuf::uint32 scaled_hero_healing() const;
  void set_scaled_hero_healing(::google::protobuf::uint32 value);

  // optional uint32 time_last_seen = 19;
  bool has_time_last_seen() const;
  void clear_time_last_seen();
  static const int kTimeLastSeenFieldNumber = 19;
  ::google::protobuf::uint32 time_last_seen() const;
  void set_time_last_seen(::google::protobuf::uint32 value);

  // optional uint64 party_id = 21;
  bool has_party_id() const;
  void clear_party_id();
  static const int kPartyIdFieldNumber = 21;
  ::google::protobuf::uint64 party_id() const;
  void set_party_id(::google::protobuf::uint64 value);

  // optional uint32 support_ability_value = 20;
  bool has_support_ability_value() const;
  void clear_support_ability_value();
  static const int kSupportAbilityValueFieldNumber = 20;
  ::google::protobuf::uint32 support_ability_value() const;
  void set_support_ability_value(::google::protobuf::uint32 value);

  // optional float scaled_kills = 24;
  bool has_scaled_kills() const;
  void clear_scaled_kills();
  static const int kScaledKillsFieldNumber = 24;
  float scaled_kills() const;
  void set_scaled_kills(float value);

  // optional float scaled_deaths = 25;
  bool has_scaled_deaths() const;
  void clear_scaled_deaths();
  static const int kScaledDeathsFieldNumber = 25;
  float scaled_deaths() const;
  void set_scaled_deaths(float value);

  // optional float scaled_assists = 26;
  bool has_scaled_assists() const;
  void clear_scaled_assists();
  static const int kScaledAssistsFieldNumber = 26;
  float scaled_assists() const;
  void set_scaled_assists(float value);

  // optional uint32 claimed_farm_gold = 27;
  bool has_claimed_farm_gold() const;
  void clear_claimed_farm_gold();
  static const int kClaimedFarmGoldFieldNumber = 27;
  ::google::protobuf::uint32 claimed_farm_gold() const;
  void set_claimed_farm_gold(::google::protobuf::uint32 value);

  // optional uint32 support_gold = 28;
  bool has_support_gold() const;
  void clear_support_gold();
  static const int kSupportGoldFieldNumber = 28;
  ::google::protobuf::uint32 support_gold() const;
  void set_support_gold(::google::protobuf::uint32 value);

  // optional uint32 claimed_denies = 29;
  bool has_claimed_denies() const;
  void clear_claimed_denies();
  static const int kClaimedDeniesFieldNumber = 29;
  ::google::protobuf::uint32 claimed_denies() const;
  void set_claimed_denies(::google::protobuf::uint32 value);

  // optional uint32 claimed_misses = 30;
  bool has_claimed_misses() const;
  void clear_claimed_misses();
  static const int kClaimedMissesFieldNumber = 30;
  ::google::protobuf::uint32 claimed_misses() const;
  void set_claimed_misses(::google::protobuf::uint32 value);

  // optional uint32 misses = 31;
  bool has_misses() const;
  void clear_misses();
  static const int kMissesFieldNumber = 31;
  ::google::protobuf::uint32 misses() const;
  void set_misses(::google::protobuf::uint32 value);

  // optional uint32 net_worth = 34;
  bool has_net_worth() const;
  void clear_net_worth();
  static const int kNetWorthFieldNumber = 34;
  ::google::protobuf::uint32 net_worth() const;
  void set_net_worth(::google::protobuf::uint32 value);

  // optional uint32 match_player_flags = 36;
  bool has_match_player_flags() const;
  void clear_match_player_flags();
  static const int kMatchPlayerFlagsFieldNumber = 36;
  ::google::protobuf::uint32 match_player_flags() const;
  void set_match_player_flags(::google::protobuf::uint32 value);

  // optional uint32 hero_damage = 37;
  bool has_hero_damage() const;
  void clear_hero_damage();
  static const int kHeroDamageFieldNumber = 37;
  ::google::protobuf::uint32 hero_damage() const;
  void set_hero_damage(::google::protobuf::uint32 value);

  // optional uint32 tower_damage = 38;
  bool has_tower_damage() const;
  void clear_tower_damage();
  static const int kTowerDamageFieldNumber = 38;
  ::google::protobuf::uint32 tower_damage() const;
  void set_tower_damage(::google::protobuf::uint32 value);

  // optional uint32 hero_healing = 39;
  bool has_hero_healing() const;
  void clear_hero_healing();
  static const int kHeroHealingFieldNumber = 39;
  ::google::protobuf::uint32 hero_healing() const;
  void set_hero_healing(::google::protobuf::uint32 value);

  // optional uint32 hero_pick_order = 42;
  bool has_hero_pick_order() const;
  void clear_hero_pick_order();
  static const int kHeroPickOrderFieldNumber = 42;
  ::google::protobuf::uint32 hero_pick_order() const;
  void set_hero_pick_order(::google::protobuf::uint32 value);

  // optional uint32 lane = 45;
  bool has_lane() const;
  void clear_lane();
  static const int kLaneFieldNumber = 45;
  ::google::protobuf::uint32 lane() const;
  void set_lane(::google::protobuf::uint32 value);

  // optional bool hero_was_randomed = 43;
  bool has_hero_was_randomed() const;
  void clear_hero_was_randomed();
  static const int kHeroWasRandomedFieldNumber = 43;
  bool hero_was_randomed() const;
  void set_hero_was_randomed(bool value);

  // optional bool hero_was_bonus = 44;
  bool has_hero_was_bonus() const;
  void clear_hero_was_bonus();
  static const int kHeroWasBonusFieldNumber = 44;
  bool hero_was_bonus() const;
  void set_hero_was_bonus(bool value);

  // optional bool hero_was_dota_plus_suggestion = 50;
  bool has_hero_was_dota_plus_suggestion() const;
  void clear_hero_was_dota_plus_suggestion();
  static const int kHeroWasDotaPlusSuggestionFieldNumber = 50;
  bool hero_was_dota_plus_suggestion() const;
  void set_hero_was_dota_plus_suggestion(bool value);

  // optional bool is_using_plus_guide = 47;
  bool has_is_using_plus_guide() const;
  void clear_is_using_plus_guide();
  static const int kIsUsingPlusGuideFieldNumber = 47;
  bool is_using_plus_guide() const;
  void set_is_using_plus_guide(bool value);

  // optional uint32 hero_damage_received_pre_reduction = 48;
  bool has_hero_damage_received_pre_reduction() const;
  void clear_hero_damage_received_pre_reduction();
  static const int kHeroDamageReceivedPreReductionFieldNumber = 48;
  ::google::protobuf::uint32 hero_damage_received_pre_reduction() const;
  void set_hero_damage_received_pre_reduction(::google::protobuf::uint32 value);

  // optional uint32 hero_damage_received_post_reduction = 49;
  bool has_hero_damage_received_post_reduction() const;
  void clear_hero_damage_received_post_reduction();
  static const int kHeroDamageReceivedPostReductionFieldNumber = 49;
  ::google::protobuf::uint32 hero_damage_received_post_reduction() const;
  void set_hero_damage_received_post_reduction(::google::protobuf::uint32 value);

  // optional uint32 seconds_dead = 51;
  bool has_seconds_dead() const;
  void clear_seconds_dead();
  static const int kSecondsDeadFieldNumber = 51;
  ::google::protobuf::uint32 seconds_dead() const;
  void set_seconds_dead(::google::protobuf::uint32 value);

  // optional uint32 gold_lost_to_death = 52;
  bool has_gold_lost_to_death() const;
  void clear_gold_lost_to_death();
  static const int kGoldLostToDeathFieldNumber = 52;
  ::google::protobuf::uint32 gold_lost_to_death() const;
  void set_gold_lost_to_death(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<2> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > items_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerAbilityUpgrade > ability_upgrades_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchAdditionalUnitInventory > additional_units_inventory_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerPermanentBuff > permanent_buffs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > talent_ability_ids_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerTimedStats > timed_stats_;
  ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* custom_game_data_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 assists_;
  ::google::protobuf::uint32 leaver_status_;
  ::google::protobuf::uint32 last_hits_;
  ::google::protobuf::uint32 denies_;
  ::google::protobuf::uint32 gold_per_min_;
  ::google::protobuf::uint32 xp_per_minute_;
  ::google::protobuf::uint32 gold_spent_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 scaled_hero_damage_;
  ::google::protobuf::uint32 scaled_tower_damage_;
  ::google::protobuf::uint32 scaled_hero_healing_;
  ::google::protobuf::uint32 time_last_seen_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint32 support_ability_value_;
  float scaled_kills_;
  float scaled_deaths_;
  float scaled_assists_;
  ::google::protobuf::uint32 claimed_farm_gold_;
  ::google::protobuf::uint32 support_gold_;
  ::google::protobuf::uint32 claimed_denies_;
  ::google::protobuf::uint32 claimed_misses_;
  ::google::protobuf::uint32 misses_;
  ::google::protobuf::uint32 net_worth_;
  ::google::protobuf::uint32 match_player_flags_;
  ::google::protobuf::uint32 hero_damage_;
  ::google::protobuf::uint32 tower_damage_;
  ::google::protobuf::uint32 hero_healing_;
  ::google::protobuf::uint32 hero_pick_order_;
  ::google::protobuf::uint32 lane_;
  bool hero_was_randomed_;
  bool hero_was_bonus_;
  bool hero_was_dota_plus_suggestion_;
  bool is_using_plus_guide_;
  ::google::protobuf::uint32 hero_damage_received_pre_reduction_;
  ::google::protobuf::uint32 hero_damage_received_post_reduction_;
  ::google::protobuf::uint32 seconds_dead_;
  ::google::protobuf::uint32 gold_lost_to_death_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_CTeam final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignOut.CTeam) */ {
 public:
  CMsgGameMatchSignOut_CTeam();
  virtual ~CMsgGameMatchSignOut_CTeam();

  CMsgGameMatchSignOut_CTeam(const CMsgGameMatchSignOut_CTeam& from);

  inline CMsgGameMatchSignOut_CTeam& operator=(const CMsgGameMatchSignOut_CTeam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignOut_CTeam(CMsgGameMatchSignOut_CTeam&& from) noexcept
    : CMsgGameMatchSignOut_CTeam() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignOut_CTeam& operator=(CMsgGameMatchSignOut_CTeam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignOut_CTeam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignOut_CTeam* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignOut_CTeam*>(
               &_CMsgGameMatchSignOut_CTeam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CMsgGameMatchSignOut_CTeam* other);
  friend void swap(CMsgGameMatchSignOut_CTeam& a, CMsgGameMatchSignOut_CTeam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_CTeam* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_CTeam>(nullptr);
  }

  CMsgGameMatchSignOut_CTeam* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_CTeam>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignOut_CTeam& from);
  void MergeFrom(const CMsgGameMatchSignOut_CTeam& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignOut_CTeam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGameMatchSignOut_CTeam_CPlayer CPlayer;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer >*
      mutable_players();
  const ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer& players(int index) const;
  ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer* add_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer >&
      players() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignOut.CTeam)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer > players_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_CAdditionalSignoutMsg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg) */ {
 public:
  CMsgGameMatchSignOut_CAdditionalSignoutMsg();
  virtual ~CMsgGameMatchSignOut_CAdditionalSignoutMsg();

  CMsgGameMatchSignOut_CAdditionalSignoutMsg(const CMsgGameMatchSignOut_CAdditionalSignoutMsg& from);

  inline CMsgGameMatchSignOut_CAdditionalSignoutMsg& operator=(const CMsgGameMatchSignOut_CAdditionalSignoutMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignOut_CAdditionalSignoutMsg(CMsgGameMatchSignOut_CAdditionalSignoutMsg&& from) noexcept
    : CMsgGameMatchSignOut_CAdditionalSignoutMsg() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignOut_CAdditionalSignoutMsg& operator=(CMsgGameMatchSignOut_CAdditionalSignoutMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignOut_CAdditionalSignoutMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignOut_CAdditionalSignoutMsg* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignOut_CAdditionalSignoutMsg*>(
               &_CMsgGameMatchSignOut_CAdditionalSignoutMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(CMsgGameMatchSignOut_CAdditionalSignoutMsg* other);
  friend void swap(CMsgGameMatchSignOut_CAdditionalSignoutMsg& a, CMsgGameMatchSignOut_CAdditionalSignoutMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_CAdditionalSignoutMsg* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_CAdditionalSignoutMsg>(nullptr);
  }

  CMsgGameMatchSignOut_CAdditionalSignoutMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_CAdditionalSignoutMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignOut_CAdditionalSignoutMsg& from);
  void MergeFrom(const CMsgGameMatchSignOut_CAdditionalSignoutMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignOut_CAdditionalSignoutMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes contents = 2;
  bool has_contents() const;
  void clear_contents();
  static const int kContentsFieldNumber = 2;
  const ::std::string& contents() const;
  void set_contents(const ::std::string& value);
  #if LANG_CXX11
  void set_contents(::std::string&& value);
  #endif
  void set_contents(const char* value);
  void set_contents(const void* value, size_t size);
  ::std::string* mutable_contents();
  ::std::string* release_contents();
  void set_allocated_contents(::std::string* contents);

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr contents_;
  ::google::protobuf::uint32 id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_CSocialFeedMatchEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent) */ {
 public:
  CMsgGameMatchSignOut_CSocialFeedMatchEvent();
  virtual ~CMsgGameMatchSignOut_CSocialFeedMatchEvent();

  CMsgGameMatchSignOut_CSocialFeedMatchEvent(const CMsgGameMatchSignOut_CSocialFeedMatchEvent& from);

  inline CMsgGameMatchSignOut_CSocialFeedMatchEvent& operator=(const CMsgGameMatchSignOut_CSocialFeedMatchEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignOut_CSocialFeedMatchEvent(CMsgGameMatchSignOut_CSocialFeedMatchEvent&& from) noexcept
    : CMsgGameMatchSignOut_CSocialFeedMatchEvent() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignOut_CSocialFeedMatchEvent& operator=(CMsgGameMatchSignOut_CSocialFeedMatchEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignOut_CSocialFeedMatchEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignOut_CSocialFeedMatchEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignOut_CSocialFeedMatchEvent*>(
               &_CMsgGameMatchSignOut_CSocialFeedMatchEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(CMsgGameMatchSignOut_CSocialFeedMatchEvent* other);
  friend void swap(CMsgGameMatchSignOut_CSocialFeedMatchEvent& a, CMsgGameMatchSignOut_CSocialFeedMatchEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_CSocialFeedMatchEvent* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_CSocialFeedMatchEvent>(nullptr);
  }

  CMsgGameMatchSignOut_CSocialFeedMatchEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_CSocialFeedMatchEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignOut_CSocialFeedMatchEvent& from);
  void MergeFrom(const CMsgGameMatchSignOut_CSocialFeedMatchEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignOut_CSocialFeedMatchEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 event_type = 3;
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 3;
  ::google::protobuf::uint32 event_type() const;
  void set_event_type(::google::protobuf::uint32 value);

  // optional int32 game_time = 4;
  bool has_game_time() const;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 4;
  ::google::protobuf::int32 game_time() const;
  void set_game_time(::google::protobuf::int32 value);

  // optional uint32 replay_time = 5;
  bool has_replay_time() const;
  void clear_replay_time();
  static const int kReplayTimeFieldNumber = 5;
  ::google::protobuf::uint32 replay_time() const;
  void set_replay_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 event_type_;
  ::google::protobuf::int32 game_time_;
  ::google::protobuf::uint32 replay_time_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_CCustomGameData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignOut.CCustomGameData) */ {
 public:
  CMsgGameMatchSignOut_CCustomGameData();
  virtual ~CMsgGameMatchSignOut_CCustomGameData();

  CMsgGameMatchSignOut_CCustomGameData(const CMsgGameMatchSignOut_CCustomGameData& from);

  inline CMsgGameMatchSignOut_CCustomGameData& operator=(const CMsgGameMatchSignOut_CCustomGameData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignOut_CCustomGameData(CMsgGameMatchSignOut_CCustomGameData&& from) noexcept
    : CMsgGameMatchSignOut_CCustomGameData() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignOut_CCustomGameData& operator=(CMsgGameMatchSignOut_CCustomGameData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignOut_CCustomGameData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignOut_CCustomGameData* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignOut_CCustomGameData*>(
               &_CMsgGameMatchSignOut_CCustomGameData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(CMsgGameMatchSignOut_CCustomGameData* other);
  friend void swap(CMsgGameMatchSignOut_CCustomGameData& a, CMsgGameMatchSignOut_CCustomGameData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_CCustomGameData* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_CCustomGameData>(nullptr);
  }

  CMsgGameMatchSignOut_CCustomGameData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_CCustomGameData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignOut_CCustomGameData& from);
  void MergeFrom(const CMsgGameMatchSignOut_CCustomGameData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignOut_CCustomGameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 publish_timestamp = 1;
  bool has_publish_timestamp() const;
  void clear_publish_timestamp();
  static const int kPublishTimestampFieldNumber = 1;
  ::google::protobuf::uint32 publish_timestamp() const;
  void set_publish_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignOut.CCustomGameData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 publish_timestamp_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_EventGameLeaderboardEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry) */ {
 public:
  CMsgGameMatchSignOut_EventGameLeaderboardEntry();
  virtual ~CMsgGameMatchSignOut_EventGameLeaderboardEntry();

  CMsgGameMatchSignOut_EventGameLeaderboardEntry(const CMsgGameMatchSignOut_EventGameLeaderboardEntry& from);

  inline CMsgGameMatchSignOut_EventGameLeaderboardEntry& operator=(const CMsgGameMatchSignOut_EventGameLeaderboardEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignOut_EventGameLeaderboardEntry(CMsgGameMatchSignOut_EventGameLeaderboardEntry&& from) noexcept
    : CMsgGameMatchSignOut_EventGameLeaderboardEntry() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignOut_EventGameLeaderboardEntry& operator=(CMsgGameMatchSignOut_EventGameLeaderboardEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignOut_EventGameLeaderboardEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignOut_EventGameLeaderboardEntry* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignOut_EventGameLeaderboardEntry*>(
               &_CMsgGameMatchSignOut_EventGameLeaderboardEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(CMsgGameMatchSignOut_EventGameLeaderboardEntry* other);
  friend void swap(CMsgGameMatchSignOut_EventGameLeaderboardEntry& a, CMsgGameMatchSignOut_EventGameLeaderboardEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_EventGameLeaderboardEntry* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_EventGameLeaderboardEntry>(nullptr);
  }

  CMsgGameMatchSignOut_EventGameLeaderboardEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_EventGameLeaderboardEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignOut_EventGameLeaderboardEntry& from);
  void MergeFrom(const CMsgGameMatchSignOut_EventGameLeaderboardEntry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignOut_EventGameLeaderboardEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name_suffix = 1;
  bool has_name_suffix() const;
  void clear_name_suffix();
  static const int kNameSuffixFieldNumber = 1;
  const ::std::string& name_suffix() const;
  void set_name_suffix(const ::std::string& value);
  #if LANG_CXX11
  void set_name_suffix(::std::string&& value);
  #endif
  void set_name_suffix(const char* value);
  void set_name_suffix(const char* value, size_t size);
  ::std::string* mutable_name_suffix();
  ::std::string* release_name_suffix();
  void set_allocated_name_suffix(::std::string* name_suffix);

  // optional int32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // optional uint32 extra_data_1 = 3;
  bool has_extra_data_1() const;
  void clear_extra_data_1();
  static const int kExtraData1FieldNumber = 3;
  ::google::protobuf::uint32 extra_data_1() const;
  void set_extra_data_1(::google::protobuf::uint32 value);

  // optional uint32 extra_data_2 = 4;
  bool has_extra_data_2() const;
  void clear_extra_data_2();
  static const int kExtraData2FieldNumber = 4;
  ::google::protobuf::uint32 extra_data_2() const;
  void set_extra_data_2(::google::protobuf::uint32 value);

  // optional uint32 extra_data_3 = 5;
  bool has_extra_data_3() const;
  void clear_extra_data_3();
  static const int kExtraData3FieldNumber = 5;
  ::google::protobuf::uint32 extra_data_3() const;
  void set_extra_data_3(::google::protobuf::uint32 value);

  // optional uint32 extra_data_4 = 6;
  bool has_extra_data_4() const;
  void clear_extra_data_4();
  static const int kExtraData4FieldNumber = 6;
  ::google::protobuf::uint32 extra_data_4() const;
  void set_extra_data_4(::google::protobuf::uint32 value);

  // optional uint32 extra_data_5 = 7;
  bool has_extra_data_5() const;
  void clear_extra_data_5();
  static const int kExtraData5FieldNumber = 7;
  ::google::protobuf::uint32 extra_data_5() const;
  void set_extra_data_5(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_suffix_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::uint32 extra_data_1_;
  ::google::protobuf::uint32 extra_data_2_;
  ::google::protobuf::uint32 extra_data_3_;
  ::google::protobuf::uint32 extra_data_4_;
  ::google::protobuf::uint32 extra_data_5_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut_WardPlacement final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignOut.WardPlacement) */ {
 public:
  CMsgGameMatchSignOut_WardPlacement();
  virtual ~CMsgGameMatchSignOut_WardPlacement();

  CMsgGameMatchSignOut_WardPlacement(const CMsgGameMatchSignOut_WardPlacement& from);

  inline CMsgGameMatchSignOut_WardPlacement& operator=(const CMsgGameMatchSignOut_WardPlacement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignOut_WardPlacement(CMsgGameMatchSignOut_WardPlacement&& from) noexcept
    : CMsgGameMatchSignOut_WardPlacement() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignOut_WardPlacement& operator=(CMsgGameMatchSignOut_WardPlacement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignOut_WardPlacement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignOut_WardPlacement* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignOut_WardPlacement*>(
               &_CMsgGameMatchSignOut_WardPlacement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(CMsgGameMatchSignOut_WardPlacement* other);
  friend void swap(CMsgGameMatchSignOut_WardPlacement& a, CMsgGameMatchSignOut_WardPlacement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut_WardPlacement* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_WardPlacement>(nullptr);
  }

  CMsgGameMatchSignOut_WardPlacement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut_WardPlacement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignOut_WardPlacement& from);
  void MergeFrom(const CMsgGameMatchSignOut_WardPlacement& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignOut_WardPlacement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 team_id = 2;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 2;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // optional uint32 placed_time = 3;
  bool has_placed_time() const;
  void clear_placed_time();
  static const int kPlacedTimeFieldNumber = 3;
  ::google::protobuf::uint32 placed_time() const;
  void set_placed_time(::google::protobuf::uint32 value);

  // optional uint32 building_state = 4;
  bool has_building_state() const;
  void clear_building_state();
  static const int kBuildingStateFieldNumber = 4;
  ::google::protobuf::uint32 building_state() const;
  void set_building_state(::google::protobuf::uint32 value);

  // optional uint32 creep_state = 5;
  bool has_creep_state() const;
  void clear_creep_state();
  static const int kCreepStateFieldNumber = 5;
  ::google::protobuf::uint32 creep_state() const;
  void set_creep_state(::google::protobuf::uint32 value);

  // optional bool roshan_alive = 6;
  bool has_roshan_alive() const;
  void clear_roshan_alive();
  static const int kRoshanAliveFieldNumber = 6;
  bool roshan_alive() const;
  void set_roshan_alive(bool value);

  // optional uint32 position_x = 7;
  bool has_position_x() const;
  void clear_position_x();
  static const int kPositionXFieldNumber = 7;
  ::google::protobuf::uint32 position_x() const;
  void set_position_x(::google::protobuf::uint32 value);

  // optional uint32 position_y = 8;
  bool has_position_y() const;
  void clear_position_y();
  static const int kPositionYFieldNumber = 8;
  ::google::protobuf::uint32 position_y() const;
  void set_position_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignOut.WardPlacement)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 placed_time_;
  ::google::protobuf::uint32 building_state_;
  ::google::protobuf::uint32 creep_state_;
  bool roshan_alive_;
  ::google::protobuf::uint32 position_x_;
  ::google::protobuf::uint32 position_y_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignOut) */ {
 public:
  CMsgGameMatchSignOut();
  virtual ~CMsgGameMatchSignOut();

  CMsgGameMatchSignOut(const CMsgGameMatchSignOut& from);

  inline CMsgGameMatchSignOut& operator=(const CMsgGameMatchSignOut& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignOut(CMsgGameMatchSignOut&& from) noexcept
    : CMsgGameMatchSignOut() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignOut& operator=(CMsgGameMatchSignOut&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignOut& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignOut* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignOut*>(
               &_CMsgGameMatchSignOut_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(CMsgGameMatchSignOut* other);
  friend void swap(CMsgGameMatchSignOut& a, CMsgGameMatchSignOut& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOut* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut>(nullptr);
  }

  CMsgGameMatchSignOut* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignOut>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignOut& from);
  void MergeFrom(const CMsgGameMatchSignOut& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignOut* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGameMatchSignOut_CTeam CTeam;
  typedef CMsgGameMatchSignOut_CAdditionalSignoutMsg CAdditionalSignoutMsg;
  typedef CMsgGameMatchSignOut_CSocialFeedMatchEvent CSocialFeedMatchEvent;
  typedef CMsgGameMatchSignOut_CCustomGameData CCustomGameData;
  typedef CMsgGameMatchSignOut_EventGameLeaderboardEntry EventGameLeaderboardEntry;
  typedef CMsgGameMatchSignOut_WardPlacement WardPlacement;

  // accessors -------------------------------------------------------

  // repeated uint32 num_players = 5;
  int num_players_size() const;
  void clear_num_players();
  static const int kNumPlayersFieldNumber = 5;
  ::google::protobuf::uint32 num_players(int index) const;
  void set_num_players(int index, ::google::protobuf::uint32 value);
  void add_num_players(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      num_players() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_num_players();

  // repeated .proto.dota.CMsgGameMatchSignOut.CTeam teams = 6;
  int teams_size() const;
  void clear_teams();
  static const int kTeamsFieldNumber = 6;
  ::proto::dota::CMsgGameMatchSignOut_CTeam* mutable_teams(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CTeam >*
      mutable_teams();
  const ::proto::dota::CMsgGameMatchSignOut_CTeam& teams(int index) const;
  ::proto::dota::CMsgGameMatchSignOut_CTeam* add_teams();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CTeam >&
      teams() const;

  // repeated uint32 tower_status = 8;
  int tower_status_size() const;
  void clear_tower_status();
  static const int kTowerStatusFieldNumber = 8;
  ::google::protobuf::uint32 tower_status(int index) const;
  void set_tower_status(int index, ::google::protobuf::uint32 value);
  void add_tower_status(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tower_status() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tower_status();

  // repeated uint32 barracks_status = 9;
  int barracks_status_size() const;
  void clear_barracks_status();
  static const int kBarracksStatusFieldNumber = 9;
  ::google::protobuf::uint32 barracks_status(int index) const;
  void set_barracks_status(int index, ::google::protobuf::uint32 value);
  void add_barracks_status(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      barracks_status() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_barracks_status();

  // repeated .proto.dota.CMatchHeroSelectEvent picks_bans = 15;
  int picks_bans_size() const;
  void clear_picks_bans();
  static const int kPicksBansFieldNumber = 15;
  ::proto::dota::CMatchHeroSelectEvent* mutable_picks_bans(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchHeroSelectEvent >*
      mutable_picks_bans();
  const ::proto::dota::CMatchHeroSelectEvent& picks_bans(int index) const;
  ::proto::dota::CMatchHeroSelectEvent* add_picks_bans();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchHeroSelectEvent >&
      picks_bans() const;

  // repeated .proto.dota.CMsgEconPlayerStrangeCountAdjustment player_strange_count_adjustments = 17;
  int player_strange_count_adjustments_size() const;
  void clear_player_strange_count_adjustments();
  static const int kPlayerStrangeCountAdjustmentsFieldNumber = 17;
  ::proto::dota::CMsgEconPlayerStrangeCountAdjustment* mutable_player_strange_count_adjustments(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEconPlayerStrangeCountAdjustment >*
      mutable_player_strange_count_adjustments();
  const ::proto::dota::CMsgEconPlayerStrangeCountAdjustment& player_strange_count_adjustments(int index) const;
  ::proto::dota::CMsgEconPlayerStrangeCountAdjustment* add_player_strange_count_adjustments();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEconPlayerStrangeCountAdjustment >&
      player_strange_count_adjustments() const;

  // repeated .proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg additional_msgs = 20;
  int additional_msgs_size() const;
  void clear_additional_msgs();
  static const int kAdditionalMsgsFieldNumber = 20;
  ::proto::dota::CMsgGameMatchSignOut_CAdditionalSignoutMsg* mutable_additional_msgs(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CAdditionalSignoutMsg >*
      mutable_additional_msgs();
  const ::proto::dota::CMsgGameMatchSignOut_CAdditionalSignoutMsg& additional_msgs(int index) const;
  ::proto::dota::CMsgGameMatchSignOut_CAdditionalSignoutMsg* add_additional_msgs();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CAdditionalSignoutMsg >&
      additional_msgs() const;

  // repeated .proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent social_feed_events = 36;
  int social_feed_events_size() const;
  void clear_social_feed_events();
  static const int kSocialFeedEventsFieldNumber = 36;
  ::proto::dota::CMsgGameMatchSignOut_CSocialFeedMatchEvent* mutable_social_feed_events(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CSocialFeedMatchEvent >*
      mutable_social_feed_events();
  const ::proto::dota::CMsgGameMatchSignOut_CSocialFeedMatchEvent& social_feed_events(int index) const;
  ::proto::dota::CMsgGameMatchSignOut_CSocialFeedMatchEvent* add_social_feed_events();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CSocialFeedMatchEvent >&
      social_feed_events() const;

  // repeated uint32 team_scores = 39;
  int team_scores_size() const;
  void clear_team_scores();
  static const int kTeamScoresFieldNumber = 39;
  ::google::protobuf::uint32 team_scores(int index) const;
  void set_team_scores(int index, ::google::protobuf::uint32 value);
  void add_team_scores(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      team_scores() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_team_scores();

  // repeated .proto.dota.CMsgDOTAFantasyPlayerStats fantasy_stats = 41;
  int fantasy_stats_size() const;
  void clear_fantasy_stats();
  static const int kFantasyStatsFieldNumber = 41;
  ::proto::dota::CMsgDOTAFantasyPlayerStats* mutable_fantasy_stats(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats >*
      mutable_fantasy_stats();
  const ::proto::dota::CMsgDOTAFantasyPlayerStats& fantasy_stats(int index) const;
  ::proto::dota::CMsgDOTAFantasyPlayerStats* add_fantasy_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats >&
      fantasy_stats() const;

  // repeated .proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry event_game_leaderboard_entries = 42;
  int event_game_leaderboard_entries_size() const;
  void clear_event_game_leaderboard_entries();
  static const int kEventGameLeaderboardEntriesFieldNumber = 42;
  ::proto::dota::CMsgGameMatchSignOut_EventGameLeaderboardEntry* mutable_event_game_leaderboard_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_EventGameLeaderboardEntry >*
      mutable_event_game_leaderboard_entries();
  const ::proto::dota::CMsgGameMatchSignOut_EventGameLeaderboardEntry& event_game_leaderboard_entries(int index) const;
  ::proto::dota::CMsgGameMatchSignOut_EventGameLeaderboardEntry* add_event_game_leaderboard_entries();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_EventGameLeaderboardEntry >&
      event_game_leaderboard_entries() const;

  // repeated .proto.dota.CMsgGameMatchSignOut.WardPlacement ward_placements = 43;
  int ward_placements_size() const;
  void clear_ward_placements();
  static const int kWardPlacementsFieldNumber = 43;
  ::proto::dota::CMsgGameMatchSignOut_WardPlacement* mutable_ward_placements(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_WardPlacement >*
      mutable_ward_placements();
  const ::proto::dota::CMsgGameMatchSignOut_WardPlacement& ward_placements(int index) const;
  ::proto::dota::CMsgGameMatchSignOut_WardPlacement* add_ward_placements();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_WardPlacement >&
      ward_placements() const;

  // optional string server_addr = 11;
  bool has_server_addr() const;
  void clear_server_addr();
  static const int kServerAddrFieldNumber = 11;
  const ::std::string& server_addr() const;
  void set_server_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_server_addr(::std::string&& value);
  #endif
  void set_server_addr(const char* value);
  void set_server_addr(const char* value, size_t size);
  ::std::string* mutable_server_addr();
  ::std::string* release_server_addr();
  void set_allocated_server_addr(::std::string* server_addr);

  // optional .proto.dota.CMsgPoorNetworkConditions poor_network_conditions = 35;
  bool has_poor_network_conditions() const;
  void clear_poor_network_conditions();
  static const int kPoorNetworkConditionsFieldNumber = 35;
  const ::proto::dota::CMsgPoorNetworkConditions& poor_network_conditions() const;
  ::proto::dota::CMsgPoorNetworkConditions* release_poor_network_conditions();
  ::proto::dota::CMsgPoorNetworkConditions* mutable_poor_network_conditions();
  void set_allocated_poor_network_conditions(::proto::dota::CMsgPoorNetworkConditions* poor_network_conditions);

  // optional .proto.dota.CMsgGameMatchSignOut.CCustomGameData custom_game_data = 37;
  bool has_custom_game_data() const;
  void clear_custom_game_data();
  static const int kCustomGameDataFieldNumber = 37;
  const ::proto::dota::CMsgGameMatchSignOut_CCustomGameData& custom_game_data() const;
  ::proto::dota::CMsgGameMatchSignOut_CCustomGameData* release_custom_game_data();
  ::proto::dota::CMsgGameMatchSignOut_CCustomGameData* mutable_custom_game_data();
  void set_allocated_custom_game_data(::proto::dota::CMsgGameMatchSignOut_CCustomGameData* custom_game_data);

  // optional uint64 match_id = 1 [(.proto.dota.key_field) = true];
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::uint32 duration() const;
  void set_duration(::google::protobuf::uint32 value);

  // optional fixed32 date = 4;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 4;
  ::google::protobuf::uint32 date() const;
  void set_date(::google::protobuf::uint32 value);

  // optional uint32 cluster = 10;
  bool has_cluster() const;
  void clear_cluster();
  static const int kClusterFieldNumber = 10;
  ::google::protobuf::uint32 cluster() const;
  void set_cluster(::google::protobuf::uint32 value);

  // optional uint32 first_blood_time = 12;
  bool has_first_blood_time() const;
  void clear_first_blood_time();
  static const int kFirstBloodTimeFieldNumber = 12;
  ::google::protobuf::uint32 first_blood_time() const;
  void set_first_blood_time(::google::protobuf::uint32 value);

  // optional float game_balance = 13;
  bool has_game_balance() const;
  void clear_game_balance();
  static const int kGameBalanceFieldNumber = 13;
  float game_balance() const;
  void set_game_balance(float value);

  // optional uint32 event_score = 14;
  bool has_event_score() const;
  void clear_event_score();
  static const int kEventScoreFieldNumber = 14;
  ::google::protobuf::uint32 event_score() const;
  void set_event_score(::google::protobuf::uint32 value);

  // optional bool good_guys_win = 3;
  bool has_good_guys_win() const;
  void clear_good_guys_win();
  static const int kGoodGuysWinFieldNumber = 3;
  bool good_guys_win() const;
  void set_good_guys_win(bool value);

  // optional bool automatic_surrender = 18;
  bool has_automatic_surrender() const;
  void clear_automatic_surrender();
  static const int kAutomaticSurrenderFieldNumber = 18;
  bool automatic_surrender() const;
  void set_automatic_surrender(bool value);

  // optional bool legacy_mass_disconnect = 21;
  bool has_legacy_mass_disconnect() const;
  void clear_legacy_mass_disconnect();
  static const int kLegacyMassDisconnectFieldNumber = 21;
  bool legacy_mass_disconnect() const;
  void set_legacy_mass_disconnect(bool value);

  // optional uint32 server_version = 19;
  bool has_server_version() const;
  void clear_server_version();
  static const int kServerVersionFieldNumber = 19;
  ::google::protobuf::uint32 server_version() const;
  void set_server_version(::google::protobuf::uint32 value);

  // optional sint32 average_networth_delta = 22;
  bool has_average_networth_delta() const;
  void clear_average_networth_delta();
  static const int kAverageNetworthDeltaFieldNumber = 22;
  ::google::protobuf::int32 average_networth_delta() const;
  void set_average_networth_delta(::google::protobuf::int32 value);

  // optional sint32 networth_delta_min10 = 23;
  bool has_networth_delta_min10() const;
  void clear_networth_delta_min10();
  static const int kNetworthDeltaMin10FieldNumber = 23;
  ::google::protobuf::int32 networth_delta_min10() const;
  void set_networth_delta_min10(::google::protobuf::int32 value);

  // optional sint32 networth_delta_min20 = 24;
  bool has_networth_delta_min20() const;
  void clear_networth_delta_min20();
  static const int kNetworthDeltaMin20FieldNumber = 24;
  ::google::protobuf::int32 networth_delta_min20() const;
  void set_networth_delta_min20(::google::protobuf::int32 value);

  // optional sint32 maximum_losing_networth_lead = 25;
  bool has_maximum_losing_networth_lead() const;
  void clear_maximum_losing_networth_lead();
  static const int kMaximumLosingNetworthLeadFieldNumber = 25;
  ::google::protobuf::int32 maximum_losing_networth_lead() const;
  void set_maximum_losing_networth_lead(::google::protobuf::int32 value);

  // optional sint32 average_experience_delta = 26;
  bool has_average_experience_delta() const;
  void clear_average_experience_delta();
  static const int kAverageExperienceDeltaFieldNumber = 26;
  ::google::protobuf::int32 average_experience_delta() const;
  void set_average_experience_delta(::google::protobuf::int32 value);

  // optional sint32 experience_delta_min10 = 27;
  bool has_experience_delta_min10() const;
  void clear_experience_delta_min10();
  static const int kExperienceDeltaMin10FieldNumber = 27;
  ::google::protobuf::int32 experience_delta_min10() const;
  void set_experience_delta_min10(::google::protobuf::int32 value);

  // optional sint32 experience_delta_min20 = 28;
  bool has_experience_delta_min20() const;
  void clear_experience_delta_min20();
  static const int kExperienceDeltaMin20FieldNumber = 28;
  ::google::protobuf::int32 experience_delta_min20() const;
  void set_experience_delta_min20(::google::protobuf::int32 value);

  // optional sint32 bonus_gold_winner_min10 = 29;
  bool has_bonus_gold_winner_min10() const;
  void clear_bonus_gold_winner_min10();
  static const int kBonusGoldWinnerMin10FieldNumber = 29;
  ::google::protobuf::int32 bonus_gold_winner_min10() const;
  void set_bonus_gold_winner_min10(::google::protobuf::int32 value);

  // optional sint32 bonus_gold_winner_min20 = 30;
  bool has_bonus_gold_winner_min20() const;
  void clear_bonus_gold_winner_min20();
  static const int kBonusGoldWinnerMin20FieldNumber = 30;
  ::google::protobuf::int32 bonus_gold_winner_min20() const;
  void set_bonus_gold_winner_min20(::google::protobuf::int32 value);

  // optional uint32 bonus_gold_winner_total = 31;
  bool has_bonus_gold_winner_total() const;
  void clear_bonus_gold_winner_total();
  static const int kBonusGoldWinnerTotalFieldNumber = 31;
  ::google::protobuf::uint32 bonus_gold_winner_total() const;
  void set_bonus_gold_winner_total(::google::protobuf::uint32 value);

  // optional sint32 bonus_gold_loser_min10 = 32;
  bool has_bonus_gold_loser_min10() const;
  void clear_bonus_gold_loser_min10();
  static const int kBonusGoldLoserMin10FieldNumber = 32;
  ::google::protobuf::int32 bonus_gold_loser_min10() const;
  void set_bonus_gold_loser_min10(::google::protobuf::int32 value);

  // optional sint32 bonus_gold_loser_min20 = 33;
  bool has_bonus_gold_loser_min20() const;
  void clear_bonus_gold_loser_min20();
  static const int kBonusGoldLoserMin20FieldNumber = 33;
  ::google::protobuf::int32 bonus_gold_loser_min20() const;
  void set_bonus_gold_loser_min20(::google::protobuf::int32 value);

  // optional uint32 bonus_gold_loser_total = 34;
  bool has_bonus_gold_loser_total() const;
  void clear_bonus_gold_loser_total();
  static const int kBonusGoldLoserTotalFieldNumber = 34;
  ::google::protobuf::uint32 bonus_gold_loser_total() const;
  void set_bonus_gold_loser_total(::google::protobuf::uint32 value);

  // optional uint32 match_flags = 38;
  bool has_match_flags() const;
  void clear_match_flags();
  static const int kMatchFlagsFieldNumber = 38;
  ::google::protobuf::uint32 match_flags() const;
  void set_match_flags(::google::protobuf::uint32 value);

  // optional uint32 pre_game_duration = 40;
  bool has_pre_game_duration() const;
  void clear_pre_game_duration();
  static const int kPreGameDurationFieldNumber = 40;
  ::google::protobuf::uint32 pre_game_duration() const;
  void set_pre_game_duration(::google::protobuf::uint32 value);

  // optional uint32 bounty_rune_gold_winners = 44;
  bool has_bounty_rune_gold_winners() const;
  void clear_bounty_rune_gold_winners();
  static const int kBountyRuneGoldWinnersFieldNumber = 44;
  ::google::protobuf::uint32 bounty_rune_gold_winners() const;
  void set_bounty_rune_gold_winners(::google::protobuf::uint32 value);

  // optional uint32 bounty_rune_gold_losers = 45;
  bool has_bounty_rune_gold_losers() const;
  void clear_bounty_rune_gold_losers();
  static const int kBountyRuneGoldLosersFieldNumber = 45;
  ::google::protobuf::uint32 bounty_rune_gold_losers() const;
  void set_bounty_rune_gold_losers(::google::protobuf::uint32 value);

  // optional uint32 range_creep_upgrade_gold_winners = 46;
  bool has_range_creep_upgrade_gold_winners() const;
  void clear_range_creep_upgrade_gold_winners();
  static const int kRangeCreepUpgradeGoldWinnersFieldNumber = 46;
  ::google::protobuf::uint32 range_creep_upgrade_gold_winners() const;
  void set_range_creep_upgrade_gold_winners(::google::protobuf::uint32 value);

  // optional uint32 range_creep_upgrade_gold_losers = 47;
  bool has_range_creep_upgrade_gold_losers() const;
  void clear_range_creep_upgrade_gold_losers();
  static const int kRangeCreepUpgradeGoldLosersFieldNumber = 47;
  ::google::protobuf::uint32 range_creep_upgrade_gold_losers() const;
  void set_range_creep_upgrade_gold_losers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignOut)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<2> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > num_players_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CTeam > teams_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tower_status_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > barracks_status_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchHeroSelectEvent > picks_bans_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEconPlayerStrangeCountAdjustment > player_strange_count_adjustments_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CAdditionalSignoutMsg > additional_msgs_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CSocialFeedMatchEvent > social_feed_events_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > team_scores_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats > fantasy_stats_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_EventGameLeaderboardEntry > event_game_leaderboard_entries_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_WardPlacement > ward_placements_;
  ::google::protobuf::internal::ArenaStringPtr server_addr_;
  ::proto::dota::CMsgPoorNetworkConditions* poor_network_conditions_;
  ::proto::dota::CMsgGameMatchSignOut_CCustomGameData* custom_game_data_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 date_;
  ::google::protobuf::uint32 cluster_;
  ::google::protobuf::uint32 first_blood_time_;
  float game_balance_;
  ::google::protobuf::uint32 event_score_;
  bool good_guys_win_;
  bool automatic_surrender_;
  bool legacy_mass_disconnect_;
  ::google::protobuf::uint32 server_version_;
  ::google::protobuf::int32 average_networth_delta_;
  ::google::protobuf::int32 networth_delta_min10_;
  ::google::protobuf::int32 networth_delta_min20_;
  ::google::protobuf::int32 maximum_losing_networth_lead_;
  ::google::protobuf::int32 average_experience_delta_;
  ::google::protobuf::int32 experience_delta_min10_;
  ::google::protobuf::int32 experience_delta_min20_;
  ::google::protobuf::int32 bonus_gold_winner_min10_;
  ::google::protobuf::int32 bonus_gold_winner_min20_;
  ::google::protobuf::uint32 bonus_gold_winner_total_;
  ::google::protobuf::int32 bonus_gold_loser_min10_;
  ::google::protobuf::int32 bonus_gold_loser_min20_;
  ::google::protobuf::uint32 bonus_gold_loser_total_;
  ::google::protobuf::uint32 match_flags_;
  ::google::protobuf::uint32 pre_game_duration_;
  ::google::protobuf::uint32 bounty_rune_gold_winners_;
  ::google::protobuf::uint32 bounty_rune_gold_losers_;
  ::google::protobuf::uint32 range_creep_upgrade_gold_winners_;
  ::google::protobuf::uint32 range_creep_upgrade_gold_losers_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutDraftInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutDraftInfo) */ {
 public:
  CMsgSignOutDraftInfo();
  virtual ~CMsgSignOutDraftInfo();

  CMsgSignOutDraftInfo(const CMsgSignOutDraftInfo& from);

  inline CMsgSignOutDraftInfo& operator=(const CMsgSignOutDraftInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutDraftInfo(CMsgSignOutDraftInfo&& from) noexcept
    : CMsgSignOutDraftInfo() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutDraftInfo& operator=(CMsgSignOutDraftInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutDraftInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutDraftInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutDraftInfo*>(
               &_CMsgSignOutDraftInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(CMsgSignOutDraftInfo* other);
  friend void swap(CMsgSignOutDraftInfo& a, CMsgSignOutDraftInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutDraftInfo* New() const final {
    return CreateMaybeMessage<CMsgSignOutDraftInfo>(nullptr);
  }

  CMsgSignOutDraftInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutDraftInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutDraftInfo& from);
  void MergeFrom(const CMsgSignOutDraftInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutDraftInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMatchHeroSelectEvent picks_bans = 3;
  int picks_bans_size() const;
  void clear_picks_bans();
  static const int kPicksBansFieldNumber = 3;
  ::proto::dota::CMatchHeroSelectEvent* mutable_picks_bans(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchHeroSelectEvent >*
      mutable_picks_bans();
  const ::proto::dota::CMatchHeroSelectEvent& picks_bans(int index) const;
  ::proto::dota::CMatchHeroSelectEvent* add_picks_bans();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchHeroSelectEvent >&
      picks_bans() const;

  // optional uint32 radiant_captain_account_id = 1;
  bool has_radiant_captain_account_id() const;
  void clear_radiant_captain_account_id();
  static const int kRadiantCaptainAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 radiant_captain_account_id() const;
  void set_radiant_captain_account_id(::google::protobuf::uint32 value);

  // optional uint32 dire_captain_account_id = 2;
  bool has_dire_captain_account_id() const;
  void clear_dire_captain_account_id();
  static const int kDireCaptainAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 dire_captain_account_id() const;
  void set_dire_captain_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutDraftInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchHeroSelectEvent > picks_bans_;
  ::google::protobuf::uint32 radiant_captain_account_id_;
  ::google::protobuf::uint32 dire_captain_account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutBotInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutBotInfo) */ {
 public:
  CMsgSignOutBotInfo();
  virtual ~CMsgSignOutBotInfo();

  CMsgSignOutBotInfo(const CMsgSignOutBotInfo& from);

  inline CMsgSignOutBotInfo& operator=(const CMsgSignOutBotInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutBotInfo(CMsgSignOutBotInfo&& from) noexcept
    : CMsgSignOutBotInfo() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutBotInfo& operator=(CMsgSignOutBotInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutBotInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutBotInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutBotInfo*>(
               &_CMsgSignOutBotInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(CMsgSignOutBotInfo* other);
  friend void swap(CMsgSignOutBotInfo& a, CMsgSignOutBotInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutBotInfo* New() const final {
    return CreateMaybeMessage<CMsgSignOutBotInfo>(nullptr);
  }

  CMsgSignOutBotInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutBotInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutBotInfo& from);
  void MergeFrom(const CMsgSignOutBotInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutBotInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.DOTABotDifficulty bot_difficulty_radiant = 2 [default = BOT_DIFFICULTY_PASSIVE];
  bool has_bot_difficulty_radiant() const;
  void clear_bot_difficulty_radiant();
  static const int kBotDifficultyRadiantFieldNumber = 2;
  ::proto::dota::DOTABotDifficulty bot_difficulty_radiant() const;
  void set_bot_difficulty_radiant(::proto::dota::DOTABotDifficulty value);

  // optional bool allow_cheats = 1;
  bool has_allow_cheats() const;
  void clear_allow_cheats();
  static const int kAllowCheatsFieldNumber = 1;
  bool allow_cheats() const;
  void set_allow_cheats(bool value);

  // optional bool created_lobby = 3;
  bool has_created_lobby() const;
  void clear_created_lobby();
  static const int kCreatedLobbyFieldNumber = 3;
  bool created_lobby() const;
  void set_created_lobby(bool value);

  // optional .proto.dota.DOTABotDifficulty bot_difficulty_dire = 5 [default = BOT_DIFFICULTY_PASSIVE];
  bool has_bot_difficulty_dire() const;
  void clear_bot_difficulty_dire();
  static const int kBotDifficultyDireFieldNumber = 5;
  ::proto::dota::DOTABotDifficulty bot_difficulty_dire() const;
  void set_bot_difficulty_dire(::proto::dota::DOTABotDifficulty value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutBotInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int bot_difficulty_radiant_;
  bool allow_cheats_;
  bool created_lobby_;
  int bot_difficulty_dire_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutPlayerStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutPlayerStats) */ {
 public:
  CMsgSignOutPlayerStats();
  virtual ~CMsgSignOutPlayerStats();

  CMsgSignOutPlayerStats(const CMsgSignOutPlayerStats& from);

  inline CMsgSignOutPlayerStats& operator=(const CMsgSignOutPlayerStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutPlayerStats(CMsgSignOutPlayerStats&& from) noexcept
    : CMsgSignOutPlayerStats() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutPlayerStats& operator=(CMsgSignOutPlayerStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutPlayerStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutPlayerStats* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutPlayerStats*>(
               &_CMsgSignOutPlayerStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(CMsgSignOutPlayerStats* other);
  friend void swap(CMsgSignOutPlayerStats& a, CMsgSignOutPlayerStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutPlayerStats* New() const final {
    return CreateMaybeMessage<CMsgSignOutPlayerStats>(nullptr);
  }

  CMsgSignOutPlayerStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutPlayerStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutPlayerStats& from);
  void MergeFrom(const CMsgSignOutPlayerStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutPlayerStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional int32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::int32 account_id() const;
  void set_account_id(::google::protobuf::int32 value);

  // optional uint32 rank = 3;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 3;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 4;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 rampages = 5;
  bool has_rampages() const;
  void clear_rampages();
  static const int kRampagesFieldNumber = 5;
  ::google::protobuf::uint32 rampages() const;
  void set_rampages(::google::protobuf::uint32 value);

  // optional uint32 triple_kills = 6;
  bool has_triple_kills() const;
  void clear_triple_kills();
  static const int kTripleKillsFieldNumber = 6;
  ::google::protobuf::uint32 triple_kills() const;
  void set_triple_kills(::google::protobuf::uint32 value);

  // optional uint32 first_blood_claimed = 7;
  bool has_first_blood_claimed() const;
  void clear_first_blood_claimed();
  static const int kFirstBloodClaimedFieldNumber = 7;
  ::google::protobuf::uint32 first_blood_claimed() const;
  void set_first_blood_claimed(::google::protobuf::uint32 value);

  // optional uint32 first_blood_given = 8;
  bool has_first_blood_given() const;
  void clear_first_blood_given();
  static const int kFirstBloodGivenFieldNumber = 8;
  ::google::protobuf::uint32 first_blood_given() const;
  void set_first_blood_given(::google::protobuf::uint32 value);

  // optional uint32 couriers_killed = 9;
  bool has_couriers_killed() const;
  void clear_couriers_killed();
  static const int kCouriersKilledFieldNumber = 9;
  ::google::protobuf::uint32 couriers_killed() const;
  void set_couriers_killed(::google::protobuf::uint32 value);

  // optional uint32 aegises_snatched = 10;
  bool has_aegises_snatched() const;
  void clear_aegises_snatched();
  static const int kAegisesSnatchedFieldNumber = 10;
  ::google::protobuf::uint32 aegises_snatched() const;
  void set_aegises_snatched(::google::protobuf::uint32 value);

  // optional uint32 cheeses_eaten = 11;
  bool has_cheeses_eaten() const;
  void clear_cheeses_eaten();
  static const int kCheesesEatenFieldNumber = 11;
  ::google::protobuf::uint32 cheeses_eaten() const;
  void set_cheeses_eaten(::google::protobuf::uint32 value);

  // optional uint32 creeps_stacked = 12;
  bool has_creeps_stacked() const;
  void clear_creeps_stacked();
  static const int kCreepsStackedFieldNumber = 12;
  ::google::protobuf::uint32 creeps_stacked() const;
  void set_creeps_stacked(::google::protobuf::uint32 value);

  // optional float fight_score = 13;
  bool has_fight_score() const;
  void clear_fight_score();
  static const int kFightScoreFieldNumber = 13;
  float fight_score() const;
  void set_fight_score(float value);

  // optional float farm_score = 14;
  bool has_farm_score() const;
  void clear_farm_score();
  static const int kFarmScoreFieldNumber = 14;
  float farm_score() const;
  void set_farm_score(float value);

  // optional float support_score = 15;
  bool has_support_score() const;
  void clear_support_score();
  static const int kSupportScoreFieldNumber = 15;
  float support_score() const;
  void set_support_score(float value);

  // optional float push_score = 16;
  bool has_push_score() const;
  void clear_push_score();
  static const int kPushScoreFieldNumber = 16;
  float push_score() const;
  void set_push_score(float value);

  // optional uint32 kills = 17;
  bool has_kills() const;
  void clear_kills();
  static const int kKillsFieldNumber = 17;
  ::google::protobuf::uint32 kills() const;
  void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 18;
  bool has_deaths() const;
  void clear_deaths();
  static const int kDeathsFieldNumber = 18;
  ::google::protobuf::uint32 deaths() const;
  void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 assists = 19;
  bool has_assists() const;
  void clear_assists();
  static const int kAssistsFieldNumber = 19;
  ::google::protobuf::uint32 assists() const;
  void set_assists(::google::protobuf::uint32 value);

  // optional uint32 last_hits = 20;
  bool has_last_hits() const;
  void clear_last_hits();
  static const int kLastHitsFieldNumber = 20;
  ::google::protobuf::uint32 last_hits() const;
  void set_last_hits(::google::protobuf::uint32 value);

  // optional uint32 denies = 21;
  bool has_denies() const;
  void clear_denies();
  static const int kDeniesFieldNumber = 21;
  ::google::protobuf::uint32 denies() const;
  void set_denies(::google::protobuf::uint32 value);

  // optional float gpm = 22;
  bool has_gpm() const;
  void clear_gpm();
  static const int kGpmFieldNumber = 22;
  float gpm() const;
  void set_gpm(float value);

  // optional float xppm = 23;
  bool has_xppm() const;
  void clear_xppm();
  static const int kXppmFieldNumber = 23;
  float xppm() const;
  void set_xppm(float value);

  // optional float net_worth = 24;
  bool has_net_worth() const;
  void clear_net_worth();
  static const int kNetWorthFieldNumber = 24;
  float net_worth() const;
  void set_net_worth(float value);

  // optional float damage = 25;
  bool has_damage() const;
  void clear_damage();
  static const int kDamageFieldNumber = 25;
  float damage() const;
  void set_damage(float value);

  // optional float heals = 26;
  bool has_heals() const;
  void clear_heals();
  static const int kHealsFieldNumber = 26;
  float heals() const;
  void set_heals(float value);

  // optional uint32 rapiers_purchased = 27;
  bool has_rapiers_purchased() const;
  void clear_rapiers_purchased();
  static const int kRapiersPurchasedFieldNumber = 27;
  ::google::protobuf::uint32 rapiers_purchased() const;
  void set_rapiers_purchased(::google::protobuf::uint32 value);

  // optional uint32 observer_wards_placed = 28;
  bool has_observer_wards_placed() const;
  void clear_observer_wards_placed();
  static const int kObserverWardsPlacedFieldNumber = 28;
  ::google::protobuf::uint32 observer_wards_placed() const;
  void set_observer_wards_placed(::google::protobuf::uint32 value);

  // optional uint32 wards_destroyed = 29;
  bool has_wards_destroyed() const;
  void clear_wards_destroyed();
  static const int kWardsDestroyedFieldNumber = 29;
  ::google::protobuf::uint32 wards_destroyed() const;
  void set_wards_destroyed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutPlayerStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::int32 account_id_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 rampages_;
  ::google::protobuf::uint32 triple_kills_;
  ::google::protobuf::uint32 first_blood_claimed_;
  ::google::protobuf::uint32 first_blood_given_;
  ::google::protobuf::uint32 couriers_killed_;
  ::google::protobuf::uint32 aegises_snatched_;
  ::google::protobuf::uint32 cheeses_eaten_;
  ::google::protobuf::uint32 creeps_stacked_;
  float fight_score_;
  float farm_score_;
  float support_score_;
  float push_score_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 assists_;
  ::google::protobuf::uint32 last_hits_;
  ::google::protobuf::uint32 denies_;
  float gpm_;
  float xppm_;
  float net_worth_;
  float damage_;
  float heals_;
  ::google::protobuf::uint32 rapiers_purchased_;
  ::google::protobuf::uint32 observer_wards_placed_;
  ::google::protobuf::uint32 wards_destroyed_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutCommunicationSummary_PlayerCommunication final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication) */ {
 public:
  CMsgSignOutCommunicationSummary_PlayerCommunication();
  virtual ~CMsgSignOutCommunicationSummary_PlayerCommunication();

  CMsgSignOutCommunicationSummary_PlayerCommunication(const CMsgSignOutCommunicationSummary_PlayerCommunication& from);

  inline CMsgSignOutCommunicationSummary_PlayerCommunication& operator=(const CMsgSignOutCommunicationSummary_PlayerCommunication& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutCommunicationSummary_PlayerCommunication(CMsgSignOutCommunicationSummary_PlayerCommunication&& from) noexcept
    : CMsgSignOutCommunicationSummary_PlayerCommunication() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutCommunicationSummary_PlayerCommunication& operator=(CMsgSignOutCommunicationSummary_PlayerCommunication&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutCommunicationSummary_PlayerCommunication& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutCommunicationSummary_PlayerCommunication* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutCommunicationSummary_PlayerCommunication*>(
               &_CMsgSignOutCommunicationSummary_PlayerCommunication_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(CMsgSignOutCommunicationSummary_PlayerCommunication* other);
  friend void swap(CMsgSignOutCommunicationSummary_PlayerCommunication& a, CMsgSignOutCommunicationSummary_PlayerCommunication& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutCommunicationSummary_PlayerCommunication* New() const final {
    return CreateMaybeMessage<CMsgSignOutCommunicationSummary_PlayerCommunication>(nullptr);
  }

  CMsgSignOutCommunicationSummary_PlayerCommunication* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutCommunicationSummary_PlayerCommunication>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutCommunicationSummary_PlayerCommunication& from);
  void MergeFrom(const CMsgSignOutCommunicationSummary_PlayerCommunication& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutCommunicationSummary_PlayerCommunication* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 pings = 2;
  bool has_pings() const;
  void clear_pings();
  static const int kPingsFieldNumber = 2;
  ::google::protobuf::uint32 pings() const;
  void set_pings(::google::protobuf::uint32 value);

  // optional uint32 max_pings_per_interval = 3;
  bool has_max_pings_per_interval() const;
  void clear_max_pings_per_interval();
  static const int kMaxPingsPerIntervalFieldNumber = 3;
  ::google::protobuf::uint32 max_pings_per_interval() const;
  void set_max_pings_per_interval(::google::protobuf::uint32 value);

  // optional uint32 teammate_pings = 4;
  bool has_teammate_pings() const;
  void clear_teammate_pings();
  static const int kTeammatePingsFieldNumber = 4;
  ::google::protobuf::uint32 teammate_pings() const;
  void set_teammate_pings(::google::protobuf::uint32 value);

  // optional uint32 max_teammate_pings_per_interval = 5;
  bool has_max_teammate_pings_per_interval() const;
  void clear_max_teammate_pings_per_interval();
  static const int kMaxTeammatePingsPerIntervalFieldNumber = 5;
  ::google::protobuf::uint32 max_teammate_pings_per_interval() const;
  void set_max_teammate_pings_per_interval(::google::protobuf::uint32 value);

  // optional uint32 team_chat_messages = 6;
  bool has_team_chat_messages() const;
  void clear_team_chat_messages();
  static const int kTeamChatMessagesFieldNumber = 6;
  ::google::protobuf::uint32 team_chat_messages() const;
  void set_team_chat_messages(::google::protobuf::uint32 value);

  // optional uint32 all_chat_messages = 7;
  bool has_all_chat_messages() const;
  void clear_all_chat_messages();
  static const int kAllChatMessagesFieldNumber = 7;
  ::google::protobuf::uint32 all_chat_messages() const;
  void set_all_chat_messages(::google::protobuf::uint32 value);

  // optional uint32 chat_wheel_messages = 8;
  bool has_chat_wheel_messages() const;
  void clear_chat_wheel_messages();
  static const int kChatWheelMessagesFieldNumber = 8;
  ::google::protobuf::uint32 chat_wheel_messages() const;
  void set_chat_wheel_messages(::google::protobuf::uint32 value);

  // optional uint32 pauses = 9;
  bool has_pauses() const;
  void clear_pauses();
  static const int kPausesFieldNumber = 9;
  ::google::protobuf::uint32 pauses() const;
  void set_pauses(::google::protobuf::uint32 value);

  // optional uint32 unpauses = 10;
  bool has_unpauses() const;
  void clear_unpauses();
  static const int kUnpausesFieldNumber = 10;
  ::google::protobuf::uint32 unpauses() const;
  void set_unpauses(::google::protobuf::uint32 value);

  // optional uint32 lines_drawn = 11;
  bool has_lines_drawn() const;
  void clear_lines_drawn();
  static const int kLinesDrawnFieldNumber = 11;
  ::google::protobuf::uint32 lines_drawn() const;
  void set_lines_drawn(::google::protobuf::uint32 value);

  // optional uint32 voice_chat_seconds = 12;
  bool has_voice_chat_seconds() const;
  void clear_voice_chat_seconds();
  static const int kVoiceChatSecondsFieldNumber = 12;
  ::google::protobuf::uint32 voice_chat_seconds() const;
  void set_voice_chat_seconds(::google::protobuf::uint32 value);

  // optional uint32 chat_mutes = 13;
  bool has_chat_mutes() const;
  void clear_chat_mutes();
  static const int kChatMutesFieldNumber = 13;
  ::google::protobuf::uint32 chat_mutes() const;
  void set_chat_mutes(::google::protobuf::uint32 value);

  // optional uint32 voice_mutes = 14;
  bool has_voice_mutes() const;
  void clear_voice_mutes();
  static const int kVoiceMutesFieldNumber = 14;
  ::google::protobuf::uint32 voice_mutes() const;
  void set_voice_mutes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 pings_;
  ::google::protobuf::uint32 max_pings_per_interval_;
  ::google::protobuf::uint32 teammate_pings_;
  ::google::protobuf::uint32 max_teammate_pings_per_interval_;
  ::google::protobuf::uint32 team_chat_messages_;
  ::google::protobuf::uint32 all_chat_messages_;
  ::google::protobuf::uint32 chat_wheel_messages_;
  ::google::protobuf::uint32 pauses_;
  ::google::protobuf::uint32 unpauses_;
  ::google::protobuf::uint32 lines_drawn_;
  ::google::protobuf::uint32 voice_chat_seconds_;
  ::google::protobuf::uint32 chat_mutes_;
  ::google::protobuf::uint32 voice_mutes_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutCommunicationSummary final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutCommunicationSummary) */ {
 public:
  CMsgSignOutCommunicationSummary();
  virtual ~CMsgSignOutCommunicationSummary();

  CMsgSignOutCommunicationSummary(const CMsgSignOutCommunicationSummary& from);

  inline CMsgSignOutCommunicationSummary& operator=(const CMsgSignOutCommunicationSummary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutCommunicationSummary(CMsgSignOutCommunicationSummary&& from) noexcept
    : CMsgSignOutCommunicationSummary() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutCommunicationSummary& operator=(CMsgSignOutCommunicationSummary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutCommunicationSummary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutCommunicationSummary* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutCommunicationSummary*>(
               &_CMsgSignOutCommunicationSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(CMsgSignOutCommunicationSummary* other);
  friend void swap(CMsgSignOutCommunicationSummary& a, CMsgSignOutCommunicationSummary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutCommunicationSummary* New() const final {
    return CreateMaybeMessage<CMsgSignOutCommunicationSummary>(nullptr);
  }

  CMsgSignOutCommunicationSummary* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutCommunicationSummary>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutCommunicationSummary& from);
  void MergeFrom(const CMsgSignOutCommunicationSummary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutCommunicationSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSignOutCommunicationSummary_PlayerCommunication PlayerCommunication;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  ::proto::dota::CMsgSignOutCommunicationSummary_PlayerCommunication* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutCommunicationSummary_PlayerCommunication >*
      mutable_players();
  const ::proto::dota::CMsgSignOutCommunicationSummary_PlayerCommunication& players(int index) const;
  ::proto::dota::CMsgSignOutCommunicationSummary_PlayerCommunication* add_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutCommunicationSummary_PlayerCommunication >&
      players() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutCommunicationSummary)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutCommunicationSummary_PlayerCommunication > players_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignoutResponse_PlayerMetadata final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata) */ {
 public:
  CMsgGameMatchSignoutResponse_PlayerMetadata();
  virtual ~CMsgGameMatchSignoutResponse_PlayerMetadata();

  CMsgGameMatchSignoutResponse_PlayerMetadata(const CMsgGameMatchSignoutResponse_PlayerMetadata& from);

  inline CMsgGameMatchSignoutResponse_PlayerMetadata& operator=(const CMsgGameMatchSignoutResponse_PlayerMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignoutResponse_PlayerMetadata(CMsgGameMatchSignoutResponse_PlayerMetadata&& from) noexcept
    : CMsgGameMatchSignoutResponse_PlayerMetadata() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignoutResponse_PlayerMetadata& operator=(CMsgGameMatchSignoutResponse_PlayerMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignoutResponse_PlayerMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignoutResponse_PlayerMetadata* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignoutResponse_PlayerMetadata*>(
               &_CMsgGameMatchSignoutResponse_PlayerMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(CMsgGameMatchSignoutResponse_PlayerMetadata* other);
  friend void swap(CMsgGameMatchSignoutResponse_PlayerMetadata& a, CMsgGameMatchSignoutResponse_PlayerMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignoutResponse_PlayerMetadata* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignoutResponse_PlayerMetadata>(nullptr);
  }

  CMsgGameMatchSignoutResponse_PlayerMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignoutResponse_PlayerMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignoutResponse_PlayerMetadata& from);
  void MergeFrom(const CMsgGameMatchSignoutResponse_PlayerMetadata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignoutResponse_PlayerMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 avg_kills_x16 = 2;
  bool has_avg_kills_x16() const;
  void clear_avg_kills_x16();
  static const int kAvgKillsX16FieldNumber = 2;
  ::google::protobuf::uint32 avg_kills_x16() const;
  void set_avg_kills_x16(::google::protobuf::uint32 value);

  // optional uint32 avg_deaths_x16 = 3;
  bool has_avg_deaths_x16() const;
  void clear_avg_deaths_x16();
  static const int kAvgDeathsX16FieldNumber = 3;
  ::google::protobuf::uint32 avg_deaths_x16() const;
  void set_avg_deaths_x16(::google::protobuf::uint32 value);

  // optional uint32 avg_assists_x16 = 4;
  bool has_avg_assists_x16() const;
  void clear_avg_assists_x16();
  static const int kAvgAssistsX16FieldNumber = 4;
  ::google::protobuf::uint32 avg_assists_x16() const;
  void set_avg_assists_x16(::google::protobuf::uint32 value);

  // optional uint32 avg_gpm_x16 = 5;
  bool has_avg_gpm_x16() const;
  void clear_avg_gpm_x16();
  static const int kAvgGpmX16FieldNumber = 5;
  ::google::protobuf::uint32 avg_gpm_x16() const;
  void set_avg_gpm_x16(::google::protobuf::uint32 value);

  // optional uint32 avg_xpm_x16 = 6;
  bool has_avg_xpm_x16() const;
  void clear_avg_xpm_x16();
  static const int kAvgXpmX16FieldNumber = 6;
  ::google::protobuf::uint32 avg_xpm_x16() const;
  void set_avg_xpm_x16(::google::protobuf::uint32 value);

  // optional uint32 best_kills_x16 = 7;
  bool has_best_kills_x16() const;
  void clear_best_kills_x16();
  static const int kBestKillsX16FieldNumber = 7;
  ::google::protobuf::uint32 best_kills_x16() const;
  void set_best_kills_x16(::google::protobuf::uint32 value);

  // optional uint32 best_assists_x16 = 8;
  bool has_best_assists_x16() const;
  void clear_best_assists_x16();
  static const int kBestAssistsX16FieldNumber = 8;
  ::google::protobuf::uint32 best_assists_x16() const;
  void set_best_assists_x16(::google::protobuf::uint32 value);

  // optional uint32 best_gpm_x16 = 9;
  bool has_best_gpm_x16() const;
  void clear_best_gpm_x16();
  static const int kBestGpmX16FieldNumber = 9;
  ::google::protobuf::uint32 best_gpm_x16() const;
  void set_best_gpm_x16(::google::protobuf::uint32 value);

  // optional uint32 best_xpm_x16 = 10;
  bool has_best_xpm_x16() const;
  void clear_best_xpm_x16();
  static const int kBestXpmX16FieldNumber = 10;
  ::google::protobuf::uint32 best_xpm_x16() const;
  void set_best_xpm_x16(::google::protobuf::uint32 value);

  // optional uint32 win_streak = 11;
  bool has_win_streak() const;
  void clear_win_streak();
  static const int kWinStreakFieldNumber = 11;
  ::google::protobuf::uint32 win_streak() const;
  void set_win_streak(::google::protobuf::uint32 value);

  // optional uint32 best_win_streak = 12;
  bool has_best_win_streak() const;
  void clear_best_win_streak();
  static const int kBestWinStreakFieldNumber = 12;
  ::google::protobuf::uint32 best_win_streak() const;
  void set_best_win_streak(::google::protobuf::uint32 value);

  // optional uint32 games_played = 13;
  bool has_games_played() const;
  void clear_games_played();
  static const int kGamesPlayedFieldNumber = 13;
  ::google::protobuf::uint32 games_played() const;
  void set_games_played(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 avg_kills_x16_;
  ::google::protobuf::uint32 avg_deaths_x16_;
  ::google::protobuf::uint32 avg_assists_x16_;
  ::google::protobuf::uint32 avg_gpm_x16_;
  ::google::protobuf::uint32 avg_xpm_x16_;
  ::google::protobuf::uint32 best_kills_x16_;
  ::google::protobuf::uint32 best_assists_x16_;
  ::google::protobuf::uint32 best_gpm_x16_;
  ::google::protobuf::uint32 best_xpm_x16_;
  ::google::protobuf::uint32 win_streak_;
  ::google::protobuf::uint32 best_win_streak_;
  ::google::protobuf::uint32 games_played_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignoutResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignoutResponse) */ {
 public:
  CMsgGameMatchSignoutResponse();
  virtual ~CMsgGameMatchSignoutResponse();

  CMsgGameMatchSignoutResponse(const CMsgGameMatchSignoutResponse& from);

  inline CMsgGameMatchSignoutResponse& operator=(const CMsgGameMatchSignoutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignoutResponse(CMsgGameMatchSignoutResponse&& from) noexcept
    : CMsgGameMatchSignoutResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignoutResponse& operator=(CMsgGameMatchSignoutResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignoutResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignoutResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignoutResponse*>(
               &_CMsgGameMatchSignoutResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(CMsgGameMatchSignoutResponse* other);
  friend void swap(CMsgGameMatchSignoutResponse& a, CMsgGameMatchSignoutResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignoutResponse* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignoutResponse>(nullptr);
  }

  CMsgGameMatchSignoutResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignoutResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignoutResponse& from);
  void MergeFrom(const CMsgGameMatchSignoutResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignoutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGameMatchSignoutResponse_PlayerMetadata PlayerMetadata;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CLobbyTimedRewardDetails timed_reward_details = 3;
  int timed_reward_details_size() const;
  void clear_timed_reward_details();
  static const int kTimedRewardDetailsFieldNumber = 3;
  ::proto::dota::CLobbyTimedRewardDetails* mutable_timed_reward_details(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CLobbyTimedRewardDetails >*
      mutable_timed_reward_details();
  const ::proto::dota::CLobbyTimedRewardDetails& timed_reward_details(int index) const;
  ::proto::dota::CLobbyTimedRewardDetails* add_timed_reward_details();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CLobbyTimedRewardDetails >&
      timed_reward_details() const;

  // repeated .proto.dota.CDOTALobbyMember xp_reward_details = 4;
  int xp_reward_details_size() const;
  void clear_xp_reward_details();
  static const int kXpRewardDetailsFieldNumber = 4;
  ::proto::dota::CDOTALobbyMember* mutable_xp_reward_details(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTALobbyMember >*
      mutable_xp_reward_details();
  const ::proto::dota::CDOTALobbyMember& xp_reward_details(int index) const;
  ::proto::dota::CDOTALobbyMember* add_xp_reward_details();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTALobbyMember >&
      xp_reward_details() const;

  // repeated .proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata players_metadata = 9;
  int players_metadata_size() const;
  void clear_players_metadata();
  static const int kPlayersMetadataFieldNumber = 9;
  ::proto::dota::CMsgGameMatchSignoutResponse_PlayerMetadata* mutable_players_metadata(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignoutResponse_PlayerMetadata >*
      mutable_players_metadata();
  const ::proto::dota::CMsgGameMatchSignoutResponse_PlayerMetadata& players_metadata(int index) const;
  ::proto::dota::CMsgGameMatchSignoutResponse_PlayerMetadata* add_players_metadata();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignoutResponse_PlayerMetadata >&
      players_metadata() const;

  // optional .proto.dota.CMsgDOTAMatch match_details = 8;
  bool has_match_details() const;
  void clear_match_details();
  static const int kMatchDetailsFieldNumber = 8;
  const ::proto::dota::CMsgDOTAMatch& match_details() const;
  ::proto::dota::CMsgDOTAMatch* release_match_details();
  ::proto::dota::CMsgDOTAMatch* mutable_match_details();
  void set_allocated_match_details(::proto::dota::CMsgDOTAMatch* match_details);

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional fixed32 replay_salt = 2;
  bool has_replay_salt() const;
  void clear_replay_salt();
  static const int kReplaySaltFieldNumber = 2;
  ::google::protobuf::uint32 replay_salt() const;
  void set_replay_salt(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 5;
  bool has_leagueid() const;
  void clear_leagueid();
  static const int kLeagueidFieldNumber = 5;
  ::google::protobuf::uint32 leagueid() const;
  void set_leagueid(::google::protobuf::uint32 value);

  // optional fixed32 metadata_private_key = 7;
  bool has_metadata_private_key() const;
  void clear_metadata_private_key();
  static const int kMetadataPrivateKeyFieldNumber = 7;
  ::google::protobuf::uint32 metadata_private_key() const;
  void set_metadata_private_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignoutResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CLobbyTimedRewardDetails > timed_reward_details_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTALobbyMember > xp_reward_details_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignoutResponse_PlayerMetadata > players_metadata_;
  ::proto::dota::CMsgDOTAMatch* match_details_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 replay_salt_;
  ::google::protobuf::uint32 leagueid_;
  ::google::protobuf::uint32 metadata_private_key_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgTimedRewardContainer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgTimedRewardContainer) */ {
 public:
  CMsgTimedRewardContainer();
  virtual ~CMsgTimedRewardContainer();

  CMsgTimedRewardContainer(const CMsgTimedRewardContainer& from);

  inline CMsgTimedRewardContainer& operator=(const CMsgTimedRewardContainer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTimedRewardContainer(CMsgTimedRewardContainer&& from) noexcept
    : CMsgTimedRewardContainer() {
    *this = ::std::move(from);
  }

  inline CMsgTimedRewardContainer& operator=(CMsgTimedRewardContainer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgTimedRewardContainer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTimedRewardContainer* internal_default_instance() {
    return reinterpret_cast<const CMsgTimedRewardContainer*>(
               &_CMsgTimedRewardContainer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(CMsgTimedRewardContainer* other);
  friend void swap(CMsgTimedRewardContainer& a, CMsgTimedRewardContainer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTimedRewardContainer* New() const final {
    return CreateMaybeMessage<CMsgTimedRewardContainer>(nullptr);
  }

  CMsgTimedRewardContainer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTimedRewardContainer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgTimedRewardContainer& from);
  void MergeFrom(const CMsgTimedRewardContainer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTimedRewardContainer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CLobbyTimedRewardDetails timed_reward_details = 1;
  int timed_reward_details_size() const;
  void clear_timed_reward_details();
  static const int kTimedRewardDetailsFieldNumber = 1;
  ::proto::dota::CLobbyTimedRewardDetails* mutable_timed_reward_details(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CLobbyTimedRewardDetails >*
      mutable_timed_reward_details();
  const ::proto::dota::CLobbyTimedRewardDetails& timed_reward_details(int index) const;
  ::proto::dota::CLobbyTimedRewardDetails* add_timed_reward_details();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CLobbyTimedRewardDetails >&
      timed_reward_details() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgTimedRewardContainer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CLobbyTimedRewardDetails > timed_reward_details_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOutPermissionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignOutPermissionRequest) */ {
 public:
  CMsgGameMatchSignOutPermissionRequest();
  virtual ~CMsgGameMatchSignOutPermissionRequest();

  CMsgGameMatchSignOutPermissionRequest(const CMsgGameMatchSignOutPermissionRequest& from);

  inline CMsgGameMatchSignOutPermissionRequest& operator=(const CMsgGameMatchSignOutPermissionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignOutPermissionRequest(CMsgGameMatchSignOutPermissionRequest&& from) noexcept
    : CMsgGameMatchSignOutPermissionRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignOutPermissionRequest& operator=(CMsgGameMatchSignOutPermissionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignOutPermissionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignOutPermissionRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignOutPermissionRequest*>(
               &_CMsgGameMatchSignOutPermissionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(CMsgGameMatchSignOutPermissionRequest* other);
  friend void swap(CMsgGameMatchSignOutPermissionRequest& a, CMsgGameMatchSignOutPermissionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOutPermissionRequest* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignOutPermissionRequest>(nullptr);
  }

  CMsgGameMatchSignOutPermissionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignOutPermissionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignOutPermissionRequest& from);
  void MergeFrom(const CMsgGameMatchSignOutPermissionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignOutPermissionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_version = 1;
  bool has_server_version() const;
  void clear_server_version();
  static const int kServerVersionFieldNumber = 1;
  ::google::protobuf::uint32 server_version() const;
  void set_server_version(::google::protobuf::uint32 value);

  // optional uint32 local_attempt = 2;
  bool has_local_attempt() const;
  void clear_local_attempt();
  static const int kLocalAttemptFieldNumber = 2;
  ::google::protobuf::uint32 local_attempt() const;
  void set_local_attempt(::google::protobuf::uint32 value);

  // optional uint32 total_attempt = 3;
  bool has_total_attempt() const;
  void clear_total_attempt();
  static const int kTotalAttemptFieldNumber = 3;
  ::google::protobuf::uint32 total_attempt() const;
  void set_total_attempt(::google::protobuf::uint32 value);

  // optional uint32 seconds_waited = 4;
  bool has_seconds_waited() const;
  void clear_seconds_waited();
  static const int kSecondsWaitedFieldNumber = 4;
  ::google::protobuf::uint32 seconds_waited() const;
  void set_seconds_waited(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignOutPermissionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 server_version_;
  ::google::protobuf::uint32 local_attempt_;
  ::google::protobuf::uint32 total_attempt_;
  ::google::protobuf::uint32 seconds_waited_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOutPermissionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignOutPermissionResponse) */ {
 public:
  CMsgGameMatchSignOutPermissionResponse();
  virtual ~CMsgGameMatchSignOutPermissionResponse();

  CMsgGameMatchSignOutPermissionResponse(const CMsgGameMatchSignOutPermissionResponse& from);

  inline CMsgGameMatchSignOutPermissionResponse& operator=(const CMsgGameMatchSignOutPermissionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignOutPermissionResponse(CMsgGameMatchSignOutPermissionResponse&& from) noexcept
    : CMsgGameMatchSignOutPermissionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignOutPermissionResponse& operator=(CMsgGameMatchSignOutPermissionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignOutPermissionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignOutPermissionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignOutPermissionResponse*>(
               &_CMsgGameMatchSignOutPermissionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(CMsgGameMatchSignOutPermissionResponse* other);
  friend void swap(CMsgGameMatchSignOutPermissionResponse& a, CMsgGameMatchSignOutPermissionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOutPermissionResponse* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignOutPermissionResponse>(nullptr);
  }

  CMsgGameMatchSignOutPermissionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignOutPermissionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignOutPermissionResponse& from);
  void MergeFrom(const CMsgGameMatchSignOutPermissionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignOutPermissionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool permission_granted = 1 [default = false];
  bool has_permission_granted() const;
  void clear_permission_granted();
  static const int kPermissionGrantedFieldNumber = 1;
  bool permission_granted() const;
  void set_permission_granted(bool value);

  // optional bool abandon_signout = 2 [default = false];
  bool has_abandon_signout() const;
  void clear_abandon_signout();
  static const int kAbandonSignoutFieldNumber = 2;
  bool abandon_signout() const;
  void set_abandon_signout(bool value);

  // optional uint32 retry_delay_seconds = 3 [default = 0];
  bool has_retry_delay_seconds() const;
  void clear_retry_delay_seconds();
  static const int kRetryDelaySecondsFieldNumber = 3;
  ::google::protobuf::uint32 retry_delay_seconds() const;
  void set_retry_delay_seconds(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignOutPermissionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool permission_granted_;
  bool abandon_signout_;
  ::google::protobuf::uint32 retry_delay_seconds_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOutEventGameData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameMatchSignOutEventGameData) */ {
 public:
  CMsgGameMatchSignOutEventGameData();
  virtual ~CMsgGameMatchSignOutEventGameData();

  CMsgGameMatchSignOutEventGameData(const CMsgGameMatchSignOutEventGameData& from);

  inline CMsgGameMatchSignOutEventGameData& operator=(const CMsgGameMatchSignOutEventGameData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameMatchSignOutEventGameData(CMsgGameMatchSignOutEventGameData&& from) noexcept
    : CMsgGameMatchSignOutEventGameData() {
    *this = ::std::move(from);
  }

  inline CMsgGameMatchSignOutEventGameData& operator=(CMsgGameMatchSignOutEventGameData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameMatchSignOutEventGameData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameMatchSignOutEventGameData* internal_default_instance() {
    return reinterpret_cast<const CMsgGameMatchSignOutEventGameData*>(
               &_CMsgGameMatchSignOutEventGameData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(CMsgGameMatchSignOutEventGameData* other);
  friend void swap(CMsgGameMatchSignOutEventGameData& a, CMsgGameMatchSignOutEventGameData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameMatchSignOutEventGameData* New() const final {
    return CreateMaybeMessage<CMsgGameMatchSignOutEventGameData>(nullptr);
  }

  CMsgGameMatchSignOutEventGameData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameMatchSignOutEventGameData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameMatchSignOutEventGameData& from);
  void MergeFrom(const CMsgGameMatchSignOutEventGameData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameMatchSignOutEventGameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string game_name = 2;
  bool has_game_name() const;
  void clear_game_name();
  static const int kGameNameFieldNumber = 2;
  const ::std::string& game_name() const;
  void set_game_name(const ::std::string& value);
  #if LANG_CXX11
  void set_game_name(::std::string&& value);
  #endif
  void set_game_name(const char* value);
  void set_game_name(const char* value, size_t size);
  ::std::string* mutable_game_name();
  ::std::string* release_game_name();
  void set_allocated_game_name(::std::string* game_name);

  // optional string map_name = 3;
  bool has_map_name() const;
  void clear_map_name();
  static const int kMapNameFieldNumber = 3;
  const ::std::string& map_name() const;
  void set_map_name(const ::std::string& value);
  #if LANG_CXX11
  void set_map_name(::std::string&& value);
  #endif
  void set_map_name(const char* value);
  void set_map_name(const char* value, size_t size);
  ::std::string* mutable_map_name();
  ::std::string* release_map_name();
  void set_allocated_map_name(::std::string* map_name);

  // optional bytes event_game_data = 4;
  bool has_event_game_data() const;
  void clear_event_game_data();
  static const int kEventGameDataFieldNumber = 4;
  const ::std::string& event_game_data() const;
  void set_event_game_data(const ::std::string& value);
  #if LANG_CXX11
  void set_event_game_data(::std::string&& value);
  #endif
  void set_event_game_data(const char* value);
  void set_event_game_data(const void* value, size_t size);
  ::std::string* mutable_event_game_data();
  ::std::string* release_event_game_data();
  void set_allocated_event_game_data(::std::string* event_game_data);

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 start_time = 5;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameMatchSignOutEventGameData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr game_name_;
  ::google::protobuf::internal::ArenaStringPtr map_name_;
  ::google::protobuf::internal::ArenaStringPtr event_game_data_;
  int event_id_;
  ::google::protobuf::uint32 start_time_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility) */ {
 public:
  CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility();
  virtual ~CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility();

  CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility(const CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& from);

  inline CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& operator=(const CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility(CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility&& from) noexcept
    : CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility() {
    *this = ::std::move(from);
  }

  inline CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& operator=(CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility*>(
               &_CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* other);
  friend void swap(CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& a, CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* New() const final {
    return CreateMaybeMessage<CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility>(nullptr);
  }

  CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& from);
  void MergeFrom(const CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ability_id = 1;
  bool has_ability_id() const;
  void clear_ability_id();
  static const int kAbilityIdFieldNumber = 1;
  ::google::protobuf::uint32 ability_id() const;
  void set_ability_id(::google::protobuf::uint32 value);

  // optional uint32 ability_level = 2;
  bool has_ability_level() const;
  void clear_ability_level();
  static const int kAbilityLevelFieldNumber = 2;
  ::google::protobuf::uint32 ability_level() const;
  void set_ability_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 ability_id_;
  ::google::protobuf::uint32 ability_level_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTALiveScoreboardUpdate_Team_Player final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player) */ {
 public:
  CMsgDOTALiveScoreboardUpdate_Team_Player();
  virtual ~CMsgDOTALiveScoreboardUpdate_Team_Player();

  CMsgDOTALiveScoreboardUpdate_Team_Player(const CMsgDOTALiveScoreboardUpdate_Team_Player& from);

  inline CMsgDOTALiveScoreboardUpdate_Team_Player& operator=(const CMsgDOTALiveScoreboardUpdate_Team_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTALiveScoreboardUpdate_Team_Player(CMsgDOTALiveScoreboardUpdate_Team_Player&& from) noexcept
    : CMsgDOTALiveScoreboardUpdate_Team_Player() {
    *this = ::std::move(from);
  }

  inline CMsgDOTALiveScoreboardUpdate_Team_Player& operator=(CMsgDOTALiveScoreboardUpdate_Team_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTALiveScoreboardUpdate_Team_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTALiveScoreboardUpdate_Team_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALiveScoreboardUpdate_Team_Player*>(
               &_CMsgDOTALiveScoreboardUpdate_Team_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(CMsgDOTALiveScoreboardUpdate_Team_Player* other);
  friend void swap(CMsgDOTALiveScoreboardUpdate_Team_Player& a, CMsgDOTALiveScoreboardUpdate_Team_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTALiveScoreboardUpdate_Team_Player* New() const final {
    return CreateMaybeMessage<CMsgDOTALiveScoreboardUpdate_Team_Player>(nullptr);
  }

  CMsgDOTALiveScoreboardUpdate_Team_Player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTALiveScoreboardUpdate_Team_Player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTALiveScoreboardUpdate_Team_Player& from);
  void MergeFrom(const CMsgDOTALiveScoreboardUpdate_Team_Player& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTALiveScoreboardUpdate_Team_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility HeroAbility;

  typedef CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState DOTAUltimateState;
  static const DOTAUltimateState k_EDOTAUltimateStateNotLearned =
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateNotLearned;
  static const DOTAUltimateState k_EDOTAUltimateStateCooldown =
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateCooldown;
  static const DOTAUltimateState k_EDOTAUltimateStateNeedsMana =
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateNeedsMana;
  static const DOTAUltimateState k_EDOTAUltimateStateReady =
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_k_EDOTAUltimateStateReady;
  static inline bool DOTAUltimateState_IsValid(int value) {
    return CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_IsValid(value);
  }
  static const DOTAUltimateState DOTAUltimateState_MIN =
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_MIN;
  static const DOTAUltimateState DOTAUltimateState_MAX =
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_MAX;
  static const int DOTAUltimateState_ARRAYSIZE =
    CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_DOTAUltimateState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DOTAUltimateState_descriptor() {
    return CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_descriptor();
  }
  static inline const ::std::string& DOTAUltimateState_Name(DOTAUltimateState value) {
    return CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_Name(value);
  }
  static inline bool DOTAUltimateState_Parse(const ::std::string& name,
      DOTAUltimateState* value) {
    return CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility abilities = 27;
  int abilities_size() const;
  void clear_abilities();
  static const int kAbilitiesFieldNumber = 27;
  ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* mutable_abilities(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility >*
      mutable_abilities();
  const ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& abilities(int index) const;
  ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* add_abilities();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility >&
      abilities() const;

  // optional string player_name = 2;
  bool has_player_name() const;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // optional string hero_name = 3;
  bool has_hero_name() const;
  void clear_hero_name();
  static const int kHeroNameFieldNumber = 3;
  const ::std::string& hero_name() const;
  void set_hero_name(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_name(::std::string&& value);
  #endif
  void set_hero_name(const char* value);
  void set_hero_name(const char* value, size_t size);
  ::std::string* mutable_hero_name();
  ::std::string* release_hero_name();
  void set_allocated_hero_name(::std::string* hero_name);

  // optional uint32 player_slot = 1;
  bool has_player_slot() const;
  void clear_player_slot();
  static const int kPlayerSlotFieldNumber = 1;
  ::google::protobuf::uint32 player_slot() const;
  void set_player_slot(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 4;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 kills = 5;
  bool has_kills() const;
  void clear_kills();
  static const int kKillsFieldNumber = 5;
  ::google::protobuf::uint32 kills() const;
  void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 6;
  bool has_deaths() const;
  void clear_deaths();
  static const int kDeathsFieldNumber = 6;
  ::google::protobuf::uint32 deaths() const;
  void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 assists = 7;
  bool has_assists() const;
  void clear_assists();
  static const int kAssistsFieldNumber = 7;
  ::google::protobuf::uint32 assists() const;
  void set_assists(::google::protobuf::uint32 value);

  // optional uint32 last_hits = 8;
  bool has_last_hits() const;
  void clear_last_hits();
  static const int kLastHitsFieldNumber = 8;
  ::google::protobuf::uint32 last_hits() const;
  void set_last_hits(::google::protobuf::uint32 value);

  // optional uint32 denies = 9;
  bool has_denies() const;
  void clear_denies();
  static const int kDeniesFieldNumber = 9;
  ::google::protobuf::uint32 denies() const;
  void set_denies(::google::protobuf::uint32 value);

  // optional uint32 gold = 10;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 10;
  ::google::protobuf::uint32 gold() const;
  void set_gold(::google::protobuf::uint32 value);

  // optional uint32 level = 11;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 11;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional float gold_per_min = 12;
  bool has_gold_per_min() const;
  void clear_gold_per_min();
  static const int kGoldPerMinFieldNumber = 12;
  float gold_per_min() const;
  void set_gold_per_min(float value);

  // optional float xp_per_min = 13;
  bool has_xp_per_min() const;
  void clear_xp_per_min();
  static const int kXpPerMinFieldNumber = 13;
  float xp_per_min() const;
  void set_xp_per_min(float value);

  // optional .proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.DOTAUltimateState ultimate_state = 14 [default = k_EDOTAUltimateStateNotLearned];
  bool has_ultimate_state() const;
  void clear_ultimate_state();
  static const int kUltimateStateFieldNumber = 14;
  ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState ultimate_state() const;
  void set_ultimate_state(::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState value);

  // optional float ultimate_cooldown = 15;
  bool has_ultimate_cooldown() const;
  void clear_ultimate_cooldown();
  static const int kUltimateCooldownFieldNumber = 15;
  float ultimate_cooldown() const;
  void set_ultimate_cooldown(float value);

  // optional uint32 item0 = 16;
  bool has_item0() const;
  void clear_item0();
  static const int kItem0FieldNumber = 16;
  ::google::protobuf::uint32 item0() const;
  void set_item0(::google::protobuf::uint32 value);

  // optional uint32 item1 = 17;
  bool has_item1() const;
  void clear_item1();
  static const int kItem1FieldNumber = 17;
  ::google::protobuf::uint32 item1() const;
  void set_item1(::google::protobuf::uint32 value);

  // optional uint32 item2 = 18;
  bool has_item2() const;
  void clear_item2();
  static const int kItem2FieldNumber = 18;
  ::google::protobuf::uint32 item2() const;
  void set_item2(::google::protobuf::uint32 value);

  // optional uint32 item3 = 19;
  bool has_item3() const;
  void clear_item3();
  static const int kItem3FieldNumber = 19;
  ::google::protobuf::uint32 item3() const;
  void set_item3(::google::protobuf::uint32 value);

  // optional uint32 item4 = 20;
  bool has_item4() const;
  void clear_item4();
  static const int kItem4FieldNumber = 20;
  ::google::protobuf::uint32 item4() const;
  void set_item4(::google::protobuf::uint32 value);

  // optional uint32 item5 = 21;
  bool has_item5() const;
  void clear_item5();
  static const int kItem5FieldNumber = 21;
  ::google::protobuf::uint32 item5() const;
  void set_item5(::google::protobuf::uint32 value);

  // optional uint32 respawn_timer = 22;
  bool has_respawn_timer() const;
  void clear_respawn_timer();
  static const int kRespawnTimerFieldNumber = 22;
  ::google::protobuf::uint32 respawn_timer() const;
  void set_respawn_timer(::google::protobuf::uint32 value);

  // optional uint32 account_id = 23;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 23;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional float position_x = 24;
  bool has_position_x() const;
  void clear_position_x();
  static const int kPositionXFieldNumber = 24;
  float position_x() const;
  void set_position_x(float value);

  // optional float position_y = 25;
  bool has_position_y() const;
  void clear_position_y();
  static const int kPositionYFieldNumber = 25;
  float position_y() const;
  void set_position_y(float value);

  // optional uint32 net_worth = 26;
  bool has_net_worth() const;
  void clear_net_worth();
  static const int kNetWorthFieldNumber = 26;
  ::google::protobuf::uint32 net_worth() const;
  void set_net_worth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility > abilities_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::internal::ArenaStringPtr hero_name_;
  ::google::protobuf::uint32 player_slot_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 assists_;
  ::google::protobuf::uint32 last_hits_;
  ::google::protobuf::uint32 denies_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 level_;
  float gold_per_min_;
  float xp_per_min_;
  int ultimate_state_;
  float ultimate_cooldown_;
  ::google::protobuf::uint32 item0_;
  ::google::protobuf::uint32 item1_;
  ::google::protobuf::uint32 item2_;
  ::google::protobuf::uint32 item3_;
  ::google::protobuf::uint32 item4_;
  ::google::protobuf::uint32 item5_;
  ::google::protobuf::uint32 respawn_timer_;
  ::google::protobuf::uint32 account_id_;
  float position_x_;
  float position_y_;
  ::google::protobuf::uint32 net_worth_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTALiveScoreboardUpdate_Team final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALiveScoreboardUpdate.Team) */ {
 public:
  CMsgDOTALiveScoreboardUpdate_Team();
  virtual ~CMsgDOTALiveScoreboardUpdate_Team();

  CMsgDOTALiveScoreboardUpdate_Team(const CMsgDOTALiveScoreboardUpdate_Team& from);

  inline CMsgDOTALiveScoreboardUpdate_Team& operator=(const CMsgDOTALiveScoreboardUpdate_Team& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTALiveScoreboardUpdate_Team(CMsgDOTALiveScoreboardUpdate_Team&& from) noexcept
    : CMsgDOTALiveScoreboardUpdate_Team() {
    *this = ::std::move(from);
  }

  inline CMsgDOTALiveScoreboardUpdate_Team& operator=(CMsgDOTALiveScoreboardUpdate_Team&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTALiveScoreboardUpdate_Team& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTALiveScoreboardUpdate_Team* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALiveScoreboardUpdate_Team*>(
               &_CMsgDOTALiveScoreboardUpdate_Team_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(CMsgDOTALiveScoreboardUpdate_Team* other);
  friend void swap(CMsgDOTALiveScoreboardUpdate_Team& a, CMsgDOTALiveScoreboardUpdate_Team& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTALiveScoreboardUpdate_Team* New() const final {
    return CreateMaybeMessage<CMsgDOTALiveScoreboardUpdate_Team>(nullptr);
  }

  CMsgDOTALiveScoreboardUpdate_Team* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTALiveScoreboardUpdate_Team>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTALiveScoreboardUpdate_Team& from);
  void MergeFrom(const CMsgDOTALiveScoreboardUpdate_Team& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTALiveScoreboardUpdate_Team* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTALiveScoreboardUpdate_Team_Player Player;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player >*
      mutable_players();
  const ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player& players(int index) const;
  ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player >&
      players() const;

  // repeated uint32 hero_picks = 5;
  int hero_picks_size() const;
  void clear_hero_picks();
  static const int kHeroPicksFieldNumber = 5;
  ::google::protobuf::uint32 hero_picks(int index) const;
  void set_hero_picks(int index, ::google::protobuf::uint32 value);
  void add_hero_picks(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_picks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_picks();

  // repeated uint32 hero_bans = 6;
  int hero_bans_size() const;
  void clear_hero_bans();
  static const int kHeroBansFieldNumber = 6;
  ::google::protobuf::uint32 hero_bans(int index) const;
  void set_hero_bans(int index, ::google::protobuf::uint32 value);
  void add_hero_bans(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_bans() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_bans();

  // optional uint32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 tower_state = 3;
  bool has_tower_state() const;
  void clear_tower_state();
  static const int kTowerStateFieldNumber = 3;
  ::google::protobuf::uint32 tower_state() const;
  void set_tower_state(::google::protobuf::uint32 value);

  // optional uint32 barracks_state = 4;
  bool has_barracks_state() const;
  void clear_barracks_state();
  static const int kBarracksStateFieldNumber = 4;
  ::google::protobuf::uint32 barracks_state() const;
  void set_barracks_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALiveScoreboardUpdate.Team)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player > players_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_picks_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_bans_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 tower_state_;
  ::google::protobuf::uint32 barracks_state_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTALiveScoreboardUpdate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALiveScoreboardUpdate) */ {
 public:
  CMsgDOTALiveScoreboardUpdate();
  virtual ~CMsgDOTALiveScoreboardUpdate();

  CMsgDOTALiveScoreboardUpdate(const CMsgDOTALiveScoreboardUpdate& from);

  inline CMsgDOTALiveScoreboardUpdate& operator=(const CMsgDOTALiveScoreboardUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTALiveScoreboardUpdate(CMsgDOTALiveScoreboardUpdate&& from) noexcept
    : CMsgDOTALiveScoreboardUpdate() {
    *this = ::std::move(from);
  }

  inline CMsgDOTALiveScoreboardUpdate& operator=(CMsgDOTALiveScoreboardUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTALiveScoreboardUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTALiveScoreboardUpdate* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALiveScoreboardUpdate*>(
               &_CMsgDOTALiveScoreboardUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(CMsgDOTALiveScoreboardUpdate* other);
  friend void swap(CMsgDOTALiveScoreboardUpdate& a, CMsgDOTALiveScoreboardUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTALiveScoreboardUpdate* New() const final {
    return CreateMaybeMessage<CMsgDOTALiveScoreboardUpdate>(nullptr);
  }

  CMsgDOTALiveScoreboardUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTALiveScoreboardUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTALiveScoreboardUpdate& from);
  void MergeFrom(const CMsgDOTALiveScoreboardUpdate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTALiveScoreboardUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTALiveScoreboardUpdate_Team Team;

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTALiveScoreboardUpdate.Team team_good = 5;
  bool has_team_good() const;
  void clear_team_good();
  static const int kTeamGoodFieldNumber = 5;
  const ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team& team_good() const;
  ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* release_team_good();
  ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* mutable_team_good();
  void set_allocated_team_good(::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* team_good);

  // optional .proto.dota.CMsgDOTALiveScoreboardUpdate.Team team_bad = 6;
  bool has_team_bad() const;
  void clear_team_bad();
  static const int kTeamBadFieldNumber = 6;
  const ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team& team_bad() const;
  ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* release_team_bad();
  ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* mutable_team_bad();
  void set_allocated_team_bad(::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* team_bad);

  // optional uint32 tournament_id = 1;
  bool has_tournament_id() const;
  void clear_tournament_id();
  static const int kTournamentIdFieldNumber = 1;
  ::google::protobuf::uint32 tournament_id() const;
  void set_tournament_id(::google::protobuf::uint32 value);

  // optional uint32 tournament_game_id = 2;
  bool has_tournament_game_id() const;
  void clear_tournament_game_id();
  static const int kTournamentGameIdFieldNumber = 2;
  ::google::protobuf::uint32 tournament_game_id() const;
  void set_tournament_game_id(::google::protobuf::uint32 value);

  // optional float duration = 3;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 3;
  float duration() const;
  void set_duration(float value);

  // optional int32 hltv_delay = 4;
  bool has_hltv_delay() const;
  void clear_hltv_delay();
  static const int kHltvDelayFieldNumber = 4;
  ::google::protobuf::int32 hltv_delay() const;
  void set_hltv_delay(::google::protobuf::int32 value);

  // optional uint32 roshan_respawn_timer = 7;
  bool has_roshan_respawn_timer() const;
  void clear_roshan_respawn_timer();
  static const int kRoshanRespawnTimerFieldNumber = 7;
  ::google::protobuf::uint32 roshan_respawn_timer() const;
  void set_roshan_respawn_timer(::google::protobuf::uint32 value);

  // optional uint32 league_id = 8;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 8;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint64 match_id = 9;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 9;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALiveScoreboardUpdate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* team_good_;
  ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* team_bad_;
  ::google::protobuf::uint32 tournament_id_;
  ::google::protobuf::uint32 tournament_game_id_;
  float duration_;
  ::google::protobuf::int32 hltv_delay_;
  ::google::protobuf::uint32 roshan_respawn_timer_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint64 match_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARequestPlayerResources final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestPlayerResources) */ {
 public:
  CMsgDOTARequestPlayerResources();
  virtual ~CMsgDOTARequestPlayerResources();

  CMsgDOTARequestPlayerResources(const CMsgDOTARequestPlayerResources& from);

  inline CMsgDOTARequestPlayerResources& operator=(const CMsgDOTARequestPlayerResources& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARequestPlayerResources(CMsgDOTARequestPlayerResources&& from) noexcept
    : CMsgDOTARequestPlayerResources() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARequestPlayerResources& operator=(CMsgDOTARequestPlayerResources&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARequestPlayerResources& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARequestPlayerResources* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestPlayerResources*>(
               &_CMsgDOTARequestPlayerResources_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(CMsgDOTARequestPlayerResources* other);
  friend void swap(CMsgDOTARequestPlayerResources& a, CMsgDOTARequestPlayerResources& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestPlayerResources* New() const final {
    return CreateMaybeMessage<CMsgDOTARequestPlayerResources>(nullptr);
  }

  CMsgDOTARequestPlayerResources* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARequestPlayerResources>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARequestPlayerResources& from);
  void MergeFrom(const CMsgDOTARequestPlayerResources& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARequestPlayerResources* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 player_id = 2;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestPlayerResources)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 player_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARequestPlayerResourcesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestPlayerResourcesResponse) */ {
 public:
  CMsgDOTARequestPlayerResourcesResponse();
  virtual ~CMsgDOTARequestPlayerResourcesResponse();

  CMsgDOTARequestPlayerResourcesResponse(const CMsgDOTARequestPlayerResourcesResponse& from);

  inline CMsgDOTARequestPlayerResourcesResponse& operator=(const CMsgDOTARequestPlayerResourcesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARequestPlayerResourcesResponse(CMsgDOTARequestPlayerResourcesResponse&& from) noexcept
    : CMsgDOTARequestPlayerResourcesResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARequestPlayerResourcesResponse& operator=(CMsgDOTARequestPlayerResourcesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARequestPlayerResourcesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARequestPlayerResourcesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestPlayerResourcesResponse*>(
               &_CMsgDOTARequestPlayerResourcesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(CMsgDOTARequestPlayerResourcesResponse* other);
  friend void swap(CMsgDOTARequestPlayerResourcesResponse& a, CMsgDOTARequestPlayerResourcesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestPlayerResourcesResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTARequestPlayerResourcesResponse>(nullptr);
  }

  CMsgDOTARequestPlayerResourcesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARequestPlayerResourcesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARequestPlayerResourcesResponse& from);
  void MergeFrom(const CMsgDOTARequestPlayerResourcesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARequestPlayerResourcesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 rank = 2;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 2;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 player_id = 3;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 3;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional bool prevent_text_chat = 4;
  bool has_prevent_text_chat() const;
  void clear_prevent_text_chat();
  static const int kPreventTextChatFieldNumber = 4;
  bool prevent_text_chat() const;
  void set_prevent_text_chat(bool value);

  // optional bool prevent_voice_chat = 5;
  bool has_prevent_voice_chat() const;
  void clear_prevent_voice_chat();
  static const int kPreventVoiceChatFieldNumber = 5;
  bool prevent_voice_chat() const;
  void set_prevent_voice_chat(bool value);

  // optional bool low_priority = 6;
  bool has_low_priority() const;
  void clear_low_priority();
  static const int kLowPriorityFieldNumber = 6;
  bool low_priority() const;
  void set_low_priority(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestPlayerResourcesResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 player_id_;
  bool prevent_text_chat_;
  bool prevent_voice_chat_;
  bool low_priority_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARequestBatchPlayerResources final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestBatchPlayerResources) */ {
 public:
  CMsgDOTARequestBatchPlayerResources();
  virtual ~CMsgDOTARequestBatchPlayerResources();

  CMsgDOTARequestBatchPlayerResources(const CMsgDOTARequestBatchPlayerResources& from);

  inline CMsgDOTARequestBatchPlayerResources& operator=(const CMsgDOTARequestBatchPlayerResources& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARequestBatchPlayerResources(CMsgDOTARequestBatchPlayerResources&& from) noexcept
    : CMsgDOTARequestBatchPlayerResources() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARequestBatchPlayerResources& operator=(CMsgDOTARequestBatchPlayerResources&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARequestBatchPlayerResources& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARequestBatchPlayerResources* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestBatchPlayerResources*>(
               &_CMsgDOTARequestBatchPlayerResources_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(CMsgDOTARequestBatchPlayerResources* other);
  friend void swap(CMsgDOTARequestBatchPlayerResources& a, CMsgDOTARequestBatchPlayerResources& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestBatchPlayerResources* New() const final {
    return CreateMaybeMessage<CMsgDOTARequestBatchPlayerResources>(nullptr);
  }

  CMsgDOTARequestBatchPlayerResources* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARequestBatchPlayerResources>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARequestBatchPlayerResources& from);
  void MergeFrom(const CMsgDOTARequestBatchPlayerResources& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARequestBatchPlayerResources* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1 [packed = true];
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // repeated uint32 rank_types = 4 [packed = true];
  int rank_types_size() const;
  void clear_rank_types();
  static const int kRankTypesFieldNumber = 4;
  ::google::protobuf::uint32 rank_types(int index) const;
  void set_rank_types(int index, ::google::protobuf::uint32 value);
  void add_rank_types(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rank_types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rank_types();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestBatchPlayerResources)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  mutable std::atomic<int> _account_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rank_types_;
  mutable std::atomic<int> _rank_types_cached_byte_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARequestBatchPlayerResourcesResponse_Result final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result) */ {
 public:
  CMsgDOTARequestBatchPlayerResourcesResponse_Result();
  virtual ~CMsgDOTARequestBatchPlayerResourcesResponse_Result();

  CMsgDOTARequestBatchPlayerResourcesResponse_Result(const CMsgDOTARequestBatchPlayerResourcesResponse_Result& from);

  inline CMsgDOTARequestBatchPlayerResourcesResponse_Result& operator=(const CMsgDOTARequestBatchPlayerResourcesResponse_Result& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARequestBatchPlayerResourcesResponse_Result(CMsgDOTARequestBatchPlayerResourcesResponse_Result&& from) noexcept
    : CMsgDOTARequestBatchPlayerResourcesResponse_Result() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARequestBatchPlayerResourcesResponse_Result& operator=(CMsgDOTARequestBatchPlayerResourcesResponse_Result&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARequestBatchPlayerResourcesResponse_Result& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARequestBatchPlayerResourcesResponse_Result* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestBatchPlayerResourcesResponse_Result*>(
               &_CMsgDOTARequestBatchPlayerResourcesResponse_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(CMsgDOTARequestBatchPlayerResourcesResponse_Result* other);
  friend void swap(CMsgDOTARequestBatchPlayerResourcesResponse_Result& a, CMsgDOTARequestBatchPlayerResourcesResponse_Result& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestBatchPlayerResourcesResponse_Result* New() const final {
    return CreateMaybeMessage<CMsgDOTARequestBatchPlayerResourcesResponse_Result>(nullptr);
  }

  CMsgDOTARequestBatchPlayerResourcesResponse_Result* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARequestBatchPlayerResourcesResponse_Result>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARequestBatchPlayerResourcesResponse_Result& from);
  void MergeFrom(const CMsgDOTARequestBatchPlayerResourcesResponse_Result& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARequestBatchPlayerResourcesResponse_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 rank = 4;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 4;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional bool prevent_text_chat = 2;
  bool has_prevent_text_chat() const;
  void clear_prevent_text_chat();
  static const int kPreventTextChatFieldNumber = 2;
  bool prevent_text_chat() const;
  void set_prevent_text_chat(bool value);

  // optional bool prevent_voice_chat = 3;
  bool has_prevent_voice_chat() const;
  void clear_prevent_voice_chat();
  static const int kPreventVoiceChatFieldNumber = 3;
  bool prevent_voice_chat() const;
  void set_prevent_voice_chat(bool value);

  // optional bool rank_calibrated = 5;
  bool has_rank_calibrated() const;
  void clear_rank_calibrated();
  static const int kRankCalibratedFieldNumber = 5;
  bool rank_calibrated() const;
  void set_rank_calibrated(bool value);

  // optional bool low_priority = 6;
  bool has_low_priority() const;
  void clear_low_priority();
  static const int kLowPriorityFieldNumber = 6;
  bool low_priority() const;
  void set_low_priority(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 rank_;
  bool prevent_text_chat_;
  bool prevent_voice_chat_;
  bool rank_calibrated_;
  bool low_priority_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARequestBatchPlayerResourcesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse) */ {
 public:
  CMsgDOTARequestBatchPlayerResourcesResponse();
  virtual ~CMsgDOTARequestBatchPlayerResourcesResponse();

  CMsgDOTARequestBatchPlayerResourcesResponse(const CMsgDOTARequestBatchPlayerResourcesResponse& from);

  inline CMsgDOTARequestBatchPlayerResourcesResponse& operator=(const CMsgDOTARequestBatchPlayerResourcesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARequestBatchPlayerResourcesResponse(CMsgDOTARequestBatchPlayerResourcesResponse&& from) noexcept
    : CMsgDOTARequestBatchPlayerResourcesResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARequestBatchPlayerResourcesResponse& operator=(CMsgDOTARequestBatchPlayerResourcesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARequestBatchPlayerResourcesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARequestBatchPlayerResourcesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestBatchPlayerResourcesResponse*>(
               &_CMsgDOTARequestBatchPlayerResourcesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(CMsgDOTARequestBatchPlayerResourcesResponse* other);
  friend void swap(CMsgDOTARequestBatchPlayerResourcesResponse& a, CMsgDOTARequestBatchPlayerResourcesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestBatchPlayerResourcesResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTARequestBatchPlayerResourcesResponse>(nullptr);
  }

  CMsgDOTARequestBatchPlayerResourcesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARequestBatchPlayerResourcesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARequestBatchPlayerResourcesResponse& from);
  void MergeFrom(const CMsgDOTARequestBatchPlayerResourcesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARequestBatchPlayerResourcesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARequestBatchPlayerResourcesResponse_Result Result;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result results = 6;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 6;
  ::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse_Result* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse_Result >*
      mutable_results();
  const ::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse_Result& results(int index) const;
  ::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse_Result* add_results();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse_Result >&
      results() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse_Result > results_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAPlayerFailedToConnect final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPlayerFailedToConnect) */ {
 public:
  CMsgDOTAPlayerFailedToConnect();
  virtual ~CMsgDOTAPlayerFailedToConnect();

  CMsgDOTAPlayerFailedToConnect(const CMsgDOTAPlayerFailedToConnect& from);

  inline CMsgDOTAPlayerFailedToConnect& operator=(const CMsgDOTAPlayerFailedToConnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAPlayerFailedToConnect(CMsgDOTAPlayerFailedToConnect&& from) noexcept
    : CMsgDOTAPlayerFailedToConnect() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAPlayerFailedToConnect& operator=(CMsgDOTAPlayerFailedToConnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAPlayerFailedToConnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAPlayerFailedToConnect* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPlayerFailedToConnect*>(
               &_CMsgDOTAPlayerFailedToConnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(CMsgDOTAPlayerFailedToConnect* other);
  friend void swap(CMsgDOTAPlayerFailedToConnect& a, CMsgDOTAPlayerFailedToConnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAPlayerFailedToConnect* New() const final {
    return CreateMaybeMessage<CMsgDOTAPlayerFailedToConnect>(nullptr);
  }

  CMsgDOTAPlayerFailedToConnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAPlayerFailedToConnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAPlayerFailedToConnect& from);
  void MergeFrom(const CMsgDOTAPlayerFailedToConnect& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAPlayerFailedToConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 failed_loaders = 1;
  int failed_loaders_size() const;
  void clear_failed_loaders();
  static const int kFailedLoadersFieldNumber = 1;
  ::google::protobuf::uint64 failed_loaders(int index) const;
  void set_failed_loaders(int index, ::google::protobuf::uint64 value);
  void add_failed_loaders(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      failed_loaders() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_failed_loaders();

  // repeated fixed64 abandoned_loaders = 2;
  int abandoned_loaders_size() const;
  void clear_abandoned_loaders();
  static const int kAbandonedLoadersFieldNumber = 2;
  ::google::protobuf::uint64 abandoned_loaders(int index) const;
  void set_abandoned_loaders(int index, ::google::protobuf::uint64 value);
  void add_abandoned_loaders(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      abandoned_loaders() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_abandoned_loaders();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPlayerFailedToConnect)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > failed_loaders_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > abandoned_loaders_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToRelayConnect final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToRelayConnect) */ {
 public:
  CMsgGCToRelayConnect();
  virtual ~CMsgGCToRelayConnect();

  CMsgGCToRelayConnect(const CMsgGCToRelayConnect& from);

  inline CMsgGCToRelayConnect& operator=(const CMsgGCToRelayConnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToRelayConnect(CMsgGCToRelayConnect&& from) noexcept
    : CMsgGCToRelayConnect() {
    *this = ::std::move(from);
  }

  inline CMsgGCToRelayConnect& operator=(CMsgGCToRelayConnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToRelayConnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToRelayConnect* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToRelayConnect*>(
               &_CMsgGCToRelayConnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(CMsgGCToRelayConnect* other);
  friend void swap(CMsgGCToRelayConnect& a, CMsgGCToRelayConnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToRelayConnect* New() const final {
    return CreateMaybeMessage<CMsgGCToRelayConnect>(nullptr);
  }

  CMsgGCToRelayConnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToRelayConnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToRelayConnect& from);
  void MergeFrom(const CMsgGCToRelayConnect& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToRelayConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 source_tv_public_addr = 1;
  bool has_source_tv_public_addr() const;
  void clear_source_tv_public_addr();
  static const int kSourceTvPublicAddrFieldNumber = 1;
  ::google::protobuf::uint32 source_tv_public_addr() const;
  void set_source_tv_public_addr(::google::protobuf::uint32 value);

  // optional uint32 source_tv_private_addr = 2;
  bool has_source_tv_private_addr() const;
  void clear_source_tv_private_addr();
  static const int kSourceTvPrivateAddrFieldNumber = 2;
  ::google::protobuf::uint32 source_tv_private_addr() const;
  void set_source_tv_private_addr(::google::protobuf::uint32 value);

  // optional uint64 game_server_steam_id = 4;
  bool has_game_server_steam_id() const;
  void clear_game_server_steam_id();
  static const int kGameServerSteamIdFieldNumber = 4;
  ::google::protobuf::uint64 game_server_steam_id() const;
  void set_game_server_steam_id(::google::protobuf::uint64 value);

  // optional uint32 source_tv_port = 3;
  bool has_source_tv_port() const;
  void clear_source_tv_port();
  static const int kSourceTvPortFieldNumber = 3;
  ::google::protobuf::uint32 source_tv_port() const;
  void set_source_tv_port(::google::protobuf::uint32 value);

  // optional uint32 parent_count = 5;
  bool has_parent_count() const;
  void clear_parent_count();
  static const int kParentCountFieldNumber = 5;
  ::google::protobuf::uint32 parent_count() const;
  void set_parent_count(::google::protobuf::uint32 value);

  // optional fixed64 tv_unique_secret_code = 6;
  bool has_tv_unique_secret_code() const;
  void clear_tv_unique_secret_code();
  static const int kTvUniqueSecretCodeFieldNumber = 6;
  ::google::protobuf::uint64 tv_unique_secret_code() const;
  void set_tv_unique_secret_code(::google::protobuf::uint64 value);

  // optional fixed64 source_tv_steamid = 7;
  bool has_source_tv_steamid() const;
  void clear_source_tv_steamid();
  static const int kSourceTvSteamidFieldNumber = 7;
  ::google::protobuf::uint64 source_tv_steamid() const;
  void set_source_tv_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToRelayConnect)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 source_tv_public_addr_;
  ::google::protobuf::uint32 source_tv_private_addr_;
  ::google::protobuf::uint64 game_server_steam_id_;
  ::google::protobuf::uint32 source_tv_port_;
  ::google::protobuf::uint32 parent_count_;
  ::google::protobuf::uint64 tv_unique_secret_code_;
  ::google::protobuf::uint64 source_tv_steamid_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCGCToLANServerRelayConnect final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGCToLANServerRelayConnect) */ {
 public:
  CMsgGCGCToLANServerRelayConnect();
  virtual ~CMsgGCGCToLANServerRelayConnect();

  CMsgGCGCToLANServerRelayConnect(const CMsgGCGCToLANServerRelayConnect& from);

  inline CMsgGCGCToLANServerRelayConnect& operator=(const CMsgGCGCToLANServerRelayConnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCGCToLANServerRelayConnect(CMsgGCGCToLANServerRelayConnect&& from) noexcept
    : CMsgGCGCToLANServerRelayConnect() {
    *this = ::std::move(from);
  }

  inline CMsgGCGCToLANServerRelayConnect& operator=(CMsgGCGCToLANServerRelayConnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCGCToLANServerRelayConnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCGCToLANServerRelayConnect* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGCToLANServerRelayConnect*>(
               &_CMsgGCGCToLANServerRelayConnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(CMsgGCGCToLANServerRelayConnect* other);
  friend void swap(CMsgGCGCToLANServerRelayConnect& a, CMsgGCGCToLANServerRelayConnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCGCToLANServerRelayConnect* New() const final {
    return CreateMaybeMessage<CMsgGCGCToLANServerRelayConnect>(nullptr);
  }

  CMsgGCGCToLANServerRelayConnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCGCToLANServerRelayConnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCGCToLANServerRelayConnect& from);
  void MergeFrom(const CMsgGCGCToLANServerRelayConnect& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGCToLANServerRelayConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 relay_steamid = 1;
  bool has_relay_steamid() const;
  void clear_relay_steamid();
  static const int kRelaySteamidFieldNumber = 1;
  ::google::protobuf::uint64 relay_steamid() const;
  void set_relay_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGCToLANServerRelayConnect)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 relay_steamid_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToRelayConnectResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToRelayConnectResponse) */ {
 public:
  CMsgGCToRelayConnectResponse();
  virtual ~CMsgGCToRelayConnectResponse();

  CMsgGCToRelayConnectResponse(const CMsgGCToRelayConnectResponse& from);

  inline CMsgGCToRelayConnectResponse& operator=(const CMsgGCToRelayConnectResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToRelayConnectResponse(CMsgGCToRelayConnectResponse&& from) noexcept
    : CMsgGCToRelayConnectResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToRelayConnectResponse& operator=(CMsgGCToRelayConnectResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToRelayConnectResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToRelayConnectResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToRelayConnectResponse*>(
               &_CMsgGCToRelayConnectResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(CMsgGCToRelayConnectResponse* other);
  friend void swap(CMsgGCToRelayConnectResponse& a, CMsgGCToRelayConnectResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToRelayConnectResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToRelayConnectResponse>(nullptr);
  }

  CMsgGCToRelayConnectResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToRelayConnectResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToRelayConnectResponse& from);
  void MergeFrom(const CMsgGCToRelayConnectResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToRelayConnectResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToRelayConnectResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCBanStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCBanStatusRequest) */ {
 public:
  CMsgGCBanStatusRequest();
  virtual ~CMsgGCBanStatusRequest();

  CMsgGCBanStatusRequest(const CMsgGCBanStatusRequest& from);

  inline CMsgGCBanStatusRequest& operator=(const CMsgGCBanStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCBanStatusRequest(CMsgGCBanStatusRequest&& from) noexcept
    : CMsgGCBanStatusRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCBanStatusRequest& operator=(CMsgGCBanStatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCBanStatusRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCBanStatusRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCBanStatusRequest*>(
               &_CMsgGCBanStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(CMsgGCBanStatusRequest* other);
  friend void swap(CMsgGCBanStatusRequest& a, CMsgGCBanStatusRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCBanStatusRequest* New() const final {
    return CreateMaybeMessage<CMsgGCBanStatusRequest>(nullptr);
  }

  CMsgGCBanStatusRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCBanStatusRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCBanStatusRequest& from);
  void MergeFrom(const CMsgGCBanStatusRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCBanStatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCBanStatusRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCBanStatusResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCBanStatusResponse) */ {
 public:
  CMsgGCBanStatusResponse();
  virtual ~CMsgGCBanStatusResponse();

  CMsgGCBanStatusResponse(const CMsgGCBanStatusResponse& from);

  inline CMsgGCBanStatusResponse& operator=(const CMsgGCBanStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCBanStatusResponse(CMsgGCBanStatusResponse&& from) noexcept
    : CMsgGCBanStatusResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCBanStatusResponse& operator=(CMsgGCBanStatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCBanStatusResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCBanStatusResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCBanStatusResponse*>(
               &_CMsgGCBanStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(CMsgGCBanStatusResponse* other);
  friend void swap(CMsgGCBanStatusResponse& a, CMsgGCBanStatusResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCBanStatusResponse* New() const final {
    return CreateMaybeMessage<CMsgGCBanStatusResponse>(nullptr);
  }

  CMsgGCBanStatusResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCBanStatusResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCBanStatusResponse& from);
  void MergeFrom(const CMsgGCBanStatusResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCBanStatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional bool low_priority = 2;
  bool has_low_priority() const;
  void clear_low_priority();
  static const int kLowPriorityFieldNumber = 2;
  bool low_priority() const;
  void set_low_priority(bool value);

  // optional bool text_chat_banned = 3;
  bool has_text_chat_banned() const;
  void clear_text_chat_banned();
  static const int kTextChatBannedFieldNumber = 3;
  bool text_chat_banned() const;
  void set_text_chat_banned(bool value);

  // optional bool voice_chat_banned = 4;
  bool has_voice_chat_banned() const;
  void clear_voice_chat_banned();
  static const int kVoiceChatBannedFieldNumber = 4;
  bool voice_chat_banned() const;
  void set_voice_chat_banned(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCBanStatusResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 result_;
  bool low_priority_;
  bool text_chat_banned_;
  bool voice_chat_banned_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgTournamentItemEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgTournamentItemEvent) */ {
 public:
  CMsgTournamentItemEvent();
  virtual ~CMsgTournamentItemEvent();

  CMsgTournamentItemEvent(const CMsgTournamentItemEvent& from);

  inline CMsgTournamentItemEvent& operator=(const CMsgTournamentItemEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTournamentItemEvent(CMsgTournamentItemEvent&& from) noexcept
    : CMsgTournamentItemEvent() {
    *this = ::std::move(from);
  }

  inline CMsgTournamentItemEvent& operator=(CMsgTournamentItemEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgTournamentItemEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTournamentItemEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgTournamentItemEvent*>(
               &_CMsgTournamentItemEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(CMsgTournamentItemEvent* other);
  friend void swap(CMsgTournamentItemEvent& a, CMsgTournamentItemEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTournamentItemEvent* New() const final {
    return CreateMaybeMessage<CMsgTournamentItemEvent>(nullptr);
  }

  CMsgTournamentItemEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTournamentItemEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgTournamentItemEvent& from);
  void MergeFrom(const CMsgTournamentItemEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTournamentItemEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CProtoItemHeroStatue hero_statues = 12;
  int hero_statues_size() const;
  void clear_hero_statues();
  static const int kHeroStatuesFieldNumber = 12;
  ::proto::dota::CProtoItemHeroStatue* mutable_hero_statues(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CProtoItemHeroStatue >*
      mutable_hero_statues();
  const ::proto::dota::CProtoItemHeroStatue& hero_statues(int index) const;
  ::proto::dota::CProtoItemHeroStatue* add_hero_statues();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CProtoItemHeroStatue >&
      hero_statues() const;

  // optional string loot_list = 7;
  bool has_loot_list() const;
  void clear_loot_list();
  static const int kLootListFieldNumber = 7;
  const ::std::string& loot_list() const;
  void set_loot_list(const ::std::string& value);
  #if LANG_CXX11
  void set_loot_list(::std::string&& value);
  #endif
  void set_loot_list(const char* value);
  void set_loot_list(const char* value, size_t size);
  ::std::string* mutable_loot_list();
  ::std::string* release_loot_list();
  void set_allocated_loot_list(::std::string* loot_list);

  // optional fixed32 killer_account_id = 1;
  bool has_killer_account_id() const;
  void clear_killer_account_id();
  static const int kKillerAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 killer_account_id() const;
  void set_killer_account_id(::google::protobuf::uint32 value);

  // optional fixed32 victim_account_id = 2;
  bool has_victim_account_id() const;
  void clear_victim_account_id();
  static const int kVictimAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 victim_account_id() const;
  void set_victim_account_id(::google::protobuf::uint32 value);

  // optional .proto.dota.DOTA_TournamentEvents event_type = 3 [default = TE_FIRST_BLOOD];
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 3;
  ::proto::dota::DOTA_TournamentEvents event_type() const;
  void set_event_type(::proto::dota::DOTA_TournamentEvents value);

  // optional int32 tv_delay = 4;
  bool has_tv_delay() const;
  void clear_tv_delay();
  static const int kTvDelayFieldNumber = 4;
  ::google::protobuf::int32 tv_delay() const;
  void set_tv_delay(::google::protobuf::int32 value);

  // optional int32 dota_time = 5;
  bool has_dota_time() const;
  void clear_dota_time();
  static const int kDotaTimeFieldNumber = 5;
  ::google::protobuf::int32 dota_time() const;
  void set_dota_time(::google::protobuf::int32 value);

  // optional float replay_time = 6;
  bool has_replay_time() const;
  void clear_replay_time();
  static const int kReplayTimeFieldNumber = 6;
  float replay_time() const;
  void set_replay_time(float value);

  // optional uint32 event_team = 8;
  bool has_event_team() const;
  void clear_event_team();
  static const int kEventTeamFieldNumber = 8;
  ::google::protobuf::uint32 event_team() const;
  void set_event_team(::google::protobuf::uint32 value);

  // optional uint32 multi_kill_count = 9;
  bool has_multi_kill_count() const;
  void clear_multi_kill_count();
  static const int kMultiKillCountFieldNumber = 9;
  ::google::protobuf::uint32 multi_kill_count() const;
  void set_multi_kill_count(::google::protobuf::uint32 value);

  // optional uint32 winner_score = 10;
  bool has_winner_score() const;
  void clear_winner_score();
  static const int kWinnerScoreFieldNumber = 10;
  ::google::protobuf::uint32 winner_score() const;
  void set_winner_score(::google::protobuf::uint32 value);

  // optional uint32 loser_score = 11;
  bool has_loser_score() const;
  void clear_loser_score();
  static const int kLoserScoreFieldNumber = 11;
  ::google::protobuf::uint32 loser_score() const;
  void set_loser_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgTournamentItemEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CProtoItemHeroStatue > hero_statues_;
  ::google::protobuf::internal::ArenaStringPtr loot_list_;
  ::google::protobuf::uint32 killer_account_id_;
  ::google::protobuf::uint32 victim_account_id_;
  int event_type_;
  ::google::protobuf::int32 tv_delay_;
  ::google::protobuf::int32 dota_time_;
  float replay_time_;
  ::google::protobuf::uint32 event_team_;
  ::google::protobuf::uint32 multi_kill_count_;
  ::google::protobuf::uint32 winner_score_;
  ::google::protobuf::uint32 loser_score_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgTournamentItemEventResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgTournamentItemEventResponse) */ {
 public:
  CMsgTournamentItemEventResponse();
  virtual ~CMsgTournamentItemEventResponse();

  CMsgTournamentItemEventResponse(const CMsgTournamentItemEventResponse& from);

  inline CMsgTournamentItemEventResponse& operator=(const CMsgTournamentItemEventResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTournamentItemEventResponse(CMsgTournamentItemEventResponse&& from) noexcept
    : CMsgTournamentItemEventResponse() {
    *this = ::std::move(from);
  }

  inline CMsgTournamentItemEventResponse& operator=(CMsgTournamentItemEventResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgTournamentItemEventResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTournamentItemEventResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgTournamentItemEventResponse*>(
               &_CMsgTournamentItemEventResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(CMsgTournamentItemEventResponse* other);
  friend void swap(CMsgTournamentItemEventResponse& a, CMsgTournamentItemEventResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTournamentItemEventResponse* New() const final {
    return CreateMaybeMessage<CMsgTournamentItemEventResponse>(nullptr);
  }

  CMsgTournamentItemEventResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTournamentItemEventResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgTournamentItemEventResponse& from);
  void MergeFrom(const CMsgTournamentItemEventResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTournamentItemEventResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.DOTA_TournamentEvents event_type = 1 [default = TE_FIRST_BLOOD];
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  ::proto::dota::DOTA_TournamentEvents event_type() const;
  void set_event_type(::proto::dota::DOTA_TournamentEvents value);

  // optional uint32 viewers_granted = 6;
  bool has_viewers_granted() const;
  void clear_viewers_granted();
  static const int kViewersGrantedFieldNumber = 6;
  ::google::protobuf::uint32 viewers_granted() const;
  void set_viewers_granted(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgTournamentItemEventResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int event_type_;
  ::google::protobuf::uint32 viewers_granted_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgTeamFanfare final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgTeamFanfare) */ {
 public:
  CMsgTeamFanfare();
  virtual ~CMsgTeamFanfare();

  CMsgTeamFanfare(const CMsgTeamFanfare& from);

  inline CMsgTeamFanfare& operator=(const CMsgTeamFanfare& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTeamFanfare(CMsgTeamFanfare&& from) noexcept
    : CMsgTeamFanfare() {
    *this = ::std::move(from);
  }

  inline CMsgTeamFanfare& operator=(CMsgTeamFanfare&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgTeamFanfare& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTeamFanfare* internal_default_instance() {
    return reinterpret_cast<const CMsgTeamFanfare*>(
               &_CMsgTeamFanfare_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(CMsgTeamFanfare* other);
  friend void swap(CMsgTeamFanfare& a, CMsgTeamFanfare& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTeamFanfare* New() const final {
    return CreateMaybeMessage<CMsgTeamFanfare>(nullptr);
  }

  CMsgTeamFanfare* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTeamFanfare>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgTeamFanfare& from);
  void MergeFrom(const CMsgTeamFanfare& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTeamFanfare* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgTeamFanfare)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgResponseTeamFanfare final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgResponseTeamFanfare) */ {
 public:
  CMsgResponseTeamFanfare();
  virtual ~CMsgResponseTeamFanfare();

  CMsgResponseTeamFanfare(const CMsgResponseTeamFanfare& from);

  inline CMsgResponseTeamFanfare& operator=(const CMsgResponseTeamFanfare& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgResponseTeamFanfare(CMsgResponseTeamFanfare&& from) noexcept
    : CMsgResponseTeamFanfare() {
    *this = ::std::move(from);
  }

  inline CMsgResponseTeamFanfare& operator=(CMsgResponseTeamFanfare&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgResponseTeamFanfare& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgResponseTeamFanfare* internal_default_instance() {
    return reinterpret_cast<const CMsgResponseTeamFanfare*>(
               &_CMsgResponseTeamFanfare_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(CMsgResponseTeamFanfare* other);
  friend void swap(CMsgResponseTeamFanfare& a, CMsgResponseTeamFanfare& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgResponseTeamFanfare* New() const final {
    return CreateMaybeMessage<CMsgResponseTeamFanfare>(nullptr);
  }

  CMsgResponseTeamFanfare* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgResponseTeamFanfare>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgResponseTeamFanfare& from);
  void MergeFrom(const CMsgResponseTeamFanfare& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgResponseTeamFanfare* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 fanfare_goodguys = 1;
  bool has_fanfare_goodguys() const;
  void clear_fanfare_goodguys();
  static const int kFanfareGoodguysFieldNumber = 1;
  ::google::protobuf::uint32 fanfare_goodguys() const;
  void set_fanfare_goodguys(::google::protobuf::uint32 value);

  // optional uint32 fanfare_badguys = 2;
  bool has_fanfare_badguys() const;
  void clear_fanfare_badguys();
  static const int kFanfareBadguysFieldNumber = 2;
  ::google::protobuf::uint32 fanfare_badguys() const;
  void set_fanfare_badguys(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgResponseTeamFanfare)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 fanfare_goodguys_;
  ::google::protobuf::uint32 fanfare_badguys_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameServerUploadSaveGame final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameServerUploadSaveGame) */ {
 public:
  CMsgGameServerUploadSaveGame();
  virtual ~CMsgGameServerUploadSaveGame();

  CMsgGameServerUploadSaveGame(const CMsgGameServerUploadSaveGame& from);

  inline CMsgGameServerUploadSaveGame& operator=(const CMsgGameServerUploadSaveGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameServerUploadSaveGame(CMsgGameServerUploadSaveGame&& from) noexcept
    : CMsgGameServerUploadSaveGame() {
    *this = ::std::move(from);
  }

  inline CMsgGameServerUploadSaveGame& operator=(CMsgGameServerUploadSaveGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameServerUploadSaveGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameServerUploadSaveGame* internal_default_instance() {
    return reinterpret_cast<const CMsgGameServerUploadSaveGame*>(
               &_CMsgGameServerUploadSaveGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(CMsgGameServerUploadSaveGame* other);
  friend void swap(CMsgGameServerUploadSaveGame& a, CMsgGameServerUploadSaveGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameServerUploadSaveGame* New() const final {
    return CreateMaybeMessage<CMsgGameServerUploadSaveGame>(nullptr);
  }

  CMsgGameServerUploadSaveGame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameServerUploadSaveGame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameServerUploadSaveGame& from);
  void MergeFrom(const CMsgGameServerUploadSaveGame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameServerUploadSaveGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 player_steam_ids = 4;
  int player_steam_ids_size() const;
  void clear_player_steam_ids();
  static const int kPlayerSteamIdsFieldNumber = 4;
  ::google::protobuf::uint64 player_steam_ids(int index) const;
  void set_player_steam_ids(int index, ::google::protobuf::uint64 value);
  void add_player_steam_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_steam_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_steam_ids();

  // optional bytes save_game_data = 2;
  bool has_save_game_data() const;
  void clear_save_game_data();
  static const int kSaveGameDataFieldNumber = 2;
  const ::std::string& save_game_data() const;
  void set_save_game_data(const ::std::string& value);
  #if LANG_CXX11
  void set_save_game_data(::std::string&& value);
  #endif
  void set_save_game_data(const char* value);
  void set_save_game_data(const void* value, size_t size);
  ::std::string* mutable_save_game_data();
  ::std::string* release_save_game_data();
  void set_allocated_save_game_data(::std::string* save_game_data);

  // optional uint64 lobby_id = 3;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 3;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint32 game_time = 1;
  bool has_game_time() const;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 1;
  ::google::protobuf::uint32 game_time() const;
  void set_game_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameServerUploadSaveGame)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_steam_ids_;
  ::google::protobuf::internal::ArenaStringPtr save_game_data_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint32 game_time_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameServerSaveGameResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameServerSaveGameResult) */ {
 public:
  CMsgGameServerSaveGameResult();
  virtual ~CMsgGameServerSaveGameResult();

  CMsgGameServerSaveGameResult(const CMsgGameServerSaveGameResult& from);

  inline CMsgGameServerSaveGameResult& operator=(const CMsgGameServerSaveGameResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameServerSaveGameResult(CMsgGameServerSaveGameResult&& from) noexcept
    : CMsgGameServerSaveGameResult() {
    *this = ::std::move(from);
  }

  inline CMsgGameServerSaveGameResult& operator=(CMsgGameServerSaveGameResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameServerSaveGameResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameServerSaveGameResult* internal_default_instance() {
    return reinterpret_cast<const CMsgGameServerSaveGameResult*>(
               &_CMsgGameServerSaveGameResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(CMsgGameServerSaveGameResult* other);
  friend void swap(CMsgGameServerSaveGameResult& a, CMsgGameServerSaveGameResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameServerSaveGameResult* New() const final {
    return CreateMaybeMessage<CMsgGameServerSaveGameResult>(nullptr);
  }

  CMsgGameServerSaveGameResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameServerSaveGameResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameServerSaveGameResult& from);
  void MergeFrom(const CMsgGameServerSaveGameResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameServerSaveGameResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGameServerSaveGameResult_Result Result;
  static const Result SaveSuccessful =
    CMsgGameServerSaveGameResult_Result_SaveSuccessful;
  static const Result SessionNotFound =
    CMsgGameServerSaveGameResult_Result_SessionNotFound;
  static const Result DatabaseError =
    CMsgGameServerSaveGameResult_Result_DatabaseError;
  static const Result TooBig =
    CMsgGameServerSaveGameResult_Result_TooBig;
  static inline bool Result_IsValid(int value) {
    return CMsgGameServerSaveGameResult_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgGameServerSaveGameResult_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgGameServerSaveGameResult_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgGameServerSaveGameResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgGameServerSaveGameResult_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgGameServerSaveGameResult_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgGameServerSaveGameResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgGameServerSaveGameResult.Result result = 1 [default = SaveSuccessful];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgGameServerSaveGameResult_Result result() const;
  void set_result(::proto::dota::CMsgGameServerSaveGameResult_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameServerSaveGameResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameServerGetLoadGame final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameServerGetLoadGame) */ {
 public:
  CMsgGameServerGetLoadGame();
  virtual ~CMsgGameServerGetLoadGame();

  CMsgGameServerGetLoadGame(const CMsgGameServerGetLoadGame& from);

  inline CMsgGameServerGetLoadGame& operator=(const CMsgGameServerGetLoadGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameServerGetLoadGame(CMsgGameServerGetLoadGame&& from) noexcept
    : CMsgGameServerGetLoadGame() {
    *this = ::std::move(from);
  }

  inline CMsgGameServerGetLoadGame& operator=(CMsgGameServerGetLoadGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameServerGetLoadGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameServerGetLoadGame* internal_default_instance() {
    return reinterpret_cast<const CMsgGameServerGetLoadGame*>(
               &_CMsgGameServerGetLoadGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(CMsgGameServerGetLoadGame* other);
  friend void swap(CMsgGameServerGetLoadGame& a, CMsgGameServerGetLoadGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameServerGetLoadGame* New() const final {
    return CreateMaybeMessage<CMsgGameServerGetLoadGame>(nullptr);
  }

  CMsgGameServerGetLoadGame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameServerGetLoadGame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameServerGetLoadGame& from);
  void MergeFrom(const CMsgGameServerGetLoadGame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameServerGetLoadGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 save_id = 1;
  bool has_save_id() const;
  void clear_save_id();
  static const int kSaveIdFieldNumber = 1;
  ::google::protobuf::uint32 save_id() const;
  void set_save_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameServerGetLoadGame)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 save_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGameServerGetLoadGameResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGameServerGetLoadGameResult) */ {
 public:
  CMsgGameServerGetLoadGameResult();
  virtual ~CMsgGameServerGetLoadGameResult();

  CMsgGameServerGetLoadGameResult(const CMsgGameServerGetLoadGameResult& from);

  inline CMsgGameServerGetLoadGameResult& operator=(const CMsgGameServerGetLoadGameResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameServerGetLoadGameResult(CMsgGameServerGetLoadGameResult&& from) noexcept
    : CMsgGameServerGetLoadGameResult() {
    *this = ::std::move(from);
  }

  inline CMsgGameServerGetLoadGameResult& operator=(CMsgGameServerGetLoadGameResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGameServerGetLoadGameResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameServerGetLoadGameResult* internal_default_instance() {
    return reinterpret_cast<const CMsgGameServerGetLoadGameResult*>(
               &_CMsgGameServerGetLoadGameResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(CMsgGameServerGetLoadGameResult* other);
  friend void swap(CMsgGameServerGetLoadGameResult& a, CMsgGameServerGetLoadGameResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameServerGetLoadGameResult* New() const final {
    return CreateMaybeMessage<CMsgGameServerGetLoadGameResult>(nullptr);
  }

  CMsgGameServerGetLoadGameResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGameServerGetLoadGameResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGameServerGetLoadGameResult& from);
  void MergeFrom(const CMsgGameServerGetLoadGameResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGameServerGetLoadGameResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes save_game_data = 1;
  bool has_save_game_data() const;
  void clear_save_game_data();
  static const int kSaveGameDataFieldNumber = 1;
  const ::std::string& save_game_data() const;
  void set_save_game_data(const ::std::string& value);
  #if LANG_CXX11
  void set_save_game_data(::std::string&& value);
  #endif
  void set_save_game_data(const char* value);
  void set_save_game_data(const void* value, size_t size);
  ::std::string* mutable_save_game_data();
  ::std::string* release_save_game_data();
  void set_allocated_save_game_data(::std::string* save_game_data);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGameServerGetLoadGameResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr save_game_data_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGenerateDiretidePrizeList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGenerateDiretidePrizeList) */ {
 public:
  CMsgDOTAGenerateDiretidePrizeList();
  virtual ~CMsgDOTAGenerateDiretidePrizeList();

  CMsgDOTAGenerateDiretidePrizeList(const CMsgDOTAGenerateDiretidePrizeList& from);

  inline CMsgDOTAGenerateDiretidePrizeList& operator=(const CMsgDOTAGenerateDiretidePrizeList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGenerateDiretidePrizeList(CMsgDOTAGenerateDiretidePrizeList&& from) noexcept
    : CMsgDOTAGenerateDiretidePrizeList() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGenerateDiretidePrizeList& operator=(CMsgDOTAGenerateDiretidePrizeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGenerateDiretidePrizeList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGenerateDiretidePrizeList* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGenerateDiretidePrizeList*>(
               &_CMsgDOTAGenerateDiretidePrizeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(CMsgDOTAGenerateDiretidePrizeList* other);
  friend void swap(CMsgDOTAGenerateDiretidePrizeList& a, CMsgDOTAGenerateDiretidePrizeList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGenerateDiretidePrizeList* New() const final {
    return CreateMaybeMessage<CMsgDOTAGenerateDiretidePrizeList>(nullptr);
  }

  CMsgDOTAGenerateDiretidePrizeList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGenerateDiretidePrizeList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGenerateDiretidePrizeList& from);
  void MergeFrom(const CMsgDOTAGenerateDiretidePrizeList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGenerateDiretidePrizeList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prize_list = 1;
  bool has_prize_list() const;
  void clear_prize_list();
  static const int kPrizeListFieldNumber = 1;
  ::google::protobuf::uint32 prize_list() const;
  void set_prize_list(::google::protobuf::uint32 value);

  // optional uint32 highest_roshan_level = 2;
  bool has_highest_roshan_level() const;
  void clear_highest_roshan_level();
  static const int kHighestRoshanLevelFieldNumber = 2;
  ::google::protobuf::uint32 highest_roshan_level() const;
  void set_highest_roshan_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGenerateDiretidePrizeList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 prize_list_;
  ::google::protobuf::uint32 highest_roshan_level_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAGenerateDiretidePrizeListResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse) */ {
 public:
  CMsgDOTAGenerateDiretidePrizeListResponse();
  virtual ~CMsgDOTAGenerateDiretidePrizeListResponse();

  CMsgDOTAGenerateDiretidePrizeListResponse(const CMsgDOTAGenerateDiretidePrizeListResponse& from);

  inline CMsgDOTAGenerateDiretidePrizeListResponse& operator=(const CMsgDOTAGenerateDiretidePrizeListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAGenerateDiretidePrizeListResponse(CMsgDOTAGenerateDiretidePrizeListResponse&& from) noexcept
    : CMsgDOTAGenerateDiretidePrizeListResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAGenerateDiretidePrizeListResponse& operator=(CMsgDOTAGenerateDiretidePrizeListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAGenerateDiretidePrizeListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAGenerateDiretidePrizeListResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGenerateDiretidePrizeListResponse*>(
               &_CMsgDOTAGenerateDiretidePrizeListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(CMsgDOTAGenerateDiretidePrizeListResponse* other);
  friend void swap(CMsgDOTAGenerateDiretidePrizeListResponse& a, CMsgDOTAGenerateDiretidePrizeListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAGenerateDiretidePrizeListResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTAGenerateDiretidePrizeListResponse>(nullptr);
  }

  CMsgDOTAGenerateDiretidePrizeListResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAGenerateDiretidePrizeListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAGenerateDiretidePrizeListResponse& from);
  void MergeFrom(const CMsgDOTAGenerateDiretidePrizeListResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAGenerateDiretidePrizeListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 item_defs = 1;
  int item_defs_size() const;
  void clear_item_defs();
  static const int kItemDefsFieldNumber = 1;
  ::google::protobuf::uint32 item_defs(int index) const;
  void set_item_defs(int index, ::google::protobuf::uint32 value);
  void add_item_defs(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      item_defs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_item_defs();

  // repeated fixed64 steam_ids = 2;
  int steam_ids_size() const;
  void clear_steam_ids();
  static const int kSteamIdsFieldNumber = 2;
  ::google::protobuf::uint64 steam_ids(int index) const;
  void set_steam_ids(int index, ::google::protobuf::uint64 value);
  void add_steam_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steam_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steam_ids();

  // optional uint32 prize_list = 3;
  bool has_prize_list() const;
  void clear_prize_list();
  static const int kPrizeListFieldNumber = 3;
  ::google::protobuf::uint32 prize_list() const;
  void set_prize_list(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > item_defs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steam_ids_;
  ::google::protobuf::uint32 prize_list_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTARewardDiretidePrizes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARewardDiretidePrizes) */ {
 public:
  CMsgDOTARewardDiretidePrizes();
  virtual ~CMsgDOTARewardDiretidePrizes();

  CMsgDOTARewardDiretidePrizes(const CMsgDOTARewardDiretidePrizes& from);

  inline CMsgDOTARewardDiretidePrizes& operator=(const CMsgDOTARewardDiretidePrizes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTARewardDiretidePrizes(CMsgDOTARewardDiretidePrizes&& from) noexcept
    : CMsgDOTARewardDiretidePrizes() {
    *this = ::std::move(from);
  }

  inline CMsgDOTARewardDiretidePrizes& operator=(CMsgDOTARewardDiretidePrizes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTARewardDiretidePrizes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTARewardDiretidePrizes* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARewardDiretidePrizes*>(
               &_CMsgDOTARewardDiretidePrizes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(CMsgDOTARewardDiretidePrizes* other);
  friend void swap(CMsgDOTARewardDiretidePrizes& a, CMsgDOTARewardDiretidePrizes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTARewardDiretidePrizes* New() const final {
    return CreateMaybeMessage<CMsgDOTARewardDiretidePrizes>(nullptr);
  }

  CMsgDOTARewardDiretidePrizes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTARewardDiretidePrizes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTARewardDiretidePrizes& from);
  void MergeFrom(const CMsgDOTARewardDiretidePrizes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTARewardDiretidePrizes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team = 1;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 1;
  ::google::protobuf::uint32 team() const;
  void set_team(::google::protobuf::uint32 value);

  // optional uint32 prize_list = 2;
  bool has_prize_list() const;
  void clear_prize_list();
  static const int kPrizeListFieldNumber = 2;
  ::google::protobuf::uint32 prize_list() const;
  void set_prize_list(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARewardDiretidePrizes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 prize_list_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTADiretidePrizesRewardedResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTADiretidePrizesRewardedResponse) */ {
 public:
  CMsgDOTADiretidePrizesRewardedResponse();
  virtual ~CMsgDOTADiretidePrizesRewardedResponse();

  CMsgDOTADiretidePrizesRewardedResponse(const CMsgDOTADiretidePrizesRewardedResponse& from);

  inline CMsgDOTADiretidePrizesRewardedResponse& operator=(const CMsgDOTADiretidePrizesRewardedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTADiretidePrizesRewardedResponse(CMsgDOTADiretidePrizesRewardedResponse&& from) noexcept
    : CMsgDOTADiretidePrizesRewardedResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDOTADiretidePrizesRewardedResponse& operator=(CMsgDOTADiretidePrizesRewardedResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTADiretidePrizesRewardedResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTADiretidePrizesRewardedResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTADiretidePrizesRewardedResponse*>(
               &_CMsgDOTADiretidePrizesRewardedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(CMsgDOTADiretidePrizesRewardedResponse* other);
  friend void swap(CMsgDOTADiretidePrizesRewardedResponse& a, CMsgDOTADiretidePrizesRewardedResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTADiretidePrizesRewardedResponse* New() const final {
    return CreateMaybeMessage<CMsgDOTADiretidePrizesRewardedResponse>(nullptr);
  }

  CMsgDOTADiretidePrizesRewardedResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTADiretidePrizesRewardedResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTADiretidePrizesRewardedResponse& from);
  void MergeFrom(const CMsgDOTADiretidePrizesRewardedResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTADiretidePrizesRewardedResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prize_list = 1;
  bool has_prize_list() const;
  void clear_prize_list();
  static const int kPrizeListFieldNumber = 1;
  ::google::protobuf::uint32 prize_list() const;
  void set_prize_list(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTADiretidePrizesRewardedResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 prize_list_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAAwardEventPoints_AwardPoints final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAAwardEventPoints.AwardPoints) */ {
 public:
  CMsgDOTAAwardEventPoints_AwardPoints();
  virtual ~CMsgDOTAAwardEventPoints_AwardPoints();

  CMsgDOTAAwardEventPoints_AwardPoints(const CMsgDOTAAwardEventPoints_AwardPoints& from);

  inline CMsgDOTAAwardEventPoints_AwardPoints& operator=(const CMsgDOTAAwardEventPoints_AwardPoints& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAAwardEventPoints_AwardPoints(CMsgDOTAAwardEventPoints_AwardPoints&& from) noexcept
    : CMsgDOTAAwardEventPoints_AwardPoints() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAAwardEventPoints_AwardPoints& operator=(CMsgDOTAAwardEventPoints_AwardPoints&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAAwardEventPoints_AwardPoints& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAAwardEventPoints_AwardPoints* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAAwardEventPoints_AwardPoints*>(
               &_CMsgDOTAAwardEventPoints_AwardPoints_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(CMsgDOTAAwardEventPoints_AwardPoints* other);
  friend void swap(CMsgDOTAAwardEventPoints_AwardPoints& a, CMsgDOTAAwardEventPoints_AwardPoints& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAAwardEventPoints_AwardPoints* New() const final {
    return CreateMaybeMessage<CMsgDOTAAwardEventPoints_AwardPoints>(nullptr);
  }

  CMsgDOTAAwardEventPoints_AwardPoints* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAAwardEventPoints_AwardPoints>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAAwardEventPoints_AwardPoints& from);
  void MergeFrom(const CMsgDOTAAwardEventPoints_AwardPoints& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAAwardEventPoints_AwardPoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional int32 points = 2;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 2;
  ::google::protobuf::int32 points() const;
  void set_points(::google::protobuf::int32 value);

  // optional int32 premium_points = 3;
  bool has_premium_points() const;
  void clear_premium_points();
  static const int kPremiumPointsFieldNumber = 3;
  ::google::protobuf::int32 premium_points() const;
  void set_premium_points(::google::protobuf::int32 value);

  // optional uint32 trade_ban_time = 5;
  bool has_trade_ban_time() const;
  void clear_trade_ban_time();
  static const int kTradeBanTimeFieldNumber = 5;
  ::google::protobuf::uint32 trade_ban_time() const;
  void set_trade_ban_time(::google::protobuf::uint32 value);

  // optional bool eligible_for_periodic_adjustment = 6 [default = false];
  bool has_eligible_for_periodic_adjustment() const;
  void clear_eligible_for_periodic_adjustment();
  static const int kEligibleForPeriodicAdjustmentFieldNumber = 6;
  bool eligible_for_periodic_adjustment() const;
  void set_eligible_for_periodic_adjustment(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAAwardEventPoints.AwardPoints)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::int32 points_;
  ::google::protobuf::int32 premium_points_;
  ::google::protobuf::uint32 trade_ban_time_;
  bool eligible_for_periodic_adjustment_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAAwardEventPoints final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAAwardEventPoints) */ {
 public:
  CMsgDOTAAwardEventPoints();
  virtual ~CMsgDOTAAwardEventPoints();

  CMsgDOTAAwardEventPoints(const CMsgDOTAAwardEventPoints& from);

  inline CMsgDOTAAwardEventPoints& operator=(const CMsgDOTAAwardEventPoints& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAAwardEventPoints(CMsgDOTAAwardEventPoints&& from) noexcept
    : CMsgDOTAAwardEventPoints() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAAwardEventPoints& operator=(CMsgDOTAAwardEventPoints&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAAwardEventPoints& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAAwardEventPoints* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAAwardEventPoints*>(
               &_CMsgDOTAAwardEventPoints_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(CMsgDOTAAwardEventPoints* other);
  friend void swap(CMsgDOTAAwardEventPoints& a, CMsgDOTAAwardEventPoints& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAAwardEventPoints* New() const final {
    return CreateMaybeMessage<CMsgDOTAAwardEventPoints>(nullptr);
  }

  CMsgDOTAAwardEventPoints* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAAwardEventPoints>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAAwardEventPoints& from);
  void MergeFrom(const CMsgDOTAAwardEventPoints& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAAwardEventPoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAAwardEventPoints_AwardPoints AwardPoints;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAAwardEventPoints.AwardPoints award_points = 1;
  int award_points_size() const;
  void clear_award_points();
  static const int kAwardPointsFieldNumber = 1;
  ::proto::dota::CMsgDOTAAwardEventPoints_AwardPoints* mutable_award_points(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAAwardEventPoints_AwardPoints >*
      mutable_award_points();
  const ::proto::dota::CMsgDOTAAwardEventPoints_AwardPoints& award_points(int index) const;
  ::proto::dota::CMsgDOTAAwardEventPoints_AwardPoints* add_award_points();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAAwardEventPoints_AwardPoints >&
      award_points() const;

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional .proto.dota.EEvent event_id = 4 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 4;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 timestamp = 5;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 audit_action = 6;
  bool has_audit_action() const;
  void clear_audit_action();
  static const int kAuditActionFieldNumber = 6;
  ::google::protobuf::uint32 audit_action() const;
  void set_audit_action(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAAwardEventPoints)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAAwardEventPoints_AwardPoints > award_points_;
  ::google::protobuf::uint64 match_id_;
  int event_id_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 audit_action_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops) */ {
 public:
  CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops();
  virtual ~CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops();

  CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops(const CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& from);

  inline CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& operator=(const CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops(CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops&& from) noexcept
    : CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& operator=(CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops*>(
               &_CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* other);
  friend void swap(CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& a, CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* New() const final {
    return CreateMaybeMessage<CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops>(nullptr);
  }

  CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& from);
  void MergeFrom(const CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 player_account_ids = 2;
  int player_account_ids_size() const;
  void clear_player_account_ids();
  static const int kPlayerAccountIdsFieldNumber = 2;
  ::google::protobuf::uint32 player_account_ids(int index) const;
  void set_player_account_ids(int index, ::google::protobuf::uint32 value);
  void add_player_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      player_account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_player_account_ids();

  // optional string loot_list = 1;
  bool has_loot_list() const;
  void clear_loot_list();
  static const int kLootListFieldNumber = 1;
  const ::std::string& loot_list() const;
  void set_loot_list(const ::std::string& value);
  #if LANG_CXX11
  void set_loot_list(::std::string&& value);
  #endif
  void set_loot_list(const char* value);
  void set_loot_list(const char* value, size_t size);
  ::std::string* mutable_loot_list();
  ::std::string* release_loot_list();
  void set_allocated_loot_list(::std::string* loot_list);

  // optional bool no_trade = 3;
  bool has_no_trade() const;
  void clear_no_trade();
  static const int kNoTradeFieldNumber = 3;
  bool no_trade() const;
  void set_no_trade(bool value);

  // optional bool randomize_reward = 4;
  bool has_randomize_reward() const;
  void clear_randomize_reward();
  static const int kRandomizeRewardFieldNumber = 4;
  bool randomize_reward() const;
  void set_randomize_reward(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > player_account_ids_;
  ::google::protobuf::internal::ArenaStringPtr loot_list_;
  bool no_trade_;
  bool randomize_reward_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCSignoutAwardAdditionalDrops final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops) */ {
 public:
  CMsgServerToGCSignoutAwardAdditionalDrops();
  virtual ~CMsgServerToGCSignoutAwardAdditionalDrops();

  CMsgServerToGCSignoutAwardAdditionalDrops(const CMsgServerToGCSignoutAwardAdditionalDrops& from);

  inline CMsgServerToGCSignoutAwardAdditionalDrops& operator=(const CMsgServerToGCSignoutAwardAdditionalDrops& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCSignoutAwardAdditionalDrops(CMsgServerToGCSignoutAwardAdditionalDrops&& from) noexcept
    : CMsgServerToGCSignoutAwardAdditionalDrops() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCSignoutAwardAdditionalDrops& operator=(CMsgServerToGCSignoutAwardAdditionalDrops&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCSignoutAwardAdditionalDrops& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCSignoutAwardAdditionalDrops* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCSignoutAwardAdditionalDrops*>(
               &_CMsgServerToGCSignoutAwardAdditionalDrops_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(CMsgServerToGCSignoutAwardAdditionalDrops* other);
  friend void swap(CMsgServerToGCSignoutAwardAdditionalDrops& a, CMsgServerToGCSignoutAwardAdditionalDrops& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCSignoutAwardAdditionalDrops* New() const final {
    return CreateMaybeMessage<CMsgServerToGCSignoutAwardAdditionalDrops>(nullptr);
  }

  CMsgServerToGCSignoutAwardAdditionalDrops* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCSignoutAwardAdditionalDrops>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCSignoutAwardAdditionalDrops& from);
  void MergeFrom(const CMsgServerToGCSignoutAwardAdditionalDrops& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCSignoutAwardAdditionalDrops* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops AdditionalDrops;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops drops = 1;
  int drops_size() const;
  void clear_drops();
  static const int kDropsFieldNumber = 1;
  ::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* mutable_drops(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops >*
      mutable_drops();
  const ::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& drops(int index) const;
  ::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* add_drops();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops >&
      drops() const;

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops > drops_;
  ::google::protobuf::uint64 match_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAFrostivusTimeElapsed_User final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFrostivusTimeElapsed.User) */ {
 public:
  CMsgDOTAFrostivusTimeElapsed_User();
  virtual ~CMsgDOTAFrostivusTimeElapsed_User();

  CMsgDOTAFrostivusTimeElapsed_User(const CMsgDOTAFrostivusTimeElapsed_User& from);

  inline CMsgDOTAFrostivusTimeElapsed_User& operator=(const CMsgDOTAFrostivusTimeElapsed_User& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAFrostivusTimeElapsed_User(CMsgDOTAFrostivusTimeElapsed_User&& from) noexcept
    : CMsgDOTAFrostivusTimeElapsed_User() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAFrostivusTimeElapsed_User& operator=(CMsgDOTAFrostivusTimeElapsed_User&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAFrostivusTimeElapsed_User& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAFrostivusTimeElapsed_User* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFrostivusTimeElapsed_User*>(
               &_CMsgDOTAFrostivusTimeElapsed_User_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(CMsgDOTAFrostivusTimeElapsed_User* other);
  friend void swap(CMsgDOTAFrostivusTimeElapsed_User& a, CMsgDOTAFrostivusTimeElapsed_User& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAFrostivusTimeElapsed_User* New() const final {
    return CreateMaybeMessage<CMsgDOTAFrostivusTimeElapsed_User>(nullptr);
  }

  CMsgDOTAFrostivusTimeElapsed_User* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAFrostivusTimeElapsed_User>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAFrostivusTimeElapsed_User& from);
  void MergeFrom(const CMsgDOTAFrostivusTimeElapsed_User& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAFrostivusTimeElapsed_User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 time_elapsed_s = 2;
  bool has_time_elapsed_s() const;
  void clear_time_elapsed_s();
  static const int kTimeElapsedSFieldNumber = 2;
  ::google::protobuf::uint32 time_elapsed_s() const;
  void set_time_elapsed_s(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFrostivusTimeElapsed.User)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 time_elapsed_s_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgDOTAFrostivusTimeElapsed final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFrostivusTimeElapsed) */ {
 public:
  CMsgDOTAFrostivusTimeElapsed();
  virtual ~CMsgDOTAFrostivusTimeElapsed();

  CMsgDOTAFrostivusTimeElapsed(const CMsgDOTAFrostivusTimeElapsed& from);

  inline CMsgDOTAFrostivusTimeElapsed& operator=(const CMsgDOTAFrostivusTimeElapsed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgDOTAFrostivusTimeElapsed(CMsgDOTAFrostivusTimeElapsed&& from) noexcept
    : CMsgDOTAFrostivusTimeElapsed() {
    *this = ::std::move(from);
  }

  inline CMsgDOTAFrostivusTimeElapsed& operator=(CMsgDOTAFrostivusTimeElapsed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgDOTAFrostivusTimeElapsed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgDOTAFrostivusTimeElapsed* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFrostivusTimeElapsed*>(
               &_CMsgDOTAFrostivusTimeElapsed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(CMsgDOTAFrostivusTimeElapsed* other);
  friend void swap(CMsgDOTAFrostivusTimeElapsed& a, CMsgDOTAFrostivusTimeElapsed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgDOTAFrostivusTimeElapsed* New() const final {
    return CreateMaybeMessage<CMsgDOTAFrostivusTimeElapsed>(nullptr);
  }

  CMsgDOTAFrostivusTimeElapsed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDOTAFrostivusTimeElapsed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgDOTAFrostivusTimeElapsed& from);
  void MergeFrom(const CMsgDOTAFrostivusTimeElapsed& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDOTAFrostivusTimeElapsed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAFrostivusTimeElapsed_User User;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAFrostivusTimeElapsed.User users = 2;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 2;
  ::proto::dota::CMsgDOTAFrostivusTimeElapsed_User* mutable_users(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFrostivusTimeElapsed_User >*
      mutable_users();
  const ::proto::dota::CMsgDOTAFrostivusTimeElapsed_User& users(int index) const;
  ::proto::dota::CMsgDOTAFrostivusTimeElapsed_User* add_users();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFrostivusTimeElapsed_User >&
      users() const;

  // optional uint64 match_id = 3;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 3;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 seconds = 1;
  bool has_seconds() const;
  void clear_seconds();
  static const int kSecondsFieldNumber = 1;
  ::google::protobuf::uint32 seconds() const;
  void set_seconds(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFrostivusTimeElapsed)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFrostivusTimeElapsed_User > users_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 seconds_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToServerPingRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToServerPingRequest) */ {
 public:
  CMsgGCToServerPingRequest();
  virtual ~CMsgGCToServerPingRequest();

  CMsgGCToServerPingRequest(const CMsgGCToServerPingRequest& from);

  inline CMsgGCToServerPingRequest& operator=(const CMsgGCToServerPingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToServerPingRequest(CMsgGCToServerPingRequest&& from) noexcept
    : CMsgGCToServerPingRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCToServerPingRequest& operator=(CMsgGCToServerPingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToServerPingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToServerPingRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToServerPingRequest*>(
               &_CMsgGCToServerPingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(CMsgGCToServerPingRequest* other);
  friend void swap(CMsgGCToServerPingRequest& a, CMsgGCToServerPingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToServerPingRequest* New() const final {
    return CreateMaybeMessage<CMsgGCToServerPingRequest>(nullptr);
  }

  CMsgGCToServerPingRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToServerPingRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToServerPingRequest& from);
  void MergeFrom(const CMsgGCToServerPingRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToServerPingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 request_id = 1;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // optional uint64 request_time = 2;
  bool has_request_time() const;
  void clear_request_time();
  static const int kRequestTimeFieldNumber = 2;
  ::google::protobuf::uint64 request_time() const;
  void set_request_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToServerPingRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::uint64 request_time_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToServerPingResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToServerPingResponse) */ {
 public:
  CMsgGCToServerPingResponse();
  virtual ~CMsgGCToServerPingResponse();

  CMsgGCToServerPingResponse(const CMsgGCToServerPingResponse& from);

  inline CMsgGCToServerPingResponse& operator=(const CMsgGCToServerPingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToServerPingResponse(CMsgGCToServerPingResponse&& from) noexcept
    : CMsgGCToServerPingResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToServerPingResponse& operator=(CMsgGCToServerPingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToServerPingResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToServerPingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToServerPingResponse*>(
               &_CMsgGCToServerPingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(CMsgGCToServerPingResponse* other);
  friend void swap(CMsgGCToServerPingResponse& a, CMsgGCToServerPingResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToServerPingResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToServerPingResponse>(nullptr);
  }

  CMsgGCToServerPingResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToServerPingResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToServerPingResponse& from);
  void MergeFrom(const CMsgGCToServerPingResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToServerPingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 request_id = 1;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // optional uint64 request_time = 2;
  bool has_request_time() const;
  void clear_request_time();
  static const int kRequestTimeFieldNumber = 2;
  ::google::protobuf::uint64 request_time() const;
  void set_request_time(::google::protobuf::uint64 value);

  // optional uint32 cluster = 3;
  bool has_cluster() const;
  void clear_cluster();
  static const int kClusterFieldNumber = 3;
  ::google::protobuf::uint32 cluster() const;
  void set_cluster(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToServerPingResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::uint64 request_time_;
  ::google::protobuf::uint32 cluster_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToServerConsoleCommand final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToServerConsoleCommand) */ {
 public:
  CMsgGCToServerConsoleCommand();
  virtual ~CMsgGCToServerConsoleCommand();

  CMsgGCToServerConsoleCommand(const CMsgGCToServerConsoleCommand& from);

  inline CMsgGCToServerConsoleCommand& operator=(const CMsgGCToServerConsoleCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToServerConsoleCommand(CMsgGCToServerConsoleCommand&& from) noexcept
    : CMsgGCToServerConsoleCommand() {
    *this = ::std::move(from);
  }

  inline CMsgGCToServerConsoleCommand& operator=(CMsgGCToServerConsoleCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToServerConsoleCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToServerConsoleCommand* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToServerConsoleCommand*>(
               &_CMsgGCToServerConsoleCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(CMsgGCToServerConsoleCommand* other);
  friend void swap(CMsgGCToServerConsoleCommand& a, CMsgGCToServerConsoleCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToServerConsoleCommand* New() const final {
    return CreateMaybeMessage<CMsgGCToServerConsoleCommand>(nullptr);
  }

  CMsgGCToServerConsoleCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToServerConsoleCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToServerConsoleCommand& from);
  void MergeFrom(const CMsgGCToServerConsoleCommand& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToServerConsoleCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string console_command = 1;
  bool has_console_command() const;
  void clear_console_command();
  static const int kConsoleCommandFieldNumber = 1;
  const ::std::string& console_command() const;
  void set_console_command(const ::std::string& value);
  #if LANG_CXX11
  void set_console_command(::std::string&& value);
  #endif
  void set_console_command(const char* value);
  void set_console_command(const char* value, size_t size);
  ::std::string* mutable_console_command();
  ::std::string* release_console_command();
  void set_allocated_console_command(::std::string* console_command);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToServerConsoleCommand)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr console_command_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerGetEventPoints final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerGetEventPoints) */ {
 public:
  CMsgServerGetEventPoints();
  virtual ~CMsgServerGetEventPoints();

  CMsgServerGetEventPoints(const CMsgServerGetEventPoints& from);

  inline CMsgServerGetEventPoints& operator=(const CMsgServerGetEventPoints& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerGetEventPoints(CMsgServerGetEventPoints&& from) noexcept
    : CMsgServerGetEventPoints() {
    *this = ::std::move(from);
  }

  inline CMsgServerGetEventPoints& operator=(CMsgServerGetEventPoints&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerGetEventPoints& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerGetEventPoints* internal_default_instance() {
    return reinterpret_cast<const CMsgServerGetEventPoints*>(
               &_CMsgServerGetEventPoints_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(CMsgServerGetEventPoints* other);
  friend void swap(CMsgServerGetEventPoints& a, CMsgServerGetEventPoints& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerGetEventPoints* New() const final {
    return CreateMaybeMessage<CMsgServerGetEventPoints>(nullptr);
  }

  CMsgServerGetEventPoints* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerGetEventPoints>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerGetEventPoints& from);
  void MergeFrom(const CMsgServerGetEventPoints& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerGetEventPoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_id = 2;
  int account_id_size() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id(int index) const;
  void set_account_id(int index, ::google::protobuf::uint32 value);
  void add_account_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_id();

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerGetEventPoints)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_id_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerGetEventPointsResponse_Points final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerGetEventPointsResponse.Points) */ {
 public:
  CMsgServerGetEventPointsResponse_Points();
  virtual ~CMsgServerGetEventPointsResponse_Points();

  CMsgServerGetEventPointsResponse_Points(const CMsgServerGetEventPointsResponse_Points& from);

  inline CMsgServerGetEventPointsResponse_Points& operator=(const CMsgServerGetEventPointsResponse_Points& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerGetEventPointsResponse_Points(CMsgServerGetEventPointsResponse_Points&& from) noexcept
    : CMsgServerGetEventPointsResponse_Points() {
    *this = ::std::move(from);
  }

  inline CMsgServerGetEventPointsResponse_Points& operator=(CMsgServerGetEventPointsResponse_Points&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerGetEventPointsResponse_Points& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerGetEventPointsResponse_Points* internal_default_instance() {
    return reinterpret_cast<const CMsgServerGetEventPointsResponse_Points*>(
               &_CMsgServerGetEventPointsResponse_Points_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(CMsgServerGetEventPointsResponse_Points* other);
  friend void swap(CMsgServerGetEventPointsResponse_Points& a, CMsgServerGetEventPointsResponse_Points& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerGetEventPointsResponse_Points* New() const final {
    return CreateMaybeMessage<CMsgServerGetEventPointsResponse_Points>(nullptr);
  }

  CMsgServerGetEventPointsResponse_Points* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerGetEventPointsResponse_Points>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerGetEventPointsResponse_Points& from);
  void MergeFrom(const CMsgServerGetEventPointsResponse_Points& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerGetEventPointsResponse_Points* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 points_total = 2;
  bool has_points_total() const;
  void clear_points_total();
  static const int kPointsTotalFieldNumber = 2;
  ::google::protobuf::uint32 points_total() const;
  void set_points_total(::google::protobuf::uint32 value);

  // optional bool owned = 4;
  bool has_owned() const;
  void clear_owned();
  static const int kOwnedFieldNumber = 4;
  bool owned() const;
  void set_owned(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerGetEventPointsResponse.Points)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 points_total_;
  bool owned_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerGetEventPointsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerGetEventPointsResponse) */ {
 public:
  CMsgServerGetEventPointsResponse();
  virtual ~CMsgServerGetEventPointsResponse();

  CMsgServerGetEventPointsResponse(const CMsgServerGetEventPointsResponse& from);

  inline CMsgServerGetEventPointsResponse& operator=(const CMsgServerGetEventPointsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerGetEventPointsResponse(CMsgServerGetEventPointsResponse&& from) noexcept
    : CMsgServerGetEventPointsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgServerGetEventPointsResponse& operator=(CMsgServerGetEventPointsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerGetEventPointsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerGetEventPointsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgServerGetEventPointsResponse*>(
               &_CMsgServerGetEventPointsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(CMsgServerGetEventPointsResponse* other);
  friend void swap(CMsgServerGetEventPointsResponse& a, CMsgServerGetEventPointsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerGetEventPointsResponse* New() const final {
    return CreateMaybeMessage<CMsgServerGetEventPointsResponse>(nullptr);
  }

  CMsgServerGetEventPointsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerGetEventPointsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerGetEventPointsResponse& from);
  void MergeFrom(const CMsgServerGetEventPointsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerGetEventPointsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgServerGetEventPointsResponse_Points Points;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerGetEventPointsResponse.Points points = 2;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 2;
  ::proto::dota::CMsgServerGetEventPointsResponse_Points* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerGetEventPointsResponse_Points >*
      mutable_points();
  const ::proto::dota::CMsgServerGetEventPointsResponse_Points& points(int index) const;
  ::proto::dota::CMsgServerGetEventPointsResponse_Points* add_points();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerGetEventPointsResponse_Points >&
      points() const;

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerGetEventPointsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerGetEventPointsResponse_Points > points_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerGrantSurveyPermission_Survey final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerGrantSurveyPermission.Survey) */ {
 public:
  CMsgServerGrantSurveyPermission_Survey();
  virtual ~CMsgServerGrantSurveyPermission_Survey();

  CMsgServerGrantSurveyPermission_Survey(const CMsgServerGrantSurveyPermission_Survey& from);

  inline CMsgServerGrantSurveyPermission_Survey& operator=(const CMsgServerGrantSurveyPermission_Survey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerGrantSurveyPermission_Survey(CMsgServerGrantSurveyPermission_Survey&& from) noexcept
    : CMsgServerGrantSurveyPermission_Survey() {
    *this = ::std::move(from);
  }

  inline CMsgServerGrantSurveyPermission_Survey& operator=(CMsgServerGrantSurveyPermission_Survey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerGrantSurveyPermission_Survey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerGrantSurveyPermission_Survey* internal_default_instance() {
    return reinterpret_cast<const CMsgServerGrantSurveyPermission_Survey*>(
               &_CMsgServerGrantSurveyPermission_Survey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(CMsgServerGrantSurveyPermission_Survey* other);
  friend void swap(CMsgServerGrantSurveyPermission_Survey& a, CMsgServerGrantSurveyPermission_Survey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerGrantSurveyPermission_Survey* New() const final {
    return CreateMaybeMessage<CMsgServerGrantSurveyPermission_Survey>(nullptr);
  }

  CMsgServerGrantSurveyPermission_Survey* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerGrantSurveyPermission_Survey>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerGrantSurveyPermission_Survey& from);
  void MergeFrom(const CMsgServerGrantSurveyPermission_Survey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerGrantSurveyPermission_Survey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 question_id = 2;
  bool has_question_id() const;
  void clear_question_id();
  static const int kQuestionIdFieldNumber = 2;
  ::google::protobuf::uint32 question_id() const;
  void set_question_id(::google::protobuf::uint32 value);

  // optional uint64 survey_key = 4;
  bool has_survey_key() const;
  void clear_survey_key();
  static const int kSurveyKeyFieldNumber = 4;
  ::google::protobuf::uint64 survey_key() const;
  void set_survey_key(::google::protobuf::uint64 value);

  // optional uint64 extra_data = 5;
  bool has_extra_data() const;
  void clear_extra_data();
  static const int kExtraDataFieldNumber = 5;
  ::google::protobuf::uint64 extra_data() const;
  void set_extra_data(::google::protobuf::uint64 value);

  // optional uint64 extra_data_32 = 6;
  bool has_extra_data_32() const;
  void clear_extra_data_32();
  static const int kExtraData32FieldNumber = 6;
  ::google::protobuf::uint64 extra_data_32() const;
  void set_extra_data_32(::google::protobuf::uint64 value);

  // optional uint32 expire_time = 3;
  bool has_expire_time() const;
  void clear_expire_time();
  static const int kExpireTimeFieldNumber = 3;
  ::google::protobuf::uint32 expire_time() const;
  void set_expire_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerGrantSurveyPermission.Survey)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 question_id_;
  ::google::protobuf::uint64 survey_key_;
  ::google::protobuf::uint64 extra_data_;
  ::google::protobuf::uint64 extra_data_32_;
  ::google::protobuf::uint32 expire_time_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerGrantSurveyPermission final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerGrantSurveyPermission) */ {
 public:
  CMsgServerGrantSurveyPermission();
  virtual ~CMsgServerGrantSurveyPermission();

  CMsgServerGrantSurveyPermission(const CMsgServerGrantSurveyPermission& from);

  inline CMsgServerGrantSurveyPermission& operator=(const CMsgServerGrantSurveyPermission& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerGrantSurveyPermission(CMsgServerGrantSurveyPermission&& from) noexcept
    : CMsgServerGrantSurveyPermission() {
    *this = ::std::move(from);
  }

  inline CMsgServerGrantSurveyPermission& operator=(CMsgServerGrantSurveyPermission&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerGrantSurveyPermission& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerGrantSurveyPermission* internal_default_instance() {
    return reinterpret_cast<const CMsgServerGrantSurveyPermission*>(
               &_CMsgServerGrantSurveyPermission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(CMsgServerGrantSurveyPermission* other);
  friend void swap(CMsgServerGrantSurveyPermission& a, CMsgServerGrantSurveyPermission& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerGrantSurveyPermission* New() const final {
    return CreateMaybeMessage<CMsgServerGrantSurveyPermission>(nullptr);
  }

  CMsgServerGrantSurveyPermission* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerGrantSurveyPermission>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerGrantSurveyPermission& from);
  void MergeFrom(const CMsgServerGrantSurveyPermission& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerGrantSurveyPermission* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgServerGrantSurveyPermission_Survey Survey;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerGrantSurveyPermission.Survey surveys = 1;
  int surveys_size() const;
  void clear_surveys();
  static const int kSurveysFieldNumber = 1;
  ::proto::dota::CMsgServerGrantSurveyPermission_Survey* mutable_surveys(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerGrantSurveyPermission_Survey >*
      mutable_surveys();
  const ::proto::dota::CMsgServerGrantSurveyPermission_Survey& surveys(int index) const;
  ::proto::dota::CMsgServerGrantSurveyPermission_Survey* add_surveys();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerGrantSurveyPermission_Survey >&
      surveys() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerGrantSurveyPermission)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerGrantSurveyPermission_Survey > surveys_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerGrantSurveyPermissionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerGrantSurveyPermissionResponse) */ {
 public:
  CMsgServerGrantSurveyPermissionResponse();
  virtual ~CMsgServerGrantSurveyPermissionResponse();

  CMsgServerGrantSurveyPermissionResponse(const CMsgServerGrantSurveyPermissionResponse& from);

  inline CMsgServerGrantSurveyPermissionResponse& operator=(const CMsgServerGrantSurveyPermissionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerGrantSurveyPermissionResponse(CMsgServerGrantSurveyPermissionResponse&& from) noexcept
    : CMsgServerGrantSurveyPermissionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgServerGrantSurveyPermissionResponse& operator=(CMsgServerGrantSurveyPermissionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerGrantSurveyPermissionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerGrantSurveyPermissionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgServerGrantSurveyPermissionResponse*>(
               &_CMsgServerGrantSurveyPermissionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(CMsgServerGrantSurveyPermissionResponse* other);
  friend void swap(CMsgServerGrantSurveyPermissionResponse& a, CMsgServerGrantSurveyPermissionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerGrantSurveyPermissionResponse* New() const final {
    return CreateMaybeMessage<CMsgServerGrantSurveyPermissionResponse>(nullptr);
  }

  CMsgServerGrantSurveyPermissionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerGrantSurveyPermissionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerGrantSurveyPermissionResponse& from);
  void MergeFrom(const CMsgServerGrantSurveyPermissionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerGrantSurveyPermissionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerGrantSurveyPermissionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchConnectionStats_Player final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCMatchConnectionStats.Player) */ {
 public:
  CMsgServerToGCMatchConnectionStats_Player();
  virtual ~CMsgServerToGCMatchConnectionStats_Player();

  CMsgServerToGCMatchConnectionStats_Player(const CMsgServerToGCMatchConnectionStats_Player& from);

  inline CMsgServerToGCMatchConnectionStats_Player& operator=(const CMsgServerToGCMatchConnectionStats_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCMatchConnectionStats_Player(CMsgServerToGCMatchConnectionStats_Player&& from) noexcept
    : CMsgServerToGCMatchConnectionStats_Player() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCMatchConnectionStats_Player& operator=(CMsgServerToGCMatchConnectionStats_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCMatchConnectionStats_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCMatchConnectionStats_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCMatchConnectionStats_Player*>(
               &_CMsgServerToGCMatchConnectionStats_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(CMsgServerToGCMatchConnectionStats_Player* other);
  friend void swap(CMsgServerToGCMatchConnectionStats_Player& a, CMsgServerToGCMatchConnectionStats_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCMatchConnectionStats_Player* New() const final {
    return CreateMaybeMessage<CMsgServerToGCMatchConnectionStats_Player>(nullptr);
  }

  CMsgServerToGCMatchConnectionStats_Player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCMatchConnectionStats_Player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCMatchConnectionStats_Player& from);
  void MergeFrom(const CMsgServerToGCMatchConnectionStats_Player& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCMatchConnectionStats_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional fixed32 ip = 2;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // optional uint32 avg_ping_ms = 3;
  bool has_avg_ping_ms() const;
  void clear_avg_ping_ms();
  static const int kAvgPingMsFieldNumber = 3;
  ::google::protobuf::uint32 avg_ping_ms() const;
  void set_avg_ping_ms(::google::protobuf::uint32 value);

  // optional float packet_loss = 5;
  bool has_packet_loss() const;
  void clear_packet_loss();
  static const int kPacketLossFieldNumber = 5;
  float packet_loss() const;
  void set_packet_loss(float value);

  // optional float ping_deviation = 6;
  bool has_ping_deviation() const;
  void clear_ping_deviation();
  static const int kPingDeviationFieldNumber = 6;
  float ping_deviation() const;
  void set_ping_deviation(float value);

  // optional uint32 full_resends = 7;
  bool has_full_resends() const;
  void clear_full_resends();
  static const int kFullResendsFieldNumber = 7;
  ::google::protobuf::uint32 full_resends() const;
  void set_full_resends(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCMatchConnectionStats.Player)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 avg_ping_ms_;
  float packet_loss_;
  float ping_deviation_;
  ::google::protobuf::uint32 full_resends_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchConnectionStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCMatchConnectionStats) */ {
 public:
  CMsgServerToGCMatchConnectionStats();
  virtual ~CMsgServerToGCMatchConnectionStats();

  CMsgServerToGCMatchConnectionStats(const CMsgServerToGCMatchConnectionStats& from);

  inline CMsgServerToGCMatchConnectionStats& operator=(const CMsgServerToGCMatchConnectionStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCMatchConnectionStats(CMsgServerToGCMatchConnectionStats&& from) noexcept
    : CMsgServerToGCMatchConnectionStats() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCMatchConnectionStats& operator=(CMsgServerToGCMatchConnectionStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCMatchConnectionStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCMatchConnectionStats* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCMatchConnectionStats*>(
               &_CMsgServerToGCMatchConnectionStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(CMsgServerToGCMatchConnectionStats* other);
  friend void swap(CMsgServerToGCMatchConnectionStats& a, CMsgServerToGCMatchConnectionStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCMatchConnectionStats* New() const final {
    return CreateMaybeMessage<CMsgServerToGCMatchConnectionStats>(nullptr);
  }

  CMsgServerToGCMatchConnectionStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCMatchConnectionStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCMatchConnectionStats& from);
  void MergeFrom(const CMsgServerToGCMatchConnectionStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCMatchConnectionStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCMatchConnectionStats_Player Player;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerToGCMatchConnectionStats.Player players = 4;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 4;
  ::proto::dota::CMsgServerToGCMatchConnectionStats_Player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchConnectionStats_Player >*
      mutable_players();
  const ::proto::dota::CMsgServerToGCMatchConnectionStats_Player& players(int index) const;
  ::proto::dota::CMsgServerToGCMatchConnectionStats_Player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchConnectionStats_Player >&
      players() const;

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 region_id = 2;
  bool has_region_id() const;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::uint32 region_id() const;
  void set_region_id(::google::protobuf::uint32 value);

  // optional uint32 league_id = 3;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 3;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 cluster_id = 5;
  bool has_cluster_id() const;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 5;
  ::google::protobuf::uint32 cluster_id() const;
  void set_cluster_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCMatchConnectionStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchConnectionStats_Player > players_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 region_id_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 cluster_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerGCUpdateSpectatorCount final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerGCUpdateSpectatorCount) */ {
 public:
  CMsgServerGCUpdateSpectatorCount();
  virtual ~CMsgServerGCUpdateSpectatorCount();

  CMsgServerGCUpdateSpectatorCount(const CMsgServerGCUpdateSpectatorCount& from);

  inline CMsgServerGCUpdateSpectatorCount& operator=(const CMsgServerGCUpdateSpectatorCount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerGCUpdateSpectatorCount(CMsgServerGCUpdateSpectatorCount&& from) noexcept
    : CMsgServerGCUpdateSpectatorCount() {
    *this = ::std::move(from);
  }

  inline CMsgServerGCUpdateSpectatorCount& operator=(CMsgServerGCUpdateSpectatorCount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerGCUpdateSpectatorCount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerGCUpdateSpectatorCount* internal_default_instance() {
    return reinterpret_cast<const CMsgServerGCUpdateSpectatorCount*>(
               &_CMsgServerGCUpdateSpectatorCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(CMsgServerGCUpdateSpectatorCount* other);
  friend void swap(CMsgServerGCUpdateSpectatorCount& a, CMsgServerGCUpdateSpectatorCount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerGCUpdateSpectatorCount* New() const final {
    return CreateMaybeMessage<CMsgServerGCUpdateSpectatorCount>(nullptr);
  }

  CMsgServerGCUpdateSpectatorCount* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerGCUpdateSpectatorCount>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerGCUpdateSpectatorCount& from);
  void MergeFrom(const CMsgServerGCUpdateSpectatorCount& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerGCUpdateSpectatorCount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 spectator_count = 1;
  bool has_spectator_count() const;
  void clear_spectator_count();
  static const int kSpectatorCountFieldNumber = 1;
  ::google::protobuf::uint32 spectator_count() const;
  void set_spectator_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerGCUpdateSpectatorCount)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 spectator_count_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CSerializedCombatLog_Dictionary_DictString final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSerializedCombatLog.Dictionary.DictString) */ {
 public:
  CSerializedCombatLog_Dictionary_DictString();
  virtual ~CSerializedCombatLog_Dictionary_DictString();

  CSerializedCombatLog_Dictionary_DictString(const CSerializedCombatLog_Dictionary_DictString& from);

  inline CSerializedCombatLog_Dictionary_DictString& operator=(const CSerializedCombatLog_Dictionary_DictString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSerializedCombatLog_Dictionary_DictString(CSerializedCombatLog_Dictionary_DictString&& from) noexcept
    : CSerializedCombatLog_Dictionary_DictString() {
    *this = ::std::move(from);
  }

  inline CSerializedCombatLog_Dictionary_DictString& operator=(CSerializedCombatLog_Dictionary_DictString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSerializedCombatLog_Dictionary_DictString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSerializedCombatLog_Dictionary_DictString* internal_default_instance() {
    return reinterpret_cast<const CSerializedCombatLog_Dictionary_DictString*>(
               &_CSerializedCombatLog_Dictionary_DictString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(CSerializedCombatLog_Dictionary_DictString* other);
  friend void swap(CSerializedCombatLog_Dictionary_DictString& a, CSerializedCombatLog_Dictionary_DictString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSerializedCombatLog_Dictionary_DictString* New() const final {
    return CreateMaybeMessage<CSerializedCombatLog_Dictionary_DictString>(nullptr);
  }

  CSerializedCombatLog_Dictionary_DictString* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSerializedCombatLog_Dictionary_DictString>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSerializedCombatLog_Dictionary_DictString& from);
  void MergeFrom(const CSerializedCombatLog_Dictionary_DictString& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSerializedCombatLog_Dictionary_DictString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSerializedCombatLog.Dictionary.DictString)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CSerializedCombatLog_Dictionary final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSerializedCombatLog.Dictionary) */ {
 public:
  CSerializedCombatLog_Dictionary();
  virtual ~CSerializedCombatLog_Dictionary();

  CSerializedCombatLog_Dictionary(const CSerializedCombatLog_Dictionary& from);

  inline CSerializedCombatLog_Dictionary& operator=(const CSerializedCombatLog_Dictionary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSerializedCombatLog_Dictionary(CSerializedCombatLog_Dictionary&& from) noexcept
    : CSerializedCombatLog_Dictionary() {
    *this = ::std::move(from);
  }

  inline CSerializedCombatLog_Dictionary& operator=(CSerializedCombatLog_Dictionary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSerializedCombatLog_Dictionary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSerializedCombatLog_Dictionary* internal_default_instance() {
    return reinterpret_cast<const CSerializedCombatLog_Dictionary*>(
               &_CSerializedCombatLog_Dictionary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(CSerializedCombatLog_Dictionary* other);
  friend void swap(CSerializedCombatLog_Dictionary& a, CSerializedCombatLog_Dictionary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSerializedCombatLog_Dictionary* New() const final {
    return CreateMaybeMessage<CSerializedCombatLog_Dictionary>(nullptr);
  }

  CSerializedCombatLog_Dictionary* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSerializedCombatLog_Dictionary>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSerializedCombatLog_Dictionary& from);
  void MergeFrom(const CSerializedCombatLog_Dictionary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSerializedCombatLog_Dictionary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CSerializedCombatLog_Dictionary_DictString DictString;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CSerializedCombatLog.Dictionary.DictString strings = 1;
  int strings_size() const;
  void clear_strings();
  static const int kStringsFieldNumber = 1;
  ::proto::dota::CSerializedCombatLog_Dictionary_DictString* mutable_strings(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSerializedCombatLog_Dictionary_DictString >*
      mutable_strings();
  const ::proto::dota::CSerializedCombatLog_Dictionary_DictString& strings(int index) const;
  ::proto::dota::CSerializedCombatLog_Dictionary_DictString* add_strings();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSerializedCombatLog_Dictionary_DictString >&
      strings() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CSerializedCombatLog.Dictionary)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSerializedCombatLog_Dictionary_DictString > strings_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CSerializedCombatLog final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSerializedCombatLog) */ {
 public:
  CSerializedCombatLog();
  virtual ~CSerializedCombatLog();

  CSerializedCombatLog(const CSerializedCombatLog& from);

  inline CSerializedCombatLog& operator=(const CSerializedCombatLog& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSerializedCombatLog(CSerializedCombatLog&& from) noexcept
    : CSerializedCombatLog() {
    *this = ::std::move(from);
  }

  inline CSerializedCombatLog& operator=(CSerializedCombatLog&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSerializedCombatLog& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSerializedCombatLog* internal_default_instance() {
    return reinterpret_cast<const CSerializedCombatLog*>(
               &_CSerializedCombatLog_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(CSerializedCombatLog* other);
  friend void swap(CSerializedCombatLog& a, CSerializedCombatLog& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSerializedCombatLog* New() const final {
    return CreateMaybeMessage<CSerializedCombatLog>(nullptr);
  }

  CSerializedCombatLog* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSerializedCombatLog>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSerializedCombatLog& from);
  void MergeFrom(const CSerializedCombatLog& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSerializedCombatLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CSerializedCombatLog_Dictionary Dictionary;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTACombatLogEntry entries = 3;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 3;
  ::proto::dota::CMsgDOTACombatLogEntry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACombatLogEntry >*
      mutable_entries();
  const ::proto::dota::CMsgDOTACombatLogEntry& entries(int index) const;
  ::proto::dota::CMsgDOTACombatLogEntry* add_entries();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACombatLogEntry >&
      entries() const;

  // optional .proto.dota.CSerializedCombatLog.Dictionary dictionary = 2;
  bool has_dictionary() const;
  void clear_dictionary();
  static const int kDictionaryFieldNumber = 2;
  const ::proto::dota::CSerializedCombatLog_Dictionary& dictionary() const;
  ::proto::dota::CSerializedCombatLog_Dictionary* release_dictionary();
  ::proto::dota::CSerializedCombatLog_Dictionary* mutable_dictionary();
  void set_allocated_dictionary(::proto::dota::CSerializedCombatLog_Dictionary* dictionary);

  // optional uint32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSerializedCombatLog)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACombatLogEntry > entries_;
  ::proto::dota::CSerializedCombatLog_Dictionary* dictionary_;
  ::google::protobuf::uint32 version_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCGetAdditionalEquips final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCGetAdditionalEquips) */ {
 public:
  CMsgServerToGCGetAdditionalEquips();
  virtual ~CMsgServerToGCGetAdditionalEquips();

  CMsgServerToGCGetAdditionalEquips(const CMsgServerToGCGetAdditionalEquips& from);

  inline CMsgServerToGCGetAdditionalEquips& operator=(const CMsgServerToGCGetAdditionalEquips& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCGetAdditionalEquips(CMsgServerToGCGetAdditionalEquips&& from) noexcept
    : CMsgServerToGCGetAdditionalEquips() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCGetAdditionalEquips& operator=(CMsgServerToGCGetAdditionalEquips&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCGetAdditionalEquips& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCGetAdditionalEquips* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCGetAdditionalEquips*>(
               &_CMsgServerToGCGetAdditionalEquips_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  void Swap(CMsgServerToGCGetAdditionalEquips* other);
  friend void swap(CMsgServerToGCGetAdditionalEquips& a, CMsgServerToGCGetAdditionalEquips& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCGetAdditionalEquips* New() const final {
    return CreateMaybeMessage<CMsgServerToGCGetAdditionalEquips>(nullptr);
  }

  CMsgServerToGCGetAdditionalEquips* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCGetAdditionalEquips>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCGetAdditionalEquips& from);
  void MergeFrom(const CMsgServerToGCGetAdditionalEquips& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCGetAdditionalEquips* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCGetAdditionalEquips)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips) */ {
 public:
  CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips();
  virtual ~CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips();

  CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips(const CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& from);

  inline CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& operator=(const CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips(CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips&& from) noexcept
    : CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& operator=(CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips*>(
               &_CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  void Swap(CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* other);
  friend void swap(CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& a, CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* New() const final {
    return CreateMaybeMessage<CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips>(nullptr);
  }

  CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& from);
  void MergeFrom(const CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CAdditionalEquipSlot equips = 2;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 2;
  ::proto::dota::CAdditionalEquipSlot* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >*
      mutable_equips();
  const ::proto::dota::CAdditionalEquipSlot& equips(int index) const;
  ::proto::dota::CAdditionalEquipSlot* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >&
      equips() const;

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot > equips_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCGetAdditionalEquipsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse) */ {
 public:
  CMsgServerToGCGetAdditionalEquipsResponse();
  virtual ~CMsgServerToGCGetAdditionalEquipsResponse();

  CMsgServerToGCGetAdditionalEquipsResponse(const CMsgServerToGCGetAdditionalEquipsResponse& from);

  inline CMsgServerToGCGetAdditionalEquipsResponse& operator=(const CMsgServerToGCGetAdditionalEquipsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCGetAdditionalEquipsResponse(CMsgServerToGCGetAdditionalEquipsResponse&& from) noexcept
    : CMsgServerToGCGetAdditionalEquipsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCGetAdditionalEquipsResponse& operator=(CMsgServerToGCGetAdditionalEquipsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCGetAdditionalEquipsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCGetAdditionalEquipsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCGetAdditionalEquipsResponse*>(
               &_CMsgServerToGCGetAdditionalEquipsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  void Swap(CMsgServerToGCGetAdditionalEquipsResponse* other);
  friend void swap(CMsgServerToGCGetAdditionalEquipsResponse& a, CMsgServerToGCGetAdditionalEquipsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCGetAdditionalEquipsResponse* New() const final {
    return CreateMaybeMessage<CMsgServerToGCGetAdditionalEquipsResponse>(nullptr);
  }

  CMsgServerToGCGetAdditionalEquipsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCGetAdditionalEquipsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCGetAdditionalEquipsResponse& from);
  void MergeFrom(const CMsgServerToGCGetAdditionalEquipsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCGetAdditionalEquipsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips CUserEquips;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips equips = 1;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 1;
  ::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips >*
      mutable_equips();
  const ::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& equips(int index) const;
  ::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips >&
      equips() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips > equips_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCGetProfileCard final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCGetProfileCard) */ {
 public:
  CMsgServerToGCGetProfileCard();
  virtual ~CMsgServerToGCGetProfileCard();

  CMsgServerToGCGetProfileCard(const CMsgServerToGCGetProfileCard& from);

  inline CMsgServerToGCGetProfileCard& operator=(const CMsgServerToGCGetProfileCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCGetProfileCard(CMsgServerToGCGetProfileCard&& from) noexcept
    : CMsgServerToGCGetProfileCard() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCGetProfileCard& operator=(CMsgServerToGCGetProfileCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCGetProfileCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCGetProfileCard* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCGetProfileCard*>(
               &_CMsgServerToGCGetProfileCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  void Swap(CMsgServerToGCGetProfileCard* other);
  friend void swap(CMsgServerToGCGetProfileCard& a, CMsgServerToGCGetProfileCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCGetProfileCard* New() const final {
    return CreateMaybeMessage<CMsgServerToGCGetProfileCard>(nullptr);
  }

  CMsgServerToGCGetProfileCard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCGetProfileCard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCGetProfileCard& from);
  void MergeFrom(const CMsgServerToGCGetProfileCard& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCGetProfileCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCGetProfileCard)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCGetProfileCardResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCGetProfileCardResponse) */ {
 public:
  CMsgServerToGCGetProfileCardResponse();
  virtual ~CMsgServerToGCGetProfileCardResponse();

  CMsgServerToGCGetProfileCardResponse(const CMsgServerToGCGetProfileCardResponse& from);

  inline CMsgServerToGCGetProfileCardResponse& operator=(const CMsgServerToGCGetProfileCardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCGetProfileCardResponse(CMsgServerToGCGetProfileCardResponse&& from) noexcept
    : CMsgServerToGCGetProfileCardResponse() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCGetProfileCardResponse& operator=(CMsgServerToGCGetProfileCardResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCGetProfileCardResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCGetProfileCardResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCGetProfileCardResponse*>(
               &_CMsgServerToGCGetProfileCardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  void Swap(CMsgServerToGCGetProfileCardResponse* other);
  friend void swap(CMsgServerToGCGetProfileCardResponse& a, CMsgServerToGCGetProfileCardResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCGetProfileCardResponse* New() const final {
    return CreateMaybeMessage<CMsgServerToGCGetProfileCardResponse>(nullptr);
  }

  CMsgServerToGCGetProfileCardResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCGetProfileCardResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCGetProfileCardResponse& from);
  void MergeFrom(const CMsgServerToGCGetProfileCardResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCGetProfileCardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAProfileCard cards = 1;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 1;
  ::proto::dota::CMsgDOTAProfileCard* mutable_cards(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileCard >*
      mutable_cards();
  const ::proto::dota::CMsgDOTAProfileCard& cards(int index) const;
  ::proto::dota::CMsgDOTAProfileCard* add_cards();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileCard >&
      cards() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCGetProfileCardResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileCard > cards_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCVictoryPredictions_Record final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCVictoryPredictions.Record) */ {
 public:
  CMsgServerToGCVictoryPredictions_Record();
  virtual ~CMsgServerToGCVictoryPredictions_Record();

  CMsgServerToGCVictoryPredictions_Record(const CMsgServerToGCVictoryPredictions_Record& from);

  inline CMsgServerToGCVictoryPredictions_Record& operator=(const CMsgServerToGCVictoryPredictions_Record& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCVictoryPredictions_Record(CMsgServerToGCVictoryPredictions_Record&& from) noexcept
    : CMsgServerToGCVictoryPredictions_Record() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCVictoryPredictions_Record& operator=(CMsgServerToGCVictoryPredictions_Record&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCVictoryPredictions_Record& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCVictoryPredictions_Record* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCVictoryPredictions_Record*>(
               &_CMsgServerToGCVictoryPredictions_Record_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  void Swap(CMsgServerToGCVictoryPredictions_Record* other);
  friend void swap(CMsgServerToGCVictoryPredictions_Record& a, CMsgServerToGCVictoryPredictions_Record& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCVictoryPredictions_Record* New() const final {
    return CreateMaybeMessage<CMsgServerToGCVictoryPredictions_Record>(nullptr);
  }

  CMsgServerToGCVictoryPredictions_Record* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCVictoryPredictions_Record>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCVictoryPredictions_Record& from);
  void MergeFrom(const CMsgServerToGCVictoryPredictions_Record& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCVictoryPredictions_Record* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 item_ids = 5;
  int item_ids_size() const;
  void clear_item_ids();
  static const int kItemIdsFieldNumber = 5;
  ::google::protobuf::uint64 item_ids(int index) const;
  void set_item_ids(int index, ::google::protobuf::uint64 value);
  void add_item_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      item_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_item_ids();

  // optional uint64 item_id = 2;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCVictoryPredictions.Record)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > item_ids_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCVictoryPredictions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCVictoryPredictions) */ {
 public:
  CMsgServerToGCVictoryPredictions();
  virtual ~CMsgServerToGCVictoryPredictions();

  CMsgServerToGCVictoryPredictions(const CMsgServerToGCVictoryPredictions& from);

  inline CMsgServerToGCVictoryPredictions& operator=(const CMsgServerToGCVictoryPredictions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCVictoryPredictions(CMsgServerToGCVictoryPredictions&& from) noexcept
    : CMsgServerToGCVictoryPredictions() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCVictoryPredictions& operator=(CMsgServerToGCVictoryPredictions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCVictoryPredictions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCVictoryPredictions* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCVictoryPredictions*>(
               &_CMsgServerToGCVictoryPredictions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  void Swap(CMsgServerToGCVictoryPredictions* other);
  friend void swap(CMsgServerToGCVictoryPredictions& a, CMsgServerToGCVictoryPredictions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCVictoryPredictions* New() const final {
    return CreateMaybeMessage<CMsgServerToGCVictoryPredictions>(nullptr);
  }

  CMsgServerToGCVictoryPredictions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCVictoryPredictions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCVictoryPredictions& from);
  void MergeFrom(const CMsgServerToGCVictoryPredictions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCVictoryPredictions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCVictoryPredictions_Record Record;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerToGCVictoryPredictions.Record records = 1;
  int records_size() const;
  void clear_records();
  static const int kRecordsFieldNumber = 1;
  ::proto::dota::CMsgServerToGCVictoryPredictions_Record* mutable_records(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCVictoryPredictions_Record >*
      mutable_records();
  const ::proto::dota::CMsgServerToGCVictoryPredictions_Record& records(int index) const;
  ::proto::dota::CMsgServerToGCVictoryPredictions_Record* add_records();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCVictoryPredictions_Record >&
      records() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCVictoryPredictions)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCVictoryPredictions_Record > records_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSuspiciousActivity final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSuspiciousActivity) */ {
 public:
  CMsgSuspiciousActivity();
  virtual ~CMsgSuspiciousActivity();

  CMsgSuspiciousActivity(const CMsgSuspiciousActivity& from);

  inline CMsgSuspiciousActivity& operator=(const CMsgSuspiciousActivity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSuspiciousActivity(CMsgSuspiciousActivity&& from) noexcept
    : CMsgSuspiciousActivity() {
    *this = ::std::move(from);
  }

  inline CMsgSuspiciousActivity& operator=(CMsgSuspiciousActivity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSuspiciousActivity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSuspiciousActivity* internal_default_instance() {
    return reinterpret_cast<const CMsgSuspiciousActivity*>(
               &_CMsgSuspiciousActivity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  void Swap(CMsgSuspiciousActivity* other);
  friend void swap(CMsgSuspiciousActivity& a, CMsgSuspiciousActivity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSuspiciousActivity* New() const final {
    return CreateMaybeMessage<CMsgSuspiciousActivity>(nullptr);
  }

  CMsgSuspiciousActivity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSuspiciousActivity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSuspiciousActivity& from);
  void MergeFrom(const CMsgSuspiciousActivity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSuspiciousActivity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional sint32 intdata1 = 3;
  bool has_intdata1() const;
  void clear_intdata1();
  static const int kIntdata1FieldNumber = 3;
  ::google::protobuf::int32 intdata1() const;
  void set_intdata1(::google::protobuf::int32 value);

  // optional sint32 intdata2 = 4;
  bool has_intdata2() const;
  void clear_intdata2();
  static const int kIntdata2FieldNumber = 4;
  ::google::protobuf::int32 intdata2() const;
  void set_intdata2(::google::protobuf::int32 value);

  // optional uint32 time = 5;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 5;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // optional .proto.dota.ESuspiciousActivity activity = 2 [default = k_ESuspiciousActivity_VAC_MultipleInstances];
  bool has_activity() const;
  void clear_activity();
  static const int kActivityFieldNumber = 2;
  ::proto::dota::ESuspiciousActivity activity() const;
  void set_activity(::proto::dota::ESuspiciousActivity value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSuspiciousActivity)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::int32 intdata1_;
  ::google::protobuf::int32 intdata2_;
  ::google::protobuf::uint32 time_;
  int activity_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCRequestStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCRequestStatus) */ {
 public:
  CMsgServerToGCRequestStatus();
  virtual ~CMsgServerToGCRequestStatus();

  CMsgServerToGCRequestStatus(const CMsgServerToGCRequestStatus& from);

  inline CMsgServerToGCRequestStatus& operator=(const CMsgServerToGCRequestStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCRequestStatus(CMsgServerToGCRequestStatus&& from) noexcept
    : CMsgServerToGCRequestStatus() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCRequestStatus& operator=(CMsgServerToGCRequestStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCRequestStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCRequestStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCRequestStatus*>(
               &_CMsgServerToGCRequestStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  void Swap(CMsgServerToGCRequestStatus* other);
  friend void swap(CMsgServerToGCRequestStatus& a, CMsgServerToGCRequestStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCRequestStatus* New() const final {
    return CreateMaybeMessage<CMsgServerToGCRequestStatus>(nullptr);
  }

  CMsgServerToGCRequestStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCRequestStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCRequestStatus& from);
  void MergeFrom(const CMsgServerToGCRequestStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCRequestStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCRequestStatus)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCRequestStatus_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCRequestStatus_Response) */ {
 public:
  CMsgServerToGCRequestStatus_Response();
  virtual ~CMsgServerToGCRequestStatus_Response();

  CMsgServerToGCRequestStatus_Response(const CMsgServerToGCRequestStatus_Response& from);

  inline CMsgServerToGCRequestStatus_Response& operator=(const CMsgServerToGCRequestStatus_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCRequestStatus_Response(CMsgServerToGCRequestStatus_Response&& from) noexcept
    : CMsgServerToGCRequestStatus_Response() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCRequestStatus_Response& operator=(CMsgServerToGCRequestStatus_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCRequestStatus_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCRequestStatus_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCRequestStatus_Response*>(
               &_CMsgServerToGCRequestStatus_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  void Swap(CMsgServerToGCRequestStatus_Response* other);
  friend void swap(CMsgServerToGCRequestStatus_Response& a, CMsgServerToGCRequestStatus_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCRequestStatus_Response* New() const final {
    return CreateMaybeMessage<CMsgServerToGCRequestStatus_Response>(nullptr);
  }

  CMsgServerToGCRequestStatus_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCRequestStatus_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCRequestStatus_Response& from);
  void MergeFrom(const CMsgServerToGCRequestStatus_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCRequestStatus_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 response = 1;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 1;
  ::google::protobuf::uint32 response() const;
  void set_response(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCRequestStatus_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 response_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutAssassinMiniGameInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutAssassinMiniGameInfo) */ {
 public:
  CMsgSignOutAssassinMiniGameInfo();
  virtual ~CMsgSignOutAssassinMiniGameInfo();

  CMsgSignOutAssassinMiniGameInfo(const CMsgSignOutAssassinMiniGameInfo& from);

  inline CMsgSignOutAssassinMiniGameInfo& operator=(const CMsgSignOutAssassinMiniGameInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutAssassinMiniGameInfo(CMsgSignOutAssassinMiniGameInfo&& from) noexcept
    : CMsgSignOutAssassinMiniGameInfo() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutAssassinMiniGameInfo& operator=(CMsgSignOutAssassinMiniGameInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutAssassinMiniGameInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutAssassinMiniGameInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutAssassinMiniGameInfo*>(
               &_CMsgSignOutAssassinMiniGameInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  void Swap(CMsgSignOutAssassinMiniGameInfo* other);
  friend void swap(CMsgSignOutAssassinMiniGameInfo& a, CMsgSignOutAssassinMiniGameInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutAssassinMiniGameInfo* New() const final {
    return CreateMaybeMessage<CMsgSignOutAssassinMiniGameInfo>(nullptr);
  }

  CMsgSignOutAssassinMiniGameInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutAssassinMiniGameInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutAssassinMiniGameInfo& from);
  void MergeFrom(const CMsgSignOutAssassinMiniGameInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutAssassinMiniGameInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 winning_players = 1;
  int winning_players_size() const;
  void clear_winning_players();
  static const int kWinningPlayersFieldNumber = 1;
  ::google::protobuf::uint64 winning_players(int index) const;
  void set_winning_players(int index, ::google::protobuf::uint64 value);
  void add_winning_players(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      winning_players() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_winning_players();

  // repeated fixed64 losing_players = 2;
  int losing_players_size() const;
  void clear_losing_players();
  static const int kLosingPlayersFieldNumber = 2;
  ::google::protobuf::uint64 losing_players(int index) const;
  void set_losing_players(int index, ::google::protobuf::uint64 value);
  void add_losing_players(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      losing_players() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_losing_players();

  // repeated fixed64 arcana_owners = 3;
  int arcana_owners_size() const;
  void clear_arcana_owners();
  static const int kArcanaOwnersFieldNumber = 3;
  ::google::protobuf::uint64 arcana_owners(int index) const;
  void set_arcana_owners(int index, ::google::protobuf::uint64 value);
  void add_arcana_owners(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      arcana_owners() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_arcana_owners();

  // optional uint32 target_hero_id = 5;
  bool has_target_hero_id() const;
  void clear_target_hero_id();
  static const int kTargetHeroIdFieldNumber = 5;
  ::google::protobuf::uint32 target_hero_id() const;
  void set_target_hero_id(::google::protobuf::uint32 value);

  // optional bool assassin_won = 4;
  bool has_assassin_won() const;
  void clear_assassin_won();
  static const int kAssassinWonFieldNumber = 4;
  bool assassin_won() const;
  void set_assassin_won(bool value);

  // optional bool contract_completed = 6;
  bool has_contract_completed() const;
  void clear_contract_completed();
  static const int kContractCompletedFieldNumber = 6;
  bool contract_completed() const;
  void set_contract_completed(bool value);

  // optional bool pa_is_radiant = 8;
  bool has_pa_is_radiant() const;
  void clear_pa_is_radiant();
  static const int kPaIsRadiantFieldNumber = 8;
  bool pa_is_radiant() const;
  void set_pa_is_radiant(bool value);

  // optional float contract_complete_time = 7;
  bool has_contract_complete_time() const;
  void clear_contract_complete_time();
  static const int kContractCompleteTimeFieldNumber = 7;
  float contract_complete_time() const;
  void set_contract_complete_time(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutAssassinMiniGameInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > winning_players_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > losing_players_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > arcana_owners_;
  ::google::protobuf::uint32 target_hero_id_;
  bool assassin_won_;
  bool contract_completed_;
  bool pa_is_radiant_;
  float contract_complete_time_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCGetIngameEventData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCGetIngameEventData) */ {
 public:
  CMsgServerToGCGetIngameEventData();
  virtual ~CMsgServerToGCGetIngameEventData();

  CMsgServerToGCGetIngameEventData(const CMsgServerToGCGetIngameEventData& from);

  inline CMsgServerToGCGetIngameEventData& operator=(const CMsgServerToGCGetIngameEventData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCGetIngameEventData(CMsgServerToGCGetIngameEventData&& from) noexcept
    : CMsgServerToGCGetIngameEventData() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCGetIngameEventData& operator=(CMsgServerToGCGetIngameEventData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCGetIngameEventData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCGetIngameEventData* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCGetIngameEventData*>(
               &_CMsgServerToGCGetIngameEventData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  void Swap(CMsgServerToGCGetIngameEventData* other);
  friend void swap(CMsgServerToGCGetIngameEventData& a, CMsgServerToGCGetIngameEventData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCGetIngameEventData* New() const final {
    return CreateMaybeMessage<CMsgServerToGCGetIngameEventData>(nullptr);
  }

  CMsgServerToGCGetIngameEventData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCGetIngameEventData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCGetIngameEventData& from);
  void MergeFrom(const CMsgServerToGCGetIngameEventData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCGetIngameEventData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent event = 1 [default = EVENT_ID_NONE];
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 1;
  ::proto::dota::EEvent event() const;
  void set_event(::proto::dota::EEvent value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCGetIngameEventData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int event_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToServerIngameEventDataOraclePA final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToServerIngameEventDataOraclePA) */ {
 public:
  CMsgGCToServerIngameEventDataOraclePA();
  virtual ~CMsgGCToServerIngameEventDataOraclePA();

  CMsgGCToServerIngameEventDataOraclePA(const CMsgGCToServerIngameEventDataOraclePA& from);

  inline CMsgGCToServerIngameEventDataOraclePA& operator=(const CMsgGCToServerIngameEventDataOraclePA& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToServerIngameEventDataOraclePA(CMsgGCToServerIngameEventDataOraclePA&& from) noexcept
    : CMsgGCToServerIngameEventDataOraclePA() {
    *this = ::std::move(from);
  }

  inline CMsgGCToServerIngameEventDataOraclePA& operator=(CMsgGCToServerIngameEventDataOraclePA&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToServerIngameEventDataOraclePA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToServerIngameEventDataOraclePA* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToServerIngameEventDataOraclePA*>(
               &_CMsgGCToServerIngameEventDataOraclePA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  void Swap(CMsgGCToServerIngameEventDataOraclePA* other);
  friend void swap(CMsgGCToServerIngameEventDataOraclePA& a, CMsgGCToServerIngameEventDataOraclePA& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToServerIngameEventDataOraclePA* New() const final {
    return CreateMaybeMessage<CMsgGCToServerIngameEventDataOraclePA>(nullptr);
  }

  CMsgGCToServerIngameEventDataOraclePA* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToServerIngameEventDataOraclePA>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToServerIngameEventDataOraclePA& from);
  void MergeFrom(const CMsgGCToServerIngameEventDataOraclePA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToServerIngameEventDataOraclePA* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 target_hero_ids = 1;
  int target_hero_ids_size() const;
  void clear_target_hero_ids();
  static const int kTargetHeroIdsFieldNumber = 1;
  ::google::protobuf::uint32 target_hero_ids(int index) const;
  void set_target_hero_ids(int index, ::google::protobuf::uint32 value);
  void add_target_hero_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      target_hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_target_hero_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToServerIngameEventDataOraclePA)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > target_hero_ids_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCKillSummaries_KillSummary final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCKillSummaries.KillSummary) */ {
 public:
  CMsgServerToGCKillSummaries_KillSummary();
  virtual ~CMsgServerToGCKillSummaries_KillSummary();

  CMsgServerToGCKillSummaries_KillSummary(const CMsgServerToGCKillSummaries_KillSummary& from);

  inline CMsgServerToGCKillSummaries_KillSummary& operator=(const CMsgServerToGCKillSummaries_KillSummary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCKillSummaries_KillSummary(CMsgServerToGCKillSummaries_KillSummary&& from) noexcept
    : CMsgServerToGCKillSummaries_KillSummary() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCKillSummaries_KillSummary& operator=(CMsgServerToGCKillSummaries_KillSummary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCKillSummaries_KillSummary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCKillSummaries_KillSummary* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCKillSummaries_KillSummary*>(
               &_CMsgServerToGCKillSummaries_KillSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  void Swap(CMsgServerToGCKillSummaries_KillSummary* other);
  friend void swap(CMsgServerToGCKillSummaries_KillSummary& a, CMsgServerToGCKillSummaries_KillSummary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCKillSummaries_KillSummary* New() const final {
    return CreateMaybeMessage<CMsgServerToGCKillSummaries_KillSummary>(nullptr);
  }

  CMsgServerToGCKillSummaries_KillSummary* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCKillSummaries_KillSummary>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCKillSummaries_KillSummary& from);
  void MergeFrom(const CMsgServerToGCKillSummaries_KillSummary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCKillSummaries_KillSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 killer_hero_id = 1;
  bool has_killer_hero_id() const;
  void clear_killer_hero_id();
  static const int kKillerHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 killer_hero_id() const;
  void set_killer_hero_id(::google::protobuf::uint32 value);

  // optional uint32 victim_hero_id = 2;
  bool has_victim_hero_id() const;
  void clear_victim_hero_id();
  static const int kVictimHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 victim_hero_id() const;
  void set_victim_hero_id(::google::protobuf::uint32 value);

  // optional uint32 kill_count = 3;
  bool has_kill_count() const;
  void clear_kill_count();
  static const int kKillCountFieldNumber = 3;
  ::google::protobuf::uint32 kill_count() const;
  void set_kill_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCKillSummaries.KillSummary)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 killer_hero_id_;
  ::google::protobuf::uint32 victim_hero_id_;
  ::google::protobuf::uint32 kill_count_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCKillSummaries final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCKillSummaries) */ {
 public:
  CMsgServerToGCKillSummaries();
  virtual ~CMsgServerToGCKillSummaries();

  CMsgServerToGCKillSummaries(const CMsgServerToGCKillSummaries& from);

  inline CMsgServerToGCKillSummaries& operator=(const CMsgServerToGCKillSummaries& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCKillSummaries(CMsgServerToGCKillSummaries&& from) noexcept
    : CMsgServerToGCKillSummaries() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCKillSummaries& operator=(CMsgServerToGCKillSummaries&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCKillSummaries& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCKillSummaries* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCKillSummaries*>(
               &_CMsgServerToGCKillSummaries_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  void Swap(CMsgServerToGCKillSummaries* other);
  friend void swap(CMsgServerToGCKillSummaries& a, CMsgServerToGCKillSummaries& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCKillSummaries* New() const final {
    return CreateMaybeMessage<CMsgServerToGCKillSummaries>(nullptr);
  }

  CMsgServerToGCKillSummaries* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCKillSummaries>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCKillSummaries& from);
  void MergeFrom(const CMsgServerToGCKillSummaries& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCKillSummaries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCKillSummaries_KillSummary KillSummary;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerToGCKillSummaries.KillSummary summaries = 2;
  int summaries_size() const;
  void clear_summaries();
  static const int kSummariesFieldNumber = 2;
  ::proto::dota::CMsgServerToGCKillSummaries_KillSummary* mutable_summaries(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCKillSummaries_KillSummary >*
      mutable_summaries();
  const ::proto::dota::CMsgServerToGCKillSummaries_KillSummary& summaries(int index) const;
  ::proto::dota::CMsgServerToGCKillSummaries_KillSummary* add_summaries();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCKillSummaries_KillSummary >&
      summaries() const;

  // optional uint32 ingameevent_id = 1;
  bool has_ingameevent_id() const;
  void clear_ingameevent_id();
  static const int kIngameeventIdFieldNumber = 1;
  ::google::protobuf::uint32 ingameevent_id() const;
  void set_ingameevent_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCKillSummaries)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCKillSummaries_KillSummary > summaries_;
  ::google::protobuf::uint32 ingameevent_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToServerPredictionResult_Prediction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToServerPredictionResult.Prediction) */ {
 public:
  CMsgGCToServerPredictionResult_Prediction();
  virtual ~CMsgGCToServerPredictionResult_Prediction();

  CMsgGCToServerPredictionResult_Prediction(const CMsgGCToServerPredictionResult_Prediction& from);

  inline CMsgGCToServerPredictionResult_Prediction& operator=(const CMsgGCToServerPredictionResult_Prediction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToServerPredictionResult_Prediction(CMsgGCToServerPredictionResult_Prediction&& from) noexcept
    : CMsgGCToServerPredictionResult_Prediction() {
    *this = ::std::move(from);
  }

  inline CMsgGCToServerPredictionResult_Prediction& operator=(CMsgGCToServerPredictionResult_Prediction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToServerPredictionResult_Prediction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToServerPredictionResult_Prediction* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToServerPredictionResult_Prediction*>(
               &_CMsgGCToServerPredictionResult_Prediction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  void Swap(CMsgGCToServerPredictionResult_Prediction* other);
  friend void swap(CMsgGCToServerPredictionResult_Prediction& a, CMsgGCToServerPredictionResult_Prediction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToServerPredictionResult_Prediction* New() const final {
    return CreateMaybeMessage<CMsgGCToServerPredictionResult_Prediction>(nullptr);
  }

  CMsgGCToServerPredictionResult_Prediction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToServerPredictionResult_Prediction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToServerPredictionResult_Prediction& from);
  void MergeFrom(const CMsgGCToServerPredictionResult_Prediction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToServerPredictionResult_Prediction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToServerPredictionResult_Prediction_EResult EResult;
  static const EResult k_eResult_ItemGranted =
    CMsgGCToServerPredictionResult_Prediction_EResult_k_eResult_ItemGranted;
  static const EResult k_eResult_Destroyed =
    CMsgGCToServerPredictionResult_Prediction_EResult_k_eResult_Destroyed;
  static inline bool EResult_IsValid(int value) {
    return CMsgGCToServerPredictionResult_Prediction_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgGCToServerPredictionResult_Prediction_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgGCToServerPredictionResult_Prediction_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgGCToServerPredictionResult_Prediction_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgGCToServerPredictionResult_Prediction_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgGCToServerPredictionResult_Prediction_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgGCToServerPredictionResult_Prediction_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 granted_item_defs = 6;
  int granted_item_defs_size() const;
  void clear_granted_item_defs();
  static const int kGrantedItemDefsFieldNumber = 6;
  ::google::protobuf::uint32 granted_item_defs(int index) const;
  void set_granted_item_defs(int index, ::google::protobuf::uint32 value);
  void add_granted_item_defs(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      granted_item_defs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_granted_item_defs();

  // optional uint32 item_def = 1;
  bool has_item_def() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 1;
  ::google::protobuf::uint32 item_def() const;
  void set_item_def(::google::protobuf::uint32 value);

  // optional uint32 num_correct = 2;
  bool has_num_correct() const;
  void clear_num_correct();
  static const int kNumCorrectFieldNumber = 2;
  ::google::protobuf::uint32 num_correct() const;
  void set_num_correct(::google::protobuf::uint32 value);

  // optional uint32 num_fails = 3;
  bool has_num_fails() const;
  void clear_num_fails();
  static const int kNumFailsFieldNumber = 3;
  ::google::protobuf::uint32 num_fails() const;
  void set_num_fails(::google::protobuf::uint32 value);

  // optional .proto.dota.CMsgGCToServerPredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::proto::dota::CMsgGCToServerPredictionResult_Prediction_EResult result() const;
  void set_result(::proto::dota::CMsgGCToServerPredictionResult_Prediction_EResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToServerPredictionResult.Prediction)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > granted_item_defs_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 num_correct_;
  ::google::protobuf::uint32 num_fails_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToServerPredictionResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToServerPredictionResult) */ {
 public:
  CMsgGCToServerPredictionResult();
  virtual ~CMsgGCToServerPredictionResult();

  CMsgGCToServerPredictionResult(const CMsgGCToServerPredictionResult& from);

  inline CMsgGCToServerPredictionResult& operator=(const CMsgGCToServerPredictionResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToServerPredictionResult(CMsgGCToServerPredictionResult&& from) noexcept
    : CMsgGCToServerPredictionResult() {
    *this = ::std::move(from);
  }

  inline CMsgGCToServerPredictionResult& operator=(CMsgGCToServerPredictionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToServerPredictionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToServerPredictionResult* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToServerPredictionResult*>(
               &_CMsgGCToServerPredictionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  void Swap(CMsgGCToServerPredictionResult* other);
  friend void swap(CMsgGCToServerPredictionResult& a, CMsgGCToServerPredictionResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToServerPredictionResult* New() const final {
    return CreateMaybeMessage<CMsgGCToServerPredictionResult>(nullptr);
  }

  CMsgGCToServerPredictionResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToServerPredictionResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToServerPredictionResult& from);
  void MergeFrom(const CMsgGCToServerPredictionResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToServerPredictionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgGCToServerPredictionResult_Prediction Prediction;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToServerPredictionResult.Prediction predictions = 4;
  int predictions_size() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 4;
  ::proto::dota::CMsgGCToServerPredictionResult_Prediction* mutable_predictions(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToServerPredictionResult_Prediction >*
      mutable_predictions();
  const ::proto::dota::CMsgGCToServerPredictionResult_Prediction& predictions(int index) const;
  ::proto::dota::CMsgGCToServerPredictionResult_Prediction* add_predictions();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToServerPredictionResult_Prediction >&
      predictions() const;

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional bool correct = 3;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 3;
  bool correct() const;
  void set_correct(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToServerPredictionResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToServerPredictionResult_Prediction > predictions_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 account_id_;
  bool correct_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCLockCharmTrading final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCLockCharmTrading) */ {
 public:
  CMsgServerToGCLockCharmTrading();
  virtual ~CMsgServerToGCLockCharmTrading();

  CMsgServerToGCLockCharmTrading(const CMsgServerToGCLockCharmTrading& from);

  inline CMsgServerToGCLockCharmTrading& operator=(const CMsgServerToGCLockCharmTrading& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCLockCharmTrading(CMsgServerToGCLockCharmTrading&& from) noexcept
    : CMsgServerToGCLockCharmTrading() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCLockCharmTrading& operator=(CMsgServerToGCLockCharmTrading&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCLockCharmTrading& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCLockCharmTrading* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCLockCharmTrading*>(
               &_CMsgServerToGCLockCharmTrading_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  void Swap(CMsgServerToGCLockCharmTrading* other);
  friend void swap(CMsgServerToGCLockCharmTrading& a, CMsgServerToGCLockCharmTrading& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCLockCharmTrading* New() const final {
    return CreateMaybeMessage<CMsgServerToGCLockCharmTrading>(nullptr);
  }

  CMsgServerToGCLockCharmTrading* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCLockCharmTrading>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCLockCharmTrading& from);
  void MergeFrom(const CMsgServerToGCLockCharmTrading& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCLockCharmTrading* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 2;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCLockCharmTrading)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutUpdatePlayerChallenge_Challenge final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge) */ {
 public:
  CMsgSignOutUpdatePlayerChallenge_Challenge();
  virtual ~CMsgSignOutUpdatePlayerChallenge_Challenge();

  CMsgSignOutUpdatePlayerChallenge_Challenge(const CMsgSignOutUpdatePlayerChallenge_Challenge& from);

  inline CMsgSignOutUpdatePlayerChallenge_Challenge& operator=(const CMsgSignOutUpdatePlayerChallenge_Challenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutUpdatePlayerChallenge_Challenge(CMsgSignOutUpdatePlayerChallenge_Challenge&& from) noexcept
    : CMsgSignOutUpdatePlayerChallenge_Challenge() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutUpdatePlayerChallenge_Challenge& operator=(CMsgSignOutUpdatePlayerChallenge_Challenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutUpdatePlayerChallenge_Challenge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutUpdatePlayerChallenge_Challenge* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutUpdatePlayerChallenge_Challenge*>(
               &_CMsgSignOutUpdatePlayerChallenge_Challenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  void Swap(CMsgSignOutUpdatePlayerChallenge_Challenge* other);
  friend void swap(CMsgSignOutUpdatePlayerChallenge_Challenge& a, CMsgSignOutUpdatePlayerChallenge_Challenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutUpdatePlayerChallenge_Challenge* New() const final {
    return CreateMaybeMessage<CMsgSignOutUpdatePlayerChallenge_Challenge>(nullptr);
  }

  CMsgSignOutUpdatePlayerChallenge_Challenge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutUpdatePlayerChallenge_Challenge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutUpdatePlayerChallenge_Challenge& from);
  void MergeFrom(const CMsgSignOutUpdatePlayerChallenge_Challenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutUpdatePlayerChallenge_Challenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 slot_id = 2;
  bool has_slot_id() const;
  void clear_slot_id();
  static const int kSlotIdFieldNumber = 2;
  ::google::protobuf::uint32 slot_id() const;
  void set_slot_id(::google::protobuf::uint32 value);

  // optional uint32 sequence_id = 3;
  bool has_sequence_id() const;
  void clear_sequence_id();
  static const int kSequenceIdFieldNumber = 3;
  ::google::protobuf::uint32 sequence_id() const;
  void set_sequence_id(::google::protobuf::uint32 value);

  // optional uint32 progress = 4;
  bool has_progress() const;
  void clear_progress();
  static const int kProgressFieldNumber = 4;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // optional uint32 challenge_rank = 5;
  bool has_challenge_rank() const;
  void clear_challenge_rank();
  static const int kChallengeRankFieldNumber = 5;
  ::google::protobuf::uint32 challenge_rank() const;
  void set_challenge_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int event_id_;
  ::google::protobuf::uint32 slot_id_;
  ::google::protobuf::uint32 sequence_id_;
  ::google::protobuf::uint32 progress_;
  ::google::protobuf::uint32 challenge_rank_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutUpdatePlayerChallenge final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutUpdatePlayerChallenge) */ {
 public:
  CMsgSignOutUpdatePlayerChallenge();
  virtual ~CMsgSignOutUpdatePlayerChallenge();

  CMsgSignOutUpdatePlayerChallenge(const CMsgSignOutUpdatePlayerChallenge& from);

  inline CMsgSignOutUpdatePlayerChallenge& operator=(const CMsgSignOutUpdatePlayerChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutUpdatePlayerChallenge(CMsgSignOutUpdatePlayerChallenge&& from) noexcept
    : CMsgSignOutUpdatePlayerChallenge() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutUpdatePlayerChallenge& operator=(CMsgSignOutUpdatePlayerChallenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutUpdatePlayerChallenge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutUpdatePlayerChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutUpdatePlayerChallenge*>(
               &_CMsgSignOutUpdatePlayerChallenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  void Swap(CMsgSignOutUpdatePlayerChallenge* other);
  friend void swap(CMsgSignOutUpdatePlayerChallenge& a, CMsgSignOutUpdatePlayerChallenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutUpdatePlayerChallenge* New() const final {
    return CreateMaybeMessage<CMsgSignOutUpdatePlayerChallenge>(nullptr);
  }

  CMsgSignOutUpdatePlayerChallenge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutUpdatePlayerChallenge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutUpdatePlayerChallenge& from);
  void MergeFrom(const CMsgSignOutUpdatePlayerChallenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutUpdatePlayerChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSignOutUpdatePlayerChallenge_Challenge Challenge;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge completed = 2;
  int completed_size() const;
  void clear_completed();
  static const int kCompletedFieldNumber = 2;
  ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge* mutable_completed(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge >*
      mutable_completed();
  const ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge& completed(int index) const;
  ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge* add_completed();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge >&
      completed() const;

  // repeated .proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge rerolled = 3;
  int rerolled_size() const;
  void clear_rerolled();
  static const int kRerolledFieldNumber = 3;
  ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge* mutable_rerolled(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge >*
      mutable_rerolled();
  const ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge& rerolled(int index) const;
  ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge* add_rerolled();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge >&
      rerolled() const;

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 5;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 5;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint64 match_id = 4;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 4;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutUpdatePlayerChallenge)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge > completed_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge > rerolled_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint64 match_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCRerollPlayerChallenge final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCRerollPlayerChallenge) */ {
 public:
  CMsgServerToGCRerollPlayerChallenge();
  virtual ~CMsgServerToGCRerollPlayerChallenge();

  CMsgServerToGCRerollPlayerChallenge(const CMsgServerToGCRerollPlayerChallenge& from);

  inline CMsgServerToGCRerollPlayerChallenge& operator=(const CMsgServerToGCRerollPlayerChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCRerollPlayerChallenge(CMsgServerToGCRerollPlayerChallenge&& from) noexcept
    : CMsgServerToGCRerollPlayerChallenge() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCRerollPlayerChallenge& operator=(CMsgServerToGCRerollPlayerChallenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCRerollPlayerChallenge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCRerollPlayerChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCRerollPlayerChallenge*>(
               &_CMsgServerToGCRerollPlayerChallenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  void Swap(CMsgServerToGCRerollPlayerChallenge* other);
  friend void swap(CMsgServerToGCRerollPlayerChallenge& a, CMsgServerToGCRerollPlayerChallenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCRerollPlayerChallenge* New() const final {
    return CreateMaybeMessage<CMsgServerToGCRerollPlayerChallenge>(nullptr);
  }

  CMsgServerToGCRerollPlayerChallenge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCRerollPlayerChallenge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCRerollPlayerChallenge& from);
  void MergeFrom(const CMsgServerToGCRerollPlayerChallenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCRerollPlayerChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCRerollPlayerChallenge reroll_msg = 2;
  bool has_reroll_msg() const;
  void clear_reroll_msg();
  static const int kRerollMsgFieldNumber = 2;
  const ::proto::dota::CMsgClientToGCRerollPlayerChallenge& reroll_msg() const;
  ::proto::dota::CMsgClientToGCRerollPlayerChallenge* release_reroll_msg();
  ::proto::dota::CMsgClientToGCRerollPlayerChallenge* mutable_reroll_msg();
  void set_allocated_reroll_msg(::proto::dota::CMsgClientToGCRerollPlayerChallenge* reroll_msg);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCRerollPlayerChallenge)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgClientToGCRerollPlayerChallenge* reroll_msg_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCHoldEventPoints_HoldRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCHoldEventPoints.HoldRequest) */ {
 public:
  CMsgServerToGCHoldEventPoints_HoldRequest();
  virtual ~CMsgServerToGCHoldEventPoints_HoldRequest();

  CMsgServerToGCHoldEventPoints_HoldRequest(const CMsgServerToGCHoldEventPoints_HoldRequest& from);

  inline CMsgServerToGCHoldEventPoints_HoldRequest& operator=(const CMsgServerToGCHoldEventPoints_HoldRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCHoldEventPoints_HoldRequest(CMsgServerToGCHoldEventPoints_HoldRequest&& from) noexcept
    : CMsgServerToGCHoldEventPoints_HoldRequest() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCHoldEventPoints_HoldRequest& operator=(CMsgServerToGCHoldEventPoints_HoldRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCHoldEventPoints_HoldRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCHoldEventPoints_HoldRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCHoldEventPoints_HoldRequest*>(
               &_CMsgServerToGCHoldEventPoints_HoldRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  void Swap(CMsgServerToGCHoldEventPoints_HoldRequest* other);
  friend void swap(CMsgServerToGCHoldEventPoints_HoldRequest& a, CMsgServerToGCHoldEventPoints_HoldRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCHoldEventPoints_HoldRequest* New() const final {
    return CreateMaybeMessage<CMsgServerToGCHoldEventPoints_HoldRequest>(nullptr);
  }

  CMsgServerToGCHoldEventPoints_HoldRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCHoldEventPoints_HoldRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCHoldEventPoints_HoldRequest& from);
  void MergeFrom(const CMsgServerToGCHoldEventPoints_HoldRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCHoldEventPoints_HoldRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 points_held = 2;
  bool has_points_held() const;
  void clear_points_held();
  static const int kPointsHeldFieldNumber = 2;
  ::google::protobuf::uint32 points_held() const;
  void set_points_held(::google::protobuf::uint32 value);

  // optional uint32 premium_held = 3;
  bool has_premium_held() const;
  void clear_premium_held();
  static const int kPremiumHeldFieldNumber = 3;
  ::google::protobuf::uint32 premium_held() const;
  void set_premium_held(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCHoldEventPoints.HoldRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 points_held_;
  ::google::protobuf::uint32 premium_held_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCHoldEventPoints final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCHoldEventPoints) */ {
 public:
  CMsgServerToGCHoldEventPoints();
  virtual ~CMsgServerToGCHoldEventPoints();

  CMsgServerToGCHoldEventPoints(const CMsgServerToGCHoldEventPoints& from);

  inline CMsgServerToGCHoldEventPoints& operator=(const CMsgServerToGCHoldEventPoints& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCHoldEventPoints(CMsgServerToGCHoldEventPoints&& from) noexcept
    : CMsgServerToGCHoldEventPoints() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCHoldEventPoints& operator=(CMsgServerToGCHoldEventPoints&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCHoldEventPoints& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCHoldEventPoints* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCHoldEventPoints*>(
               &_CMsgServerToGCHoldEventPoints_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  void Swap(CMsgServerToGCHoldEventPoints* other);
  friend void swap(CMsgServerToGCHoldEventPoints& a, CMsgServerToGCHoldEventPoints& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCHoldEventPoints* New() const final {
    return CreateMaybeMessage<CMsgServerToGCHoldEventPoints>(nullptr);
  }

  CMsgServerToGCHoldEventPoints* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCHoldEventPoints>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCHoldEventPoints& from);
  void MergeFrom(const CMsgServerToGCHoldEventPoints& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCHoldEventPoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCHoldEventPoints_HoldRequest HoldRequest;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerToGCHoldEventPoints.HoldRequest holds = 1;
  int holds_size() const;
  void clear_holds();
  static const int kHoldsFieldNumber = 1;
  ::proto::dota::CMsgServerToGCHoldEventPoints_HoldRequest* mutable_holds(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCHoldEventPoints_HoldRequest >*
      mutable_holds();
  const ::proto::dota::CMsgServerToGCHoldEventPoints_HoldRequest& holds(int index) const;
  ::proto::dota::CMsgServerToGCHoldEventPoints_HoldRequest* add_holds();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCHoldEventPoints_HoldRequest >&
      holds() const;

  // optional uint64 hold_key = 3;
  bool has_hold_key() const;
  void clear_hold_key();
  static const int kHoldKeyFieldNumber = 3;
  ::google::protobuf::uint64 hold_key() const;
  void set_hold_key(::google::protobuf::uint64 value);

  // optional .proto.dota.EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 hold_until = 4;
  bool has_hold_until() const;
  void clear_hold_until();
  static const int kHoldUntilFieldNumber = 4;
  ::google::protobuf::uint32 hold_until() const;
  void set_hold_until(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCHoldEventPoints)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCHoldEventPoints_HoldRequest > holds_;
  ::google::protobuf::uint64 hold_key_;
  int event_id_;
  ::google::protobuf::uint32 hold_until_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutReleaseEventPointHolds final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutReleaseEventPointHolds) */ {
 public:
  CMsgSignOutReleaseEventPointHolds();
  virtual ~CMsgSignOutReleaseEventPointHolds();

  CMsgSignOutReleaseEventPointHolds(const CMsgSignOutReleaseEventPointHolds& from);

  inline CMsgSignOutReleaseEventPointHolds& operator=(const CMsgSignOutReleaseEventPointHolds& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutReleaseEventPointHolds(CMsgSignOutReleaseEventPointHolds&& from) noexcept
    : CMsgSignOutReleaseEventPointHolds() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutReleaseEventPointHolds& operator=(CMsgSignOutReleaseEventPointHolds&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutReleaseEventPointHolds& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutReleaseEventPointHolds* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutReleaseEventPointHolds*>(
               &_CMsgSignOutReleaseEventPointHolds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  void Swap(CMsgSignOutReleaseEventPointHolds* other);
  friend void swap(CMsgSignOutReleaseEventPointHolds& a, CMsgSignOutReleaseEventPointHolds& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutReleaseEventPointHolds* New() const final {
    return CreateMaybeMessage<CMsgSignOutReleaseEventPointHolds>(nullptr);
  }

  CMsgSignOutReleaseEventPointHolds* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutReleaseEventPointHolds>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutReleaseEventPointHolds& from);
  void MergeFrom(const CMsgSignOutReleaseEventPointHolds& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutReleaseEventPointHolds* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // optional uint64 hold_key = 3;
  bool has_hold_key() const;
  void clear_hold_key();
  static const int kHoldKeyFieldNumber = 3;
  ::google::protobuf::uint64 hold_key() const;
  void set_hold_key(::google::protobuf::uint64 value);

  // optional .proto.dota.EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutReleaseEventPointHolds)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  ::google::protobuf::uint64 hold_key_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutWagerStats_Player final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutWagerStats.Player) */ {
 public:
  CMsgSignOutWagerStats_Player();
  virtual ~CMsgSignOutWagerStats_Player();

  CMsgSignOutWagerStats_Player(const CMsgSignOutWagerStats_Player& from);

  inline CMsgSignOutWagerStats_Player& operator=(const CMsgSignOutWagerStats_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutWagerStats_Player(CMsgSignOutWagerStats_Player&& from) noexcept
    : CMsgSignOutWagerStats_Player() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutWagerStats_Player& operator=(CMsgSignOutWagerStats_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutWagerStats_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutWagerStats_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutWagerStats_Player*>(
               &_CMsgSignOutWagerStats_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  void Swap(CMsgSignOutWagerStats_Player* other);
  friend void swap(CMsgSignOutWagerStats_Player& a, CMsgSignOutWagerStats_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutWagerStats_Player* New() const final {
    return CreateMaybeMessage<CMsgSignOutWagerStats_Player>(nullptr);
  }

  CMsgSignOutWagerStats_Player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutWagerStats_Player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutWagerStats_Player& from);
  void MergeFrom(const CMsgSignOutWagerStats_Player& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutWagerStats_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 winnings = 2;
  bool has_winnings() const;
  void clear_winnings();
  static const int kWinningsFieldNumber = 2;
  ::google::protobuf::uint32 winnings() const;
  void set_winnings(::google::protobuf::uint32 value);

  // optional uint32 max_wager = 3;
  bool has_max_wager() const;
  void clear_max_wager();
  static const int kMaxWagerFieldNumber = 3;
  ::google::protobuf::uint32 max_wager() const;
  void set_max_wager(::google::protobuf::uint32 value);

  // optional uint32 wager = 4;
  bool has_wager() const;
  void clear_wager();
  static const int kWagerFieldNumber = 4;
  ::google::protobuf::uint32 wager() const;
  void set_wager(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutWagerStats.Player)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 winnings_;
  ::google::protobuf::uint32 max_wager_;
  ::google::protobuf::uint32 wager_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutWagerStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutWagerStats) */ {
 public:
  CMsgSignOutWagerStats();
  virtual ~CMsgSignOutWagerStats();

  CMsgSignOutWagerStats(const CMsgSignOutWagerStats& from);

  inline CMsgSignOutWagerStats& operator=(const CMsgSignOutWagerStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutWagerStats(CMsgSignOutWagerStats&& from) noexcept
    : CMsgSignOutWagerStats() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutWagerStats& operator=(CMsgSignOutWagerStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutWagerStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutWagerStats* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutWagerStats*>(
               &_CMsgSignOutWagerStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  void Swap(CMsgSignOutWagerStats* other);
  friend void swap(CMsgSignOutWagerStats& a, CMsgSignOutWagerStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutWagerStats* New() const final {
    return CreateMaybeMessage<CMsgSignOutWagerStats>(nullptr);
  }

  CMsgSignOutWagerStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutWagerStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutWagerStats& from);
  void MergeFrom(const CMsgSignOutWagerStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutWagerStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSignOutWagerStats_Player Player;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgSignOutWagerStats.Player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  ::proto::dota::CMsgSignOutWagerStats_Player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutWagerStats_Player >*
      mutable_players();
  const ::proto::dota::CMsgSignOutWagerStats_Player& players(int index) const;
  ::proto::dota::CMsgSignOutWagerStats_Player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutWagerStats_Player >&
      players() const;

  // optional .proto.dota.EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutWagerStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutWagerStats_Player > players_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSpendWager_Player final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSpendWager.Player) */ {
 public:
  CMsgSpendWager_Player();
  virtual ~CMsgSpendWager_Player();

  CMsgSpendWager_Player(const CMsgSpendWager_Player& from);

  inline CMsgSpendWager_Player& operator=(const CMsgSpendWager_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSpendWager_Player(CMsgSpendWager_Player&& from) noexcept
    : CMsgSpendWager_Player() {
    *this = ::std::move(from);
  }

  inline CMsgSpendWager_Player& operator=(CMsgSpendWager_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSpendWager_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSpendWager_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgSpendWager_Player*>(
               &_CMsgSpendWager_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  void Swap(CMsgSpendWager_Player* other);
  friend void swap(CMsgSpendWager_Player& a, CMsgSpendWager_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSpendWager_Player* New() const final {
    return CreateMaybeMessage<CMsgSpendWager_Player>(nullptr);
  }

  CMsgSpendWager_Player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSpendWager_Player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSpendWager_Player& from);
  void MergeFrom(const CMsgSpendWager_Player& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSpendWager_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 wager = 2;
  bool has_wager() const;
  void clear_wager();
  static const int kWagerFieldNumber = 2;
  ::google::protobuf::uint32 wager() const;
  void set_wager(::google::protobuf::uint32 value);

  // optional uint64 wager_token_item_id = 3;
  bool has_wager_token_item_id() const;
  void clear_wager_token_item_id();
  static const int kWagerTokenItemIdFieldNumber = 3;
  ::google::protobuf::uint64 wager_token_item_id() const;
  void set_wager_token_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSpendWager.Player)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 wager_;
  ::google::protobuf::uint64 wager_token_item_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSpendWager final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSpendWager) */ {
 public:
  CMsgSpendWager();
  virtual ~CMsgSpendWager();

  CMsgSpendWager(const CMsgSpendWager& from);

  inline CMsgSpendWager& operator=(const CMsgSpendWager& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSpendWager(CMsgSpendWager&& from) noexcept
    : CMsgSpendWager() {
    *this = ::std::move(from);
  }

  inline CMsgSpendWager& operator=(CMsgSpendWager&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSpendWager& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSpendWager* internal_default_instance() {
    return reinterpret_cast<const CMsgSpendWager*>(
               &_CMsgSpendWager_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  void Swap(CMsgSpendWager* other);
  friend void swap(CMsgSpendWager& a, CMsgSpendWager& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSpendWager* New() const final {
    return CreateMaybeMessage<CMsgSpendWager>(nullptr);
  }

  CMsgSpendWager* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSpendWager>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSpendWager& from);
  void MergeFrom(const CMsgSpendWager& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSpendWager* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSpendWager_Player Player;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgSpendWager.Player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  ::proto::dota::CMsgSpendWager_Player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSpendWager_Player >*
      mutable_players();
  const ::proto::dota::CMsgSpendWager_Player& players(int index) const;
  ::proto::dota::CMsgSpendWager_Player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSpendWager_Player >&
      players() const;

  // optional .proto.dota.EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint64 match_id = 4;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 4;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint64 server_steam_id = 5;
  bool has_server_steam_id() const;
  void clear_server_steam_id();
  static const int kServerSteamIdFieldNumber = 5;
  ::google::protobuf::uint64 server_steam_id() const;
  void set_server_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSpendWager)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSpendWager_Player > players_;
  int event_id_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint64 server_steam_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutXPCoins_Player final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutXPCoins.Player) */ {
 public:
  CMsgSignOutXPCoins_Player();
  virtual ~CMsgSignOutXPCoins_Player();

  CMsgSignOutXPCoins_Player(const CMsgSignOutXPCoins_Player& from);

  inline CMsgSignOutXPCoins_Player& operator=(const CMsgSignOutXPCoins_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutXPCoins_Player(CMsgSignOutXPCoins_Player&& from) noexcept
    : CMsgSignOutXPCoins_Player() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutXPCoins_Player& operator=(CMsgSignOutXPCoins_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutXPCoins_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutXPCoins_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutXPCoins_Player*>(
               &_CMsgSignOutXPCoins_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  void Swap(CMsgSignOutXPCoins_Player* other);
  friend void swap(CMsgSignOutXPCoins_Player& a, CMsgSignOutXPCoins_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutXPCoins_Player* New() const final {
    return CreateMaybeMessage<CMsgSignOutXPCoins_Player>(nullptr);
  }

  CMsgSignOutXPCoins_Player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutXPCoins_Player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutXPCoins_Player& from);
  void MergeFrom(const CMsgSignOutXPCoins_Player& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutXPCoins_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 xp_gained = 2;
  bool has_xp_gained() const;
  void clear_xp_gained();
  static const int kXpGainedFieldNumber = 2;
  ::google::protobuf::uint32 xp_gained() const;
  void set_xp_gained(::google::protobuf::uint32 value);

  // optional uint64 wager_token_item_id = 4;
  bool has_wager_token_item_id() const;
  void clear_wager_token_item_id();
  static const int kWagerTokenItemIdFieldNumber = 4;
  ::google::protobuf::uint64 wager_token_item_id() const;
  void set_wager_token_item_id(::google::protobuf::uint64 value);

  // optional uint32 coins_spent = 3;
  bool has_coins_spent() const;
  void clear_coins_spent();
  static const int kCoinsSpentFieldNumber = 3;
  ::google::protobuf::uint32 coins_spent() const;
  void set_coins_spent(::google::protobuf::uint32 value);

  // optional uint32 rank_wager = 5;
  bool has_rank_wager() const;
  void clear_rank_wager();
  static const int kRankWagerFieldNumber = 5;
  ::google::protobuf::uint32 rank_wager() const;
  void set_rank_wager(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutXPCoins.Player)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 xp_gained_;
  ::google::protobuf::uint64 wager_token_item_id_;
  ::google::protobuf::uint32 coins_spent_;
  ::google::protobuf::uint32 rank_wager_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutXPCoins final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutXPCoins) */ {
 public:
  CMsgSignOutXPCoins();
  virtual ~CMsgSignOutXPCoins();

  CMsgSignOutXPCoins(const CMsgSignOutXPCoins& from);

  inline CMsgSignOutXPCoins& operator=(const CMsgSignOutXPCoins& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutXPCoins(CMsgSignOutXPCoins&& from) noexcept
    : CMsgSignOutXPCoins() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutXPCoins& operator=(CMsgSignOutXPCoins&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutXPCoins& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutXPCoins* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutXPCoins*>(
               &_CMsgSignOutXPCoins_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  void Swap(CMsgSignOutXPCoins* other);
  friend void swap(CMsgSignOutXPCoins& a, CMsgSignOutXPCoins& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutXPCoins* New() const final {
    return CreateMaybeMessage<CMsgSignOutXPCoins>(nullptr);
  }

  CMsgSignOutXPCoins* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutXPCoins>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutXPCoins& from);
  void MergeFrom(const CMsgSignOutXPCoins& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutXPCoins* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSignOutXPCoins_Player Player;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgSignOutXPCoins.Player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  ::proto::dota::CMsgSignOutXPCoins_Player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutXPCoins_Player >*
      mutable_players();
  const ::proto::dota::CMsgSignOutXPCoins_Player& players(int index) const;
  ::proto::dota::CMsgSignOutXPCoins_Player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutXPCoins_Player >&
      players() const;

  // optional uint64 match_id = 3;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 3;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional .proto.dota.EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutXPCoins)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutXPCoins_Player > players_;
  ::google::protobuf::uint64 match_id_;
  int event_id_;
  ::google::protobuf::uint32 timestamp_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutCommunityGoalProgress_EventGoalIncrement final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutCommunityGoalProgress.EventGoalIncrement) */ {
 public:
  CMsgSignOutCommunityGoalProgress_EventGoalIncrement();
  virtual ~CMsgSignOutCommunityGoalProgress_EventGoalIncrement();

  CMsgSignOutCommunityGoalProgress_EventGoalIncrement(const CMsgSignOutCommunityGoalProgress_EventGoalIncrement& from);

  inline CMsgSignOutCommunityGoalProgress_EventGoalIncrement& operator=(const CMsgSignOutCommunityGoalProgress_EventGoalIncrement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutCommunityGoalProgress_EventGoalIncrement(CMsgSignOutCommunityGoalProgress_EventGoalIncrement&& from) noexcept
    : CMsgSignOutCommunityGoalProgress_EventGoalIncrement() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutCommunityGoalProgress_EventGoalIncrement& operator=(CMsgSignOutCommunityGoalProgress_EventGoalIncrement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutCommunityGoalProgress_EventGoalIncrement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutCommunityGoalProgress_EventGoalIncrement* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutCommunityGoalProgress_EventGoalIncrement*>(
               &_CMsgSignOutCommunityGoalProgress_EventGoalIncrement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  void Swap(CMsgSignOutCommunityGoalProgress_EventGoalIncrement* other);
  friend void swap(CMsgSignOutCommunityGoalProgress_EventGoalIncrement& a, CMsgSignOutCommunityGoalProgress_EventGoalIncrement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutCommunityGoalProgress_EventGoalIncrement* New() const final {
    return CreateMaybeMessage<CMsgSignOutCommunityGoalProgress_EventGoalIncrement>(nullptr);
  }

  CMsgSignOutCommunityGoalProgress_EventGoalIncrement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutCommunityGoalProgress_EventGoalIncrement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutCommunityGoalProgress_EventGoalIncrement& from);
  void MergeFrom(const CMsgSignOutCommunityGoalProgress_EventGoalIncrement& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutCommunityGoalProgress_EventGoalIncrement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_goal_id = 1;
  bool has_event_goal_id() const;
  void clear_event_goal_id();
  static const int kEventGoalIdFieldNumber = 1;
  ::google::protobuf::uint32 event_goal_id() const;
  void set_event_goal_id(::google::protobuf::uint32 value);

  // optional uint32 increment_amount = 2;
  bool has_increment_amount() const;
  void clear_increment_amount();
  static const int kIncrementAmountFieldNumber = 2;
  ::google::protobuf::uint32 increment_amount() const;
  void set_increment_amount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutCommunityGoalProgress.EventGoalIncrement)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_goal_id_;
  ::google::protobuf::uint32 increment_amount_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgSignOutCommunityGoalProgress final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSignOutCommunityGoalProgress) */ {
 public:
  CMsgSignOutCommunityGoalProgress();
  virtual ~CMsgSignOutCommunityGoalProgress();

  CMsgSignOutCommunityGoalProgress(const CMsgSignOutCommunityGoalProgress& from);

  inline CMsgSignOutCommunityGoalProgress& operator=(const CMsgSignOutCommunityGoalProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSignOutCommunityGoalProgress(CMsgSignOutCommunityGoalProgress&& from) noexcept
    : CMsgSignOutCommunityGoalProgress() {
    *this = ::std::move(from);
  }

  inline CMsgSignOutCommunityGoalProgress& operator=(CMsgSignOutCommunityGoalProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgSignOutCommunityGoalProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSignOutCommunityGoalProgress* internal_default_instance() {
    return reinterpret_cast<const CMsgSignOutCommunityGoalProgress*>(
               &_CMsgSignOutCommunityGoalProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  void Swap(CMsgSignOutCommunityGoalProgress* other);
  friend void swap(CMsgSignOutCommunityGoalProgress& a, CMsgSignOutCommunityGoalProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSignOutCommunityGoalProgress* New() const final {
    return CreateMaybeMessage<CMsgSignOutCommunityGoalProgress>(nullptr);
  }

  CMsgSignOutCommunityGoalProgress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSignOutCommunityGoalProgress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSignOutCommunityGoalProgress& from);
  void MergeFrom(const CMsgSignOutCommunityGoalProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSignOutCommunityGoalProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSignOutCommunityGoalProgress_EventGoalIncrement EventGoalIncrement;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgSignOutCommunityGoalProgress.EventGoalIncrement event_increments = 2;
  int event_increments_size() const;
  void clear_event_increments();
  static const int kEventIncrementsFieldNumber = 2;
  ::proto::dota::CMsgSignOutCommunityGoalProgress_EventGoalIncrement* mutable_event_increments(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutCommunityGoalProgress_EventGoalIncrement >*
      mutable_event_increments();
  const ::proto::dota::CMsgSignOutCommunityGoalProgress_EventGoalIncrement& event_increments(int index) const;
  ::proto::dota::CMsgSignOutCommunityGoalProgress_EventGoalIncrement* add_event_increments();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutCommunityGoalProgress_EventGoalIncrement >&
      event_increments() const;

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSignOutCommunityGoalProgress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutCommunityGoalProgress_EventGoalIncrement > event_increments_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCPostMatchTip final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCPostMatchTip) */ {
 public:
  CMsgServerToGCPostMatchTip();
  virtual ~CMsgServerToGCPostMatchTip();

  CMsgServerToGCPostMatchTip(const CMsgServerToGCPostMatchTip& from);

  inline CMsgServerToGCPostMatchTip& operator=(const CMsgServerToGCPostMatchTip& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCPostMatchTip(CMsgServerToGCPostMatchTip&& from) noexcept
    : CMsgServerToGCPostMatchTip() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCPostMatchTip& operator=(CMsgServerToGCPostMatchTip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCPostMatchTip& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCPostMatchTip* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCPostMatchTip*>(
               &_CMsgServerToGCPostMatchTip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  void Swap(CMsgServerToGCPostMatchTip* other);
  friend void swap(CMsgServerToGCPostMatchTip& a, CMsgServerToGCPostMatchTip& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCPostMatchTip* New() const final {
    return CreateMaybeMessage<CMsgServerToGCPostMatchTip>(nullptr);
  }

  CMsgServerToGCPostMatchTip* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCPostMatchTip>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCPostMatchTip& from);
  void MergeFrom(const CMsgServerToGCPostMatchTip& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCPostMatchTip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 tipper_account_id = 3;
  bool has_tipper_account_id() const;
  void clear_tipper_account_id();
  static const int kTipperAccountIdFieldNumber = 3;
  ::google::protobuf::uint32 tipper_account_id() const;
  void set_tipper_account_id(::google::protobuf::uint32 value);

  // optional uint32 recipient_account_id = 4;
  bool has_recipient_account_id() const;
  void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 4;
  ::google::protobuf::uint32 recipient_account_id() const;
  void set_recipient_account_id(::google::protobuf::uint32 value);

  // optional uint32 tip_amount = 5;
  bool has_tip_amount() const;
  void clear_tip_amount();
  static const int kTipAmountFieldNumber = 5;
  ::google::protobuf::uint32 tip_amount() const;
  void set_tip_amount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCPostMatchTip)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  int event_id_;
  ::google::protobuf::uint32 tipper_account_id_;
  ::google::protobuf::uint32 recipient_account_id_;
  ::google::protobuf::uint32 tip_amount_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCPostMatchTipResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCPostMatchTipResponse) */ {
 public:
  CMsgServerToGCPostMatchTipResponse();
  virtual ~CMsgServerToGCPostMatchTipResponse();

  CMsgServerToGCPostMatchTipResponse(const CMsgServerToGCPostMatchTipResponse& from);

  inline CMsgServerToGCPostMatchTipResponse& operator=(const CMsgServerToGCPostMatchTipResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCPostMatchTipResponse(CMsgServerToGCPostMatchTipResponse&& from) noexcept
    : CMsgServerToGCPostMatchTipResponse() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCPostMatchTipResponse& operator=(CMsgServerToGCPostMatchTipResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCPostMatchTipResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCPostMatchTipResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCPostMatchTipResponse*>(
               &_CMsgServerToGCPostMatchTipResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  void Swap(CMsgServerToGCPostMatchTipResponse* other);
  friend void swap(CMsgServerToGCPostMatchTipResponse& a, CMsgServerToGCPostMatchTipResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCPostMatchTipResponse* New() const final {
    return CreateMaybeMessage<CMsgServerToGCPostMatchTipResponse>(nullptr);
  }

  CMsgServerToGCPostMatchTipResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCPostMatchTipResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCPostMatchTipResponse& from);
  void MergeFrom(const CMsgServerToGCPostMatchTipResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCPostMatchTipResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCPostMatchTipResponse_Result Result;
  static const Result SUCCESS =
    CMsgServerToGCPostMatchTipResponse_Result_SUCCESS;
  static const Result FAILURE =
    CMsgServerToGCPostMatchTipResponse_Result_FAILURE;
  static inline bool Result_IsValid(int value) {
    return CMsgServerToGCPostMatchTipResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgServerToGCPostMatchTipResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgServerToGCPostMatchTipResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgServerToGCPostMatchTipResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgServerToGCPostMatchTipResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgServerToGCPostMatchTipResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgServerToGCPostMatchTipResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 tipper_account_id = 2;
  bool has_tipper_account_id() const;
  void clear_tipper_account_id();
  static const int kTipperAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 tipper_account_id() const;
  void set_tipper_account_id(::google::protobuf::uint32 value);

  // optional uint32 recipient_account_id = 3;
  bool has_recipient_account_id() const;
  void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 3;
  ::google::protobuf::uint32 recipient_account_id() const;
  void set_recipient_account_id(::google::protobuf::uint32 value);

  // optional .proto.dota.CMsgServerToGCPostMatchTipResponse.Result result = 4 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::proto::dota::CMsgServerToGCPostMatchTipResponse_Result result() const;
  void set_result(::proto::dota::CMsgServerToGCPostMatchTipResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCPostMatchTipResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 tipper_account_id_;
  ::google::protobuf::uint32 recipient_account_id_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCCloseCompendiumInGamePredictionVoting final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCCloseCompendiumInGamePredictionVoting) */ {
 public:
  CMsgServerToGCCloseCompendiumInGamePredictionVoting();
  virtual ~CMsgServerToGCCloseCompendiumInGamePredictionVoting();

  CMsgServerToGCCloseCompendiumInGamePredictionVoting(const CMsgServerToGCCloseCompendiumInGamePredictionVoting& from);

  inline CMsgServerToGCCloseCompendiumInGamePredictionVoting& operator=(const CMsgServerToGCCloseCompendiumInGamePredictionVoting& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCCloseCompendiumInGamePredictionVoting(CMsgServerToGCCloseCompendiumInGamePredictionVoting&& from) noexcept
    : CMsgServerToGCCloseCompendiumInGamePredictionVoting() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCCloseCompendiumInGamePredictionVoting& operator=(CMsgServerToGCCloseCompendiumInGamePredictionVoting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCCloseCompendiumInGamePredictionVoting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCCloseCompendiumInGamePredictionVoting* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCCloseCompendiumInGamePredictionVoting*>(
               &_CMsgServerToGCCloseCompendiumInGamePredictionVoting_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  void Swap(CMsgServerToGCCloseCompendiumInGamePredictionVoting* other);
  friend void swap(CMsgServerToGCCloseCompendiumInGamePredictionVoting& a, CMsgServerToGCCloseCompendiumInGamePredictionVoting& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCCloseCompendiumInGamePredictionVoting* New() const final {
    return CreateMaybeMessage<CMsgServerToGCCloseCompendiumInGamePredictionVoting>(nullptr);
  }

  CMsgServerToGCCloseCompendiumInGamePredictionVoting* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCCloseCompendiumInGamePredictionVoting>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCCloseCompendiumInGamePredictionVoting& from);
  void MergeFrom(const CMsgServerToGCCloseCompendiumInGamePredictionVoting& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCCloseCompendiumInGamePredictionVoting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 hltv_delay = 2;
  bool has_hltv_delay() const;
  void clear_hltv_delay();
  static const int kHltvDelayFieldNumber = 2;
  ::google::protobuf::uint32 hltv_delay() const;
  void set_hltv_delay(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCCloseCompendiumInGamePredictionVoting)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 hltv_delay_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse) */ {
 public:
  CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse();
  virtual ~CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse();

  CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse(const CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse& from);

  inline CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse& operator=(const CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse(CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse&& from) noexcept
    : CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse& operator=(CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse*>(
               &_CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    118;

  void Swap(CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse* other);
  friend void swap(CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse& a, CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse* New() const final {
    return CreateMaybeMessage<CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse>(nullptr);
  }

  CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse& from);
  void MergeFrom(const CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.PredictionResult) */ {
 public:
  CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult();
  virtual ~CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult();

  CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult(const CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult& from);

  inline CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult& operator=(const CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult(CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult&& from) noexcept
    : CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult& operator=(CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult*>(
               &_CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    119;

  void Swap(CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult* other);
  friend void swap(CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult& a, CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult* New() const final {
    return CreateMaybeMessage<CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult>(nullptr);
  }

  CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult& from);
  void MergeFrom(const CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prediction_id = 1;
  bool has_prediction_id() const;
  void clear_prediction_id();
  static const int kPredictionIdFieldNumber = 1;
  ::google::protobuf::uint32 prediction_id() const;
  void set_prediction_id(::google::protobuf::uint32 value);

  // optional uint32 prediction_value = 2;
  bool has_prediction_value() const;
  void clear_prediction_value();
  static const int kPredictionValueFieldNumber = 2;
  ::google::protobuf::uint32 prediction_value() const;
  void set_prediction_value(::google::protobuf::uint32 value);

  // optional bool prediction_value_is_mask = 3;
  bool has_prediction_value_is_mask() const;
  void clear_prediction_value_is_mask();
  static const int kPredictionValueIsMaskFieldNumber = 3;
  bool prediction_value_is_mask() const;
  void set_prediction_value_is_mask(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.PredictionResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 prediction_id_;
  ::google::protobuf::uint32 prediction_value_;
  bool prediction_value_is_mask_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCCompendiumInGamePredictionResults final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults) */ {
 public:
  CMsgServerToGCCompendiumInGamePredictionResults();
  virtual ~CMsgServerToGCCompendiumInGamePredictionResults();

  CMsgServerToGCCompendiumInGamePredictionResults(const CMsgServerToGCCompendiumInGamePredictionResults& from);

  inline CMsgServerToGCCompendiumInGamePredictionResults& operator=(const CMsgServerToGCCompendiumInGamePredictionResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCCompendiumInGamePredictionResults(CMsgServerToGCCompendiumInGamePredictionResults&& from) noexcept
    : CMsgServerToGCCompendiumInGamePredictionResults() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCCompendiumInGamePredictionResults& operator=(CMsgServerToGCCompendiumInGamePredictionResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCCompendiumInGamePredictionResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCCompendiumInGamePredictionResults* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCCompendiumInGamePredictionResults*>(
               &_CMsgServerToGCCompendiumInGamePredictionResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    120;

  void Swap(CMsgServerToGCCompendiumInGamePredictionResults* other);
  friend void swap(CMsgServerToGCCompendiumInGamePredictionResults& a, CMsgServerToGCCompendiumInGamePredictionResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCCompendiumInGamePredictionResults* New() const final {
    return CreateMaybeMessage<CMsgServerToGCCompendiumInGamePredictionResults>(nullptr);
  }

  CMsgServerToGCCompendiumInGamePredictionResults* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCCompendiumInGamePredictionResults>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCCompendiumInGamePredictionResults& from);
  void MergeFrom(const CMsgServerToGCCompendiumInGamePredictionResults& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCCompendiumInGamePredictionResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult PredictionResult;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.PredictionResult results = 2;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 2;
  ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult >*
      mutable_results();
  const ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult& results(int index) const;
  ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult* add_results();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult >&
      results() const;

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 league_id = 3;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 3;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 league_node_id = 4;
  bool has_league_node_id() const;
  void clear_league_node_id();
  static const int kLeagueNodeIdFieldNumber = 4;
  ::google::protobuf::uint32 league_node_id() const;
  void set_league_node_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult > results_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 league_node_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCCompendiumInGamePredictionResultsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCCompendiumInGamePredictionResultsResponse) */ {
 public:
  CMsgServerToGCCompendiumInGamePredictionResultsResponse();
  virtual ~CMsgServerToGCCompendiumInGamePredictionResultsResponse();

  CMsgServerToGCCompendiumInGamePredictionResultsResponse(const CMsgServerToGCCompendiumInGamePredictionResultsResponse& from);

  inline CMsgServerToGCCompendiumInGamePredictionResultsResponse& operator=(const CMsgServerToGCCompendiumInGamePredictionResultsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCCompendiumInGamePredictionResultsResponse(CMsgServerToGCCompendiumInGamePredictionResultsResponse&& from) noexcept
    : CMsgServerToGCCompendiumInGamePredictionResultsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCCompendiumInGamePredictionResultsResponse& operator=(CMsgServerToGCCompendiumInGamePredictionResultsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCCompendiumInGamePredictionResultsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCCompendiumInGamePredictionResultsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCCompendiumInGamePredictionResultsResponse*>(
               &_CMsgServerToGCCompendiumInGamePredictionResultsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    121;

  void Swap(CMsgServerToGCCompendiumInGamePredictionResultsResponse* other);
  friend void swap(CMsgServerToGCCompendiumInGamePredictionResultsResponse& a, CMsgServerToGCCompendiumInGamePredictionResultsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCCompendiumInGamePredictionResultsResponse* New() const final {
    return CreateMaybeMessage<CMsgServerToGCCompendiumInGamePredictionResultsResponse>(nullptr);
  }

  CMsgServerToGCCompendiumInGamePredictionResultsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCCompendiumInGamePredictionResultsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCCompendiumInGamePredictionResultsResponse& from);
  void MergeFrom(const CMsgServerToGCCompendiumInGamePredictionResultsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCCompendiumInGamePredictionResultsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCCompendiumInGamePredictionResultsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCCompendiumInGamePredictionResults final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToGCCompendiumInGamePredictionResults) */ {
 public:
  CMsgGCToGCCompendiumInGamePredictionResults();
  virtual ~CMsgGCToGCCompendiumInGamePredictionResults();

  CMsgGCToGCCompendiumInGamePredictionResults(const CMsgGCToGCCompendiumInGamePredictionResults& from);

  inline CMsgGCToGCCompendiumInGamePredictionResults& operator=(const CMsgGCToGCCompendiumInGamePredictionResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToGCCompendiumInGamePredictionResults(CMsgGCToGCCompendiumInGamePredictionResults&& from) noexcept
    : CMsgGCToGCCompendiumInGamePredictionResults() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCCompendiumInGamePredictionResults& operator=(CMsgGCToGCCompendiumInGamePredictionResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCToGCCompendiumInGamePredictionResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToGCCompendiumInGamePredictionResults* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCCompendiumInGamePredictionResults*>(
               &_CMsgGCToGCCompendiumInGamePredictionResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    122;

  void Swap(CMsgGCToGCCompendiumInGamePredictionResults* other);
  friend void swap(CMsgGCToGCCompendiumInGamePredictionResults& a, CMsgGCToGCCompendiumInGamePredictionResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCCompendiumInGamePredictionResults* New() const final {
    return CreateMaybeMessage<CMsgGCToGCCompendiumInGamePredictionResults>(nullptr);
  }

  CMsgGCToGCCompendiumInGamePredictionResults* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCCompendiumInGamePredictionResults>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCToGCCompendiumInGamePredictionResults& from);
  void MergeFrom(const CMsgGCToGCCompendiumInGamePredictionResults& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCCompendiumInGamePredictionResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgServerToGCCompendiumInGamePredictionResults results = 1;
  bool has_results() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  const ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults& results() const;
  ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults* release_results();
  ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults* mutable_results();
  void set_allocated_results(::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults* results);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToGCCompendiumInGamePredictionResults)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults* results_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase) */ {
 public:
  CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase();
  virtual ~CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase();

  CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase(const CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase& from);

  inline CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase& operator=(const CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase(CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase&& from) noexcept
    : CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase& operator=(CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase*>(
               &_CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    123;

  void Swap(CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase* other);
  friend void swap(CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase& a, CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase* New() const final {
    return CreateMaybeMessage<CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase>(nullptr);
  }

  CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase& from);
  void MergeFrom(const CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 inventory_items = 5;
  int inventory_items_size() const;
  void clear_inventory_items();
  static const int kInventoryItemsFieldNumber = 5;
  ::google::protobuf::uint32 inventory_items(int index) const;
  void set_inventory_items(int index, ::google::protobuf::uint32 value);
  void add_inventory_items(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      inventory_items() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_inventory_items();

  // repeated bool talents_skilled = 7;
  int talents_skilled_size() const;
  void clear_talents_skilled();
  static const int kTalentsSkilledFieldNumber = 7;
  bool talents_skilled(int index) const;
  void set_talents_skilled(int index, bool value);
  void add_talents_skilled(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      talents_skilled() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_talents_skilled();

  // optional uint32 item = 1;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  ::google::protobuf::uint32 item() const;
  void set_item(::google::protobuf::uint32 value);

  // optional uint32 gold = 2;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 2;
  ::google::protobuf::uint32 gold() const;
  void set_gold(::google::protobuf::uint32 value);

  // optional uint32 net_worth = 3;
  bool has_net_worth() const;
  void clear_net_worth();
  static const int kNetWorthFieldNumber = 3;
  ::google::protobuf::uint32 net_worth() const;
  void set_net_worth(::google::protobuf::uint32 value);

  // optional uint32 game_time = 4;
  bool has_game_time() const;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 4;
  ::google::protobuf::uint32 game_time() const;
  void set_game_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > inventory_items_;
  ::google::protobuf::RepeatedField< bool > talents_skilled_;
  ::google::protobuf::uint32 item_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 net_worth_;
  ::google::protobuf::uint32 game_time_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchPlayerItemPurchaseHistory_Player final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player) */ {
 public:
  CMsgServerToGCMatchPlayerItemPurchaseHistory_Player();
  virtual ~CMsgServerToGCMatchPlayerItemPurchaseHistory_Player();

  CMsgServerToGCMatchPlayerItemPurchaseHistory_Player(const CMsgServerToGCMatchPlayerItemPurchaseHistory_Player& from);

  inline CMsgServerToGCMatchPlayerItemPurchaseHistory_Player& operator=(const CMsgServerToGCMatchPlayerItemPurchaseHistory_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCMatchPlayerItemPurchaseHistory_Player(CMsgServerToGCMatchPlayerItemPurchaseHistory_Player&& from) noexcept
    : CMsgServerToGCMatchPlayerItemPurchaseHistory_Player() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCMatchPlayerItemPurchaseHistory_Player& operator=(CMsgServerToGCMatchPlayerItemPurchaseHistory_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCMatchPlayerItemPurchaseHistory_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCMatchPlayerItemPurchaseHistory_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCMatchPlayerItemPurchaseHistory_Player*>(
               &_CMsgServerToGCMatchPlayerItemPurchaseHistory_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    124;

  void Swap(CMsgServerToGCMatchPlayerItemPurchaseHistory_Player* other);
  friend void swap(CMsgServerToGCMatchPlayerItemPurchaseHistory_Player& a, CMsgServerToGCMatchPlayerItemPurchaseHistory_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCMatchPlayerItemPurchaseHistory_Player* New() const final {
    return CreateMaybeMessage<CMsgServerToGCMatchPlayerItemPurchaseHistory_Player>(nullptr);
  }

  CMsgServerToGCMatchPlayerItemPurchaseHistory_Player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCMatchPlayerItemPurchaseHistory_Player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCMatchPlayerItemPurchaseHistory_Player& from);
  void MergeFrom(const CMsgServerToGCMatchPlayerItemPurchaseHistory_Player& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCMatchPlayerItemPurchaseHistory_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 allied_hero_ids = 4;
  int allied_hero_ids_size() const;
  void clear_allied_hero_ids();
  static const int kAlliedHeroIdsFieldNumber = 4;
  ::google::protobuf::uint32 allied_hero_ids(int index) const;
  void set_allied_hero_ids(int index, ::google::protobuf::uint32 value);
  void add_allied_hero_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      allied_hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_allied_hero_ids();

  // repeated uint32 enemy_hero_ids = 5;
  int enemy_hero_ids_size() const;
  void clear_enemy_hero_ids();
  static const int kEnemyHeroIdsFieldNumber = 5;
  ::google::protobuf::uint32 enemy_hero_ids(int index) const;
  void set_enemy_hero_ids(int index, ::google::protobuf::uint32 value);
  void add_enemy_hero_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      enemy_hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_enemy_hero_ids();

  // repeated .proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase item_purchases = 6;
  int item_purchases_size() const;
  void clear_item_purchases();
  static const int kItemPurchasesFieldNumber = 6;
  ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase* mutable_item_purchases(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase >*
      mutable_item_purchases();
  const ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase& item_purchases(int index) const;
  ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase* add_item_purchases();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase >&
      item_purchases() const;

  // optional uint32 player_slot = 1;
  bool has_player_slot() const;
  void clear_player_slot();
  static const int kPlayerSlotFieldNumber = 1;
  ::google::protobuf::uint32 player_slot() const;
  void set_player_slot(::google::protobuf::uint32 value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 3;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > allied_hero_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > enemy_hero_ids_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase > item_purchases_;
  ::google::protobuf::uint32 player_slot_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchPlayerItemPurchaseHistory final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory) */ {
 public:
  CMsgServerToGCMatchPlayerItemPurchaseHistory();
  virtual ~CMsgServerToGCMatchPlayerItemPurchaseHistory();

  CMsgServerToGCMatchPlayerItemPurchaseHistory(const CMsgServerToGCMatchPlayerItemPurchaseHistory& from);

  inline CMsgServerToGCMatchPlayerItemPurchaseHistory& operator=(const CMsgServerToGCMatchPlayerItemPurchaseHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCMatchPlayerItemPurchaseHistory(CMsgServerToGCMatchPlayerItemPurchaseHistory&& from) noexcept
    : CMsgServerToGCMatchPlayerItemPurchaseHistory() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCMatchPlayerItemPurchaseHistory& operator=(CMsgServerToGCMatchPlayerItemPurchaseHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCMatchPlayerItemPurchaseHistory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCMatchPlayerItemPurchaseHistory* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCMatchPlayerItemPurchaseHistory*>(
               &_CMsgServerToGCMatchPlayerItemPurchaseHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    125;

  void Swap(CMsgServerToGCMatchPlayerItemPurchaseHistory* other);
  friend void swap(CMsgServerToGCMatchPlayerItemPurchaseHistory& a, CMsgServerToGCMatchPlayerItemPurchaseHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCMatchPlayerItemPurchaseHistory* New() const final {
    return CreateMaybeMessage<CMsgServerToGCMatchPlayerItemPurchaseHistory>(nullptr);
  }

  CMsgServerToGCMatchPlayerItemPurchaseHistory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCMatchPlayerItemPurchaseHistory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCMatchPlayerItemPurchaseHistory& from);
  void MergeFrom(const CMsgServerToGCMatchPlayerItemPurchaseHistory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCMatchPlayerItemPurchaseHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase ItemPurchase;
  typedef CMsgServerToGCMatchPlayerItemPurchaseHistory_Player Player;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player players = 3;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 3;
  ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_Player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_Player >*
      mutable_players();
  const ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_Player& players(int index) const;
  ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_Player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_Player >&
      players() const;

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 mmr = 2;
  bool has_mmr() const;
  void clear_mmr();
  static const int kMmrFieldNumber = 2;
  ::google::protobuf::uint32 mmr() const;
  void set_mmr(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_Player > players_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 mmr_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchStateHistory_PlayerState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState) */ {
 public:
  CMsgServerToGCMatchStateHistory_PlayerState();
  virtual ~CMsgServerToGCMatchStateHistory_PlayerState();

  CMsgServerToGCMatchStateHistory_PlayerState(const CMsgServerToGCMatchStateHistory_PlayerState& from);

  inline CMsgServerToGCMatchStateHistory_PlayerState& operator=(const CMsgServerToGCMatchStateHistory_PlayerState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCMatchStateHistory_PlayerState(CMsgServerToGCMatchStateHistory_PlayerState&& from) noexcept
    : CMsgServerToGCMatchStateHistory_PlayerState() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCMatchStateHistory_PlayerState& operator=(CMsgServerToGCMatchStateHistory_PlayerState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCMatchStateHistory_PlayerState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCMatchStateHistory_PlayerState* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCMatchStateHistory_PlayerState*>(
               &_CMsgServerToGCMatchStateHistory_PlayerState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    126;

  void Swap(CMsgServerToGCMatchStateHistory_PlayerState* other);
  friend void swap(CMsgServerToGCMatchStateHistory_PlayerState& a, CMsgServerToGCMatchStateHistory_PlayerState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCMatchStateHistory_PlayerState* New() const final {
    return CreateMaybeMessage<CMsgServerToGCMatchStateHistory_PlayerState>(nullptr);
  }

  CMsgServerToGCMatchStateHistory_PlayerState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCMatchStateHistory_PlayerState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCMatchStateHistory_PlayerState& from);
  void MergeFrom(const CMsgServerToGCMatchStateHistory_PlayerState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCMatchStateHistory_PlayerState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 net_worth = 2;
  bool has_net_worth() const;
  void clear_net_worth();
  static const int kNetWorthFieldNumber = 2;
  ::google::protobuf::uint32 net_worth() const;
  void set_net_worth(::google::protobuf::uint32 value);

  // optional uint32 level = 3;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 deaths = 4;
  bool has_deaths() const;
  void clear_deaths();
  static const int kDeathsFieldNumber = 4;
  ::google::protobuf::uint32 deaths() const;
  void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 respawn_time = 5;
  bool has_respawn_time() const;
  void clear_respawn_time();
  static const int kRespawnTimeFieldNumber = 5;
  ::google::protobuf::uint32 respawn_time() const;
  void set_respawn_time(::google::protobuf::uint32 value);

  // optional bool has_buyback = 6;
  bool has_has_buyback() const;
  void clear_has_buyback();
  static const int kHasBuybackFieldNumber = 6;
  bool has_buyback() const;
  void set_has_buyback(bool value);

  // optional bool has_aegis = 7;
  bool has_has_aegis() const;
  void clear_has_aegis();
  static const int kHasAegisFieldNumber = 7;
  bool has_aegis() const;
  void set_has_aegis(bool value);

  // optional bool has_rapier = 8;
  bool has_has_rapier() const;
  void clear_has_rapier();
  static const int kHasRapierFieldNumber = 8;
  bool has_rapier() const;
  void set_has_rapier(bool value);

  // optional uint32 distance = 9;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 9;
  ::google::protobuf::uint32 distance() const;
  void set_distance(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 net_worth_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 respawn_time_;
  bool has_buyback_;
  bool has_aegis_;
  bool has_rapier_;
  ::google::protobuf::uint32 distance_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchStateHistory_TeamState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCMatchStateHistory.TeamState) */ {
 public:
  CMsgServerToGCMatchStateHistory_TeamState();
  virtual ~CMsgServerToGCMatchStateHistory_TeamState();

  CMsgServerToGCMatchStateHistory_TeamState(const CMsgServerToGCMatchStateHistory_TeamState& from);

  inline CMsgServerToGCMatchStateHistory_TeamState& operator=(const CMsgServerToGCMatchStateHistory_TeamState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCMatchStateHistory_TeamState(CMsgServerToGCMatchStateHistory_TeamState&& from) noexcept
    : CMsgServerToGCMatchStateHistory_TeamState() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCMatchStateHistory_TeamState& operator=(CMsgServerToGCMatchStateHistory_TeamState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCMatchStateHistory_TeamState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCMatchStateHistory_TeamState* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCMatchStateHistory_TeamState*>(
               &_CMsgServerToGCMatchStateHistory_TeamState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    127;

  void Swap(CMsgServerToGCMatchStateHistory_TeamState* other);
  friend void swap(CMsgServerToGCMatchStateHistory_TeamState& a, CMsgServerToGCMatchStateHistory_TeamState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCMatchStateHistory_TeamState* New() const final {
    return CreateMaybeMessage<CMsgServerToGCMatchStateHistory_TeamState>(nullptr);
  }

  CMsgServerToGCMatchStateHistory_TeamState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCMatchStateHistory_TeamState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCMatchStateHistory_TeamState& from);
  void MergeFrom(const CMsgServerToGCMatchStateHistory_TeamState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCMatchStateHistory_TeamState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerToGCMatchStateHistory.PlayerState player_states = 2;
  int player_states_size() const;
  void clear_player_states();
  static const int kPlayerStatesFieldNumber = 2;
  ::proto::dota::CMsgServerToGCMatchStateHistory_PlayerState* mutable_player_states(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchStateHistory_PlayerState >*
      mutable_player_states();
  const ::proto::dota::CMsgServerToGCMatchStateHistory_PlayerState& player_states(int index) const;
  ::proto::dota::CMsgServerToGCMatchStateHistory_PlayerState* add_player_states();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchStateHistory_PlayerState >&
      player_states() const;

  // repeated uint32 tower_health_pct = 3;
  int tower_health_pct_size() const;
  void clear_tower_health_pct();
  static const int kTowerHealthPctFieldNumber = 3;
  ::google::protobuf::uint32 tower_health_pct(int index) const;
  void set_tower_health_pct(int index, ::google::protobuf::uint32 value);
  void add_tower_health_pct(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tower_health_pct() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tower_health_pct();

  // repeated uint32 barracks_health_pct = 4;
  int barracks_health_pct_size() const;
  void clear_barracks_health_pct();
  static const int kBarracksHealthPctFieldNumber = 4;
  ::google::protobuf::uint32 barracks_health_pct(int index) const;
  void set_barracks_health_pct(int index, ::google::protobuf::uint32 value);
  void add_barracks_health_pct(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      barracks_health_pct() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_barracks_health_pct();

  // optional uint32 team = 1;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 1;
  ::google::protobuf::uint32 team() const;
  void set_team(::google::protobuf::uint32 value);

  // optional uint32 ancient_health_pct = 5;
  bool has_ancient_health_pct() const;
  void clear_ancient_health_pct();
  static const int kAncientHealthPctFieldNumber = 5;
  ::google::protobuf::uint32 ancient_health_pct() const;
  void set_ancient_health_pct(::google::protobuf::uint32 value);

  // optional uint32 glyph_cooldown = 6;
  bool has_glyph_cooldown() const;
  void clear_glyph_cooldown();
  static const int kGlyphCooldownFieldNumber = 6;
  ::google::protobuf::uint32 glyph_cooldown() const;
  void set_glyph_cooldown(::google::protobuf::uint32 value);

  // optional uint32 kills = 7;
  bool has_kills() const;
  void clear_kills();
  static const int kKillsFieldNumber = 7;
  ::google::protobuf::uint32 kills() const;
  void set_kills(::google::protobuf::uint32 value);

  // optional uint32 creep_distance_safe = 8;
  bool has_creep_distance_safe() const;
  void clear_creep_distance_safe();
  static const int kCreepDistanceSafeFieldNumber = 8;
  ::google::protobuf::uint32 creep_distance_safe() const;
  void set_creep_distance_safe(::google::protobuf::uint32 value);

  // optional uint32 creep_distance_mid = 9;
  bool has_creep_distance_mid() const;
  void clear_creep_distance_mid();
  static const int kCreepDistanceMidFieldNumber = 9;
  ::google::protobuf::uint32 creep_distance_mid() const;
  void set_creep_distance_mid(::google::protobuf::uint32 value);

  // optional uint32 creep_distance_off = 10;
  bool has_creep_distance_off() const;
  void clear_creep_distance_off();
  static const int kCreepDistanceOffFieldNumber = 10;
  ::google::protobuf::uint32 creep_distance_off() const;
  void set_creep_distance_off(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCMatchStateHistory.TeamState)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchStateHistory_PlayerState > player_states_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tower_health_pct_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > barracks_health_pct_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 ancient_health_pct_;
  ::google::protobuf::uint32 glyph_cooldown_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 creep_distance_safe_;
  ::google::protobuf::uint32 creep_distance_mid_;
  ::google::protobuf::uint32 creep_distance_off_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchStateHistory_MatchState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCMatchStateHistory.MatchState) */ {
 public:
  CMsgServerToGCMatchStateHistory_MatchState();
  virtual ~CMsgServerToGCMatchStateHistory_MatchState();

  CMsgServerToGCMatchStateHistory_MatchState(const CMsgServerToGCMatchStateHistory_MatchState& from);

  inline CMsgServerToGCMatchStateHistory_MatchState& operator=(const CMsgServerToGCMatchStateHistory_MatchState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCMatchStateHistory_MatchState(CMsgServerToGCMatchStateHistory_MatchState&& from) noexcept
    : CMsgServerToGCMatchStateHistory_MatchState() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCMatchStateHistory_MatchState& operator=(CMsgServerToGCMatchStateHistory_MatchState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCMatchStateHistory_MatchState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCMatchStateHistory_MatchState* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCMatchStateHistory_MatchState*>(
               &_CMsgServerToGCMatchStateHistory_MatchState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    128;

  void Swap(CMsgServerToGCMatchStateHistory_MatchState* other);
  friend void swap(CMsgServerToGCMatchStateHistory_MatchState& a, CMsgServerToGCMatchStateHistory_MatchState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCMatchStateHistory_MatchState* New() const final {
    return CreateMaybeMessage<CMsgServerToGCMatchStateHistory_MatchState>(nullptr);
  }

  CMsgServerToGCMatchStateHistory_MatchState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCMatchStateHistory_MatchState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCMatchStateHistory_MatchState& from);
  void MergeFrom(const CMsgServerToGCMatchStateHistory_MatchState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCMatchStateHistory_MatchState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgServerToGCMatchStateHistory.TeamState radiant_state = 2;
  bool has_radiant_state() const;
  void clear_radiant_state();
  static const int kRadiantStateFieldNumber = 2;
  const ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState& radiant_state() const;
  ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* release_radiant_state();
  ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* mutable_radiant_state();
  void set_allocated_radiant_state(::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* radiant_state);

  // optional .proto.dota.CMsgServerToGCMatchStateHistory.TeamState dire_state = 3;
  bool has_dire_state() const;
  void clear_dire_state();
  static const int kDireStateFieldNumber = 3;
  const ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState& dire_state() const;
  ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* release_dire_state();
  ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* mutable_dire_state();
  void set_allocated_dire_state(::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* dire_state);

  // optional uint32 game_time = 1;
  bool has_game_time() const;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 1;
  ::google::protobuf::uint32 game_time() const;
  void set_game_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCMatchStateHistory.MatchState)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* radiant_state_;
  ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* dire_state_;
  ::google::protobuf::uint32 game_time_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchStateHistory final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCMatchStateHistory) */ {
 public:
  CMsgServerToGCMatchStateHistory();
  virtual ~CMsgServerToGCMatchStateHistory();

  CMsgServerToGCMatchStateHistory(const CMsgServerToGCMatchStateHistory& from);

  inline CMsgServerToGCMatchStateHistory& operator=(const CMsgServerToGCMatchStateHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCMatchStateHistory(CMsgServerToGCMatchStateHistory&& from) noexcept
    : CMsgServerToGCMatchStateHistory() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCMatchStateHistory& operator=(CMsgServerToGCMatchStateHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCMatchStateHistory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCMatchStateHistory* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCMatchStateHistory*>(
               &_CMsgServerToGCMatchStateHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    129;

  void Swap(CMsgServerToGCMatchStateHistory* other);
  friend void swap(CMsgServerToGCMatchStateHistory& a, CMsgServerToGCMatchStateHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCMatchStateHistory* New() const final {
    return CreateMaybeMessage<CMsgServerToGCMatchStateHistory>(nullptr);
  }

  CMsgServerToGCMatchStateHistory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCMatchStateHistory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCMatchStateHistory& from);
  void MergeFrom(const CMsgServerToGCMatchStateHistory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCMatchStateHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgServerToGCMatchStateHistory_PlayerState PlayerState;
  typedef CMsgServerToGCMatchStateHistory_TeamState TeamState;
  typedef CMsgServerToGCMatchStateHistory_MatchState MatchState;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerToGCMatchStateHistory.MatchState match_states = 4;
  int match_states_size() const;
  void clear_match_states();
  static const int kMatchStatesFieldNumber = 4;
  ::proto::dota::CMsgServerToGCMatchStateHistory_MatchState* mutable_match_states(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchStateHistory_MatchState >*
      mutable_match_states();
  const ::proto::dota::CMsgServerToGCMatchStateHistory_MatchState& match_states(int index) const;
  ::proto::dota::CMsgServerToGCMatchStateHistory_MatchState* add_match_states();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchStateHistory_MatchState >&
      match_states() const;

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional bool radiant_won = 2;
  bool has_radiant_won() const;
  void clear_radiant_won();
  static const int kRadiantWonFieldNumber = 2;
  bool radiant_won() const;
  void set_radiant_won(bool value);

  // optional uint32 mmr = 3;
  bool has_mmr() const;
  void clear_mmr();
  static const int kMmrFieldNumber = 3;
  ::google::protobuf::uint32 mmr() const;
  void set_mmr(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCMatchStateHistory)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchStateHistory_MatchState > match_states_;
  ::google::protobuf::uint64 match_id_;
  bool radiant_won_;
  ::google::protobuf::uint32 mmr_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCCavernCrawlIsHeroActive final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCCavernCrawlIsHeroActive) */ {
 public:
  CMsgServerToGCCavernCrawlIsHeroActive();
  virtual ~CMsgServerToGCCavernCrawlIsHeroActive();

  CMsgServerToGCCavernCrawlIsHeroActive(const CMsgServerToGCCavernCrawlIsHeroActive& from);

  inline CMsgServerToGCCavernCrawlIsHeroActive& operator=(const CMsgServerToGCCavernCrawlIsHeroActive& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCCavernCrawlIsHeroActive(CMsgServerToGCCavernCrawlIsHeroActive&& from) noexcept
    : CMsgServerToGCCavernCrawlIsHeroActive() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCCavernCrawlIsHeroActive& operator=(CMsgServerToGCCavernCrawlIsHeroActive&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCCavernCrawlIsHeroActive& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCCavernCrawlIsHeroActive* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCCavernCrawlIsHeroActive*>(
               &_CMsgServerToGCCavernCrawlIsHeroActive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    130;

  void Swap(CMsgServerToGCCavernCrawlIsHeroActive* other);
  friend void swap(CMsgServerToGCCavernCrawlIsHeroActive& a, CMsgServerToGCCavernCrawlIsHeroActive& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCCavernCrawlIsHeroActive* New() const final {
    return CreateMaybeMessage<CMsgServerToGCCavernCrawlIsHeroActive>(nullptr);
  }

  CMsgServerToGCCavernCrawlIsHeroActive* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCCavernCrawlIsHeroActive>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCCavernCrawlIsHeroActive& from);
  void MergeFrom(const CMsgServerToGCCavernCrawlIsHeroActive& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCCavernCrawlIsHeroActive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 3;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCCavernCrawlIsHeroActive)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerToGCCavernCrawlIsHeroActiveResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCCavernCrawlIsHeroActiveResponse) */ {
 public:
  CMsgServerToGCCavernCrawlIsHeroActiveResponse();
  virtual ~CMsgServerToGCCavernCrawlIsHeroActiveResponse();

  CMsgServerToGCCavernCrawlIsHeroActiveResponse(const CMsgServerToGCCavernCrawlIsHeroActiveResponse& from);

  inline CMsgServerToGCCavernCrawlIsHeroActiveResponse& operator=(const CMsgServerToGCCavernCrawlIsHeroActiveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerToGCCavernCrawlIsHeroActiveResponse(CMsgServerToGCCavernCrawlIsHeroActiveResponse&& from) noexcept
    : CMsgServerToGCCavernCrawlIsHeroActiveResponse() {
    *this = ::std::move(from);
  }

  inline CMsgServerToGCCavernCrawlIsHeroActiveResponse& operator=(CMsgServerToGCCavernCrawlIsHeroActiveResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerToGCCavernCrawlIsHeroActiveResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerToGCCavernCrawlIsHeroActiveResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCCavernCrawlIsHeroActiveResponse*>(
               &_CMsgServerToGCCavernCrawlIsHeroActiveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    131;

  void Swap(CMsgServerToGCCavernCrawlIsHeroActiveResponse* other);
  friend void swap(CMsgServerToGCCavernCrawlIsHeroActiveResponse& a, CMsgServerToGCCavernCrawlIsHeroActiveResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerToGCCavernCrawlIsHeroActiveResponse* New() const final {
    return CreateMaybeMessage<CMsgServerToGCCavernCrawlIsHeroActiveResponse>(nullptr);
  }

  CMsgServerToGCCavernCrawlIsHeroActiveResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerToGCCavernCrawlIsHeroActiveResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerToGCCavernCrawlIsHeroActiveResponse& from);
  void MergeFrom(const CMsgServerToGCCavernCrawlIsHeroActiveResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerToGCCavernCrawlIsHeroActiveResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // optional uint32 potential_winnings = 2;
  bool has_potential_winnings() const;
  void clear_potential_winnings();
  static const int kPotentialWinningsFieldNumber = 2;
  ::google::protobuf::uint32 potential_winnings() const;
  void set_potential_winnings(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCCavernCrawlIsHeroActiveResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool result_;
  ::google::protobuf::uint32 potential_winnings_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCtoServerTensorflowInstance final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCtoServerTensorflowInstance) */ {
 public:
  CMsgGCtoServerTensorflowInstance();
  virtual ~CMsgGCtoServerTensorflowInstance();

  CMsgGCtoServerTensorflowInstance(const CMsgGCtoServerTensorflowInstance& from);

  inline CMsgGCtoServerTensorflowInstance& operator=(const CMsgGCtoServerTensorflowInstance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCtoServerTensorflowInstance(CMsgGCtoServerTensorflowInstance&& from) noexcept
    : CMsgGCtoServerTensorflowInstance() {
    *this = ::std::move(from);
  }

  inline CMsgGCtoServerTensorflowInstance& operator=(CMsgGCtoServerTensorflowInstance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgGCtoServerTensorflowInstance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCtoServerTensorflowInstance* internal_default_instance() {
    return reinterpret_cast<const CMsgGCtoServerTensorflowInstance*>(
               &_CMsgGCtoServerTensorflowInstance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    132;

  void Swap(CMsgGCtoServerTensorflowInstance* other);
  friend void swap(CMsgGCtoServerTensorflowInstance& a, CMsgGCtoServerTensorflowInstance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCtoServerTensorflowInstance* New() const final {
    return CreateMaybeMessage<CMsgGCtoServerTensorflowInstance>(nullptr);
  }

  CMsgGCtoServerTensorflowInstance* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCtoServerTensorflowInstance>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgGCtoServerTensorflowInstance& from);
  void MergeFrom(const CMsgGCtoServerTensorflowInstance& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCtoServerTensorflowInstance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_instance = 1;
  bool has_server_instance() const;
  void clear_server_instance();
  static const int kServerInstanceFieldNumber = 1;
  ::google::protobuf::uint32 server_instance() const;
  void set_server_instance(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCtoServerTensorflowInstance)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 server_instance_;
  friend struct ::TableStruct_dota_5fgcmessages_5fserver_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgPoorNetworkConditions_Player

// optional uint32 account_id = 1;
inline bool CMsgPoorNetworkConditions_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPoorNetworkConditions_Player::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgPoorNetworkConditions_Player::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPoorNetworkConditions.Player.account_id)
  return account_id_;
}
inline void CMsgPoorNetworkConditions_Player::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPoorNetworkConditions.Player.account_id)
}

// optional .proto.dota.ENetworkDisconnectionReason disconnect_reason = 2 [default = NETWORK_DISCONNECT_INVALID];
inline bool CMsgPoorNetworkConditions_Player::has_disconnect_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPoorNetworkConditions_Player::clear_disconnect_reason() {
  disconnect_reason_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::ENetworkDisconnectionReason CMsgPoorNetworkConditions_Player::disconnect_reason() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPoorNetworkConditions.Player.disconnect_reason)
  return static_cast< ::proto::dota::ENetworkDisconnectionReason >(disconnect_reason_);
}
inline void CMsgPoorNetworkConditions_Player::set_disconnect_reason(::proto::dota::ENetworkDisconnectionReason value) {
  assert(::proto::dota::ENetworkDisconnectionReason_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  disconnect_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPoorNetworkConditions.Player.disconnect_reason)
}

// optional uint32 num_bad_intervals = 3;
inline bool CMsgPoorNetworkConditions_Player::has_num_bad_intervals() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPoorNetworkConditions_Player::clear_num_bad_intervals() {
  num_bad_intervals_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgPoorNetworkConditions_Player::num_bad_intervals() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPoorNetworkConditions.Player.num_bad_intervals)
  return num_bad_intervals_;
}
inline void CMsgPoorNetworkConditions_Player::set_num_bad_intervals(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_bad_intervals_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPoorNetworkConditions.Player.num_bad_intervals)
}

// optional uint32 peak_loss_pct = 4;
inline bool CMsgPoorNetworkConditions_Player::has_peak_loss_pct() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPoorNetworkConditions_Player::clear_peak_loss_pct() {
  peak_loss_pct_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgPoorNetworkConditions_Player::peak_loss_pct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPoorNetworkConditions.Player.peak_loss_pct)
  return peak_loss_pct_;
}
inline void CMsgPoorNetworkConditions_Player::set_peak_loss_pct(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  peak_loss_pct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPoorNetworkConditions.Player.peak_loss_pct)
}

// -------------------------------------------------------------------

// CMsgPoorNetworkConditions

// optional .proto.dota.EPoorNetworkConditionsType detection_type = 1 [default = k_EPoorNetworkConditions_None];
inline bool CMsgPoorNetworkConditions::has_detection_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPoorNetworkConditions::clear_detection_type() {
  detection_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EPoorNetworkConditionsType CMsgPoorNetworkConditions::detection_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPoorNetworkConditions.detection_type)
  return static_cast< ::proto::dota::EPoorNetworkConditionsType >(detection_type_);
}
inline void CMsgPoorNetworkConditions::set_detection_type(::proto::dota::EPoorNetworkConditionsType value) {
  assert(::proto::dota::EPoorNetworkConditionsType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  detection_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPoorNetworkConditions.detection_type)
}

// repeated .proto.dota.CMsgPoorNetworkConditions.Player players = 2;
inline int CMsgPoorNetworkConditions::players_size() const {
  return players_.size();
}
inline void CMsgPoorNetworkConditions::clear_players() {
  players_.Clear();
}
inline ::proto::dota::CMsgPoorNetworkConditions_Player* CMsgPoorNetworkConditions::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgPoorNetworkConditions.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPoorNetworkConditions_Player >*
CMsgPoorNetworkConditions::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgPoorNetworkConditions.players)
  return &players_;
}
inline const ::proto::dota::CMsgPoorNetworkConditions_Player& CMsgPoorNetworkConditions::players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPoorNetworkConditions.players)
  return players_.Get(index);
}
inline ::proto::dota::CMsgPoorNetworkConditions_Player* CMsgPoorNetworkConditions::add_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgPoorNetworkConditions.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPoorNetworkConditions_Player >&
CMsgPoorNetworkConditions::players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgPoorNetworkConditions.players)
  return players_;
}

// -------------------------------------------------------------------

// CMsgGameserverCrash

// optional uint64 match_id = 1;
inline bool CMsgGameserverCrash::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameserverCrash::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGameserverCrash::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameserverCrash.match_id)
  return match_id_;
}
inline void CMsgGameserverCrash::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameserverCrash.match_id)
}

// optional fixed64 lobby_id = 2;
inline bool CMsgGameserverCrash::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameserverCrash::clear_lobby_id() {
  lobby_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgGameserverCrash::lobby_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameserverCrash.lobby_id)
  return lobby_id_;
}
inline void CMsgGameserverCrash::set_lobby_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameserverCrash.lobby_id)
}

// optional .proto.dota.DOTA_GameState game_state = 3 [default = DOTA_GAMERULES_STATE_INIT];
inline bool CMsgGameserverCrash::has_game_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameserverCrash::clear_game_state() {
  game_state_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::proto::dota::DOTA_GameState CMsgGameserverCrash::game_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameserverCrash.game_state)
  return static_cast< ::proto::dota::DOTA_GameState >(game_state_);
}
inline void CMsgGameserverCrash::set_game_state(::proto::dota::DOTA_GameState value) {
  assert(::proto::dota::DOTA_GameState_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  game_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameserverCrash.game_state)
}

// optional fixed32 sentinel_save_time = 4;
inline bool CMsgGameserverCrash::has_sentinel_save_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameserverCrash::clear_sentinel_save_time() {
  sentinel_save_time_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGameserverCrash::sentinel_save_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameserverCrash.sentinel_save_time)
  return sentinel_save_time_;
}
inline void CMsgGameserverCrash::set_sentinel_save_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  sentinel_save_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameserverCrash.sentinel_save_time)
}

// optional fixed64 custom_game_id = 11;
inline bool CMsgGameserverCrash::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGameserverCrash::clear_custom_game_id() {
  custom_game_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint64 CMsgGameserverCrash::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameserverCrash.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGameserverCrash::set_custom_game_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000200u;
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameserverCrash.custom_game_id)
}

// optional uint32 tournament_id = 12;
inline bool CMsgGameserverCrash::has_tournament_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGameserverCrash::clear_tournament_id() {
  tournament_id_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CMsgGameserverCrash::tournament_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameserverCrash.tournament_id)
  return tournament_id_;
}
inline void CMsgGameserverCrash::set_tournament_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  tournament_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameserverCrash.tournament_id)
}

// optional fixed64 server_steam_id = 5;
inline bool CMsgGameserverCrash::has_server_steam_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameserverCrash::clear_server_steam_id() {
  server_steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 CMsgGameserverCrash::server_steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameserverCrash.server_steam_id)
  return server_steam_id_;
}
inline void CMsgGameserverCrash::set_server_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  server_steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameserverCrash.server_steam_id)
}

// optional fixed32 server_public_ip_addr = 6;
inline bool CMsgGameserverCrash::has_server_public_ip_addr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameserverCrash::clear_server_public_ip_addr() {
  server_public_ip_addr_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgGameserverCrash::server_public_ip_addr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameserverCrash.server_public_ip_addr)
  return server_public_ip_addr_;
}
inline void CMsgGameserverCrash::set_server_public_ip_addr(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  server_public_ip_addr_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameserverCrash.server_public_ip_addr)
}

// optional uint32 server_port = 7;
inline bool CMsgGameserverCrash::has_server_port() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameserverCrash::clear_server_port() {
  server_port_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGameserverCrash::server_port() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameserverCrash.server_port)
  return server_port_;
}
inline void CMsgGameserverCrash::set_server_port(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  server_port_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameserverCrash.server_port)
}

// optional uint32 server_cluster = 8;
inline bool CMsgGameserverCrash::has_server_cluster() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGameserverCrash::clear_server_cluster() {
  server_cluster_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgGameserverCrash::server_cluster() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameserverCrash.server_cluster)
  return server_cluster_;
}
inline void CMsgGameserverCrash::set_server_cluster(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  server_cluster_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameserverCrash.server_cluster)
}

// optional uint32 pid = 9;
inline bool CMsgGameserverCrash::has_pid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGameserverCrash::clear_pid() {
  pid_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgGameserverCrash::pid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameserverCrash.pid)
  return pid_;
}
inline void CMsgGameserverCrash::set_pid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  pid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameserverCrash.pid)
}

// optional uint32 engine = 10;
inline bool CMsgGameserverCrash::has_engine() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGameserverCrash::clear_engine() {
  engine_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgGameserverCrash::engine() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameserverCrash.engine)
  return engine_;
}
inline void CMsgGameserverCrash::set_engine(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  engine_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameserverCrash.engine)
}

// -------------------------------------------------------------------

// CMsgConnectedPlayers_Player

// optional fixed64 steam_id = 1;
inline bool CMsgConnectedPlayers_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgConnectedPlayers_Player::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgConnectedPlayers_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.Player.steam_id)
  return steam_id_;
}
inline void CMsgConnectedPlayers_Player::set_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgConnectedPlayers.Player.steam_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgConnectedPlayers_Player::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgConnectedPlayers_Player::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgConnectedPlayers_Player::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.Player.hero_id)
  return hero_id_;
}
inline void CMsgConnectedPlayers_Player::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgConnectedPlayers.Player.hero_id)
}

// optional .proto.dota.CMsgLeaverState leaver_state = 3;
inline bool CMsgConnectedPlayers_Player::has_leaver_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CMsgLeaverState& CMsgConnectedPlayers_Player::leaver_state() const {
  const ::proto::dota::CMsgLeaverState* p = leaver_state_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.Player.leaver_state)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgLeaverState*>(
      &::proto::dota::_CMsgLeaverState_default_instance_);
}
inline ::proto::dota::CMsgLeaverState* CMsgConnectedPlayers_Player::release_leaver_state() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgConnectedPlayers.Player.leaver_state)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgLeaverState* temp = leaver_state_;
  leaver_state_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgLeaverState* CMsgConnectedPlayers_Player::mutable_leaver_state() {
  _has_bits_[0] |= 0x00000001u;
  if (leaver_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgLeaverState>(GetArenaNoVirtual());
    leaver_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgConnectedPlayers.Player.leaver_state)
  return leaver_state_;
}
inline void CMsgConnectedPlayers_Player::set_allocated_leaver_state(::proto::dota::CMsgLeaverState* leaver_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(leaver_state_);
  }
  if (leaver_state) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      leaver_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, leaver_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  leaver_state_ = leaver_state;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgConnectedPlayers.Player.leaver_state)
}

// optional .proto.dota.ENetworkDisconnectionReason disconnect_reason = 4 [default = NETWORK_DISCONNECT_INVALID];
inline bool CMsgConnectedPlayers_Player::has_disconnect_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgConnectedPlayers_Player::clear_disconnect_reason() {
  disconnect_reason_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::proto::dota::ENetworkDisconnectionReason CMsgConnectedPlayers_Player::disconnect_reason() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.Player.disconnect_reason)
  return static_cast< ::proto::dota::ENetworkDisconnectionReason >(disconnect_reason_);
}
inline void CMsgConnectedPlayers_Player::set_disconnect_reason(::proto::dota::ENetworkDisconnectionReason value) {
  assert(::proto::dota::ENetworkDisconnectionReason_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  disconnect_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgConnectedPlayers.Player.disconnect_reason)
}

// -------------------------------------------------------------------

// CMsgConnectedPlayers

// repeated .proto.dota.CMsgConnectedPlayers.Player connected_players = 1;
inline int CMsgConnectedPlayers::connected_players_size() const {
  return connected_players_.size();
}
inline void CMsgConnectedPlayers::clear_connected_players() {
  connected_players_.Clear();
}
inline ::proto::dota::CMsgConnectedPlayers_Player* CMsgConnectedPlayers::mutable_connected_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgConnectedPlayers.connected_players)
  return connected_players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgConnectedPlayers_Player >*
CMsgConnectedPlayers::mutable_connected_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgConnectedPlayers.connected_players)
  return &connected_players_;
}
inline const ::proto::dota::CMsgConnectedPlayers_Player& CMsgConnectedPlayers::connected_players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.connected_players)
  return connected_players_.Get(index);
}
inline ::proto::dota::CMsgConnectedPlayers_Player* CMsgConnectedPlayers::add_connected_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgConnectedPlayers.connected_players)
  return connected_players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgConnectedPlayers_Player >&
CMsgConnectedPlayers::connected_players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgConnectedPlayers.connected_players)
  return connected_players_;
}

// repeated .proto.dota.CMsgConnectedPlayers.Player disconnected_players = 7;
inline int CMsgConnectedPlayers::disconnected_players_size() const {
  return disconnected_players_.size();
}
inline void CMsgConnectedPlayers::clear_disconnected_players() {
  disconnected_players_.Clear();
}
inline ::proto::dota::CMsgConnectedPlayers_Player* CMsgConnectedPlayers::mutable_disconnected_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgConnectedPlayers.disconnected_players)
  return disconnected_players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgConnectedPlayers_Player >*
CMsgConnectedPlayers::mutable_disconnected_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgConnectedPlayers.disconnected_players)
  return &disconnected_players_;
}
inline const ::proto::dota::CMsgConnectedPlayers_Player& CMsgConnectedPlayers::disconnected_players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.disconnected_players)
  return disconnected_players_.Get(index);
}
inline ::proto::dota::CMsgConnectedPlayers_Player* CMsgConnectedPlayers::add_disconnected_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgConnectedPlayers.disconnected_players)
  return disconnected_players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgConnectedPlayers_Player >&
CMsgConnectedPlayers::disconnected_players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgConnectedPlayers.disconnected_players)
  return disconnected_players_;
}

// optional .proto.dota.DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];
inline bool CMsgConnectedPlayers::has_game_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgConnectedPlayers::clear_game_state() {
  game_state_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::DOTA_GameState CMsgConnectedPlayers::game_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.game_state)
  return static_cast< ::proto::dota::DOTA_GameState >(game_state_);
}
inline void CMsgConnectedPlayers::set_game_state(::proto::dota::DOTA_GameState value) {
  assert(::proto::dota::DOTA_GameState_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  game_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgConnectedPlayers.game_state)
}

// optional bool first_blood_happened = 6;
inline bool CMsgConnectedPlayers::has_first_blood_happened() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgConnectedPlayers::clear_first_blood_happened() {
  first_blood_happened_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgConnectedPlayers::first_blood_happened() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.first_blood_happened)
  return first_blood_happened_;
}
inline void CMsgConnectedPlayers::set_first_blood_happened(bool value) {
  _has_bits_[0] |= 0x00000004u;
  first_blood_happened_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgConnectedPlayers.first_blood_happened)
}

// optional bool legacy_mass_disconnect = 9;
inline bool CMsgConnectedPlayers::has_legacy_mass_disconnect() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgConnectedPlayers::clear_legacy_mass_disconnect() {
  legacy_mass_disconnect_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgConnectedPlayers::legacy_mass_disconnect() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.legacy_mass_disconnect)
  return legacy_mass_disconnect_;
}
inline void CMsgConnectedPlayers::set_legacy_mass_disconnect(bool value) {
  _has_bits_[0] |= 0x00000008u;
  legacy_mass_disconnect_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgConnectedPlayers.legacy_mass_disconnect)
}

// optional .proto.dota.CMsgPoorNetworkConditions poor_network_conditions = 10;
inline bool CMsgConnectedPlayers::has_poor_network_conditions() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgConnectedPlayers::clear_poor_network_conditions() {
  if (poor_network_conditions_ != nullptr) poor_network_conditions_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgPoorNetworkConditions& CMsgConnectedPlayers::poor_network_conditions() const {
  const ::proto::dota::CMsgPoorNetworkConditions* p = poor_network_conditions_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.poor_network_conditions)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgPoorNetworkConditions*>(
      &::proto::dota::_CMsgPoorNetworkConditions_default_instance_);
}
inline ::proto::dota::CMsgPoorNetworkConditions* CMsgConnectedPlayers::release_poor_network_conditions() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgConnectedPlayers.poor_network_conditions)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgPoorNetworkConditions* temp = poor_network_conditions_;
  poor_network_conditions_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgPoorNetworkConditions* CMsgConnectedPlayers::mutable_poor_network_conditions() {
  _has_bits_[0] |= 0x00000001u;
  if (poor_network_conditions_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgPoorNetworkConditions>(GetArenaNoVirtual());
    poor_network_conditions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgConnectedPlayers.poor_network_conditions)
  return poor_network_conditions_;
}
inline void CMsgConnectedPlayers::set_allocated_poor_network_conditions(::proto::dota::CMsgPoorNetworkConditions* poor_network_conditions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete poor_network_conditions_;
  }
  if (poor_network_conditions) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      poor_network_conditions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, poor_network_conditions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  poor_network_conditions_ = poor_network_conditions;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgConnectedPlayers.poor_network_conditions)
}

// optional .proto.dota.CMsgConnectedPlayers.SendReason send_reason = 8 [default = INVALID];
inline bool CMsgConnectedPlayers::has_send_reason() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgConnectedPlayers::clear_send_reason() {
  send_reason_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::proto::dota::CMsgConnectedPlayers_SendReason CMsgConnectedPlayers::send_reason() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.send_reason)
  return static_cast< ::proto::dota::CMsgConnectedPlayers_SendReason >(send_reason_);
}
inline void CMsgConnectedPlayers::set_send_reason(::proto::dota::CMsgConnectedPlayers_SendReason value) {
  assert(::proto::dota::CMsgConnectedPlayers_SendReason_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  send_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgConnectedPlayers.send_reason)
}

// optional uint32 radiant_kills = 11;
inline bool CMsgConnectedPlayers::has_radiant_kills() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgConnectedPlayers::clear_radiant_kills() {
  radiant_kills_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgConnectedPlayers::radiant_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.radiant_kills)
  return radiant_kills_;
}
inline void CMsgConnectedPlayers::set_radiant_kills(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  radiant_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgConnectedPlayers.radiant_kills)
}

// optional uint32 dire_kills = 12;
inline bool CMsgConnectedPlayers::has_dire_kills() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgConnectedPlayers::clear_dire_kills() {
  dire_kills_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgConnectedPlayers::dire_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.dire_kills)
  return dire_kills_;
}
inline void CMsgConnectedPlayers::set_dire_kills(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  dire_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgConnectedPlayers.dire_kills)
}

// optional int32 radiant_lead = 14;
inline bool CMsgConnectedPlayers::has_radiant_lead() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgConnectedPlayers::clear_radiant_lead() {
  radiant_lead_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::int32 CMsgConnectedPlayers::radiant_lead() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.radiant_lead)
  return radiant_lead_;
}
inline void CMsgConnectedPlayers::set_radiant_lead(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  radiant_lead_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgConnectedPlayers.radiant_lead)
}

// optional uint32 building_state = 15;
inline bool CMsgConnectedPlayers::has_building_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgConnectedPlayers::clear_building_state() {
  building_state_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgConnectedPlayers::building_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgConnectedPlayers.building_state)
  return building_state_;
}
inline void CMsgConnectedPlayers::set_building_state(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  building_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgConnectedPlayers.building_state)
}

// -------------------------------------------------------------------

// CMsgGameServerInfo

// optional fixed32 server_public_ip_addr = 1;
inline bool CMsgGameServerInfo::has_server_public_ip_addr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameServerInfo::clear_server_public_ip_addr() {
  server_public_ip_addr_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_public_ip_addr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_public_ip_addr)
  return server_public_ip_addr_;
}
inline void CMsgGameServerInfo::set_server_public_ip_addr(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  server_public_ip_addr_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_public_ip_addr)
}

// optional fixed32 server_private_ip_addr = 2;
inline bool CMsgGameServerInfo::has_server_private_ip_addr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameServerInfo::clear_server_private_ip_addr() {
  server_private_ip_addr_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_private_ip_addr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_private_ip_addr)
  return server_private_ip_addr_;
}
inline void CMsgGameServerInfo::set_server_private_ip_addr(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  server_private_ip_addr_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_private_ip_addr)
}

// optional uint32 server_port = 3;
inline bool CMsgGameServerInfo::has_server_port() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameServerInfo::clear_server_port() {
  server_port_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_port() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_port)
  return server_port_;
}
inline void CMsgGameServerInfo::set_server_port(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  server_port_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_port)
}

// optional uint32 server_tv_port = 4;
inline bool CMsgGameServerInfo::has_server_tv_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameServerInfo::clear_server_tv_port() {
  server_tv_port_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_tv_port() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_tv_port)
  return server_tv_port_;
}
inline void CMsgGameServerInfo::set_server_tv_port(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  server_tv_port_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_tv_port)
}

// optional uint32 assigned_server_tv_port = 22;
inline bool CMsgGameServerInfo::has_assigned_server_tv_port() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgGameServerInfo::clear_assigned_server_tv_port() {
  assigned_server_tv_port_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::assigned_server_tv_port() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.assigned_server_tv_port)
  return assigned_server_tv_port_;
}
inline void CMsgGameServerInfo::set_assigned_server_tv_port(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  assigned_server_tv_port_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.assigned_server_tv_port)
}

// optional uint32 legacy_server_steamdatagram_port = 21;
inline bool CMsgGameServerInfo::has_legacy_server_steamdatagram_port() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgGameServerInfo::clear_legacy_server_steamdatagram_port() {
  legacy_server_steamdatagram_port_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::legacy_server_steamdatagram_port() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.legacy_server_steamdatagram_port)
  return legacy_server_steamdatagram_port_;
}
inline void CMsgGameServerInfo::set_legacy_server_steamdatagram_port(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  legacy_server_steamdatagram_port_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.legacy_server_steamdatagram_port)
}

// optional bytes server_steamdatagram_address = 27;
inline bool CMsgGameServerInfo::has_server_steamdatagram_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameServerInfo::clear_server_steamdatagram_address() {
  server_steamdatagram_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgGameServerInfo::server_steamdatagram_address() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_steamdatagram_address)
  return server_steamdatagram_address_.GetNoArena();
}
inline void CMsgGameServerInfo::set_server_steamdatagram_address(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  server_steamdatagram_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_steamdatagram_address)
}
#if LANG_CXX11
inline void CMsgGameServerInfo::set_server_steamdatagram_address(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  server_steamdatagram_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGameServerInfo.server_steamdatagram_address)
}
#endif
inline void CMsgGameServerInfo::set_server_steamdatagram_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  server_steamdatagram_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGameServerInfo.server_steamdatagram_address)
}
inline void CMsgGameServerInfo::set_server_steamdatagram_address(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  server_steamdatagram_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGameServerInfo.server_steamdatagram_address)
}
inline ::std::string* CMsgGameServerInfo::mutable_server_steamdatagram_address() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameServerInfo.server_steamdatagram_address)
  return server_steamdatagram_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameServerInfo::release_server_steamdatagram_address() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameServerInfo.server_steamdatagram_address)
  if (!has_server_steamdatagram_address()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return server_steamdatagram_address_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameServerInfo::set_allocated_server_steamdatagram_address(::std::string* server_steamdatagram_address) {
  if (server_steamdatagram_address != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  server_steamdatagram_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_steamdatagram_address);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameServerInfo.server_steamdatagram_address)
}

// optional string server_key = 5;
inline bool CMsgGameServerInfo::has_server_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerInfo::clear_server_key() {
  server_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGameServerInfo::server_key() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_key)
  return server_key_.GetNoArena();
}
inline void CMsgGameServerInfo::set_server_key(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  server_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_key)
}
#if LANG_CXX11
inline void CMsgGameServerInfo::set_server_key(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  server_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGameServerInfo.server_key)
}
#endif
inline void CMsgGameServerInfo::set_server_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  server_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGameServerInfo.server_key)
}
inline void CMsgGameServerInfo::set_server_key(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  server_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGameServerInfo.server_key)
}
inline ::std::string* CMsgGameServerInfo::mutable_server_key() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameServerInfo.server_key)
  return server_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameServerInfo::release_server_key() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameServerInfo.server_key)
  if (!has_server_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return server_key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameServerInfo::set_allocated_server_key(::std::string* server_key) {
  if (server_key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  server_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_key);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameServerInfo.server_key)
}

// optional bool server_hibernation = 6;
inline bool CMsgGameServerInfo::has_server_hibernation() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameServerInfo::clear_server_hibernation() {
  server_hibernation_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CMsgGameServerInfo::server_hibernation() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_hibernation)
  return server_hibernation_;
}
inline void CMsgGameServerInfo::set_server_hibernation(bool value) {
  _has_bits_[0] |= 0x00000040u;
  server_hibernation_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_hibernation)
}

// optional .proto.dota.CMsgGameServerInfo.ServerType server_type = 7 [default = UNSPECIFIED];
inline bool CMsgGameServerInfo::has_server_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGameServerInfo::clear_server_type() {
  server_type_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::proto::dota::CMsgGameServerInfo_ServerType CMsgGameServerInfo::server_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_type)
  return static_cast< ::proto::dota::CMsgGameServerInfo_ServerType >(server_type_);
}
inline void CMsgGameServerInfo::set_server_type(::proto::dota::CMsgGameServerInfo_ServerType value) {
  assert(::proto::dota::CMsgGameServerInfo_ServerType_IsValid(value));
  _has_bits_[0] |= 0x00000080u;
  server_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_type)
}

// optional uint32 server_region = 8;
inline bool CMsgGameServerInfo::has_server_region() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGameServerInfo::clear_server_region() {
  server_region_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_region() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_region)
  return server_region_;
}
inline void CMsgGameServerInfo::set_server_region(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  server_region_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_region)
}

// optional float server_loadavg = 9;
inline bool CMsgGameServerInfo::has_server_loadavg() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGameServerInfo::clear_server_loadavg() {
  server_loadavg_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline float CMsgGameServerInfo::server_loadavg() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_loadavg)
  return server_loadavg_;
}
inline void CMsgGameServerInfo::set_server_loadavg(float value) {
  _has_bits_[0] |= 0x00000200u;
  server_loadavg_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_loadavg)
}

// optional float server_tv_broadcast_time = 10;
inline bool CMsgGameServerInfo::has_server_tv_broadcast_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGameServerInfo::clear_server_tv_broadcast_time() {
  server_tv_broadcast_time_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline float CMsgGameServerInfo::server_tv_broadcast_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_tv_broadcast_time)
  return server_tv_broadcast_time_;
}
inline void CMsgGameServerInfo::set_server_tv_broadcast_time(float value) {
  _has_bits_[0] |= 0x00000400u;
  server_tv_broadcast_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_tv_broadcast_time)
}

// optional float server_game_time = 11;
inline bool CMsgGameServerInfo::has_server_game_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGameServerInfo::clear_server_game_time() {
  server_game_time_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline float CMsgGameServerInfo::server_game_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_game_time)
  return server_game_time_;
}
inline void CMsgGameServerInfo::set_server_game_time(float value) {
  _has_bits_[0] |= 0x00000800u;
  server_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_game_time)
}

// optional fixed64 server_relay_connected_steam_id = 12;
inline bool CMsgGameServerInfo::has_server_relay_connected_steam_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGameServerInfo::clear_server_relay_connected_steam_id() {
  server_relay_connected_steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint64 CMsgGameServerInfo::server_relay_connected_steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_relay_connected_steam_id)
  return server_relay_connected_steam_id_;
}
inline void CMsgGameServerInfo::set_server_relay_connected_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00001000u;
  server_relay_connected_steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_relay_connected_steam_id)
}

// optional uint32 relay_slots_max = 13;
inline bool CMsgGameServerInfo::has_relay_slots_max() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGameServerInfo::clear_relay_slots_max() {
  relay_slots_max_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::relay_slots_max() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.relay_slots_max)
  return relay_slots_max_;
}
inline void CMsgGameServerInfo::set_relay_slots_max(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  relay_slots_max_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.relay_slots_max)
}

// optional int32 relays_connected = 14;
inline bool CMsgGameServerInfo::has_relays_connected() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGameServerInfo::clear_relays_connected() {
  relays_connected_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::google::protobuf::int32 CMsgGameServerInfo::relays_connected() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.relays_connected)
  return relays_connected_;
}
inline void CMsgGameServerInfo::set_relays_connected(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  relays_connected_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.relays_connected)
}

// optional int32 relay_clients_connected = 15;
inline bool CMsgGameServerInfo::has_relay_clients_connected() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGameServerInfo::clear_relay_clients_connected() {
  relay_clients_connected_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::google::protobuf::int32 CMsgGameServerInfo::relay_clients_connected() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.relay_clients_connected)
  return relay_clients_connected_;
}
inline void CMsgGameServerInfo::set_relay_clients_connected(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00010000u;
  relay_clients_connected_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.relay_clients_connected)
}

// optional fixed64 relayed_game_server_steam_id = 16;
inline bool CMsgGameServerInfo::has_relayed_game_server_steam_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGameServerInfo::clear_relayed_game_server_steam_id() {
  relayed_game_server_steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00008000u;
}
inline ::google::protobuf::uint64 CMsgGameServerInfo::relayed_game_server_steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.relayed_game_server_steam_id)
  return relayed_game_server_steam_id_;
}
inline void CMsgGameServerInfo::set_relayed_game_server_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00008000u;
  relayed_game_server_steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.relayed_game_server_steam_id)
}

// optional uint32 parent_relay_count = 17;
inline bool CMsgGameServerInfo::has_parent_relay_count() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGameServerInfo::clear_parent_relay_count() {
  parent_relay_count_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::parent_relay_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.parent_relay_count)
  return parent_relay_count_;
}
inline void CMsgGameServerInfo::set_parent_relay_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  parent_relay_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.parent_relay_count)
}

// optional fixed64 tv_secret_code = 18;
inline bool CMsgGameServerInfo::has_tv_secret_code() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGameServerInfo::clear_tv_secret_code() {
  tv_secret_code_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::uint64 CMsgGameServerInfo::tv_secret_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.tv_secret_code)
  return tv_secret_code_;
}
inline void CMsgGameServerInfo::set_tv_secret_code(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00040000u;
  tv_secret_code_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.tv_secret_code)
}

// optional uint32 server_version = 19;
inline bool CMsgGameServerInfo::has_server_version() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgGameServerInfo::clear_server_version() {
  server_version_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_version)
  return server_version_;
}
inline void CMsgGameServerInfo::set_server_version(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  server_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_version)
}

// optional uint32 server_cluster = 20;
inline bool CMsgGameServerInfo::has_server_cluster() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgGameServerInfo::clear_server_cluster() {
  server_cluster_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_cluster() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.server_cluster)
  return server_cluster_;
}
inline void CMsgGameServerInfo::set_server_cluster(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  server_cluster_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.server_cluster)
}

// optional .proto.dota.CMsgGameServerInfo.CustomGames allow_custom_games = 23 [default = BOTH];
inline bool CMsgGameServerInfo::has_allow_custom_games() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgGameServerInfo::clear_allow_custom_games() {
  allow_custom_games_ = 0;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::proto::dota::CMsgGameServerInfo_CustomGames CMsgGameServerInfo::allow_custom_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.allow_custom_games)
  return static_cast< ::proto::dota::CMsgGameServerInfo_CustomGames >(allow_custom_games_);
}
inline void CMsgGameServerInfo::set_allow_custom_games(::proto::dota::CMsgGameServerInfo_CustomGames value) {
  assert(::proto::dota::CMsgGameServerInfo_CustomGames_IsValid(value));
  _has_bits_[0] |= 0x00800000u;
  allow_custom_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.allow_custom_games)
}

// optional uint32 build_version = 24;
inline bool CMsgGameServerInfo::has_build_version() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgGameServerInfo::clear_build_version() {
  build_version_ = 0u;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::build_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.build_version)
  return build_version_;
}
inline void CMsgGameServerInfo::set_build_version(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x01000000u;
  build_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.build_version)
}

// optional uint32 tf_server_count = 25;
inline bool CMsgGameServerInfo::has_tf_server_count() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgGameServerInfo::clear_tf_server_count() {
  tf_server_count_ = 0u;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::tf_server_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.tf_server_count)
  return tf_server_count_;
}
inline void CMsgGameServerInfo::set_tf_server_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x02000000u;
  tf_server_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.tf_server_count)
}

// optional uint32 srcds_instance = 26;
inline bool CMsgGameServerInfo::has_srcds_instance() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgGameServerInfo::clear_srcds_instance() {
  srcds_instance_ = 0u;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::srcds_instance() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerInfo.srcds_instance)
  return srcds_instance_;
}
inline void CMsgGameServerInfo::set_srcds_instance(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x04000000u;
  srcds_instance_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerInfo.srcds_instance)
}

// -------------------------------------------------------------------

// CMsgLeaverDetected

// optional fixed64 steam_id = 1;
inline bool CMsgLeaverDetected::has_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLeaverDetected::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgLeaverDetected::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeaverDetected.steam_id)
  return steam_id_;
}
inline void CMsgLeaverDetected::set_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeaverDetected.steam_id)
}

// optional .proto.dota.DOTALeaverStatus_t leaver_status = 2 [default = DOTA_LEAVER_NONE];
inline bool CMsgLeaverDetected::has_leaver_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgLeaverDetected::clear_leaver_status() {
  leaver_status_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::proto::dota::DOTALeaverStatus_t CMsgLeaverDetected::leaver_status() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeaverDetected.leaver_status)
  return static_cast< ::proto::dota::DOTALeaverStatus_t >(leaver_status_);
}
inline void CMsgLeaverDetected::set_leaver_status(::proto::dota::DOTALeaverStatus_t value) {
  assert(::proto::dota::DOTALeaverStatus_t_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  leaver_status_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeaverDetected.leaver_status)
}

// optional .proto.dota.CMsgLeaverState leaver_state = 4;
inline bool CMsgLeaverDetected::has_leaver_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CMsgLeaverState& CMsgLeaverDetected::leaver_state() const {
  const ::proto::dota::CMsgLeaverState* p = leaver_state_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeaverDetected.leaver_state)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgLeaverState*>(
      &::proto::dota::_CMsgLeaverState_default_instance_);
}
inline ::proto::dota::CMsgLeaverState* CMsgLeaverDetected::release_leaver_state() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgLeaverDetected.leaver_state)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgLeaverState* temp = leaver_state_;
  leaver_state_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgLeaverState* CMsgLeaverDetected::mutable_leaver_state() {
  _has_bits_[0] |= 0x00000001u;
  if (leaver_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgLeaverState>(GetArenaNoVirtual());
    leaver_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgLeaverDetected.leaver_state)
  return leaver_state_;
}
inline void CMsgLeaverDetected::set_allocated_leaver_state(::proto::dota::CMsgLeaverState* leaver_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(leaver_state_);
  }
  if (leaver_state) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      leaver_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, leaver_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  leaver_state_ = leaver_state;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgLeaverDetected.leaver_state)
}

// optional uint32 server_cluster = 5;
inline bool CMsgLeaverDetected::has_server_cluster() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgLeaverDetected::clear_server_cluster() {
  server_cluster_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgLeaverDetected::server_cluster() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeaverDetected.server_cluster)
  return server_cluster_;
}
inline void CMsgLeaverDetected::set_server_cluster(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  server_cluster_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeaverDetected.server_cluster)
}

// optional .proto.dota.ENetworkDisconnectionReason disconnect_reason = 6 [default = NETWORK_DISCONNECT_INVALID];
inline bool CMsgLeaverDetected::has_disconnect_reason() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgLeaverDetected::clear_disconnect_reason() {
  disconnect_reason_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::proto::dota::ENetworkDisconnectionReason CMsgLeaverDetected::disconnect_reason() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeaverDetected.disconnect_reason)
  return static_cast< ::proto::dota::ENetworkDisconnectionReason >(disconnect_reason_);
}
inline void CMsgLeaverDetected::set_disconnect_reason(::proto::dota::ENetworkDisconnectionReason value) {
  assert(::proto::dota::ENetworkDisconnectionReason_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  disconnect_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeaverDetected.disconnect_reason)
}

// optional .proto.dota.CMsgPoorNetworkConditions poor_network_conditions = 7;
inline bool CMsgLeaverDetected::has_poor_network_conditions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLeaverDetected::clear_poor_network_conditions() {
  if (poor_network_conditions_ != nullptr) poor_network_conditions_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgPoorNetworkConditions& CMsgLeaverDetected::poor_network_conditions() const {
  const ::proto::dota::CMsgPoorNetworkConditions* p = poor_network_conditions_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeaverDetected.poor_network_conditions)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgPoorNetworkConditions*>(
      &::proto::dota::_CMsgPoorNetworkConditions_default_instance_);
}
inline ::proto::dota::CMsgPoorNetworkConditions* CMsgLeaverDetected::release_poor_network_conditions() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgLeaverDetected.poor_network_conditions)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgPoorNetworkConditions* temp = poor_network_conditions_;
  poor_network_conditions_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgPoorNetworkConditions* CMsgLeaverDetected::mutable_poor_network_conditions() {
  _has_bits_[0] |= 0x00000002u;
  if (poor_network_conditions_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgPoorNetworkConditions>(GetArenaNoVirtual());
    poor_network_conditions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgLeaverDetected.poor_network_conditions)
  return poor_network_conditions_;
}
inline void CMsgLeaverDetected::set_allocated_poor_network_conditions(::proto::dota::CMsgPoorNetworkConditions* poor_network_conditions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete poor_network_conditions_;
  }
  if (poor_network_conditions) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      poor_network_conditions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, poor_network_conditions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  poor_network_conditions_ = poor_network_conditions;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgLeaverDetected.poor_network_conditions)
}

// -------------------------------------------------------------------

// CMsgLeaverDetectedResponse

// optional uint32 result = 1;
inline bool CMsgLeaverDetectedResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeaverDetectedResponse::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgLeaverDetectedResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeaverDetectedResponse.result)
  return result_;
}
inline void CMsgLeaverDetectedResponse::set_result(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeaverDetectedResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAFantasyFinalPlayerStats

// repeated .proto.dota.CMsgDOTAFantasyPlayerStats stats = 2;
inline int CMsgDOTAFantasyFinalPlayerStats::stats_size() const {
  return stats_.size();
}
inline ::proto::dota::CMsgDOTAFantasyPlayerStats* CMsgDOTAFantasyFinalPlayerStats::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAFantasyFinalPlayerStats.stats)
  return stats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats >*
CMsgDOTAFantasyFinalPlayerStats::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAFantasyFinalPlayerStats.stats)
  return &stats_;
}
inline const ::proto::dota::CMsgDOTAFantasyPlayerStats& CMsgDOTAFantasyFinalPlayerStats::stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFantasyFinalPlayerStats.stats)
  return stats_.Get(index);
}
inline ::proto::dota::CMsgDOTAFantasyPlayerStats* CMsgDOTAFantasyFinalPlayerStats::add_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFantasyFinalPlayerStats.stats)
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats >&
CMsgDOTAFantasyFinalPlayerStats::stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAFantasyFinalPlayerStats.stats)
  return stats_;
}

// -------------------------------------------------------------------

// CMsgDOTAFantasyLivePlayerStats

// repeated .proto.dota.CMsgDOTAFantasyPlayerStats stats = 2;
inline int CMsgDOTAFantasyLivePlayerStats::stats_size() const {
  return stats_.size();
}
inline ::proto::dota::CMsgDOTAFantasyPlayerStats* CMsgDOTAFantasyLivePlayerStats::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAFantasyLivePlayerStats.stats)
  return stats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats >*
CMsgDOTAFantasyLivePlayerStats::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAFantasyLivePlayerStats.stats)
  return &stats_;
}
inline const ::proto::dota::CMsgDOTAFantasyPlayerStats& CMsgDOTAFantasyLivePlayerStats::stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFantasyLivePlayerStats.stats)
  return stats_.Get(index);
}
inline ::proto::dota::CMsgDOTAFantasyPlayerStats* CMsgDOTAFantasyLivePlayerStats::add_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFantasyLivePlayerStats.stats)
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats >&
CMsgDOTAFantasyLivePlayerStats::stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAFantasyLivePlayerStats.stats)
  return stats_;
}

// -------------------------------------------------------------------

// CMsgDOTAFantasyMatch

// optional uint64 match_id = 1;
inline bool CMsgDOTAFantasyMatch::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFantasyMatch::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgDOTAFantasyMatch::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFantasyMatch.match_id)
  return match_id_;
}
inline void CMsgDOTAFantasyMatch::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFantasyMatch.match_id)
}

// optional uint32 league_id = 2;
inline bool CMsgDOTAFantasyMatch::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFantasyMatch::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyMatch::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFantasyMatch.league_id)
  return league_id_;
}
inline void CMsgDOTAFantasyMatch::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFantasyMatch.league_id)
}

// optional uint32 series_id = 3;
inline bool CMsgDOTAFantasyMatch::has_series_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAFantasyMatch::clear_series_id() {
  series_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyMatch::series_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFantasyMatch.series_id)
  return series_id_;
}
inline void CMsgDOTAFantasyMatch::set_series_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  series_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFantasyMatch.series_id)
}

// optional uint32 start_time = 4;
inline bool CMsgDOTAFantasyMatch::has_start_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAFantasyMatch::clear_start_time() {
  start_time_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyMatch::start_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFantasyMatch.start_time)
  return start_time_;
}
inline void CMsgDOTAFantasyMatch::set_start_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFantasyMatch.start_time)
}

// optional uint32 series_type = 5;
inline bool CMsgDOTAFantasyMatch::has_series_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAFantasyMatch::clear_series_type() {
  series_type_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyMatch::series_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFantasyMatch.series_type)
  return series_type_;
}
inline void CMsgDOTAFantasyMatch::set_series_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  series_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFantasyMatch.series_type)
}

// optional uint32 team_1 = 6;
inline bool CMsgDOTAFantasyMatch::has_team_1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAFantasyMatch::clear_team_1() {
  team_1_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyMatch::team_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFantasyMatch.team_1)
  return team_1_;
}
inline void CMsgDOTAFantasyMatch::set_team_1(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  team_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFantasyMatch.team_1)
}

// optional uint32 team_2 = 7;
inline bool CMsgDOTAFantasyMatch::has_team_2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAFantasyMatch::clear_team_2() {
  team_2_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgDOTAFantasyMatch::team_2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFantasyMatch.team_2)
  return team_2_;
}
inline void CMsgDOTAFantasyMatch::set_team_2(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  team_2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFantasyMatch.team_2)
}

// -------------------------------------------------------------------

// CMsgDOTAUpdateClippy

// repeated uint32 good_team_hero_ids = 1;
inline int CMsgDOTAUpdateClippy::good_team_hero_ids_size() const {
  return good_team_hero_ids_.size();
}
inline void CMsgDOTAUpdateClippy::clear_good_team_hero_ids() {
  good_team_hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAUpdateClippy::good_team_hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAUpdateClippy.good_team_hero_ids)
  return good_team_hero_ids_.Get(index);
}
inline void CMsgDOTAUpdateClippy::set_good_team_hero_ids(int index, ::google::protobuf::uint32 value) {
  good_team_hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAUpdateClippy.good_team_hero_ids)
}
inline void CMsgDOTAUpdateClippy::add_good_team_hero_ids(::google::protobuf::uint32 value) {
  good_team_hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAUpdateClippy.good_team_hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAUpdateClippy::good_team_hero_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAUpdateClippy.good_team_hero_ids)
  return good_team_hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAUpdateClippy::mutable_good_team_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAUpdateClippy.good_team_hero_ids)
  return &good_team_hero_ids_;
}

// repeated uint32 bad_team_hero_ids = 2;
inline int CMsgDOTAUpdateClippy::bad_team_hero_ids_size() const {
  return bad_team_hero_ids_.size();
}
inline void CMsgDOTAUpdateClippy::clear_bad_team_hero_ids() {
  bad_team_hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAUpdateClippy::bad_team_hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAUpdateClippy.bad_team_hero_ids)
  return bad_team_hero_ids_.Get(index);
}
inline void CMsgDOTAUpdateClippy::set_bad_team_hero_ids(int index, ::google::protobuf::uint32 value) {
  bad_team_hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAUpdateClippy.bad_team_hero_ids)
}
inline void CMsgDOTAUpdateClippy::add_bad_team_hero_ids(::google::protobuf::uint32 value) {
  bad_team_hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAUpdateClippy.bad_team_hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAUpdateClippy::bad_team_hero_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAUpdateClippy.bad_team_hero_ids)
  return bad_team_hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAUpdateClippy::mutable_bad_team_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAUpdateClippy.bad_team_hero_ids)
  return &bad_team_hero_ids_;
}

// -------------------------------------------------------------------

// CMsgServerToGCRealtimeStats

// optional .proto.dota.CMsgDOTARealtimeGameStatsTerse delayed = 1;
inline bool CMsgServerToGCRealtimeStats::has_delayed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CMsgDOTARealtimeGameStatsTerse& CMsgServerToGCRealtimeStats::delayed() const {
  const ::proto::dota::CMsgDOTARealtimeGameStatsTerse* p = delayed_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCRealtimeStats.delayed)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTARealtimeGameStatsTerse*>(
      &::proto::dota::_CMsgDOTARealtimeGameStatsTerse_default_instance_);
}
inline ::proto::dota::CMsgDOTARealtimeGameStatsTerse* CMsgServerToGCRealtimeStats::release_delayed() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgServerToGCRealtimeStats.delayed)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTARealtimeGameStatsTerse* temp = delayed_;
  delayed_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTARealtimeGameStatsTerse* CMsgServerToGCRealtimeStats::mutable_delayed() {
  _has_bits_[0] |= 0x00000001u;
  if (delayed_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTARealtimeGameStatsTerse>(GetArenaNoVirtual());
    delayed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCRealtimeStats.delayed)
  return delayed_;
}
inline void CMsgServerToGCRealtimeStats::set_allocated_delayed(::proto::dota::CMsgDOTARealtimeGameStatsTerse* delayed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(delayed_);
  }
  if (delayed) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      delayed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delayed, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  delayed_ = delayed;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgServerToGCRealtimeStats.delayed)
}

// -------------------------------------------------------------------

// CMsgGCToServerRealtimeStatsStartStop

// optional bool delayed = 1;
inline bool CMsgGCToServerRealtimeStatsStartStop::has_delayed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerRealtimeStatsStartStop::clear_delayed() {
  delayed_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCToServerRealtimeStatsStartStop::delayed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerRealtimeStatsStartStop.delayed)
  return delayed_;
}
inline void CMsgGCToServerRealtimeStatsStartStop::set_delayed(bool value) {
  _has_bits_[0] |= 0x00000001u;
  delayed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerRealtimeStatsStartStop.delayed)
}

// -------------------------------------------------------------------

// CMsgGCToServerUpdateSteamBroadcasting

// optional bool active = 1;
inline bool CMsgGCToServerUpdateSteamBroadcasting::has_active() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerUpdateSteamBroadcasting::clear_active() {
  active_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCToServerUpdateSteamBroadcasting::active() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerUpdateSteamBroadcasting.active)
  return active_;
}
inline void CMsgGCToServerUpdateSteamBroadcasting::set_active(bool value) {
  _has_bits_[0] |= 0x00000001u;
  active_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerUpdateSteamBroadcasting.active)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData

// optional uint32 dota_team = 1;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::has_dota_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::clear_dota_team() {
  dota_team_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::dota_team() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData.dota_team)
  return dota_team_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::set_dota_team(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  dota_team_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData.dota_team)
}

// optional bool winner = 2;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::has_winner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::clear_winner() {
  winner_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::winner() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData.winner)
  return winner_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData::set_winner(bool value) {
  _has_bits_[0] |= 0x00000002u;
  winner_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData.winner)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_CTeam_CPlayer

// optional fixed64 steam_id = 1;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgGameMatchSignOut_CTeam_CPlayer::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.steam_id)
  return steam_id_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.steam_id)
}

// optional uint32 hero_id = 3;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_id)
  return hero_id_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_id)
}

// repeated uint32 items = 4;
inline int CMsgGameMatchSignOut_CTeam_CPlayer::items_size() const {
  return items_.size();
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_items() {
  items_.Clear();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::items(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.items)
  return items_.Get(index);
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_items(int index, ::google::protobuf::uint32 value) {
  items_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.items)
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::add_items(::google::protobuf::uint32 value) {
  items_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGameMatchSignOut_CTeam_CPlayer::items() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.items)
  return items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGameMatchSignOut_CTeam_CPlayer::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.items)
  return &items_;
}

// optional uint32 gold = 5;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_gold() {
  gold_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::gold() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.gold)
  return gold_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_gold(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  gold_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.gold)
}

// optional uint32 kills = 6;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_kills() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_kills() {
  kills_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.kills)
  return kills_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_kills(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.kills)
}

// optional uint32 deaths = 7;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_deaths() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_deaths() {
  deaths_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::deaths() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.deaths)
  return deaths_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_deaths(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  deaths_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.deaths)
}

// optional uint32 assists = 8;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_assists() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_assists() {
  assists_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::assists() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.assists)
  return assists_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_assists(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  assists_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.assists)
}

// optional uint32 leaver_status = 9;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_leaver_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_leaver_status() {
  leaver_status_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::leaver_status() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.leaver_status)
  return leaver_status_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_leaver_status(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  leaver_status_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.leaver_status)
}

// optional uint32 last_hits = 10;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_last_hits() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_last_hits() {
  last_hits_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::last_hits() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.last_hits)
  return last_hits_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_last_hits(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  last_hits_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.last_hits)
}

// optional uint32 denies = 11;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_denies() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_denies() {
  denies_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::denies() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.denies)
  return denies_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_denies(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  denies_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.denies)
}

// optional uint32 gold_per_min = 12;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_gold_per_min() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_gold_per_min() {
  gold_per_min_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::gold_per_min() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.gold_per_min)
  return gold_per_min_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_gold_per_min(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  gold_per_min_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.gold_per_min)
}

// optional uint32 xp_per_minute = 13;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_xp_per_minute() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_xp_per_minute() {
  xp_per_minute_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::xp_per_minute() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.xp_per_minute)
  return xp_per_minute_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_xp_per_minute(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  xp_per_minute_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.xp_per_minute)
}

// optional uint32 gold_spent = 14;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_gold_spent() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_gold_spent() {
  gold_spent_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::gold_spent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.gold_spent)
  return gold_spent_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_gold_spent(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  gold_spent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.gold_spent)
}

// optional uint32 level = 15;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_level() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.level)
  return level_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_level(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.level)
}

// optional uint32 scaled_hero_damage = 16;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_scaled_hero_damage() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_scaled_hero_damage() {
  scaled_hero_damage_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::scaled_hero_damage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.scaled_hero_damage)
  return scaled_hero_damage_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_scaled_hero_damage(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  scaled_hero_damage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.scaled_hero_damage)
}

// optional uint32 scaled_tower_damage = 17;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_scaled_tower_damage() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_scaled_tower_damage() {
  scaled_tower_damage_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::scaled_tower_damage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.scaled_tower_damage)
  return scaled_tower_damage_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_scaled_tower_damage(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  scaled_tower_damage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.scaled_tower_damage)
}

// optional uint32 scaled_hero_healing = 18;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_scaled_hero_healing() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_scaled_hero_healing() {
  scaled_hero_healing_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::scaled_hero_healing() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.scaled_hero_healing)
  return scaled_hero_healing_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_scaled_hero_healing(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  scaled_hero_healing_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.scaled_hero_healing)
}

// optional uint32 time_last_seen = 19;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_time_last_seen() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_time_last_seen() {
  time_last_seen_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::time_last_seen() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.time_last_seen)
  return time_last_seen_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_time_last_seen(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  time_last_seen_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.time_last_seen)
}

// optional uint32 support_ability_value = 20;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_support_ability_value() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_support_ability_value() {
  support_ability_value_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::support_ability_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.support_ability_value)
  return support_ability_value_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_support_ability_value(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  support_ability_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.support_ability_value)
}

// optional uint64 party_id = 21;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_party_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_party_id() {
  party_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::uint64 CMsgGameMatchSignOut_CTeam_CPlayer::party_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.party_id)
  return party_id_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_party_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00040000u;
  party_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.party_id)
}

// optional float scaled_kills = 24;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_scaled_kills() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_scaled_kills() {
  scaled_kills_ = 0;
  _has_bits_[0] &= ~0x00100000u;
}
inline float CMsgGameMatchSignOut_CTeam_CPlayer::scaled_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.scaled_kills)
  return scaled_kills_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_scaled_kills(float value) {
  _has_bits_[0] |= 0x00100000u;
  scaled_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.scaled_kills)
}

// optional float scaled_deaths = 25;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_scaled_deaths() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_scaled_deaths() {
  scaled_deaths_ = 0;
  _has_bits_[0] &= ~0x00200000u;
}
inline float CMsgGameMatchSignOut_CTeam_CPlayer::scaled_deaths() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.scaled_deaths)
  return scaled_deaths_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_scaled_deaths(float value) {
  _has_bits_[0] |= 0x00200000u;
  scaled_deaths_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.scaled_deaths)
}

// optional float scaled_assists = 26;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_scaled_assists() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_scaled_assists() {
  scaled_assists_ = 0;
  _has_bits_[0] &= ~0x00400000u;
}
inline float CMsgGameMatchSignOut_CTeam_CPlayer::scaled_assists() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.scaled_assists)
  return scaled_assists_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_scaled_assists(float value) {
  _has_bits_[0] |= 0x00400000u;
  scaled_assists_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.scaled_assists)
}

// optional uint32 claimed_farm_gold = 27;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_claimed_farm_gold() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_claimed_farm_gold() {
  claimed_farm_gold_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::claimed_farm_gold() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.claimed_farm_gold)
  return claimed_farm_gold_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_claimed_farm_gold(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  claimed_farm_gold_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.claimed_farm_gold)
}

// optional uint32 support_gold = 28;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_support_gold() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_support_gold() {
  support_gold_ = 0u;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::support_gold() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.support_gold)
  return support_gold_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_support_gold(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x01000000u;
  support_gold_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.support_gold)
}

// optional uint32 claimed_denies = 29;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_claimed_denies() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_claimed_denies() {
  claimed_denies_ = 0u;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::claimed_denies() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.claimed_denies)
  return claimed_denies_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_claimed_denies(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x02000000u;
  claimed_denies_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.claimed_denies)
}

// optional uint32 claimed_misses = 30;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_claimed_misses() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_claimed_misses() {
  claimed_misses_ = 0u;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::claimed_misses() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.claimed_misses)
  return claimed_misses_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_claimed_misses(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x04000000u;
  claimed_misses_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.claimed_misses)
}

// optional uint32 misses = 31;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_misses() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_misses() {
  misses_ = 0u;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::misses() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.misses)
  return misses_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_misses(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x08000000u;
  misses_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.misses)
}

// optional uint32 net_worth = 34;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_net_worth() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_net_worth() {
  net_worth_ = 0u;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::net_worth() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.net_worth)
  return net_worth_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_net_worth(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x10000000u;
  net_worth_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.net_worth)
}

// optional uint32 hero_damage = 37;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_hero_damage() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_hero_damage() {
  hero_damage_ = 0u;
  _has_bits_[0] &= ~0x40000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::hero_damage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_damage)
  return hero_damage_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_hero_damage(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x40000000u;
  hero_damage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_damage)
}

// optional uint32 tower_damage = 38;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_tower_damage() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_tower_damage() {
  tower_damage_ = 0u;
  _has_bits_[0] &= ~0x80000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::tower_damage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.tower_damage)
  return tower_damage_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_tower_damage(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x80000000u;
  tower_damage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.tower_damage)
}

// optional uint32 hero_healing = 39;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_hero_healing() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_hero_healing() {
  hero_healing_ = 0u;
  _has_bits_[1] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::hero_healing() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_healing)
  return hero_healing_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_hero_healing(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000001u;
  hero_healing_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_healing)
}

// repeated .proto.dota.CMatchPlayerAbilityUpgrade ability_upgrades = 32;
inline int CMsgGameMatchSignOut_CTeam_CPlayer::ability_upgrades_size() const {
  return ability_upgrades_.size();
}
inline ::proto::dota::CMatchPlayerAbilityUpgrade* CMsgGameMatchSignOut_CTeam_CPlayer::mutable_ability_upgrades(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.ability_upgrades)
  return ability_upgrades_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerAbilityUpgrade >*
CMsgGameMatchSignOut_CTeam_CPlayer::mutable_ability_upgrades() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.ability_upgrades)
  return &ability_upgrades_;
}
inline const ::proto::dota::CMatchPlayerAbilityUpgrade& CMsgGameMatchSignOut_CTeam_CPlayer::ability_upgrades(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.ability_upgrades)
  return ability_upgrades_.Get(index);
}
inline ::proto::dota::CMatchPlayerAbilityUpgrade* CMsgGameMatchSignOut_CTeam_CPlayer::add_ability_upgrades() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.ability_upgrades)
  return ability_upgrades_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerAbilityUpgrade >&
CMsgGameMatchSignOut_CTeam_CPlayer::ability_upgrades() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.ability_upgrades)
  return ability_upgrades_;
}

// repeated .proto.dota.CMatchAdditionalUnitInventory additional_units_inventory = 33;
inline int CMsgGameMatchSignOut_CTeam_CPlayer::additional_units_inventory_size() const {
  return additional_units_inventory_.size();
}
inline ::proto::dota::CMatchAdditionalUnitInventory* CMsgGameMatchSignOut_CTeam_CPlayer::mutable_additional_units_inventory(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.additional_units_inventory)
  return additional_units_inventory_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchAdditionalUnitInventory >*
CMsgGameMatchSignOut_CTeam_CPlayer::mutable_additional_units_inventory() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.additional_units_inventory)
  return &additional_units_inventory_;
}
inline const ::proto::dota::CMatchAdditionalUnitInventory& CMsgGameMatchSignOut_CTeam_CPlayer::additional_units_inventory(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.additional_units_inventory)
  return additional_units_inventory_.Get(index);
}
inline ::proto::dota::CMatchAdditionalUnitInventory* CMsgGameMatchSignOut_CTeam_CPlayer::add_additional_units_inventory() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.additional_units_inventory)
  return additional_units_inventory_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchAdditionalUnitInventory >&
CMsgGameMatchSignOut_CTeam_CPlayer::additional_units_inventory() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.additional_units_inventory)
  return additional_units_inventory_;
}

// repeated .proto.dota.CMatchPlayerPermanentBuff permanent_buffs = 40;
inline int CMsgGameMatchSignOut_CTeam_CPlayer::permanent_buffs_size() const {
  return permanent_buffs_.size();
}
inline ::proto::dota::CMatchPlayerPermanentBuff* CMsgGameMatchSignOut_CTeam_CPlayer::mutable_permanent_buffs(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.permanent_buffs)
  return permanent_buffs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerPermanentBuff >*
CMsgGameMatchSignOut_CTeam_CPlayer::mutable_permanent_buffs() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.permanent_buffs)
  return &permanent_buffs_;
}
inline const ::proto::dota::CMatchPlayerPermanentBuff& CMsgGameMatchSignOut_CTeam_CPlayer::permanent_buffs(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.permanent_buffs)
  return permanent_buffs_.Get(index);
}
inline ::proto::dota::CMatchPlayerPermanentBuff* CMsgGameMatchSignOut_CTeam_CPlayer::add_permanent_buffs() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.permanent_buffs)
  return permanent_buffs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerPermanentBuff >&
CMsgGameMatchSignOut_CTeam_CPlayer::permanent_buffs() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.permanent_buffs)
  return permanent_buffs_;
}

// optional .proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.CCustomGameData custom_game_data = 35;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_custom_game_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_custom_game_data() {
  if (custom_game_data_ != nullptr) custom_game_data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData& CMsgGameMatchSignOut_CTeam_CPlayer::custom_game_data() const {
  const ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* p = custom_game_data_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.custom_game_data)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData*>(
      &::proto::dota::_CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData_default_instance_);
}
inline ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* CMsgGameMatchSignOut_CTeam_CPlayer::release_custom_game_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.custom_game_data)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* temp = custom_game_data_;
  custom_game_data_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* CMsgGameMatchSignOut_CTeam_CPlayer::mutable_custom_game_data() {
  _has_bits_[0] |= 0x00000001u;
  if (custom_game_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData>(GetArenaNoVirtual());
    custom_game_data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.custom_game_data)
  return custom_game_data_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_allocated_custom_game_data(::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer_CCustomGameData* custom_game_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete custom_game_data_;
  }
  if (custom_game_data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      custom_game_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, custom_game_data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  custom_game_data_ = custom_game_data;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.custom_game_data)
}

// optional uint32 match_player_flags = 36;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_match_player_flags() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_match_player_flags() {
  match_player_flags_ = 0u;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::match_player_flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.match_player_flags)
  return match_player_flags_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_match_player_flags(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x20000000u;
  match_player_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.match_player_flags)
}

// repeated uint32 talent_ability_ids = 41;
inline int CMsgGameMatchSignOut_CTeam_CPlayer::talent_ability_ids_size() const {
  return talent_ability_ids_.size();
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_talent_ability_ids() {
  talent_ability_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::talent_ability_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.talent_ability_ids)
  return talent_ability_ids_.Get(index);
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_talent_ability_ids(int index, ::google::protobuf::uint32 value) {
  talent_ability_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.talent_ability_ids)
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::add_talent_ability_ids(::google::protobuf::uint32 value) {
  talent_ability_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.talent_ability_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGameMatchSignOut_CTeam_CPlayer::talent_ability_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.talent_ability_ids)
  return talent_ability_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGameMatchSignOut_CTeam_CPlayer::mutable_talent_ability_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.talent_ability_ids)
  return &talent_ability_ids_;
}

// optional uint32 hero_pick_order = 42;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_hero_pick_order() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_hero_pick_order() {
  hero_pick_order_ = 0u;
  _has_bits_[1] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::hero_pick_order() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_pick_order)
  return hero_pick_order_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_hero_pick_order(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000002u;
  hero_pick_order_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_pick_order)
}

// optional bool hero_was_randomed = 43;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_hero_was_randomed() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_hero_was_randomed() {
  hero_was_randomed_ = false;
  _has_bits_[1] &= ~0x00000008u;
}
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::hero_was_randomed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_was_randomed)
  return hero_was_randomed_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_hero_was_randomed(bool value) {
  _has_bits_[1] |= 0x00000008u;
  hero_was_randomed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_was_randomed)
}

// optional bool hero_was_bonus = 44;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_hero_was_bonus() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_hero_was_bonus() {
  hero_was_bonus_ = false;
  _has_bits_[1] &= ~0x00000010u;
}
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::hero_was_bonus() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_was_bonus)
  return hero_was_bonus_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_hero_was_bonus(bool value) {
  _has_bits_[1] |= 0x00000010u;
  hero_was_bonus_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_was_bonus)
}

// optional bool hero_was_dota_plus_suggestion = 50;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_hero_was_dota_plus_suggestion() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_hero_was_dota_plus_suggestion() {
  hero_was_dota_plus_suggestion_ = false;
  _has_bits_[1] &= ~0x00000020u;
}
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::hero_was_dota_plus_suggestion() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_was_dota_plus_suggestion)
  return hero_was_dota_plus_suggestion_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_hero_was_dota_plus_suggestion(bool value) {
  _has_bits_[1] |= 0x00000020u;
  hero_was_dota_plus_suggestion_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_was_dota_plus_suggestion)
}

// optional uint32 lane = 45;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_lane() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_lane() {
  lane_ = 0u;
  _has_bits_[1] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::lane() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.lane)
  return lane_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_lane(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000004u;
  lane_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.lane)
}

// repeated .proto.dota.CMatchPlayerTimedStats timed_stats = 46;
inline int CMsgGameMatchSignOut_CTeam_CPlayer::timed_stats_size() const {
  return timed_stats_.size();
}
inline ::proto::dota::CMatchPlayerTimedStats* CMsgGameMatchSignOut_CTeam_CPlayer::mutable_timed_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.timed_stats)
  return timed_stats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerTimedStats >*
CMsgGameMatchSignOut_CTeam_CPlayer::mutable_timed_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.timed_stats)
  return &timed_stats_;
}
inline const ::proto::dota::CMatchPlayerTimedStats& CMsgGameMatchSignOut_CTeam_CPlayer::timed_stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.timed_stats)
  return timed_stats_.Get(index);
}
inline ::proto::dota::CMatchPlayerTimedStats* CMsgGameMatchSignOut_CTeam_CPlayer::add_timed_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.timed_stats)
  return timed_stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchPlayerTimedStats >&
CMsgGameMatchSignOut_CTeam_CPlayer::timed_stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.timed_stats)
  return timed_stats_;
}

// optional bool is_using_plus_guide = 47;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_is_using_plus_guide() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_is_using_plus_guide() {
  is_using_plus_guide_ = false;
  _has_bits_[1] &= ~0x00000040u;
}
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::is_using_plus_guide() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.is_using_plus_guide)
  return is_using_plus_guide_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_is_using_plus_guide(bool value) {
  _has_bits_[1] |= 0x00000040u;
  is_using_plus_guide_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.is_using_plus_guide)
}

// optional uint32 hero_damage_received_pre_reduction = 48;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_hero_damage_received_pre_reduction() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_hero_damage_received_pre_reduction() {
  hero_damage_received_pre_reduction_ = 0u;
  _has_bits_[1] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::hero_damage_received_pre_reduction() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_damage_received_pre_reduction)
  return hero_damage_received_pre_reduction_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_hero_damage_received_pre_reduction(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000080u;
  hero_damage_received_pre_reduction_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_damage_received_pre_reduction)
}

// optional uint32 hero_damage_received_post_reduction = 49;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_hero_damage_received_post_reduction() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_hero_damage_received_post_reduction() {
  hero_damage_received_post_reduction_ = 0u;
  _has_bits_[1] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::hero_damage_received_post_reduction() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_damage_received_post_reduction)
  return hero_damage_received_post_reduction_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_hero_damage_received_post_reduction(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000100u;
  hero_damage_received_post_reduction_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.hero_damage_received_post_reduction)
}

// optional uint32 seconds_dead = 51;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_seconds_dead() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_seconds_dead() {
  seconds_dead_ = 0u;
  _has_bits_[1] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::seconds_dead() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.seconds_dead)
  return seconds_dead_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_seconds_dead(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000200u;
  seconds_dead_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.seconds_dead)
}

// optional uint32 gold_lost_to_death = 52;
inline bool CMsgGameMatchSignOut_CTeam_CPlayer::has_gold_lost_to_death() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::clear_gold_lost_to_death() {
  gold_lost_to_death_ = 0u;
  _has_bits_[1] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CTeam_CPlayer::gold_lost_to_death() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.gold_lost_to_death)
  return gold_lost_to_death_;
}
inline void CMsgGameMatchSignOut_CTeam_CPlayer::set_gold_lost_to_death(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000400u;
  gold_lost_to_death_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer.gold_lost_to_death)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_CTeam

// repeated .proto.dota.CMsgGameMatchSignOut.CTeam.CPlayer players = 1;
inline int CMsgGameMatchSignOut_CTeam::players_size() const {
  return players_.size();
}
inline void CMsgGameMatchSignOut_CTeam::clear_players() {
  players_.Clear();
}
inline ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer* CMsgGameMatchSignOut_CTeam::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.CTeam.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer >*
CMsgGameMatchSignOut_CTeam::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.CTeam.players)
  return &players_;
}
inline const ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer& CMsgGameMatchSignOut_CTeam::players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CTeam.players)
  return players_.Get(index);
}
inline ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer* CMsgGameMatchSignOut_CTeam::add_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.CTeam.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CTeam_CPlayer >&
CMsgGameMatchSignOut_CTeam::players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.CTeam.players)
  return players_;
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_CAdditionalSignoutMsg

// optional uint32 id = 1;
inline bool CMsgGameMatchSignOut_CAdditionalSignoutMsg::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CAdditionalSignoutMsg::id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg.id)
  return id_;
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::set_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg.id)
}

// optional bytes contents = 2;
inline bool CMsgGameMatchSignOut_CAdditionalSignoutMsg::has_contents() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::clear_contents() {
  contents_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGameMatchSignOut_CAdditionalSignoutMsg::contents() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
  return contents_.GetNoArena();
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::set_contents(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
}
#if LANG_CXX11
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::set_contents(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  contents_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
}
#endif
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::set_contents(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::set_contents(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
}
inline ::std::string* CMsgGameMatchSignOut_CAdditionalSignoutMsg::mutable_contents() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
  return contents_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameMatchSignOut_CAdditionalSignoutMsg::release_contents() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
  if (!has_contents()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return contents_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameMatchSignOut_CAdditionalSignoutMsg::set_allocated_contents(::std::string* contents) {
  if (contents != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  contents_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contents);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg.contents)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_CSocialFeedMatchEvent

// optional uint32 account_id = 1;
inline bool CMsgGameMatchSignOut_CSocialFeedMatchEvent::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CSocialFeedMatchEvent::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent.account_id)
  return account_id_;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent.account_id)
}

// optional uint32 timestamp = 2;
inline bool CMsgGameMatchSignOut_CSocialFeedMatchEvent::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CSocialFeedMatchEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent.timestamp)
  return timestamp_;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent.timestamp)
}

// optional uint32 event_type = 3;
inline bool CMsgGameMatchSignOut_CSocialFeedMatchEvent::has_event_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_event_type() {
  event_type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CSocialFeedMatchEvent::event_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent.event_type)
  return event_type_;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_event_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent.event_type)
}

// optional int32 game_time = 4;
inline bool CMsgGameMatchSignOut_CSocialFeedMatchEvent::has_game_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_game_time() {
  game_time_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut_CSocialFeedMatchEvent::game_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent.game_time)
  return game_time_;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_game_time(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent.game_time)
}

// optional uint32 replay_time = 5;
inline bool CMsgGameMatchSignOut_CSocialFeedMatchEvent::has_replay_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::clear_replay_time() {
  replay_time_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CSocialFeedMatchEvent::replay_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent.replay_time)
  return replay_time_;
}
inline void CMsgGameMatchSignOut_CSocialFeedMatchEvent::set_replay_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  replay_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent.replay_time)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_CCustomGameData

// optional uint32 publish_timestamp = 1;
inline bool CMsgGameMatchSignOut_CCustomGameData::has_publish_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut_CCustomGameData::clear_publish_timestamp() {
  publish_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_CCustomGameData::publish_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.CCustomGameData.publish_timestamp)
  return publish_timestamp_;
}
inline void CMsgGameMatchSignOut_CCustomGameData::set_publish_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  publish_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.CCustomGameData.publish_timestamp)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_EventGameLeaderboardEntry

// optional string name_suffix = 1;
inline bool CMsgGameMatchSignOut_EventGameLeaderboardEntry::has_name_suffix() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::clear_name_suffix() {
  name_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGameMatchSignOut_EventGameLeaderboardEntry::name_suffix() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.name_suffix)
  return name_suffix_.GetNoArena();
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::set_name_suffix(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.name_suffix)
}
#if LANG_CXX11
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::set_name_suffix(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.name_suffix)
}
#endif
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::set_name_suffix(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.name_suffix)
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::set_name_suffix(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.name_suffix)
}
inline ::std::string* CMsgGameMatchSignOut_EventGameLeaderboardEntry::mutable_name_suffix() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.name_suffix)
  return name_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameMatchSignOut_EventGameLeaderboardEntry::release_name_suffix() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.name_suffix)
  if (!has_name_suffix()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_suffix_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::set_allocated_name_suffix(::std::string* name_suffix) {
  if (name_suffix != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name_suffix);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.name_suffix)
}

// optional int32 score = 2;
inline bool CMsgGameMatchSignOut_EventGameLeaderboardEntry::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::clear_score() {
  score_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut_EventGameLeaderboardEntry::score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.score)
  return score_;
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::set_score(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.score)
}

// optional uint32 extra_data_1 = 3;
inline bool CMsgGameMatchSignOut_EventGameLeaderboardEntry::has_extra_data_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::clear_extra_data_1() {
  extra_data_1_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_EventGameLeaderboardEntry::extra_data_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.extra_data_1)
  return extra_data_1_;
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::set_extra_data_1(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  extra_data_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.extra_data_1)
}

// optional uint32 extra_data_2 = 4;
inline bool CMsgGameMatchSignOut_EventGameLeaderboardEntry::has_extra_data_2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::clear_extra_data_2() {
  extra_data_2_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_EventGameLeaderboardEntry::extra_data_2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.extra_data_2)
  return extra_data_2_;
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::set_extra_data_2(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  extra_data_2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.extra_data_2)
}

// optional uint32 extra_data_3 = 5;
inline bool CMsgGameMatchSignOut_EventGameLeaderboardEntry::has_extra_data_3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::clear_extra_data_3() {
  extra_data_3_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_EventGameLeaderboardEntry::extra_data_3() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.extra_data_3)
  return extra_data_3_;
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::set_extra_data_3(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  extra_data_3_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.extra_data_3)
}

// optional uint32 extra_data_4 = 6;
inline bool CMsgGameMatchSignOut_EventGameLeaderboardEntry::has_extra_data_4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::clear_extra_data_4() {
  extra_data_4_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_EventGameLeaderboardEntry::extra_data_4() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.extra_data_4)
  return extra_data_4_;
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::set_extra_data_4(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  extra_data_4_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.extra_data_4)
}

// optional uint32 extra_data_5 = 7;
inline bool CMsgGameMatchSignOut_EventGameLeaderboardEntry::has_extra_data_5() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::clear_extra_data_5() {
  extra_data_5_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_EventGameLeaderboardEntry::extra_data_5() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.extra_data_5)
  return extra_data_5_;
}
inline void CMsgGameMatchSignOut_EventGameLeaderboardEntry::set_extra_data_5(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  extra_data_5_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry.extra_data_5)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut_WardPlacement

// optional uint32 player_id = 1;
inline bool CMsgGameMatchSignOut_WardPlacement::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut_WardPlacement::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_WardPlacement::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.WardPlacement.player_id)
  return player_id_;
}
inline void CMsgGameMatchSignOut_WardPlacement::set_player_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.WardPlacement.player_id)
}

// optional uint32 team_id = 2;
inline bool CMsgGameMatchSignOut_WardPlacement::has_team_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut_WardPlacement::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_WardPlacement::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.WardPlacement.team_id)
  return team_id_;
}
inline void CMsgGameMatchSignOut_WardPlacement::set_team_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.WardPlacement.team_id)
}

// optional uint32 placed_time = 3;
inline bool CMsgGameMatchSignOut_WardPlacement::has_placed_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOut_WardPlacement::clear_placed_time() {
  placed_time_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_WardPlacement::placed_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.WardPlacement.placed_time)
  return placed_time_;
}
inline void CMsgGameMatchSignOut_WardPlacement::set_placed_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  placed_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.WardPlacement.placed_time)
}

// optional uint32 building_state = 4;
inline bool CMsgGameMatchSignOut_WardPlacement::has_building_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignOut_WardPlacement::clear_building_state() {
  building_state_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_WardPlacement::building_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.WardPlacement.building_state)
  return building_state_;
}
inline void CMsgGameMatchSignOut_WardPlacement::set_building_state(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  building_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.WardPlacement.building_state)
}

// optional uint32 creep_state = 5;
inline bool CMsgGameMatchSignOut_WardPlacement::has_creep_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameMatchSignOut_WardPlacement::clear_creep_state() {
  creep_state_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_WardPlacement::creep_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.WardPlacement.creep_state)
  return creep_state_;
}
inline void CMsgGameMatchSignOut_WardPlacement::set_creep_state(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  creep_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.WardPlacement.creep_state)
}

// optional bool roshan_alive = 6;
inline bool CMsgGameMatchSignOut_WardPlacement::has_roshan_alive() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameMatchSignOut_WardPlacement::clear_roshan_alive() {
  roshan_alive_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CMsgGameMatchSignOut_WardPlacement::roshan_alive() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.WardPlacement.roshan_alive)
  return roshan_alive_;
}
inline void CMsgGameMatchSignOut_WardPlacement::set_roshan_alive(bool value) {
  _has_bits_[0] |= 0x00000020u;
  roshan_alive_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.WardPlacement.roshan_alive)
}

// optional uint32 position_x = 7;
inline bool CMsgGameMatchSignOut_WardPlacement::has_position_x() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameMatchSignOut_WardPlacement::clear_position_x() {
  position_x_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_WardPlacement::position_x() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.WardPlacement.position_x)
  return position_x_;
}
inline void CMsgGameMatchSignOut_WardPlacement::set_position_x(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  position_x_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.WardPlacement.position_x)
}

// optional uint32 position_y = 8;
inline bool CMsgGameMatchSignOut_WardPlacement::has_position_y() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGameMatchSignOut_WardPlacement::clear_position_y() {
  position_y_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut_WardPlacement::position_y() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.WardPlacement.position_y)
  return position_y_;
}
inline void CMsgGameMatchSignOut_WardPlacement::set_position_y(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  position_y_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.WardPlacement.position_y)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut

// optional uint64 match_id = 1 [(.proto.dota.key_field) = true];
inline bool CMsgGameMatchSignOut::has_match_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignOut::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CMsgGameMatchSignOut::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.match_id)
  return match_id_;
}
inline void CMsgGameMatchSignOut::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.match_id)
}

// optional uint32 duration = 2;
inline bool CMsgGameMatchSignOut::has_duration() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameMatchSignOut::clear_duration() {
  duration_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.duration)
  return duration_;
}
inline void CMsgGameMatchSignOut::set_duration(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.duration)
}

// optional bool good_guys_win = 3;
inline bool CMsgGameMatchSignOut::has_good_guys_win() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGameMatchSignOut::clear_good_guys_win() {
  good_guys_win_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CMsgGameMatchSignOut::good_guys_win() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.good_guys_win)
  return good_guys_win_;
}
inline void CMsgGameMatchSignOut::set_good_guys_win(bool value) {
  _has_bits_[0] |= 0x00000400u;
  good_guys_win_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.good_guys_win)
}

// optional fixed32 date = 4;
inline bool CMsgGameMatchSignOut::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameMatchSignOut::clear_date() {
  date_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::date() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.date)
  return date_;
}
inline void CMsgGameMatchSignOut::set_date(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  date_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.date)
}

// repeated uint32 num_players = 5;
inline int CMsgGameMatchSignOut::num_players_size() const {
  return num_players_.size();
}
inline void CMsgGameMatchSignOut::clear_num_players() {
  num_players_.Clear();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::num_players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.num_players)
  return num_players_.Get(index);
}
inline void CMsgGameMatchSignOut::set_num_players(int index, ::google::protobuf::uint32 value) {
  num_players_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.num_players)
}
inline void CMsgGameMatchSignOut::add_num_players(::google::protobuf::uint32 value) {
  num_players_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.num_players)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGameMatchSignOut::num_players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.num_players)
  return num_players_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGameMatchSignOut::mutable_num_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.num_players)
  return &num_players_;
}

// repeated .proto.dota.CMsgGameMatchSignOut.CTeam teams = 6;
inline int CMsgGameMatchSignOut::teams_size() const {
  return teams_.size();
}
inline void CMsgGameMatchSignOut::clear_teams() {
  teams_.Clear();
}
inline ::proto::dota::CMsgGameMatchSignOut_CTeam* CMsgGameMatchSignOut::mutable_teams(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.teams)
  return teams_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CTeam >*
CMsgGameMatchSignOut::mutable_teams() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.teams)
  return &teams_;
}
inline const ::proto::dota::CMsgGameMatchSignOut_CTeam& CMsgGameMatchSignOut::teams(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.teams)
  return teams_.Get(index);
}
inline ::proto::dota::CMsgGameMatchSignOut_CTeam* CMsgGameMatchSignOut::add_teams() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.teams)
  return teams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CTeam >&
CMsgGameMatchSignOut::teams() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.teams)
  return teams_;
}

// repeated uint32 tower_status = 8;
inline int CMsgGameMatchSignOut::tower_status_size() const {
  return tower_status_.size();
}
inline void CMsgGameMatchSignOut::clear_tower_status() {
  tower_status_.Clear();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::tower_status(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.tower_status)
  return tower_status_.Get(index);
}
inline void CMsgGameMatchSignOut::set_tower_status(int index, ::google::protobuf::uint32 value) {
  tower_status_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.tower_status)
}
inline void CMsgGameMatchSignOut::add_tower_status(::google::protobuf::uint32 value) {
  tower_status_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.tower_status)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGameMatchSignOut::tower_status() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.tower_status)
  return tower_status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGameMatchSignOut::mutable_tower_status() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.tower_status)
  return &tower_status_;
}

// repeated uint32 barracks_status = 9;
inline int CMsgGameMatchSignOut::barracks_status_size() const {
  return barracks_status_.size();
}
inline void CMsgGameMatchSignOut::clear_barracks_status() {
  barracks_status_.Clear();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::barracks_status(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.barracks_status)
  return barracks_status_.Get(index);
}
inline void CMsgGameMatchSignOut::set_barracks_status(int index, ::google::protobuf::uint32 value) {
  barracks_status_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.barracks_status)
}
inline void CMsgGameMatchSignOut::add_barracks_status(::google::protobuf::uint32 value) {
  barracks_status_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.barracks_status)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGameMatchSignOut::barracks_status() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.barracks_status)
  return barracks_status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGameMatchSignOut::mutable_barracks_status() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.barracks_status)
  return &barracks_status_;
}

// optional uint32 cluster = 10;
inline bool CMsgGameMatchSignOut::has_cluster() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameMatchSignOut::clear_cluster() {
  cluster_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::cluster() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.cluster)
  return cluster_;
}
inline void CMsgGameMatchSignOut::set_cluster(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  cluster_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.cluster)
}

// optional string server_addr = 11;
inline bool CMsgGameMatchSignOut::has_server_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut::clear_server_addr() {
  server_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGameMatchSignOut::server_addr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.server_addr)
  return server_addr_.GetNoArena();
}
inline void CMsgGameMatchSignOut::set_server_addr(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  server_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.server_addr)
}
#if LANG_CXX11
inline void CMsgGameMatchSignOut::set_server_addr(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  server_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGameMatchSignOut.server_addr)
}
#endif
inline void CMsgGameMatchSignOut::set_server_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  server_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGameMatchSignOut.server_addr)
}
inline void CMsgGameMatchSignOut::set_server_addr(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  server_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGameMatchSignOut.server_addr)
}
inline ::std::string* CMsgGameMatchSignOut::mutable_server_addr() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.server_addr)
  return server_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameMatchSignOut::release_server_addr() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameMatchSignOut.server_addr)
  if (!has_server_addr()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return server_addr_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameMatchSignOut::set_allocated_server_addr(::std::string* server_addr) {
  if (server_addr != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  server_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_addr);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameMatchSignOut.server_addr)
}

// optional uint32 first_blood_time = 12;
inline bool CMsgGameMatchSignOut::has_first_blood_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGameMatchSignOut::clear_first_blood_time() {
  first_blood_time_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::first_blood_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.first_blood_time)
  return first_blood_time_;
}
inline void CMsgGameMatchSignOut::set_first_blood_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  first_blood_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.first_blood_time)
}

// optional float game_balance = 13;
inline bool CMsgGameMatchSignOut::has_game_balance() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGameMatchSignOut::clear_game_balance() {
  game_balance_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline float CMsgGameMatchSignOut::game_balance() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.game_balance)
  return game_balance_;
}
inline void CMsgGameMatchSignOut::set_game_balance(float value) {
  _has_bits_[0] |= 0x00000100u;
  game_balance_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.game_balance)
}

// optional uint32 event_score = 14;
inline bool CMsgGameMatchSignOut::has_event_score() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGameMatchSignOut::clear_event_score() {
  event_score_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::event_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.event_score)
  return event_score_;
}
inline void CMsgGameMatchSignOut::set_event_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  event_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.event_score)
}

// repeated .proto.dota.CMatchHeroSelectEvent picks_bans = 15;
inline int CMsgGameMatchSignOut::picks_bans_size() const {
  return picks_bans_.size();
}
inline ::proto::dota::CMatchHeroSelectEvent* CMsgGameMatchSignOut::mutable_picks_bans(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.picks_bans)
  return picks_bans_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchHeroSelectEvent >*
CMsgGameMatchSignOut::mutable_picks_bans() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.picks_bans)
  return &picks_bans_;
}
inline const ::proto::dota::CMatchHeroSelectEvent& CMsgGameMatchSignOut::picks_bans(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.picks_bans)
  return picks_bans_.Get(index);
}
inline ::proto::dota::CMatchHeroSelectEvent* CMsgGameMatchSignOut::add_picks_bans() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.picks_bans)
  return picks_bans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchHeroSelectEvent >&
CMsgGameMatchSignOut::picks_bans() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.picks_bans)
  return picks_bans_;
}

// repeated .proto.dota.CMsgDOTAFantasyPlayerStats fantasy_stats = 41;
inline int CMsgGameMatchSignOut::fantasy_stats_size() const {
  return fantasy_stats_.size();
}
inline ::proto::dota::CMsgDOTAFantasyPlayerStats* CMsgGameMatchSignOut::mutable_fantasy_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.fantasy_stats)
  return fantasy_stats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats >*
CMsgGameMatchSignOut::mutable_fantasy_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.fantasy_stats)
  return &fantasy_stats_;
}
inline const ::proto::dota::CMsgDOTAFantasyPlayerStats& CMsgGameMatchSignOut::fantasy_stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.fantasy_stats)
  return fantasy_stats_.Get(index);
}
inline ::proto::dota::CMsgDOTAFantasyPlayerStats* CMsgGameMatchSignOut::add_fantasy_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.fantasy_stats)
  return fantasy_stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFantasyPlayerStats >&
CMsgGameMatchSignOut::fantasy_stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.fantasy_stats)
  return fantasy_stats_;
}

// repeated .proto.dota.CMsgEconPlayerStrangeCountAdjustment player_strange_count_adjustments = 17;
inline int CMsgGameMatchSignOut::player_strange_count_adjustments_size() const {
  return player_strange_count_adjustments_.size();
}
inline ::proto::dota::CMsgEconPlayerStrangeCountAdjustment* CMsgGameMatchSignOut::mutable_player_strange_count_adjustments(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.player_strange_count_adjustments)
  return player_strange_count_adjustments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEconPlayerStrangeCountAdjustment >*
CMsgGameMatchSignOut::mutable_player_strange_count_adjustments() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.player_strange_count_adjustments)
  return &player_strange_count_adjustments_;
}
inline const ::proto::dota::CMsgEconPlayerStrangeCountAdjustment& CMsgGameMatchSignOut::player_strange_count_adjustments(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.player_strange_count_adjustments)
  return player_strange_count_adjustments_.Get(index);
}
inline ::proto::dota::CMsgEconPlayerStrangeCountAdjustment* CMsgGameMatchSignOut::add_player_strange_count_adjustments() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.player_strange_count_adjustments)
  return player_strange_count_adjustments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEconPlayerStrangeCountAdjustment >&
CMsgGameMatchSignOut::player_strange_count_adjustments() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.player_strange_count_adjustments)
  return player_strange_count_adjustments_;
}

// optional bool automatic_surrender = 18;
inline bool CMsgGameMatchSignOut::has_automatic_surrender() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGameMatchSignOut::clear_automatic_surrender() {
  automatic_surrender_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CMsgGameMatchSignOut::automatic_surrender() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.automatic_surrender)
  return automatic_surrender_;
}
inline void CMsgGameMatchSignOut::set_automatic_surrender(bool value) {
  _has_bits_[0] |= 0x00000800u;
  automatic_surrender_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.automatic_surrender)
}

// optional uint32 server_version = 19;
inline bool CMsgGameMatchSignOut::has_server_version() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_server_version() {
  server_version_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::server_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.server_version)
  return server_version_;
}
inline void CMsgGameMatchSignOut::set_server_version(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  server_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.server_version)
}

// optional bool legacy_mass_disconnect = 21;
inline bool CMsgGameMatchSignOut::has_legacy_mass_disconnect() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_legacy_mass_disconnect() {
  legacy_mass_disconnect_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool CMsgGameMatchSignOut::legacy_mass_disconnect() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.legacy_mass_disconnect)
  return legacy_mass_disconnect_;
}
inline void CMsgGameMatchSignOut::set_legacy_mass_disconnect(bool value) {
  _has_bits_[0] |= 0x00001000u;
  legacy_mass_disconnect_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.legacy_mass_disconnect)
}

// optional .proto.dota.CMsgPoorNetworkConditions poor_network_conditions = 35;
inline bool CMsgGameMatchSignOut::has_poor_network_conditions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOut::clear_poor_network_conditions() {
  if (poor_network_conditions_ != nullptr) poor_network_conditions_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgPoorNetworkConditions& CMsgGameMatchSignOut::poor_network_conditions() const {
  const ::proto::dota::CMsgPoorNetworkConditions* p = poor_network_conditions_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.poor_network_conditions)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgPoorNetworkConditions*>(
      &::proto::dota::_CMsgPoorNetworkConditions_default_instance_);
}
inline ::proto::dota::CMsgPoorNetworkConditions* CMsgGameMatchSignOut::release_poor_network_conditions() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameMatchSignOut.poor_network_conditions)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgPoorNetworkConditions* temp = poor_network_conditions_;
  poor_network_conditions_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgPoorNetworkConditions* CMsgGameMatchSignOut::mutable_poor_network_conditions() {
  _has_bits_[0] |= 0x00000002u;
  if (poor_network_conditions_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgPoorNetworkConditions>(GetArenaNoVirtual());
    poor_network_conditions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.poor_network_conditions)
  return poor_network_conditions_;
}
inline void CMsgGameMatchSignOut::set_allocated_poor_network_conditions(::proto::dota::CMsgPoorNetworkConditions* poor_network_conditions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete poor_network_conditions_;
  }
  if (poor_network_conditions) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      poor_network_conditions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, poor_network_conditions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  poor_network_conditions_ = poor_network_conditions;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameMatchSignOut.poor_network_conditions)
}

// repeated .proto.dota.CMsgGameMatchSignOut.CAdditionalSignoutMsg additional_msgs = 20;
inline int CMsgGameMatchSignOut::additional_msgs_size() const {
  return additional_msgs_.size();
}
inline void CMsgGameMatchSignOut::clear_additional_msgs() {
  additional_msgs_.Clear();
}
inline ::proto::dota::CMsgGameMatchSignOut_CAdditionalSignoutMsg* CMsgGameMatchSignOut::mutable_additional_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.additional_msgs)
  return additional_msgs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CAdditionalSignoutMsg >*
CMsgGameMatchSignOut::mutable_additional_msgs() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.additional_msgs)
  return &additional_msgs_;
}
inline const ::proto::dota::CMsgGameMatchSignOut_CAdditionalSignoutMsg& CMsgGameMatchSignOut::additional_msgs(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.additional_msgs)
  return additional_msgs_.Get(index);
}
inline ::proto::dota::CMsgGameMatchSignOut_CAdditionalSignoutMsg* CMsgGameMatchSignOut::add_additional_msgs() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.additional_msgs)
  return additional_msgs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CAdditionalSignoutMsg >&
CMsgGameMatchSignOut::additional_msgs() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.additional_msgs)
  return additional_msgs_;
}

// repeated .proto.dota.CMsgGameMatchSignOut.CSocialFeedMatchEvent social_feed_events = 36;
inline int CMsgGameMatchSignOut::social_feed_events_size() const {
  return social_feed_events_.size();
}
inline void CMsgGameMatchSignOut::clear_social_feed_events() {
  social_feed_events_.Clear();
}
inline ::proto::dota::CMsgGameMatchSignOut_CSocialFeedMatchEvent* CMsgGameMatchSignOut::mutable_social_feed_events(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.social_feed_events)
  return social_feed_events_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CSocialFeedMatchEvent >*
CMsgGameMatchSignOut::mutable_social_feed_events() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.social_feed_events)
  return &social_feed_events_;
}
inline const ::proto::dota::CMsgGameMatchSignOut_CSocialFeedMatchEvent& CMsgGameMatchSignOut::social_feed_events(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.social_feed_events)
  return social_feed_events_.Get(index);
}
inline ::proto::dota::CMsgGameMatchSignOut_CSocialFeedMatchEvent* CMsgGameMatchSignOut::add_social_feed_events() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.social_feed_events)
  return social_feed_events_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_CSocialFeedMatchEvent >&
CMsgGameMatchSignOut::social_feed_events() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.social_feed_events)
  return social_feed_events_;
}

// optional sint32 average_networth_delta = 22;
inline bool CMsgGameMatchSignOut::has_average_networth_delta() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_average_networth_delta() {
  average_networth_delta_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::average_networth_delta() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.average_networth_delta)
  return average_networth_delta_;
}
inline void CMsgGameMatchSignOut::set_average_networth_delta(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  average_networth_delta_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.average_networth_delta)
}

// optional sint32 networth_delta_min10 = 23;
inline bool CMsgGameMatchSignOut::has_networth_delta_min10() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_networth_delta_min10() {
  networth_delta_min10_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::networth_delta_min10() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.networth_delta_min10)
  return networth_delta_min10_;
}
inline void CMsgGameMatchSignOut::set_networth_delta_min10(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00008000u;
  networth_delta_min10_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.networth_delta_min10)
}

// optional sint32 networth_delta_min20 = 24;
inline bool CMsgGameMatchSignOut::has_networth_delta_min20() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_networth_delta_min20() {
  networth_delta_min20_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::networth_delta_min20() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.networth_delta_min20)
  return networth_delta_min20_;
}
inline void CMsgGameMatchSignOut::set_networth_delta_min20(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00010000u;
  networth_delta_min20_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.networth_delta_min20)
}

// optional sint32 maximum_losing_networth_lead = 25;
inline bool CMsgGameMatchSignOut::has_maximum_losing_networth_lead() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_maximum_losing_networth_lead() {
  maximum_losing_networth_lead_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::maximum_losing_networth_lead() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.maximum_losing_networth_lead)
  return maximum_losing_networth_lead_;
}
inline void CMsgGameMatchSignOut::set_maximum_losing_networth_lead(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00020000u;
  maximum_losing_networth_lead_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.maximum_losing_networth_lead)
}

// optional sint32 average_experience_delta = 26;
inline bool CMsgGameMatchSignOut::has_average_experience_delta() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_average_experience_delta() {
  average_experience_delta_ = 0;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::average_experience_delta() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.average_experience_delta)
  return average_experience_delta_;
}
inline void CMsgGameMatchSignOut::set_average_experience_delta(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00040000u;
  average_experience_delta_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.average_experience_delta)
}

// optional sint32 experience_delta_min10 = 27;
inline bool CMsgGameMatchSignOut::has_experience_delta_min10() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_experience_delta_min10() {
  experience_delta_min10_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::experience_delta_min10() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.experience_delta_min10)
  return experience_delta_min10_;
}
inline void CMsgGameMatchSignOut::set_experience_delta_min10(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00080000u;
  experience_delta_min10_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.experience_delta_min10)
}

// optional sint32 experience_delta_min20 = 28;
inline bool CMsgGameMatchSignOut::has_experience_delta_min20() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_experience_delta_min20() {
  experience_delta_min20_ = 0;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::experience_delta_min20() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.experience_delta_min20)
  return experience_delta_min20_;
}
inline void CMsgGameMatchSignOut::set_experience_delta_min20(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00100000u;
  experience_delta_min20_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.experience_delta_min20)
}

// optional sint32 bonus_gold_winner_min10 = 29;
inline bool CMsgGameMatchSignOut::has_bonus_gold_winner_min10() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_bonus_gold_winner_min10() {
  bonus_gold_winner_min10_ = 0;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::bonus_gold_winner_min10() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.bonus_gold_winner_min10)
  return bonus_gold_winner_min10_;
}
inline void CMsgGameMatchSignOut::set_bonus_gold_winner_min10(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00200000u;
  bonus_gold_winner_min10_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.bonus_gold_winner_min10)
}

// optional sint32 bonus_gold_winner_min20 = 30;
inline bool CMsgGameMatchSignOut::has_bonus_gold_winner_min20() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_bonus_gold_winner_min20() {
  bonus_gold_winner_min20_ = 0;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::bonus_gold_winner_min20() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.bonus_gold_winner_min20)
  return bonus_gold_winner_min20_;
}
inline void CMsgGameMatchSignOut::set_bonus_gold_winner_min20(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00400000u;
  bonus_gold_winner_min20_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.bonus_gold_winner_min20)
}

// optional uint32 bonus_gold_winner_total = 31;
inline bool CMsgGameMatchSignOut::has_bonus_gold_winner_total() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_bonus_gold_winner_total() {
  bonus_gold_winner_total_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::bonus_gold_winner_total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.bonus_gold_winner_total)
  return bonus_gold_winner_total_;
}
inline void CMsgGameMatchSignOut::set_bonus_gold_winner_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  bonus_gold_winner_total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.bonus_gold_winner_total)
}

// optional sint32 bonus_gold_loser_min10 = 32;
inline bool CMsgGameMatchSignOut::has_bonus_gold_loser_min10() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_bonus_gold_loser_min10() {
  bonus_gold_loser_min10_ = 0;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::bonus_gold_loser_min10() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.bonus_gold_loser_min10)
  return bonus_gold_loser_min10_;
}
inline void CMsgGameMatchSignOut::set_bonus_gold_loser_min10(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x01000000u;
  bonus_gold_loser_min10_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.bonus_gold_loser_min10)
}

// optional sint32 bonus_gold_loser_min20 = 33;
inline bool CMsgGameMatchSignOut::has_bonus_gold_loser_min20() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_bonus_gold_loser_min20() {
  bonus_gold_loser_min20_ = 0;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::google::protobuf::int32 CMsgGameMatchSignOut::bonus_gold_loser_min20() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.bonus_gold_loser_min20)
  return bonus_gold_loser_min20_;
}
inline void CMsgGameMatchSignOut::set_bonus_gold_loser_min20(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x02000000u;
  bonus_gold_loser_min20_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.bonus_gold_loser_min20)
}

// optional uint32 bonus_gold_loser_total = 34;
inline bool CMsgGameMatchSignOut::has_bonus_gold_loser_total() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_bonus_gold_loser_total() {
  bonus_gold_loser_total_ = 0u;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::bonus_gold_loser_total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.bonus_gold_loser_total)
  return bonus_gold_loser_total_;
}
inline void CMsgGameMatchSignOut::set_bonus_gold_loser_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x04000000u;
  bonus_gold_loser_total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.bonus_gold_loser_total)
}

// optional .proto.dota.CMsgGameMatchSignOut.CCustomGameData custom_game_data = 37;
inline bool CMsgGameMatchSignOut::has_custom_game_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOut::clear_custom_game_data() {
  if (custom_game_data_ != nullptr) custom_game_data_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::proto::dota::CMsgGameMatchSignOut_CCustomGameData& CMsgGameMatchSignOut::custom_game_data() const {
  const ::proto::dota::CMsgGameMatchSignOut_CCustomGameData* p = custom_game_data_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.custom_game_data)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgGameMatchSignOut_CCustomGameData*>(
      &::proto::dota::_CMsgGameMatchSignOut_CCustomGameData_default_instance_);
}
inline ::proto::dota::CMsgGameMatchSignOut_CCustomGameData* CMsgGameMatchSignOut::release_custom_game_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameMatchSignOut.custom_game_data)
  _has_bits_[0] &= ~0x00000004u;
  ::proto::dota::CMsgGameMatchSignOut_CCustomGameData* temp = custom_game_data_;
  custom_game_data_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgGameMatchSignOut_CCustomGameData* CMsgGameMatchSignOut::mutable_custom_game_data() {
  _has_bits_[0] |= 0x00000004u;
  if (custom_game_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgGameMatchSignOut_CCustomGameData>(GetArenaNoVirtual());
    custom_game_data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.custom_game_data)
  return custom_game_data_;
}
inline void CMsgGameMatchSignOut::set_allocated_custom_game_data(::proto::dota::CMsgGameMatchSignOut_CCustomGameData* custom_game_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete custom_game_data_;
  }
  if (custom_game_data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      custom_game_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, custom_game_data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  custom_game_data_ = custom_game_data;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameMatchSignOut.custom_game_data)
}

// optional uint32 match_flags = 38;
inline bool CMsgGameMatchSignOut::has_match_flags() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_match_flags() {
  match_flags_ = 0u;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::match_flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.match_flags)
  return match_flags_;
}
inline void CMsgGameMatchSignOut::set_match_flags(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x08000000u;
  match_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.match_flags)
}

// repeated uint32 team_scores = 39;
inline int CMsgGameMatchSignOut::team_scores_size() const {
  return team_scores_.size();
}
inline void CMsgGameMatchSignOut::clear_team_scores() {
  team_scores_.Clear();
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::team_scores(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.team_scores)
  return team_scores_.Get(index);
}
inline void CMsgGameMatchSignOut::set_team_scores(int index, ::google::protobuf::uint32 value) {
  team_scores_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.team_scores)
}
inline void CMsgGameMatchSignOut::add_team_scores(::google::protobuf::uint32 value) {
  team_scores_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.team_scores)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGameMatchSignOut::team_scores() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.team_scores)
  return team_scores_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGameMatchSignOut::mutable_team_scores() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.team_scores)
  return &team_scores_;
}

// optional uint32 pre_game_duration = 40;
inline bool CMsgGameMatchSignOut::has_pre_game_duration() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_pre_game_duration() {
  pre_game_duration_ = 0u;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::pre_game_duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.pre_game_duration)
  return pre_game_duration_;
}
inline void CMsgGameMatchSignOut::set_pre_game_duration(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x10000000u;
  pre_game_duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.pre_game_duration)
}

// repeated .proto.dota.CMsgGameMatchSignOut.EventGameLeaderboardEntry event_game_leaderboard_entries = 42;
inline int CMsgGameMatchSignOut::event_game_leaderboard_entries_size() const {
  return event_game_leaderboard_entries_.size();
}
inline void CMsgGameMatchSignOut::clear_event_game_leaderboard_entries() {
  event_game_leaderboard_entries_.Clear();
}
inline ::proto::dota::CMsgGameMatchSignOut_EventGameLeaderboardEntry* CMsgGameMatchSignOut::mutable_event_game_leaderboard_entries(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.event_game_leaderboard_entries)
  return event_game_leaderboard_entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_EventGameLeaderboardEntry >*
CMsgGameMatchSignOut::mutable_event_game_leaderboard_entries() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.event_game_leaderboard_entries)
  return &event_game_leaderboard_entries_;
}
inline const ::proto::dota::CMsgGameMatchSignOut_EventGameLeaderboardEntry& CMsgGameMatchSignOut::event_game_leaderboard_entries(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.event_game_leaderboard_entries)
  return event_game_leaderboard_entries_.Get(index);
}
inline ::proto::dota::CMsgGameMatchSignOut_EventGameLeaderboardEntry* CMsgGameMatchSignOut::add_event_game_leaderboard_entries() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.event_game_leaderboard_entries)
  return event_game_leaderboard_entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_EventGameLeaderboardEntry >&
CMsgGameMatchSignOut::event_game_leaderboard_entries() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.event_game_leaderboard_entries)
  return event_game_leaderboard_entries_;
}

// repeated .proto.dota.CMsgGameMatchSignOut.WardPlacement ward_placements = 43;
inline int CMsgGameMatchSignOut::ward_placements_size() const {
  return ward_placements_.size();
}
inline void CMsgGameMatchSignOut::clear_ward_placements() {
  ward_placements_.Clear();
}
inline ::proto::dota::CMsgGameMatchSignOut_WardPlacement* CMsgGameMatchSignOut::mutable_ward_placements(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOut.ward_placements)
  return ward_placements_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_WardPlacement >*
CMsgGameMatchSignOut::mutable_ward_placements() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignOut.ward_placements)
  return &ward_placements_;
}
inline const ::proto::dota::CMsgGameMatchSignOut_WardPlacement& CMsgGameMatchSignOut::ward_placements(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.ward_placements)
  return ward_placements_.Get(index);
}
inline ::proto::dota::CMsgGameMatchSignOut_WardPlacement* CMsgGameMatchSignOut::add_ward_placements() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignOut.ward_placements)
  return ward_placements_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignOut_WardPlacement >&
CMsgGameMatchSignOut::ward_placements() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignOut.ward_placements)
  return ward_placements_;
}

// optional uint32 bounty_rune_gold_winners = 44;
inline bool CMsgGameMatchSignOut::has_bounty_rune_gold_winners() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_bounty_rune_gold_winners() {
  bounty_rune_gold_winners_ = 0u;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::bounty_rune_gold_winners() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.bounty_rune_gold_winners)
  return bounty_rune_gold_winners_;
}
inline void CMsgGameMatchSignOut::set_bounty_rune_gold_winners(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x20000000u;
  bounty_rune_gold_winners_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.bounty_rune_gold_winners)
}

// optional uint32 bounty_rune_gold_losers = 45;
inline bool CMsgGameMatchSignOut::has_bounty_rune_gold_losers() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_bounty_rune_gold_losers() {
  bounty_rune_gold_losers_ = 0u;
  _has_bits_[0] &= ~0x40000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::bounty_rune_gold_losers() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.bounty_rune_gold_losers)
  return bounty_rune_gold_losers_;
}
inline void CMsgGameMatchSignOut::set_bounty_rune_gold_losers(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x40000000u;
  bounty_rune_gold_losers_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.bounty_rune_gold_losers)
}

// optional uint32 range_creep_upgrade_gold_winners = 46;
inline bool CMsgGameMatchSignOut::has_range_creep_upgrade_gold_winners() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CMsgGameMatchSignOut::clear_range_creep_upgrade_gold_winners() {
  range_creep_upgrade_gold_winners_ = 0u;
  _has_bits_[0] &= ~0x80000000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::range_creep_upgrade_gold_winners() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.range_creep_upgrade_gold_winners)
  return range_creep_upgrade_gold_winners_;
}
inline void CMsgGameMatchSignOut::set_range_creep_upgrade_gold_winners(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x80000000u;
  range_creep_upgrade_gold_winners_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.range_creep_upgrade_gold_winners)
}

// optional uint32 range_creep_upgrade_gold_losers = 47;
inline bool CMsgGameMatchSignOut::has_range_creep_upgrade_gold_losers() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOut::clear_range_creep_upgrade_gold_losers() {
  range_creep_upgrade_gold_losers_ = 0u;
  _has_bits_[1] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOut::range_creep_upgrade_gold_losers() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOut.range_creep_upgrade_gold_losers)
  return range_creep_upgrade_gold_losers_;
}
inline void CMsgGameMatchSignOut::set_range_creep_upgrade_gold_losers(::google::protobuf::uint32 value) {
  _has_bits_[1] |= 0x00000001u;
  range_creep_upgrade_gold_losers_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOut.range_creep_upgrade_gold_losers)
}

// -------------------------------------------------------------------

// CMsgSignOutDraftInfo

// optional uint32 radiant_captain_account_id = 1;
inline bool CMsgSignOutDraftInfo::has_radiant_captain_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutDraftInfo::clear_radiant_captain_account_id() {
  radiant_captain_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgSignOutDraftInfo::radiant_captain_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutDraftInfo.radiant_captain_account_id)
  return radiant_captain_account_id_;
}
inline void CMsgSignOutDraftInfo::set_radiant_captain_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  radiant_captain_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutDraftInfo.radiant_captain_account_id)
}

// optional uint32 dire_captain_account_id = 2;
inline bool CMsgSignOutDraftInfo::has_dire_captain_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutDraftInfo::clear_dire_captain_account_id() {
  dire_captain_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgSignOutDraftInfo::dire_captain_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutDraftInfo.dire_captain_account_id)
  return dire_captain_account_id_;
}
inline void CMsgSignOutDraftInfo::set_dire_captain_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  dire_captain_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutDraftInfo.dire_captain_account_id)
}

// repeated .proto.dota.CMatchHeroSelectEvent picks_bans = 3;
inline int CMsgSignOutDraftInfo::picks_bans_size() const {
  return picks_bans_.size();
}
inline ::proto::dota::CMatchHeroSelectEvent* CMsgSignOutDraftInfo::mutable_picks_bans(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgSignOutDraftInfo.picks_bans)
  return picks_bans_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchHeroSelectEvent >*
CMsgSignOutDraftInfo::mutable_picks_bans() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSignOutDraftInfo.picks_bans)
  return &picks_bans_;
}
inline const ::proto::dota::CMatchHeroSelectEvent& CMsgSignOutDraftInfo::picks_bans(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutDraftInfo.picks_bans)
  return picks_bans_.Get(index);
}
inline ::proto::dota::CMatchHeroSelectEvent* CMsgSignOutDraftInfo::add_picks_bans() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSignOutDraftInfo.picks_bans)
  return picks_bans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMatchHeroSelectEvent >&
CMsgSignOutDraftInfo::picks_bans() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSignOutDraftInfo.picks_bans)
  return picks_bans_;
}

// -------------------------------------------------------------------

// CMsgSignOutBotInfo

// optional bool allow_cheats = 1;
inline bool CMsgSignOutBotInfo::has_allow_cheats() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutBotInfo::clear_allow_cheats() {
  allow_cheats_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgSignOutBotInfo::allow_cheats() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutBotInfo.allow_cheats)
  return allow_cheats_;
}
inline void CMsgSignOutBotInfo::set_allow_cheats(bool value) {
  _has_bits_[0] |= 0x00000002u;
  allow_cheats_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutBotInfo.allow_cheats)
}

// optional .proto.dota.DOTABotDifficulty bot_difficulty_radiant = 2 [default = BOT_DIFFICULTY_PASSIVE];
inline bool CMsgSignOutBotInfo::has_bot_difficulty_radiant() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutBotInfo::clear_bot_difficulty_radiant() {
  bot_difficulty_radiant_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::DOTABotDifficulty CMsgSignOutBotInfo::bot_difficulty_radiant() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutBotInfo.bot_difficulty_radiant)
  return static_cast< ::proto::dota::DOTABotDifficulty >(bot_difficulty_radiant_);
}
inline void CMsgSignOutBotInfo::set_bot_difficulty_radiant(::proto::dota::DOTABotDifficulty value) {
  assert(::proto::dota::DOTABotDifficulty_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  bot_difficulty_radiant_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutBotInfo.bot_difficulty_radiant)
}

// optional bool created_lobby = 3;
inline bool CMsgSignOutBotInfo::has_created_lobby() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutBotInfo::clear_created_lobby() {
  created_lobby_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgSignOutBotInfo::created_lobby() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutBotInfo.created_lobby)
  return created_lobby_;
}
inline void CMsgSignOutBotInfo::set_created_lobby(bool value) {
  _has_bits_[0] |= 0x00000004u;
  created_lobby_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutBotInfo.created_lobby)
}

// optional .proto.dota.DOTABotDifficulty bot_difficulty_dire = 5 [default = BOT_DIFFICULTY_PASSIVE];
inline bool CMsgSignOutBotInfo::has_bot_difficulty_dire() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSignOutBotInfo::clear_bot_difficulty_dire() {
  bot_difficulty_dire_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::proto::dota::DOTABotDifficulty CMsgSignOutBotInfo::bot_difficulty_dire() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutBotInfo.bot_difficulty_dire)
  return static_cast< ::proto::dota::DOTABotDifficulty >(bot_difficulty_dire_);
}
inline void CMsgSignOutBotInfo::set_bot_difficulty_dire(::proto::dota::DOTABotDifficulty value) {
  assert(::proto::dota::DOTABotDifficulty_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  bot_difficulty_dire_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutBotInfo.bot_difficulty_dire)
}

// -------------------------------------------------------------------

// CMsgSignOutPlayerStats

// optional int32 account_id = 1;
inline bool CMsgSignOutPlayerStats::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_account_id() {
  account_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CMsgSignOutPlayerStats::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.account_id)
  return account_id_;
}
inline void CMsgSignOutPlayerStats::set_account_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.account_id)
}

// optional uint64 match_id = 2;
inline bool CMsgSignOutPlayerStats::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgSignOutPlayerStats::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.match_id)
  return match_id_;
}
inline void CMsgSignOutPlayerStats::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.match_id)
}

// optional uint32 rank = 3;
inline bool CMsgSignOutPlayerStats::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_rank() {
  rank_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.rank)
  return rank_;
}
inline void CMsgSignOutPlayerStats::set_rank(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.rank)
}

// optional uint32 hero_id = 4;
inline bool CMsgSignOutPlayerStats::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.hero_id)
  return hero_id_;
}
inline void CMsgSignOutPlayerStats::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.hero_id)
}

// optional uint32 rampages = 5;
inline bool CMsgSignOutPlayerStats::has_rampages() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_rampages() {
  rampages_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::rampages() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.rampages)
  return rampages_;
}
inline void CMsgSignOutPlayerStats::set_rampages(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  rampages_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.rampages)
}

// optional uint32 triple_kills = 6;
inline bool CMsgSignOutPlayerStats::has_triple_kills() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_triple_kills() {
  triple_kills_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::triple_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.triple_kills)
  return triple_kills_;
}
inline void CMsgSignOutPlayerStats::set_triple_kills(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  triple_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.triple_kills)
}

// optional uint32 first_blood_claimed = 7;
inline bool CMsgSignOutPlayerStats::has_first_blood_claimed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_first_blood_claimed() {
  first_blood_claimed_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::first_blood_claimed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.first_blood_claimed)
  return first_blood_claimed_;
}
inline void CMsgSignOutPlayerStats::set_first_blood_claimed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  first_blood_claimed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.first_blood_claimed)
}

// optional uint32 first_blood_given = 8;
inline bool CMsgSignOutPlayerStats::has_first_blood_given() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_first_blood_given() {
  first_blood_given_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::first_blood_given() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.first_blood_given)
  return first_blood_given_;
}
inline void CMsgSignOutPlayerStats::set_first_blood_given(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  first_blood_given_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.first_blood_given)
}

// optional uint32 couriers_killed = 9;
inline bool CMsgSignOutPlayerStats::has_couriers_killed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_couriers_killed() {
  couriers_killed_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::couriers_killed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.couriers_killed)
  return couriers_killed_;
}
inline void CMsgSignOutPlayerStats::set_couriers_killed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  couriers_killed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.couriers_killed)
}

// optional uint32 aegises_snatched = 10;
inline bool CMsgSignOutPlayerStats::has_aegises_snatched() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_aegises_snatched() {
  aegises_snatched_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::aegises_snatched() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.aegises_snatched)
  return aegises_snatched_;
}
inline void CMsgSignOutPlayerStats::set_aegises_snatched(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  aegises_snatched_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.aegises_snatched)
}

// optional uint32 cheeses_eaten = 11;
inline bool CMsgSignOutPlayerStats::has_cheeses_eaten() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_cheeses_eaten() {
  cheeses_eaten_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::cheeses_eaten() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.cheeses_eaten)
  return cheeses_eaten_;
}
inline void CMsgSignOutPlayerStats::set_cheeses_eaten(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  cheeses_eaten_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.cheeses_eaten)
}

// optional uint32 creeps_stacked = 12;
inline bool CMsgSignOutPlayerStats::has_creeps_stacked() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_creeps_stacked() {
  creeps_stacked_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::creeps_stacked() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.creeps_stacked)
  return creeps_stacked_;
}
inline void CMsgSignOutPlayerStats::set_creeps_stacked(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  creeps_stacked_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.creeps_stacked)
}

// optional float fight_score = 13;
inline bool CMsgSignOutPlayerStats::has_fight_score() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_fight_score() {
  fight_score_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline float CMsgSignOutPlayerStats::fight_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.fight_score)
  return fight_score_;
}
inline void CMsgSignOutPlayerStats::set_fight_score(float value) {
  _has_bits_[0] |= 0x00001000u;
  fight_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.fight_score)
}

// optional float farm_score = 14;
inline bool CMsgSignOutPlayerStats::has_farm_score() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_farm_score() {
  farm_score_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline float CMsgSignOutPlayerStats::farm_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.farm_score)
  return farm_score_;
}
inline void CMsgSignOutPlayerStats::set_farm_score(float value) {
  _has_bits_[0] |= 0x00002000u;
  farm_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.farm_score)
}

// optional float support_score = 15;
inline bool CMsgSignOutPlayerStats::has_support_score() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_support_score() {
  support_score_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline float CMsgSignOutPlayerStats::support_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.support_score)
  return support_score_;
}
inline void CMsgSignOutPlayerStats::set_support_score(float value) {
  _has_bits_[0] |= 0x00004000u;
  support_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.support_score)
}

// optional float push_score = 16;
inline bool CMsgSignOutPlayerStats::has_push_score() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_push_score() {
  push_score_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline float CMsgSignOutPlayerStats::push_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.push_score)
  return push_score_;
}
inline void CMsgSignOutPlayerStats::set_push_score(float value) {
  _has_bits_[0] |= 0x00008000u;
  push_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.push_score)
}

// optional uint32 kills = 17;
inline bool CMsgSignOutPlayerStats::has_kills() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_kills() {
  kills_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.kills)
  return kills_;
}
inline void CMsgSignOutPlayerStats::set_kills(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.kills)
}

// optional uint32 deaths = 18;
inline bool CMsgSignOutPlayerStats::has_deaths() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_deaths() {
  deaths_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::deaths() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.deaths)
  return deaths_;
}
inline void CMsgSignOutPlayerStats::set_deaths(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  deaths_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.deaths)
}

// optional uint32 assists = 19;
inline bool CMsgSignOutPlayerStats::has_assists() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_assists() {
  assists_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::assists() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.assists)
  return assists_;
}
inline void CMsgSignOutPlayerStats::set_assists(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  assists_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.assists)
}

// optional uint32 last_hits = 20;
inline bool CMsgSignOutPlayerStats::has_last_hits() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_last_hits() {
  last_hits_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::last_hits() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.last_hits)
  return last_hits_;
}
inline void CMsgSignOutPlayerStats::set_last_hits(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  last_hits_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.last_hits)
}

// optional uint32 denies = 21;
inline bool CMsgSignOutPlayerStats::has_denies() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_denies() {
  denies_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::denies() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.denies)
  return denies_;
}
inline void CMsgSignOutPlayerStats::set_denies(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  denies_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.denies)
}

// optional float gpm = 22;
inline bool CMsgSignOutPlayerStats::has_gpm() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_gpm() {
  gpm_ = 0;
  _has_bits_[0] &= ~0x00200000u;
}
inline float CMsgSignOutPlayerStats::gpm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.gpm)
  return gpm_;
}
inline void CMsgSignOutPlayerStats::set_gpm(float value) {
  _has_bits_[0] |= 0x00200000u;
  gpm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.gpm)
}

// optional float xppm = 23;
inline bool CMsgSignOutPlayerStats::has_xppm() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_xppm() {
  xppm_ = 0;
  _has_bits_[0] &= ~0x00400000u;
}
inline float CMsgSignOutPlayerStats::xppm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.xppm)
  return xppm_;
}
inline void CMsgSignOutPlayerStats::set_xppm(float value) {
  _has_bits_[0] |= 0x00400000u;
  xppm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.xppm)
}

// optional float net_worth = 24;
inline bool CMsgSignOutPlayerStats::has_net_worth() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_net_worth() {
  net_worth_ = 0;
  _has_bits_[0] &= ~0x00800000u;
}
inline float CMsgSignOutPlayerStats::net_worth() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.net_worth)
  return net_worth_;
}
inline void CMsgSignOutPlayerStats::set_net_worth(float value) {
  _has_bits_[0] |= 0x00800000u;
  net_worth_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.net_worth)
}

// optional float damage = 25;
inline bool CMsgSignOutPlayerStats::has_damage() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_damage() {
  damage_ = 0;
  _has_bits_[0] &= ~0x01000000u;
}
inline float CMsgSignOutPlayerStats::damage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.damage)
  return damage_;
}
inline void CMsgSignOutPlayerStats::set_damage(float value) {
  _has_bits_[0] |= 0x01000000u;
  damage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.damage)
}

// optional float heals = 26;
inline bool CMsgSignOutPlayerStats::has_heals() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_heals() {
  heals_ = 0;
  _has_bits_[0] &= ~0x02000000u;
}
inline float CMsgSignOutPlayerStats::heals() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.heals)
  return heals_;
}
inline void CMsgSignOutPlayerStats::set_heals(float value) {
  _has_bits_[0] |= 0x02000000u;
  heals_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.heals)
}

// optional uint32 rapiers_purchased = 27;
inline bool CMsgSignOutPlayerStats::has_rapiers_purchased() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_rapiers_purchased() {
  rapiers_purchased_ = 0u;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::rapiers_purchased() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.rapiers_purchased)
  return rapiers_purchased_;
}
inline void CMsgSignOutPlayerStats::set_rapiers_purchased(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x04000000u;
  rapiers_purchased_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.rapiers_purchased)
}

// optional uint32 observer_wards_placed = 28;
inline bool CMsgSignOutPlayerStats::has_observer_wards_placed() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_observer_wards_placed() {
  observer_wards_placed_ = 0u;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::observer_wards_placed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.observer_wards_placed)
  return observer_wards_placed_;
}
inline void CMsgSignOutPlayerStats::set_observer_wards_placed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x08000000u;
  observer_wards_placed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.observer_wards_placed)
}

// optional uint32 wards_destroyed = 29;
inline bool CMsgSignOutPlayerStats::has_wards_destroyed() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CMsgSignOutPlayerStats::clear_wards_destroyed() {
  wards_destroyed_ = 0u;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::google::protobuf::uint32 CMsgSignOutPlayerStats::wards_destroyed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutPlayerStats.wards_destroyed)
  return wards_destroyed_;
}
inline void CMsgSignOutPlayerStats::set_wards_destroyed(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x10000000u;
  wards_destroyed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutPlayerStats.wards_destroyed)
}

// -------------------------------------------------------------------

// CMsgSignOutCommunicationSummary_PlayerCommunication

// optional uint32 account_id = 1;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.account_id)
  return account_id_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.account_id)
}

// optional uint32 pings = 2;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_pings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_pings() {
  pings_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::pings() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.pings)
  return pings_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_pings(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pings_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.pings)
}

// optional uint32 max_pings_per_interval = 3;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_max_pings_per_interval() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_max_pings_per_interval() {
  max_pings_per_interval_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::max_pings_per_interval() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.max_pings_per_interval)
  return max_pings_per_interval_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_max_pings_per_interval(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  max_pings_per_interval_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.max_pings_per_interval)
}

// optional uint32 teammate_pings = 4;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_teammate_pings() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_teammate_pings() {
  teammate_pings_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::teammate_pings() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.teammate_pings)
  return teammate_pings_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_teammate_pings(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  teammate_pings_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.teammate_pings)
}

// optional uint32 max_teammate_pings_per_interval = 5;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_max_teammate_pings_per_interval() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_max_teammate_pings_per_interval() {
  max_teammate_pings_per_interval_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::max_teammate_pings_per_interval() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.max_teammate_pings_per_interval)
  return max_teammate_pings_per_interval_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_max_teammate_pings_per_interval(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  max_teammate_pings_per_interval_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.max_teammate_pings_per_interval)
}

// optional uint32 team_chat_messages = 6;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_team_chat_messages() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_team_chat_messages() {
  team_chat_messages_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::team_chat_messages() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.team_chat_messages)
  return team_chat_messages_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_team_chat_messages(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  team_chat_messages_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.team_chat_messages)
}

// optional uint32 all_chat_messages = 7;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_all_chat_messages() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_all_chat_messages() {
  all_chat_messages_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::all_chat_messages() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.all_chat_messages)
  return all_chat_messages_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_all_chat_messages(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  all_chat_messages_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.all_chat_messages)
}

// optional uint32 chat_wheel_messages = 8;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_chat_wheel_messages() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_chat_wheel_messages() {
  chat_wheel_messages_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::chat_wheel_messages() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.chat_wheel_messages)
  return chat_wheel_messages_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_chat_wheel_messages(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  chat_wheel_messages_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.chat_wheel_messages)
}

// optional uint32 pauses = 9;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_pauses() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_pauses() {
  pauses_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::pauses() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.pauses)
  return pauses_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_pauses(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  pauses_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.pauses)
}

// optional uint32 unpauses = 10;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_unpauses() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_unpauses() {
  unpauses_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::unpauses() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.unpauses)
  return unpauses_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_unpauses(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  unpauses_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.unpauses)
}

// optional uint32 lines_drawn = 11;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_lines_drawn() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_lines_drawn() {
  lines_drawn_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::lines_drawn() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.lines_drawn)
  return lines_drawn_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_lines_drawn(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  lines_drawn_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.lines_drawn)
}

// optional uint32 voice_chat_seconds = 12;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_voice_chat_seconds() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_voice_chat_seconds() {
  voice_chat_seconds_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::voice_chat_seconds() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.voice_chat_seconds)
  return voice_chat_seconds_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_voice_chat_seconds(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  voice_chat_seconds_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.voice_chat_seconds)
}

// optional uint32 chat_mutes = 13;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_chat_mutes() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_chat_mutes() {
  chat_mutes_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::chat_mutes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.chat_mutes)
  return chat_mutes_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_chat_mutes(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  chat_mutes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.chat_mutes)
}

// optional uint32 voice_mutes = 14;
inline bool CMsgSignOutCommunicationSummary_PlayerCommunication::has_voice_mutes() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::clear_voice_mutes() {
  voice_mutes_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunicationSummary_PlayerCommunication::voice_mutes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.voice_mutes)
  return voice_mutes_;
}
inline void CMsgSignOutCommunicationSummary_PlayerCommunication::set_voice_mutes(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  voice_mutes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication.voice_mutes)
}

// -------------------------------------------------------------------

// CMsgSignOutCommunicationSummary

// repeated .proto.dota.CMsgSignOutCommunicationSummary.PlayerCommunication players = 1;
inline int CMsgSignOutCommunicationSummary::players_size() const {
  return players_.size();
}
inline void CMsgSignOutCommunicationSummary::clear_players() {
  players_.Clear();
}
inline ::proto::dota::CMsgSignOutCommunicationSummary_PlayerCommunication* CMsgSignOutCommunicationSummary::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgSignOutCommunicationSummary.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutCommunicationSummary_PlayerCommunication >*
CMsgSignOutCommunicationSummary::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSignOutCommunicationSummary.players)
  return &players_;
}
inline const ::proto::dota::CMsgSignOutCommunicationSummary_PlayerCommunication& CMsgSignOutCommunicationSummary::players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunicationSummary.players)
  return players_.Get(index);
}
inline ::proto::dota::CMsgSignOutCommunicationSummary_PlayerCommunication* CMsgSignOutCommunicationSummary::add_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSignOutCommunicationSummary.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutCommunicationSummary_PlayerCommunication >&
CMsgSignOutCommunicationSummary::players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSignOutCommunicationSummary.players)
  return players_;
}

// -------------------------------------------------------------------

// CMsgGameMatchSignoutResponse_PlayerMetadata

// optional uint32 hero_id = 1;
inline bool CMsgGameMatchSignoutResponse_PlayerMetadata::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_PlayerMetadata::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.hero_id)
  return hero_id_;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.hero_id)
}

// optional uint32 avg_kills_x16 = 2;
inline bool CMsgGameMatchSignoutResponse_PlayerMetadata::has_avg_kills_x16() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::clear_avg_kills_x16() {
  avg_kills_x16_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_PlayerMetadata::avg_kills_x16() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.avg_kills_x16)
  return avg_kills_x16_;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::set_avg_kills_x16(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  avg_kills_x16_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.avg_kills_x16)
}

// optional uint32 avg_deaths_x16 = 3;
inline bool CMsgGameMatchSignoutResponse_PlayerMetadata::has_avg_deaths_x16() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::clear_avg_deaths_x16() {
  avg_deaths_x16_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_PlayerMetadata::avg_deaths_x16() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.avg_deaths_x16)
  return avg_deaths_x16_;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::set_avg_deaths_x16(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  avg_deaths_x16_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.avg_deaths_x16)
}

// optional uint32 avg_assists_x16 = 4;
inline bool CMsgGameMatchSignoutResponse_PlayerMetadata::has_avg_assists_x16() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::clear_avg_assists_x16() {
  avg_assists_x16_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_PlayerMetadata::avg_assists_x16() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.avg_assists_x16)
  return avg_assists_x16_;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::set_avg_assists_x16(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  avg_assists_x16_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.avg_assists_x16)
}

// optional uint32 avg_gpm_x16 = 5;
inline bool CMsgGameMatchSignoutResponse_PlayerMetadata::has_avg_gpm_x16() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::clear_avg_gpm_x16() {
  avg_gpm_x16_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_PlayerMetadata::avg_gpm_x16() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.avg_gpm_x16)
  return avg_gpm_x16_;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::set_avg_gpm_x16(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  avg_gpm_x16_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.avg_gpm_x16)
}

// optional uint32 avg_xpm_x16 = 6;
inline bool CMsgGameMatchSignoutResponse_PlayerMetadata::has_avg_xpm_x16() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::clear_avg_xpm_x16() {
  avg_xpm_x16_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_PlayerMetadata::avg_xpm_x16() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.avg_xpm_x16)
  return avg_xpm_x16_;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::set_avg_xpm_x16(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  avg_xpm_x16_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.avg_xpm_x16)
}

// optional uint32 best_kills_x16 = 7;
inline bool CMsgGameMatchSignoutResponse_PlayerMetadata::has_best_kills_x16() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::clear_best_kills_x16() {
  best_kills_x16_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_PlayerMetadata::best_kills_x16() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.best_kills_x16)
  return best_kills_x16_;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::set_best_kills_x16(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  best_kills_x16_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.best_kills_x16)
}

// optional uint32 best_assists_x16 = 8;
inline bool CMsgGameMatchSignoutResponse_PlayerMetadata::has_best_assists_x16() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::clear_best_assists_x16() {
  best_assists_x16_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_PlayerMetadata::best_assists_x16() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.best_assists_x16)
  return best_assists_x16_;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::set_best_assists_x16(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  best_assists_x16_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.best_assists_x16)
}

// optional uint32 best_gpm_x16 = 9;
inline bool CMsgGameMatchSignoutResponse_PlayerMetadata::has_best_gpm_x16() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::clear_best_gpm_x16() {
  best_gpm_x16_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_PlayerMetadata::best_gpm_x16() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.best_gpm_x16)
  return best_gpm_x16_;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::set_best_gpm_x16(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  best_gpm_x16_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.best_gpm_x16)
}

// optional uint32 best_xpm_x16 = 10;
inline bool CMsgGameMatchSignoutResponse_PlayerMetadata::has_best_xpm_x16() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::clear_best_xpm_x16() {
  best_xpm_x16_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_PlayerMetadata::best_xpm_x16() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.best_xpm_x16)
  return best_xpm_x16_;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::set_best_xpm_x16(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  best_xpm_x16_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.best_xpm_x16)
}

// optional uint32 win_streak = 11;
inline bool CMsgGameMatchSignoutResponse_PlayerMetadata::has_win_streak() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::clear_win_streak() {
  win_streak_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_PlayerMetadata::win_streak() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.win_streak)
  return win_streak_;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::set_win_streak(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  win_streak_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.win_streak)
}

// optional uint32 best_win_streak = 12;
inline bool CMsgGameMatchSignoutResponse_PlayerMetadata::has_best_win_streak() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::clear_best_win_streak() {
  best_win_streak_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_PlayerMetadata::best_win_streak() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.best_win_streak)
  return best_win_streak_;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::set_best_win_streak(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  best_win_streak_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.best_win_streak)
}

// optional uint32 games_played = 13;
inline bool CMsgGameMatchSignoutResponse_PlayerMetadata::has_games_played() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::clear_games_played() {
  games_played_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse_PlayerMetadata::games_played() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.games_played)
  return games_played_;
}
inline void CMsgGameMatchSignoutResponse_PlayerMetadata::set_games_played(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  games_played_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata.games_played)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignoutResponse

// optional uint64 match_id = 1;
inline bool CMsgGameMatchSignoutResponse::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignoutResponse::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgGameMatchSignoutResponse::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.match_id)
  return match_id_;
}
inline void CMsgGameMatchSignoutResponse::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.match_id)
}

// optional fixed32 replay_salt = 2;
inline bool CMsgGameMatchSignoutResponse::has_replay_salt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignoutResponse::clear_replay_salt() {
  replay_salt_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse::replay_salt() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.replay_salt)
  return replay_salt_;
}
inline void CMsgGameMatchSignoutResponse::set_replay_salt(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  replay_salt_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.replay_salt)
}

// repeated .proto.dota.CLobbyTimedRewardDetails timed_reward_details = 3;
inline int CMsgGameMatchSignoutResponse::timed_reward_details_size() const {
  return timed_reward_details_.size();
}
inline ::proto::dota::CLobbyTimedRewardDetails* CMsgGameMatchSignoutResponse::mutable_timed_reward_details(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignoutResponse.timed_reward_details)
  return timed_reward_details_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CLobbyTimedRewardDetails >*
CMsgGameMatchSignoutResponse::mutable_timed_reward_details() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignoutResponse.timed_reward_details)
  return &timed_reward_details_;
}
inline const ::proto::dota::CLobbyTimedRewardDetails& CMsgGameMatchSignoutResponse::timed_reward_details(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.timed_reward_details)
  return timed_reward_details_.Get(index);
}
inline ::proto::dota::CLobbyTimedRewardDetails* CMsgGameMatchSignoutResponse::add_timed_reward_details() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignoutResponse.timed_reward_details)
  return timed_reward_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CLobbyTimedRewardDetails >&
CMsgGameMatchSignoutResponse::timed_reward_details() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignoutResponse.timed_reward_details)
  return timed_reward_details_;
}

// repeated .proto.dota.CDOTALobbyMember xp_reward_details = 4;
inline int CMsgGameMatchSignoutResponse::xp_reward_details_size() const {
  return xp_reward_details_.size();
}
inline ::proto::dota::CDOTALobbyMember* CMsgGameMatchSignoutResponse::mutable_xp_reward_details(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignoutResponse.xp_reward_details)
  return xp_reward_details_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTALobbyMember >*
CMsgGameMatchSignoutResponse::mutable_xp_reward_details() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignoutResponse.xp_reward_details)
  return &xp_reward_details_;
}
inline const ::proto::dota::CDOTALobbyMember& CMsgGameMatchSignoutResponse::xp_reward_details(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.xp_reward_details)
  return xp_reward_details_.Get(index);
}
inline ::proto::dota::CDOTALobbyMember* CMsgGameMatchSignoutResponse::add_xp_reward_details() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignoutResponse.xp_reward_details)
  return xp_reward_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTALobbyMember >&
CMsgGameMatchSignoutResponse::xp_reward_details() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignoutResponse.xp_reward_details)
  return xp_reward_details_;
}

// optional uint32 leagueid = 5;
inline bool CMsgGameMatchSignoutResponse::has_leagueid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignoutResponse::clear_leagueid() {
  leagueid_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse::leagueid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.leagueid)
  return leagueid_;
}
inline void CMsgGameMatchSignoutResponse::set_leagueid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.leagueid)
}

// optional fixed32 metadata_private_key = 7;
inline bool CMsgGameMatchSignoutResponse::has_metadata_private_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameMatchSignoutResponse::clear_metadata_private_key() {
  metadata_private_key_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignoutResponse::metadata_private_key() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.metadata_private_key)
  return metadata_private_key_;
}
inline void CMsgGameMatchSignoutResponse::set_metadata_private_key(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  metadata_private_key_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignoutResponse.metadata_private_key)
}

// optional .proto.dota.CMsgDOTAMatch match_details = 8;
inline bool CMsgGameMatchSignoutResponse::has_match_details() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CMsgDOTAMatch& CMsgGameMatchSignoutResponse::match_details() const {
  const ::proto::dota::CMsgDOTAMatch* p = match_details_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.match_details)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTAMatch*>(
      &::proto::dota::_CMsgDOTAMatch_default_instance_);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgGameMatchSignoutResponse::release_match_details() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameMatchSignoutResponse.match_details)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTAMatch* temp = match_details_;
  match_details_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTAMatch* CMsgGameMatchSignoutResponse::mutable_match_details() {
  _has_bits_[0] |= 0x00000001u;
  if (match_details_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTAMatch>(GetArenaNoVirtual());
    match_details_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignoutResponse.match_details)
  return match_details_;
}
inline void CMsgGameMatchSignoutResponse::set_allocated_match_details(::proto::dota::CMsgDOTAMatch* match_details) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(match_details_);
  }
  if (match_details) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      match_details = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, match_details, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  match_details_ = match_details;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameMatchSignoutResponse.match_details)
}

// repeated .proto.dota.CMsgGameMatchSignoutResponse.PlayerMetadata players_metadata = 9;
inline int CMsgGameMatchSignoutResponse::players_metadata_size() const {
  return players_metadata_.size();
}
inline void CMsgGameMatchSignoutResponse::clear_players_metadata() {
  players_metadata_.Clear();
}
inline ::proto::dota::CMsgGameMatchSignoutResponse_PlayerMetadata* CMsgGameMatchSignoutResponse::mutable_players_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignoutResponse.players_metadata)
  return players_metadata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignoutResponse_PlayerMetadata >*
CMsgGameMatchSignoutResponse::mutable_players_metadata() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameMatchSignoutResponse.players_metadata)
  return &players_metadata_;
}
inline const ::proto::dota::CMsgGameMatchSignoutResponse_PlayerMetadata& CMsgGameMatchSignoutResponse::players_metadata(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignoutResponse.players_metadata)
  return players_metadata_.Get(index);
}
inline ::proto::dota::CMsgGameMatchSignoutResponse_PlayerMetadata* CMsgGameMatchSignoutResponse::add_players_metadata() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameMatchSignoutResponse.players_metadata)
  return players_metadata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGameMatchSignoutResponse_PlayerMetadata >&
CMsgGameMatchSignoutResponse::players_metadata() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameMatchSignoutResponse.players_metadata)
  return players_metadata_;
}

// -------------------------------------------------------------------

// CMsgTimedRewardContainer

// repeated .proto.dota.CLobbyTimedRewardDetails timed_reward_details = 1;
inline int CMsgTimedRewardContainer::timed_reward_details_size() const {
  return timed_reward_details_.size();
}
inline ::proto::dota::CLobbyTimedRewardDetails* CMsgTimedRewardContainer::mutable_timed_reward_details(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgTimedRewardContainer.timed_reward_details)
  return timed_reward_details_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CLobbyTimedRewardDetails >*
CMsgTimedRewardContainer::mutable_timed_reward_details() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgTimedRewardContainer.timed_reward_details)
  return &timed_reward_details_;
}
inline const ::proto::dota::CLobbyTimedRewardDetails& CMsgTimedRewardContainer::timed_reward_details(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTimedRewardContainer.timed_reward_details)
  return timed_reward_details_.Get(index);
}
inline ::proto::dota::CLobbyTimedRewardDetails* CMsgTimedRewardContainer::add_timed_reward_details() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgTimedRewardContainer.timed_reward_details)
  return timed_reward_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CLobbyTimedRewardDetails >&
CMsgTimedRewardContainer::timed_reward_details() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgTimedRewardContainer.timed_reward_details)
  return timed_reward_details_;
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOutPermissionRequest

// optional uint32 server_version = 1;
inline bool CMsgGameMatchSignOutPermissionRequest::has_server_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOutPermissionRequest::clear_server_version() {
  server_version_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOutPermissionRequest::server_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOutPermissionRequest.server_version)
  return server_version_;
}
inline void CMsgGameMatchSignOutPermissionRequest::set_server_version(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  server_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOutPermissionRequest.server_version)
}

// optional uint32 local_attempt = 2;
inline bool CMsgGameMatchSignOutPermissionRequest::has_local_attempt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOutPermissionRequest::clear_local_attempt() {
  local_attempt_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOutPermissionRequest::local_attempt() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOutPermissionRequest.local_attempt)
  return local_attempt_;
}
inline void CMsgGameMatchSignOutPermissionRequest::set_local_attempt(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  local_attempt_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOutPermissionRequest.local_attempt)
}

// optional uint32 total_attempt = 3;
inline bool CMsgGameMatchSignOutPermissionRequest::has_total_attempt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOutPermissionRequest::clear_total_attempt() {
  total_attempt_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOutPermissionRequest::total_attempt() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOutPermissionRequest.total_attempt)
  return total_attempt_;
}
inline void CMsgGameMatchSignOutPermissionRequest::set_total_attempt(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  total_attempt_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOutPermissionRequest.total_attempt)
}

// optional uint32 seconds_waited = 4;
inline bool CMsgGameMatchSignOutPermissionRequest::has_seconds_waited() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignOutPermissionRequest::clear_seconds_waited() {
  seconds_waited_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOutPermissionRequest::seconds_waited() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOutPermissionRequest.seconds_waited)
  return seconds_waited_;
}
inline void CMsgGameMatchSignOutPermissionRequest::set_seconds_waited(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  seconds_waited_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOutPermissionRequest.seconds_waited)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOutPermissionResponse

// optional bool permission_granted = 1 [default = false];
inline bool CMsgGameMatchSignOutPermissionResponse::has_permission_granted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOutPermissionResponse::clear_permission_granted() {
  permission_granted_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGameMatchSignOutPermissionResponse::permission_granted() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOutPermissionResponse.permission_granted)
  return permission_granted_;
}
inline void CMsgGameMatchSignOutPermissionResponse::set_permission_granted(bool value) {
  _has_bits_[0] |= 0x00000001u;
  permission_granted_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOutPermissionResponse.permission_granted)
}

// optional bool abandon_signout = 2 [default = false];
inline bool CMsgGameMatchSignOutPermissionResponse::has_abandon_signout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOutPermissionResponse::clear_abandon_signout() {
  abandon_signout_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGameMatchSignOutPermissionResponse::abandon_signout() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOutPermissionResponse.abandon_signout)
  return abandon_signout_;
}
inline void CMsgGameMatchSignOutPermissionResponse::set_abandon_signout(bool value) {
  _has_bits_[0] |= 0x00000002u;
  abandon_signout_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOutPermissionResponse.abandon_signout)
}

// optional uint32 retry_delay_seconds = 3 [default = 0];
inline bool CMsgGameMatchSignOutPermissionResponse::has_retry_delay_seconds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOutPermissionResponse::clear_retry_delay_seconds() {
  retry_delay_seconds_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOutPermissionResponse::retry_delay_seconds() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOutPermissionResponse.retry_delay_seconds)
  return retry_delay_seconds_;
}
inline void CMsgGameMatchSignOutPermissionResponse::set_retry_delay_seconds(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  retry_delay_seconds_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOutPermissionResponse.retry_delay_seconds)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOutEventGameData

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgGameMatchSignOutEventGameData::has_event_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameMatchSignOutEventGameData::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::proto::dota::EEvent CMsgGameMatchSignOutEventGameData::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOutEventGameData.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgGameMatchSignOutEventGameData::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOutEventGameData.event_id)
}

// optional string game_name = 2;
inline bool CMsgGameMatchSignOutEventGameData::has_game_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameMatchSignOutEventGameData::clear_game_name() {
  game_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGameMatchSignOutEventGameData::game_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOutEventGameData.game_name)
  return game_name_.GetNoArena();
}
inline void CMsgGameMatchSignOutEventGameData::set_game_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOutEventGameData.game_name)
}
#if LANG_CXX11
inline void CMsgGameMatchSignOutEventGameData::set_game_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  game_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGameMatchSignOutEventGameData.game_name)
}
#endif
inline void CMsgGameMatchSignOutEventGameData::set_game_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGameMatchSignOutEventGameData.game_name)
}
inline void CMsgGameMatchSignOutEventGameData::set_game_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGameMatchSignOutEventGameData.game_name)
}
inline ::std::string* CMsgGameMatchSignOutEventGameData::mutable_game_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOutEventGameData.game_name)
  return game_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameMatchSignOutEventGameData::release_game_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameMatchSignOutEventGameData.game_name)
  if (!has_game_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return game_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameMatchSignOutEventGameData::set_allocated_game_name(::std::string* game_name) {
  if (game_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  game_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameMatchSignOutEventGameData.game_name)
}

// optional string map_name = 3;
inline bool CMsgGameMatchSignOutEventGameData::has_map_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameMatchSignOutEventGameData::clear_map_name() {
  map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgGameMatchSignOutEventGameData::map_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOutEventGameData.map_name)
  return map_name_.GetNoArena();
}
inline void CMsgGameMatchSignOutEventGameData::set_map_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOutEventGameData.map_name)
}
#if LANG_CXX11
inline void CMsgGameMatchSignOutEventGameData::set_map_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  map_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGameMatchSignOutEventGameData.map_name)
}
#endif
inline void CMsgGameMatchSignOutEventGameData::set_map_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGameMatchSignOutEventGameData.map_name)
}
inline void CMsgGameMatchSignOutEventGameData::set_map_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGameMatchSignOutEventGameData.map_name)
}
inline ::std::string* CMsgGameMatchSignOutEventGameData::mutable_map_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOutEventGameData.map_name)
  return map_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameMatchSignOutEventGameData::release_map_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameMatchSignOutEventGameData.map_name)
  if (!has_map_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return map_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameMatchSignOutEventGameData::set_allocated_map_name(::std::string* map_name) {
  if (map_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  map_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameMatchSignOutEventGameData.map_name)
}

// optional bytes event_game_data = 4;
inline bool CMsgGameMatchSignOutEventGameData::has_event_game_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameMatchSignOutEventGameData::clear_event_game_data() {
  event_game_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CMsgGameMatchSignOutEventGameData::event_game_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOutEventGameData.event_game_data)
  return event_game_data_.GetNoArena();
}
inline void CMsgGameMatchSignOutEventGameData::set_event_game_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  event_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOutEventGameData.event_game_data)
}
#if LANG_CXX11
inline void CMsgGameMatchSignOutEventGameData::set_event_game_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  event_game_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGameMatchSignOutEventGameData.event_game_data)
}
#endif
inline void CMsgGameMatchSignOutEventGameData::set_event_game_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  event_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGameMatchSignOutEventGameData.event_game_data)
}
inline void CMsgGameMatchSignOutEventGameData::set_event_game_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  event_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGameMatchSignOutEventGameData.event_game_data)
}
inline ::std::string* CMsgGameMatchSignOutEventGameData::mutable_event_game_data() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameMatchSignOutEventGameData.event_game_data)
  return event_game_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameMatchSignOutEventGameData::release_event_game_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameMatchSignOutEventGameData.event_game_data)
  if (!has_event_game_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return event_game_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameMatchSignOutEventGameData::set_allocated_event_game_data(::std::string* event_game_data) {
  if (event_game_data != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  event_game_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_game_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameMatchSignOutEventGameData.event_game_data)
}

// optional uint32 start_time = 5;
inline bool CMsgGameMatchSignOutEventGameData::has_start_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameMatchSignOutEventGameData::clear_start_time() {
  start_time_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGameMatchSignOutEventGameData::start_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameMatchSignOutEventGameData.start_time)
  return start_time_;
}
inline void CMsgGameMatchSignOutEventGameData::set_start_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameMatchSignOutEventGameData.start_time)
}

// -------------------------------------------------------------------

// CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility

// optional uint32 ability_id = 1;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::has_ability_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::ability_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility.ability_id)
  return ability_id_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::set_ability_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility.ability_id)
}

// optional uint32 ability_level = 2;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::has_ability_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::clear_ability_level() {
  ability_level_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::ability_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility.ability_level)
  return ability_level_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility::set_ability_level(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ability_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility.ability_level)
}

// -------------------------------------------------------------------

// CMsgDOTALiveScoreboardUpdate_Team_Player

// optional uint32 player_slot = 1;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_player_slot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_player_slot() {
  player_slot_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::player_slot() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.player_slot)
  return player_slot_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_player_slot(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  player_slot_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.player_slot)
}

// optional string player_name = 2;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_player_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_player_name() {
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgDOTALiveScoreboardUpdate_Team_Player::player_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
  return player_name_.GetNoArena();
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_player_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
}
#if LANG_CXX11
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_player_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
}
#endif
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_player_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_player_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
}
inline ::std::string* CMsgDOTALiveScoreboardUpdate_Team_Player::mutable_player_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTALiveScoreboardUpdate_Team_Player::release_player_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
  if (!has_player_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return player_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_allocated_player_name(::std::string* player_name) {
  if (player_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.player_name)
}

// optional string hero_name = 3;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_hero_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_hero_name() {
  hero_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgDOTALiveScoreboardUpdate_Team_Player::hero_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
  return hero_name_.GetNoArena();
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_hero_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
}
#if LANG_CXX11
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_hero_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  hero_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
}
#endif
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_hero_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_hero_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
}
inline ::std::string* CMsgDOTALiveScoreboardUpdate_Team_Player::mutable_hero_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
  return hero_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTALiveScoreboardUpdate_Team_Player::release_hero_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
  if (!has_hero_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return hero_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_allocated_hero_name(::std::string* hero_name) {
  if (hero_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  hero_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.hero_name)
}

// optional uint32 hero_id = 4;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.hero_id)
  return hero_id_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.hero_id)
}

// optional uint32 kills = 5;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_kills() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_kills() {
  kills_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.kills)
  return kills_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_kills(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.kills)
}

// optional uint32 deaths = 6;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_deaths() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_deaths() {
  deaths_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::deaths() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.deaths)
  return deaths_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_deaths(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  deaths_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.deaths)
}

// optional uint32 assists = 7;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_assists() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_assists() {
  assists_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::assists() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.assists)
  return assists_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_assists(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  assists_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.assists)
}

// optional uint32 last_hits = 8;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_last_hits() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_last_hits() {
  last_hits_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::last_hits() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.last_hits)
  return last_hits_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_last_hits(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  last_hits_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.last_hits)
}

// optional uint32 denies = 9;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_denies() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_denies() {
  denies_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::denies() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.denies)
  return denies_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_denies(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  denies_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.denies)
}

// optional uint32 gold = 10;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_gold() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_gold() {
  gold_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::gold() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.gold)
  return gold_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_gold(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  gold_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.gold)
}

// optional uint32 level = 11;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.level)
  return level_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_level(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.level)
}

// optional float gold_per_min = 12;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_gold_per_min() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_gold_per_min() {
  gold_per_min_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline float CMsgDOTALiveScoreboardUpdate_Team_Player::gold_per_min() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.gold_per_min)
  return gold_per_min_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_gold_per_min(float value) {
  _has_bits_[0] |= 0x00000800u;
  gold_per_min_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.gold_per_min)
}

// optional float xp_per_min = 13;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_xp_per_min() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_xp_per_min() {
  xp_per_min_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline float CMsgDOTALiveScoreboardUpdate_Team_Player::xp_per_min() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.xp_per_min)
  return xp_per_min_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_xp_per_min(float value) {
  _has_bits_[0] |= 0x00001000u;
  xp_per_min_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.xp_per_min)
}

// optional .proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.DOTAUltimateState ultimate_state = 14 [default = k_EDOTAUltimateStateNotLearned];
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_ultimate_state() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_ultimate_state() {
  ultimate_state_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState CMsgDOTALiveScoreboardUpdate_Team_Player::ultimate_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.ultimate_state)
  return static_cast< ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState >(ultimate_state_);
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_ultimate_state(::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState value) {
  assert(::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_IsValid(value));
  _has_bits_[0] |= 0x00002000u;
  ultimate_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.ultimate_state)
}

// optional float ultimate_cooldown = 15;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_ultimate_cooldown() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_ultimate_cooldown() {
  ultimate_cooldown_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline float CMsgDOTALiveScoreboardUpdate_Team_Player::ultimate_cooldown() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.ultimate_cooldown)
  return ultimate_cooldown_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_ultimate_cooldown(float value) {
  _has_bits_[0] |= 0x00004000u;
  ultimate_cooldown_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.ultimate_cooldown)
}

// optional uint32 item0 = 16;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_item0() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_item0() {
  item0_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::item0() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.item0)
  return item0_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_item0(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  item0_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.item0)
}

// optional uint32 item1 = 17;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_item1() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_item1() {
  item1_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::item1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.item1)
  return item1_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_item1(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  item1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.item1)
}

// optional uint32 item2 = 18;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_item2() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_item2() {
  item2_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::item2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.item2)
  return item2_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_item2(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  item2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.item2)
}

// optional uint32 item3 = 19;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_item3() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_item3() {
  item3_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::item3() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.item3)
  return item3_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_item3(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  item3_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.item3)
}

// optional uint32 item4 = 20;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_item4() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_item4() {
  item4_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::item4() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.item4)
  return item4_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_item4(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  item4_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.item4)
}

// optional uint32 item5 = 21;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_item5() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_item5() {
  item5_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::item5() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.item5)
  return item5_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_item5(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  item5_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.item5)
}

// optional uint32 respawn_timer = 22;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_respawn_timer() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_respawn_timer() {
  respawn_timer_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::respawn_timer() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.respawn_timer)
  return respawn_timer_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_respawn_timer(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  respawn_timer_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.respawn_timer)
}

// optional uint32 account_id = 23;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.account_id)
  return account_id_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.account_id)
}

// optional float position_x = 24;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_position_x() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_position_x() {
  position_x_ = 0;
  _has_bits_[0] &= ~0x00800000u;
}
inline float CMsgDOTALiveScoreboardUpdate_Team_Player::position_x() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.position_x)
  return position_x_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_position_x(float value) {
  _has_bits_[0] |= 0x00800000u;
  position_x_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.position_x)
}

// optional float position_y = 25;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_position_y() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_position_y() {
  position_y_ = 0;
  _has_bits_[0] &= ~0x01000000u;
}
inline float CMsgDOTALiveScoreboardUpdate_Team_Player::position_y() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.position_y)
  return position_y_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_position_y(float value) {
  _has_bits_[0] |= 0x01000000u;
  position_y_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.position_y)
}

// optional uint32 net_worth = 26;
inline bool CMsgDOTALiveScoreboardUpdate_Team_Player::has_net_worth() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_net_worth() {
  net_worth_ = 0u;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team_Player::net_worth() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.net_worth)
  return net_worth_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::set_net_worth(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x02000000u;
  net_worth_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.net_worth)
}

// repeated .proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.HeroAbility abilities = 27;
inline int CMsgDOTALiveScoreboardUpdate_Team_Player::abilities_size() const {
  return abilities_.size();
}
inline void CMsgDOTALiveScoreboardUpdate_Team_Player::clear_abilities() {
  abilities_.Clear();
}
inline ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* CMsgDOTALiveScoreboardUpdate_Team_Player::mutable_abilities(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.abilities)
  return abilities_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility >*
CMsgDOTALiveScoreboardUpdate_Team_Player::mutable_abilities() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.abilities)
  return &abilities_;
}
inline const ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility& CMsgDOTALiveScoreboardUpdate_Team_Player::abilities(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.abilities)
  return abilities_.Get(index);
}
inline ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility* CMsgDOTALiveScoreboardUpdate_Team_Player::add_abilities() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.abilities)
  return abilities_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_HeroAbility >&
CMsgDOTALiveScoreboardUpdate_Team_Player::abilities() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player.abilities)
  return abilities_;
}

// -------------------------------------------------------------------

// CMsgDOTALiveScoreboardUpdate_Team

// repeated .proto.dota.CMsgDOTALiveScoreboardUpdate.Team.Player players = 1;
inline int CMsgDOTALiveScoreboardUpdate_Team::players_size() const {
  return players_.size();
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_players() {
  players_.Clear();
}
inline ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player* CMsgDOTALiveScoreboardUpdate_Team::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player >*
CMsgDOTALiveScoreboardUpdate_Team::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.players)
  return &players_;
}
inline const ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player& CMsgDOTALiveScoreboardUpdate_Team::players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.players)
  return players_.Get(index);
}
inline ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player* CMsgDOTALiveScoreboardUpdate_Team::add_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player >&
CMsgDOTALiveScoreboardUpdate_Team::players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.players)
  return players_;
}

// optional uint32 score = 2;
inline bool CMsgDOTALiveScoreboardUpdate_Team::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_score() {
  score_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team::score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.score)
  return score_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::set_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.score)
}

// optional uint32 tower_state = 3;
inline bool CMsgDOTALiveScoreboardUpdate_Team::has_tower_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_tower_state() {
  tower_state_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team::tower_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.tower_state)
  return tower_state_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::set_tower_state(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  tower_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.tower_state)
}

// optional uint32 barracks_state = 4;
inline bool CMsgDOTALiveScoreboardUpdate_Team::has_barracks_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_barracks_state() {
  barracks_state_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team::barracks_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.barracks_state)
  return barracks_state_;
}
inline void CMsgDOTALiveScoreboardUpdate_Team::set_barracks_state(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  barracks_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.barracks_state)
}

// repeated uint32 hero_picks = 5;
inline int CMsgDOTALiveScoreboardUpdate_Team::hero_picks_size() const {
  return hero_picks_.size();
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_hero_picks() {
  hero_picks_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team::hero_picks(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.hero_picks)
  return hero_picks_.Get(index);
}
inline void CMsgDOTALiveScoreboardUpdate_Team::set_hero_picks(int index, ::google::protobuf::uint32 value) {
  hero_picks_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.hero_picks)
}
inline void CMsgDOTALiveScoreboardUpdate_Team::add_hero_picks(::google::protobuf::uint32 value) {
  hero_picks_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.hero_picks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTALiveScoreboardUpdate_Team::hero_picks() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.hero_picks)
  return hero_picks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTALiveScoreboardUpdate_Team::mutable_hero_picks() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.hero_picks)
  return &hero_picks_;
}

// repeated uint32 hero_bans = 6;
inline int CMsgDOTALiveScoreboardUpdate_Team::hero_bans_size() const {
  return hero_bans_.size();
}
inline void CMsgDOTALiveScoreboardUpdate_Team::clear_hero_bans() {
  hero_bans_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate_Team::hero_bans(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.hero_bans)
  return hero_bans_.Get(index);
}
inline void CMsgDOTALiveScoreboardUpdate_Team::set_hero_bans(int index, ::google::protobuf::uint32 value) {
  hero_bans_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.hero_bans)
}
inline void CMsgDOTALiveScoreboardUpdate_Team::add_hero_bans(::google::protobuf::uint32 value) {
  hero_bans_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.hero_bans)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTALiveScoreboardUpdate_Team::hero_bans() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.hero_bans)
  return hero_bans_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTALiveScoreboardUpdate_Team::mutable_hero_bans() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTALiveScoreboardUpdate.Team.hero_bans)
  return &hero_bans_;
}

// -------------------------------------------------------------------

// CMsgDOTALiveScoreboardUpdate

// optional uint32 tournament_id = 1;
inline bool CMsgDOTALiveScoreboardUpdate::has_tournament_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_tournament_id() {
  tournament_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate::tournament_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.tournament_id)
  return tournament_id_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_tournament_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  tournament_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.tournament_id)
}

// optional uint32 tournament_game_id = 2;
inline bool CMsgDOTALiveScoreboardUpdate::has_tournament_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_tournament_game_id() {
  tournament_game_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate::tournament_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.tournament_game_id)
  return tournament_game_id_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_tournament_game_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  tournament_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.tournament_game_id)
}

// optional float duration = 3;
inline bool CMsgDOTALiveScoreboardUpdate::has_duration() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CMsgDOTALiveScoreboardUpdate::duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.duration)
  return duration_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_duration(float value) {
  _has_bits_[0] |= 0x00000010u;
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.duration)
}

// optional int32 hltv_delay = 4;
inline bool CMsgDOTALiveScoreboardUpdate::has_hltv_delay() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_hltv_delay() {
  hltv_delay_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 CMsgDOTALiveScoreboardUpdate::hltv_delay() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.hltv_delay)
  return hltv_delay_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_hltv_delay(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  hltv_delay_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.hltv_delay)
}

// optional .proto.dota.CMsgDOTALiveScoreboardUpdate.Team team_good = 5;
inline bool CMsgDOTALiveScoreboardUpdate::has_team_good() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_team_good() {
  if (team_good_ != nullptr) team_good_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team& CMsgDOTALiveScoreboardUpdate::team_good() const {
  const ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* p = team_good_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.team_good)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team*>(
      &::proto::dota::_CMsgDOTALiveScoreboardUpdate_Team_default_instance_);
}
inline ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* CMsgDOTALiveScoreboardUpdate::release_team_good() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTALiveScoreboardUpdate.team_good)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* temp = team_good_;
  team_good_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* CMsgDOTALiveScoreboardUpdate::mutable_team_good() {
  _has_bits_[0] |= 0x00000001u;
  if (team_good_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTALiveScoreboardUpdate_Team>(GetArenaNoVirtual());
    team_good_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTALiveScoreboardUpdate.team_good)
  return team_good_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_allocated_team_good(::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* team_good) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete team_good_;
  }
  if (team_good) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      team_good = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, team_good, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  team_good_ = team_good;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTALiveScoreboardUpdate.team_good)
}

// optional .proto.dota.CMsgDOTALiveScoreboardUpdate.Team team_bad = 6;
inline bool CMsgDOTALiveScoreboardUpdate::has_team_bad() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_team_bad() {
  if (team_bad_ != nullptr) team_bad_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team& CMsgDOTALiveScoreboardUpdate::team_bad() const {
  const ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* p = team_bad_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.team_bad)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team*>(
      &::proto::dota::_CMsgDOTALiveScoreboardUpdate_Team_default_instance_);
}
inline ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* CMsgDOTALiveScoreboardUpdate::release_team_bad() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTALiveScoreboardUpdate.team_bad)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* temp = team_bad_;
  team_bad_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* CMsgDOTALiveScoreboardUpdate::mutable_team_bad() {
  _has_bits_[0] |= 0x00000002u;
  if (team_bad_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgDOTALiveScoreboardUpdate_Team>(GetArenaNoVirtual());
    team_bad_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTALiveScoreboardUpdate.team_bad)
  return team_bad_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_allocated_team_bad(::proto::dota::CMsgDOTALiveScoreboardUpdate_Team* team_bad) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete team_bad_;
  }
  if (team_bad) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      team_bad = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, team_bad, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  team_bad_ = team_bad;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTALiveScoreboardUpdate.team_bad)
}

// optional uint32 roshan_respawn_timer = 7;
inline bool CMsgDOTALiveScoreboardUpdate::has_roshan_respawn_timer() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_roshan_respawn_timer() {
  roshan_respawn_timer_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate::roshan_respawn_timer() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.roshan_respawn_timer)
  return roshan_respawn_timer_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_roshan_respawn_timer(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  roshan_respawn_timer_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.roshan_respawn_timer)
}

// optional uint32 league_id = 8;
inline bool CMsgDOTALiveScoreboardUpdate::has_league_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgDOTALiveScoreboardUpdate::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.league_id)
  return league_id_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.league_id)
}

// optional uint64 match_id = 9;
inline bool CMsgDOTALiveScoreboardUpdate::has_match_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTALiveScoreboardUpdate::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint64 CMsgDOTALiveScoreboardUpdate::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveScoreboardUpdate.match_id)
  return match_id_;
}
inline void CMsgDOTALiveScoreboardUpdate::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000100u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveScoreboardUpdate.match_id)
}

// -------------------------------------------------------------------

// CMsgDOTARequestPlayerResources

// optional fixed64 steam_id = 1;
inline bool CMsgDOTARequestPlayerResources::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestPlayerResources::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgDOTARequestPlayerResources::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestPlayerResources.steam_id)
  return steam_id_;
}
inline void CMsgDOTARequestPlayerResources::set_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestPlayerResources.steam_id)
}

// optional uint32 player_id = 2;
inline bool CMsgDOTARequestPlayerResources::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestPlayerResources::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestPlayerResources::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestPlayerResources.player_id)
  return player_id_;
}
inline void CMsgDOTARequestPlayerResources::set_player_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestPlayerResources.player_id)
}

// -------------------------------------------------------------------

// CMsgDOTARequestPlayerResourcesResponse

// optional fixed64 steam_id = 1;
inline bool CMsgDOTARequestPlayerResourcesResponse::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgDOTARequestPlayerResourcesResponse::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestPlayerResourcesResponse.steam_id)
  return steam_id_;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestPlayerResourcesResponse.steam_id)
}

// optional uint32 rank = 2;
inline bool CMsgDOTARequestPlayerResourcesResponse::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_rank() {
  rank_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestPlayerResourcesResponse::rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestPlayerResourcesResponse.rank)
  return rank_;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_rank(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestPlayerResourcesResponse.rank)
}

// optional uint32 player_id = 3;
inline bool CMsgDOTARequestPlayerResourcesResponse::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestPlayerResourcesResponse::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestPlayerResourcesResponse.player_id)
  return player_id_;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_player_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestPlayerResourcesResponse.player_id)
}

// optional bool prevent_text_chat = 4;
inline bool CMsgDOTARequestPlayerResourcesResponse::has_prevent_text_chat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_prevent_text_chat() {
  prevent_text_chat_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgDOTARequestPlayerResourcesResponse::prevent_text_chat() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestPlayerResourcesResponse.prevent_text_chat)
  return prevent_text_chat_;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_prevent_text_chat(bool value) {
  _has_bits_[0] |= 0x00000008u;
  prevent_text_chat_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestPlayerResourcesResponse.prevent_text_chat)
}

// optional bool prevent_voice_chat = 5;
inline bool CMsgDOTARequestPlayerResourcesResponse::has_prevent_voice_chat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_prevent_voice_chat() {
  prevent_voice_chat_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgDOTARequestPlayerResourcesResponse::prevent_voice_chat() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestPlayerResourcesResponse.prevent_voice_chat)
  return prevent_voice_chat_;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_prevent_voice_chat(bool value) {
  _has_bits_[0] |= 0x00000010u;
  prevent_voice_chat_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestPlayerResourcesResponse.prevent_voice_chat)
}

// optional bool low_priority = 6;
inline bool CMsgDOTARequestPlayerResourcesResponse::has_low_priority() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTARequestPlayerResourcesResponse::clear_low_priority() {
  low_priority_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CMsgDOTARequestPlayerResourcesResponse::low_priority() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestPlayerResourcesResponse.low_priority)
  return low_priority_;
}
inline void CMsgDOTARequestPlayerResourcesResponse::set_low_priority(bool value) {
  _has_bits_[0] |= 0x00000020u;
  low_priority_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestPlayerResourcesResponse.low_priority)
}

// -------------------------------------------------------------------

// CMsgDOTARequestBatchPlayerResources

// repeated uint32 account_ids = 1 [packed = true];
inline int CMsgDOTARequestBatchPlayerResources::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgDOTARequestBatchPlayerResources::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTARequestBatchPlayerResources::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestBatchPlayerResources.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgDOTARequestBatchPlayerResources::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestBatchPlayerResources.account_ids)
}
inline void CMsgDOTARequestBatchPlayerResources::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTARequestBatchPlayerResources.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTARequestBatchPlayerResources::account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTARequestBatchPlayerResources.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTARequestBatchPlayerResources::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTARequestBatchPlayerResources.account_ids)
  return &account_ids_;
}

// repeated uint32 rank_types = 4 [packed = true];
inline int CMsgDOTARequestBatchPlayerResources::rank_types_size() const {
  return rank_types_.size();
}
inline void CMsgDOTARequestBatchPlayerResources::clear_rank_types() {
  rank_types_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTARequestBatchPlayerResources::rank_types(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestBatchPlayerResources.rank_types)
  return rank_types_.Get(index);
}
inline void CMsgDOTARequestBatchPlayerResources::set_rank_types(int index, ::google::protobuf::uint32 value) {
  rank_types_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestBatchPlayerResources.rank_types)
}
inline void CMsgDOTARequestBatchPlayerResources::add_rank_types(::google::protobuf::uint32 value) {
  rank_types_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTARequestBatchPlayerResources.rank_types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTARequestBatchPlayerResources::rank_types() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTARequestBatchPlayerResources.rank_types)
  return rank_types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTARequestBatchPlayerResources::mutable_rank_types() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTARequestBatchPlayerResources.rank_types)
  return &rank_types_;
}

// -------------------------------------------------------------------

// CMsgDOTARequestBatchPlayerResourcesResponse_Result

// optional uint32 account_id = 1;
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestBatchPlayerResourcesResponse_Result::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result.account_id)
  return account_id_;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result.account_id)
}

// optional bool prevent_text_chat = 2;
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::has_prevent_text_chat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_prevent_text_chat() {
  prevent_text_chat_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::prevent_text_chat() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result.prevent_text_chat)
  return prevent_text_chat_;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_prevent_text_chat(bool value) {
  _has_bits_[0] |= 0x00000004u;
  prevent_text_chat_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result.prevent_text_chat)
}

// optional bool prevent_voice_chat = 3;
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::has_prevent_voice_chat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_prevent_voice_chat() {
  prevent_voice_chat_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::prevent_voice_chat() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result.prevent_voice_chat)
  return prevent_voice_chat_;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_prevent_voice_chat(bool value) {
  _has_bits_[0] |= 0x00000008u;
  prevent_voice_chat_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result.prevent_voice_chat)
}

// optional uint32 rank = 4;
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_rank() {
  rank_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTARequestBatchPlayerResourcesResponse_Result::rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result.rank)
  return rank_;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_rank(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result.rank)
}

// optional bool rank_calibrated = 5;
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::has_rank_calibrated() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_rank_calibrated() {
  rank_calibrated_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::rank_calibrated() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result.rank_calibrated)
  return rank_calibrated_;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_rank_calibrated(bool value) {
  _has_bits_[0] |= 0x00000010u;
  rank_calibrated_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result.rank_calibrated)
}

// optional bool low_priority = 6;
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::has_low_priority() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::clear_low_priority() {
  low_priority_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CMsgDOTARequestBatchPlayerResourcesResponse_Result::low_priority() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result.low_priority)
  return low_priority_;
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse_Result::set_low_priority(bool value) {
  _has_bits_[0] |= 0x00000020u;
  low_priority_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result.low_priority)
}

// -------------------------------------------------------------------

// CMsgDOTARequestBatchPlayerResourcesResponse

// repeated .proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.Result results = 6;
inline int CMsgDOTARequestBatchPlayerResourcesResponse::results_size() const {
  return results_.size();
}
inline void CMsgDOTARequestBatchPlayerResourcesResponse::clear_results() {
  results_.Clear();
}
inline ::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse_Result* CMsgDOTARequestBatchPlayerResourcesResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.results)
  return results_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse_Result >*
CMsgDOTARequestBatchPlayerResourcesResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.results)
  return &results_;
}
inline const ::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse_Result& CMsgDOTARequestBatchPlayerResourcesResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.results)
  return results_.Get(index);
}
inline ::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse_Result* CMsgDOTARequestBatchPlayerResourcesResponse::add_results() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.results)
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestBatchPlayerResourcesResponse_Result >&
CMsgDOTARequestBatchPlayerResourcesResponse::results() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTARequestBatchPlayerResourcesResponse.results)
  return results_;
}

// -------------------------------------------------------------------

// CMsgDOTAPlayerFailedToConnect

// repeated fixed64 failed_loaders = 1;
inline int CMsgDOTAPlayerFailedToConnect::failed_loaders_size() const {
  return failed_loaders_.size();
}
inline void CMsgDOTAPlayerFailedToConnect::clear_failed_loaders() {
  failed_loaders_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAPlayerFailedToConnect::failed_loaders(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPlayerFailedToConnect.failed_loaders)
  return failed_loaders_.Get(index);
}
inline void CMsgDOTAPlayerFailedToConnect::set_failed_loaders(int index, ::google::protobuf::uint64 value) {
  failed_loaders_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPlayerFailedToConnect.failed_loaders)
}
inline void CMsgDOTAPlayerFailedToConnect::add_failed_loaders(::google::protobuf::uint64 value) {
  failed_loaders_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPlayerFailedToConnect.failed_loaders)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAPlayerFailedToConnect::failed_loaders() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAPlayerFailedToConnect.failed_loaders)
  return failed_loaders_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAPlayerFailedToConnect::mutable_failed_loaders() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAPlayerFailedToConnect.failed_loaders)
  return &failed_loaders_;
}

// repeated fixed64 abandoned_loaders = 2;
inline int CMsgDOTAPlayerFailedToConnect::abandoned_loaders_size() const {
  return abandoned_loaders_.size();
}
inline void CMsgDOTAPlayerFailedToConnect::clear_abandoned_loaders() {
  abandoned_loaders_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAPlayerFailedToConnect::abandoned_loaders(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPlayerFailedToConnect.abandoned_loaders)
  return abandoned_loaders_.Get(index);
}
inline void CMsgDOTAPlayerFailedToConnect::set_abandoned_loaders(int index, ::google::protobuf::uint64 value) {
  abandoned_loaders_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPlayerFailedToConnect.abandoned_loaders)
}
inline void CMsgDOTAPlayerFailedToConnect::add_abandoned_loaders(::google::protobuf::uint64 value) {
  abandoned_loaders_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPlayerFailedToConnect.abandoned_loaders)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAPlayerFailedToConnect::abandoned_loaders() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAPlayerFailedToConnect.abandoned_loaders)
  return abandoned_loaders_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAPlayerFailedToConnect::mutable_abandoned_loaders() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAPlayerFailedToConnect.abandoned_loaders)
  return &abandoned_loaders_;
}

// -------------------------------------------------------------------

// CMsgGCToRelayConnect

// optional uint32 source_tv_public_addr = 1;
inline bool CMsgGCToRelayConnect::has_source_tv_public_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToRelayConnect::clear_source_tv_public_addr() {
  source_tv_public_addr_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToRelayConnect::source_tv_public_addr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToRelayConnect.source_tv_public_addr)
  return source_tv_public_addr_;
}
inline void CMsgGCToRelayConnect::set_source_tv_public_addr(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  source_tv_public_addr_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToRelayConnect.source_tv_public_addr)
}

// optional uint32 source_tv_private_addr = 2;
inline bool CMsgGCToRelayConnect::has_source_tv_private_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToRelayConnect::clear_source_tv_private_addr() {
  source_tv_private_addr_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToRelayConnect::source_tv_private_addr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToRelayConnect.source_tv_private_addr)
  return source_tv_private_addr_;
}
inline void CMsgGCToRelayConnect::set_source_tv_private_addr(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  source_tv_private_addr_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToRelayConnect.source_tv_private_addr)
}

// optional uint32 source_tv_port = 3;
inline bool CMsgGCToRelayConnect::has_source_tv_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToRelayConnect::clear_source_tv_port() {
  source_tv_port_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgGCToRelayConnect::source_tv_port() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToRelayConnect.source_tv_port)
  return source_tv_port_;
}
inline void CMsgGCToRelayConnect::set_source_tv_port(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  source_tv_port_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToRelayConnect.source_tv_port)
}

// optional uint64 game_server_steam_id = 4;
inline bool CMsgGCToRelayConnect::has_game_server_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToRelayConnect::clear_game_server_steam_id() {
  game_server_steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgGCToRelayConnect::game_server_steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToRelayConnect.game_server_steam_id)
  return game_server_steam_id_;
}
inline void CMsgGCToRelayConnect::set_game_server_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  game_server_steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToRelayConnect.game_server_steam_id)
}

// optional uint32 parent_count = 5;
inline bool CMsgGCToRelayConnect::has_parent_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToRelayConnect::clear_parent_count() {
  parent_count_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgGCToRelayConnect::parent_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToRelayConnect.parent_count)
  return parent_count_;
}
inline void CMsgGCToRelayConnect::set_parent_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  parent_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToRelayConnect.parent_count)
}

// optional fixed64 tv_unique_secret_code = 6;
inline bool CMsgGCToRelayConnect::has_tv_unique_secret_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToRelayConnect::clear_tv_unique_secret_code() {
  tv_unique_secret_code_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint64 CMsgGCToRelayConnect::tv_unique_secret_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToRelayConnect.tv_unique_secret_code)
  return tv_unique_secret_code_;
}
inline void CMsgGCToRelayConnect::set_tv_unique_secret_code(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  tv_unique_secret_code_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToRelayConnect.tv_unique_secret_code)
}

// optional fixed64 source_tv_steamid = 7;
inline bool CMsgGCToRelayConnect::has_source_tv_steamid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToRelayConnect::clear_source_tv_steamid() {
  source_tv_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint64 CMsgGCToRelayConnect::source_tv_steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToRelayConnect.source_tv_steamid)
  return source_tv_steamid_;
}
inline void CMsgGCToRelayConnect::set_source_tv_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  source_tv_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToRelayConnect.source_tv_steamid)
}

// -------------------------------------------------------------------

// CMsgGCGCToLANServerRelayConnect

// optional fixed64 relay_steamid = 1;
inline bool CMsgGCGCToLANServerRelayConnect::has_relay_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGCToLANServerRelayConnect::clear_relay_steamid() {
  relay_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCGCToLANServerRelayConnect::relay_steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGCToLANServerRelayConnect.relay_steamid)
  return relay_steamid_;
}
inline void CMsgGCGCToLANServerRelayConnect::set_relay_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  relay_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGCToLANServerRelayConnect.relay_steamid)
}

// -------------------------------------------------------------------

// CMsgGCToRelayConnectResponse

// -------------------------------------------------------------------

// CMsgGCBanStatusRequest

// optional uint32 account_id = 1;
inline bool CMsgGCBanStatusRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCBanStatusRequest::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCBanStatusRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCBanStatusRequest.account_id)
  return account_id_;
}
inline void CMsgGCBanStatusRequest::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCBanStatusRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCBanStatusResponse

// optional uint32 result = 1;
inline bool CMsgGCBanStatusResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCBanStatusResponse::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCBanStatusResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCBanStatusResponse.result)
  return result_;
}
inline void CMsgGCBanStatusResponse::set_result(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCBanStatusResponse.result)
}

// optional bool low_priority = 2;
inline bool CMsgGCBanStatusResponse::has_low_priority() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCBanStatusResponse::clear_low_priority() {
  low_priority_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgGCBanStatusResponse::low_priority() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCBanStatusResponse.low_priority)
  return low_priority_;
}
inline void CMsgGCBanStatusResponse::set_low_priority(bool value) {
  _has_bits_[0] |= 0x00000002u;
  low_priority_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCBanStatusResponse.low_priority)
}

// optional bool text_chat_banned = 3;
inline bool CMsgGCBanStatusResponse::has_text_chat_banned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCBanStatusResponse::clear_text_chat_banned() {
  text_chat_banned_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgGCBanStatusResponse::text_chat_banned() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCBanStatusResponse.text_chat_banned)
  return text_chat_banned_;
}
inline void CMsgGCBanStatusResponse::set_text_chat_banned(bool value) {
  _has_bits_[0] |= 0x00000004u;
  text_chat_banned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCBanStatusResponse.text_chat_banned)
}

// optional bool voice_chat_banned = 4;
inline bool CMsgGCBanStatusResponse::has_voice_chat_banned() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCBanStatusResponse::clear_voice_chat_banned() {
  voice_chat_banned_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgGCBanStatusResponse::voice_chat_banned() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCBanStatusResponse.voice_chat_banned)
  return voice_chat_banned_;
}
inline void CMsgGCBanStatusResponse::set_voice_chat_banned(bool value) {
  _has_bits_[0] |= 0x00000008u;
  voice_chat_banned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCBanStatusResponse.voice_chat_banned)
}

// -------------------------------------------------------------------

// CMsgTournamentItemEvent

// optional fixed32 killer_account_id = 1;
inline bool CMsgTournamentItemEvent::has_killer_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTournamentItemEvent::clear_killer_account_id() {
  killer_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgTournamentItemEvent::killer_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEvent.killer_account_id)
  return killer_account_id_;
}
inline void CMsgTournamentItemEvent::set_killer_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  killer_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTournamentItemEvent.killer_account_id)
}

// optional fixed32 victim_account_id = 2;
inline bool CMsgTournamentItemEvent::has_victim_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTournamentItemEvent::clear_victim_account_id() {
  victim_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgTournamentItemEvent::victim_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEvent.victim_account_id)
  return victim_account_id_;
}
inline void CMsgTournamentItemEvent::set_victim_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  victim_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTournamentItemEvent.victim_account_id)
}

// optional .proto.dota.DOTA_TournamentEvents event_type = 3 [default = TE_FIRST_BLOOD];
inline bool CMsgTournamentItemEvent::has_event_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTournamentItemEvent::clear_event_type() {
  event_type_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::proto::dota::DOTA_TournamentEvents CMsgTournamentItemEvent::event_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEvent.event_type)
  return static_cast< ::proto::dota::DOTA_TournamentEvents >(event_type_);
}
inline void CMsgTournamentItemEvent::set_event_type(::proto::dota::DOTA_TournamentEvents value) {
  assert(::proto::dota::DOTA_TournamentEvents_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTournamentItemEvent.event_type)
}

// optional int32 tv_delay = 4;
inline bool CMsgTournamentItemEvent::has_tv_delay() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTournamentItemEvent::clear_tv_delay() {
  tv_delay_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 CMsgTournamentItemEvent::tv_delay() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEvent.tv_delay)
  return tv_delay_;
}
inline void CMsgTournamentItemEvent::set_tv_delay(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  tv_delay_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTournamentItemEvent.tv_delay)
}

// optional int32 dota_time = 5;
inline bool CMsgTournamentItemEvent::has_dota_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgTournamentItemEvent::clear_dota_time() {
  dota_time_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 CMsgTournamentItemEvent::dota_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEvent.dota_time)
  return dota_time_;
}
inline void CMsgTournamentItemEvent::set_dota_time(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  dota_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTournamentItemEvent.dota_time)
}

// optional float replay_time = 6;
inline bool CMsgTournamentItemEvent::has_replay_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgTournamentItemEvent::clear_replay_time() {
  replay_time_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float CMsgTournamentItemEvent::replay_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEvent.replay_time)
  return replay_time_;
}
inline void CMsgTournamentItemEvent::set_replay_time(float value) {
  _has_bits_[0] |= 0x00000040u;
  replay_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTournamentItemEvent.replay_time)
}

// optional string loot_list = 7;
inline bool CMsgTournamentItemEvent::has_loot_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTournamentItemEvent::clear_loot_list() {
  loot_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgTournamentItemEvent::loot_list() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEvent.loot_list)
  return loot_list_.GetNoArena();
}
inline void CMsgTournamentItemEvent::set_loot_list(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  loot_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTournamentItemEvent.loot_list)
}
#if LANG_CXX11
inline void CMsgTournamentItemEvent::set_loot_list(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  loot_list_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgTournamentItemEvent.loot_list)
}
#endif
inline void CMsgTournamentItemEvent::set_loot_list(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  loot_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgTournamentItemEvent.loot_list)
}
inline void CMsgTournamentItemEvent::set_loot_list(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  loot_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgTournamentItemEvent.loot_list)
}
inline ::std::string* CMsgTournamentItemEvent::mutable_loot_list() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgTournamentItemEvent.loot_list)
  return loot_list_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTournamentItemEvent::release_loot_list() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgTournamentItemEvent.loot_list)
  if (!has_loot_list()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return loot_list_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTournamentItemEvent::set_allocated_loot_list(::std::string* loot_list) {
  if (loot_list != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  loot_list_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loot_list);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgTournamentItemEvent.loot_list)
}

// optional uint32 event_team = 8;
inline bool CMsgTournamentItemEvent::has_event_team() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgTournamentItemEvent::clear_event_team() {
  event_team_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgTournamentItemEvent::event_team() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEvent.event_team)
  return event_team_;
}
inline void CMsgTournamentItemEvent::set_event_team(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  event_team_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTournamentItemEvent.event_team)
}

// optional uint32 multi_kill_count = 9;
inline bool CMsgTournamentItemEvent::has_multi_kill_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgTournamentItemEvent::clear_multi_kill_count() {
  multi_kill_count_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgTournamentItemEvent::multi_kill_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEvent.multi_kill_count)
  return multi_kill_count_;
}
inline void CMsgTournamentItemEvent::set_multi_kill_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  multi_kill_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTournamentItemEvent.multi_kill_count)
}

// optional uint32 winner_score = 10;
inline bool CMsgTournamentItemEvent::has_winner_score() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgTournamentItemEvent::clear_winner_score() {
  winner_score_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgTournamentItemEvent::winner_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEvent.winner_score)
  return winner_score_;
}
inline void CMsgTournamentItemEvent::set_winner_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  winner_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTournamentItemEvent.winner_score)
}

// optional uint32 loser_score = 11;
inline bool CMsgTournamentItemEvent::has_loser_score() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgTournamentItemEvent::clear_loser_score() {
  loser_score_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgTournamentItemEvent::loser_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEvent.loser_score)
  return loser_score_;
}
inline void CMsgTournamentItemEvent::set_loser_score(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  loser_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTournamentItemEvent.loser_score)
}

// repeated .proto.dota.CProtoItemHeroStatue hero_statues = 12;
inline int CMsgTournamentItemEvent::hero_statues_size() const {
  return hero_statues_.size();
}
inline ::proto::dota::CProtoItemHeroStatue* CMsgTournamentItemEvent::mutable_hero_statues(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgTournamentItemEvent.hero_statues)
  return hero_statues_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CProtoItemHeroStatue >*
CMsgTournamentItemEvent::mutable_hero_statues() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgTournamentItemEvent.hero_statues)
  return &hero_statues_;
}
inline const ::proto::dota::CProtoItemHeroStatue& CMsgTournamentItemEvent::hero_statues(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEvent.hero_statues)
  return hero_statues_.Get(index);
}
inline ::proto::dota::CProtoItemHeroStatue* CMsgTournamentItemEvent::add_hero_statues() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgTournamentItemEvent.hero_statues)
  return hero_statues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CProtoItemHeroStatue >&
CMsgTournamentItemEvent::hero_statues() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgTournamentItemEvent.hero_statues)
  return hero_statues_;
}

// -------------------------------------------------------------------

// CMsgTournamentItemEventResponse

// optional .proto.dota.DOTA_TournamentEvents event_type = 1 [default = TE_FIRST_BLOOD];
inline bool CMsgTournamentItemEventResponse::has_event_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTournamentItemEventResponse::clear_event_type() {
  event_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::DOTA_TournamentEvents CMsgTournamentItemEventResponse::event_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEventResponse.event_type)
  return static_cast< ::proto::dota::DOTA_TournamentEvents >(event_type_);
}
inline void CMsgTournamentItemEventResponse::set_event_type(::proto::dota::DOTA_TournamentEvents value) {
  assert(::proto::dota::DOTA_TournamentEvents_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTournamentItemEventResponse.event_type)
}

// optional uint32 viewers_granted = 6;
inline bool CMsgTournamentItemEventResponse::has_viewers_granted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTournamentItemEventResponse::clear_viewers_granted() {
  viewers_granted_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgTournamentItemEventResponse::viewers_granted() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTournamentItemEventResponse.viewers_granted)
  return viewers_granted_;
}
inline void CMsgTournamentItemEventResponse::set_viewers_granted(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  viewers_granted_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTournamentItemEventResponse.viewers_granted)
}

// -------------------------------------------------------------------

// CMsgTeamFanfare

// optional uint64 match_id = 1;
inline bool CMsgTeamFanfare::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTeamFanfare::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgTeamFanfare::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgTeamFanfare.match_id)
  return match_id_;
}
inline void CMsgTeamFanfare::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgTeamFanfare.match_id)
}

// -------------------------------------------------------------------

// CMsgResponseTeamFanfare

// optional uint32 fanfare_goodguys = 1;
inline bool CMsgResponseTeamFanfare::has_fanfare_goodguys() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgResponseTeamFanfare::clear_fanfare_goodguys() {
  fanfare_goodguys_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgResponseTeamFanfare::fanfare_goodguys() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgResponseTeamFanfare.fanfare_goodguys)
  return fanfare_goodguys_;
}
inline void CMsgResponseTeamFanfare::set_fanfare_goodguys(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  fanfare_goodguys_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgResponseTeamFanfare.fanfare_goodguys)
}

// optional uint32 fanfare_badguys = 2;
inline bool CMsgResponseTeamFanfare::has_fanfare_badguys() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgResponseTeamFanfare::clear_fanfare_badguys() {
  fanfare_badguys_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgResponseTeamFanfare::fanfare_badguys() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgResponseTeamFanfare.fanfare_badguys)
  return fanfare_badguys_;
}
inline void CMsgResponseTeamFanfare::set_fanfare_badguys(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  fanfare_badguys_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgResponseTeamFanfare.fanfare_badguys)
}

// -------------------------------------------------------------------

// CMsgGameServerUploadSaveGame

// optional uint32 game_time = 1;
inline bool CMsgGameServerUploadSaveGame::has_game_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameServerUploadSaveGame::clear_game_time() {
  game_time_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGameServerUploadSaveGame::game_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerUploadSaveGame.game_time)
  return game_time_;
}
inline void CMsgGameServerUploadSaveGame::set_game_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerUploadSaveGame.game_time)
}

// optional bytes save_game_data = 2;
inline bool CMsgGameServerUploadSaveGame::has_save_game_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerUploadSaveGame::clear_save_game_data() {
  save_game_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGameServerUploadSaveGame::save_game_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerUploadSaveGame.save_game_data)
  return save_game_data_.GetNoArena();
}
inline void CMsgGameServerUploadSaveGame::set_save_game_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  save_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerUploadSaveGame.save_game_data)
}
#if LANG_CXX11
inline void CMsgGameServerUploadSaveGame::set_save_game_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  save_game_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGameServerUploadSaveGame.save_game_data)
}
#endif
inline void CMsgGameServerUploadSaveGame::set_save_game_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  save_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGameServerUploadSaveGame.save_game_data)
}
inline void CMsgGameServerUploadSaveGame::set_save_game_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  save_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGameServerUploadSaveGame.save_game_data)
}
inline ::std::string* CMsgGameServerUploadSaveGame::mutable_save_game_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameServerUploadSaveGame.save_game_data)
  return save_game_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameServerUploadSaveGame::release_save_game_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameServerUploadSaveGame.save_game_data)
  if (!has_save_game_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return save_game_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameServerUploadSaveGame::set_allocated_save_game_data(::std::string* save_game_data) {
  if (save_game_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  save_game_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), save_game_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameServerUploadSaveGame.save_game_data)
}

// optional uint64 lobby_id = 3;
inline bool CMsgGameServerUploadSaveGame::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameServerUploadSaveGame::clear_lobby_id() {
  lobby_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgGameServerUploadSaveGame::lobby_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerUploadSaveGame.lobby_id)
  return lobby_id_;
}
inline void CMsgGameServerUploadSaveGame::set_lobby_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerUploadSaveGame.lobby_id)
}

// repeated uint64 player_steam_ids = 4;
inline int CMsgGameServerUploadSaveGame::player_steam_ids_size() const {
  return player_steam_ids_.size();
}
inline void CMsgGameServerUploadSaveGame::clear_player_steam_ids() {
  player_steam_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgGameServerUploadSaveGame::player_steam_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerUploadSaveGame.player_steam_ids)
  return player_steam_ids_.Get(index);
}
inline void CMsgGameServerUploadSaveGame::set_player_steam_ids(int index, ::google::protobuf::uint64 value) {
  player_steam_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerUploadSaveGame.player_steam_ids)
}
inline void CMsgGameServerUploadSaveGame::add_player_steam_ids(::google::protobuf::uint64 value) {
  player_steam_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGameServerUploadSaveGame.player_steam_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGameServerUploadSaveGame::player_steam_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGameServerUploadSaveGame.player_steam_ids)
  return player_steam_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGameServerUploadSaveGame::mutable_player_steam_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGameServerUploadSaveGame.player_steam_ids)
  return &player_steam_ids_;
}

// -------------------------------------------------------------------

// CMsgGameServerSaveGameResult

// optional .proto.dota.CMsgGameServerSaveGameResult.Result result = 1 [default = SaveSuccessful];
inline bool CMsgGameServerSaveGameResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerSaveGameResult::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::CMsgGameServerSaveGameResult_Result CMsgGameServerSaveGameResult::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerSaveGameResult.result)
  return static_cast< ::proto::dota::CMsgGameServerSaveGameResult_Result >(result_);
}
inline void CMsgGameServerSaveGameResult::set_result(::proto::dota::CMsgGameServerSaveGameResult_Result value) {
  assert(::proto::dota::CMsgGameServerSaveGameResult_Result_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerSaveGameResult.result)
}

// -------------------------------------------------------------------

// CMsgGameServerGetLoadGame

// optional uint32 save_id = 1;
inline bool CMsgGameServerGetLoadGame::has_save_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerGetLoadGame::clear_save_id() {
  save_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGameServerGetLoadGame::save_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerGetLoadGame.save_id)
  return save_id_;
}
inline void CMsgGameServerGetLoadGame::set_save_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  save_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerGetLoadGame.save_id)
}

// -------------------------------------------------------------------

// CMsgGameServerGetLoadGameResult

// optional bytes save_game_data = 1;
inline bool CMsgGameServerGetLoadGameResult::has_save_game_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerGetLoadGameResult::clear_save_game_data() {
  save_game_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGameServerGetLoadGameResult::save_game_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGameServerGetLoadGameResult.save_game_data)
  return save_game_data_.GetNoArena();
}
inline void CMsgGameServerGetLoadGameResult::set_save_game_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  save_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGameServerGetLoadGameResult.save_game_data)
}
#if LANG_CXX11
inline void CMsgGameServerGetLoadGameResult::set_save_game_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  save_game_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGameServerGetLoadGameResult.save_game_data)
}
#endif
inline void CMsgGameServerGetLoadGameResult::set_save_game_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  save_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGameServerGetLoadGameResult.save_game_data)
}
inline void CMsgGameServerGetLoadGameResult::set_save_game_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  save_game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGameServerGetLoadGameResult.save_game_data)
}
inline ::std::string* CMsgGameServerGetLoadGameResult::mutable_save_game_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGameServerGetLoadGameResult.save_game_data)
  return save_game_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameServerGetLoadGameResult::release_save_game_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGameServerGetLoadGameResult.save_game_data)
  if (!has_save_game_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return save_game_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameServerGetLoadGameResult::set_allocated_save_game_data(::std::string* save_game_data) {
  if (save_game_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  save_game_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), save_game_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGameServerGetLoadGameResult.save_game_data)
}

// -------------------------------------------------------------------

// CMsgDOTAGenerateDiretidePrizeList

// optional uint32 prize_list = 1;
inline bool CMsgDOTAGenerateDiretidePrizeList::has_prize_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGenerateDiretidePrizeList::clear_prize_list() {
  prize_list_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAGenerateDiretidePrizeList::prize_list() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGenerateDiretidePrizeList.prize_list)
  return prize_list_;
}
inline void CMsgDOTAGenerateDiretidePrizeList::set_prize_list(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  prize_list_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGenerateDiretidePrizeList.prize_list)
}

// optional uint32 highest_roshan_level = 2;
inline bool CMsgDOTAGenerateDiretidePrizeList::has_highest_roshan_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGenerateDiretidePrizeList::clear_highest_roshan_level() {
  highest_roshan_level_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAGenerateDiretidePrizeList::highest_roshan_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGenerateDiretidePrizeList.highest_roshan_level)
  return highest_roshan_level_;
}
inline void CMsgDOTAGenerateDiretidePrizeList::set_highest_roshan_level(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  highest_roshan_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGenerateDiretidePrizeList.highest_roshan_level)
}

// -------------------------------------------------------------------

// CMsgDOTAGenerateDiretidePrizeListResponse

// repeated uint32 item_defs = 1;
inline int CMsgDOTAGenerateDiretidePrizeListResponse::item_defs_size() const {
  return item_defs_.size();
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::clear_item_defs() {
  item_defs_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAGenerateDiretidePrizeListResponse::item_defs(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse.item_defs)
  return item_defs_.Get(index);
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::set_item_defs(int index, ::google::protobuf::uint32 value) {
  item_defs_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse.item_defs)
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::add_item_defs(::google::protobuf::uint32 value) {
  item_defs_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse.item_defs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAGenerateDiretidePrizeListResponse::item_defs() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse.item_defs)
  return item_defs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAGenerateDiretidePrizeListResponse::mutable_item_defs() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse.item_defs)
  return &item_defs_;
}

// repeated fixed64 steam_ids = 2;
inline int CMsgDOTAGenerateDiretidePrizeListResponse::steam_ids_size() const {
  return steam_ids_.size();
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::clear_steam_ids() {
  steam_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAGenerateDiretidePrizeListResponse::steam_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse.steam_ids)
  return steam_ids_.Get(index);
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::set_steam_ids(int index, ::google::protobuf::uint64 value) {
  steam_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse.steam_ids)
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::add_steam_ids(::google::protobuf::uint64 value) {
  steam_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse.steam_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAGenerateDiretidePrizeListResponse::steam_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse.steam_ids)
  return steam_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAGenerateDiretidePrizeListResponse::mutable_steam_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse.steam_ids)
  return &steam_ids_;
}

// optional uint32 prize_list = 3;
inline bool CMsgDOTAGenerateDiretidePrizeListResponse::has_prize_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::clear_prize_list() {
  prize_list_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAGenerateDiretidePrizeListResponse::prize_list() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse.prize_list)
  return prize_list_;
}
inline void CMsgDOTAGenerateDiretidePrizeListResponse::set_prize_list(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  prize_list_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGenerateDiretidePrizeListResponse.prize_list)
}

// -------------------------------------------------------------------

// CMsgDOTARewardDiretidePrizes

// optional uint32 team = 1;
inline bool CMsgDOTARewardDiretidePrizes::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARewardDiretidePrizes::clear_team() {
  team_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTARewardDiretidePrizes::team() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARewardDiretidePrizes.team)
  return team_;
}
inline void CMsgDOTARewardDiretidePrizes::set_team(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  team_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARewardDiretidePrizes.team)
}

// optional uint32 prize_list = 2;
inline bool CMsgDOTARewardDiretidePrizes::has_prize_list() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARewardDiretidePrizes::clear_prize_list() {
  prize_list_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTARewardDiretidePrizes::prize_list() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARewardDiretidePrizes.prize_list)
  return prize_list_;
}
inline void CMsgDOTARewardDiretidePrizes::set_prize_list(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  prize_list_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARewardDiretidePrizes.prize_list)
}

// -------------------------------------------------------------------

// CMsgDOTADiretidePrizesRewardedResponse

// optional uint32 prize_list = 1;
inline bool CMsgDOTADiretidePrizesRewardedResponse::has_prize_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTADiretidePrizesRewardedResponse::clear_prize_list() {
  prize_list_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTADiretidePrizesRewardedResponse::prize_list() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTADiretidePrizesRewardedResponse.prize_list)
  return prize_list_;
}
inline void CMsgDOTADiretidePrizesRewardedResponse::set_prize_list(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  prize_list_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTADiretidePrizesRewardedResponse.prize_list)
}

// -------------------------------------------------------------------

// CMsgDOTAAwardEventPoints_AwardPoints

// optional uint32 account_id = 1;
inline bool CMsgDOTAAwardEventPoints_AwardPoints::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAAwardEventPoints_AwardPoints::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAAwardEventPoints.AwardPoints.account_id)
  return account_id_;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAAwardEventPoints.AwardPoints.account_id)
}

// optional int32 points = 2;
inline bool CMsgDOTAAwardEventPoints_AwardPoints::has_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::clear_points() {
  points_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CMsgDOTAAwardEventPoints_AwardPoints::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAAwardEventPoints.AwardPoints.points)
  return points_;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::set_points(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAAwardEventPoints.AwardPoints.points)
}

// optional int32 premium_points = 3;
inline bool CMsgDOTAAwardEventPoints_AwardPoints::has_premium_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::clear_premium_points() {
  premium_points_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CMsgDOTAAwardEventPoints_AwardPoints::premium_points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAAwardEventPoints.AwardPoints.premium_points)
  return premium_points_;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::set_premium_points(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  premium_points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAAwardEventPoints.AwardPoints.premium_points)
}

// optional uint32 trade_ban_time = 5;
inline bool CMsgDOTAAwardEventPoints_AwardPoints::has_trade_ban_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::clear_trade_ban_time() {
  trade_ban_time_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAAwardEventPoints_AwardPoints::trade_ban_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAAwardEventPoints.AwardPoints.trade_ban_time)
  return trade_ban_time_;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::set_trade_ban_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  trade_ban_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAAwardEventPoints.AwardPoints.trade_ban_time)
}

// optional bool eligible_for_periodic_adjustment = 6 [default = false];
inline bool CMsgDOTAAwardEventPoints_AwardPoints::has_eligible_for_periodic_adjustment() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::clear_eligible_for_periodic_adjustment() {
  eligible_for_periodic_adjustment_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgDOTAAwardEventPoints_AwardPoints::eligible_for_periodic_adjustment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAAwardEventPoints.AwardPoints.eligible_for_periodic_adjustment)
  return eligible_for_periodic_adjustment_;
}
inline void CMsgDOTAAwardEventPoints_AwardPoints::set_eligible_for_periodic_adjustment(bool value) {
  _has_bits_[0] |= 0x00000010u;
  eligible_for_periodic_adjustment_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAAwardEventPoints.AwardPoints.eligible_for_periodic_adjustment)
}

// -------------------------------------------------------------------

// CMsgDOTAAwardEventPoints

// repeated .proto.dota.CMsgDOTAAwardEventPoints.AwardPoints award_points = 1;
inline int CMsgDOTAAwardEventPoints::award_points_size() const {
  return award_points_.size();
}
inline void CMsgDOTAAwardEventPoints::clear_award_points() {
  award_points_.Clear();
}
inline ::proto::dota::CMsgDOTAAwardEventPoints_AwardPoints* CMsgDOTAAwardEventPoints::mutable_award_points(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAAwardEventPoints.award_points)
  return award_points_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAAwardEventPoints_AwardPoints >*
CMsgDOTAAwardEventPoints::mutable_award_points() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAAwardEventPoints.award_points)
  return &award_points_;
}
inline const ::proto::dota::CMsgDOTAAwardEventPoints_AwardPoints& CMsgDOTAAwardEventPoints::award_points(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAAwardEventPoints.award_points)
  return award_points_.Get(index);
}
inline ::proto::dota::CMsgDOTAAwardEventPoints_AwardPoints* CMsgDOTAAwardEventPoints::add_award_points() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAAwardEventPoints.award_points)
  return award_points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAAwardEventPoints_AwardPoints >&
CMsgDOTAAwardEventPoints::award_points() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAAwardEventPoints.award_points)
  return award_points_;
}

// optional uint64 match_id = 2;
inline bool CMsgDOTAAwardEventPoints::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAAwardEventPoints::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgDOTAAwardEventPoints::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAAwardEventPoints.match_id)
  return match_id_;
}
inline void CMsgDOTAAwardEventPoints::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAAwardEventPoints.match_id)
}

// optional .proto.dota.EEvent event_id = 4 [default = EVENT_ID_NONE];
inline bool CMsgDOTAAwardEventPoints::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAAwardEventPoints::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::EEvent CMsgDOTAAwardEventPoints::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAAwardEventPoints.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgDOTAAwardEventPoints::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAAwardEventPoints.event_id)
}

// optional uint32 timestamp = 5;
inline bool CMsgDOTAAwardEventPoints::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAAwardEventPoints::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgDOTAAwardEventPoints::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAAwardEventPoints.timestamp)
  return timestamp_;
}
inline void CMsgDOTAAwardEventPoints::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAAwardEventPoints.timestamp)
}

// optional uint32 audit_action = 6;
inline bool CMsgDOTAAwardEventPoints::has_audit_action() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAAwardEventPoints::clear_audit_action() {
  audit_action_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgDOTAAwardEventPoints::audit_action() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAAwardEventPoints.audit_action)
  return audit_action_;
}
inline void CMsgDOTAAwardEventPoints::set_audit_action(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  audit_action_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAAwardEventPoints.audit_action)
}

// -------------------------------------------------------------------

// CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops

// optional string loot_list = 1;
inline bool CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::has_loot_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::clear_loot_list() {
  loot_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::loot_list() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
  return loot_list_.GetNoArena();
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_loot_list(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  loot_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
}
#if LANG_CXX11
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_loot_list(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  loot_list_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
}
#endif
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_loot_list(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  loot_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_loot_list(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  loot_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
}
inline ::std::string* CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::mutable_loot_list() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
  return loot_list_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::release_loot_list() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
  if (!has_loot_list()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return loot_list_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_allocated_loot_list(::std::string* loot_list) {
  if (loot_list != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  loot_list_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loot_list);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.loot_list)
}

// repeated uint32 player_account_ids = 2;
inline int CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::player_account_ids_size() const {
  return player_account_ids_.size();
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::clear_player_account_ids() {
  player_account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::player_account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.player_account_ids)
  return player_account_ids_.Get(index);
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_player_account_ids(int index, ::google::protobuf::uint32 value) {
  player_account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.player_account_ids)
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::add_player_account_ids(::google::protobuf::uint32 value) {
  player_account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.player_account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::player_account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.player_account_ids)
  return player_account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::mutable_player_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.player_account_ids)
  return &player_account_ids_;
}

// optional bool no_trade = 3;
inline bool CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::has_no_trade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::clear_no_trade() {
  no_trade_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::no_trade() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.no_trade)
  return no_trade_;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_no_trade(bool value) {
  _has_bits_[0] |= 0x00000002u;
  no_trade_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.no_trade)
}

// optional bool randomize_reward = 4;
inline bool CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::has_randomize_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::clear_randomize_reward() {
  randomize_reward_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::randomize_reward() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.randomize_reward)
  return randomize_reward_;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops::set_randomize_reward(bool value) {
  _has_bits_[0] |= 0x00000004u;
  randomize_reward_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops.randomize_reward)
}

// -------------------------------------------------------------------

// CMsgServerToGCSignoutAwardAdditionalDrops

// repeated .proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.AdditionalDrops drops = 1;
inline int CMsgServerToGCSignoutAwardAdditionalDrops::drops_size() const {
  return drops_.size();
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops::clear_drops() {
  drops_.Clear();
}
inline ::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* CMsgServerToGCSignoutAwardAdditionalDrops::mutable_drops(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.drops)
  return drops_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops >*
CMsgServerToGCSignoutAwardAdditionalDrops::mutable_drops() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.drops)
  return &drops_;
}
inline const ::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops& CMsgServerToGCSignoutAwardAdditionalDrops::drops(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.drops)
  return drops_.Get(index);
}
inline ::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops* CMsgServerToGCSignoutAwardAdditionalDrops::add_drops() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.drops)
  return drops_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCSignoutAwardAdditionalDrops_AdditionalDrops >&
CMsgServerToGCSignoutAwardAdditionalDrops::drops() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.drops)
  return drops_;
}

// optional uint64 match_id = 2;
inline bool CMsgServerToGCSignoutAwardAdditionalDrops::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgServerToGCSignoutAwardAdditionalDrops::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.match_id)
  return match_id_;
}
inline void CMsgServerToGCSignoutAwardAdditionalDrops::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCSignoutAwardAdditionalDrops.match_id)
}

// -------------------------------------------------------------------

// CMsgDOTAFrostivusTimeElapsed_User

// optional uint32 account_id = 1;
inline bool CMsgDOTAFrostivusTimeElapsed_User::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFrostivusTimeElapsed_User::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgDOTAFrostivusTimeElapsed_User::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFrostivusTimeElapsed.User.account_id)
  return account_id_;
}
inline void CMsgDOTAFrostivusTimeElapsed_User::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFrostivusTimeElapsed.User.account_id)
}

// optional uint32 time_elapsed_s = 2;
inline bool CMsgDOTAFrostivusTimeElapsed_User::has_time_elapsed_s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFrostivusTimeElapsed_User::clear_time_elapsed_s() {
  time_elapsed_s_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAFrostivusTimeElapsed_User::time_elapsed_s() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFrostivusTimeElapsed.User.time_elapsed_s)
  return time_elapsed_s_;
}
inline void CMsgDOTAFrostivusTimeElapsed_User::set_time_elapsed_s(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  time_elapsed_s_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFrostivusTimeElapsed.User.time_elapsed_s)
}

// -------------------------------------------------------------------

// CMsgDOTAFrostivusTimeElapsed

// optional uint32 seconds = 1;
inline bool CMsgDOTAFrostivusTimeElapsed::has_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFrostivusTimeElapsed::clear_seconds() {
  seconds_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgDOTAFrostivusTimeElapsed::seconds() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFrostivusTimeElapsed.seconds)
  return seconds_;
}
inline void CMsgDOTAFrostivusTimeElapsed::set_seconds(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  seconds_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFrostivusTimeElapsed.seconds)
}

// repeated .proto.dota.CMsgDOTAFrostivusTimeElapsed.User users = 2;
inline int CMsgDOTAFrostivusTimeElapsed::users_size() const {
  return users_.size();
}
inline void CMsgDOTAFrostivusTimeElapsed::clear_users() {
  users_.Clear();
}
inline ::proto::dota::CMsgDOTAFrostivusTimeElapsed_User* CMsgDOTAFrostivusTimeElapsed::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAFrostivusTimeElapsed.users)
  return users_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFrostivusTimeElapsed_User >*
CMsgDOTAFrostivusTimeElapsed::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAFrostivusTimeElapsed.users)
  return &users_;
}
inline const ::proto::dota::CMsgDOTAFrostivusTimeElapsed_User& CMsgDOTAFrostivusTimeElapsed::users(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFrostivusTimeElapsed.users)
  return users_.Get(index);
}
inline ::proto::dota::CMsgDOTAFrostivusTimeElapsed_User* CMsgDOTAFrostivusTimeElapsed::add_users() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFrostivusTimeElapsed.users)
  return users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFrostivusTimeElapsed_User >&
CMsgDOTAFrostivusTimeElapsed::users() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAFrostivusTimeElapsed.users)
  return users_;
}

// optional uint64 match_id = 3;
inline bool CMsgDOTAFrostivusTimeElapsed::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFrostivusTimeElapsed::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgDOTAFrostivusTimeElapsed::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFrostivusTimeElapsed.match_id)
  return match_id_;
}
inline void CMsgDOTAFrostivusTimeElapsed::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFrostivusTimeElapsed.match_id)
}

// -------------------------------------------------------------------

// CMsgGCToServerPingRequest

// optional fixed64 request_id = 1;
inline bool CMsgGCToServerPingRequest::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerPingRequest::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCToServerPingRequest::request_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPingRequest.request_id)
  return request_id_;
}
inline void CMsgGCToServerPingRequest::set_request_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerPingRequest.request_id)
}

// optional uint64 request_time = 2;
inline bool CMsgGCToServerPingRequest::has_request_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToServerPingRequest::clear_request_time() {
  request_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgGCToServerPingRequest::request_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPingRequest.request_time)
  return request_time_;
}
inline void CMsgGCToServerPingRequest::set_request_time(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  request_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerPingRequest.request_time)
}

// -------------------------------------------------------------------

// CMsgGCToServerPingResponse

// optional fixed64 request_id = 1;
inline bool CMsgGCToServerPingResponse::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerPingResponse::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCToServerPingResponse::request_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPingResponse.request_id)
  return request_id_;
}
inline void CMsgGCToServerPingResponse::set_request_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerPingResponse.request_id)
}

// optional uint64 request_time = 2;
inline bool CMsgGCToServerPingResponse::has_request_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToServerPingResponse::clear_request_time() {
  request_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgGCToServerPingResponse::request_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPingResponse.request_time)
  return request_time_;
}
inline void CMsgGCToServerPingResponse::set_request_time(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  request_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerPingResponse.request_time)
}

// optional uint32 cluster = 3;
inline bool CMsgGCToServerPingResponse::has_cluster() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToServerPingResponse::clear_cluster() {
  cluster_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToServerPingResponse::cluster() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPingResponse.cluster)
  return cluster_;
}
inline void CMsgGCToServerPingResponse::set_cluster(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  cluster_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerPingResponse.cluster)
}

// -------------------------------------------------------------------

// CMsgGCToServerConsoleCommand

// optional string console_command = 1;
inline bool CMsgGCToServerConsoleCommand::has_console_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerConsoleCommand::clear_console_command() {
  console_command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgGCToServerConsoleCommand::console_command() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerConsoleCommand.console_command)
  return console_command_.GetNoArena();
}
inline void CMsgGCToServerConsoleCommand::set_console_command(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  console_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerConsoleCommand.console_command)
}
#if LANG_CXX11
inline void CMsgGCToServerConsoleCommand::set_console_command(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  console_command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToServerConsoleCommand.console_command)
}
#endif
inline void CMsgGCToServerConsoleCommand::set_console_command(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  console_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToServerConsoleCommand.console_command)
}
inline void CMsgGCToServerConsoleCommand::set_console_command(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  console_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToServerConsoleCommand.console_command)
}
inline ::std::string* CMsgGCToServerConsoleCommand::mutable_console_command() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToServerConsoleCommand.console_command)
  return console_command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToServerConsoleCommand::release_console_command() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToServerConsoleCommand.console_command)
  if (!has_console_command()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return console_command_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToServerConsoleCommand::set_allocated_console_command(::std::string* console_command) {
  if (console_command != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  console_command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), console_command);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToServerConsoleCommand.console_command)
}

// -------------------------------------------------------------------

// CMsgServerGetEventPoints

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgServerGetEventPoints::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerGetEventPoints::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgServerGetEventPoints::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGetEventPoints.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgServerGetEventPoints::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGetEventPoints.event_id)
}

// repeated uint32 account_id = 2;
inline int CMsgServerGetEventPoints::account_id_size() const {
  return account_id_.size();
}
inline void CMsgServerGetEventPoints::clear_account_id() {
  account_id_.Clear();
}
inline ::google::protobuf::uint32 CMsgServerGetEventPoints::account_id(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGetEventPoints.account_id)
  return account_id_.Get(index);
}
inline void CMsgServerGetEventPoints::set_account_id(int index, ::google::protobuf::uint32 value) {
  account_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGetEventPoints.account_id)
}
inline void CMsgServerGetEventPoints::add_account_id(::google::protobuf::uint32 value) {
  account_id_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerGetEventPoints.account_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgServerGetEventPoints::account_id() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerGetEventPoints.account_id)
  return account_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgServerGetEventPoints::mutable_account_id() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerGetEventPoints.account_id)
  return &account_id_;
}

// -------------------------------------------------------------------

// CMsgServerGetEventPointsResponse_Points

// optional uint32 account_id = 1;
inline bool CMsgServerGetEventPointsResponse_Points::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerGetEventPointsResponse_Points::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerGetEventPointsResponse_Points::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGetEventPointsResponse.Points.account_id)
  return account_id_;
}
inline void CMsgServerGetEventPointsResponse_Points::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGetEventPointsResponse.Points.account_id)
}

// optional uint32 points_total = 2;
inline bool CMsgServerGetEventPointsResponse_Points::has_points_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerGetEventPointsResponse_Points::clear_points_total() {
  points_total_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerGetEventPointsResponse_Points::points_total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGetEventPointsResponse.Points.points_total)
  return points_total_;
}
inline void CMsgServerGetEventPointsResponse_Points::set_points_total(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  points_total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGetEventPointsResponse.Points.points_total)
}

// optional bool owned = 4;
inline bool CMsgServerGetEventPointsResponse_Points::has_owned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerGetEventPointsResponse_Points::clear_owned() {
  owned_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgServerGetEventPointsResponse_Points::owned() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGetEventPointsResponse.Points.owned)
  return owned_;
}
inline void CMsgServerGetEventPointsResponse_Points::set_owned(bool value) {
  _has_bits_[0] |= 0x00000004u;
  owned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGetEventPointsResponse.Points.owned)
}

// -------------------------------------------------------------------

// CMsgServerGetEventPointsResponse

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgServerGetEventPointsResponse::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerGetEventPointsResponse::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgServerGetEventPointsResponse::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGetEventPointsResponse.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgServerGetEventPointsResponse::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGetEventPointsResponse.event_id)
}

// repeated .proto.dota.CMsgServerGetEventPointsResponse.Points points = 2;
inline int CMsgServerGetEventPointsResponse::points_size() const {
  return points_.size();
}
inline void CMsgServerGetEventPointsResponse::clear_points() {
  points_.Clear();
}
inline ::proto::dota::CMsgServerGetEventPointsResponse_Points* CMsgServerGetEventPointsResponse::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerGetEventPointsResponse.points)
  return points_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerGetEventPointsResponse_Points >*
CMsgServerGetEventPointsResponse::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerGetEventPointsResponse.points)
  return &points_;
}
inline const ::proto::dota::CMsgServerGetEventPointsResponse_Points& CMsgServerGetEventPointsResponse::points(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGetEventPointsResponse.points)
  return points_.Get(index);
}
inline ::proto::dota::CMsgServerGetEventPointsResponse_Points* CMsgServerGetEventPointsResponse::add_points() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerGetEventPointsResponse.points)
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerGetEventPointsResponse_Points >&
CMsgServerGetEventPointsResponse::points() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerGetEventPointsResponse.points)
  return points_;
}

// -------------------------------------------------------------------

// CMsgServerGrantSurveyPermission_Survey

// optional uint32 account_id = 1;
inline bool CMsgServerGrantSurveyPermission_Survey::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerGrantSurveyPermission_Survey::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGrantSurveyPermission.Survey.account_id)
  return account_id_;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGrantSurveyPermission.Survey.account_id)
}

// optional uint32 question_id = 2;
inline bool CMsgServerGrantSurveyPermission_Survey::has_question_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_question_id() {
  question_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerGrantSurveyPermission_Survey::question_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGrantSurveyPermission.Survey.question_id)
  return question_id_;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_question_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  question_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGrantSurveyPermission.Survey.question_id)
}

// optional uint32 expire_time = 3;
inline bool CMsgServerGrantSurveyPermission_Survey::has_expire_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_expire_time() {
  expire_time_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgServerGrantSurveyPermission_Survey::expire_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGrantSurveyPermission.Survey.expire_time)
  return expire_time_;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_expire_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGrantSurveyPermission.Survey.expire_time)
}

// optional uint64 survey_key = 4;
inline bool CMsgServerGrantSurveyPermission_Survey::has_survey_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_survey_key() {
  survey_key_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgServerGrantSurveyPermission_Survey::survey_key() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGrantSurveyPermission.Survey.survey_key)
  return survey_key_;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_survey_key(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  survey_key_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGrantSurveyPermission.Survey.survey_key)
}

// optional uint64 extra_data = 5;
inline bool CMsgServerGrantSurveyPermission_Survey::has_extra_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_extra_data() {
  extra_data_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CMsgServerGrantSurveyPermission_Survey::extra_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGrantSurveyPermission.Survey.extra_data)
  return extra_data_;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_extra_data(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  extra_data_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGrantSurveyPermission.Survey.extra_data)
}

// optional uint64 extra_data_32 = 6;
inline bool CMsgServerGrantSurveyPermission_Survey::has_extra_data_32() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgServerGrantSurveyPermission_Survey::clear_extra_data_32() {
  extra_data_32_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 CMsgServerGrantSurveyPermission_Survey::extra_data_32() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGrantSurveyPermission.Survey.extra_data_32)
  return extra_data_32_;
}
inline void CMsgServerGrantSurveyPermission_Survey::set_extra_data_32(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  extra_data_32_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGrantSurveyPermission.Survey.extra_data_32)
}

// -------------------------------------------------------------------

// CMsgServerGrantSurveyPermission

// repeated .proto.dota.CMsgServerGrantSurveyPermission.Survey surveys = 1;
inline int CMsgServerGrantSurveyPermission::surveys_size() const {
  return surveys_.size();
}
inline void CMsgServerGrantSurveyPermission::clear_surveys() {
  surveys_.Clear();
}
inline ::proto::dota::CMsgServerGrantSurveyPermission_Survey* CMsgServerGrantSurveyPermission::mutable_surveys(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerGrantSurveyPermission.surveys)
  return surveys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerGrantSurveyPermission_Survey >*
CMsgServerGrantSurveyPermission::mutable_surveys() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerGrantSurveyPermission.surveys)
  return &surveys_;
}
inline const ::proto::dota::CMsgServerGrantSurveyPermission_Survey& CMsgServerGrantSurveyPermission::surveys(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGrantSurveyPermission.surveys)
  return surveys_.Get(index);
}
inline ::proto::dota::CMsgServerGrantSurveyPermission_Survey* CMsgServerGrantSurveyPermission::add_surveys() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerGrantSurveyPermission.surveys)
  return surveys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerGrantSurveyPermission_Survey >&
CMsgServerGrantSurveyPermission::surveys() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerGrantSurveyPermission.surveys)
  return surveys_;
}

// -------------------------------------------------------------------

// CMsgServerGrantSurveyPermissionResponse

// optional uint32 result = 1;
inline bool CMsgServerGrantSurveyPermissionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerGrantSurveyPermissionResponse::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerGrantSurveyPermissionResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGrantSurveyPermissionResponse.result)
  return result_;
}
inline void CMsgServerGrantSurveyPermissionResponse::set_result(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGrantSurveyPermissionResponse.result)
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchConnectionStats_Player

// optional uint32 account_id = 1;
inline bool CMsgServerToGCMatchConnectionStats_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats_Player::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchConnectionStats.Player.account_id)
  return account_id_;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchConnectionStats.Player.account_id)
}

// optional fixed32 ip = 2;
inline bool CMsgServerToGCMatchConnectionStats_Player::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_ip() {
  ip_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats_Player::ip() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchConnectionStats.Player.ip)
  return ip_;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_ip(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ip_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchConnectionStats.Player.ip)
}

// optional uint32 avg_ping_ms = 3;
inline bool CMsgServerToGCMatchConnectionStats_Player::has_avg_ping_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_avg_ping_ms() {
  avg_ping_ms_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats_Player::avg_ping_ms() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchConnectionStats.Player.avg_ping_ms)
  return avg_ping_ms_;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_avg_ping_ms(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  avg_ping_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchConnectionStats.Player.avg_ping_ms)
}

// optional float packet_loss = 5;
inline bool CMsgServerToGCMatchConnectionStats_Player::has_packet_loss() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_packet_loss() {
  packet_loss_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CMsgServerToGCMatchConnectionStats_Player::packet_loss() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchConnectionStats.Player.packet_loss)
  return packet_loss_;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_packet_loss(float value) {
  _has_bits_[0] |= 0x00000008u;
  packet_loss_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchConnectionStats.Player.packet_loss)
}

// optional float ping_deviation = 6;
inline bool CMsgServerToGCMatchConnectionStats_Player::has_ping_deviation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_ping_deviation() {
  ping_deviation_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CMsgServerToGCMatchConnectionStats_Player::ping_deviation() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchConnectionStats.Player.ping_deviation)
  return ping_deviation_;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_ping_deviation(float value) {
  _has_bits_[0] |= 0x00000010u;
  ping_deviation_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchConnectionStats.Player.ping_deviation)
}

// optional uint32 full_resends = 7;
inline bool CMsgServerToGCMatchConnectionStats_Player::has_full_resends() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats_Player::clear_full_resends() {
  full_resends_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats_Player::full_resends() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchConnectionStats.Player.full_resends)
  return full_resends_;
}
inline void CMsgServerToGCMatchConnectionStats_Player::set_full_resends(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  full_resends_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchConnectionStats.Player.full_resends)
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchConnectionStats

// optional uint64 match_id = 1;
inline bool CMsgServerToGCMatchConnectionStats::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgServerToGCMatchConnectionStats::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchConnectionStats.match_id)
  return match_id_;
}
inline void CMsgServerToGCMatchConnectionStats::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchConnectionStats.match_id)
}

// optional uint32 region_id = 2;
inline bool CMsgServerToGCMatchConnectionStats::has_region_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats::clear_region_id() {
  region_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats::region_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchConnectionStats.region_id)
  return region_id_;
}
inline void CMsgServerToGCMatchConnectionStats::set_region_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  region_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchConnectionStats.region_id)
}

// optional uint32 league_id = 3;
inline bool CMsgServerToGCMatchConnectionStats::has_league_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchConnectionStats.league_id)
  return league_id_;
}
inline void CMsgServerToGCMatchConnectionStats::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchConnectionStats.league_id)
}

// repeated .proto.dota.CMsgServerToGCMatchConnectionStats.Player players = 4;
inline int CMsgServerToGCMatchConnectionStats::players_size() const {
  return players_.size();
}
inline void CMsgServerToGCMatchConnectionStats::clear_players() {
  players_.Clear();
}
inline ::proto::dota::CMsgServerToGCMatchConnectionStats_Player* CMsgServerToGCMatchConnectionStats::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCMatchConnectionStats.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchConnectionStats_Player >*
CMsgServerToGCMatchConnectionStats::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCMatchConnectionStats.players)
  return &players_;
}
inline const ::proto::dota::CMsgServerToGCMatchConnectionStats_Player& CMsgServerToGCMatchConnectionStats::players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchConnectionStats.players)
  return players_.Get(index);
}
inline ::proto::dota::CMsgServerToGCMatchConnectionStats_Player* CMsgServerToGCMatchConnectionStats::add_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCMatchConnectionStats.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchConnectionStats_Player >&
CMsgServerToGCMatchConnectionStats::players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCMatchConnectionStats.players)
  return players_;
}

// optional uint32 cluster_id = 5;
inline bool CMsgServerToGCMatchConnectionStats::has_cluster_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerToGCMatchConnectionStats::clear_cluster_id() {
  cluster_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchConnectionStats::cluster_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchConnectionStats.cluster_id)
  return cluster_id_;
}
inline void CMsgServerToGCMatchConnectionStats::set_cluster_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  cluster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchConnectionStats.cluster_id)
}

// -------------------------------------------------------------------

// CMsgServerGCUpdateSpectatorCount

// optional uint32 spectator_count = 1;
inline bool CMsgServerGCUpdateSpectatorCount::has_spectator_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerGCUpdateSpectatorCount::clear_spectator_count() {
  spectator_count_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerGCUpdateSpectatorCount::spectator_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerGCUpdateSpectatorCount.spectator_count)
  return spectator_count_;
}
inline void CMsgServerGCUpdateSpectatorCount::set_spectator_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  spectator_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerGCUpdateSpectatorCount.spectator_count)
}

// -------------------------------------------------------------------

// CSerializedCombatLog_Dictionary_DictString

// required uint32 id = 1;
inline bool CSerializedCombatLog_Dictionary_DictString::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSerializedCombatLog_Dictionary_DictString::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CSerializedCombatLog_Dictionary_DictString::id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSerializedCombatLog.Dictionary.DictString.id)
  return id_;
}
inline void CSerializedCombatLog_Dictionary_DictString::set_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSerializedCombatLog.Dictionary.DictString.id)
}

// required string value = 2;
inline bool CSerializedCombatLog_Dictionary_DictString::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSerializedCombatLog_Dictionary_DictString::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSerializedCombatLog_Dictionary_DictString::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSerializedCombatLog.Dictionary.DictString.value)
  return value_.GetNoArena();
}
inline void CSerializedCombatLog_Dictionary_DictString::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSerializedCombatLog.Dictionary.DictString.value)
}
#if LANG_CXX11
inline void CSerializedCombatLog_Dictionary_DictString::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSerializedCombatLog.Dictionary.DictString.value)
}
#endif
inline void CSerializedCombatLog_Dictionary_DictString::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSerializedCombatLog.Dictionary.DictString.value)
}
inline void CSerializedCombatLog_Dictionary_DictString::set_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSerializedCombatLog.Dictionary.DictString.value)
}
inline ::std::string* CSerializedCombatLog_Dictionary_DictString::mutable_value() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSerializedCombatLog.Dictionary.DictString.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSerializedCombatLog_Dictionary_DictString::release_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CSerializedCombatLog.Dictionary.DictString.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSerializedCombatLog_Dictionary_DictString::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSerializedCombatLog.Dictionary.DictString.value)
}

// -------------------------------------------------------------------

// CSerializedCombatLog_Dictionary

// repeated .proto.dota.CSerializedCombatLog.Dictionary.DictString strings = 1;
inline int CSerializedCombatLog_Dictionary::strings_size() const {
  return strings_.size();
}
inline void CSerializedCombatLog_Dictionary::clear_strings() {
  strings_.Clear();
}
inline ::proto::dota::CSerializedCombatLog_Dictionary_DictString* CSerializedCombatLog_Dictionary::mutable_strings(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CSerializedCombatLog.Dictionary.strings)
  return strings_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CSerializedCombatLog_Dictionary_DictString >*
CSerializedCombatLog_Dictionary::mutable_strings() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CSerializedCombatLog.Dictionary.strings)
  return &strings_;
}
inline const ::proto::dota::CSerializedCombatLog_Dictionary_DictString& CSerializedCombatLog_Dictionary::strings(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CSerializedCombatLog.Dictionary.strings)
  return strings_.Get(index);
}
inline ::proto::dota::CSerializedCombatLog_Dictionary_DictString* CSerializedCombatLog_Dictionary::add_strings() {
  // @@protoc_insertion_point(field_add:proto.dota.CSerializedCombatLog.Dictionary.strings)
  return strings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSerializedCombatLog_Dictionary_DictString >&
CSerializedCombatLog_Dictionary::strings() const {
  // @@protoc_insertion_point(field_list:proto.dota.CSerializedCombatLog.Dictionary.strings)
  return strings_;
}

// -------------------------------------------------------------------

// CSerializedCombatLog

// optional uint32 version = 1;
inline bool CSerializedCombatLog::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSerializedCombatLog::clear_version() {
  version_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CSerializedCombatLog::version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSerializedCombatLog.version)
  return version_;
}
inline void CSerializedCombatLog::set_version(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSerializedCombatLog.version)
}

// optional .proto.dota.CSerializedCombatLog.Dictionary dictionary = 2;
inline bool CSerializedCombatLog::has_dictionary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSerializedCombatLog::clear_dictionary() {
  if (dictionary_ != nullptr) dictionary_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CSerializedCombatLog_Dictionary& CSerializedCombatLog::dictionary() const {
  const ::proto::dota::CSerializedCombatLog_Dictionary* p = dictionary_;
  // @@protoc_insertion_point(field_get:proto.dota.CSerializedCombatLog.dictionary)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CSerializedCombatLog_Dictionary*>(
      &::proto::dota::_CSerializedCombatLog_Dictionary_default_instance_);
}
inline ::proto::dota::CSerializedCombatLog_Dictionary* CSerializedCombatLog::release_dictionary() {
  // @@protoc_insertion_point(field_release:proto.dota.CSerializedCombatLog.dictionary)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CSerializedCombatLog_Dictionary* temp = dictionary_;
  dictionary_ = nullptr;
  return temp;
}
inline ::proto::dota::CSerializedCombatLog_Dictionary* CSerializedCombatLog::mutable_dictionary() {
  _has_bits_[0] |= 0x00000001u;
  if (dictionary_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CSerializedCombatLog_Dictionary>(GetArenaNoVirtual());
    dictionary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CSerializedCombatLog.dictionary)
  return dictionary_;
}
inline void CSerializedCombatLog::set_allocated_dictionary(::proto::dota::CSerializedCombatLog_Dictionary* dictionary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete dictionary_;
  }
  if (dictionary) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dictionary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dictionary, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  dictionary_ = dictionary;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSerializedCombatLog.dictionary)
}

// repeated .proto.dota.CMsgDOTACombatLogEntry entries = 3;
inline int CSerializedCombatLog::entries_size() const {
  return entries_.size();
}
inline ::proto::dota::CMsgDOTACombatLogEntry* CSerializedCombatLog::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CSerializedCombatLog.entries)
  return entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACombatLogEntry >*
CSerializedCombatLog::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CSerializedCombatLog.entries)
  return &entries_;
}
inline const ::proto::dota::CMsgDOTACombatLogEntry& CSerializedCombatLog::entries(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CSerializedCombatLog.entries)
  return entries_.Get(index);
}
inline ::proto::dota::CMsgDOTACombatLogEntry* CSerializedCombatLog::add_entries() {
  // @@protoc_insertion_point(field_add:proto.dota.CSerializedCombatLog.entries)
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACombatLogEntry >&
CSerializedCombatLog::entries() const {
  // @@protoc_insertion_point(field_list:proto.dota.CSerializedCombatLog.entries)
  return entries_;
}

// -------------------------------------------------------------------

// CMsgServerToGCGetAdditionalEquips

// repeated uint32 account_ids = 1;
inline int CMsgServerToGCGetAdditionalEquips::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgServerToGCGetAdditionalEquips::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgServerToGCGetAdditionalEquips::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCGetAdditionalEquips.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgServerToGCGetAdditionalEquips::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCGetAdditionalEquips.account_ids)
}
inline void CMsgServerToGCGetAdditionalEquips::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCGetAdditionalEquips.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgServerToGCGetAdditionalEquips::account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCGetAdditionalEquips.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgServerToGCGetAdditionalEquips::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCGetAdditionalEquips.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips

// optional uint32 account_id = 1;
inline bool CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.account_id)
  return account_id_;
}
inline void CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.account_id)
}

// repeated .proto.dota.CAdditionalEquipSlot equips = 2;
inline int CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::equips_size() const {
  return equips_.size();
}
inline ::proto::dota::CAdditionalEquipSlot* CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >*
CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.equips)
  return &equips_;
}
inline const ::proto::dota::CAdditionalEquipSlot& CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::equips(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.equips)
  return equips_.Get(index);
}
inline ::proto::dota::CAdditionalEquipSlot* CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::add_equips() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >&
CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips::equips() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips.equips)
  return equips_;
}

// -------------------------------------------------------------------

// CMsgServerToGCGetAdditionalEquipsResponse

// repeated .proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.CUserEquips equips = 1;
inline int CMsgServerToGCGetAdditionalEquipsResponse::equips_size() const {
  return equips_.size();
}
inline void CMsgServerToGCGetAdditionalEquipsResponse::clear_equips() {
  equips_.Clear();
}
inline ::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* CMsgServerToGCGetAdditionalEquipsResponse::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips >*
CMsgServerToGCGetAdditionalEquipsResponse::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.equips)
  return &equips_;
}
inline const ::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips& CMsgServerToGCGetAdditionalEquipsResponse::equips(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.equips)
  return equips_.Get(index);
}
inline ::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips* CMsgServerToGCGetAdditionalEquipsResponse::add_equips() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCGetAdditionalEquipsResponse_CUserEquips >&
CMsgServerToGCGetAdditionalEquipsResponse::equips() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCGetAdditionalEquipsResponse.equips)
  return equips_;
}

// -------------------------------------------------------------------

// CMsgServerToGCGetProfileCard

// repeated uint32 account_ids = 1;
inline int CMsgServerToGCGetProfileCard::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgServerToGCGetProfileCard::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgServerToGCGetProfileCard::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCGetProfileCard.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgServerToGCGetProfileCard::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCGetProfileCard.account_ids)
}
inline void CMsgServerToGCGetProfileCard::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCGetProfileCard.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgServerToGCGetProfileCard::account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCGetProfileCard.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgServerToGCGetProfileCard::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCGetProfileCard.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgServerToGCGetProfileCardResponse

// repeated .proto.dota.CMsgDOTAProfileCard cards = 1;
inline int CMsgServerToGCGetProfileCardResponse::cards_size() const {
  return cards_.size();
}
inline ::proto::dota::CMsgDOTAProfileCard* CMsgServerToGCGetProfileCardResponse::mutable_cards(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCGetProfileCardResponse.cards)
  return cards_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileCard >*
CMsgServerToGCGetProfileCardResponse::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCGetProfileCardResponse.cards)
  return &cards_;
}
inline const ::proto::dota::CMsgDOTAProfileCard& CMsgServerToGCGetProfileCardResponse::cards(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCGetProfileCardResponse.cards)
  return cards_.Get(index);
}
inline ::proto::dota::CMsgDOTAProfileCard* CMsgServerToGCGetProfileCardResponse::add_cards() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCGetProfileCardResponse.cards)
  return cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileCard >&
CMsgServerToGCGetProfileCardResponse::cards() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCGetProfileCardResponse.cards)
  return cards_;
}

// -------------------------------------------------------------------

// CMsgServerToGCVictoryPredictions_Record

// optional uint32 account_id = 1;
inline bool CMsgServerToGCVictoryPredictions_Record::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCVictoryPredictions_Record::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCVictoryPredictions_Record::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCVictoryPredictions.Record.account_id)
  return account_id_;
}
inline void CMsgServerToGCVictoryPredictions_Record::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCVictoryPredictions.Record.account_id)
}

// optional uint64 item_id = 2;
inline bool CMsgServerToGCVictoryPredictions_Record::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCVictoryPredictions_Record::clear_item_id() {
  item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgServerToGCVictoryPredictions_Record::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCVictoryPredictions.Record.item_id)
  return item_id_;
}
inline void CMsgServerToGCVictoryPredictions_Record::set_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCVictoryPredictions.Record.item_id)
}

// repeated uint64 item_ids = 5;
inline int CMsgServerToGCVictoryPredictions_Record::item_ids_size() const {
  return item_ids_.size();
}
inline void CMsgServerToGCVictoryPredictions_Record::clear_item_ids() {
  item_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgServerToGCVictoryPredictions_Record::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCVictoryPredictions.Record.item_ids)
  return item_ids_.Get(index);
}
inline void CMsgServerToGCVictoryPredictions_Record::set_item_ids(int index, ::google::protobuf::uint64 value) {
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCVictoryPredictions.Record.item_ids)
}
inline void CMsgServerToGCVictoryPredictions_Record::add_item_ids(::google::protobuf::uint64 value) {
  item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCVictoryPredictions.Record.item_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgServerToGCVictoryPredictions_Record::item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCVictoryPredictions.Record.item_ids)
  return item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgServerToGCVictoryPredictions_Record::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCVictoryPredictions.Record.item_ids)
  return &item_ids_;
}

// -------------------------------------------------------------------

// CMsgServerToGCVictoryPredictions

// repeated .proto.dota.CMsgServerToGCVictoryPredictions.Record records = 1;
inline int CMsgServerToGCVictoryPredictions::records_size() const {
  return records_.size();
}
inline void CMsgServerToGCVictoryPredictions::clear_records() {
  records_.Clear();
}
inline ::proto::dota::CMsgServerToGCVictoryPredictions_Record* CMsgServerToGCVictoryPredictions::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCVictoryPredictions.records)
  return records_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCVictoryPredictions_Record >*
CMsgServerToGCVictoryPredictions::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCVictoryPredictions.records)
  return &records_;
}
inline const ::proto::dota::CMsgServerToGCVictoryPredictions_Record& CMsgServerToGCVictoryPredictions::records(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCVictoryPredictions.records)
  return records_.Get(index);
}
inline ::proto::dota::CMsgServerToGCVictoryPredictions_Record* CMsgServerToGCVictoryPredictions::add_records() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCVictoryPredictions.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCVictoryPredictions_Record >&
CMsgServerToGCVictoryPredictions::records() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCVictoryPredictions.records)
  return records_;
}

// -------------------------------------------------------------------

// CMsgSuspiciousActivity

// optional uint32 account_id = 1;
inline bool CMsgSuspiciousActivity::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSuspiciousActivity::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgSuspiciousActivity::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSuspiciousActivity.account_id)
  return account_id_;
}
inline void CMsgSuspiciousActivity::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSuspiciousActivity.account_id)
}

// optional .proto.dota.ESuspiciousActivity activity = 2 [default = k_ESuspiciousActivity_VAC_MultipleInstances];
inline bool CMsgSuspiciousActivity::has_activity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSuspiciousActivity::clear_activity() {
  activity_ = 1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::proto::dota::ESuspiciousActivity CMsgSuspiciousActivity::activity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSuspiciousActivity.activity)
  return static_cast< ::proto::dota::ESuspiciousActivity >(activity_);
}
inline void CMsgSuspiciousActivity::set_activity(::proto::dota::ESuspiciousActivity value) {
  assert(::proto::dota::ESuspiciousActivity_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  activity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSuspiciousActivity.activity)
}

// optional sint32 intdata1 = 3;
inline bool CMsgSuspiciousActivity::has_intdata1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSuspiciousActivity::clear_intdata1() {
  intdata1_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CMsgSuspiciousActivity::intdata1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSuspiciousActivity.intdata1)
  return intdata1_;
}
inline void CMsgSuspiciousActivity::set_intdata1(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  intdata1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSuspiciousActivity.intdata1)
}

// optional sint32 intdata2 = 4;
inline bool CMsgSuspiciousActivity::has_intdata2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSuspiciousActivity::clear_intdata2() {
  intdata2_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CMsgSuspiciousActivity::intdata2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSuspiciousActivity.intdata2)
  return intdata2_;
}
inline void CMsgSuspiciousActivity::set_intdata2(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  intdata2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSuspiciousActivity.intdata2)
}

// optional uint32 time = 5;
inline bool CMsgSuspiciousActivity::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSuspiciousActivity::clear_time() {
  time_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgSuspiciousActivity::time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSuspiciousActivity.time)
  return time_;
}
inline void CMsgSuspiciousActivity::set_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSuspiciousActivity.time)
}

// -------------------------------------------------------------------

// CMsgServerToGCRequestStatus

// -------------------------------------------------------------------

// CMsgServerToGCRequestStatus_Response

// optional uint32 response = 1;
inline bool CMsgServerToGCRequestStatus_Response::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCRequestStatus_Response::clear_response() {
  response_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerToGCRequestStatus_Response::response() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCRequestStatus_Response.response)
  return response_;
}
inline void CMsgServerToGCRequestStatus_Response::set_response(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  response_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCRequestStatus_Response.response)
}

// -------------------------------------------------------------------

// CMsgSignOutAssassinMiniGameInfo

// repeated fixed64 winning_players = 1;
inline int CMsgSignOutAssassinMiniGameInfo::winning_players_size() const {
  return winning_players_.size();
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_winning_players() {
  winning_players_.Clear();
}
inline ::google::protobuf::uint64 CMsgSignOutAssassinMiniGameInfo::winning_players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutAssassinMiniGameInfo.winning_players)
  return winning_players_.Get(index);
}
inline void CMsgSignOutAssassinMiniGameInfo::set_winning_players(int index, ::google::protobuf::uint64 value) {
  winning_players_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutAssassinMiniGameInfo.winning_players)
}
inline void CMsgSignOutAssassinMiniGameInfo::add_winning_players(::google::protobuf::uint64 value) {
  winning_players_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSignOutAssassinMiniGameInfo.winning_players)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgSignOutAssassinMiniGameInfo::winning_players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSignOutAssassinMiniGameInfo.winning_players)
  return winning_players_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgSignOutAssassinMiniGameInfo::mutable_winning_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSignOutAssassinMiniGameInfo.winning_players)
  return &winning_players_;
}

// repeated fixed64 losing_players = 2;
inline int CMsgSignOutAssassinMiniGameInfo::losing_players_size() const {
  return losing_players_.size();
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_losing_players() {
  losing_players_.Clear();
}
inline ::google::protobuf::uint64 CMsgSignOutAssassinMiniGameInfo::losing_players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutAssassinMiniGameInfo.losing_players)
  return losing_players_.Get(index);
}
inline void CMsgSignOutAssassinMiniGameInfo::set_losing_players(int index, ::google::protobuf::uint64 value) {
  losing_players_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutAssassinMiniGameInfo.losing_players)
}
inline void CMsgSignOutAssassinMiniGameInfo::add_losing_players(::google::protobuf::uint64 value) {
  losing_players_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSignOutAssassinMiniGameInfo.losing_players)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgSignOutAssassinMiniGameInfo::losing_players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSignOutAssassinMiniGameInfo.losing_players)
  return losing_players_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgSignOutAssassinMiniGameInfo::mutable_losing_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSignOutAssassinMiniGameInfo.losing_players)
  return &losing_players_;
}

// repeated fixed64 arcana_owners = 3;
inline int CMsgSignOutAssassinMiniGameInfo::arcana_owners_size() const {
  return arcana_owners_.size();
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_arcana_owners() {
  arcana_owners_.Clear();
}
inline ::google::protobuf::uint64 CMsgSignOutAssassinMiniGameInfo::arcana_owners(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutAssassinMiniGameInfo.arcana_owners)
  return arcana_owners_.Get(index);
}
inline void CMsgSignOutAssassinMiniGameInfo::set_arcana_owners(int index, ::google::protobuf::uint64 value) {
  arcana_owners_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutAssassinMiniGameInfo.arcana_owners)
}
inline void CMsgSignOutAssassinMiniGameInfo::add_arcana_owners(::google::protobuf::uint64 value) {
  arcana_owners_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSignOutAssassinMiniGameInfo.arcana_owners)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgSignOutAssassinMiniGameInfo::arcana_owners() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSignOutAssassinMiniGameInfo.arcana_owners)
  return arcana_owners_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgSignOutAssassinMiniGameInfo::mutable_arcana_owners() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSignOutAssassinMiniGameInfo.arcana_owners)
  return &arcana_owners_;
}

// optional bool assassin_won = 4;
inline bool CMsgSignOutAssassinMiniGameInfo::has_assassin_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_assassin_won() {
  assassin_won_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgSignOutAssassinMiniGameInfo::assassin_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutAssassinMiniGameInfo.assassin_won)
  return assassin_won_;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_assassin_won(bool value) {
  _has_bits_[0] |= 0x00000002u;
  assassin_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutAssassinMiniGameInfo.assassin_won)
}

// optional uint32 target_hero_id = 5;
inline bool CMsgSignOutAssassinMiniGameInfo::has_target_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_target_hero_id() {
  target_hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgSignOutAssassinMiniGameInfo::target_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutAssassinMiniGameInfo.target_hero_id)
  return target_hero_id_;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_target_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  target_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutAssassinMiniGameInfo.target_hero_id)
}

// optional bool contract_completed = 6;
inline bool CMsgSignOutAssassinMiniGameInfo::has_contract_completed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_contract_completed() {
  contract_completed_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgSignOutAssassinMiniGameInfo::contract_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutAssassinMiniGameInfo.contract_completed)
  return contract_completed_;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_contract_completed(bool value) {
  _has_bits_[0] |= 0x00000004u;
  contract_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutAssassinMiniGameInfo.contract_completed)
}

// optional float contract_complete_time = 7;
inline bool CMsgSignOutAssassinMiniGameInfo::has_contract_complete_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_contract_complete_time() {
  contract_complete_time_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CMsgSignOutAssassinMiniGameInfo::contract_complete_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutAssassinMiniGameInfo.contract_complete_time)
  return contract_complete_time_;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_contract_complete_time(float value) {
  _has_bits_[0] |= 0x00000010u;
  contract_complete_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutAssassinMiniGameInfo.contract_complete_time)
}

// optional bool pa_is_radiant = 8;
inline bool CMsgSignOutAssassinMiniGameInfo::has_pa_is_radiant() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSignOutAssassinMiniGameInfo::clear_pa_is_radiant() {
  pa_is_radiant_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgSignOutAssassinMiniGameInfo::pa_is_radiant() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutAssassinMiniGameInfo.pa_is_radiant)
  return pa_is_radiant_;
}
inline void CMsgSignOutAssassinMiniGameInfo::set_pa_is_radiant(bool value) {
  _has_bits_[0] |= 0x00000008u;
  pa_is_radiant_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutAssassinMiniGameInfo.pa_is_radiant)
}

// -------------------------------------------------------------------

// CMsgServerToGCGetIngameEventData

// optional .proto.dota.EEvent event = 1 [default = EVENT_ID_NONE];
inline bool CMsgServerToGCGetIngameEventData::has_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCGetIngameEventData::clear_event() {
  event_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgServerToGCGetIngameEventData::event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCGetIngameEventData.event)
  return static_cast< ::proto::dota::EEvent >(event_);
}
inline void CMsgServerToGCGetIngameEventData::set_event(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCGetIngameEventData.event)
}

// -------------------------------------------------------------------

// CMsgGCToServerIngameEventDataOraclePA

// repeated uint32 target_hero_ids = 1;
inline int CMsgGCToServerIngameEventDataOraclePA::target_hero_ids_size() const {
  return target_hero_ids_.size();
}
inline void CMsgGCToServerIngameEventDataOraclePA::clear_target_hero_ids() {
  target_hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToServerIngameEventDataOraclePA::target_hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerIngameEventDataOraclePA.target_hero_ids)
  return target_hero_ids_.Get(index);
}
inline void CMsgGCToServerIngameEventDataOraclePA::set_target_hero_ids(int index, ::google::protobuf::uint32 value) {
  target_hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerIngameEventDataOraclePA.target_hero_ids)
}
inline void CMsgGCToServerIngameEventDataOraclePA::add_target_hero_ids(::google::protobuf::uint32 value) {
  target_hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToServerIngameEventDataOraclePA.target_hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToServerIngameEventDataOraclePA::target_hero_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToServerIngameEventDataOraclePA.target_hero_ids)
  return target_hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToServerIngameEventDataOraclePA::mutable_target_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToServerIngameEventDataOraclePA.target_hero_ids)
  return &target_hero_ids_;
}

// -------------------------------------------------------------------

// CMsgServerToGCKillSummaries_KillSummary

// optional uint32 killer_hero_id = 1;
inline bool CMsgServerToGCKillSummaries_KillSummary::has_killer_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCKillSummaries_KillSummary::clear_killer_hero_id() {
  killer_hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerToGCKillSummaries_KillSummary::killer_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCKillSummaries.KillSummary.killer_hero_id)
  return killer_hero_id_;
}
inline void CMsgServerToGCKillSummaries_KillSummary::set_killer_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  killer_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCKillSummaries.KillSummary.killer_hero_id)
}

// optional uint32 victim_hero_id = 2;
inline bool CMsgServerToGCKillSummaries_KillSummary::has_victim_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCKillSummaries_KillSummary::clear_victim_hero_id() {
  victim_hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCKillSummaries_KillSummary::victim_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCKillSummaries.KillSummary.victim_hero_id)
  return victim_hero_id_;
}
inline void CMsgServerToGCKillSummaries_KillSummary::set_victim_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  victim_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCKillSummaries.KillSummary.victim_hero_id)
}

// optional uint32 kill_count = 3;
inline bool CMsgServerToGCKillSummaries_KillSummary::has_kill_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCKillSummaries_KillSummary::clear_kill_count() {
  kill_count_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCKillSummaries_KillSummary::kill_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCKillSummaries.KillSummary.kill_count)
  return kill_count_;
}
inline void CMsgServerToGCKillSummaries_KillSummary::set_kill_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  kill_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCKillSummaries.KillSummary.kill_count)
}

// -------------------------------------------------------------------

// CMsgServerToGCKillSummaries

// optional uint32 ingameevent_id = 1;
inline bool CMsgServerToGCKillSummaries::has_ingameevent_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCKillSummaries::clear_ingameevent_id() {
  ingameevent_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerToGCKillSummaries::ingameevent_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCKillSummaries.ingameevent_id)
  return ingameevent_id_;
}
inline void CMsgServerToGCKillSummaries::set_ingameevent_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ingameevent_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCKillSummaries.ingameevent_id)
}

// repeated .proto.dota.CMsgServerToGCKillSummaries.KillSummary summaries = 2;
inline int CMsgServerToGCKillSummaries::summaries_size() const {
  return summaries_.size();
}
inline void CMsgServerToGCKillSummaries::clear_summaries() {
  summaries_.Clear();
}
inline ::proto::dota::CMsgServerToGCKillSummaries_KillSummary* CMsgServerToGCKillSummaries::mutable_summaries(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCKillSummaries.summaries)
  return summaries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCKillSummaries_KillSummary >*
CMsgServerToGCKillSummaries::mutable_summaries() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCKillSummaries.summaries)
  return &summaries_;
}
inline const ::proto::dota::CMsgServerToGCKillSummaries_KillSummary& CMsgServerToGCKillSummaries::summaries(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCKillSummaries.summaries)
  return summaries_.Get(index);
}
inline ::proto::dota::CMsgServerToGCKillSummaries_KillSummary* CMsgServerToGCKillSummaries::add_summaries() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCKillSummaries.summaries)
  return summaries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCKillSummaries_KillSummary >&
CMsgServerToGCKillSummaries::summaries() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCKillSummaries.summaries)
  return summaries_;
}

// -------------------------------------------------------------------

// CMsgGCToServerPredictionResult_Prediction

// optional uint32 item_def = 1;
inline bool CMsgGCToServerPredictionResult_Prediction::has_item_def() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_item_def() {
  item_def_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCToServerPredictionResult_Prediction::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPredictionResult.Prediction.item_def)
  return item_def_;
}
inline void CMsgGCToServerPredictionResult_Prediction::set_item_def(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerPredictionResult.Prediction.item_def)
}

// optional uint32 num_correct = 2;
inline bool CMsgGCToServerPredictionResult_Prediction::has_num_correct() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_num_correct() {
  num_correct_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToServerPredictionResult_Prediction::num_correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPredictionResult.Prediction.num_correct)
  return num_correct_;
}
inline void CMsgGCToServerPredictionResult_Prediction::set_num_correct(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerPredictionResult.Prediction.num_correct)
}

// optional uint32 num_fails = 3;
inline bool CMsgGCToServerPredictionResult_Prediction::has_num_fails() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_num_fails() {
  num_fails_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgGCToServerPredictionResult_Prediction::num_fails() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPredictionResult.Prediction.num_fails)
  return num_fails_;
}
inline void CMsgGCToServerPredictionResult_Prediction::set_num_fails(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_fails_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerPredictionResult.Prediction.num_fails)
}

// optional .proto.dota.CMsgGCToServerPredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];
inline bool CMsgGCToServerPredictionResult_Prediction::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_result() {
  result_ = 1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::proto::dota::CMsgGCToServerPredictionResult_Prediction_EResult CMsgGCToServerPredictionResult_Prediction::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPredictionResult.Prediction.result)
  return static_cast< ::proto::dota::CMsgGCToServerPredictionResult_Prediction_EResult >(result_);
}
inline void CMsgGCToServerPredictionResult_Prediction::set_result(::proto::dota::CMsgGCToServerPredictionResult_Prediction_EResult value) {
  assert(::proto::dota::CMsgGCToServerPredictionResult_Prediction_EResult_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerPredictionResult.Prediction.result)
}

// repeated uint32 granted_item_defs = 6;
inline int CMsgGCToServerPredictionResult_Prediction::granted_item_defs_size() const {
  return granted_item_defs_.size();
}
inline void CMsgGCToServerPredictionResult_Prediction::clear_granted_item_defs() {
  granted_item_defs_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToServerPredictionResult_Prediction::granted_item_defs(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPredictionResult.Prediction.granted_item_defs)
  return granted_item_defs_.Get(index);
}
inline void CMsgGCToServerPredictionResult_Prediction::set_granted_item_defs(int index, ::google::protobuf::uint32 value) {
  granted_item_defs_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerPredictionResult.Prediction.granted_item_defs)
}
inline void CMsgGCToServerPredictionResult_Prediction::add_granted_item_defs(::google::protobuf::uint32 value) {
  granted_item_defs_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToServerPredictionResult.Prediction.granted_item_defs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToServerPredictionResult_Prediction::granted_item_defs() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToServerPredictionResult.Prediction.granted_item_defs)
  return granted_item_defs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToServerPredictionResult_Prediction::mutable_granted_item_defs() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToServerPredictionResult.Prediction.granted_item_defs)
  return &granted_item_defs_;
}

// -------------------------------------------------------------------

// CMsgGCToServerPredictionResult

// optional uint32 account_id = 1;
inline bool CMsgGCToServerPredictionResult::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToServerPredictionResult::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgGCToServerPredictionResult::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPredictionResult.account_id)
  return account_id_;
}
inline void CMsgGCToServerPredictionResult::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerPredictionResult.account_id)
}

// optional uint64 match_id = 2;
inline bool CMsgGCToServerPredictionResult::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToServerPredictionResult::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgGCToServerPredictionResult::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPredictionResult.match_id)
  return match_id_;
}
inline void CMsgGCToServerPredictionResult::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerPredictionResult.match_id)
}

// optional bool correct = 3;
inline bool CMsgGCToServerPredictionResult::has_correct() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToServerPredictionResult::clear_correct() {
  correct_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgGCToServerPredictionResult::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPredictionResult.correct)
  return correct_;
}
inline void CMsgGCToServerPredictionResult::set_correct(bool value) {
  _has_bits_[0] |= 0x00000004u;
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToServerPredictionResult.correct)
}

// repeated .proto.dota.CMsgGCToServerPredictionResult.Prediction predictions = 4;
inline int CMsgGCToServerPredictionResult::predictions_size() const {
  return predictions_.size();
}
inline void CMsgGCToServerPredictionResult::clear_predictions() {
  predictions_.Clear();
}
inline ::proto::dota::CMsgGCToServerPredictionResult_Prediction* CMsgGCToServerPredictionResult::mutable_predictions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToServerPredictionResult.predictions)
  return predictions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToServerPredictionResult_Prediction >*
CMsgGCToServerPredictionResult::mutable_predictions() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToServerPredictionResult.predictions)
  return &predictions_;
}
inline const ::proto::dota::CMsgGCToServerPredictionResult_Prediction& CMsgGCToServerPredictionResult::predictions(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerPredictionResult.predictions)
  return predictions_.Get(index);
}
inline ::proto::dota::CMsgGCToServerPredictionResult_Prediction* CMsgGCToServerPredictionResult::add_predictions() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToServerPredictionResult.predictions)
  return predictions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToServerPredictionResult_Prediction >&
CMsgGCToServerPredictionResult::predictions() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToServerPredictionResult.predictions)
  return predictions_;
}

// -------------------------------------------------------------------

// CMsgServerToGCLockCharmTrading

// optional uint32 account_id = 1;
inline bool CMsgServerToGCLockCharmTrading::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCLockCharmTrading::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCLockCharmTrading::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCLockCharmTrading.account_id)
  return account_id_;
}
inline void CMsgServerToGCLockCharmTrading::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCLockCharmTrading.account_id)
}

// optional uint64 item_id = 2;
inline bool CMsgServerToGCLockCharmTrading::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCLockCharmTrading::clear_item_id() {
  item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgServerToGCLockCharmTrading::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCLockCharmTrading.item_id)
  return item_id_;
}
inline void CMsgServerToGCLockCharmTrading::set_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCLockCharmTrading.item_id)
}

// -------------------------------------------------------------------

// CMsgSignOutUpdatePlayerChallenge_Challenge

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgSignOutUpdatePlayerChallenge_Challenge::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgSignOutUpdatePlayerChallenge_Challenge::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge.event_id)
}

// optional uint32 slot_id = 2;
inline bool CMsgSignOutUpdatePlayerChallenge_Challenge::has_slot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::clear_slot_id() {
  slot_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgSignOutUpdatePlayerChallenge_Challenge::slot_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge.slot_id)
  return slot_id_;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::set_slot_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge.slot_id)
}

// optional uint32 sequence_id = 3;
inline bool CMsgSignOutUpdatePlayerChallenge_Challenge::has_sequence_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::clear_sequence_id() {
  sequence_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgSignOutUpdatePlayerChallenge_Challenge::sequence_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge.sequence_id)
  return sequence_id_;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::set_sequence_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  sequence_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge.sequence_id)
}

// optional uint32 progress = 4;
inline bool CMsgSignOutUpdatePlayerChallenge_Challenge::has_progress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::clear_progress() {
  progress_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgSignOutUpdatePlayerChallenge_Challenge::progress() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge.progress)
  return progress_;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::set_progress(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge.progress)
}

// optional uint32 challenge_rank = 5;
inline bool CMsgSignOutUpdatePlayerChallenge_Challenge::has_challenge_rank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::clear_challenge_rank() {
  challenge_rank_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgSignOutUpdatePlayerChallenge_Challenge::challenge_rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge.challenge_rank)
  return challenge_rank_;
}
inline void CMsgSignOutUpdatePlayerChallenge_Challenge::set_challenge_rank(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  challenge_rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge.challenge_rank)
}

// -------------------------------------------------------------------

// CMsgSignOutUpdatePlayerChallenge

// optional uint32 account_id = 1;
inline bool CMsgSignOutUpdatePlayerChallenge::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutUpdatePlayerChallenge::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgSignOutUpdatePlayerChallenge::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutUpdatePlayerChallenge.account_id)
  return account_id_;
}
inline void CMsgSignOutUpdatePlayerChallenge::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutUpdatePlayerChallenge.account_id)
}

// repeated .proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge completed = 2;
inline int CMsgSignOutUpdatePlayerChallenge::completed_size() const {
  return completed_.size();
}
inline void CMsgSignOutUpdatePlayerChallenge::clear_completed() {
  completed_.Clear();
}
inline ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge* CMsgSignOutUpdatePlayerChallenge::mutable_completed(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgSignOutUpdatePlayerChallenge.completed)
  return completed_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge >*
CMsgSignOutUpdatePlayerChallenge::mutable_completed() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSignOutUpdatePlayerChallenge.completed)
  return &completed_;
}
inline const ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge& CMsgSignOutUpdatePlayerChallenge::completed(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutUpdatePlayerChallenge.completed)
  return completed_.Get(index);
}
inline ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge* CMsgSignOutUpdatePlayerChallenge::add_completed() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSignOutUpdatePlayerChallenge.completed)
  return completed_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge >&
CMsgSignOutUpdatePlayerChallenge::completed() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSignOutUpdatePlayerChallenge.completed)
  return completed_;
}

// repeated .proto.dota.CMsgSignOutUpdatePlayerChallenge.Challenge rerolled = 3;
inline int CMsgSignOutUpdatePlayerChallenge::rerolled_size() const {
  return rerolled_.size();
}
inline void CMsgSignOutUpdatePlayerChallenge::clear_rerolled() {
  rerolled_.Clear();
}
inline ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge* CMsgSignOutUpdatePlayerChallenge::mutable_rerolled(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgSignOutUpdatePlayerChallenge.rerolled)
  return rerolled_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge >*
CMsgSignOutUpdatePlayerChallenge::mutable_rerolled() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSignOutUpdatePlayerChallenge.rerolled)
  return &rerolled_;
}
inline const ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge& CMsgSignOutUpdatePlayerChallenge::rerolled(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutUpdatePlayerChallenge.rerolled)
  return rerolled_.Get(index);
}
inline ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge* CMsgSignOutUpdatePlayerChallenge::add_rerolled() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSignOutUpdatePlayerChallenge.rerolled)
  return rerolled_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutUpdatePlayerChallenge_Challenge >&
CMsgSignOutUpdatePlayerChallenge::rerolled() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSignOutUpdatePlayerChallenge.rerolled)
  return rerolled_;
}

// optional uint64 match_id = 4;
inline bool CMsgSignOutUpdatePlayerChallenge::has_match_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutUpdatePlayerChallenge::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgSignOutUpdatePlayerChallenge::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutUpdatePlayerChallenge.match_id)
  return match_id_;
}
inline void CMsgSignOutUpdatePlayerChallenge::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutUpdatePlayerChallenge.match_id)
}

// optional uint32 hero_id = 5;
inline bool CMsgSignOutUpdatePlayerChallenge::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutUpdatePlayerChallenge::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgSignOutUpdatePlayerChallenge::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutUpdatePlayerChallenge.hero_id)
  return hero_id_;
}
inline void CMsgSignOutUpdatePlayerChallenge::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutUpdatePlayerChallenge.hero_id)
}

// -------------------------------------------------------------------

// CMsgServerToGCRerollPlayerChallenge

// optional uint32 account_id = 1;
inline bool CMsgServerToGCRerollPlayerChallenge::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCRerollPlayerChallenge::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCRerollPlayerChallenge::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCRerollPlayerChallenge.account_id)
  return account_id_;
}
inline void CMsgServerToGCRerollPlayerChallenge::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCRerollPlayerChallenge.account_id)
}

// optional .proto.dota.CMsgClientToGCRerollPlayerChallenge reroll_msg = 2;
inline bool CMsgServerToGCRerollPlayerChallenge::has_reroll_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CMsgClientToGCRerollPlayerChallenge& CMsgServerToGCRerollPlayerChallenge::reroll_msg() const {
  const ::proto::dota::CMsgClientToGCRerollPlayerChallenge* p = reroll_msg_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCRerollPlayerChallenge.reroll_msg)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgClientToGCRerollPlayerChallenge*>(
      &::proto::dota::_CMsgClientToGCRerollPlayerChallenge_default_instance_);
}
inline ::proto::dota::CMsgClientToGCRerollPlayerChallenge* CMsgServerToGCRerollPlayerChallenge::release_reroll_msg() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgServerToGCRerollPlayerChallenge.reroll_msg)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgClientToGCRerollPlayerChallenge* temp = reroll_msg_;
  reroll_msg_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgClientToGCRerollPlayerChallenge* CMsgServerToGCRerollPlayerChallenge::mutable_reroll_msg() {
  _has_bits_[0] |= 0x00000001u;
  if (reroll_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgClientToGCRerollPlayerChallenge>(GetArenaNoVirtual());
    reroll_msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCRerollPlayerChallenge.reroll_msg)
  return reroll_msg_;
}
inline void CMsgServerToGCRerollPlayerChallenge::set_allocated_reroll_msg(::proto::dota::CMsgClientToGCRerollPlayerChallenge* reroll_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(reroll_msg_);
  }
  if (reroll_msg) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      reroll_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reroll_msg, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  reroll_msg_ = reroll_msg;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgServerToGCRerollPlayerChallenge.reroll_msg)
}

// -------------------------------------------------------------------

// CMsgServerToGCHoldEventPoints_HoldRequest

// optional uint32 account_id = 1;
inline bool CMsgServerToGCHoldEventPoints_HoldRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerToGCHoldEventPoints_HoldRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCHoldEventPoints.HoldRequest.account_id)
  return account_id_;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCHoldEventPoints.HoldRequest.account_id)
}

// optional uint32 points_held = 2;
inline bool CMsgServerToGCHoldEventPoints_HoldRequest::has_points_held() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::clear_points_held() {
  points_held_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCHoldEventPoints_HoldRequest::points_held() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCHoldEventPoints.HoldRequest.points_held)
  return points_held_;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::set_points_held(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  points_held_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCHoldEventPoints.HoldRequest.points_held)
}

// optional uint32 premium_held = 3;
inline bool CMsgServerToGCHoldEventPoints_HoldRequest::has_premium_held() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::clear_premium_held() {
  premium_held_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCHoldEventPoints_HoldRequest::premium_held() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCHoldEventPoints.HoldRequest.premium_held)
  return premium_held_;
}
inline void CMsgServerToGCHoldEventPoints_HoldRequest::set_premium_held(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  premium_held_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCHoldEventPoints.HoldRequest.premium_held)
}

// -------------------------------------------------------------------

// CMsgServerToGCHoldEventPoints

// repeated .proto.dota.CMsgServerToGCHoldEventPoints.HoldRequest holds = 1;
inline int CMsgServerToGCHoldEventPoints::holds_size() const {
  return holds_.size();
}
inline void CMsgServerToGCHoldEventPoints::clear_holds() {
  holds_.Clear();
}
inline ::proto::dota::CMsgServerToGCHoldEventPoints_HoldRequest* CMsgServerToGCHoldEventPoints::mutable_holds(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCHoldEventPoints.holds)
  return holds_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCHoldEventPoints_HoldRequest >*
CMsgServerToGCHoldEventPoints::mutable_holds() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCHoldEventPoints.holds)
  return &holds_;
}
inline const ::proto::dota::CMsgServerToGCHoldEventPoints_HoldRequest& CMsgServerToGCHoldEventPoints::holds(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCHoldEventPoints.holds)
  return holds_.Get(index);
}
inline ::proto::dota::CMsgServerToGCHoldEventPoints_HoldRequest* CMsgServerToGCHoldEventPoints::add_holds() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCHoldEventPoints.holds)
  return holds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCHoldEventPoints_HoldRequest >&
CMsgServerToGCHoldEventPoints::holds() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCHoldEventPoints.holds)
  return holds_;
}

// optional .proto.dota.EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgServerToGCHoldEventPoints::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCHoldEventPoints::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::EEvent CMsgServerToGCHoldEventPoints::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCHoldEventPoints.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgServerToGCHoldEventPoints::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCHoldEventPoints.event_id)
}

// optional uint64 hold_key = 3;
inline bool CMsgServerToGCHoldEventPoints::has_hold_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCHoldEventPoints::clear_hold_key() {
  hold_key_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgServerToGCHoldEventPoints::hold_key() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCHoldEventPoints.hold_key)
  return hold_key_;
}
inline void CMsgServerToGCHoldEventPoints::set_hold_key(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  hold_key_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCHoldEventPoints.hold_key)
}

// optional uint32 hold_until = 4;
inline bool CMsgServerToGCHoldEventPoints::has_hold_until() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCHoldEventPoints::clear_hold_until() {
  hold_until_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCHoldEventPoints::hold_until() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCHoldEventPoints.hold_until)
  return hold_until_;
}
inline void CMsgServerToGCHoldEventPoints::set_hold_until(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  hold_until_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCHoldEventPoints.hold_until)
}

// -------------------------------------------------------------------

// CMsgSignOutReleaseEventPointHolds

// repeated uint32 account_ids = 1;
inline int CMsgSignOutReleaseEventPointHolds::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgSignOutReleaseEventPointHolds::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgSignOutReleaseEventPointHolds::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutReleaseEventPointHolds.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgSignOutReleaseEventPointHolds::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutReleaseEventPointHolds.account_ids)
}
inline void CMsgSignOutReleaseEventPointHolds::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSignOutReleaseEventPointHolds.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSignOutReleaseEventPointHolds::account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSignOutReleaseEventPointHolds.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSignOutReleaseEventPointHolds::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSignOutReleaseEventPointHolds.account_ids)
  return &account_ids_;
}

// optional .proto.dota.EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgSignOutReleaseEventPointHolds::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutReleaseEventPointHolds::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::EEvent CMsgSignOutReleaseEventPointHolds::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutReleaseEventPointHolds.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgSignOutReleaseEventPointHolds::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutReleaseEventPointHolds.event_id)
}

// optional uint64 hold_key = 3;
inline bool CMsgSignOutReleaseEventPointHolds::has_hold_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutReleaseEventPointHolds::clear_hold_key() {
  hold_key_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgSignOutReleaseEventPointHolds::hold_key() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutReleaseEventPointHolds.hold_key)
  return hold_key_;
}
inline void CMsgSignOutReleaseEventPointHolds::set_hold_key(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  hold_key_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutReleaseEventPointHolds.hold_key)
}

// -------------------------------------------------------------------

// CMsgSignOutWagerStats_Player

// optional uint32 account_id = 1;
inline bool CMsgSignOutWagerStats_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutWagerStats_Player::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgSignOutWagerStats_Player::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutWagerStats.Player.account_id)
  return account_id_;
}
inline void CMsgSignOutWagerStats_Player::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutWagerStats.Player.account_id)
}

// optional uint32 winnings = 2;
inline bool CMsgSignOutWagerStats_Player::has_winnings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutWagerStats_Player::clear_winnings() {
  winnings_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgSignOutWagerStats_Player::winnings() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutWagerStats.Player.winnings)
  return winnings_;
}
inline void CMsgSignOutWagerStats_Player::set_winnings(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  winnings_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutWagerStats.Player.winnings)
}

// optional uint32 max_wager = 3;
inline bool CMsgSignOutWagerStats_Player::has_max_wager() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutWagerStats_Player::clear_max_wager() {
  max_wager_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgSignOutWagerStats_Player::max_wager() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutWagerStats.Player.max_wager)
  return max_wager_;
}
inline void CMsgSignOutWagerStats_Player::set_max_wager(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  max_wager_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutWagerStats.Player.max_wager)
}

// optional uint32 wager = 4;
inline bool CMsgSignOutWagerStats_Player::has_wager() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSignOutWagerStats_Player::clear_wager() {
  wager_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgSignOutWagerStats_Player::wager() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutWagerStats.Player.wager)
  return wager_;
}
inline void CMsgSignOutWagerStats_Player::set_wager(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  wager_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutWagerStats.Player.wager)
}

// -------------------------------------------------------------------

// CMsgSignOutWagerStats

// repeated .proto.dota.CMsgSignOutWagerStats.Player players = 1;
inline int CMsgSignOutWagerStats::players_size() const {
  return players_.size();
}
inline void CMsgSignOutWagerStats::clear_players() {
  players_.Clear();
}
inline ::proto::dota::CMsgSignOutWagerStats_Player* CMsgSignOutWagerStats::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgSignOutWagerStats.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutWagerStats_Player >*
CMsgSignOutWagerStats::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSignOutWagerStats.players)
  return &players_;
}
inline const ::proto::dota::CMsgSignOutWagerStats_Player& CMsgSignOutWagerStats::players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutWagerStats.players)
  return players_.Get(index);
}
inline ::proto::dota::CMsgSignOutWagerStats_Player* CMsgSignOutWagerStats::add_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSignOutWagerStats.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutWagerStats_Player >&
CMsgSignOutWagerStats::players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSignOutWagerStats.players)
  return players_;
}

// optional .proto.dota.EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgSignOutWagerStats::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutWagerStats::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgSignOutWagerStats::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutWagerStats.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgSignOutWagerStats::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutWagerStats.event_id)
}

// -------------------------------------------------------------------

// CMsgSpendWager_Player

// optional uint32 account_id = 1;
inline bool CMsgSpendWager_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSpendWager_Player::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgSpendWager_Player::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSpendWager.Player.account_id)
  return account_id_;
}
inline void CMsgSpendWager_Player::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSpendWager.Player.account_id)
}

// optional uint32 wager = 2;
inline bool CMsgSpendWager_Player::has_wager() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSpendWager_Player::clear_wager() {
  wager_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgSpendWager_Player::wager() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSpendWager.Player.wager)
  return wager_;
}
inline void CMsgSpendWager_Player::set_wager(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  wager_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSpendWager.Player.wager)
}

// optional uint64 wager_token_item_id = 3;
inline bool CMsgSpendWager_Player::has_wager_token_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSpendWager_Player::clear_wager_token_item_id() {
  wager_token_item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgSpendWager_Player::wager_token_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSpendWager.Player.wager_token_item_id)
  return wager_token_item_id_;
}
inline void CMsgSpendWager_Player::set_wager_token_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  wager_token_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSpendWager.Player.wager_token_item_id)
}

// -------------------------------------------------------------------

// CMsgSpendWager

// repeated .proto.dota.CMsgSpendWager.Player players = 1;
inline int CMsgSpendWager::players_size() const {
  return players_.size();
}
inline void CMsgSpendWager::clear_players() {
  players_.Clear();
}
inline ::proto::dota::CMsgSpendWager_Player* CMsgSpendWager::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgSpendWager.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSpendWager_Player >*
CMsgSpendWager::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSpendWager.players)
  return &players_;
}
inline const ::proto::dota::CMsgSpendWager_Player& CMsgSpendWager::players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSpendWager.players)
  return players_.Get(index);
}
inline ::proto::dota::CMsgSpendWager_Player* CMsgSpendWager::add_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSpendWager.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSpendWager_Player >&
CMsgSpendWager::players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSpendWager.players)
  return players_;
}

// optional .proto.dota.EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgSpendWager::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSpendWager::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgSpendWager::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSpendWager.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgSpendWager::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSpendWager.event_id)
}

// optional uint32 timestamp = 3;
inline bool CMsgSpendWager::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSpendWager::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgSpendWager::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSpendWager.timestamp)
  return timestamp_;
}
inline void CMsgSpendWager::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSpendWager.timestamp)
}

// optional uint64 match_id = 4;
inline bool CMsgSpendWager::has_match_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSpendWager::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgSpendWager::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSpendWager.match_id)
  return match_id_;
}
inline void CMsgSpendWager::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSpendWager.match_id)
}

// optional uint64 server_steam_id = 5;
inline bool CMsgSpendWager::has_server_steam_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSpendWager::clear_server_steam_id() {
  server_steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CMsgSpendWager::server_steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSpendWager.server_steam_id)
  return server_steam_id_;
}
inline void CMsgSpendWager::set_server_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  server_steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSpendWager.server_steam_id)
}

// -------------------------------------------------------------------

// CMsgSignOutXPCoins_Player

// optional uint32 account_id = 1;
inline bool CMsgSignOutXPCoins_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutXPCoins_Player::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgSignOutXPCoins_Player::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutXPCoins.Player.account_id)
  return account_id_;
}
inline void CMsgSignOutXPCoins_Player::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutXPCoins.Player.account_id)
}

// optional uint32 xp_gained = 2;
inline bool CMsgSignOutXPCoins_Player::has_xp_gained() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutXPCoins_Player::clear_xp_gained() {
  xp_gained_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgSignOutXPCoins_Player::xp_gained() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutXPCoins.Player.xp_gained)
  return xp_gained_;
}
inline void CMsgSignOutXPCoins_Player::set_xp_gained(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  xp_gained_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutXPCoins.Player.xp_gained)
}

// optional uint32 coins_spent = 3;
inline bool CMsgSignOutXPCoins_Player::has_coins_spent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSignOutXPCoins_Player::clear_coins_spent() {
  coins_spent_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgSignOutXPCoins_Player::coins_spent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutXPCoins.Player.coins_spent)
  return coins_spent_;
}
inline void CMsgSignOutXPCoins_Player::set_coins_spent(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  coins_spent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutXPCoins.Player.coins_spent)
}

// optional uint64 wager_token_item_id = 4;
inline bool CMsgSignOutXPCoins_Player::has_wager_token_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutXPCoins_Player::clear_wager_token_item_id() {
  wager_token_item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CMsgSignOutXPCoins_Player::wager_token_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutXPCoins.Player.wager_token_item_id)
  return wager_token_item_id_;
}
inline void CMsgSignOutXPCoins_Player::set_wager_token_item_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  wager_token_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutXPCoins.Player.wager_token_item_id)
}

// optional uint32 rank_wager = 5;
inline bool CMsgSignOutXPCoins_Player::has_rank_wager() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSignOutXPCoins_Player::clear_rank_wager() {
  rank_wager_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgSignOutXPCoins_Player::rank_wager() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutXPCoins.Player.rank_wager)
  return rank_wager_;
}
inline void CMsgSignOutXPCoins_Player::set_rank_wager(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  rank_wager_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutXPCoins.Player.rank_wager)
}

// -------------------------------------------------------------------

// CMsgSignOutXPCoins

// repeated .proto.dota.CMsgSignOutXPCoins.Player players = 1;
inline int CMsgSignOutXPCoins::players_size() const {
  return players_.size();
}
inline void CMsgSignOutXPCoins::clear_players() {
  players_.Clear();
}
inline ::proto::dota::CMsgSignOutXPCoins_Player* CMsgSignOutXPCoins::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgSignOutXPCoins.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutXPCoins_Player >*
CMsgSignOutXPCoins::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSignOutXPCoins.players)
  return &players_;
}
inline const ::proto::dota::CMsgSignOutXPCoins_Player& CMsgSignOutXPCoins::players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutXPCoins.players)
  return players_.Get(index);
}
inline ::proto::dota::CMsgSignOutXPCoins_Player* CMsgSignOutXPCoins::add_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSignOutXPCoins.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutXPCoins_Player >&
CMsgSignOutXPCoins::players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSignOutXPCoins.players)
  return players_;
}

// optional .proto.dota.EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgSignOutXPCoins::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutXPCoins::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::EEvent CMsgSignOutXPCoins::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutXPCoins.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgSignOutXPCoins::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutXPCoins.event_id)
}

// optional uint64 match_id = 3;
inline bool CMsgSignOutXPCoins::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutXPCoins::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgSignOutXPCoins::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutXPCoins.match_id)
  return match_id_;
}
inline void CMsgSignOutXPCoins::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutXPCoins.match_id)
}

// optional uint32 timestamp = 4;
inline bool CMsgSignOutXPCoins::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSignOutXPCoins::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgSignOutXPCoins::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutXPCoins.timestamp)
  return timestamp_;
}
inline void CMsgSignOutXPCoins::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutXPCoins.timestamp)
}

// -------------------------------------------------------------------

// CMsgSignOutCommunityGoalProgress_EventGoalIncrement

// optional uint32 event_goal_id = 1;
inline bool CMsgSignOutCommunityGoalProgress_EventGoalIncrement::has_event_goal_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutCommunityGoalProgress_EventGoalIncrement::clear_event_goal_id() {
  event_goal_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunityGoalProgress_EventGoalIncrement::event_goal_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunityGoalProgress.EventGoalIncrement.event_goal_id)
  return event_goal_id_;
}
inline void CMsgSignOutCommunityGoalProgress_EventGoalIncrement::set_event_goal_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_goal_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunityGoalProgress.EventGoalIncrement.event_goal_id)
}

// optional uint32 increment_amount = 2;
inline bool CMsgSignOutCommunityGoalProgress_EventGoalIncrement::has_increment_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSignOutCommunityGoalProgress_EventGoalIncrement::clear_increment_amount() {
  increment_amount_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgSignOutCommunityGoalProgress_EventGoalIncrement::increment_amount() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunityGoalProgress.EventGoalIncrement.increment_amount)
  return increment_amount_;
}
inline void CMsgSignOutCommunityGoalProgress_EventGoalIncrement::set_increment_amount(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  increment_amount_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunityGoalProgress.EventGoalIncrement.increment_amount)
}

// -------------------------------------------------------------------

// CMsgSignOutCommunityGoalProgress

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgSignOutCommunityGoalProgress::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSignOutCommunityGoalProgress::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::EEvent CMsgSignOutCommunityGoalProgress::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunityGoalProgress.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgSignOutCommunityGoalProgress::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSignOutCommunityGoalProgress.event_id)
}

// repeated .proto.dota.CMsgSignOutCommunityGoalProgress.EventGoalIncrement event_increments = 2;
inline int CMsgSignOutCommunityGoalProgress::event_increments_size() const {
  return event_increments_.size();
}
inline void CMsgSignOutCommunityGoalProgress::clear_event_increments() {
  event_increments_.Clear();
}
inline ::proto::dota::CMsgSignOutCommunityGoalProgress_EventGoalIncrement* CMsgSignOutCommunityGoalProgress::mutable_event_increments(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgSignOutCommunityGoalProgress.event_increments)
  return event_increments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutCommunityGoalProgress_EventGoalIncrement >*
CMsgSignOutCommunityGoalProgress::mutable_event_increments() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSignOutCommunityGoalProgress.event_increments)
  return &event_increments_;
}
inline const ::proto::dota::CMsgSignOutCommunityGoalProgress_EventGoalIncrement& CMsgSignOutCommunityGoalProgress::event_increments(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSignOutCommunityGoalProgress.event_increments)
  return event_increments_.Get(index);
}
inline ::proto::dota::CMsgSignOutCommunityGoalProgress_EventGoalIncrement* CMsgSignOutCommunityGoalProgress::add_event_increments() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSignOutCommunityGoalProgress.event_increments)
  return event_increments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgSignOutCommunityGoalProgress_EventGoalIncrement >&
CMsgSignOutCommunityGoalProgress::event_increments() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSignOutCommunityGoalProgress.event_increments)
  return event_increments_;
}

// -------------------------------------------------------------------

// CMsgServerToGCPostMatchTip

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgServerToGCPostMatchTip::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCPostMatchTip::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::EEvent CMsgServerToGCPostMatchTip::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCPostMatchTip.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgServerToGCPostMatchTip::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCPostMatchTip.event_id)
}

// optional uint64 match_id = 2;
inline bool CMsgServerToGCPostMatchTip::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCPostMatchTip::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgServerToGCPostMatchTip::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCPostMatchTip.match_id)
  return match_id_;
}
inline void CMsgServerToGCPostMatchTip::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCPostMatchTip.match_id)
}

// optional uint32 tipper_account_id = 3;
inline bool CMsgServerToGCPostMatchTip::has_tipper_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCPostMatchTip::clear_tipper_account_id() {
  tipper_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCPostMatchTip::tipper_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCPostMatchTip.tipper_account_id)
  return tipper_account_id_;
}
inline void CMsgServerToGCPostMatchTip::set_tipper_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  tipper_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCPostMatchTip.tipper_account_id)
}

// optional uint32 recipient_account_id = 4;
inline bool CMsgServerToGCPostMatchTip::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerToGCPostMatchTip::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgServerToGCPostMatchTip::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCPostMatchTip.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgServerToGCPostMatchTip::set_recipient_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCPostMatchTip.recipient_account_id)
}

// optional uint32 tip_amount = 5;
inline bool CMsgServerToGCPostMatchTip::has_tip_amount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgServerToGCPostMatchTip::clear_tip_amount() {
  tip_amount_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgServerToGCPostMatchTip::tip_amount() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCPostMatchTip.tip_amount)
  return tip_amount_;
}
inline void CMsgServerToGCPostMatchTip::set_tip_amount(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  tip_amount_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCPostMatchTip.tip_amount)
}

// -------------------------------------------------------------------

// CMsgServerToGCPostMatchTipResponse

// optional uint64 match_id = 1;
inline bool CMsgServerToGCPostMatchTipResponse::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCPostMatchTipResponse::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgServerToGCPostMatchTipResponse::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCPostMatchTipResponse.match_id)
  return match_id_;
}
inline void CMsgServerToGCPostMatchTipResponse::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCPostMatchTipResponse.match_id)
}

// optional uint32 tipper_account_id = 2;
inline bool CMsgServerToGCPostMatchTipResponse::has_tipper_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCPostMatchTipResponse::clear_tipper_account_id() {
  tipper_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCPostMatchTipResponse::tipper_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCPostMatchTipResponse.tipper_account_id)
  return tipper_account_id_;
}
inline void CMsgServerToGCPostMatchTipResponse::set_tipper_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  tipper_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCPostMatchTipResponse.tipper_account_id)
}

// optional uint32 recipient_account_id = 3;
inline bool CMsgServerToGCPostMatchTipResponse::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCPostMatchTipResponse::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCPostMatchTipResponse::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCPostMatchTipResponse.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgServerToGCPostMatchTipResponse::set_recipient_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCPostMatchTipResponse.recipient_account_id)
}

// optional .proto.dota.CMsgServerToGCPostMatchTipResponse.Result result = 4 [default = SUCCESS];
inline bool CMsgServerToGCPostMatchTipResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerToGCPostMatchTipResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::proto::dota::CMsgServerToGCPostMatchTipResponse_Result CMsgServerToGCPostMatchTipResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCPostMatchTipResponse.result)
  return static_cast< ::proto::dota::CMsgServerToGCPostMatchTipResponse_Result >(result_);
}
inline void CMsgServerToGCPostMatchTipResponse::set_result(::proto::dota::CMsgServerToGCPostMatchTipResponse_Result value) {
  assert(::proto::dota::CMsgServerToGCPostMatchTipResponse_Result_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCPostMatchTipResponse.result)
}

// -------------------------------------------------------------------

// CMsgServerToGCCloseCompendiumInGamePredictionVoting

// optional uint64 match_id = 1;
inline bool CMsgServerToGCCloseCompendiumInGamePredictionVoting::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCCloseCompendiumInGamePredictionVoting::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgServerToGCCloseCompendiumInGamePredictionVoting::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCloseCompendiumInGamePredictionVoting.match_id)
  return match_id_;
}
inline void CMsgServerToGCCloseCompendiumInGamePredictionVoting::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCloseCompendiumInGamePredictionVoting.match_id)
}

// optional uint32 hltv_delay = 2;
inline bool CMsgServerToGCCloseCompendiumInGamePredictionVoting::has_hltv_delay() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCCloseCompendiumInGamePredictionVoting::clear_hltv_delay() {
  hltv_delay_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCCloseCompendiumInGamePredictionVoting::hltv_delay() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCloseCompendiumInGamePredictionVoting.hltv_delay)
  return hltv_delay_;
}
inline void CMsgServerToGCCloseCompendiumInGamePredictionVoting::set_hltv_delay(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hltv_delay_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCloseCompendiumInGamePredictionVoting.hltv_delay)
}

// -------------------------------------------------------------------

// CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse

// optional bool result = 1;
inline bool CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse.result)
  return result_;
}
inline void CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse::set_result(bool value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse.result)
}

// -------------------------------------------------------------------

// CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult

// optional uint32 prediction_id = 1;
inline bool CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult::has_prediction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult::clear_prediction_id() {
  prediction_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult::prediction_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.PredictionResult.prediction_id)
  return prediction_id_;
}
inline void CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult::set_prediction_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  prediction_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.PredictionResult.prediction_id)
}

// optional uint32 prediction_value = 2;
inline bool CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult::has_prediction_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult::clear_prediction_value() {
  prediction_value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult::prediction_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.PredictionResult.prediction_value)
  return prediction_value_;
}
inline void CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult::set_prediction_value(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  prediction_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.PredictionResult.prediction_value)
}

// optional bool prediction_value_is_mask = 3;
inline bool CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult::has_prediction_value_is_mask() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult::clear_prediction_value_is_mask() {
  prediction_value_is_mask_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult::prediction_value_is_mask() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.PredictionResult.prediction_value_is_mask)
  return prediction_value_is_mask_;
}
inline void CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult::set_prediction_value_is_mask(bool value) {
  _has_bits_[0] |= 0x00000004u;
  prediction_value_is_mask_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.PredictionResult.prediction_value_is_mask)
}

// -------------------------------------------------------------------

// CMsgServerToGCCompendiumInGamePredictionResults

// optional uint64 match_id = 1;
inline bool CMsgServerToGCCompendiumInGamePredictionResults::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCCompendiumInGamePredictionResults::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgServerToGCCompendiumInGamePredictionResults::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.match_id)
  return match_id_;
}
inline void CMsgServerToGCCompendiumInGamePredictionResults::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.match_id)
}

// repeated .proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.PredictionResult results = 2;
inline int CMsgServerToGCCompendiumInGamePredictionResults::results_size() const {
  return results_.size();
}
inline void CMsgServerToGCCompendiumInGamePredictionResults::clear_results() {
  results_.Clear();
}
inline ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult* CMsgServerToGCCompendiumInGamePredictionResults::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.results)
  return results_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult >*
CMsgServerToGCCompendiumInGamePredictionResults::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.results)
  return &results_;
}
inline const ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult& CMsgServerToGCCompendiumInGamePredictionResults::results(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.results)
  return results_.Get(index);
}
inline ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult* CMsgServerToGCCompendiumInGamePredictionResults::add_results() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.results)
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults_PredictionResult >&
CMsgServerToGCCompendiumInGamePredictionResults::results() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.results)
  return results_;
}

// optional uint32 league_id = 3;
inline bool CMsgServerToGCCompendiumInGamePredictionResults::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCCompendiumInGamePredictionResults::clear_league_id() {
  league_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCCompendiumInGamePredictionResults::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.league_id)
  return league_id_;
}
inline void CMsgServerToGCCompendiumInGamePredictionResults::set_league_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.league_id)
}

// optional uint32 league_node_id = 4;
inline bool CMsgServerToGCCompendiumInGamePredictionResults::has_league_node_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCCompendiumInGamePredictionResults::clear_league_node_id() {
  league_node_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCCompendiumInGamePredictionResults::league_node_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.league_node_id)
  return league_node_id_;
}
inline void CMsgServerToGCCompendiumInGamePredictionResults::set_league_node_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  league_node_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCompendiumInGamePredictionResults.league_node_id)
}

// -------------------------------------------------------------------

// CMsgServerToGCCompendiumInGamePredictionResultsResponse

// optional bool result = 1;
inline bool CMsgServerToGCCompendiumInGamePredictionResultsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCCompendiumInGamePredictionResultsResponse::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgServerToGCCompendiumInGamePredictionResultsResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCompendiumInGamePredictionResultsResponse.result)
  return result_;
}
inline void CMsgServerToGCCompendiumInGamePredictionResultsResponse::set_result(bool value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCompendiumInGamePredictionResultsResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCToGCCompendiumInGamePredictionResults

// optional .proto.dota.CMsgServerToGCCompendiumInGamePredictionResults results = 1;
inline bool CMsgGCToGCCompendiumInGamePredictionResults::has_results() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToGCCompendiumInGamePredictionResults::clear_results() {
  if (results_ != nullptr) results_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults& CMsgGCToGCCompendiumInGamePredictionResults::results() const {
  const ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults* p = results_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCCompendiumInGamePredictionResults.results)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults*>(
      &::proto::dota::_CMsgServerToGCCompendiumInGamePredictionResults_default_instance_);
}
inline ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults* CMsgGCToGCCompendiumInGamePredictionResults::release_results() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToGCCompendiumInGamePredictionResults.results)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults* temp = results_;
  results_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults* CMsgGCToGCCompendiumInGamePredictionResults::mutable_results() {
  _has_bits_[0] |= 0x00000001u;
  if (results_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults>(GetArenaNoVirtual());
    results_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCCompendiumInGamePredictionResults.results)
  return results_;
}
inline void CMsgGCToGCCompendiumInGamePredictionResults::set_allocated_results(::proto::dota::CMsgServerToGCCompendiumInGamePredictionResults* results) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete results_;
  }
  if (results) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      results = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, results, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  results_ = results;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToGCCompendiumInGamePredictionResults.results)
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase

// optional uint32 item = 1;
inline bool CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::clear_item() {
  item_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::item() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.item)
  return item_;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::set_item(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.item)
}

// optional uint32 gold = 2;
inline bool CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::clear_gold() {
  gold_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::gold() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.gold)
  return gold_;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::set_gold(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  gold_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.gold)
}

// optional uint32 net_worth = 3;
inline bool CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::has_net_worth() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::clear_net_worth() {
  net_worth_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::net_worth() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.net_worth)
  return net_worth_;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::set_net_worth(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  net_worth_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.net_worth)
}

// optional uint32 game_time = 4;
inline bool CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::has_game_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::clear_game_time() {
  game_time_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::game_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.game_time)
  return game_time_;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::set_game_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.game_time)
}

// repeated uint32 inventory_items = 5;
inline int CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::inventory_items_size() const {
  return inventory_items_.size();
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::clear_inventory_items() {
  inventory_items_.Clear();
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::inventory_items(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.inventory_items)
  return inventory_items_.Get(index);
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::set_inventory_items(int index, ::google::protobuf::uint32 value) {
  inventory_items_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.inventory_items)
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::add_inventory_items(::google::protobuf::uint32 value) {
  inventory_items_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.inventory_items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::inventory_items() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.inventory_items)
  return inventory_items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::mutable_inventory_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.inventory_items)
  return &inventory_items_;
}

// repeated bool talents_skilled = 7;
inline int CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::talents_skilled_size() const {
  return talents_skilled_.size();
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::clear_talents_skilled() {
  talents_skilled_.Clear();
}
inline bool CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::talents_skilled(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.talents_skilled)
  return talents_skilled_.Get(index);
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::set_talents_skilled(int index, bool value) {
  talents_skilled_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.talents_skilled)
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::add_talents_skilled(bool value) {
  talents_skilled_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.talents_skilled)
}
inline const ::google::protobuf::RepeatedField< bool >&
CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::talents_skilled() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.talents_skilled)
  return talents_skilled_;
}
inline ::google::protobuf::RepeatedField< bool >*
CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase::mutable_talents_skilled() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase.talents_skilled)
  return &talents_skilled_;
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchPlayerItemPurchaseHistory_Player

// optional uint32 player_slot = 1;
inline bool CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::has_player_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::clear_player_slot() {
  player_slot_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::player_slot() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.player_slot)
  return player_slot_;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::set_player_slot(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_slot_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.player_slot)
}

// optional uint32 account_id = 2;
inline bool CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.account_id)
  return account_id_;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.account_id)
}

// optional uint32 hero_id = 3;
inline bool CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.hero_id)
  return hero_id_;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.hero_id)
}

// repeated uint32 allied_hero_ids = 4;
inline int CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::allied_hero_ids_size() const {
  return allied_hero_ids_.size();
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::clear_allied_hero_ids() {
  allied_hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::allied_hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.allied_hero_ids)
  return allied_hero_ids_.Get(index);
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::set_allied_hero_ids(int index, ::google::protobuf::uint32 value) {
  allied_hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.allied_hero_ids)
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::add_allied_hero_ids(::google::protobuf::uint32 value) {
  allied_hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.allied_hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::allied_hero_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.allied_hero_ids)
  return allied_hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::mutable_allied_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.allied_hero_ids)
  return &allied_hero_ids_;
}

// repeated uint32 enemy_hero_ids = 5;
inline int CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::enemy_hero_ids_size() const {
  return enemy_hero_ids_.size();
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::clear_enemy_hero_ids() {
  enemy_hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::enemy_hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.enemy_hero_ids)
  return enemy_hero_ids_.Get(index);
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::set_enemy_hero_ids(int index, ::google::protobuf::uint32 value) {
  enemy_hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.enemy_hero_ids)
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::add_enemy_hero_ids(::google::protobuf::uint32 value) {
  enemy_hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.enemy_hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::enemy_hero_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.enemy_hero_ids)
  return enemy_hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::mutable_enemy_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.enemy_hero_ids)
  return &enemy_hero_ids_;
}

// repeated .proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.ItemPurchase item_purchases = 6;
inline int CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::item_purchases_size() const {
  return item_purchases_.size();
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::clear_item_purchases() {
  item_purchases_.Clear();
}
inline ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase* CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::mutable_item_purchases(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.item_purchases)
  return item_purchases_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase >*
CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::mutable_item_purchases() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.item_purchases)
  return &item_purchases_;
}
inline const ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase& CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::item_purchases(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.item_purchases)
  return item_purchases_.Get(index);
}
inline ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase* CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::add_item_purchases() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.item_purchases)
  return item_purchases_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_ItemPurchase >&
CMsgServerToGCMatchPlayerItemPurchaseHistory_Player::item_purchases() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player.item_purchases)
  return item_purchases_;
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchPlayerItemPurchaseHistory

// optional uint64 match_id = 1;
inline bool CMsgServerToGCMatchPlayerItemPurchaseHistory::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgServerToGCMatchPlayerItemPurchaseHistory::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.match_id)
  return match_id_;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.match_id)
}

// optional uint32 mmr = 2;
inline bool CMsgServerToGCMatchPlayerItemPurchaseHistory::has_mmr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory::clear_mmr() {
  mmr_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchPlayerItemPurchaseHistory::mmr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.mmr)
  return mmr_;
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory::set_mmr(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  mmr_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.mmr)
}

// repeated .proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.Player players = 3;
inline int CMsgServerToGCMatchPlayerItemPurchaseHistory::players_size() const {
  return players_.size();
}
inline void CMsgServerToGCMatchPlayerItemPurchaseHistory::clear_players() {
  players_.Clear();
}
inline ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_Player* CMsgServerToGCMatchPlayerItemPurchaseHistory::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_Player >*
CMsgServerToGCMatchPlayerItemPurchaseHistory::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.players)
  return &players_;
}
inline const ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_Player& CMsgServerToGCMatchPlayerItemPurchaseHistory::players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.players)
  return players_.Get(index);
}
inline ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_Player* CMsgServerToGCMatchPlayerItemPurchaseHistory::add_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchPlayerItemPurchaseHistory_Player >&
CMsgServerToGCMatchPlayerItemPurchaseHistory::players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCMatchPlayerItemPurchaseHistory.players)
  return players_;
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchStateHistory_PlayerState

// optional uint32 hero_id = 1;
inline bool CMsgServerToGCMatchStateHistory_PlayerState::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_PlayerState::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.hero_id)
  return hero_id_;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.hero_id)
}

// optional uint32 net_worth = 2;
inline bool CMsgServerToGCMatchStateHistory_PlayerState::has_net_worth() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::clear_net_worth() {
  net_worth_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_PlayerState::net_worth() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.net_worth)
  return net_worth_;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::set_net_worth(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  net_worth_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.net_worth)
}

// optional uint32 level = 3;
inline bool CMsgServerToGCMatchStateHistory_PlayerState::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_PlayerState::level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.level)
  return level_;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::set_level(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.level)
}

// optional uint32 deaths = 4;
inline bool CMsgServerToGCMatchStateHistory_PlayerState::has_deaths() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::clear_deaths() {
  deaths_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_PlayerState::deaths() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.deaths)
  return deaths_;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::set_deaths(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  deaths_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.deaths)
}

// optional uint32 respawn_time = 5;
inline bool CMsgServerToGCMatchStateHistory_PlayerState::has_respawn_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::clear_respawn_time() {
  respawn_time_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_PlayerState::respawn_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.respawn_time)
  return respawn_time_;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::set_respawn_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  respawn_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.respawn_time)
}

// optional bool has_buyback = 6;
inline bool CMsgServerToGCMatchStateHistory_PlayerState::has_has_buyback() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::clear_has_buyback() {
  has_buyback_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CMsgServerToGCMatchStateHistory_PlayerState::has_buyback() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.has_buyback)
  return has_buyback_;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::set_has_buyback(bool value) {
  _has_bits_[0] |= 0x00000020u;
  has_buyback_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.has_buyback)
}

// optional bool has_aegis = 7;
inline bool CMsgServerToGCMatchStateHistory_PlayerState::has_has_aegis() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::clear_has_aegis() {
  has_aegis_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CMsgServerToGCMatchStateHistory_PlayerState::has_aegis() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.has_aegis)
  return has_aegis_;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::set_has_aegis(bool value) {
  _has_bits_[0] |= 0x00000040u;
  has_aegis_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.has_aegis)
}

// optional bool has_rapier = 8;
inline bool CMsgServerToGCMatchStateHistory_PlayerState::has_has_rapier() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::clear_has_rapier() {
  has_rapier_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CMsgServerToGCMatchStateHistory_PlayerState::has_rapier() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.has_rapier)
  return has_rapier_;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::set_has_rapier(bool value) {
  _has_bits_[0] |= 0x00000080u;
  has_rapier_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.has_rapier)
}

// optional uint32 distance = 9;
inline bool CMsgServerToGCMatchStateHistory_PlayerState::has_distance() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::clear_distance() {
  distance_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_PlayerState::distance() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.distance)
  return distance_;
}
inline void CMsgServerToGCMatchStateHistory_PlayerState::set_distance(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  distance_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.PlayerState.distance)
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchStateHistory_TeamState

// optional uint32 team = 1;
inline bool CMsgServerToGCMatchStateHistory_TeamState::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::clear_team() {
  team_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_TeamState::team() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.team)
  return team_;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::set_team(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  team_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.team)
}

// repeated .proto.dota.CMsgServerToGCMatchStateHistory.PlayerState player_states = 2;
inline int CMsgServerToGCMatchStateHistory_TeamState::player_states_size() const {
  return player_states_.size();
}
inline void CMsgServerToGCMatchStateHistory_TeamState::clear_player_states() {
  player_states_.Clear();
}
inline ::proto::dota::CMsgServerToGCMatchStateHistory_PlayerState* CMsgServerToGCMatchStateHistory_TeamState::mutable_player_states(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.player_states)
  return player_states_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchStateHistory_PlayerState >*
CMsgServerToGCMatchStateHistory_TeamState::mutable_player_states() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.player_states)
  return &player_states_;
}
inline const ::proto::dota::CMsgServerToGCMatchStateHistory_PlayerState& CMsgServerToGCMatchStateHistory_TeamState::player_states(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.player_states)
  return player_states_.Get(index);
}
inline ::proto::dota::CMsgServerToGCMatchStateHistory_PlayerState* CMsgServerToGCMatchStateHistory_TeamState::add_player_states() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.player_states)
  return player_states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchStateHistory_PlayerState >&
CMsgServerToGCMatchStateHistory_TeamState::player_states() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.player_states)
  return player_states_;
}

// repeated uint32 tower_health_pct = 3;
inline int CMsgServerToGCMatchStateHistory_TeamState::tower_health_pct_size() const {
  return tower_health_pct_.size();
}
inline void CMsgServerToGCMatchStateHistory_TeamState::clear_tower_health_pct() {
  tower_health_pct_.Clear();
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_TeamState::tower_health_pct(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.tower_health_pct)
  return tower_health_pct_.Get(index);
}
inline void CMsgServerToGCMatchStateHistory_TeamState::set_tower_health_pct(int index, ::google::protobuf::uint32 value) {
  tower_health_pct_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.tower_health_pct)
}
inline void CMsgServerToGCMatchStateHistory_TeamState::add_tower_health_pct(::google::protobuf::uint32 value) {
  tower_health_pct_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.tower_health_pct)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgServerToGCMatchStateHistory_TeamState::tower_health_pct() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.tower_health_pct)
  return tower_health_pct_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgServerToGCMatchStateHistory_TeamState::mutable_tower_health_pct() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.tower_health_pct)
  return &tower_health_pct_;
}

// repeated uint32 barracks_health_pct = 4;
inline int CMsgServerToGCMatchStateHistory_TeamState::barracks_health_pct_size() const {
  return barracks_health_pct_.size();
}
inline void CMsgServerToGCMatchStateHistory_TeamState::clear_barracks_health_pct() {
  barracks_health_pct_.Clear();
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_TeamState::barracks_health_pct(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.barracks_health_pct)
  return barracks_health_pct_.Get(index);
}
inline void CMsgServerToGCMatchStateHistory_TeamState::set_barracks_health_pct(int index, ::google::protobuf::uint32 value) {
  barracks_health_pct_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.barracks_health_pct)
}
inline void CMsgServerToGCMatchStateHistory_TeamState::add_barracks_health_pct(::google::protobuf::uint32 value) {
  barracks_health_pct_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.barracks_health_pct)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgServerToGCMatchStateHistory_TeamState::barracks_health_pct() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.barracks_health_pct)
  return barracks_health_pct_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgServerToGCMatchStateHistory_TeamState::mutable_barracks_health_pct() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.barracks_health_pct)
  return &barracks_health_pct_;
}

// optional uint32 ancient_health_pct = 5;
inline bool CMsgServerToGCMatchStateHistory_TeamState::has_ancient_health_pct() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::clear_ancient_health_pct() {
  ancient_health_pct_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_TeamState::ancient_health_pct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.ancient_health_pct)
  return ancient_health_pct_;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::set_ancient_health_pct(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ancient_health_pct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.ancient_health_pct)
}

// optional uint32 glyph_cooldown = 6;
inline bool CMsgServerToGCMatchStateHistory_TeamState::has_glyph_cooldown() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::clear_glyph_cooldown() {
  glyph_cooldown_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_TeamState::glyph_cooldown() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.glyph_cooldown)
  return glyph_cooldown_;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::set_glyph_cooldown(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  glyph_cooldown_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.glyph_cooldown)
}

// optional uint32 kills = 7;
inline bool CMsgServerToGCMatchStateHistory_TeamState::has_kills() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::clear_kills() {
  kills_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_TeamState::kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.kills)
  return kills_;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::set_kills(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.kills)
}

// optional uint32 creep_distance_safe = 8;
inline bool CMsgServerToGCMatchStateHistory_TeamState::has_creep_distance_safe() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::clear_creep_distance_safe() {
  creep_distance_safe_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_TeamState::creep_distance_safe() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.creep_distance_safe)
  return creep_distance_safe_;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::set_creep_distance_safe(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  creep_distance_safe_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.creep_distance_safe)
}

// optional uint32 creep_distance_mid = 9;
inline bool CMsgServerToGCMatchStateHistory_TeamState::has_creep_distance_mid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::clear_creep_distance_mid() {
  creep_distance_mid_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_TeamState::creep_distance_mid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.creep_distance_mid)
  return creep_distance_mid_;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::set_creep_distance_mid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  creep_distance_mid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.creep_distance_mid)
}

// optional uint32 creep_distance_off = 10;
inline bool CMsgServerToGCMatchStateHistory_TeamState::has_creep_distance_off() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::clear_creep_distance_off() {
  creep_distance_off_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_TeamState::creep_distance_off() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.creep_distance_off)
  return creep_distance_off_;
}
inline void CMsgServerToGCMatchStateHistory_TeamState::set_creep_distance_off(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  creep_distance_off_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.TeamState.creep_distance_off)
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchStateHistory_MatchState

// optional uint32 game_time = 1;
inline bool CMsgServerToGCMatchStateHistory_MatchState::has_game_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_MatchState::clear_game_time() {
  game_time_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory_MatchState::game_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.MatchState.game_time)
  return game_time_;
}
inline void CMsgServerToGCMatchStateHistory_MatchState::set_game_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.MatchState.game_time)
}

// optional .proto.dota.CMsgServerToGCMatchStateHistory.TeamState radiant_state = 2;
inline bool CMsgServerToGCMatchStateHistory_MatchState::has_radiant_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_MatchState::clear_radiant_state() {
  if (radiant_state_ != nullptr) radiant_state_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState& CMsgServerToGCMatchStateHistory_MatchState::radiant_state() const {
  const ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* p = radiant_state_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.MatchState.radiant_state)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState*>(
      &::proto::dota::_CMsgServerToGCMatchStateHistory_TeamState_default_instance_);
}
inline ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* CMsgServerToGCMatchStateHistory_MatchState::release_radiant_state() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgServerToGCMatchStateHistory.MatchState.radiant_state)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* temp = radiant_state_;
  radiant_state_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* CMsgServerToGCMatchStateHistory_MatchState::mutable_radiant_state() {
  _has_bits_[0] |= 0x00000001u;
  if (radiant_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgServerToGCMatchStateHistory_TeamState>(GetArenaNoVirtual());
    radiant_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCMatchStateHistory.MatchState.radiant_state)
  return radiant_state_;
}
inline void CMsgServerToGCMatchStateHistory_MatchState::set_allocated_radiant_state(::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* radiant_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete radiant_state_;
  }
  if (radiant_state) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      radiant_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, radiant_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  radiant_state_ = radiant_state;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgServerToGCMatchStateHistory.MatchState.radiant_state)
}

// optional .proto.dota.CMsgServerToGCMatchStateHistory.TeamState dire_state = 3;
inline bool CMsgServerToGCMatchStateHistory_MatchState::has_dire_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCMatchStateHistory_MatchState::clear_dire_state() {
  if (dire_state_ != nullptr) dire_state_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState& CMsgServerToGCMatchStateHistory_MatchState::dire_state() const {
  const ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* p = dire_state_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.MatchState.dire_state)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState*>(
      &::proto::dota::_CMsgServerToGCMatchStateHistory_TeamState_default_instance_);
}
inline ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* CMsgServerToGCMatchStateHistory_MatchState::release_dire_state() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgServerToGCMatchStateHistory.MatchState.dire_state)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* temp = dire_state_;
  dire_state_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* CMsgServerToGCMatchStateHistory_MatchState::mutable_dire_state() {
  _has_bits_[0] |= 0x00000002u;
  if (dire_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgServerToGCMatchStateHistory_TeamState>(GetArenaNoVirtual());
    dire_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCMatchStateHistory.MatchState.dire_state)
  return dire_state_;
}
inline void CMsgServerToGCMatchStateHistory_MatchState::set_allocated_dire_state(::proto::dota::CMsgServerToGCMatchStateHistory_TeamState* dire_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete dire_state_;
  }
  if (dire_state) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dire_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dire_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dire_state_ = dire_state;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgServerToGCMatchStateHistory.MatchState.dire_state)
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchStateHistory

// optional uint64 match_id = 1;
inline bool CMsgServerToGCMatchStateHistory::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCMatchStateHistory::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgServerToGCMatchStateHistory::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.match_id)
  return match_id_;
}
inline void CMsgServerToGCMatchStateHistory::set_match_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.match_id)
}

// optional bool radiant_won = 2;
inline bool CMsgServerToGCMatchStateHistory::has_radiant_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCMatchStateHistory::clear_radiant_won() {
  radiant_won_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgServerToGCMatchStateHistory::radiant_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.radiant_won)
  return radiant_won_;
}
inline void CMsgServerToGCMatchStateHistory::set_radiant_won(bool value) {
  _has_bits_[0] |= 0x00000002u;
  radiant_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.radiant_won)
}

// optional uint32 mmr = 3;
inline bool CMsgServerToGCMatchStateHistory::has_mmr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCMatchStateHistory::clear_mmr() {
  mmr_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCMatchStateHistory::mmr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.mmr)
  return mmr_;
}
inline void CMsgServerToGCMatchStateHistory::set_mmr(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  mmr_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchStateHistory.mmr)
}

// repeated .proto.dota.CMsgServerToGCMatchStateHistory.MatchState match_states = 4;
inline int CMsgServerToGCMatchStateHistory::match_states_size() const {
  return match_states_.size();
}
inline void CMsgServerToGCMatchStateHistory::clear_match_states() {
  match_states_.Clear();
}
inline ::proto::dota::CMsgServerToGCMatchStateHistory_MatchState* CMsgServerToGCMatchStateHistory::mutable_match_states(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerToGCMatchStateHistory.match_states)
  return match_states_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchStateHistory_MatchState >*
CMsgServerToGCMatchStateHistory::mutable_match_states() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCMatchStateHistory.match_states)
  return &match_states_;
}
inline const ::proto::dota::CMsgServerToGCMatchStateHistory_MatchState& CMsgServerToGCMatchStateHistory::match_states(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchStateHistory.match_states)
  return match_states_.Get(index);
}
inline ::proto::dota::CMsgServerToGCMatchStateHistory_MatchState* CMsgServerToGCMatchStateHistory::add_match_states() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCMatchStateHistory.match_states)
  return match_states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerToGCMatchStateHistory_MatchState >&
CMsgServerToGCMatchStateHistory::match_states() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCMatchStateHistory.match_states)
  return match_states_;
}

// -------------------------------------------------------------------

// CMsgServerToGCCavernCrawlIsHeroActive

// optional uint32 event_id = 1;
inline bool CMsgServerToGCCavernCrawlIsHeroActive::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCCavernCrawlIsHeroActive::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgServerToGCCavernCrawlIsHeroActive::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCavernCrawlIsHeroActive.event_id)
  return event_id_;
}
inline void CMsgServerToGCCavernCrawlIsHeroActive::set_event_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCavernCrawlIsHeroActive.event_id)
}

// optional uint32 account_id = 2;
inline bool CMsgServerToGCCavernCrawlIsHeroActive::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCCavernCrawlIsHeroActive::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCCavernCrawlIsHeroActive::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCavernCrawlIsHeroActive.account_id)
  return account_id_;
}
inline void CMsgServerToGCCavernCrawlIsHeroActive::set_account_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCavernCrawlIsHeroActive.account_id)
}

// optional uint32 hero_id = 3;
inline bool CMsgServerToGCCavernCrawlIsHeroActive::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerToGCCavernCrawlIsHeroActive::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgServerToGCCavernCrawlIsHeroActive::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCavernCrawlIsHeroActive.hero_id)
  return hero_id_;
}
inline void CMsgServerToGCCavernCrawlIsHeroActive::set_hero_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCavernCrawlIsHeroActive.hero_id)
}

// -------------------------------------------------------------------

// CMsgServerToGCCavernCrawlIsHeroActiveResponse

// optional bool result = 1;
inline bool CMsgServerToGCCavernCrawlIsHeroActiveResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerToGCCavernCrawlIsHeroActiveResponse::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgServerToGCCavernCrawlIsHeroActiveResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCavernCrawlIsHeroActiveResponse.result)
  return result_;
}
inline void CMsgServerToGCCavernCrawlIsHeroActiveResponse::set_result(bool value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCavernCrawlIsHeroActiveResponse.result)
}

// optional uint32 potential_winnings = 2;
inline bool CMsgServerToGCCavernCrawlIsHeroActiveResponse::has_potential_winnings() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerToGCCavernCrawlIsHeroActiveResponse::clear_potential_winnings() {
  potential_winnings_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgServerToGCCavernCrawlIsHeroActiveResponse::potential_winnings() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCCavernCrawlIsHeroActiveResponse.potential_winnings)
  return potential_winnings_;
}
inline void CMsgServerToGCCavernCrawlIsHeroActiveResponse::set_potential_winnings(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  potential_winnings_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCCavernCrawlIsHeroActiveResponse.potential_winnings)
}

// -------------------------------------------------------------------

// CMsgGCtoServerTensorflowInstance

// optional uint32 server_instance = 1;
inline bool CMsgGCtoServerTensorflowInstance::has_server_instance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCtoServerTensorflowInstance::clear_server_instance() {
  server_instance_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CMsgGCtoServerTensorflowInstance::server_instance() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCtoServerTensorflowInstance.server_instance)
  return server_instance_;
}
inline void CMsgGCtoServerTensorflowInstance::set_server_instance(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  server_instance_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCtoServerTensorflowInstance.server_instance)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::dota::CMsgConnectedPlayers_SendReason> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgConnectedPlayers_SendReason>() {
  return ::proto::dota::CMsgConnectedPlayers_SendReason_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgGameServerInfo_ServerType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgGameServerInfo_ServerType>() {
  return ::proto::dota::CMsgGameServerInfo_ServerType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgGameServerInfo_CustomGames> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgGameServerInfo_CustomGames>() {
  return ::proto::dota::CMsgGameServerInfo_CustomGames_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState>() {
  return ::proto::dota::CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgGameServerSaveGameResult_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgGameServerSaveGameResult_Result>() {
  return ::proto::dota::CMsgGameServerSaveGameResult_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgGCToServerPredictionResult_Prediction_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgGCToServerPredictionResult_Prediction_EResult>() {
  return ::proto::dota::CMsgGCToServerPredictionResult_Prediction_EResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgServerToGCPostMatchTipResponse_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgServerToGCPostMatchTipResponse_Result>() {
  return ::proto::dota::CMsgServerToGCPostMatchTipResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EPoorNetworkConditionsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EPoorNetworkConditionsType>() {
  return ::proto::dota::EPoorNetworkConditionsType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EAbilityAbuseType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EAbilityAbuseType>() {
  return ::proto::dota::EAbilityAbuseType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EIntentionalFeedingType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EIntentionalFeedingType>() {
  return ::proto::dota::EIntentionalFeedingType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::ESuspiciousActivity> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::ESuspiciousActivity>() {
  return ::proto::dota::ESuspiciousActivity_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::ESuspiciousBuildType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::ESuspiciousBuildType>() {
  return ::proto::dota::ESuspiciousBuildType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_dota_5fgcmessages_5fserver_2eproto
