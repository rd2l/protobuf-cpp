// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netmessages.proto

#ifndef PROTOBUF_INCLUDED_netmessages_2eproto
#define PROTOBUF_INCLUDED_netmessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "networkbasetypes.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_netmessages_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_netmessages_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[65]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_netmessages_2eproto();
namespace proto {
namespace dota {
class CBidirMsg_RebroadcastGameEvent;
class CBidirMsg_RebroadcastGameEventDefaultTypeInternal;
extern CBidirMsg_RebroadcastGameEventDefaultTypeInternal _CBidirMsg_RebroadcastGameEvent_default_instance_;
class CBidirMsg_RebroadcastSource;
class CBidirMsg_RebroadcastSourceDefaultTypeInternal;
extern CBidirMsg_RebroadcastSourceDefaultTypeInternal _CBidirMsg_RebroadcastSource_default_instance_;
class CBidirMsg_RelayInfo;
class CBidirMsg_RelayInfoDefaultTypeInternal;
extern CBidirMsg_RelayInfoDefaultTypeInternal _CBidirMsg_RelayInfo_default_instance_;
class CBidirMsg_RelayPacket;
class CBidirMsg_RelayPacketDefaultTypeInternal;
extern CBidirMsg_RelayPacketDefaultTypeInternal _CBidirMsg_RelayPacket_default_instance_;
class CBidirMsg_RelayPacket_SignedDestinationAddress_t;
class CBidirMsg_RelayPacket_SignedDestinationAddress_tDefaultTypeInternal;
extern CBidirMsg_RelayPacket_SignedDestinationAddress_tDefaultTypeInternal _CBidirMsg_RelayPacket_SignedDestinationAddress_t_default_instance_;
class CCLCMsg_BaselineAck;
class CCLCMsg_BaselineAckDefaultTypeInternal;
extern CCLCMsg_BaselineAckDefaultTypeInternal _CCLCMsg_BaselineAck_default_instance_;
class CCLCMsg_ClientInfo;
class CCLCMsg_ClientInfoDefaultTypeInternal;
extern CCLCMsg_ClientInfoDefaultTypeInternal _CCLCMsg_ClientInfo_default_instance_;
class CCLCMsg_ClientMessage;
class CCLCMsg_ClientMessageDefaultTypeInternal;
extern CCLCMsg_ClientMessageDefaultTypeInternal _CCLCMsg_ClientMessage_default_instance_;
class CCLCMsg_CmdKeyValues;
class CCLCMsg_CmdKeyValuesDefaultTypeInternal;
extern CCLCMsg_CmdKeyValuesDefaultTypeInternal _CCLCMsg_CmdKeyValues_default_instance_;
class CCLCMsg_FileCRCCheck;
class CCLCMsg_FileCRCCheckDefaultTypeInternal;
extern CCLCMsg_FileCRCCheckDefaultTypeInternal _CCLCMsg_FileCRCCheck_default_instance_;
class CCLCMsg_ListenEvents;
class CCLCMsg_ListenEventsDefaultTypeInternal;
extern CCLCMsg_ListenEventsDefaultTypeInternal _CCLCMsg_ListenEvents_default_instance_;
class CCLCMsg_LoadingProgress;
class CCLCMsg_LoadingProgressDefaultTypeInternal;
extern CCLCMsg_LoadingProgressDefaultTypeInternal _CCLCMsg_LoadingProgress_default_instance_;
class CCLCMsg_Move;
class CCLCMsg_MoveDefaultTypeInternal;
extern CCLCMsg_MoveDefaultTypeInternal _CCLCMsg_Move_default_instance_;
class CCLCMsg_RequestPause;
class CCLCMsg_RequestPauseDefaultTypeInternal;
extern CCLCMsg_RequestPauseDefaultTypeInternal _CCLCMsg_RequestPause_default_instance_;
class CCLCMsg_RespondCvarValue;
class CCLCMsg_RespondCvarValueDefaultTypeInternal;
extern CCLCMsg_RespondCvarValueDefaultTypeInternal _CCLCMsg_RespondCvarValue_default_instance_;
class CCLCMsg_ServerPing;
class CCLCMsg_ServerPingDefaultTypeInternal;
extern CCLCMsg_ServerPingDefaultTypeInternal _CCLCMsg_ServerPing_default_instance_;
class CCLCMsg_ServerStatus;
class CCLCMsg_ServerStatusDefaultTypeInternal;
extern CCLCMsg_ServerStatusDefaultTypeInternal _CCLCMsg_ServerStatus_default_instance_;
class CCLCMsg_SplitPlayerConnect;
class CCLCMsg_SplitPlayerConnectDefaultTypeInternal;
extern CCLCMsg_SplitPlayerConnectDefaultTypeInternal _CCLCMsg_SplitPlayerConnect_default_instance_;
class CCLCMsg_SplitPlayerDisconnect;
class CCLCMsg_SplitPlayerDisconnectDefaultTypeInternal;
extern CCLCMsg_SplitPlayerDisconnectDefaultTypeInternal _CCLCMsg_SplitPlayerDisconnect_default_instance_;
class CCLCMsg_VoiceData;
class CCLCMsg_VoiceDataDefaultTypeInternal;
extern CCLCMsg_VoiceDataDefaultTypeInternal _CCLCMsg_VoiceData_default_instance_;
class CMsgIPCAddress;
class CMsgIPCAddressDefaultTypeInternal;
extern CMsgIPCAddressDefaultTypeInternal _CMsgIPCAddress_default_instance_;
class CMsgServerNetworkStats;
class CMsgServerNetworkStatsDefaultTypeInternal;
extern CMsgServerNetworkStatsDefaultTypeInternal _CMsgServerNetworkStats_default_instance_;
class CMsgServerNetworkStats_Player;
class CMsgServerNetworkStats_PlayerDefaultTypeInternal;
extern CMsgServerNetworkStats_PlayerDefaultTypeInternal _CMsgServerNetworkStats_Player_default_instance_;
class CMsgServerNetworkStats_Port;
class CMsgServerNetworkStats_PortDefaultTypeInternal;
extern CMsgServerNetworkStats_PortDefaultTypeInternal _CMsgServerNetworkStats_Port_default_instance_;
class CMsgServerPeer;
class CMsgServerPeerDefaultTypeInternal;
extern CMsgServerPeerDefaultTypeInternal _CMsgServerPeer_default_instance_;
class CMsgVoiceAudio;
class CMsgVoiceAudioDefaultTypeInternal;
extern CMsgVoiceAudioDefaultTypeInternal _CMsgVoiceAudio_default_instance_;
class CSVCMsg_BSPDecal;
class CSVCMsg_BSPDecalDefaultTypeInternal;
extern CSVCMsg_BSPDecalDefaultTypeInternal _CSVCMsg_BSPDecal_default_instance_;
class CSVCMsg_ClassInfo;
class CSVCMsg_ClassInfoDefaultTypeInternal;
extern CSVCMsg_ClassInfoDefaultTypeInternal _CSVCMsg_ClassInfo_default_instance_;
class CSVCMsg_ClassInfo_class_t;
class CSVCMsg_ClassInfo_class_tDefaultTypeInternal;
extern CSVCMsg_ClassInfo_class_tDefaultTypeInternal _CSVCMsg_ClassInfo_class_t_default_instance_;
class CSVCMsg_ClearAllStringTables;
class CSVCMsg_ClearAllStringTablesDefaultTypeInternal;
extern CSVCMsg_ClearAllStringTablesDefaultTypeInternal _CSVCMsg_ClearAllStringTables_default_instance_;
class CSVCMsg_CmdKeyValues;
class CSVCMsg_CmdKeyValuesDefaultTypeInternal;
extern CSVCMsg_CmdKeyValuesDefaultTypeInternal _CSVCMsg_CmdKeyValues_default_instance_;
class CSVCMsg_CreateStringTable;
class CSVCMsg_CreateStringTableDefaultTypeInternal;
extern CSVCMsg_CreateStringTableDefaultTypeInternal _CSVCMsg_CreateStringTable_default_instance_;
class CSVCMsg_CrosshairAngle;
class CSVCMsg_CrosshairAngleDefaultTypeInternal;
extern CSVCMsg_CrosshairAngleDefaultTypeInternal _CSVCMsg_CrosshairAngle_default_instance_;
class CSVCMsg_FixAngle;
class CSVCMsg_FixAngleDefaultTypeInternal;
extern CSVCMsg_FixAngleDefaultTypeInternal _CSVCMsg_FixAngle_default_instance_;
class CSVCMsg_FlattenedSerializer;
class CSVCMsg_FlattenedSerializerDefaultTypeInternal;
extern CSVCMsg_FlattenedSerializerDefaultTypeInternal _CSVCMsg_FlattenedSerializer_default_instance_;
class CSVCMsg_FullFrameSplit;
class CSVCMsg_FullFrameSplitDefaultTypeInternal;
extern CSVCMsg_FullFrameSplitDefaultTypeInternal _CSVCMsg_FullFrameSplit_default_instance_;
class CSVCMsg_GameEventList;
class CSVCMsg_GameEventListDefaultTypeInternal;
extern CSVCMsg_GameEventListDefaultTypeInternal _CSVCMsg_GameEventList_default_instance_;
class CSVCMsg_GameEventList_descriptor_t;
class CSVCMsg_GameEventList_descriptor_tDefaultTypeInternal;
extern CSVCMsg_GameEventList_descriptor_tDefaultTypeInternal _CSVCMsg_GameEventList_descriptor_t_default_instance_;
class CSVCMsg_GameEventList_key_t;
class CSVCMsg_GameEventList_key_tDefaultTypeInternal;
extern CSVCMsg_GameEventList_key_tDefaultTypeInternal _CSVCMsg_GameEventList_key_t_default_instance_;
class CSVCMsg_GetCvarValue;
class CSVCMsg_GetCvarValueDefaultTypeInternal;
extern CSVCMsg_GetCvarValueDefaultTypeInternal _CSVCMsg_GetCvarValue_default_instance_;
class CSVCMsg_HLTVStatus;
class CSVCMsg_HLTVStatusDefaultTypeInternal;
extern CSVCMsg_HLTVStatusDefaultTypeInternal _CSVCMsg_HLTVStatus_default_instance_;
class CSVCMsg_Menu;
class CSVCMsg_MenuDefaultTypeInternal;
extern CSVCMsg_MenuDefaultTypeInternal _CSVCMsg_Menu_default_instance_;
class CSVCMsg_PacketEntities;
class CSVCMsg_PacketEntitiesDefaultTypeInternal;
extern CSVCMsg_PacketEntitiesDefaultTypeInternal _CSVCMsg_PacketEntities_default_instance_;
class CSVCMsg_PacketReliable;
class CSVCMsg_PacketReliableDefaultTypeInternal;
extern CSVCMsg_PacketReliableDefaultTypeInternal _CSVCMsg_PacketReliable_default_instance_;
class CSVCMsg_PeerList;
class CSVCMsg_PeerListDefaultTypeInternal;
extern CSVCMsg_PeerListDefaultTypeInternal _CSVCMsg_PeerList_default_instance_;
class CSVCMsg_Prefetch;
class CSVCMsg_PrefetchDefaultTypeInternal;
extern CSVCMsg_PrefetchDefaultTypeInternal _CSVCMsg_Prefetch_default_instance_;
class CSVCMsg_Print;
class CSVCMsg_PrintDefaultTypeInternal;
extern CSVCMsg_PrintDefaultTypeInternal _CSVCMsg_Print_default_instance_;
class CSVCMsg_SendTable;
class CSVCMsg_SendTableDefaultTypeInternal;
extern CSVCMsg_SendTableDefaultTypeInternal _CSVCMsg_SendTable_default_instance_;
class CSVCMsg_SendTable_sendprop_t;
class CSVCMsg_SendTable_sendprop_tDefaultTypeInternal;
extern CSVCMsg_SendTable_sendprop_tDefaultTypeInternal _CSVCMsg_SendTable_sendprop_t_default_instance_;
class CSVCMsg_ServerInfo;
class CSVCMsg_ServerInfoDefaultTypeInternal;
extern CSVCMsg_ServerInfoDefaultTypeInternal _CSVCMsg_ServerInfo_default_instance_;
class CSVCMsg_ServerSteamID;
class CSVCMsg_ServerSteamIDDefaultTypeInternal;
extern CSVCMsg_ServerSteamIDDefaultTypeInternal _CSVCMsg_ServerSteamID_default_instance_;
class CSVCMsg_SetPause;
class CSVCMsg_SetPauseDefaultTypeInternal;
extern CSVCMsg_SetPauseDefaultTypeInternal _CSVCMsg_SetPause_default_instance_;
class CSVCMsg_SetView;
class CSVCMsg_SetViewDefaultTypeInternal;
extern CSVCMsg_SetViewDefaultTypeInternal _CSVCMsg_SetView_default_instance_;
class CSVCMsg_Sounds;
class CSVCMsg_SoundsDefaultTypeInternal;
extern CSVCMsg_SoundsDefaultTypeInternal _CSVCMsg_Sounds_default_instance_;
class CSVCMsg_Sounds_sounddata_t;
class CSVCMsg_Sounds_sounddata_tDefaultTypeInternal;
extern CSVCMsg_Sounds_sounddata_tDefaultTypeInternal _CSVCMsg_Sounds_sounddata_t_default_instance_;
class CSVCMsg_SplitScreen;
class CSVCMsg_SplitScreenDefaultTypeInternal;
extern CSVCMsg_SplitScreenDefaultTypeInternal _CSVCMsg_SplitScreen_default_instance_;
class CSVCMsg_StopSound;
class CSVCMsg_StopSoundDefaultTypeInternal;
extern CSVCMsg_StopSoundDefaultTypeInternal _CSVCMsg_StopSound_default_instance_;
class CSVCMsg_TempEntities;
class CSVCMsg_TempEntitiesDefaultTypeInternal;
extern CSVCMsg_TempEntitiesDefaultTypeInternal _CSVCMsg_TempEntities_default_instance_;
class CSVCMsg_UpdateStringTable;
class CSVCMsg_UpdateStringTableDefaultTypeInternal;
extern CSVCMsg_UpdateStringTableDefaultTypeInternal _CSVCMsg_UpdateStringTable_default_instance_;
class CSVCMsg_VoiceData;
class CSVCMsg_VoiceDataDefaultTypeInternal;
extern CSVCMsg_VoiceDataDefaultTypeInternal _CSVCMsg_VoiceData_default_instance_;
class CSVCMsg_VoiceInit;
class CSVCMsg_VoiceInitDefaultTypeInternal;
extern CSVCMsg_VoiceInitDefaultTypeInternal _CSVCMsg_VoiceInit_default_instance_;
class ProtoFlattenedSerializerField_t;
class ProtoFlattenedSerializerField_tDefaultTypeInternal;
extern ProtoFlattenedSerializerField_tDefaultTypeInternal _ProtoFlattenedSerializerField_t_default_instance_;
class ProtoFlattenedSerializer_t;
class ProtoFlattenedSerializer_tDefaultTypeInternal;
extern ProtoFlattenedSerializer_tDefaultTypeInternal _ProtoFlattenedSerializer_t_default_instance_;
class SerializedNetAddress_t;
class SerializedNetAddress_tDefaultTypeInternal;
extern SerializedNetAddress_tDefaultTypeInternal _SerializedNetAddress_t_default_instance_;
class SignedPayload_t;
class SignedPayload_tDefaultTypeInternal;
extern SignedPayload_tDefaultTypeInternal _SignedPayload_t_default_instance_;
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::dota::CBidirMsg_RebroadcastGameEvent* Arena::CreateMaybeMessage<::proto::dota::CBidirMsg_RebroadcastGameEvent>(Arena*);
template<> ::proto::dota::CBidirMsg_RebroadcastSource* Arena::CreateMaybeMessage<::proto::dota::CBidirMsg_RebroadcastSource>(Arena*);
template<> ::proto::dota::CBidirMsg_RelayInfo* Arena::CreateMaybeMessage<::proto::dota::CBidirMsg_RelayInfo>(Arena*);
template<> ::proto::dota::CBidirMsg_RelayPacket* Arena::CreateMaybeMessage<::proto::dota::CBidirMsg_RelayPacket>(Arena*);
template<> ::proto::dota::CBidirMsg_RelayPacket_SignedDestinationAddress_t* Arena::CreateMaybeMessage<::proto::dota::CBidirMsg_RelayPacket_SignedDestinationAddress_t>(Arena*);
template<> ::proto::dota::CCLCMsg_BaselineAck* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_BaselineAck>(Arena*);
template<> ::proto::dota::CCLCMsg_ClientInfo* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_ClientInfo>(Arena*);
template<> ::proto::dota::CCLCMsg_ClientMessage* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_ClientMessage>(Arena*);
template<> ::proto::dota::CCLCMsg_CmdKeyValues* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_CmdKeyValues>(Arena*);
template<> ::proto::dota::CCLCMsg_FileCRCCheck* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_FileCRCCheck>(Arena*);
template<> ::proto::dota::CCLCMsg_ListenEvents* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_ListenEvents>(Arena*);
template<> ::proto::dota::CCLCMsg_LoadingProgress* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_LoadingProgress>(Arena*);
template<> ::proto::dota::CCLCMsg_Move* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_Move>(Arena*);
template<> ::proto::dota::CCLCMsg_RequestPause* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_RequestPause>(Arena*);
template<> ::proto::dota::CCLCMsg_RespondCvarValue* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_RespondCvarValue>(Arena*);
template<> ::proto::dota::CCLCMsg_ServerPing* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_ServerPing>(Arena*);
template<> ::proto::dota::CCLCMsg_ServerStatus* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_ServerStatus>(Arena*);
template<> ::proto::dota::CCLCMsg_SplitPlayerConnect* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_SplitPlayerConnect>(Arena*);
template<> ::proto::dota::CCLCMsg_SplitPlayerDisconnect* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_SplitPlayerDisconnect>(Arena*);
template<> ::proto::dota::CCLCMsg_VoiceData* Arena::CreateMaybeMessage<::proto::dota::CCLCMsg_VoiceData>(Arena*);
template<> ::proto::dota::CMsgIPCAddress* Arena::CreateMaybeMessage<::proto::dota::CMsgIPCAddress>(Arena*);
template<> ::proto::dota::CMsgServerNetworkStats* Arena::CreateMaybeMessage<::proto::dota::CMsgServerNetworkStats>(Arena*);
template<> ::proto::dota::CMsgServerNetworkStats_Player* Arena::CreateMaybeMessage<::proto::dota::CMsgServerNetworkStats_Player>(Arena*);
template<> ::proto::dota::CMsgServerNetworkStats_Port* Arena::CreateMaybeMessage<::proto::dota::CMsgServerNetworkStats_Port>(Arena*);
template<> ::proto::dota::CMsgServerPeer* Arena::CreateMaybeMessage<::proto::dota::CMsgServerPeer>(Arena*);
template<> ::proto::dota::CMsgVoiceAudio* Arena::CreateMaybeMessage<::proto::dota::CMsgVoiceAudio>(Arena*);
template<> ::proto::dota::CSVCMsg_BSPDecal* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_BSPDecal>(Arena*);
template<> ::proto::dota::CSVCMsg_ClassInfo* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_ClassInfo>(Arena*);
template<> ::proto::dota::CSVCMsg_ClassInfo_class_t* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_ClassInfo_class_t>(Arena*);
template<> ::proto::dota::CSVCMsg_ClearAllStringTables* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_ClearAllStringTables>(Arena*);
template<> ::proto::dota::CSVCMsg_CmdKeyValues* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_CmdKeyValues>(Arena*);
template<> ::proto::dota::CSVCMsg_CreateStringTable* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_CreateStringTable>(Arena*);
template<> ::proto::dota::CSVCMsg_CrosshairAngle* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_CrosshairAngle>(Arena*);
template<> ::proto::dota::CSVCMsg_FixAngle* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_FixAngle>(Arena*);
template<> ::proto::dota::CSVCMsg_FlattenedSerializer* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_FlattenedSerializer>(Arena*);
template<> ::proto::dota::CSVCMsg_FullFrameSplit* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_FullFrameSplit>(Arena*);
template<> ::proto::dota::CSVCMsg_GameEventList* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_GameEventList>(Arena*);
template<> ::proto::dota::CSVCMsg_GameEventList_descriptor_t* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_GameEventList_descriptor_t>(Arena*);
template<> ::proto::dota::CSVCMsg_GameEventList_key_t* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_GameEventList_key_t>(Arena*);
template<> ::proto::dota::CSVCMsg_GetCvarValue* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_GetCvarValue>(Arena*);
template<> ::proto::dota::CSVCMsg_HLTVStatus* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_HLTVStatus>(Arena*);
template<> ::proto::dota::CSVCMsg_Menu* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_Menu>(Arena*);
template<> ::proto::dota::CSVCMsg_PacketEntities* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_PacketEntities>(Arena*);
template<> ::proto::dota::CSVCMsg_PacketReliable* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_PacketReliable>(Arena*);
template<> ::proto::dota::CSVCMsg_PeerList* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_PeerList>(Arena*);
template<> ::proto::dota::CSVCMsg_Prefetch* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_Prefetch>(Arena*);
template<> ::proto::dota::CSVCMsg_Print* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_Print>(Arena*);
template<> ::proto::dota::CSVCMsg_SendTable* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_SendTable>(Arena*);
template<> ::proto::dota::CSVCMsg_SendTable_sendprop_t* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_SendTable_sendprop_t>(Arena*);
template<> ::proto::dota::CSVCMsg_ServerInfo* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_ServerInfo>(Arena*);
template<> ::proto::dota::CSVCMsg_ServerSteamID* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_ServerSteamID>(Arena*);
template<> ::proto::dota::CSVCMsg_SetPause* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_SetPause>(Arena*);
template<> ::proto::dota::CSVCMsg_SetView* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_SetView>(Arena*);
template<> ::proto::dota::CSVCMsg_Sounds* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_Sounds>(Arena*);
template<> ::proto::dota::CSVCMsg_Sounds_sounddata_t* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_Sounds_sounddata_t>(Arena*);
template<> ::proto::dota::CSVCMsg_SplitScreen* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_SplitScreen>(Arena*);
template<> ::proto::dota::CSVCMsg_StopSound* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_StopSound>(Arena*);
template<> ::proto::dota::CSVCMsg_TempEntities* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_TempEntities>(Arena*);
template<> ::proto::dota::CSVCMsg_UpdateStringTable* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_UpdateStringTable>(Arena*);
template<> ::proto::dota::CSVCMsg_VoiceData* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_VoiceData>(Arena*);
template<> ::proto::dota::CSVCMsg_VoiceInit* Arena::CreateMaybeMessage<::proto::dota::CSVCMsg_VoiceInit>(Arena*);
template<> ::proto::dota::ProtoFlattenedSerializerField_t* Arena::CreateMaybeMessage<::proto::dota::ProtoFlattenedSerializerField_t>(Arena*);
template<> ::proto::dota::ProtoFlattenedSerializer_t* Arena::CreateMaybeMessage<::proto::dota::ProtoFlattenedSerializer_t>(Arena*);
template<> ::proto::dota::SerializedNetAddress_t* Arena::CreateMaybeMessage<::proto::dota::SerializedNetAddress_t>(Arena*);
template<> ::proto::dota::SignedPayload_t* Arena::CreateMaybeMessage<::proto::dota::SignedPayload_t>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace dota {

enum CBidirMsg_RelayInfo_Operation_t {
  CBidirMsg_RelayInfo_Operation_t_RIO_REQUEST_RELAY = 0,
  CBidirMsg_RelayInfo_Operation_t_RIO_WILL_RELAY = 1,
  CBidirMsg_RelayInfo_Operation_t_RIO_NO_ROUTE = 2,
  CBidirMsg_RelayInfo_Operation_t_RIO_REJECT_RELAY = 3,
  CBidirMsg_RelayInfo_Operation_t_RIO_ESTABLISH_CONNECTION = 4
};
bool CBidirMsg_RelayInfo_Operation_t_IsValid(int value);
const CBidirMsg_RelayInfo_Operation_t CBidirMsg_RelayInfo_Operation_t_Operation_t_MIN = CBidirMsg_RelayInfo_Operation_t_RIO_REQUEST_RELAY;
const CBidirMsg_RelayInfo_Operation_t CBidirMsg_RelayInfo_Operation_t_Operation_t_MAX = CBidirMsg_RelayInfo_Operation_t_RIO_ESTABLISH_CONNECTION;
const int CBidirMsg_RelayInfo_Operation_t_Operation_t_ARRAYSIZE = CBidirMsg_RelayInfo_Operation_t_Operation_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* CBidirMsg_RelayInfo_Operation_t_descriptor();
inline const ::std::string& CBidirMsg_RelayInfo_Operation_t_Name(CBidirMsg_RelayInfo_Operation_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    CBidirMsg_RelayInfo_Operation_t_descriptor(), value);
}
inline bool CBidirMsg_RelayInfo_Operation_t_Parse(
    const ::std::string& name, CBidirMsg_RelayInfo_Operation_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CBidirMsg_RelayInfo_Operation_t>(
    CBidirMsg_RelayInfo_Operation_t_descriptor(), name, value);
}
enum CLC_Messages {
  clc_ClientInfo = 20,
  clc_Move = 21,
  clc_VoiceData = 22,
  clc_BaselineAck = 23,
  clc_ListenEvents = 24,
  clc_RespondCvarValue = 25,
  clc_FileCRCCheck = 26,
  clc_LoadingProgress = 27,
  clc_SplitPlayerConnect = 28,
  clc_ClientMessage = 29,
  clc_SplitPlayerDisconnect = 30,
  clc_ServerStatus = 31,
  clc_ServerPing = 32,
  clc_RequestPause = 33,
  clc_CmdKeyValues = 34
};
bool CLC_Messages_IsValid(int value);
const CLC_Messages CLC_Messages_MIN = clc_ClientInfo;
const CLC_Messages CLC_Messages_MAX = clc_CmdKeyValues;
const int CLC_Messages_ARRAYSIZE = CLC_Messages_MAX + 1;

const ::google::protobuf::EnumDescriptor* CLC_Messages_descriptor();
inline const ::std::string& CLC_Messages_Name(CLC_Messages value) {
  return ::google::protobuf::internal::NameOfEnum(
    CLC_Messages_descriptor(), value);
}
inline bool CLC_Messages_Parse(
    const ::std::string& name, CLC_Messages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CLC_Messages>(
    CLC_Messages_descriptor(), name, value);
}
enum SVC_Messages {
  svc_ServerInfo = 40,
  svc_FlattenedSerializer = 41,
  svc_ClassInfo = 42,
  svc_SetPause = 43,
  svc_CreateStringTable = 44,
  svc_UpdateStringTable = 45,
  svc_VoiceInit = 46,
  svc_VoiceData = 47,
  svc_Print = 48,
  svc_Sounds = 49,
  svc_SetView = 50,
  svc_ClearAllStringTables = 51,
  svc_CmdKeyValues = 52,
  svc_BSPDecal = 53,
  svc_SplitScreen = 54,
  svc_PacketEntities = 55,
  svc_Prefetch = 56,
  svc_Menu = 57,
  svc_GetCvarValue = 58,
  svc_StopSound = 59,
  svc_PeerList = 60,
  svc_PacketReliable = 61,
  svc_HLTVStatus = 62,
  svc_ServerSteamID = 63,
  svc_FullFrameSplit = 70
};
bool SVC_Messages_IsValid(int value);
const SVC_Messages SVC_Messages_MIN = svc_ServerInfo;
const SVC_Messages SVC_Messages_MAX = svc_FullFrameSplit;
const int SVC_Messages_ARRAYSIZE = SVC_Messages_MAX + 1;

const ::google::protobuf::EnumDescriptor* SVC_Messages_descriptor();
inline const ::std::string& SVC_Messages_Name(SVC_Messages value) {
  return ::google::protobuf::internal::NameOfEnum(
    SVC_Messages_descriptor(), value);
}
inline bool SVC_Messages_Parse(
    const ::std::string& name, SVC_Messages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SVC_Messages>(
    SVC_Messages_descriptor(), name, value);
}
enum VoiceDataFormat_t {
  VOICEDATA_FORMAT_STEAM = 0,
  VOICEDATA_FORMAT_ENGINE = 1
};
bool VoiceDataFormat_t_IsValid(int value);
const VoiceDataFormat_t VoiceDataFormat_t_MIN = VOICEDATA_FORMAT_STEAM;
const VoiceDataFormat_t VoiceDataFormat_t_MAX = VOICEDATA_FORMAT_ENGINE;
const int VoiceDataFormat_t_ARRAYSIZE = VoiceDataFormat_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* VoiceDataFormat_t_descriptor();
inline const ::std::string& VoiceDataFormat_t_Name(VoiceDataFormat_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    VoiceDataFormat_t_descriptor(), value);
}
inline bool VoiceDataFormat_t_Parse(
    const ::std::string& name, VoiceDataFormat_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VoiceDataFormat_t>(
    VoiceDataFormat_t_descriptor(), name, value);
}
enum RequestPause_t {
  RP_PAUSE = 0,
  RP_UNPAUSE = 1,
  RP_TOGGLEPAUSE = 2
};
bool RequestPause_t_IsValid(int value);
const RequestPause_t RequestPause_t_MIN = RP_PAUSE;
const RequestPause_t RequestPause_t_MAX = RP_TOGGLEPAUSE;
const int RequestPause_t_ARRAYSIZE = RequestPause_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestPause_t_descriptor();
inline const ::std::string& RequestPause_t_Name(RequestPause_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestPause_t_descriptor(), value);
}
inline bool RequestPause_t_Parse(
    const ::std::string& name, RequestPause_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestPause_t>(
    RequestPause_t_descriptor(), name, value);
}
enum PrefetchType {
  PFT_SOUND = 0
};
bool PrefetchType_IsValid(int value);
const PrefetchType PrefetchType_MIN = PFT_SOUND;
const PrefetchType PrefetchType_MAX = PFT_SOUND;
const int PrefetchType_ARRAYSIZE = PrefetchType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PrefetchType_descriptor();
inline const ::std::string& PrefetchType_Name(PrefetchType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PrefetchType_descriptor(), value);
}
inline bool PrefetchType_Parse(
    const ::std::string& name, PrefetchType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrefetchType>(
    PrefetchType_descriptor(), name, value);
}
enum ESplitScreenMessageType {
  MSG_SPLITSCREEN_ADDUSER = 0,
  MSG_SPLITSCREEN_REMOVEUSER = 1
};
bool ESplitScreenMessageType_IsValid(int value);
const ESplitScreenMessageType ESplitScreenMessageType_MIN = MSG_SPLITSCREEN_ADDUSER;
const ESplitScreenMessageType ESplitScreenMessageType_MAX = MSG_SPLITSCREEN_REMOVEUSER;
const int ESplitScreenMessageType_ARRAYSIZE = ESplitScreenMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESplitScreenMessageType_descriptor();
inline const ::std::string& ESplitScreenMessageType_Name(ESplitScreenMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESplitScreenMessageType_descriptor(), value);
}
inline bool ESplitScreenMessageType_Parse(
    const ::std::string& name, ESplitScreenMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESplitScreenMessageType>(
    ESplitScreenMessageType_descriptor(), name, value);
}
enum EQueryCvarValueStatus {
  eQueryCvarValueStatus_ValueIntact = 0,
  eQueryCvarValueStatus_CvarNotFound = 1,
  eQueryCvarValueStatus_NotACvar = 2,
  eQueryCvarValueStatus_CvarProtected = 3
};
bool EQueryCvarValueStatus_IsValid(int value);
const EQueryCvarValueStatus EQueryCvarValueStatus_MIN = eQueryCvarValueStatus_ValueIntact;
const EQueryCvarValueStatus EQueryCvarValueStatus_MAX = eQueryCvarValueStatus_CvarProtected;
const int EQueryCvarValueStatus_ARRAYSIZE = EQueryCvarValueStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EQueryCvarValueStatus_descriptor();
inline const ::std::string& EQueryCvarValueStatus_Name(EQueryCvarValueStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EQueryCvarValueStatus_descriptor(), value);
}
inline bool EQueryCvarValueStatus_Parse(
    const ::std::string& name, EQueryCvarValueStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EQueryCvarValueStatus>(
    EQueryCvarValueStatus_descriptor(), name, value);
}
enum DIALOG_TYPE {
  DIALOG_MSG = 0,
  DIALOG_MENU = 1,
  DIALOG_TEXT = 2,
  DIALOG_ENTRY = 3,
  DIALOG_ASKCONNECT = 4
};
bool DIALOG_TYPE_IsValid(int value);
const DIALOG_TYPE DIALOG_TYPE_MIN = DIALOG_MSG;
const DIALOG_TYPE DIALOG_TYPE_MAX = DIALOG_ASKCONNECT;
const int DIALOG_TYPE_ARRAYSIZE = DIALOG_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DIALOG_TYPE_descriptor();
inline const ::std::string& DIALOG_TYPE_Name(DIALOG_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DIALOG_TYPE_descriptor(), value);
}
inline bool DIALOG_TYPE_Parse(
    const ::std::string& name, DIALOG_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DIALOG_TYPE>(
    DIALOG_TYPE_descriptor(), name, value);
}
enum SVC_Messages_LowFrequency {
  svc_dummy = 600
};
bool SVC_Messages_LowFrequency_IsValid(int value);
const SVC_Messages_LowFrequency SVC_Messages_LowFrequency_MIN = svc_dummy;
const SVC_Messages_LowFrequency SVC_Messages_LowFrequency_MAX = svc_dummy;
const int SVC_Messages_LowFrequency_ARRAYSIZE = SVC_Messages_LowFrequency_MAX + 1;

const ::google::protobuf::EnumDescriptor* SVC_Messages_LowFrequency_descriptor();
inline const ::std::string& SVC_Messages_LowFrequency_Name(SVC_Messages_LowFrequency value) {
  return ::google::protobuf::internal::NameOfEnum(
    SVC_Messages_LowFrequency_descriptor(), value);
}
inline bool SVC_Messages_LowFrequency_Parse(
    const ::std::string& name, SVC_Messages_LowFrequency* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SVC_Messages_LowFrequency>(
    SVC_Messages_LowFrequency_descriptor(), name, value);
}
enum Bidirectional_Messages {
  bi_RebroadcastGameEvent = 16,
  bi_RebroadcastSource = 17,
  bi_GameEvent = 18
};
bool Bidirectional_Messages_IsValid(int value);
const Bidirectional_Messages Bidirectional_Messages_MIN = bi_RebroadcastGameEvent;
const Bidirectional_Messages Bidirectional_Messages_MAX = bi_GameEvent;
const int Bidirectional_Messages_ARRAYSIZE = Bidirectional_Messages_MAX + 1;

const ::google::protobuf::EnumDescriptor* Bidirectional_Messages_descriptor();
inline const ::std::string& Bidirectional_Messages_Name(Bidirectional_Messages value) {
  return ::google::protobuf::internal::NameOfEnum(
    Bidirectional_Messages_descriptor(), value);
}
inline bool Bidirectional_Messages_Parse(
    const ::std::string& name, Bidirectional_Messages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Bidirectional_Messages>(
    Bidirectional_Messages_descriptor(), name, value);
}
enum Bidirectional_Messages_LowFrequency {
  bi_RelayInfo = 700,
  bi_RelayPacket = 701
};
bool Bidirectional_Messages_LowFrequency_IsValid(int value);
const Bidirectional_Messages_LowFrequency Bidirectional_Messages_LowFrequency_MIN = bi_RelayInfo;
const Bidirectional_Messages_LowFrequency Bidirectional_Messages_LowFrequency_MAX = bi_RelayPacket;
const int Bidirectional_Messages_LowFrequency_ARRAYSIZE = Bidirectional_Messages_LowFrequency_MAX + 1;

const ::google::protobuf::EnumDescriptor* Bidirectional_Messages_LowFrequency_descriptor();
inline const ::std::string& Bidirectional_Messages_LowFrequency_Name(Bidirectional_Messages_LowFrequency value) {
  return ::google::protobuf::internal::NameOfEnum(
    Bidirectional_Messages_LowFrequency_descriptor(), value);
}
inline bool Bidirectional_Messages_LowFrequency_Parse(
    const ::std::string& name, Bidirectional_Messages_LowFrequency* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Bidirectional_Messages_LowFrequency>(
    Bidirectional_Messages_LowFrequency_descriptor(), name, value);
}
// ===================================================================

class CCLCMsg_ClientInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_ClientInfo) */ {
 public:
  CCLCMsg_ClientInfo();
  virtual ~CCLCMsg_ClientInfo();

  CCLCMsg_ClientInfo(const CCLCMsg_ClientInfo& from);

  inline CCLCMsg_ClientInfo& operator=(const CCLCMsg_ClientInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_ClientInfo(CCLCMsg_ClientInfo&& from) noexcept
    : CCLCMsg_ClientInfo() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_ClientInfo& operator=(CCLCMsg_ClientInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_ClientInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_ClientInfo* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_ClientInfo*>(
               &_CCLCMsg_ClientInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CCLCMsg_ClientInfo* other);
  friend void swap(CCLCMsg_ClientInfo& a, CCLCMsg_ClientInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_ClientInfo* New() const final {
    return CreateMaybeMessage<CCLCMsg_ClientInfo>(nullptr);
  }

  CCLCMsg_ClientInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_ClientInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_ClientInfo& from);
  void MergeFrom(const CCLCMsg_ClientInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_ClientInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string friends_name = 6;
  bool has_friends_name() const;
  void clear_friends_name();
  static const int kFriendsNameFieldNumber = 6;
  const ::std::string& friends_name() const;
  void set_friends_name(const ::std::string& value);
  #if LANG_CXX11
  void set_friends_name(::std::string&& value);
  #endif
  void set_friends_name(const char* value);
  void set_friends_name(const char* value, size_t size);
  ::std::string* mutable_friends_name();
  ::std::string* release_friends_name();
  void set_allocated_friends_name(::std::string* friends_name);

  // optional fixed32 send_table_crc = 1;
  bool has_send_table_crc() const;
  void clear_send_table_crc();
  static const int kSendTableCrcFieldNumber = 1;
  ::google::protobuf::uint32 send_table_crc() const;
  void set_send_table_crc(::google::protobuf::uint32 value);

  // optional uint32 server_count = 2;
  bool has_server_count() const;
  void clear_server_count();
  static const int kServerCountFieldNumber = 2;
  ::google::protobuf::uint32 server_count() const;
  void set_server_count(::google::protobuf::uint32 value);

  // optional bool is_hltv = 3;
  bool has_is_hltv() const;
  void clear_is_hltv();
  static const int kIsHltvFieldNumber = 3;
  bool is_hltv() const;
  void set_is_hltv(bool value);

  // optional bool is_replay = 4;
  bool has_is_replay() const;
  void clear_is_replay();
  static const int kIsReplayFieldNumber = 4;
  bool is_replay() const;
  void set_is_replay(bool value);

  // optional uint32 friends_id = 5;
  bool has_friends_id() const;
  void clear_friends_id();
  static const int kFriendsIdFieldNumber = 5;
  ::google::protobuf::uint32 friends_id() const;
  void set_friends_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_ClientInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr friends_name_;
  ::google::protobuf::uint32 send_table_crc_;
  ::google::protobuf::uint32 server_count_;
  bool is_hltv_;
  bool is_replay_;
  ::google::protobuf::uint32 friends_id_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_Move final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_Move) */ {
 public:
  CCLCMsg_Move();
  virtual ~CCLCMsg_Move();

  CCLCMsg_Move(const CCLCMsg_Move& from);

  inline CCLCMsg_Move& operator=(const CCLCMsg_Move& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_Move(CCLCMsg_Move&& from) noexcept
    : CCLCMsg_Move() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_Move& operator=(CCLCMsg_Move&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_Move& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_Move* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_Move*>(
               &_CCLCMsg_Move_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CCLCMsg_Move* other);
  friend void swap(CCLCMsg_Move& a, CCLCMsg_Move& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_Move* New() const final {
    return CreateMaybeMessage<CCLCMsg_Move>(nullptr);
  }

  CCLCMsg_Move* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_Move>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_Move& from);
  void MergeFrom(const CCLCMsg_Move& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_Move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional uint32 command_number = 4;
  bool has_command_number() const;
  void clear_command_number();
  static const int kCommandNumberFieldNumber = 4;
  ::google::protobuf::uint32 command_number() const;
  void set_command_number(::google::protobuf::uint32 value);

  // optional uint32 num_commands = 5;
  bool has_num_commands() const;
  void clear_num_commands();
  static const int kNumCommandsFieldNumber = 5;
  ::google::protobuf::uint32 num_commands() const;
  void set_num_commands(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_Move)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 command_number_;
  ::google::protobuf::uint32 num_commands_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgVoiceAudio final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgVoiceAudio) */ {
 public:
  CMsgVoiceAudio();
  virtual ~CMsgVoiceAudio();

  CMsgVoiceAudio(const CMsgVoiceAudio& from);

  inline CMsgVoiceAudio& operator=(const CMsgVoiceAudio& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgVoiceAudio(CMsgVoiceAudio&& from) noexcept
    : CMsgVoiceAudio() {
    *this = ::std::move(from);
  }

  inline CMsgVoiceAudio& operator=(CMsgVoiceAudio&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgVoiceAudio& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgVoiceAudio* internal_default_instance() {
    return reinterpret_cast<const CMsgVoiceAudio*>(
               &_CMsgVoiceAudio_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CMsgVoiceAudio* other);
  friend void swap(CMsgVoiceAudio& a, CMsgVoiceAudio& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgVoiceAudio* New() const final {
    return CreateMaybeMessage<CMsgVoiceAudio>(nullptr);
  }

  CMsgVoiceAudio* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgVoiceAudio>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgVoiceAudio& from);
  void MergeFrom(const CMsgVoiceAudio& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgVoiceAudio* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes voice_data = 2;
  bool has_voice_data() const;
  void clear_voice_data();
  static const int kVoiceDataFieldNumber = 2;
  const ::std::string& voice_data() const;
  void set_voice_data(const ::std::string& value);
  #if LANG_CXX11
  void set_voice_data(::std::string&& value);
  #endif
  void set_voice_data(const char* value);
  void set_voice_data(const void* value, size_t size);
  ::std::string* mutable_voice_data();
  ::std::string* release_voice_data();
  void set_allocated_voice_data(::std::string* voice_data);

  // optional .proto.dota.VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
  bool has_format() const;
  void clear_format();
  static const int kFormatFieldNumber = 1;
  ::proto::dota::VoiceDataFormat_t format() const;
  void set_format(::proto::dota::VoiceDataFormat_t value);

  // optional int32 sequence_bytes = 3;
  bool has_sequence_bytes() const;
  void clear_sequence_bytes();
  static const int kSequenceBytesFieldNumber = 3;
  ::google::protobuf::int32 sequence_bytes() const;
  void set_sequence_bytes(::google::protobuf::int32 value);

  // optional uint32 section_number = 4;
  bool has_section_number() const;
  void clear_section_number();
  static const int kSectionNumberFieldNumber = 4;
  ::google::protobuf::uint32 section_number() const;
  void set_section_number(::google::protobuf::uint32 value);

  // optional uint32 sample_rate = 5;
  bool has_sample_rate() const;
  void clear_sample_rate();
  static const int kSampleRateFieldNumber = 5;
  ::google::protobuf::uint32 sample_rate() const;
  void set_sample_rate(::google::protobuf::uint32 value);

  // optional uint32 uncompressed_sample_offset = 6;
  bool has_uncompressed_sample_offset() const;
  void clear_uncompressed_sample_offset();
  static const int kUncompressedSampleOffsetFieldNumber = 6;
  ::google::protobuf::uint32 uncompressed_sample_offset() const;
  void set_uncompressed_sample_offset(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgVoiceAudio)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr voice_data_;
  int format_;
  ::google::protobuf::int32 sequence_bytes_;
  ::google::protobuf::uint32 section_number_;
  ::google::protobuf::uint32 sample_rate_;
  ::google::protobuf::uint32 uncompressed_sample_offset_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_VoiceData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_VoiceData) */ {
 public:
  CCLCMsg_VoiceData();
  virtual ~CCLCMsg_VoiceData();

  CCLCMsg_VoiceData(const CCLCMsg_VoiceData& from);

  inline CCLCMsg_VoiceData& operator=(const CCLCMsg_VoiceData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_VoiceData(CCLCMsg_VoiceData&& from) noexcept
    : CCLCMsg_VoiceData() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_VoiceData& operator=(CCLCMsg_VoiceData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_VoiceData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_VoiceData* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_VoiceData*>(
               &_CCLCMsg_VoiceData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CCLCMsg_VoiceData* other);
  friend void swap(CCLCMsg_VoiceData& a, CCLCMsg_VoiceData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_VoiceData* New() const final {
    return CreateMaybeMessage<CCLCMsg_VoiceData>(nullptr);
  }

  CCLCMsg_VoiceData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_VoiceData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_VoiceData& from);
  void MergeFrom(const CCLCMsg_VoiceData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_VoiceData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVoiceAudio audio = 1;
  bool has_audio() const;
  void clear_audio();
  static const int kAudioFieldNumber = 1;
  const ::proto::dota::CMsgVoiceAudio& audio() const;
  ::proto::dota::CMsgVoiceAudio* release_audio();
  ::proto::dota::CMsgVoiceAudio* mutable_audio();
  void set_allocated_audio(::proto::dota::CMsgVoiceAudio* audio);

  // optional fixed64 xuid = 2;
  bool has_xuid() const;
  void clear_xuid();
  static const int kXuidFieldNumber = 2;
  ::google::protobuf::uint64 xuid() const;
  void set_xuid(::google::protobuf::uint64 value);

  // optional uint32 tick = 3;
  bool has_tick() const;
  void clear_tick();
  static const int kTickFieldNumber = 3;
  ::google::protobuf::uint32 tick() const;
  void set_tick(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_VoiceData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgVoiceAudio* audio_;
  ::google::protobuf::uint64 xuid_;
  ::google::protobuf::uint32 tick_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_BaselineAck final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_BaselineAck) */ {
 public:
  CCLCMsg_BaselineAck();
  virtual ~CCLCMsg_BaselineAck();

  CCLCMsg_BaselineAck(const CCLCMsg_BaselineAck& from);

  inline CCLCMsg_BaselineAck& operator=(const CCLCMsg_BaselineAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_BaselineAck(CCLCMsg_BaselineAck&& from) noexcept
    : CCLCMsg_BaselineAck() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_BaselineAck& operator=(CCLCMsg_BaselineAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_BaselineAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_BaselineAck* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_BaselineAck*>(
               &_CCLCMsg_BaselineAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CCLCMsg_BaselineAck* other);
  friend void swap(CCLCMsg_BaselineAck& a, CCLCMsg_BaselineAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_BaselineAck* New() const final {
    return CreateMaybeMessage<CCLCMsg_BaselineAck>(nullptr);
  }

  CCLCMsg_BaselineAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_BaselineAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_BaselineAck& from);
  void MergeFrom(const CCLCMsg_BaselineAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_BaselineAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 baseline_tick = 1;
  bool has_baseline_tick() const;
  void clear_baseline_tick();
  static const int kBaselineTickFieldNumber = 1;
  ::google::protobuf::int32 baseline_tick() const;
  void set_baseline_tick(::google::protobuf::int32 value);

  // optional int32 baseline_nr = 2;
  bool has_baseline_nr() const;
  void clear_baseline_nr();
  static const int kBaselineNrFieldNumber = 2;
  ::google::protobuf::int32 baseline_nr() const;
  void set_baseline_nr(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_BaselineAck)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 baseline_tick_;
  ::google::protobuf::int32 baseline_nr_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_ListenEvents final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_ListenEvents) */ {
 public:
  CCLCMsg_ListenEvents();
  virtual ~CCLCMsg_ListenEvents();

  CCLCMsg_ListenEvents(const CCLCMsg_ListenEvents& from);

  inline CCLCMsg_ListenEvents& operator=(const CCLCMsg_ListenEvents& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_ListenEvents(CCLCMsg_ListenEvents&& from) noexcept
    : CCLCMsg_ListenEvents() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_ListenEvents& operator=(CCLCMsg_ListenEvents&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_ListenEvents& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_ListenEvents* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_ListenEvents*>(
               &_CCLCMsg_ListenEvents_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CCLCMsg_ListenEvents* other);
  friend void swap(CCLCMsg_ListenEvents& a, CCLCMsg_ListenEvents& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_ListenEvents* New() const final {
    return CreateMaybeMessage<CCLCMsg_ListenEvents>(nullptr);
  }

  CCLCMsg_ListenEvents* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_ListenEvents>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_ListenEvents& from);
  void MergeFrom(const CCLCMsg_ListenEvents& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_ListenEvents* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 event_mask = 1;
  int event_mask_size() const;
  void clear_event_mask();
  static const int kEventMaskFieldNumber = 1;
  ::google::protobuf::uint32 event_mask(int index) const;
  void set_event_mask(int index, ::google::protobuf::uint32 value);
  void add_event_mask(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      event_mask() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_event_mask();

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_ListenEvents)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > event_mask_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_RespondCvarValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_RespondCvarValue) */ {
 public:
  CCLCMsg_RespondCvarValue();
  virtual ~CCLCMsg_RespondCvarValue();

  CCLCMsg_RespondCvarValue(const CCLCMsg_RespondCvarValue& from);

  inline CCLCMsg_RespondCvarValue& operator=(const CCLCMsg_RespondCvarValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_RespondCvarValue(CCLCMsg_RespondCvarValue&& from) noexcept
    : CCLCMsg_RespondCvarValue() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_RespondCvarValue& operator=(CCLCMsg_RespondCvarValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_RespondCvarValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_RespondCvarValue* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_RespondCvarValue*>(
               &_CCLCMsg_RespondCvarValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CCLCMsg_RespondCvarValue* other);
  friend void swap(CCLCMsg_RespondCvarValue& a, CCLCMsg_RespondCvarValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_RespondCvarValue* New() const final {
    return CreateMaybeMessage<CCLCMsg_RespondCvarValue>(nullptr);
  }

  CCLCMsg_RespondCvarValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_RespondCvarValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_RespondCvarValue& from);
  void MergeFrom(const CCLCMsg_RespondCvarValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_RespondCvarValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string value = 4;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional int32 cookie = 1;
  bool has_cookie() const;
  void clear_cookie();
  static const int kCookieFieldNumber = 1;
  ::google::protobuf::int32 cookie() const;
  void set_cookie(::google::protobuf::int32 value);

  // optional int32 status_code = 2;
  bool has_status_code() const;
  void clear_status_code();
  static const int kStatusCodeFieldNumber = 2;
  ::google::protobuf::int32 status_code() const;
  void set_status_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_RespondCvarValue)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 cookie_;
  ::google::protobuf::int32 status_code_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_FileCRCCheck final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_FileCRCCheck) */ {
 public:
  CCLCMsg_FileCRCCheck();
  virtual ~CCLCMsg_FileCRCCheck();

  CCLCMsg_FileCRCCheck(const CCLCMsg_FileCRCCheck& from);

  inline CCLCMsg_FileCRCCheck& operator=(const CCLCMsg_FileCRCCheck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_FileCRCCheck(CCLCMsg_FileCRCCheck&& from) noexcept
    : CCLCMsg_FileCRCCheck() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_FileCRCCheck& operator=(CCLCMsg_FileCRCCheck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_FileCRCCheck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_FileCRCCheck* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_FileCRCCheck*>(
               &_CCLCMsg_FileCRCCheck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CCLCMsg_FileCRCCheck* other);
  friend void swap(CCLCMsg_FileCRCCheck& a, CCLCMsg_FileCRCCheck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_FileCRCCheck* New() const final {
    return CreateMaybeMessage<CCLCMsg_FileCRCCheck>(nullptr);
  }

  CCLCMsg_FileCRCCheck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_FileCRCCheck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_FileCRCCheck& from);
  void MergeFrom(const CCLCMsg_FileCRCCheck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_FileCRCCheck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string filename = 4;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 4;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional int32 code_path = 1;
  bool has_code_path() const;
  void clear_code_path();
  static const int kCodePathFieldNumber = 1;
  ::google::protobuf::int32 code_path() const;
  void set_code_path(::google::protobuf::int32 value);

  // optional int32 code_filename = 3;
  bool has_code_filename() const;
  void clear_code_filename();
  static const int kCodeFilenameFieldNumber = 3;
  ::google::protobuf::int32 code_filename() const;
  void set_code_filename(::google::protobuf::int32 value);

  // optional fixed32 crc = 5;
  bool has_crc() const;
  void clear_crc();
  static const int kCrcFieldNumber = 5;
  ::google::protobuf::uint32 crc() const;
  void set_crc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_FileCRCCheck)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::int32 code_path_;
  ::google::protobuf::int32 code_filename_;
  ::google::protobuf::uint32 crc_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_LoadingProgress final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_LoadingProgress) */ {
 public:
  CCLCMsg_LoadingProgress();
  virtual ~CCLCMsg_LoadingProgress();

  CCLCMsg_LoadingProgress(const CCLCMsg_LoadingProgress& from);

  inline CCLCMsg_LoadingProgress& operator=(const CCLCMsg_LoadingProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_LoadingProgress(CCLCMsg_LoadingProgress&& from) noexcept
    : CCLCMsg_LoadingProgress() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_LoadingProgress& operator=(CCLCMsg_LoadingProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_LoadingProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_LoadingProgress* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_LoadingProgress*>(
               &_CCLCMsg_LoadingProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CCLCMsg_LoadingProgress* other);
  friend void swap(CCLCMsg_LoadingProgress& a, CCLCMsg_LoadingProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_LoadingProgress* New() const final {
    return CreateMaybeMessage<CCLCMsg_LoadingProgress>(nullptr);
  }

  CCLCMsg_LoadingProgress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_LoadingProgress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_LoadingProgress& from);
  void MergeFrom(const CCLCMsg_LoadingProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_LoadingProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 progress = 1;
  bool has_progress() const;
  void clear_progress();
  static const int kProgressFieldNumber = 1;
  ::google::protobuf::int32 progress() const;
  void set_progress(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_LoadingProgress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 progress_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_SplitPlayerConnect final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_SplitPlayerConnect) */ {
 public:
  CCLCMsg_SplitPlayerConnect();
  virtual ~CCLCMsg_SplitPlayerConnect();

  CCLCMsg_SplitPlayerConnect(const CCLCMsg_SplitPlayerConnect& from);

  inline CCLCMsg_SplitPlayerConnect& operator=(const CCLCMsg_SplitPlayerConnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_SplitPlayerConnect(CCLCMsg_SplitPlayerConnect&& from) noexcept
    : CCLCMsg_SplitPlayerConnect() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_SplitPlayerConnect& operator=(CCLCMsg_SplitPlayerConnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_SplitPlayerConnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_SplitPlayerConnect* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_SplitPlayerConnect*>(
               &_CCLCMsg_SplitPlayerConnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CCLCMsg_SplitPlayerConnect* other);
  friend void swap(CCLCMsg_SplitPlayerConnect& a, CCLCMsg_SplitPlayerConnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_SplitPlayerConnect* New() const final {
    return CreateMaybeMessage<CCLCMsg_SplitPlayerConnect>(nullptr);
  }

  CCLCMsg_SplitPlayerConnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_SplitPlayerConnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_SplitPlayerConnect& from);
  void MergeFrom(const CCLCMsg_SplitPlayerConnect& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_SplitPlayerConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string playername = 1;
  bool has_playername() const;
  void clear_playername();
  static const int kPlayernameFieldNumber = 1;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_SplitPlayerConnect)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_ClientMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_ClientMessage) */ {
 public:
  CCLCMsg_ClientMessage();
  virtual ~CCLCMsg_ClientMessage();

  CCLCMsg_ClientMessage(const CCLCMsg_ClientMessage& from);

  inline CCLCMsg_ClientMessage& operator=(const CCLCMsg_ClientMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_ClientMessage(CCLCMsg_ClientMessage&& from) noexcept
    : CCLCMsg_ClientMessage() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_ClientMessage& operator=(CCLCMsg_ClientMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_ClientMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_ClientMessage* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_ClientMessage*>(
               &_CCLCMsg_ClientMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CCLCMsg_ClientMessage* other);
  friend void swap(CCLCMsg_ClientMessage& a, CCLCMsg_ClientMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_ClientMessage* New() const final {
    return CreateMaybeMessage<CCLCMsg_ClientMessage>(nullptr);
  }

  CCLCMsg_ClientMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_ClientMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_ClientMessage& from);
  void MergeFrom(const CCLCMsg_ClientMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_ClientMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional int32 msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_ClientMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 msg_type_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_SplitPlayerDisconnect final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_SplitPlayerDisconnect) */ {
 public:
  CCLCMsg_SplitPlayerDisconnect();
  virtual ~CCLCMsg_SplitPlayerDisconnect();

  CCLCMsg_SplitPlayerDisconnect(const CCLCMsg_SplitPlayerDisconnect& from);

  inline CCLCMsg_SplitPlayerDisconnect& operator=(const CCLCMsg_SplitPlayerDisconnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_SplitPlayerDisconnect(CCLCMsg_SplitPlayerDisconnect&& from) noexcept
    : CCLCMsg_SplitPlayerDisconnect() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_SplitPlayerDisconnect& operator=(CCLCMsg_SplitPlayerDisconnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_SplitPlayerDisconnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_SplitPlayerDisconnect* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_SplitPlayerDisconnect*>(
               &_CCLCMsg_SplitPlayerDisconnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CCLCMsg_SplitPlayerDisconnect* other);
  friend void swap(CCLCMsg_SplitPlayerDisconnect& a, CCLCMsg_SplitPlayerDisconnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_SplitPlayerDisconnect* New() const final {
    return CreateMaybeMessage<CCLCMsg_SplitPlayerDisconnect>(nullptr);
  }

  CCLCMsg_SplitPlayerDisconnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_SplitPlayerDisconnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_SplitPlayerDisconnect& from);
  void MergeFrom(const CCLCMsg_SplitPlayerDisconnect& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_SplitPlayerDisconnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot = 1;
  bool has_slot() const;
  void clear_slot();
  static const int kSlotFieldNumber = 1;
  ::google::protobuf::int32 slot() const;
  void set_slot(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_SplitPlayerDisconnect)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 slot_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_ServerStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_ServerStatus) */ {
 public:
  CCLCMsg_ServerStatus();
  virtual ~CCLCMsg_ServerStatus();

  CCLCMsg_ServerStatus(const CCLCMsg_ServerStatus& from);

  inline CCLCMsg_ServerStatus& operator=(const CCLCMsg_ServerStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_ServerStatus(CCLCMsg_ServerStatus&& from) noexcept
    : CCLCMsg_ServerStatus() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_ServerStatus& operator=(CCLCMsg_ServerStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_ServerStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_ServerStatus* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_ServerStatus*>(
               &_CCLCMsg_ServerStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CCLCMsg_ServerStatus* other);
  friend void swap(CCLCMsg_ServerStatus& a, CCLCMsg_ServerStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_ServerStatus* New() const final {
    return CreateMaybeMessage<CCLCMsg_ServerStatus>(nullptr);
  }

  CCLCMsg_ServerStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_ServerStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_ServerStatus& from);
  void MergeFrom(const CCLCMsg_ServerStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_ServerStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool simplified = 1;
  bool has_simplified() const;
  void clear_simplified();
  static const int kSimplifiedFieldNumber = 1;
  bool simplified() const;
  void set_simplified(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_ServerStatus)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool simplified_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_ServerPing final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_ServerPing) */ {
 public:
  CCLCMsg_ServerPing();
  virtual ~CCLCMsg_ServerPing();

  CCLCMsg_ServerPing(const CCLCMsg_ServerPing& from);

  inline CCLCMsg_ServerPing& operator=(const CCLCMsg_ServerPing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_ServerPing(CCLCMsg_ServerPing&& from) noexcept
    : CCLCMsg_ServerPing() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_ServerPing& operator=(CCLCMsg_ServerPing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_ServerPing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_ServerPing* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_ServerPing*>(
               &_CCLCMsg_ServerPing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CCLCMsg_ServerPing* other);
  friend void swap(CCLCMsg_ServerPing& a, CCLCMsg_ServerPing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_ServerPing* New() const final {
    return CreateMaybeMessage<CCLCMsg_ServerPing>(nullptr);
  }

  CCLCMsg_ServerPing* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_ServerPing>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_ServerPing& from);
  void MergeFrom(const CCLCMsg_ServerPing& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_ServerPing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_ServerPing)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_RequestPause final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_RequestPause) */ {
 public:
  CCLCMsg_RequestPause();
  virtual ~CCLCMsg_RequestPause();

  CCLCMsg_RequestPause(const CCLCMsg_RequestPause& from);

  inline CCLCMsg_RequestPause& operator=(const CCLCMsg_RequestPause& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_RequestPause(CCLCMsg_RequestPause&& from) noexcept
    : CCLCMsg_RequestPause() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_RequestPause& operator=(CCLCMsg_RequestPause&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_RequestPause& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_RequestPause* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_RequestPause*>(
               &_CCLCMsg_RequestPause_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CCLCMsg_RequestPause* other);
  friend void swap(CCLCMsg_RequestPause& a, CCLCMsg_RequestPause& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_RequestPause* New() const final {
    return CreateMaybeMessage<CCLCMsg_RequestPause>(nullptr);
  }

  CCLCMsg_RequestPause* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_RequestPause>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_RequestPause& from);
  void MergeFrom(const CCLCMsg_RequestPause& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_RequestPause* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.RequestPause_t pause_type = 1 [default = RP_PAUSE];
  bool has_pause_type() const;
  void clear_pause_type();
  static const int kPauseTypeFieldNumber = 1;
  ::proto::dota::RequestPause_t pause_type() const;
  void set_pause_type(::proto::dota::RequestPause_t value);

  // optional int32 pause_group = 2;
  bool has_pause_group() const;
  void clear_pause_group();
  static const int kPauseGroupFieldNumber = 2;
  ::google::protobuf::int32 pause_group() const;
  void set_pause_group(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_RequestPause)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int pause_type_;
  ::google::protobuf::int32 pause_group_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CCLCMsg_CmdKeyValues final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCLCMsg_CmdKeyValues) */ {
 public:
  CCLCMsg_CmdKeyValues();
  virtual ~CCLCMsg_CmdKeyValues();

  CCLCMsg_CmdKeyValues(const CCLCMsg_CmdKeyValues& from);

  inline CCLCMsg_CmdKeyValues& operator=(const CCLCMsg_CmdKeyValues& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_CmdKeyValues(CCLCMsg_CmdKeyValues&& from) noexcept
    : CCLCMsg_CmdKeyValues() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_CmdKeyValues& operator=(CCLCMsg_CmdKeyValues&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCLCMsg_CmdKeyValues& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_CmdKeyValues* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_CmdKeyValues*>(
               &_CCLCMsg_CmdKeyValues_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(CCLCMsg_CmdKeyValues* other);
  friend void swap(CCLCMsg_CmdKeyValues& a, CCLCMsg_CmdKeyValues& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_CmdKeyValues* New() const final {
    return CreateMaybeMessage<CCLCMsg_CmdKeyValues>(nullptr);
  }

  CCLCMsg_CmdKeyValues* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_CmdKeyValues>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_CmdKeyValues& from);
  void MergeFrom(const CCLCMsg_CmdKeyValues& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_CmdKeyValues* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:proto.dota.CCLCMsg_CmdKeyValues)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_ServerInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_ServerInfo) */ {
 public:
  CSVCMsg_ServerInfo();
  virtual ~CSVCMsg_ServerInfo();

  CSVCMsg_ServerInfo(const CSVCMsg_ServerInfo& from);

  inline CSVCMsg_ServerInfo& operator=(const CSVCMsg_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_ServerInfo(CSVCMsg_ServerInfo&& from) noexcept
    : CSVCMsg_ServerInfo() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_ServerInfo& operator=(CSVCMsg_ServerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_ServerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_ServerInfo* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_ServerInfo*>(
               &_CSVCMsg_ServerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CSVCMsg_ServerInfo* other);
  friend void swap(CSVCMsg_ServerInfo& a, CSVCMsg_ServerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_ServerInfo* New() const final {
    return CreateMaybeMessage<CSVCMsg_ServerInfo>(nullptr);
  }

  CSVCMsg_ServerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_ServerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_ServerInfo& from);
  void MergeFrom(const CSVCMsg_ServerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_ServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string game_dir = 14;
  bool has_game_dir() const;
  void clear_game_dir();
  static const int kGameDirFieldNumber = 14;
  const ::std::string& game_dir() const;
  void set_game_dir(const ::std::string& value);
  #if LANG_CXX11
  void set_game_dir(::std::string&& value);
  #endif
  void set_game_dir(const char* value);
  void set_game_dir(const char* value, size_t size);
  ::std::string* mutable_game_dir();
  ::std::string* release_game_dir();
  void set_allocated_game_dir(::std::string* game_dir);

  // optional string map_name = 15;
  bool has_map_name() const;
  void clear_map_name();
  static const int kMapNameFieldNumber = 15;
  const ::std::string& map_name() const;
  void set_map_name(const ::std::string& value);
  #if LANG_CXX11
  void set_map_name(::std::string&& value);
  #endif
  void set_map_name(const char* value);
  void set_map_name(const char* value, size_t size);
  ::std::string* mutable_map_name();
  ::std::string* release_map_name();
  void set_allocated_map_name(::std::string* map_name);

  // optional string sky_name = 16;
  bool has_sky_name() const;
  void clear_sky_name();
  static const int kSkyNameFieldNumber = 16;
  const ::std::string& sky_name() const;
  void set_sky_name(const ::std::string& value);
  #if LANG_CXX11
  void set_sky_name(::std::string&& value);
  #endif
  void set_sky_name(const char* value);
  void set_sky_name(const char* value, size_t size);
  ::std::string* mutable_sky_name();
  ::std::string* release_sky_name();
  void set_allocated_sky_name(::std::string* sky_name);

  // optional string host_name = 17;
  bool has_host_name() const;
  void clear_host_name();
  static const int kHostNameFieldNumber = 17;
  const ::std::string& host_name() const;
  void set_host_name(const ::std::string& value);
  #if LANG_CXX11
  void set_host_name(::std::string&& value);
  #endif
  void set_host_name(const char* value);
  void set_host_name(const char* value, size_t size);
  ::std::string* mutable_host_name();
  ::std::string* release_host_name();
  void set_allocated_host_name(::std::string* host_name);

  // optional string addon_name = 18;
  bool has_addon_name() const;
  void clear_addon_name();
  static const int kAddonNameFieldNumber = 18;
  const ::std::string& addon_name() const;
  void set_addon_name(const ::std::string& value);
  #if LANG_CXX11
  void set_addon_name(::std::string&& value);
  #endif
  void set_addon_name(const char* value);
  void set_addon_name(const char* value, size_t size);
  ::std::string* mutable_addon_name();
  ::std::string* release_addon_name();
  void set_allocated_addon_name(::std::string* addon_name);

  // optional bytes game_session_manifest = 20;
  bool has_game_session_manifest() const;
  void clear_game_session_manifest();
  static const int kGameSessionManifestFieldNumber = 20;
  const ::std::string& game_session_manifest() const;
  void set_game_session_manifest(const ::std::string& value);
  #if LANG_CXX11
  void set_game_session_manifest(::std::string&& value);
  #endif
  void set_game_session_manifest(const char* value);
  void set_game_session_manifest(const void* value, size_t size);
  ::std::string* mutable_game_session_manifest();
  ::std::string* release_game_session_manifest();
  void set_allocated_game_session_manifest(::std::string* game_session_manifest);

  // optional .proto.dota.CSVCMsg_GameSessionConfiguration game_session_config = 19;
  bool has_game_session_config() const;
  void clear_game_session_config();
  static const int kGameSessionConfigFieldNumber = 19;
  const ::proto::dota::CSVCMsg_GameSessionConfiguration& game_session_config() const;
  ::proto::dota::CSVCMsg_GameSessionConfiguration* release_game_session_config();
  ::proto::dota::CSVCMsg_GameSessionConfiguration* mutable_game_session_config();
  void set_allocated_game_session_config(::proto::dota::CSVCMsg_GameSessionConfiguration* game_session_config);

  // optional int32 protocol = 1;
  bool has_protocol() const;
  void clear_protocol();
  static const int kProtocolFieldNumber = 1;
  ::google::protobuf::int32 protocol() const;
  void set_protocol(::google::protobuf::int32 value);

  // optional int32 server_count = 2;
  bool has_server_count() const;
  void clear_server_count();
  static const int kServerCountFieldNumber = 2;
  ::google::protobuf::int32 server_count() const;
  void set_server_count(::google::protobuf::int32 value);

  // optional bool is_dedicated = 3;
  bool has_is_dedicated() const;
  void clear_is_dedicated();
  static const int kIsDedicatedFieldNumber = 3;
  bool is_dedicated() const;
  void set_is_dedicated(bool value);

  // optional bool is_hltv = 4;
  bool has_is_hltv() const;
  void clear_is_hltv();
  static const int kIsHltvFieldNumber = 4;
  bool is_hltv() const;
  void set_is_hltv(bool value);

  // optional bool is_replay = 5;
  bool has_is_replay() const;
  void clear_is_replay();
  static const int kIsReplayFieldNumber = 5;
  bool is_replay() const;
  void set_is_replay(bool value);

  // optional int32 c_os = 6;
  bool has_c_os() const;
  void clear_c_os();
  static const int kCOsFieldNumber = 6;
  ::google::protobuf::int32 c_os() const;
  void set_c_os(::google::protobuf::int32 value);

  // optional int32 max_clients = 10;
  bool has_max_clients() const;
  void clear_max_clients();
  static const int kMaxClientsFieldNumber = 10;
  ::google::protobuf::int32 max_clients() const;
  void set_max_clients(::google::protobuf::int32 value);

  // optional int32 max_classes = 11;
  bool has_max_classes() const;
  void clear_max_classes();
  static const int kMaxClassesFieldNumber = 11;
  ::google::protobuf::int32 max_classes() const;
  void set_max_classes(::google::protobuf::int32 value);

  // optional int32 player_slot = 12;
  bool has_player_slot() const;
  void clear_player_slot();
  static const int kPlayerSlotFieldNumber = 12;
  ::google::protobuf::int32 player_slot() const;
  void set_player_slot(::google::protobuf::int32 value);

  // optional float tick_interval = 13;
  bool has_tick_interval() const;
  void clear_tick_interval();
  static const int kTickIntervalFieldNumber = 13;
  float tick_interval() const;
  void set_tick_interval(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_ServerInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr game_dir_;
  ::google::protobuf::internal::ArenaStringPtr map_name_;
  ::google::protobuf::internal::ArenaStringPtr sky_name_;
  ::google::protobuf::internal::ArenaStringPtr host_name_;
  ::google::protobuf::internal::ArenaStringPtr addon_name_;
  ::google::protobuf::internal::ArenaStringPtr game_session_manifest_;
  ::proto::dota::CSVCMsg_GameSessionConfiguration* game_session_config_;
  ::google::protobuf::int32 protocol_;
  ::google::protobuf::int32 server_count_;
  bool is_dedicated_;
  bool is_hltv_;
  bool is_replay_;
  ::google::protobuf::int32 c_os_;
  ::google::protobuf::int32 max_clients_;
  ::google::protobuf::int32 max_classes_;
  ::google::protobuf::int32 player_slot_;
  float tick_interval_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_ClassInfo_class_t final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_ClassInfo.class_t) */ {
 public:
  CSVCMsg_ClassInfo_class_t();
  virtual ~CSVCMsg_ClassInfo_class_t();

  CSVCMsg_ClassInfo_class_t(const CSVCMsg_ClassInfo_class_t& from);

  inline CSVCMsg_ClassInfo_class_t& operator=(const CSVCMsg_ClassInfo_class_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_ClassInfo_class_t(CSVCMsg_ClassInfo_class_t&& from) noexcept
    : CSVCMsg_ClassInfo_class_t() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_ClassInfo_class_t& operator=(CSVCMsg_ClassInfo_class_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_ClassInfo_class_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_ClassInfo_class_t* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_ClassInfo_class_t*>(
               &_CSVCMsg_ClassInfo_class_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CSVCMsg_ClassInfo_class_t* other);
  friend void swap(CSVCMsg_ClassInfo_class_t& a, CSVCMsg_ClassInfo_class_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_ClassInfo_class_t* New() const final {
    return CreateMaybeMessage<CSVCMsg_ClassInfo_class_t>(nullptr);
  }

  CSVCMsg_ClassInfo_class_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_ClassInfo_class_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_ClassInfo_class_t& from);
  void MergeFrom(const CSVCMsg_ClassInfo_class_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_ClassInfo_class_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string data_table_name = 2;
  bool has_data_table_name() const;
  void clear_data_table_name();
  static const int kDataTableNameFieldNumber = 2;
  const ::std::string& data_table_name() const;
  void set_data_table_name(const ::std::string& value);
  #if LANG_CXX11
  void set_data_table_name(::std::string&& value);
  #endif
  void set_data_table_name(const char* value);
  void set_data_table_name(const char* value, size_t size);
  ::std::string* mutable_data_table_name();
  ::std::string* release_data_table_name();
  void set_allocated_data_table_name(::std::string* data_table_name);

  // optional string class_name = 3;
  bool has_class_name() const;
  void clear_class_name();
  static const int kClassNameFieldNumber = 3;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // optional int32 class_id = 1;
  bool has_class_id() const;
  void clear_class_id();
  static const int kClassIdFieldNumber = 1;
  ::google::protobuf::int32 class_id() const;
  void set_class_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_ClassInfo.class_t)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_table_name_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  ::google::protobuf::int32 class_id_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_ClassInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_ClassInfo) */ {
 public:
  CSVCMsg_ClassInfo();
  virtual ~CSVCMsg_ClassInfo();

  CSVCMsg_ClassInfo(const CSVCMsg_ClassInfo& from);

  inline CSVCMsg_ClassInfo& operator=(const CSVCMsg_ClassInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_ClassInfo(CSVCMsg_ClassInfo&& from) noexcept
    : CSVCMsg_ClassInfo() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_ClassInfo& operator=(CSVCMsg_ClassInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_ClassInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_ClassInfo* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_ClassInfo*>(
               &_CSVCMsg_ClassInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(CSVCMsg_ClassInfo* other);
  friend void swap(CSVCMsg_ClassInfo& a, CSVCMsg_ClassInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_ClassInfo* New() const final {
    return CreateMaybeMessage<CSVCMsg_ClassInfo>(nullptr);
  }

  CSVCMsg_ClassInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_ClassInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_ClassInfo& from);
  void MergeFrom(const CSVCMsg_ClassInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_ClassInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_ClassInfo_class_t class_t;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CSVCMsg_ClassInfo.class_t classes = 2;
  int classes_size() const;
  void clear_classes();
  static const int kClassesFieldNumber = 2;
  ::proto::dota::CSVCMsg_ClassInfo_class_t* mutable_classes(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_ClassInfo_class_t >*
      mutable_classes();
  const ::proto::dota::CSVCMsg_ClassInfo_class_t& classes(int index) const;
  ::proto::dota::CSVCMsg_ClassInfo_class_t* add_classes();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_ClassInfo_class_t >&
      classes() const;

  // optional bool create_on_client = 1;
  bool has_create_on_client() const;
  void clear_create_on_client();
  static const int kCreateOnClientFieldNumber = 1;
  bool create_on_client() const;
  void set_create_on_client(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_ClassInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_ClassInfo_class_t > classes_;
  bool create_on_client_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_SetPause final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_SetPause) */ {
 public:
  CSVCMsg_SetPause();
  virtual ~CSVCMsg_SetPause();

  CSVCMsg_SetPause(const CSVCMsg_SetPause& from);

  inline CSVCMsg_SetPause& operator=(const CSVCMsg_SetPause& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_SetPause(CSVCMsg_SetPause&& from) noexcept
    : CSVCMsg_SetPause() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_SetPause& operator=(CSVCMsg_SetPause&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_SetPause& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_SetPause* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_SetPause*>(
               &_CSVCMsg_SetPause_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(CSVCMsg_SetPause* other);
  friend void swap(CSVCMsg_SetPause& a, CSVCMsg_SetPause& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_SetPause* New() const final {
    return CreateMaybeMessage<CSVCMsg_SetPause>(nullptr);
  }

  CSVCMsg_SetPause* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_SetPause>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_SetPause& from);
  void MergeFrom(const CSVCMsg_SetPause& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_SetPause* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool paused = 1;
  bool has_paused() const;
  void clear_paused();
  static const int kPausedFieldNumber = 1;
  bool paused() const;
  void set_paused(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_SetPause)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool paused_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_VoiceInit final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_VoiceInit) */ {
 public:
  CSVCMsg_VoiceInit();
  virtual ~CSVCMsg_VoiceInit();

  CSVCMsg_VoiceInit(const CSVCMsg_VoiceInit& from);

  inline CSVCMsg_VoiceInit& operator=(const CSVCMsg_VoiceInit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_VoiceInit(CSVCMsg_VoiceInit&& from) noexcept
    : CSVCMsg_VoiceInit() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_VoiceInit& operator=(CSVCMsg_VoiceInit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_VoiceInit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_VoiceInit* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_VoiceInit*>(
               &_CSVCMsg_VoiceInit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(CSVCMsg_VoiceInit* other);
  friend void swap(CSVCMsg_VoiceInit& a, CSVCMsg_VoiceInit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_VoiceInit* New() const final {
    return CreateMaybeMessage<CSVCMsg_VoiceInit>(nullptr);
  }

  CSVCMsg_VoiceInit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_VoiceInit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_VoiceInit& from);
  void MergeFrom(const CSVCMsg_VoiceInit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_VoiceInit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string codec = 2;
  bool has_codec() const;
  void clear_codec();
  static const int kCodecFieldNumber = 2;
  const ::std::string& codec() const;
  void set_codec(const ::std::string& value);
  #if LANG_CXX11
  void set_codec(::std::string&& value);
  #endif
  void set_codec(const char* value);
  void set_codec(const char* value, size_t size);
  ::std::string* mutable_codec();
  ::std::string* release_codec();
  void set_allocated_codec(::std::string* codec);

  // optional int32 quality = 1;
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 1;
  ::google::protobuf::int32 quality() const;
  void set_quality(::google::protobuf::int32 value);

  // optional int32 version = 3 [default = 0];
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_VoiceInit)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr codec_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 version_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_Print final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_Print) */ {
 public:
  CSVCMsg_Print();
  virtual ~CSVCMsg_Print();

  CSVCMsg_Print(const CSVCMsg_Print& from);

  inline CSVCMsg_Print& operator=(const CSVCMsg_Print& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_Print(CSVCMsg_Print&& from) noexcept
    : CSVCMsg_Print() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_Print& operator=(CSVCMsg_Print&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_Print& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_Print* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_Print*>(
               &_CSVCMsg_Print_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(CSVCMsg_Print* other);
  friend void swap(CSVCMsg_Print& a, CSVCMsg_Print& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_Print* New() const final {
    return CreateMaybeMessage<CSVCMsg_Print>(nullptr);
  }

  CSVCMsg_Print* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_Print>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_Print& from);
  void MergeFrom(const CSVCMsg_Print& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_Print* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_Print)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_Sounds_sounddata_t final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_Sounds.sounddata_t) */ {
 public:
  CSVCMsg_Sounds_sounddata_t();
  virtual ~CSVCMsg_Sounds_sounddata_t();

  CSVCMsg_Sounds_sounddata_t(const CSVCMsg_Sounds_sounddata_t& from);

  inline CSVCMsg_Sounds_sounddata_t& operator=(const CSVCMsg_Sounds_sounddata_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_Sounds_sounddata_t(CSVCMsg_Sounds_sounddata_t&& from) noexcept
    : CSVCMsg_Sounds_sounddata_t() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_Sounds_sounddata_t& operator=(CSVCMsg_Sounds_sounddata_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_Sounds_sounddata_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_Sounds_sounddata_t* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_Sounds_sounddata_t*>(
               &_CSVCMsg_Sounds_sounddata_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(CSVCMsg_Sounds_sounddata_t* other);
  friend void swap(CSVCMsg_Sounds_sounddata_t& a, CSVCMsg_Sounds_sounddata_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_Sounds_sounddata_t* New() const final {
    return CreateMaybeMessage<CSVCMsg_Sounds_sounddata_t>(nullptr);
  }

  CSVCMsg_Sounds_sounddata_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_Sounds_sounddata_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_Sounds_sounddata_t& from);
  void MergeFrom(const CSVCMsg_Sounds_sounddata_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_Sounds_sounddata_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 origin_x = 1;
  bool has_origin_x() const;
  void clear_origin_x();
  static const int kOriginXFieldNumber = 1;
  ::google::protobuf::int32 origin_x() const;
  void set_origin_x(::google::protobuf::int32 value);

  // optional sint32 origin_y = 2;
  bool has_origin_y() const;
  void clear_origin_y();
  static const int kOriginYFieldNumber = 2;
  ::google::protobuf::int32 origin_y() const;
  void set_origin_y(::google::protobuf::int32 value);

  // optional sint32 origin_z = 3;
  bool has_origin_z() const;
  void clear_origin_z();
  static const int kOriginZFieldNumber = 3;
  ::google::protobuf::int32 origin_z() const;
  void set_origin_z(::google::protobuf::int32 value);

  // optional uint32 volume = 4;
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 4;
  ::google::protobuf::uint32 volume() const;
  void set_volume(::google::protobuf::uint32 value);

  // optional float delay_value = 5;
  bool has_delay_value() const;
  void clear_delay_value();
  static const int kDelayValueFieldNumber = 5;
  float delay_value() const;
  void set_delay_value(float value);

  // optional int32 sequence_number = 6;
  bool has_sequence_number() const;
  void clear_sequence_number();
  static const int kSequenceNumberFieldNumber = 6;
  ::google::protobuf::int32 sequence_number() const;
  void set_sequence_number(::google::protobuf::int32 value);

  // optional int32 entity_index = 7;
  bool has_entity_index() const;
  void clear_entity_index();
  static const int kEntityIndexFieldNumber = 7;
  ::google::protobuf::int32 entity_index() const;
  void set_entity_index(::google::protobuf::int32 value);

  // optional int32 channel = 8;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 8;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // optional int32 pitch = 9;
  bool has_pitch() const;
  void clear_pitch();
  static const int kPitchFieldNumber = 9;
  ::google::protobuf::int32 pitch() const;
  void set_pitch(::google::protobuf::int32 value);

  // optional int32 flags = 10;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 10;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // optional uint32 sound_num = 11;
  bool has_sound_num() const;
  void clear_sound_num();
  static const int kSoundNumFieldNumber = 11;
  ::google::protobuf::uint32 sound_num() const;
  void set_sound_num(::google::protobuf::uint32 value);

  // optional fixed32 sound_num_handle = 12;
  bool has_sound_num_handle() const;
  void clear_sound_num_handle();
  static const int kSoundNumHandleFieldNumber = 12;
  ::google::protobuf::uint32 sound_num_handle() const;
  void set_sound_num_handle(::google::protobuf::uint32 value);

  // optional int32 speaker_entity = 13;
  bool has_speaker_entity() const;
  void clear_speaker_entity();
  static const int kSpeakerEntityFieldNumber = 13;
  ::google::protobuf::int32 speaker_entity() const;
  void set_speaker_entity(::google::protobuf::int32 value);

  // optional int32 random_seed = 14;
  bool has_random_seed() const;
  void clear_random_seed();
  static const int kRandomSeedFieldNumber = 14;
  ::google::protobuf::int32 random_seed() const;
  void set_random_seed(::google::protobuf::int32 value);

  // optional int32 sound_level = 15;
  bool has_sound_level() const;
  void clear_sound_level();
  static const int kSoundLevelFieldNumber = 15;
  ::google::protobuf::int32 sound_level() const;
  void set_sound_level(::google::protobuf::int32 value);

  // optional bool is_sentence = 16;
  bool has_is_sentence() const;
  void clear_is_sentence();
  static const int kIsSentenceFieldNumber = 16;
  bool is_sentence() const;
  void set_is_sentence(bool value);

  // optional bool is_ambient = 17;
  bool has_is_ambient() const;
  void clear_is_ambient();
  static const int kIsAmbientFieldNumber = 17;
  bool is_ambient() const;
  void set_is_ambient(bool value);

  // optional fixed64 sound_resource_id = 19;
  bool has_sound_resource_id() const;
  void clear_sound_resource_id();
  static const int kSoundResourceIdFieldNumber = 19;
  ::google::protobuf::uint64 sound_resource_id() const;
  void set_sound_resource_id(::google::protobuf::uint64 value);

  // optional uint32 guid = 18;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 18;
  ::google::protobuf::uint32 guid() const;
  void set_guid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_Sounds.sounddata_t)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 origin_x_;
  ::google::protobuf::int32 origin_y_;
  ::google::protobuf::int32 origin_z_;
  ::google::protobuf::uint32 volume_;
  float delay_value_;
  ::google::protobuf::int32 sequence_number_;
  ::google::protobuf::int32 entity_index_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 pitch_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::uint32 sound_num_;
  ::google::protobuf::uint32 sound_num_handle_;
  ::google::protobuf::int32 speaker_entity_;
  ::google::protobuf::int32 random_seed_;
  ::google::protobuf::int32 sound_level_;
  bool is_sentence_;
  bool is_ambient_;
  ::google::protobuf::uint64 sound_resource_id_;
  ::google::protobuf::uint32 guid_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_Sounds final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_Sounds) */ {
 public:
  CSVCMsg_Sounds();
  virtual ~CSVCMsg_Sounds();

  CSVCMsg_Sounds(const CSVCMsg_Sounds& from);

  inline CSVCMsg_Sounds& operator=(const CSVCMsg_Sounds& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_Sounds(CSVCMsg_Sounds&& from) noexcept
    : CSVCMsg_Sounds() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_Sounds& operator=(CSVCMsg_Sounds&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_Sounds& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_Sounds* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_Sounds*>(
               &_CSVCMsg_Sounds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(CSVCMsg_Sounds* other);
  friend void swap(CSVCMsg_Sounds& a, CSVCMsg_Sounds& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_Sounds* New() const final {
    return CreateMaybeMessage<CSVCMsg_Sounds>(nullptr);
  }

  CSVCMsg_Sounds* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_Sounds>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_Sounds& from);
  void MergeFrom(const CSVCMsg_Sounds& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_Sounds* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_Sounds_sounddata_t sounddata_t;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CSVCMsg_Sounds.sounddata_t sounds = 2;
  int sounds_size() const;
  void clear_sounds();
  static const int kSoundsFieldNumber = 2;
  ::proto::dota::CSVCMsg_Sounds_sounddata_t* mutable_sounds(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_Sounds_sounddata_t >*
      mutable_sounds();
  const ::proto::dota::CSVCMsg_Sounds_sounddata_t& sounds(int index) const;
  ::proto::dota::CSVCMsg_Sounds_sounddata_t* add_sounds();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_Sounds_sounddata_t >&
      sounds() const;

  // optional bool reliable_sound = 1;
  bool has_reliable_sound() const;
  void clear_reliable_sound();
  static const int kReliableSoundFieldNumber = 1;
  bool reliable_sound() const;
  void set_reliable_sound(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_Sounds)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_Sounds_sounddata_t > sounds_;
  bool reliable_sound_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_Prefetch final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_Prefetch) */ {
 public:
  CSVCMsg_Prefetch();
  virtual ~CSVCMsg_Prefetch();

  CSVCMsg_Prefetch(const CSVCMsg_Prefetch& from);

  inline CSVCMsg_Prefetch& operator=(const CSVCMsg_Prefetch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_Prefetch(CSVCMsg_Prefetch&& from) noexcept
    : CSVCMsg_Prefetch() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_Prefetch& operator=(CSVCMsg_Prefetch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_Prefetch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_Prefetch* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_Prefetch*>(
               &_CSVCMsg_Prefetch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(CSVCMsg_Prefetch* other);
  friend void swap(CSVCMsg_Prefetch& a, CSVCMsg_Prefetch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_Prefetch* New() const final {
    return CreateMaybeMessage<CSVCMsg_Prefetch>(nullptr);
  }

  CSVCMsg_Prefetch* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_Prefetch>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_Prefetch& from);
  void MergeFrom(const CSVCMsg_Prefetch& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_Prefetch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sound_index = 1;
  bool has_sound_index() const;
  void clear_sound_index();
  static const int kSoundIndexFieldNumber = 1;
  ::google::protobuf::int32 sound_index() const;
  void set_sound_index(::google::protobuf::int32 value);

  // optional .proto.dota.PrefetchType resource_type = 2 [default = PFT_SOUND];
  bool has_resource_type() const;
  void clear_resource_type();
  static const int kResourceTypeFieldNumber = 2;
  ::proto::dota::PrefetchType resource_type() const;
  void set_resource_type(::proto::dota::PrefetchType value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_Prefetch)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 sound_index_;
  int resource_type_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_SetView final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_SetView) */ {
 public:
  CSVCMsg_SetView();
  virtual ~CSVCMsg_SetView();

  CSVCMsg_SetView(const CSVCMsg_SetView& from);

  inline CSVCMsg_SetView& operator=(const CSVCMsg_SetView& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_SetView(CSVCMsg_SetView&& from) noexcept
    : CSVCMsg_SetView() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_SetView& operator=(CSVCMsg_SetView&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_SetView& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_SetView* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_SetView*>(
               &_CSVCMsg_SetView_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(CSVCMsg_SetView* other);
  friend void swap(CSVCMsg_SetView& a, CSVCMsg_SetView& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_SetView* New() const final {
    return CreateMaybeMessage<CSVCMsg_SetView>(nullptr);
  }

  CSVCMsg_SetView* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_SetView>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_SetView& from);
  void MergeFrom(const CSVCMsg_SetView& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_SetView* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entity_index = 1;
  bool has_entity_index() const;
  void clear_entity_index();
  static const int kEntityIndexFieldNumber = 1;
  ::google::protobuf::int32 entity_index() const;
  void set_entity_index(::google::protobuf::int32 value);

  // optional int32 slot = 2;
  bool has_slot() const;
  void clear_slot();
  static const int kSlotFieldNumber = 2;
  ::google::protobuf::int32 slot() const;
  void set_slot(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_SetView)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 entity_index_;
  ::google::protobuf::int32 slot_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_FixAngle final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_FixAngle) */ {
 public:
  CSVCMsg_FixAngle();
  virtual ~CSVCMsg_FixAngle();

  CSVCMsg_FixAngle(const CSVCMsg_FixAngle& from);

  inline CSVCMsg_FixAngle& operator=(const CSVCMsg_FixAngle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_FixAngle(CSVCMsg_FixAngle&& from) noexcept
    : CSVCMsg_FixAngle() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_FixAngle& operator=(CSVCMsg_FixAngle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_FixAngle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_FixAngle* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_FixAngle*>(
               &_CSVCMsg_FixAngle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(CSVCMsg_FixAngle* other);
  friend void swap(CSVCMsg_FixAngle& a, CSVCMsg_FixAngle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_FixAngle* New() const final {
    return CreateMaybeMessage<CSVCMsg_FixAngle>(nullptr);
  }

  CSVCMsg_FixAngle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_FixAngle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_FixAngle& from);
  void MergeFrom(const CSVCMsg_FixAngle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_FixAngle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgQAngle angle = 2;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 2;
  const ::proto::dota::CMsgQAngle& angle() const;
  ::proto::dota::CMsgQAngle* release_angle();
  ::proto::dota::CMsgQAngle* mutable_angle();
  void set_allocated_angle(::proto::dota::CMsgQAngle* angle);

  // optional bool relative = 1;
  bool has_relative() const;
  void clear_relative();
  static const int kRelativeFieldNumber = 1;
  bool relative() const;
  void set_relative(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_FixAngle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgQAngle* angle_;
  bool relative_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_CrosshairAngle final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_CrosshairAngle) */ {
 public:
  CSVCMsg_CrosshairAngle();
  virtual ~CSVCMsg_CrosshairAngle();

  CSVCMsg_CrosshairAngle(const CSVCMsg_CrosshairAngle& from);

  inline CSVCMsg_CrosshairAngle& operator=(const CSVCMsg_CrosshairAngle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_CrosshairAngle(CSVCMsg_CrosshairAngle&& from) noexcept
    : CSVCMsg_CrosshairAngle() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_CrosshairAngle& operator=(CSVCMsg_CrosshairAngle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_CrosshairAngle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_CrosshairAngle* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_CrosshairAngle*>(
               &_CSVCMsg_CrosshairAngle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(CSVCMsg_CrosshairAngle* other);
  friend void swap(CSVCMsg_CrosshairAngle& a, CSVCMsg_CrosshairAngle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_CrosshairAngle* New() const final {
    return CreateMaybeMessage<CSVCMsg_CrosshairAngle>(nullptr);
  }

  CSVCMsg_CrosshairAngle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_CrosshairAngle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_CrosshairAngle& from);
  void MergeFrom(const CSVCMsg_CrosshairAngle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_CrosshairAngle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgQAngle angle = 1;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 1;
  const ::proto::dota::CMsgQAngle& angle() const;
  ::proto::dota::CMsgQAngle* release_angle();
  ::proto::dota::CMsgQAngle* mutable_angle();
  void set_allocated_angle(::proto::dota::CMsgQAngle* angle);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_CrosshairAngle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgQAngle* angle_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_BSPDecal final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_BSPDecal) */ {
 public:
  CSVCMsg_BSPDecal();
  virtual ~CSVCMsg_BSPDecal();

  CSVCMsg_BSPDecal(const CSVCMsg_BSPDecal& from);

  inline CSVCMsg_BSPDecal& operator=(const CSVCMsg_BSPDecal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_BSPDecal(CSVCMsg_BSPDecal&& from) noexcept
    : CSVCMsg_BSPDecal() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_BSPDecal& operator=(CSVCMsg_BSPDecal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_BSPDecal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_BSPDecal* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_BSPDecal*>(
               &_CSVCMsg_BSPDecal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(CSVCMsg_BSPDecal* other);
  friend void swap(CSVCMsg_BSPDecal& a, CSVCMsg_BSPDecal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_BSPDecal* New() const final {
    return CreateMaybeMessage<CSVCMsg_BSPDecal>(nullptr);
  }

  CSVCMsg_BSPDecal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_BSPDecal>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_BSPDecal& from);
  void MergeFrom(const CSVCMsg_BSPDecal& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_BSPDecal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::dota::CMsgVector& pos() const;
  ::proto::dota::CMsgVector* release_pos();
  ::proto::dota::CMsgVector* mutable_pos();
  void set_allocated_pos(::proto::dota::CMsgVector* pos);

  // optional int32 decal_texture_index = 2;
  bool has_decal_texture_index() const;
  void clear_decal_texture_index();
  static const int kDecalTextureIndexFieldNumber = 2;
  ::google::protobuf::int32 decal_texture_index() const;
  void set_decal_texture_index(::google::protobuf::int32 value);

  // optional int32 entity_index = 3;
  bool has_entity_index() const;
  void clear_entity_index();
  static const int kEntityIndexFieldNumber = 3;
  ::google::protobuf::int32 entity_index() const;
  void set_entity_index(::google::protobuf::int32 value);

  // optional int32 model_index = 4;
  bool has_model_index() const;
  void clear_model_index();
  static const int kModelIndexFieldNumber = 4;
  ::google::protobuf::int32 model_index() const;
  void set_model_index(::google::protobuf::int32 value);

  // optional bool low_priority = 5;
  bool has_low_priority() const;
  void clear_low_priority();
  static const int kLowPriorityFieldNumber = 5;
  bool low_priority() const;
  void set_low_priority(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_BSPDecal)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgVector* pos_;
  ::google::protobuf::int32 decal_texture_index_;
  ::google::protobuf::int32 entity_index_;
  ::google::protobuf::int32 model_index_;
  bool low_priority_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_SplitScreen final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_SplitScreen) */ {
 public:
  CSVCMsg_SplitScreen();
  virtual ~CSVCMsg_SplitScreen();

  CSVCMsg_SplitScreen(const CSVCMsg_SplitScreen& from);

  inline CSVCMsg_SplitScreen& operator=(const CSVCMsg_SplitScreen& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_SplitScreen(CSVCMsg_SplitScreen&& from) noexcept
    : CSVCMsg_SplitScreen() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_SplitScreen& operator=(CSVCMsg_SplitScreen&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_SplitScreen& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_SplitScreen* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_SplitScreen*>(
               &_CSVCMsg_SplitScreen_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(CSVCMsg_SplitScreen* other);
  friend void swap(CSVCMsg_SplitScreen& a, CSVCMsg_SplitScreen& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_SplitScreen* New() const final {
    return CreateMaybeMessage<CSVCMsg_SplitScreen>(nullptr);
  }

  CSVCMsg_SplitScreen* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_SplitScreen>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_SplitScreen& from);
  void MergeFrom(const CSVCMsg_SplitScreen& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_SplitScreen* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::proto::dota::ESplitScreenMessageType type() const;
  void set_type(::proto::dota::ESplitScreenMessageType value);

  // optional int32 slot = 2;
  bool has_slot() const;
  void clear_slot();
  static const int kSlotFieldNumber = 2;
  ::google::protobuf::int32 slot() const;
  void set_slot(::google::protobuf::int32 value);

  // optional int32 player_index = 3;
  bool has_player_index() const;
  void clear_player_index();
  static const int kPlayerIndexFieldNumber = 3;
  ::google::protobuf::int32 player_index() const;
  void set_player_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_SplitScreen)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int type_;
  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 player_index_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_GetCvarValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_GetCvarValue) */ {
 public:
  CSVCMsg_GetCvarValue();
  virtual ~CSVCMsg_GetCvarValue();

  CSVCMsg_GetCvarValue(const CSVCMsg_GetCvarValue& from);

  inline CSVCMsg_GetCvarValue& operator=(const CSVCMsg_GetCvarValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_GetCvarValue(CSVCMsg_GetCvarValue&& from) noexcept
    : CSVCMsg_GetCvarValue() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_GetCvarValue& operator=(CSVCMsg_GetCvarValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_GetCvarValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_GetCvarValue* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_GetCvarValue*>(
               &_CSVCMsg_GetCvarValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(CSVCMsg_GetCvarValue* other);
  friend void swap(CSVCMsg_GetCvarValue& a, CSVCMsg_GetCvarValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_GetCvarValue* New() const final {
    return CreateMaybeMessage<CSVCMsg_GetCvarValue>(nullptr);
  }

  CSVCMsg_GetCvarValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_GetCvarValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_GetCvarValue& from);
  void MergeFrom(const CSVCMsg_GetCvarValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_GetCvarValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cvar_name = 2;
  bool has_cvar_name() const;
  void clear_cvar_name();
  static const int kCvarNameFieldNumber = 2;
  const ::std::string& cvar_name() const;
  void set_cvar_name(const ::std::string& value);
  #if LANG_CXX11
  void set_cvar_name(::std::string&& value);
  #endif
  void set_cvar_name(const char* value);
  void set_cvar_name(const char* value, size_t size);
  ::std::string* mutable_cvar_name();
  ::std::string* release_cvar_name();
  void set_allocated_cvar_name(::std::string* cvar_name);

  // optional int32 cookie = 1;
  bool has_cookie() const;
  void clear_cookie();
  static const int kCookieFieldNumber = 1;
  ::google::protobuf::int32 cookie() const;
  void set_cookie(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_GetCvarValue)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cvar_name_;
  ::google::protobuf::int32 cookie_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_Menu final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_Menu) */ {
 public:
  CSVCMsg_Menu();
  virtual ~CSVCMsg_Menu();

  CSVCMsg_Menu(const CSVCMsg_Menu& from);

  inline CSVCMsg_Menu& operator=(const CSVCMsg_Menu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_Menu(CSVCMsg_Menu&& from) noexcept
    : CSVCMsg_Menu() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_Menu& operator=(CSVCMsg_Menu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_Menu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_Menu* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_Menu*>(
               &_CSVCMsg_Menu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(CSVCMsg_Menu* other);
  friend void swap(CSVCMsg_Menu& a, CSVCMsg_Menu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_Menu* New() const final {
    return CreateMaybeMessage<CSVCMsg_Menu>(nullptr);
  }

  CSVCMsg_Menu* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_Menu>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_Menu& from);
  void MergeFrom(const CSVCMsg_Menu& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_Menu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes menu_key_values = 2;
  bool has_menu_key_values() const;
  void clear_menu_key_values();
  static const int kMenuKeyValuesFieldNumber = 2;
  const ::std::string& menu_key_values() const;
  void set_menu_key_values(const ::std::string& value);
  #if LANG_CXX11
  void set_menu_key_values(::std::string&& value);
  #endif
  void set_menu_key_values(const char* value);
  void set_menu_key_values(const void* value, size_t size);
  ::std::string* mutable_menu_key_values();
  ::std::string* release_menu_key_values();
  void set_allocated_menu_key_values(::std::string* menu_key_values);

  // optional int32 dialog_type = 1;
  bool has_dialog_type() const;
  void clear_dialog_type();
  static const int kDialogTypeFieldNumber = 1;
  ::google::protobuf::int32 dialog_type() const;
  void set_dialog_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_Menu)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr menu_key_values_;
  ::google::protobuf::int32 dialog_type_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_SendTable_sendprop_t final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_SendTable.sendprop_t) */ {
 public:
  CSVCMsg_SendTable_sendprop_t();
  virtual ~CSVCMsg_SendTable_sendprop_t();

  CSVCMsg_SendTable_sendprop_t(const CSVCMsg_SendTable_sendprop_t& from);

  inline CSVCMsg_SendTable_sendprop_t& operator=(const CSVCMsg_SendTable_sendprop_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_SendTable_sendprop_t(CSVCMsg_SendTable_sendprop_t&& from) noexcept
    : CSVCMsg_SendTable_sendprop_t() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_SendTable_sendprop_t& operator=(CSVCMsg_SendTable_sendprop_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_SendTable_sendprop_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_SendTable_sendprop_t* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_SendTable_sendprop_t*>(
               &_CSVCMsg_SendTable_sendprop_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(CSVCMsg_SendTable_sendprop_t* other);
  friend void swap(CSVCMsg_SendTable_sendprop_t& a, CSVCMsg_SendTable_sendprop_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_SendTable_sendprop_t* New() const final {
    return CreateMaybeMessage<CSVCMsg_SendTable_sendprop_t>(nullptr);
  }

  CSVCMsg_SendTable_sendprop_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_SendTable_sendprop_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_SendTable_sendprop_t& from);
  void MergeFrom(const CSVCMsg_SendTable_sendprop_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_SendTable_sendprop_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string var_name = 2;
  bool has_var_name() const;
  void clear_var_name();
  static const int kVarNameFieldNumber = 2;
  const ::std::string& var_name() const;
  void set_var_name(const ::std::string& value);
  #if LANG_CXX11
  void set_var_name(::std::string&& value);
  #endif
  void set_var_name(const char* value);
  void set_var_name(const char* value, size_t size);
  ::std::string* mutable_var_name();
  ::std::string* release_var_name();
  void set_allocated_var_name(::std::string* var_name);

  // optional string dt_name = 5;
  bool has_dt_name() const;
  void clear_dt_name();
  static const int kDtNameFieldNumber = 5;
  const ::std::string& dt_name() const;
  void set_dt_name(const ::std::string& value);
  #if LANG_CXX11
  void set_dt_name(::std::string&& value);
  #endif
  void set_dt_name(const char* value);
  void set_dt_name(const char* value, size_t size);
  ::std::string* mutable_dt_name();
  ::std::string* release_dt_name();
  void set_allocated_dt_name(::std::string* dt_name);

  // optional int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 flags = 3;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // optional int32 priority = 4;
  bool has_priority() const;
  void clear_priority();
  static const int kPriorityFieldNumber = 4;
  ::google::protobuf::int32 priority() const;
  void set_priority(::google::protobuf::int32 value);

  // optional int32 num_elements = 6;
  bool has_num_elements() const;
  void clear_num_elements();
  static const int kNumElementsFieldNumber = 6;
  ::google::protobuf::int32 num_elements() const;
  void set_num_elements(::google::protobuf::int32 value);

  // optional float low_value = 7;
  bool has_low_value() const;
  void clear_low_value();
  static const int kLowValueFieldNumber = 7;
  float low_value() const;
  void set_low_value(float value);

  // optional float high_value = 8;
  bool has_high_value() const;
  void clear_high_value();
  static const int kHighValueFieldNumber = 8;
  float high_value() const;
  void set_high_value(float value);

  // optional int32 num_bits = 9;
  bool has_num_bits() const;
  void clear_num_bits();
  static const int kNumBitsFieldNumber = 9;
  ::google::protobuf::int32 num_bits() const;
  void set_num_bits(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_SendTable.sendprop_t)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr var_name_;
  ::google::protobuf::internal::ArenaStringPtr dt_name_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::int32 priority_;
  ::google::protobuf::int32 num_elements_;
  float low_value_;
  float high_value_;
  ::google::protobuf::int32 num_bits_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_SendTable final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_SendTable) */ {
 public:
  CSVCMsg_SendTable();
  virtual ~CSVCMsg_SendTable();

  CSVCMsg_SendTable(const CSVCMsg_SendTable& from);

  inline CSVCMsg_SendTable& operator=(const CSVCMsg_SendTable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_SendTable(CSVCMsg_SendTable&& from) noexcept
    : CSVCMsg_SendTable() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_SendTable& operator=(CSVCMsg_SendTable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_SendTable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_SendTable* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_SendTable*>(
               &_CSVCMsg_SendTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(CSVCMsg_SendTable* other);
  friend void swap(CSVCMsg_SendTable& a, CSVCMsg_SendTable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_SendTable* New() const final {
    return CreateMaybeMessage<CSVCMsg_SendTable>(nullptr);
  }

  CSVCMsg_SendTable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_SendTable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_SendTable& from);
  void MergeFrom(const CSVCMsg_SendTable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_SendTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_SendTable_sendprop_t sendprop_t;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CSVCMsg_SendTable.sendprop_t props = 4;
  int props_size() const;
  void clear_props();
  static const int kPropsFieldNumber = 4;
  ::proto::dota::CSVCMsg_SendTable_sendprop_t* mutable_props(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_SendTable_sendprop_t >*
      mutable_props();
  const ::proto::dota::CSVCMsg_SendTable_sendprop_t& props(int index) const;
  ::proto::dota::CSVCMsg_SendTable_sendprop_t* add_props();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_SendTable_sendprop_t >&
      props() const;

  // optional string net_table_name = 2;
  bool has_net_table_name() const;
  void clear_net_table_name();
  static const int kNetTableNameFieldNumber = 2;
  const ::std::string& net_table_name() const;
  void set_net_table_name(const ::std::string& value);
  #if LANG_CXX11
  void set_net_table_name(::std::string&& value);
  #endif
  void set_net_table_name(const char* value);
  void set_net_table_name(const char* value, size_t size);
  ::std::string* mutable_net_table_name();
  ::std::string* release_net_table_name();
  void set_allocated_net_table_name(::std::string* net_table_name);

  // optional bool is_end = 1;
  bool has_is_end() const;
  void clear_is_end();
  static const int kIsEndFieldNumber = 1;
  bool is_end() const;
  void set_is_end(bool value);

  // optional bool needs_decoder = 3;
  bool has_needs_decoder() const;
  void clear_needs_decoder();
  static const int kNeedsDecoderFieldNumber = 3;
  bool needs_decoder() const;
  void set_needs_decoder(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_SendTable)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_SendTable_sendprop_t > props_;
  ::google::protobuf::internal::ArenaStringPtr net_table_name_;
  bool is_end_;
  bool needs_decoder_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEventList_key_t final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_GameEventList.key_t) */ {
 public:
  CSVCMsg_GameEventList_key_t();
  virtual ~CSVCMsg_GameEventList_key_t();

  CSVCMsg_GameEventList_key_t(const CSVCMsg_GameEventList_key_t& from);

  inline CSVCMsg_GameEventList_key_t& operator=(const CSVCMsg_GameEventList_key_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_GameEventList_key_t(CSVCMsg_GameEventList_key_t&& from) noexcept
    : CSVCMsg_GameEventList_key_t() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_GameEventList_key_t& operator=(CSVCMsg_GameEventList_key_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_GameEventList_key_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_GameEventList_key_t* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_GameEventList_key_t*>(
               &_CSVCMsg_GameEventList_key_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(CSVCMsg_GameEventList_key_t* other);
  friend void swap(CSVCMsg_GameEventList_key_t& a, CSVCMsg_GameEventList_key_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_GameEventList_key_t* New() const final {
    return CreateMaybeMessage<CSVCMsg_GameEventList_key_t>(nullptr);
  }

  CSVCMsg_GameEventList_key_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_GameEventList_key_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_GameEventList_key_t& from);
  void MergeFrom(const CSVCMsg_GameEventList_key_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_GameEventList_key_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_GameEventList.key_t)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 type_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEventList_descriptor_t final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_GameEventList.descriptor_t) */ {
 public:
  CSVCMsg_GameEventList_descriptor_t();
  virtual ~CSVCMsg_GameEventList_descriptor_t();

  CSVCMsg_GameEventList_descriptor_t(const CSVCMsg_GameEventList_descriptor_t& from);

  inline CSVCMsg_GameEventList_descriptor_t& operator=(const CSVCMsg_GameEventList_descriptor_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_GameEventList_descriptor_t(CSVCMsg_GameEventList_descriptor_t&& from) noexcept
    : CSVCMsg_GameEventList_descriptor_t() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_GameEventList_descriptor_t& operator=(CSVCMsg_GameEventList_descriptor_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_GameEventList_descriptor_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_GameEventList_descriptor_t* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_GameEventList_descriptor_t*>(
               &_CSVCMsg_GameEventList_descriptor_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(CSVCMsg_GameEventList_descriptor_t* other);
  friend void swap(CSVCMsg_GameEventList_descriptor_t& a, CSVCMsg_GameEventList_descriptor_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_GameEventList_descriptor_t* New() const final {
    return CreateMaybeMessage<CSVCMsg_GameEventList_descriptor_t>(nullptr);
  }

  CSVCMsg_GameEventList_descriptor_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_GameEventList_descriptor_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_GameEventList_descriptor_t& from);
  void MergeFrom(const CSVCMsg_GameEventList_descriptor_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_GameEventList_descriptor_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CSVCMsg_GameEventList.key_t keys = 3;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 3;
  ::proto::dota::CSVCMsg_GameEventList_key_t* mutable_keys(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_GameEventList_key_t >*
      mutable_keys();
  const ::proto::dota::CSVCMsg_GameEventList_key_t& keys(int index) const;
  ::proto::dota::CSVCMsg_GameEventList_key_t* add_keys();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_GameEventList_key_t >&
      keys() const;

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 eventid = 1;
  bool has_eventid() const;
  void clear_eventid();
  static const int kEventidFieldNumber = 1;
  ::google::protobuf::int32 eventid() const;
  void set_eventid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_GameEventList.descriptor_t)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_GameEventList_key_t > keys_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 eventid_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEventList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_GameEventList) */ {
 public:
  CSVCMsg_GameEventList();
  virtual ~CSVCMsg_GameEventList();

  CSVCMsg_GameEventList(const CSVCMsg_GameEventList& from);

  inline CSVCMsg_GameEventList& operator=(const CSVCMsg_GameEventList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_GameEventList(CSVCMsg_GameEventList&& from) noexcept
    : CSVCMsg_GameEventList() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_GameEventList& operator=(CSVCMsg_GameEventList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_GameEventList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_GameEventList* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_GameEventList*>(
               &_CSVCMsg_GameEventList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(CSVCMsg_GameEventList* other);
  friend void swap(CSVCMsg_GameEventList& a, CSVCMsg_GameEventList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_GameEventList* New() const final {
    return CreateMaybeMessage<CSVCMsg_GameEventList>(nullptr);
  }

  CSVCMsg_GameEventList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_GameEventList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_GameEventList& from);
  void MergeFrom(const CSVCMsg_GameEventList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_GameEventList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_GameEventList_key_t key_t;
  typedef CSVCMsg_GameEventList_descriptor_t descriptor_t;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CSVCMsg_GameEventList.descriptor_t descriptors = 1;
  int descriptors_size() const;
  void clear_descriptors();
  static const int kDescriptorsFieldNumber = 1;
  ::proto::dota::CSVCMsg_GameEventList_descriptor_t* mutable_descriptors(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_GameEventList_descriptor_t >*
      mutable_descriptors();
  const ::proto::dota::CSVCMsg_GameEventList_descriptor_t& descriptors(int index) const;
  ::proto::dota::CSVCMsg_GameEventList_descriptor_t* add_descriptors();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_GameEventList_descriptor_t >&
      descriptors() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_GameEventList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_GameEventList_descriptor_t > descriptors_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_PacketEntities final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_PacketEntities) */ {
 public:
  CSVCMsg_PacketEntities();
  virtual ~CSVCMsg_PacketEntities();

  CSVCMsg_PacketEntities(const CSVCMsg_PacketEntities& from);

  inline CSVCMsg_PacketEntities& operator=(const CSVCMsg_PacketEntities& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_PacketEntities(CSVCMsg_PacketEntities&& from) noexcept
    : CSVCMsg_PacketEntities() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_PacketEntities& operator=(CSVCMsg_PacketEntities&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_PacketEntities& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_PacketEntities* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_PacketEntities*>(
               &_CSVCMsg_PacketEntities_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(CSVCMsg_PacketEntities* other);
  friend void swap(CSVCMsg_PacketEntities& a, CSVCMsg_PacketEntities& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_PacketEntities* New() const final {
    return CreateMaybeMessage<CSVCMsg_PacketEntities>(nullptr);
  }

  CSVCMsg_PacketEntities* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_PacketEntities>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_PacketEntities& from);
  void MergeFrom(const CSVCMsg_PacketEntities& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_PacketEntities* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes entity_data = 7;
  bool has_entity_data() const;
  void clear_entity_data();
  static const int kEntityDataFieldNumber = 7;
  const ::std::string& entity_data() const;
  void set_entity_data(const ::std::string& value);
  #if LANG_CXX11
  void set_entity_data(::std::string&& value);
  #endif
  void set_entity_data(const char* value);
  void set_entity_data(const void* value, size_t size);
  ::std::string* mutable_entity_data();
  ::std::string* release_entity_data();
  void set_allocated_entity_data(::std::string* entity_data);

  // optional int32 max_entries = 1;
  bool has_max_entries() const;
  void clear_max_entries();
  static const int kMaxEntriesFieldNumber = 1;
  ::google::protobuf::int32 max_entries() const;
  void set_max_entries(::google::protobuf::int32 value);

  // optional int32 updated_entries = 2;
  bool has_updated_entries() const;
  void clear_updated_entries();
  static const int kUpdatedEntriesFieldNumber = 2;
  ::google::protobuf::int32 updated_entries() const;
  void set_updated_entries(::google::protobuf::int32 value);

  // optional int32 baseline = 5;
  bool has_baseline() const;
  void clear_baseline();
  static const int kBaselineFieldNumber = 5;
  ::google::protobuf::int32 baseline() const;
  void set_baseline(::google::protobuf::int32 value);

  // optional bool is_delta = 3;
  bool has_is_delta() const;
  void clear_is_delta();
  static const int kIsDeltaFieldNumber = 3;
  bool is_delta() const;
  void set_is_delta(bool value);

  // optional bool update_baseline = 4;
  bool has_update_baseline() const;
  void clear_update_baseline();
  static const int kUpdateBaselineFieldNumber = 4;
  bool update_baseline() const;
  void set_update_baseline(bool value);

  // optional bool pending_full_frame = 8;
  bool has_pending_full_frame() const;
  void clear_pending_full_frame();
  static const int kPendingFullFrameFieldNumber = 8;
  bool pending_full_frame() const;
  void set_pending_full_frame(bool value);

  // optional int32 delta_from = 6;
  bool has_delta_from() const;
  void clear_delta_from();
  static const int kDeltaFromFieldNumber = 6;
  ::google::protobuf::int32 delta_from() const;
  void set_delta_from(::google::protobuf::int32 value);

  // optional uint32 active_spawngroup_handle = 9;
  bool has_active_spawngroup_handle() const;
  void clear_active_spawngroup_handle();
  static const int kActiveSpawngroupHandleFieldNumber = 9;
  ::google::protobuf::uint32 active_spawngroup_handle() const;
  void set_active_spawngroup_handle(::google::protobuf::uint32 value);

  // optional uint32 max_spawngroup_creationsequence = 10;
  bool has_max_spawngroup_creationsequence() const;
  void clear_max_spawngroup_creationsequence();
  static const int kMaxSpawngroupCreationsequenceFieldNumber = 10;
  ::google::protobuf::uint32 max_spawngroup_creationsequence() const;
  void set_max_spawngroup_creationsequence(::google::protobuf::uint32 value);

  // optional uint32 last_cmd_number = 11;
  bool has_last_cmd_number() const;
  void clear_last_cmd_number();
  static const int kLastCmdNumberFieldNumber = 11;
  ::google::protobuf::uint32 last_cmd_number() const;
  void set_last_cmd_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_PacketEntities)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entity_data_;
  ::google::protobuf::int32 max_entries_;
  ::google::protobuf::int32 updated_entries_;
  ::google::protobuf::int32 baseline_;
  bool is_delta_;
  bool update_baseline_;
  bool pending_full_frame_;
  ::google::protobuf::int32 delta_from_;
  ::google::protobuf::uint32 active_spawngroup_handle_;
  ::google::protobuf::uint32 max_spawngroup_creationsequence_;
  ::google::protobuf::uint32 last_cmd_number_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_TempEntities final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_TempEntities) */ {
 public:
  CSVCMsg_TempEntities();
  virtual ~CSVCMsg_TempEntities();

  CSVCMsg_TempEntities(const CSVCMsg_TempEntities& from);

  inline CSVCMsg_TempEntities& operator=(const CSVCMsg_TempEntities& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_TempEntities(CSVCMsg_TempEntities&& from) noexcept
    : CSVCMsg_TempEntities() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_TempEntities& operator=(CSVCMsg_TempEntities&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_TempEntities& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_TempEntities* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_TempEntities*>(
               &_CSVCMsg_TempEntities_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(CSVCMsg_TempEntities* other);
  friend void swap(CSVCMsg_TempEntities& a, CSVCMsg_TempEntities& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_TempEntities* New() const final {
    return CreateMaybeMessage<CSVCMsg_TempEntities>(nullptr);
  }

  CSVCMsg_TempEntities* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_TempEntities>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_TempEntities& from);
  void MergeFrom(const CSVCMsg_TempEntities& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_TempEntities* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes entity_data = 3;
  bool has_entity_data() const;
  void clear_entity_data();
  static const int kEntityDataFieldNumber = 3;
  const ::std::string& entity_data() const;
  void set_entity_data(const ::std::string& value);
  #if LANG_CXX11
  void set_entity_data(::std::string&& value);
  #endif
  void set_entity_data(const char* value);
  void set_entity_data(const void* value, size_t size);
  ::std::string* mutable_entity_data();
  ::std::string* release_entity_data();
  void set_allocated_entity_data(::std::string* entity_data);

  // optional bool reliable = 1;
  bool has_reliable() const;
  void clear_reliable();
  static const int kReliableFieldNumber = 1;
  bool reliable() const;
  void set_reliable(bool value);

  // optional int32 num_entries = 2;
  bool has_num_entries() const;
  void clear_num_entries();
  static const int kNumEntriesFieldNumber = 2;
  ::google::protobuf::int32 num_entries() const;
  void set_num_entries(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_TempEntities)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entity_data_;
  bool reliable_;
  ::google::protobuf::int32 num_entries_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_CreateStringTable final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_CreateStringTable) */ {
 public:
  CSVCMsg_CreateStringTable();
  virtual ~CSVCMsg_CreateStringTable();

  CSVCMsg_CreateStringTable(const CSVCMsg_CreateStringTable& from);

  inline CSVCMsg_CreateStringTable& operator=(const CSVCMsg_CreateStringTable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_CreateStringTable(CSVCMsg_CreateStringTable&& from) noexcept
    : CSVCMsg_CreateStringTable() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_CreateStringTable& operator=(CSVCMsg_CreateStringTable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_CreateStringTable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_CreateStringTable* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_CreateStringTable*>(
               &_CSVCMsg_CreateStringTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(CSVCMsg_CreateStringTable* other);
  friend void swap(CSVCMsg_CreateStringTable& a, CSVCMsg_CreateStringTable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_CreateStringTable* New() const final {
    return CreateMaybeMessage<CSVCMsg_CreateStringTable>(nullptr);
  }

  CSVCMsg_CreateStringTable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_CreateStringTable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_CreateStringTable& from);
  void MergeFrom(const CSVCMsg_CreateStringTable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_CreateStringTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bytes string_data = 7;
  bool has_string_data() const;
  void clear_string_data();
  static const int kStringDataFieldNumber = 7;
  const ::std::string& string_data() const;
  void set_string_data(const ::std::string& value);
  #if LANG_CXX11
  void set_string_data(::std::string&& value);
  #endif
  void set_string_data(const char* value);
  void set_string_data(const void* value, size_t size);
  ::std::string* mutable_string_data();
  ::std::string* release_string_data();
  void set_allocated_string_data(::std::string* string_data);

  // optional int32 num_entries = 2;
  bool has_num_entries() const;
  void clear_num_entries();
  static const int kNumEntriesFieldNumber = 2;
  ::google::protobuf::int32 num_entries() const;
  void set_num_entries(::google::protobuf::int32 value);

  // optional int32 user_data_size = 4;
  bool has_user_data_size() const;
  void clear_user_data_size();
  static const int kUserDataSizeFieldNumber = 4;
  ::google::protobuf::int32 user_data_size() const;
  void set_user_data_size(::google::protobuf::int32 value);

  // optional int32 user_data_size_bits = 5;
  bool has_user_data_size_bits() const;
  void clear_user_data_size_bits();
  static const int kUserDataSizeBitsFieldNumber = 5;
  ::google::protobuf::int32 user_data_size_bits() const;
  void set_user_data_size_bits(::google::protobuf::int32 value);

  // optional int32 flags = 6;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 6;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // optional bool user_data_fixed_size = 3;
  bool has_user_data_fixed_size() const;
  void clear_user_data_fixed_size();
  static const int kUserDataFixedSizeFieldNumber = 3;
  bool user_data_fixed_size() const;
  void set_user_data_fixed_size(bool value);

  // optional bool data_compressed = 9;
  bool has_data_compressed() const;
  void clear_data_compressed();
  static const int kDataCompressedFieldNumber = 9;
  bool data_compressed() const;
  void set_data_compressed(bool value);

  // optional int32 uncompressed_size = 8;
  bool has_uncompressed_size() const;
  void clear_uncompressed_size();
  static const int kUncompressedSizeFieldNumber = 8;
  ::google::protobuf::int32 uncompressed_size() const;
  void set_uncompressed_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_CreateStringTable)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr string_data_;
  ::google::protobuf::int32 num_entries_;
  ::google::protobuf::int32 user_data_size_;
  ::google::protobuf::int32 user_data_size_bits_;
  ::google::protobuf::int32 flags_;
  bool user_data_fixed_size_;
  bool data_compressed_;
  ::google::protobuf::int32 uncompressed_size_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_UpdateStringTable final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_UpdateStringTable) */ {
 public:
  CSVCMsg_UpdateStringTable();
  virtual ~CSVCMsg_UpdateStringTable();

  CSVCMsg_UpdateStringTable(const CSVCMsg_UpdateStringTable& from);

  inline CSVCMsg_UpdateStringTable& operator=(const CSVCMsg_UpdateStringTable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_UpdateStringTable(CSVCMsg_UpdateStringTable&& from) noexcept
    : CSVCMsg_UpdateStringTable() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_UpdateStringTable& operator=(CSVCMsg_UpdateStringTable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_UpdateStringTable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_UpdateStringTable* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_UpdateStringTable*>(
               &_CSVCMsg_UpdateStringTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(CSVCMsg_UpdateStringTable* other);
  friend void swap(CSVCMsg_UpdateStringTable& a, CSVCMsg_UpdateStringTable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_UpdateStringTable* New() const final {
    return CreateMaybeMessage<CSVCMsg_UpdateStringTable>(nullptr);
  }

  CSVCMsg_UpdateStringTable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_UpdateStringTable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_UpdateStringTable& from);
  void MergeFrom(const CSVCMsg_UpdateStringTable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_UpdateStringTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes string_data = 3;
  bool has_string_data() const;
  void clear_string_data();
  static const int kStringDataFieldNumber = 3;
  const ::std::string& string_data() const;
  void set_string_data(const ::std::string& value);
  #if LANG_CXX11
  void set_string_data(::std::string&& value);
  #endif
  void set_string_data(const char* value);
  void set_string_data(const void* value, size_t size);
  ::std::string* mutable_string_data();
  ::std::string* release_string_data();
  void set_allocated_string_data(::std::string* string_data);

  // optional int32 table_id = 1;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional int32 num_changed_entries = 2;
  bool has_num_changed_entries() const;
  void clear_num_changed_entries();
  static const int kNumChangedEntriesFieldNumber = 2;
  ::google::protobuf::int32 num_changed_entries() const;
  void set_num_changed_entries(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_UpdateStringTable)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr string_data_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 num_changed_entries_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_VoiceData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_VoiceData) */ {
 public:
  CSVCMsg_VoiceData();
  virtual ~CSVCMsg_VoiceData();

  CSVCMsg_VoiceData(const CSVCMsg_VoiceData& from);

  inline CSVCMsg_VoiceData& operator=(const CSVCMsg_VoiceData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_VoiceData(CSVCMsg_VoiceData&& from) noexcept
    : CSVCMsg_VoiceData() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_VoiceData& operator=(CSVCMsg_VoiceData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_VoiceData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_VoiceData* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_VoiceData*>(
               &_CSVCMsg_VoiceData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(CSVCMsg_VoiceData* other);
  friend void swap(CSVCMsg_VoiceData& a, CSVCMsg_VoiceData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_VoiceData* New() const final {
    return CreateMaybeMessage<CSVCMsg_VoiceData>(nullptr);
  }

  CSVCMsg_VoiceData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_VoiceData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_VoiceData& from);
  void MergeFrom(const CSVCMsg_VoiceData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_VoiceData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVoiceAudio audio = 1;
  bool has_audio() const;
  void clear_audio();
  static const int kAudioFieldNumber = 1;
  const ::proto::dota::CMsgVoiceAudio& audio() const;
  ::proto::dota::CMsgVoiceAudio* release_audio();
  ::proto::dota::CMsgVoiceAudio* mutable_audio();
  void set_allocated_audio(::proto::dota::CMsgVoiceAudio* audio);

  // optional int32 client = 2;
  bool has_client() const;
  void clear_client();
  static const int kClientFieldNumber = 2;
  ::google::protobuf::int32 client() const;
  void set_client(::google::protobuf::int32 value);

  // optional bool proximity = 3;
  bool has_proximity() const;
  void clear_proximity();
  static const int kProximityFieldNumber = 3;
  bool proximity() const;
  void set_proximity(bool value);

  // optional fixed64 xuid = 4;
  bool has_xuid() const;
  void clear_xuid();
  static const int kXuidFieldNumber = 4;
  ::google::protobuf::uint64 xuid() const;
  void set_xuid(::google::protobuf::uint64 value);

  // optional int32 audible_mask = 5;
  bool has_audible_mask() const;
  void clear_audible_mask();
  static const int kAudibleMaskFieldNumber = 5;
  ::google::protobuf::int32 audible_mask() const;
  void set_audible_mask(::google::protobuf::int32 value);

  // optional uint32 tick = 6;
  bool has_tick() const;
  void clear_tick();
  static const int kTickFieldNumber = 6;
  ::google::protobuf::uint32 tick() const;
  void set_tick(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_VoiceData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgVoiceAudio* audio_;
  ::google::protobuf::int32 client_;
  bool proximity_;
  ::google::protobuf::uint64 xuid_;
  ::google::protobuf::int32 audible_mask_;
  ::google::protobuf::uint32 tick_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_PacketReliable final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_PacketReliable) */ {
 public:
  CSVCMsg_PacketReliable();
  virtual ~CSVCMsg_PacketReliable();

  CSVCMsg_PacketReliable(const CSVCMsg_PacketReliable& from);

  inline CSVCMsg_PacketReliable& operator=(const CSVCMsg_PacketReliable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_PacketReliable(CSVCMsg_PacketReliable&& from) noexcept
    : CSVCMsg_PacketReliable() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_PacketReliable& operator=(CSVCMsg_PacketReliable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_PacketReliable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_PacketReliable* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_PacketReliable*>(
               &_CSVCMsg_PacketReliable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(CSVCMsg_PacketReliable* other);
  friend void swap(CSVCMsg_PacketReliable& a, CSVCMsg_PacketReliable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_PacketReliable* New() const final {
    return CreateMaybeMessage<CSVCMsg_PacketReliable>(nullptr);
  }

  CSVCMsg_PacketReliable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_PacketReliable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_PacketReliable& from);
  void MergeFrom(const CSVCMsg_PacketReliable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_PacketReliable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tick = 1;
  bool has_tick() const;
  void clear_tick();
  static const int kTickFieldNumber = 1;
  ::google::protobuf::int32 tick() const;
  void set_tick(::google::protobuf::int32 value);

  // optional int32 messagessize = 2;
  bool has_messagessize() const;
  void clear_messagessize();
  static const int kMessagessizeFieldNumber = 2;
  ::google::protobuf::int32 messagessize() const;
  void set_messagessize(::google::protobuf::int32 value);

  // optional bool state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  bool state() const;
  void set_state(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_PacketReliable)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 tick_;
  ::google::protobuf::int32 messagessize_;
  bool state_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_FullFrameSplit final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_FullFrameSplit) */ {
 public:
  CSVCMsg_FullFrameSplit();
  virtual ~CSVCMsg_FullFrameSplit();

  CSVCMsg_FullFrameSplit(const CSVCMsg_FullFrameSplit& from);

  inline CSVCMsg_FullFrameSplit& operator=(const CSVCMsg_FullFrameSplit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_FullFrameSplit(CSVCMsg_FullFrameSplit&& from) noexcept
    : CSVCMsg_FullFrameSplit() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_FullFrameSplit& operator=(CSVCMsg_FullFrameSplit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_FullFrameSplit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_FullFrameSplit* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_FullFrameSplit*>(
               &_CSVCMsg_FullFrameSplit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(CSVCMsg_FullFrameSplit* other);
  friend void swap(CSVCMsg_FullFrameSplit& a, CSVCMsg_FullFrameSplit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_FullFrameSplit* New() const final {
    return CreateMaybeMessage<CSVCMsg_FullFrameSplit>(nullptr);
  }

  CSVCMsg_FullFrameSplit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_FullFrameSplit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_FullFrameSplit& from);
  void MergeFrom(const CSVCMsg_FullFrameSplit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_FullFrameSplit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional int32 tick = 1;
  bool has_tick() const;
  void clear_tick();
  static const int kTickFieldNumber = 1;
  ::google::protobuf::int32 tick() const;
  void set_tick(::google::protobuf::int32 value);

  // optional int32 section = 2;
  bool has_section() const;
  void clear_section();
  static const int kSectionFieldNumber = 2;
  ::google::protobuf::int32 section() const;
  void set_section(::google::protobuf::int32 value);

  // optional int32 total = 3;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 3;
  ::google::protobuf::int32 total() const;
  void set_total(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_FullFrameSplit)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 tick_;
  ::google::protobuf::int32 section_;
  ::google::protobuf::int32 total_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_HLTVStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_HLTVStatus) */ {
 public:
  CSVCMsg_HLTVStatus();
  virtual ~CSVCMsg_HLTVStatus();

  CSVCMsg_HLTVStatus(const CSVCMsg_HLTVStatus& from);

  inline CSVCMsg_HLTVStatus& operator=(const CSVCMsg_HLTVStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_HLTVStatus(CSVCMsg_HLTVStatus&& from) noexcept
    : CSVCMsg_HLTVStatus() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_HLTVStatus& operator=(CSVCMsg_HLTVStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_HLTVStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_HLTVStatus* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_HLTVStatus*>(
               &_CSVCMsg_HLTVStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(CSVCMsg_HLTVStatus* other);
  friend void swap(CSVCMsg_HLTVStatus& a, CSVCMsg_HLTVStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_HLTVStatus* New() const final {
    return CreateMaybeMessage<CSVCMsg_HLTVStatus>(nullptr);
  }

  CSVCMsg_HLTVStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_HLTVStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_HLTVStatus& from);
  void MergeFrom(const CSVCMsg_HLTVStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_HLTVStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string master = 1;
  bool has_master() const;
  void clear_master();
  static const int kMasterFieldNumber = 1;
  const ::std::string& master() const;
  void set_master(const ::std::string& value);
  #if LANG_CXX11
  void set_master(::std::string&& value);
  #endif
  void set_master(const char* value);
  void set_master(const char* value, size_t size);
  ::std::string* mutable_master();
  ::std::string* release_master();
  void set_allocated_master(::std::string* master);

  // optional int32 clients = 2;
  bool has_clients() const;
  void clear_clients();
  static const int kClientsFieldNumber = 2;
  ::google::protobuf::int32 clients() const;
  void set_clients(::google::protobuf::int32 value);

  // optional int32 slots = 3;
  bool has_slots() const;
  void clear_slots();
  static const int kSlotsFieldNumber = 3;
  ::google::protobuf::int32 slots() const;
  void set_slots(::google::protobuf::int32 value);

  // optional int32 proxies = 4;
  bool has_proxies() const;
  void clear_proxies();
  static const int kProxiesFieldNumber = 4;
  ::google::protobuf::int32 proxies() const;
  void set_proxies(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_HLTVStatus)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr master_;
  ::google::protobuf::int32 clients_;
  ::google::protobuf::int32 slots_;
  ::google::protobuf::int32 proxies_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_ServerSteamID final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_ServerSteamID) */ {
 public:
  CSVCMsg_ServerSteamID();
  virtual ~CSVCMsg_ServerSteamID();

  CSVCMsg_ServerSteamID(const CSVCMsg_ServerSteamID& from);

  inline CSVCMsg_ServerSteamID& operator=(const CSVCMsg_ServerSteamID& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_ServerSteamID(CSVCMsg_ServerSteamID&& from) noexcept
    : CSVCMsg_ServerSteamID() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_ServerSteamID& operator=(CSVCMsg_ServerSteamID&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_ServerSteamID& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_ServerSteamID* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_ServerSteamID*>(
               &_CSVCMsg_ServerSteamID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(CSVCMsg_ServerSteamID* other);
  friend void swap(CSVCMsg_ServerSteamID& a, CSVCMsg_ServerSteamID& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_ServerSteamID* New() const final {
    return CreateMaybeMessage<CSVCMsg_ServerSteamID>(nullptr);
  }

  CSVCMsg_ServerSteamID* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_ServerSteamID>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_ServerSteamID& from);
  void MergeFrom(const CSVCMsg_ServerSteamID& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_ServerSteamID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_ServerSteamID)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_CmdKeyValues final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_CmdKeyValues) */ {
 public:
  CSVCMsg_CmdKeyValues();
  virtual ~CSVCMsg_CmdKeyValues();

  CSVCMsg_CmdKeyValues(const CSVCMsg_CmdKeyValues& from);

  inline CSVCMsg_CmdKeyValues& operator=(const CSVCMsg_CmdKeyValues& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_CmdKeyValues(CSVCMsg_CmdKeyValues&& from) noexcept
    : CSVCMsg_CmdKeyValues() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_CmdKeyValues& operator=(CSVCMsg_CmdKeyValues&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_CmdKeyValues& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_CmdKeyValues* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_CmdKeyValues*>(
               &_CSVCMsg_CmdKeyValues_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(CSVCMsg_CmdKeyValues* other);
  friend void swap(CSVCMsg_CmdKeyValues& a, CSVCMsg_CmdKeyValues& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_CmdKeyValues* New() const final {
    return CreateMaybeMessage<CSVCMsg_CmdKeyValues>(nullptr);
  }

  CSVCMsg_CmdKeyValues* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_CmdKeyValues>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_CmdKeyValues& from);
  void MergeFrom(const CSVCMsg_CmdKeyValues& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_CmdKeyValues* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_CmdKeyValues)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgIPCAddress final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgIPCAddress) */ {
 public:
  CMsgIPCAddress();
  virtual ~CMsgIPCAddress();

  CMsgIPCAddress(const CMsgIPCAddress& from);

  inline CMsgIPCAddress& operator=(const CMsgIPCAddress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgIPCAddress(CMsgIPCAddress&& from) noexcept
    : CMsgIPCAddress() {
    *this = ::std::move(from);
  }

  inline CMsgIPCAddress& operator=(CMsgIPCAddress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgIPCAddress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgIPCAddress* internal_default_instance() {
    return reinterpret_cast<const CMsgIPCAddress*>(
               &_CMsgIPCAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(CMsgIPCAddress* other);
  friend void swap(CMsgIPCAddress& a, CMsgIPCAddress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgIPCAddress* New() const final {
    return CreateMaybeMessage<CMsgIPCAddress>(nullptr);
  }

  CMsgIPCAddress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgIPCAddress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgIPCAddress& from);
  void MergeFrom(const CMsgIPCAddress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgIPCAddress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 computer_guid = 1;
  bool has_computer_guid() const;
  void clear_computer_guid();
  static const int kComputerGuidFieldNumber = 1;
  ::google::protobuf::uint64 computer_guid() const;
  void set_computer_guid(::google::protobuf::uint64 value);

  // optional uint32 process_id = 2;
  bool has_process_id() const;
  void clear_process_id();
  static const int kProcessIdFieldNumber = 2;
  ::google::protobuf::uint32 process_id() const;
  void set_process_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgIPCAddress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 computer_guid_;
  ::google::protobuf::uint32 process_id_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerPeer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerPeer) */ {
 public:
  CMsgServerPeer();
  virtual ~CMsgServerPeer();

  CMsgServerPeer(const CMsgServerPeer& from);

  inline CMsgServerPeer& operator=(const CMsgServerPeer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerPeer(CMsgServerPeer&& from) noexcept
    : CMsgServerPeer() {
    *this = ::std::move(from);
  }

  inline CMsgServerPeer& operator=(CMsgServerPeer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerPeer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerPeer* internal_default_instance() {
    return reinterpret_cast<const CMsgServerPeer*>(
               &_CMsgServerPeer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(CMsgServerPeer* other);
  friend void swap(CMsgServerPeer& a, CMsgServerPeer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerPeer* New() const final {
    return CreateMaybeMessage<CMsgServerPeer>(nullptr);
  }

  CMsgServerPeer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerPeer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerPeer& from);
  void MergeFrom(const CMsgServerPeer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerPeer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgIPCAddress ipc = 3;
  bool has_ipc() const;
  void clear_ipc();
  static const int kIpcFieldNumber = 3;
  const ::proto::dota::CMsgIPCAddress& ipc() const;
  ::proto::dota::CMsgIPCAddress* release_ipc();
  ::proto::dota::CMsgIPCAddress* mutable_ipc();
  void set_allocated_ipc(::proto::dota::CMsgIPCAddress* ipc);

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional int32 player_slot = 1;
  bool has_player_slot() const;
  void clear_player_slot();
  static const int kPlayerSlotFieldNumber = 1;
  ::google::protobuf::int32 player_slot() const;
  void set_player_slot(::google::protobuf::int32 value);

  // optional bool they_hear_you = 4;
  bool has_they_hear_you() const;
  void clear_they_hear_you();
  static const int kTheyHearYouFieldNumber = 4;
  bool they_hear_you() const;
  void set_they_hear_you(bool value);

  // optional bool you_hear_them = 5;
  bool has_you_hear_them() const;
  void clear_you_hear_them();
  static const int kYouHearThemFieldNumber = 5;
  bool you_hear_them() const;
  void set_you_hear_them(bool value);

  // optional bool is_listenserver_host = 6;
  bool has_is_listenserver_host() const;
  void clear_is_listenserver_host();
  static const int kIsListenserverHostFieldNumber = 6;
  bool is_listenserver_host() const;
  void set_is_listenserver_host(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerPeer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CMsgIPCAddress* ipc_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::int32 player_slot_;
  bool they_hear_you_;
  bool you_hear_them_;
  bool is_listenserver_host_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_PeerList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_PeerList) */ {
 public:
  CSVCMsg_PeerList();
  virtual ~CSVCMsg_PeerList();

  CSVCMsg_PeerList(const CSVCMsg_PeerList& from);

  inline CSVCMsg_PeerList& operator=(const CSVCMsg_PeerList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_PeerList(CSVCMsg_PeerList&& from) noexcept
    : CSVCMsg_PeerList() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_PeerList& operator=(CSVCMsg_PeerList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_PeerList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_PeerList* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_PeerList*>(
               &_CSVCMsg_PeerList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(CSVCMsg_PeerList* other);
  friend void swap(CSVCMsg_PeerList& a, CSVCMsg_PeerList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_PeerList* New() const final {
    return CreateMaybeMessage<CSVCMsg_PeerList>(nullptr);
  }

  CSVCMsg_PeerList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_PeerList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_PeerList& from);
  void MergeFrom(const CSVCMsg_PeerList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_PeerList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerPeer peer = 1;
  int peer_size() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  ::proto::dota::CMsgServerPeer* mutable_peer(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerPeer >*
      mutable_peer();
  const ::proto::dota::CMsgServerPeer& peer(int index) const;
  ::proto::dota::CMsgServerPeer* add_peer();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerPeer >&
      peer() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_PeerList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerPeer > peer_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_ClearAllStringTables final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_ClearAllStringTables) */ {
 public:
  CSVCMsg_ClearAllStringTables();
  virtual ~CSVCMsg_ClearAllStringTables();

  CSVCMsg_ClearAllStringTables(const CSVCMsg_ClearAllStringTables& from);

  inline CSVCMsg_ClearAllStringTables& operator=(const CSVCMsg_ClearAllStringTables& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_ClearAllStringTables(CSVCMsg_ClearAllStringTables&& from) noexcept
    : CSVCMsg_ClearAllStringTables() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_ClearAllStringTables& operator=(CSVCMsg_ClearAllStringTables&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_ClearAllStringTables& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_ClearAllStringTables* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_ClearAllStringTables*>(
               &_CSVCMsg_ClearAllStringTables_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(CSVCMsg_ClearAllStringTables* other);
  friend void swap(CSVCMsg_ClearAllStringTables& a, CSVCMsg_ClearAllStringTables& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_ClearAllStringTables* New() const final {
    return CreateMaybeMessage<CSVCMsg_ClearAllStringTables>(nullptr);
  }

  CSVCMsg_ClearAllStringTables* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_ClearAllStringTables>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_ClearAllStringTables& from);
  void MergeFrom(const CSVCMsg_ClearAllStringTables& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_ClearAllStringTables* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string mapname = 1;
  bool has_mapname() const;
  void clear_mapname();
  static const int kMapnameFieldNumber = 1;
  const ::std::string& mapname() const;
  void set_mapname(const ::std::string& value);
  #if LANG_CXX11
  void set_mapname(::std::string&& value);
  #endif
  void set_mapname(const char* value);
  void set_mapname(const char* value, size_t size);
  ::std::string* mutable_mapname();
  ::std::string* release_mapname();
  void set_allocated_mapname(::std::string* mapname);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_ClearAllStringTables)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr mapname_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoFlattenedSerializerField_t final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.ProtoFlattenedSerializerField_t) */ {
 public:
  ProtoFlattenedSerializerField_t();
  virtual ~ProtoFlattenedSerializerField_t();

  ProtoFlattenedSerializerField_t(const ProtoFlattenedSerializerField_t& from);

  inline ProtoFlattenedSerializerField_t& operator=(const ProtoFlattenedSerializerField_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoFlattenedSerializerField_t(ProtoFlattenedSerializerField_t&& from) noexcept
    : ProtoFlattenedSerializerField_t() {
    *this = ::std::move(from);
  }

  inline ProtoFlattenedSerializerField_t& operator=(ProtoFlattenedSerializerField_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProtoFlattenedSerializerField_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoFlattenedSerializerField_t* internal_default_instance() {
    return reinterpret_cast<const ProtoFlattenedSerializerField_t*>(
               &_ProtoFlattenedSerializerField_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(ProtoFlattenedSerializerField_t* other);
  friend void swap(ProtoFlattenedSerializerField_t& a, ProtoFlattenedSerializerField_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoFlattenedSerializerField_t* New() const final {
    return CreateMaybeMessage<ProtoFlattenedSerializerField_t>(nullptr);
  }

  ProtoFlattenedSerializerField_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProtoFlattenedSerializerField_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProtoFlattenedSerializerField_t& from);
  void MergeFrom(const ProtoFlattenedSerializerField_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoFlattenedSerializerField_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 var_type_sym = 1;
  bool has_var_type_sym() const;
  void clear_var_type_sym();
  static const int kVarTypeSymFieldNumber = 1;
  ::google::protobuf::int32 var_type_sym() const;
  void set_var_type_sym(::google::protobuf::int32 value);

  // optional int32 var_name_sym = 2;
  bool has_var_name_sym() const;
  void clear_var_name_sym();
  static const int kVarNameSymFieldNumber = 2;
  ::google::protobuf::int32 var_name_sym() const;
  void set_var_name_sym(::google::protobuf::int32 value);

  // optional int32 bit_count = 3;
  bool has_bit_count() const;
  void clear_bit_count();
  static const int kBitCountFieldNumber = 3;
  ::google::protobuf::int32 bit_count() const;
  void set_bit_count(::google::protobuf::int32 value);

  // optional float low_value = 4;
  bool has_low_value() const;
  void clear_low_value();
  static const int kLowValueFieldNumber = 4;
  float low_value() const;
  void set_low_value(float value);

  // optional float high_value = 5;
  bool has_high_value() const;
  void clear_high_value();
  static const int kHighValueFieldNumber = 5;
  float high_value() const;
  void set_high_value(float value);

  // optional int32 encode_flags = 6;
  bool has_encode_flags() const;
  void clear_encode_flags();
  static const int kEncodeFlagsFieldNumber = 6;
  ::google::protobuf::int32 encode_flags() const;
  void set_encode_flags(::google::protobuf::int32 value);

  // optional int32 field_serializer_name_sym = 7;
  bool has_field_serializer_name_sym() const;
  void clear_field_serializer_name_sym();
  static const int kFieldSerializerNameSymFieldNumber = 7;
  ::google::protobuf::int32 field_serializer_name_sym() const;
  void set_field_serializer_name_sym(::google::protobuf::int32 value);

  // optional int32 field_serializer_version = 8;
  bool has_field_serializer_version() const;
  void clear_field_serializer_version();
  static const int kFieldSerializerVersionFieldNumber = 8;
  ::google::protobuf::int32 field_serializer_version() const;
  void set_field_serializer_version(::google::protobuf::int32 value);

  // optional int32 send_node_sym = 9;
  bool has_send_node_sym() const;
  void clear_send_node_sym();
  static const int kSendNodeSymFieldNumber = 9;
  ::google::protobuf::int32 send_node_sym() const;
  void set_send_node_sym(::google::protobuf::int32 value);

  // optional int32 var_encoder_sym = 10;
  bool has_var_encoder_sym() const;
  void clear_var_encoder_sym();
  static const int kVarEncoderSymFieldNumber = 10;
  ::google::protobuf::int32 var_encoder_sym() const;
  void set_var_encoder_sym(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.ProtoFlattenedSerializerField_t)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 var_type_sym_;
  ::google::protobuf::int32 var_name_sym_;
  ::google::protobuf::int32 bit_count_;
  float low_value_;
  float high_value_;
  ::google::protobuf::int32 encode_flags_;
  ::google::protobuf::int32 field_serializer_name_sym_;
  ::google::protobuf::int32 field_serializer_version_;
  ::google::protobuf::int32 send_node_sym_;
  ::google::protobuf::int32 var_encoder_sym_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoFlattenedSerializer_t final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.ProtoFlattenedSerializer_t) */ {
 public:
  ProtoFlattenedSerializer_t();
  virtual ~ProtoFlattenedSerializer_t();

  ProtoFlattenedSerializer_t(const ProtoFlattenedSerializer_t& from);

  inline ProtoFlattenedSerializer_t& operator=(const ProtoFlattenedSerializer_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoFlattenedSerializer_t(ProtoFlattenedSerializer_t&& from) noexcept
    : ProtoFlattenedSerializer_t() {
    *this = ::std::move(from);
  }

  inline ProtoFlattenedSerializer_t& operator=(ProtoFlattenedSerializer_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProtoFlattenedSerializer_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoFlattenedSerializer_t* internal_default_instance() {
    return reinterpret_cast<const ProtoFlattenedSerializer_t*>(
               &_ProtoFlattenedSerializer_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(ProtoFlattenedSerializer_t* other);
  friend void swap(ProtoFlattenedSerializer_t& a, ProtoFlattenedSerializer_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoFlattenedSerializer_t* New() const final {
    return CreateMaybeMessage<ProtoFlattenedSerializer_t>(nullptr);
  }

  ProtoFlattenedSerializer_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProtoFlattenedSerializer_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProtoFlattenedSerializer_t& from);
  void MergeFrom(const ProtoFlattenedSerializer_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoFlattenedSerializer_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 fields_index = 3;
  int fields_index_size() const;
  void clear_fields_index();
  static const int kFieldsIndexFieldNumber = 3;
  ::google::protobuf::int32 fields_index(int index) const;
  void set_fields_index(int index, ::google::protobuf::int32 value);
  void add_fields_index(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fields_index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fields_index();

  // optional int32 serializer_name_sym = 1;
  bool has_serializer_name_sym() const;
  void clear_serializer_name_sym();
  static const int kSerializerNameSymFieldNumber = 1;
  ::google::protobuf::int32 serializer_name_sym() const;
  void set_serializer_name_sym(::google::protobuf::int32 value);

  // optional int32 serializer_version = 2;
  bool has_serializer_version() const;
  void clear_serializer_version();
  static const int kSerializerVersionFieldNumber = 2;
  ::google::protobuf::int32 serializer_version() const;
  void set_serializer_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.ProtoFlattenedSerializer_t)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fields_index_;
  ::google::protobuf::int32 serializer_name_sym_;
  ::google::protobuf::int32 serializer_version_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_FlattenedSerializer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_FlattenedSerializer) */ {
 public:
  CSVCMsg_FlattenedSerializer();
  virtual ~CSVCMsg_FlattenedSerializer();

  CSVCMsg_FlattenedSerializer(const CSVCMsg_FlattenedSerializer& from);

  inline CSVCMsg_FlattenedSerializer& operator=(const CSVCMsg_FlattenedSerializer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_FlattenedSerializer(CSVCMsg_FlattenedSerializer&& from) noexcept
    : CSVCMsg_FlattenedSerializer() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_FlattenedSerializer& operator=(CSVCMsg_FlattenedSerializer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_FlattenedSerializer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_FlattenedSerializer* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_FlattenedSerializer*>(
               &_CSVCMsg_FlattenedSerializer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(CSVCMsg_FlattenedSerializer* other);
  friend void swap(CSVCMsg_FlattenedSerializer& a, CSVCMsg_FlattenedSerializer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_FlattenedSerializer* New() const final {
    return CreateMaybeMessage<CSVCMsg_FlattenedSerializer>(nullptr);
  }

  CSVCMsg_FlattenedSerializer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_FlattenedSerializer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_FlattenedSerializer& from);
  void MergeFrom(const CSVCMsg_FlattenedSerializer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_FlattenedSerializer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.ProtoFlattenedSerializer_t serializers = 1;
  int serializers_size() const;
  void clear_serializers();
  static const int kSerializersFieldNumber = 1;
  ::proto::dota::ProtoFlattenedSerializer_t* mutable_serializers(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::ProtoFlattenedSerializer_t >*
      mutable_serializers();
  const ::proto::dota::ProtoFlattenedSerializer_t& serializers(int index) const;
  ::proto::dota::ProtoFlattenedSerializer_t* add_serializers();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::ProtoFlattenedSerializer_t >&
      serializers() const;

  // repeated string symbols = 2;
  int symbols_size() const;
  void clear_symbols();
  static const int kSymbolsFieldNumber = 2;
  const ::std::string& symbols(int index) const;
  ::std::string* mutable_symbols(int index);
  void set_symbols(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_symbols(int index, ::std::string&& value);
  #endif
  void set_symbols(int index, const char* value);
  void set_symbols(int index, const char* value, size_t size);
  ::std::string* add_symbols();
  void add_symbols(const ::std::string& value);
  #if LANG_CXX11
  void add_symbols(::std::string&& value);
  #endif
  void add_symbols(const char* value);
  void add_symbols(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& symbols() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_symbols();

  // repeated .proto.dota.ProtoFlattenedSerializerField_t fields = 3;
  int fields_size() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 3;
  ::proto::dota::ProtoFlattenedSerializerField_t* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::ProtoFlattenedSerializerField_t >*
      mutable_fields();
  const ::proto::dota::ProtoFlattenedSerializerField_t& fields(int index) const;
  ::proto::dota::ProtoFlattenedSerializerField_t* add_fields();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::ProtoFlattenedSerializerField_t >&
      fields() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_FlattenedSerializer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::ProtoFlattenedSerializer_t > serializers_;
  ::google::protobuf::RepeatedPtrField<::std::string> symbols_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::ProtoFlattenedSerializerField_t > fields_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CSVCMsg_StopSound final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSVCMsg_StopSound) */ {
 public:
  CSVCMsg_StopSound();
  virtual ~CSVCMsg_StopSound();

  CSVCMsg_StopSound(const CSVCMsg_StopSound& from);

  inline CSVCMsg_StopSound& operator=(const CSVCMsg_StopSound& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSVCMsg_StopSound(CSVCMsg_StopSound&& from) noexcept
    : CSVCMsg_StopSound() {
    *this = ::std::move(from);
  }

  inline CSVCMsg_StopSound& operator=(CSVCMsg_StopSound&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSVCMsg_StopSound& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSVCMsg_StopSound* internal_default_instance() {
    return reinterpret_cast<const CSVCMsg_StopSound*>(
               &_CSVCMsg_StopSound_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(CSVCMsg_StopSound* other);
  friend void swap(CSVCMsg_StopSound& a, CSVCMsg_StopSound& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSVCMsg_StopSound* New() const final {
    return CreateMaybeMessage<CSVCMsg_StopSound>(nullptr);
  }

  CSVCMsg_StopSound* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSVCMsg_StopSound>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSVCMsg_StopSound& from);
  void MergeFrom(const CSVCMsg_StopSound& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSVCMsg_StopSound* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint32 guid() const;
  void set_guid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSVCMsg_StopSound)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 guid_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CBidirMsg_RebroadcastGameEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CBidirMsg_RebroadcastGameEvent) */ {
 public:
  CBidirMsg_RebroadcastGameEvent();
  virtual ~CBidirMsg_RebroadcastGameEvent();

  CBidirMsg_RebroadcastGameEvent(const CBidirMsg_RebroadcastGameEvent& from);

  inline CBidirMsg_RebroadcastGameEvent& operator=(const CBidirMsg_RebroadcastGameEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CBidirMsg_RebroadcastGameEvent(CBidirMsg_RebroadcastGameEvent&& from) noexcept
    : CBidirMsg_RebroadcastGameEvent() {
    *this = ::std::move(from);
  }

  inline CBidirMsg_RebroadcastGameEvent& operator=(CBidirMsg_RebroadcastGameEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CBidirMsg_RebroadcastGameEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CBidirMsg_RebroadcastGameEvent* internal_default_instance() {
    return reinterpret_cast<const CBidirMsg_RebroadcastGameEvent*>(
               &_CBidirMsg_RebroadcastGameEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(CBidirMsg_RebroadcastGameEvent* other);
  friend void swap(CBidirMsg_RebroadcastGameEvent& a, CBidirMsg_RebroadcastGameEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CBidirMsg_RebroadcastGameEvent* New() const final {
    return CreateMaybeMessage<CBidirMsg_RebroadcastGameEvent>(nullptr);
  }

  CBidirMsg_RebroadcastGameEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CBidirMsg_RebroadcastGameEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CBidirMsg_RebroadcastGameEvent& from);
  void MergeFrom(const CBidirMsg_RebroadcastGameEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CBidirMsg_RebroadcastGameEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool posttoserver = 1;
  bool has_posttoserver() const;
  void clear_posttoserver();
  static const int kPosttoserverFieldNumber = 1;
  bool posttoserver() const;
  void set_posttoserver(bool value);

  // optional int32 buftype = 2;
  bool has_buftype() const;
  void clear_buftype();
  static const int kBuftypeFieldNumber = 2;
  ::google::protobuf::int32 buftype() const;
  void set_buftype(::google::protobuf::int32 value);

  // optional uint64 receivingclients = 4;
  bool has_receivingclients() const;
  void clear_receivingclients();
  static const int kReceivingclientsFieldNumber = 4;
  ::google::protobuf::uint64 receivingclients() const;
  void set_receivingclients(::google::protobuf::uint64 value);

  // optional uint32 clientbitcount = 3;
  bool has_clientbitcount() const;
  void clear_clientbitcount();
  static const int kClientbitcountFieldNumber = 3;
  ::google::protobuf::uint32 clientbitcount() const;
  void set_clientbitcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CBidirMsg_RebroadcastGameEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool posttoserver_;
  ::google::protobuf::int32 buftype_;
  ::google::protobuf::uint64 receivingclients_;
  ::google::protobuf::uint32 clientbitcount_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CBidirMsg_RebroadcastSource final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CBidirMsg_RebroadcastSource) */ {
 public:
  CBidirMsg_RebroadcastSource();
  virtual ~CBidirMsg_RebroadcastSource();

  CBidirMsg_RebroadcastSource(const CBidirMsg_RebroadcastSource& from);

  inline CBidirMsg_RebroadcastSource& operator=(const CBidirMsg_RebroadcastSource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CBidirMsg_RebroadcastSource(CBidirMsg_RebroadcastSource&& from) noexcept
    : CBidirMsg_RebroadcastSource() {
    *this = ::std::move(from);
  }

  inline CBidirMsg_RebroadcastSource& operator=(CBidirMsg_RebroadcastSource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CBidirMsg_RebroadcastSource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CBidirMsg_RebroadcastSource* internal_default_instance() {
    return reinterpret_cast<const CBidirMsg_RebroadcastSource*>(
               &_CBidirMsg_RebroadcastSource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(CBidirMsg_RebroadcastSource* other);
  friend void swap(CBidirMsg_RebroadcastSource& a, CBidirMsg_RebroadcastSource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CBidirMsg_RebroadcastSource* New() const final {
    return CreateMaybeMessage<CBidirMsg_RebroadcastSource>(nullptr);
  }

  CBidirMsg_RebroadcastSource* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CBidirMsg_RebroadcastSource>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CBidirMsg_RebroadcastSource& from);
  void MergeFrom(const CBidirMsg_RebroadcastSource& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CBidirMsg_RebroadcastSource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eventsource = 1;
  bool has_eventsource() const;
  void clear_eventsource();
  static const int kEventsourceFieldNumber = 1;
  ::google::protobuf::int32 eventsource() const;
  void set_eventsource(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CBidirMsg_RebroadcastSource)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 eventsource_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class SerializedNetAddress_t final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.SerializedNetAddress_t) */ {
 public:
  SerializedNetAddress_t();
  virtual ~SerializedNetAddress_t();

  SerializedNetAddress_t(const SerializedNetAddress_t& from);

  inline SerializedNetAddress_t& operator=(const SerializedNetAddress_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedNetAddress_t(SerializedNetAddress_t&& from) noexcept
    : SerializedNetAddress_t() {
    *this = ::std::move(from);
  }

  inline SerializedNetAddress_t& operator=(SerializedNetAddress_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SerializedNetAddress_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedNetAddress_t* internal_default_instance() {
    return reinterpret_cast<const SerializedNetAddress_t*>(
               &_SerializedNetAddress_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(SerializedNetAddress_t* other);
  friend void swap(SerializedNetAddress_t& a, SerializedNetAddress_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedNetAddress_t* New() const final {
    return CreateMaybeMessage<SerializedNetAddress_t>(nullptr);
  }

  SerializedNetAddress_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedNetAddress_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedNetAddress_t& from);
  void MergeFrom(const SerializedNetAddress_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedNetAddress_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes serializedAddress = 1;
  bool has_serializedaddress() const;
  void clear_serializedaddress();
  static const int kSerializedAddressFieldNumber = 1;
  const ::std::string& serializedaddress() const;
  void set_serializedaddress(const ::std::string& value);
  #if LANG_CXX11
  void set_serializedaddress(::std::string&& value);
  #endif
  void set_serializedaddress(const char* value);
  void set_serializedaddress(const void* value, size_t size);
  ::std::string* mutable_serializedaddress();
  ::std::string* release_serializedaddress();
  void set_allocated_serializedaddress(::std::string* serializedaddress);

  // @@protoc_insertion_point(class_scope:proto.dota.SerializedNetAddress_t)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr serializedaddress_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CBidirMsg_RelayInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CBidirMsg_RelayInfo) */ {
 public:
  CBidirMsg_RelayInfo();
  virtual ~CBidirMsg_RelayInfo();

  CBidirMsg_RelayInfo(const CBidirMsg_RelayInfo& from);

  inline CBidirMsg_RelayInfo& operator=(const CBidirMsg_RelayInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CBidirMsg_RelayInfo(CBidirMsg_RelayInfo&& from) noexcept
    : CBidirMsg_RelayInfo() {
    *this = ::std::move(from);
  }

  inline CBidirMsg_RelayInfo& operator=(CBidirMsg_RelayInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CBidirMsg_RelayInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CBidirMsg_RelayInfo* internal_default_instance() {
    return reinterpret_cast<const CBidirMsg_RelayInfo*>(
               &_CBidirMsg_RelayInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(CBidirMsg_RelayInfo* other);
  friend void swap(CBidirMsg_RelayInfo& a, CBidirMsg_RelayInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CBidirMsg_RelayInfo* New() const final {
    return CreateMaybeMessage<CBidirMsg_RelayInfo>(nullptr);
  }

  CBidirMsg_RelayInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CBidirMsg_RelayInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CBidirMsg_RelayInfo& from);
  void MergeFrom(const CBidirMsg_RelayInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CBidirMsg_RelayInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CBidirMsg_RelayInfo_Operation_t Operation_t;
  static const Operation_t RIO_REQUEST_RELAY =
    CBidirMsg_RelayInfo_Operation_t_RIO_REQUEST_RELAY;
  static const Operation_t RIO_WILL_RELAY =
    CBidirMsg_RelayInfo_Operation_t_RIO_WILL_RELAY;
  static const Operation_t RIO_NO_ROUTE =
    CBidirMsg_RelayInfo_Operation_t_RIO_NO_ROUTE;
  static const Operation_t RIO_REJECT_RELAY =
    CBidirMsg_RelayInfo_Operation_t_RIO_REJECT_RELAY;
  static const Operation_t RIO_ESTABLISH_CONNECTION =
    CBidirMsg_RelayInfo_Operation_t_RIO_ESTABLISH_CONNECTION;
  static inline bool Operation_t_IsValid(int value) {
    return CBidirMsg_RelayInfo_Operation_t_IsValid(value);
  }
  static const Operation_t Operation_t_MIN =
    CBidirMsg_RelayInfo_Operation_t_Operation_t_MIN;
  static const Operation_t Operation_t_MAX =
    CBidirMsg_RelayInfo_Operation_t_Operation_t_MAX;
  static const int Operation_t_ARRAYSIZE =
    CBidirMsg_RelayInfo_Operation_t_Operation_t_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Operation_t_descriptor() {
    return CBidirMsg_RelayInfo_Operation_t_descriptor();
  }
  static inline const ::std::string& Operation_t_Name(Operation_t value) {
    return CBidirMsg_RelayInfo_Operation_t_Name(value);
  }
  static inline bool Operation_t_Parse(const ::std::string& name,
      Operation_t* value) {
    return CBidirMsg_RelayInfo_Operation_t_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.SerializedNetAddress_t serializedTargetAddress = 2;
  bool has_serializedtargetaddress() const;
  void clear_serializedtargetaddress();
  static const int kSerializedTargetAddressFieldNumber = 2;
  const ::proto::dota::SerializedNetAddress_t& serializedtargetaddress() const;
  ::proto::dota::SerializedNetAddress_t* release_serializedtargetaddress();
  ::proto::dota::SerializedNetAddress_t* mutable_serializedtargetaddress();
  void set_allocated_serializedtargetaddress(::proto::dota::SerializedNetAddress_t* serializedtargetaddress);

  // required .proto.dota.CBidirMsg_RelayInfo.Operation_t operation = 1 [default = RIO_REQUEST_RELAY];
  bool has_operation() const;
  void clear_operation();
  static const int kOperationFieldNumber = 1;
  ::proto::dota::CBidirMsg_RelayInfo_Operation_t operation() const;
  void set_operation(::proto::dota::CBidirMsg_RelayInfo_Operation_t value);

  // optional uint32 additionalHops = 3;
  bool has_additionalhops() const;
  void clear_additionalhops();
  static const int kAdditionalHopsFieldNumber = 3;
  ::google::protobuf::uint32 additionalhops() const;
  void set_additionalhops(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CBidirMsg_RelayInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::SerializedNetAddress_t* serializedtargetaddress_;
  int operation_;
  ::google::protobuf::uint32 additionalhops_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class SignedPayload_t final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.SignedPayload_t) */ {
 public:
  SignedPayload_t();
  virtual ~SignedPayload_t();

  SignedPayload_t(const SignedPayload_t& from);

  inline SignedPayload_t& operator=(const SignedPayload_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignedPayload_t(SignedPayload_t&& from) noexcept
    : SignedPayload_t() {
    *this = ::std::move(from);
  }

  inline SignedPayload_t& operator=(SignedPayload_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SignedPayload_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignedPayload_t* internal_default_instance() {
    return reinterpret_cast<const SignedPayload_t*>(
               &_SignedPayload_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(SignedPayload_t* other);
  friend void swap(SignedPayload_t& a, SignedPayload_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignedPayload_t* New() const final {
    return CreateMaybeMessage<SignedPayload_t>(nullptr);
  }

  SignedPayload_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignedPayload_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignedPayload_t& from);
  void MergeFrom(const SignedPayload_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignedPayload_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes payloadData = 1;
  bool has_payloaddata() const;
  void clear_payloaddata();
  static const int kPayloadDataFieldNumber = 1;
  const ::std::string& payloaddata() const;
  void set_payloaddata(const ::std::string& value);
  #if LANG_CXX11
  void set_payloaddata(::std::string&& value);
  #endif
  void set_payloaddata(const char* value);
  void set_payloaddata(const void* value, size_t size);
  ::std::string* mutable_payloaddata();
  ::std::string* release_payloaddata();
  void set_allocated_payloaddata(::std::string* payloaddata);

  // required uint32 signature = 2;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 2;
  ::google::protobuf::uint32 signature() const;
  void set_signature(::google::protobuf::uint32 value);

  // required bool bPayloadEncrypted = 3;
  bool has_bpayloadencrypted() const;
  void clear_bpayloadencrypted();
  static const int kBPayloadEncryptedFieldNumber = 3;
  bool bpayloadencrypted() const;
  void set_bpayloadencrypted(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.SignedPayload_t)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr payloaddata_;
  ::google::protobuf::uint32 signature_;
  bool bpayloadencrypted_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CBidirMsg_RelayPacket_SignedDestinationAddress_t final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t) */ {
 public:
  CBidirMsg_RelayPacket_SignedDestinationAddress_t();
  virtual ~CBidirMsg_RelayPacket_SignedDestinationAddress_t();

  CBidirMsg_RelayPacket_SignedDestinationAddress_t(const CBidirMsg_RelayPacket_SignedDestinationAddress_t& from);

  inline CBidirMsg_RelayPacket_SignedDestinationAddress_t& operator=(const CBidirMsg_RelayPacket_SignedDestinationAddress_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CBidirMsg_RelayPacket_SignedDestinationAddress_t(CBidirMsg_RelayPacket_SignedDestinationAddress_t&& from) noexcept
    : CBidirMsg_RelayPacket_SignedDestinationAddress_t() {
    *this = ::std::move(from);
  }

  inline CBidirMsg_RelayPacket_SignedDestinationAddress_t& operator=(CBidirMsg_RelayPacket_SignedDestinationAddress_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CBidirMsg_RelayPacket_SignedDestinationAddress_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CBidirMsg_RelayPacket_SignedDestinationAddress_t* internal_default_instance() {
    return reinterpret_cast<const CBidirMsg_RelayPacket_SignedDestinationAddress_t*>(
               &_CBidirMsg_RelayPacket_SignedDestinationAddress_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(CBidirMsg_RelayPacket_SignedDestinationAddress_t* other);
  friend void swap(CBidirMsg_RelayPacket_SignedDestinationAddress_t& a, CBidirMsg_RelayPacket_SignedDestinationAddress_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CBidirMsg_RelayPacket_SignedDestinationAddress_t* New() const final {
    return CreateMaybeMessage<CBidirMsg_RelayPacket_SignedDestinationAddress_t>(nullptr);
  }

  CBidirMsg_RelayPacket_SignedDestinationAddress_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CBidirMsg_RelayPacket_SignedDestinationAddress_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CBidirMsg_RelayPacket_SignedDestinationAddress_t& from);
  void MergeFrom(const CBidirMsg_RelayPacket_SignedDestinationAddress_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CBidirMsg_RelayPacket_SignedDestinationAddress_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes encryptedPayloadKey = 3;
  bool has_encryptedpayloadkey() const;
  void clear_encryptedpayloadkey();
  static const int kEncryptedPayloadKeyFieldNumber = 3;
  const ::std::string& encryptedpayloadkey() const;
  void set_encryptedpayloadkey(const ::std::string& value);
  #if LANG_CXX11
  void set_encryptedpayloadkey(::std::string&& value);
  #endif
  void set_encryptedpayloadkey(const char* value);
  void set_encryptedpayloadkey(const void* value, size_t size);
  ::std::string* mutable_encryptedpayloadkey();
  ::std::string* release_encryptedpayloadkey();
  void set_allocated_encryptedpayloadkey(::std::string* encryptedpayloadkey);

  // required .proto.dota.SerializedNetAddress_t serializedAddr = 1;
  bool has_serializedaddr() const;
  void clear_serializedaddr();
  static const int kSerializedAddrFieldNumber = 1;
  const ::proto::dota::SerializedNetAddress_t& serializedaddr() const;
  ::proto::dota::SerializedNetAddress_t* release_serializedaddr();
  ::proto::dota::SerializedNetAddress_t* mutable_serializedaddr();
  void set_allocated_serializedaddr(::proto::dota::SerializedNetAddress_t* serializedaddr);

  // required uint32 signature = 2;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 2;
  ::google::protobuf::uint32 signature() const;
  void set_signature(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr encryptedpayloadkey_;
  ::proto::dota::SerializedNetAddress_t* serializedaddr_;
  ::google::protobuf::uint32 signature_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CBidirMsg_RelayPacket final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CBidirMsg_RelayPacket) */ {
 public:
  CBidirMsg_RelayPacket();
  virtual ~CBidirMsg_RelayPacket();

  CBidirMsg_RelayPacket(const CBidirMsg_RelayPacket& from);

  inline CBidirMsg_RelayPacket& operator=(const CBidirMsg_RelayPacket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CBidirMsg_RelayPacket(CBidirMsg_RelayPacket&& from) noexcept
    : CBidirMsg_RelayPacket() {
    *this = ::std::move(from);
  }

  inline CBidirMsg_RelayPacket& operator=(CBidirMsg_RelayPacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CBidirMsg_RelayPacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CBidirMsg_RelayPacket* internal_default_instance() {
    return reinterpret_cast<const CBidirMsg_RelayPacket*>(
               &_CBidirMsg_RelayPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(CBidirMsg_RelayPacket* other);
  friend void swap(CBidirMsg_RelayPacket& a, CBidirMsg_RelayPacket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CBidirMsg_RelayPacket* New() const final {
    return CreateMaybeMessage<CBidirMsg_RelayPacket>(nullptr);
  }

  CBidirMsg_RelayPacket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CBidirMsg_RelayPacket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CBidirMsg_RelayPacket& from);
  void MergeFrom(const CBidirMsg_RelayPacket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CBidirMsg_RelayPacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CBidirMsg_RelayPacket_SignedDestinationAddress_t SignedDestinationAddress_t;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t recipientList = 4;
  int recipientlist_size() const;
  void clear_recipientlist();
  static const int kRecipientListFieldNumber = 4;
  ::proto::dota::CBidirMsg_RelayPacket_SignedDestinationAddress_t* mutable_recipientlist(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CBidirMsg_RelayPacket_SignedDestinationAddress_t >*
      mutable_recipientlist();
  const ::proto::dota::CBidirMsg_RelayPacket_SignedDestinationAddress_t& recipientlist(int index) const;
  ::proto::dota::CBidirMsg_RelayPacket_SignedDestinationAddress_t* add_recipientlist();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CBidirMsg_RelayPacket_SignedDestinationAddress_t >&
      recipientlist() const;

  // required .proto.dota.SerializedNetAddress_t originalSender = 2;
  bool has_originalsender() const;
  void clear_originalsender();
  static const int kOriginalSenderFieldNumber = 2;
  const ::proto::dota::SerializedNetAddress_t& originalsender() const;
  ::proto::dota::SerializedNetAddress_t* release_originalsender();
  ::proto::dota::SerializedNetAddress_t* mutable_originalsender();
  void set_allocated_originalsender(::proto::dota::SerializedNetAddress_t* originalsender);

  // required .proto.dota.SignedPayload_t signedPayload = 3;
  bool has_signedpayload() const;
  void clear_signedpayload();
  static const int kSignedPayloadFieldNumber = 3;
  const ::proto::dota::SignedPayload_t& signedpayload() const;
  ::proto::dota::SignedPayload_t* release_signedpayload();
  ::proto::dota::SignedPayload_t* mutable_signedpayload();
  void set_allocated_signedpayload(::proto::dota::SignedPayload_t* signedpayload);

  // required uint32 prevhopcount = 1;
  bool has_prevhopcount() const;
  void clear_prevhopcount();
  static const int kPrevhopcountFieldNumber = 1;
  ::google::protobuf::uint32 prevhopcount() const;
  void set_prevhopcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CBidirMsg_RelayPacket)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CBidirMsg_RelayPacket_SignedDestinationAddress_t > recipientlist_;
  ::proto::dota::SerializedNetAddress_t* originalsender_;
  ::proto::dota::SignedPayload_t* signedpayload_;
  ::google::protobuf::uint32 prevhopcount_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerNetworkStats_Port final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerNetworkStats.Port) */ {
 public:
  CMsgServerNetworkStats_Port();
  virtual ~CMsgServerNetworkStats_Port();

  CMsgServerNetworkStats_Port(const CMsgServerNetworkStats_Port& from);

  inline CMsgServerNetworkStats_Port& operator=(const CMsgServerNetworkStats_Port& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerNetworkStats_Port(CMsgServerNetworkStats_Port&& from) noexcept
    : CMsgServerNetworkStats_Port() {
    *this = ::std::move(from);
  }

  inline CMsgServerNetworkStats_Port& operator=(CMsgServerNetworkStats_Port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerNetworkStats_Port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerNetworkStats_Port* internal_default_instance() {
    return reinterpret_cast<const CMsgServerNetworkStats_Port*>(
               &_CMsgServerNetworkStats_Port_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(CMsgServerNetworkStats_Port* other);
  friend void swap(CMsgServerNetworkStats_Port& a, CMsgServerNetworkStats_Port& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerNetworkStats_Port* New() const final {
    return CreateMaybeMessage<CMsgServerNetworkStats_Port>(nullptr);
  }

  CMsgServerNetworkStats_Port* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerNetworkStats_Port>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerNetworkStats_Port& from);
  void MergeFrom(const CMsgServerNetworkStats_Port& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerNetworkStats_Port* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 port = 1;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 1;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerNetworkStats.Port)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 port_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerNetworkStats_Player final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerNetworkStats.Player) */ {
 public:
  CMsgServerNetworkStats_Player();
  virtual ~CMsgServerNetworkStats_Player();

  CMsgServerNetworkStats_Player(const CMsgServerNetworkStats_Player& from);

  inline CMsgServerNetworkStats_Player& operator=(const CMsgServerNetworkStats_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerNetworkStats_Player(CMsgServerNetworkStats_Player&& from) noexcept
    : CMsgServerNetworkStats_Player() {
    *this = ::std::move(from);
  }

  inline CMsgServerNetworkStats_Player& operator=(CMsgServerNetworkStats_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerNetworkStats_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerNetworkStats_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgServerNetworkStats_Player*>(
               &_CMsgServerNetworkStats_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(CMsgServerNetworkStats_Player* other);
  friend void swap(CMsgServerNetworkStats_Player& a, CMsgServerNetworkStats_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerNetworkStats_Player* New() const final {
    return CreateMaybeMessage<CMsgServerNetworkStats_Player>(nullptr);
  }

  CMsgServerNetworkStats_Player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerNetworkStats_Player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerNetworkStats_Player& from);
  void MergeFrom(const CMsgServerNetworkStats_Player& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerNetworkStats_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string remote_addr = 2;
  bool has_remote_addr() const;
  void clear_remote_addr();
  static const int kRemoteAddrFieldNumber = 2;
  const ::std::string& remote_addr() const;
  void set_remote_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_remote_addr(::std::string&& value);
  #endif
  void set_remote_addr(const char* value);
  void set_remote_addr(const char* value, size_t size);
  ::std::string* mutable_remote_addr();
  ::std::string* release_remote_addr();
  void set_allocated_remote_addr(::std::string* remote_addr);

  // optional uint64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional int32 ping_stddev_ms = 3;
  bool has_ping_stddev_ms() const;
  void clear_ping_stddev_ms();
  static const int kPingStddevMsFieldNumber = 3;
  ::google::protobuf::int32 ping_stddev_ms() const;
  void set_ping_stddev_ms(::google::protobuf::int32 value);

  // optional int32 ping_avg_ms = 4;
  bool has_ping_avg_ms() const;
  void clear_ping_avg_ms();
  static const int kPingAvgMsFieldNumber = 4;
  ::google::protobuf::int32 ping_avg_ms() const;
  void set_ping_avg_ms(::google::protobuf::int32 value);

  // optional float packet_loss_pct = 5;
  bool has_packet_loss_pct() const;
  void clear_packet_loss_pct();
  static const int kPacketLossPctFieldNumber = 5;
  float packet_loss_pct() const;
  void set_packet_loss_pct(float value);

  // optional bool is_bot = 6;
  bool has_is_bot() const;
  void clear_is_bot();
  static const int kIsBotFieldNumber = 6;
  bool is_bot() const;
  void set_is_bot(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerNetworkStats.Player)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr remote_addr_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::int32 ping_stddev_ms_;
  ::google::protobuf::int32 ping_avg_ms_;
  float packet_loss_pct_;
  bool is_bot_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerNetworkStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerNetworkStats) */ {
 public:
  CMsgServerNetworkStats();
  virtual ~CMsgServerNetworkStats();

  CMsgServerNetworkStats(const CMsgServerNetworkStats& from);

  inline CMsgServerNetworkStats& operator=(const CMsgServerNetworkStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgServerNetworkStats(CMsgServerNetworkStats&& from) noexcept
    : CMsgServerNetworkStats() {
    *this = ::std::move(from);
  }

  inline CMsgServerNetworkStats& operator=(CMsgServerNetworkStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgServerNetworkStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgServerNetworkStats* internal_default_instance() {
    return reinterpret_cast<const CMsgServerNetworkStats*>(
               &_CMsgServerNetworkStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(CMsgServerNetworkStats* other);
  friend void swap(CMsgServerNetworkStats& a, CMsgServerNetworkStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgServerNetworkStats* New() const final {
    return CreateMaybeMessage<CMsgServerNetworkStats>(nullptr);
  }

  CMsgServerNetworkStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgServerNetworkStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgServerNetworkStats& from);
  void MergeFrom(const CMsgServerNetworkStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgServerNetworkStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgServerNetworkStats_Port Port;
  typedef CMsgServerNetworkStats_Player Player;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgServerNetworkStats.Port ports = 17;
  int ports_size() const;
  void clear_ports();
  static const int kPortsFieldNumber = 17;
  ::proto::dota::CMsgServerNetworkStats_Port* mutable_ports(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerNetworkStats_Port >*
      mutable_ports();
  const ::proto::dota::CMsgServerNetworkStats_Port& ports(int index) const;
  ::proto::dota::CMsgServerNetworkStats_Port* add_ports();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerNetworkStats_Port >&
      ports() const;

  // repeated .proto.dota.CMsgServerNetworkStats.Player players = 30;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 30;
  ::proto::dota::CMsgServerNetworkStats_Player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerNetworkStats_Player >*
      mutable_players();
  const ::proto::dota::CMsgServerNetworkStats_Player& players(int index) const;
  ::proto::dota::CMsgServerNetworkStats_Player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerNetworkStats_Player >&
      players() const;

  // optional bool dedicated = 1;
  bool has_dedicated() const;
  void clear_dedicated();
  static const int kDedicatedFieldNumber = 1;
  bool dedicated() const;
  void set_dedicated(bool value);

  // optional int32 cpu_usage = 2;
  bool has_cpu_usage() const;
  void clear_cpu_usage();
  static const int kCpuUsageFieldNumber = 2;
  ::google::protobuf::int32 cpu_usage() const;
  void set_cpu_usage(::google::protobuf::int32 value);

  // optional int32 memory_used_mb = 3;
  bool has_memory_used_mb() const;
  void clear_memory_used_mb();
  static const int kMemoryUsedMbFieldNumber = 3;
  ::google::protobuf::int32 memory_used_mb() const;
  void set_memory_used_mb(::google::protobuf::int32 value);

  // optional int32 memory_free_mb = 4;
  bool has_memory_free_mb() const;
  void clear_memory_free_mb();
  static const int kMemoryFreeMbFieldNumber = 4;
  ::google::protobuf::int32 memory_free_mb() const;
  void set_memory_free_mb(::google::protobuf::int32 value);

  // optional int32 uptime = 5;
  bool has_uptime() const;
  void clear_uptime();
  static const int kUptimeFieldNumber = 5;
  ::google::protobuf::int32 uptime() const;
  void set_uptime(::google::protobuf::int32 value);

  // optional int32 spawn_count = 6;
  bool has_spawn_count() const;
  void clear_spawn_count();
  static const int kSpawnCountFieldNumber = 6;
  ::google::protobuf::int32 spawn_count() const;
  void set_spawn_count(::google::protobuf::int32 value);

  // optional int32 num_clients = 8;
  bool has_num_clients() const;
  void clear_num_clients();
  static const int kNumClientsFieldNumber = 8;
  ::google::protobuf::int32 num_clients() const;
  void set_num_clients(::google::protobuf::int32 value);

  // optional int32 num_bots = 9;
  bool has_num_bots() const;
  void clear_num_bots();
  static const int kNumBotsFieldNumber = 9;
  ::google::protobuf::int32 num_bots() const;
  void set_num_bots(::google::protobuf::int32 value);

  // optional int32 num_spectators = 10;
  bool has_num_spectators() const;
  void clear_num_spectators();
  static const int kNumSpectatorsFieldNumber = 10;
  ::google::protobuf::int32 num_spectators() const;
  void set_num_spectators(::google::protobuf::int32 value);

  // optional int32 num_tv_relays = 11;
  bool has_num_tv_relays() const;
  void clear_num_tv_relays();
  static const int kNumTvRelaysFieldNumber = 11;
  ::google::protobuf::int32 num_tv_relays() const;
  void set_num_tv_relays(::google::protobuf::int32 value);

  // optional float fps = 12;
  bool has_fps() const;
  void clear_fps();
  static const int kFpsFieldNumber = 12;
  float fps() const;
  void set_fps(float value);

  // optional float avg_latency_out = 18;
  bool has_avg_latency_out() const;
  void clear_avg_latency_out();
  static const int kAvgLatencyOutFieldNumber = 18;
  float avg_latency_out() const;
  void set_avg_latency_out(float value);

  // optional float avg_latency_in = 19;
  bool has_avg_latency_in() const;
  void clear_avg_latency_in();
  static const int kAvgLatencyInFieldNumber = 19;
  float avg_latency_in() const;
  void set_avg_latency_in(float value);

  // optional float avg_packets_out = 20;
  bool has_avg_packets_out() const;
  void clear_avg_packets_out();
  static const int kAvgPacketsOutFieldNumber = 20;
  float avg_packets_out() const;
  void set_avg_packets_out(float value);

  // optional float avg_packets_in = 21;
  bool has_avg_packets_in() const;
  void clear_avg_packets_in();
  static const int kAvgPacketsInFieldNumber = 21;
  float avg_packets_in() const;
  void set_avg_packets_in(float value);

  // optional float avg_loss_out = 22;
  bool has_avg_loss_out() const;
  void clear_avg_loss_out();
  static const int kAvgLossOutFieldNumber = 22;
  float avg_loss_out() const;
  void set_avg_loss_out(float value);

  // optional float avg_loss_in = 23;
  bool has_avg_loss_in() const;
  void clear_avg_loss_in();
  static const int kAvgLossInFieldNumber = 23;
  float avg_loss_in() const;
  void set_avg_loss_in(float value);

  // optional float avg_data_out = 24;
  bool has_avg_data_out() const;
  void clear_avg_data_out();
  static const int kAvgDataOutFieldNumber = 24;
  float avg_data_out() const;
  void set_avg_data_out(float value);

  // optional uint64 total_data_in = 26;
  bool has_total_data_in() const;
  void clear_total_data_in();
  static const int kTotalDataInFieldNumber = 26;
  ::google::protobuf::uint64 total_data_in() const;
  void set_total_data_in(::google::protobuf::uint64 value);

  // optional float avg_data_in = 25;
  bool has_avg_data_in() const;
  void clear_avg_data_in();
  static const int kAvgDataInFieldNumber = 25;
  float avg_data_in() const;
  void set_avg_data_in(float value);

  // optional uint64 total_packets_in = 27;
  bool has_total_packets_in() const;
  void clear_total_packets_in();
  static const int kTotalPacketsInFieldNumber = 27;
  ::google::protobuf::uint64 total_packets_in() const;
  void set_total_packets_in(::google::protobuf::uint64 value);

  // optional uint64 total_data_out = 28;
  bool has_total_data_out() const;
  void clear_total_data_out();
  static const int kTotalDataOutFieldNumber = 28;
  ::google::protobuf::uint64 total_data_out() const;
  void set_total_data_out(::google::protobuf::uint64 value);

  // optional uint64 total_packets_out = 29;
  bool has_total_packets_out() const;
  void clear_total_packets_out();
  static const int kTotalPacketsOutFieldNumber = 29;
  ::google::protobuf::uint64 total_packets_out() const;
  void set_total_packets_out(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerNetworkStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerNetworkStats_Port > ports_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerNetworkStats_Player > players_;
  bool dedicated_;
  ::google::protobuf::int32 cpu_usage_;
  ::google::protobuf::int32 memory_used_mb_;
  ::google::protobuf::int32 memory_free_mb_;
  ::google::protobuf::int32 uptime_;
  ::google::protobuf::int32 spawn_count_;
  ::google::protobuf::int32 num_clients_;
  ::google::protobuf::int32 num_bots_;
  ::google::protobuf::int32 num_spectators_;
  ::google::protobuf::int32 num_tv_relays_;
  float fps_;
  float avg_latency_out_;
  float avg_latency_in_;
  float avg_packets_out_;
  float avg_packets_in_;
  float avg_loss_out_;
  float avg_loss_in_;
  float avg_data_out_;
  ::google::protobuf::uint64 total_data_in_;
  float avg_data_in_;
  ::google::protobuf::uint64 total_packets_in_;
  ::google::protobuf::uint64 total_data_out_;
  ::google::protobuf::uint64 total_packets_out_;
  friend struct ::TableStruct_netmessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CCLCMsg_ClientInfo

// optional fixed32 send_table_crc = 1;
inline bool CCLCMsg_ClientInfo::has_send_table_crc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_ClientInfo::clear_send_table_crc() {
  send_table_crc_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CCLCMsg_ClientInfo::send_table_crc() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_ClientInfo.send_table_crc)
  return send_table_crc_;
}
inline void CCLCMsg_ClientInfo::set_send_table_crc(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  send_table_crc_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_ClientInfo.send_table_crc)
}

// optional uint32 server_count = 2;
inline bool CCLCMsg_ClientInfo::has_server_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCLCMsg_ClientInfo::clear_server_count() {
  server_count_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CCLCMsg_ClientInfo::server_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_ClientInfo.server_count)
  return server_count_;
}
inline void CCLCMsg_ClientInfo::set_server_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  server_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_ClientInfo.server_count)
}

// optional bool is_hltv = 3;
inline bool CCLCMsg_ClientInfo::has_is_hltv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCLCMsg_ClientInfo::clear_is_hltv() {
  is_hltv_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CCLCMsg_ClientInfo::is_hltv() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_ClientInfo.is_hltv)
  return is_hltv_;
}
inline void CCLCMsg_ClientInfo::set_is_hltv(bool value) {
  _has_bits_[0] |= 0x00000008u;
  is_hltv_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_ClientInfo.is_hltv)
}

// optional bool is_replay = 4;
inline bool CCLCMsg_ClientInfo::has_is_replay() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCLCMsg_ClientInfo::clear_is_replay() {
  is_replay_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CCLCMsg_ClientInfo::is_replay() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_ClientInfo.is_replay)
  return is_replay_;
}
inline void CCLCMsg_ClientInfo::set_is_replay(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_replay_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_ClientInfo.is_replay)
}

// optional uint32 friends_id = 5;
inline bool CCLCMsg_ClientInfo::has_friends_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCLCMsg_ClientInfo::clear_friends_id() {
  friends_id_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CCLCMsg_ClientInfo::friends_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_ClientInfo.friends_id)
  return friends_id_;
}
inline void CCLCMsg_ClientInfo::set_friends_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  friends_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_ClientInfo.friends_id)
}

// optional string friends_name = 6;
inline bool CCLCMsg_ClientInfo::has_friends_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_ClientInfo::clear_friends_name() {
  friends_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCLCMsg_ClientInfo::friends_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_ClientInfo.friends_name)
  return friends_name_.GetNoArena();
}
inline void CCLCMsg_ClientInfo::set_friends_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  friends_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_ClientInfo.friends_name)
}
#if LANG_CXX11
inline void CCLCMsg_ClientInfo::set_friends_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  friends_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CCLCMsg_ClientInfo.friends_name)
}
#endif
inline void CCLCMsg_ClientInfo::set_friends_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  friends_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CCLCMsg_ClientInfo.friends_name)
}
inline void CCLCMsg_ClientInfo::set_friends_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  friends_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CCLCMsg_ClientInfo.friends_name)
}
inline ::std::string* CCLCMsg_ClientInfo::mutable_friends_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CCLCMsg_ClientInfo.friends_name)
  return friends_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_ClientInfo::release_friends_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CCLCMsg_ClientInfo.friends_name)
  if (!has_friends_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return friends_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_ClientInfo::set_allocated_friends_name(::std::string* friends_name) {
  if (friends_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  friends_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friends_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCLCMsg_ClientInfo.friends_name)
}

// -------------------------------------------------------------------

// CCLCMsg_Move

// optional bytes data = 3;
inline bool CCLCMsg_Move::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_Move::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCLCMsg_Move::data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_Move.data)
  return data_.GetNoArena();
}
inline void CCLCMsg_Move::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_Move.data)
}
#if LANG_CXX11
inline void CCLCMsg_Move::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CCLCMsg_Move.data)
}
#endif
inline void CCLCMsg_Move::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CCLCMsg_Move.data)
}
inline void CCLCMsg_Move::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CCLCMsg_Move.data)
}
inline ::std::string* CCLCMsg_Move::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CCLCMsg_Move.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_Move::release_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CCLCMsg_Move.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_Move::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCLCMsg_Move.data)
}

// optional uint32 command_number = 4;
inline bool CCLCMsg_Move::has_command_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_Move::clear_command_number() {
  command_number_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CCLCMsg_Move::command_number() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_Move.command_number)
  return command_number_;
}
inline void CCLCMsg_Move::set_command_number(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  command_number_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_Move.command_number)
}

// optional uint32 num_commands = 5;
inline bool CCLCMsg_Move::has_num_commands() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCLCMsg_Move::clear_num_commands() {
  num_commands_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CCLCMsg_Move::num_commands() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_Move.num_commands)
  return num_commands_;
}
inline void CCLCMsg_Move::set_num_commands(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_commands_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_Move.num_commands)
}

// -------------------------------------------------------------------

// CMsgVoiceAudio

// optional .proto.dota.VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
inline bool CMsgVoiceAudio::has_format() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgVoiceAudio::clear_format() {
  format_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::VoiceDataFormat_t CMsgVoiceAudio::format() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgVoiceAudio.format)
  return static_cast< ::proto::dota::VoiceDataFormat_t >(format_);
}
inline void CMsgVoiceAudio::set_format(::proto::dota::VoiceDataFormat_t value) {
  assert(::proto::dota::VoiceDataFormat_t_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  format_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgVoiceAudio.format)
}

// optional bytes voice_data = 2;
inline bool CMsgVoiceAudio::has_voice_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgVoiceAudio::clear_voice_data() {
  voice_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgVoiceAudio::voice_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgVoiceAudio.voice_data)
  return voice_data_.GetNoArena();
}
inline void CMsgVoiceAudio::set_voice_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  voice_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgVoiceAudio.voice_data)
}
#if LANG_CXX11
inline void CMsgVoiceAudio::set_voice_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  voice_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgVoiceAudio.voice_data)
}
#endif
inline void CMsgVoiceAudio::set_voice_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  voice_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgVoiceAudio.voice_data)
}
inline void CMsgVoiceAudio::set_voice_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  voice_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgVoiceAudio.voice_data)
}
inline ::std::string* CMsgVoiceAudio::mutable_voice_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgVoiceAudio.voice_data)
  return voice_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgVoiceAudio::release_voice_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgVoiceAudio.voice_data)
  if (!has_voice_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return voice_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgVoiceAudio::set_allocated_voice_data(::std::string* voice_data) {
  if (voice_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  voice_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgVoiceAudio.voice_data)
}

// optional int32 sequence_bytes = 3;
inline bool CMsgVoiceAudio::has_sequence_bytes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgVoiceAudio::clear_sequence_bytes() {
  sequence_bytes_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CMsgVoiceAudio::sequence_bytes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgVoiceAudio.sequence_bytes)
  return sequence_bytes_;
}
inline void CMsgVoiceAudio::set_sequence_bytes(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  sequence_bytes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgVoiceAudio.sequence_bytes)
}

// optional uint32 section_number = 4;
inline bool CMsgVoiceAudio::has_section_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgVoiceAudio::clear_section_number() {
  section_number_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgVoiceAudio::section_number() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgVoiceAudio.section_number)
  return section_number_;
}
inline void CMsgVoiceAudio::set_section_number(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  section_number_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgVoiceAudio.section_number)
}

// optional uint32 sample_rate = 5;
inline bool CMsgVoiceAudio::has_sample_rate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgVoiceAudio::clear_sample_rate() {
  sample_rate_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CMsgVoiceAudio::sample_rate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgVoiceAudio.sample_rate)
  return sample_rate_;
}
inline void CMsgVoiceAudio::set_sample_rate(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  sample_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgVoiceAudio.sample_rate)
}

// optional uint32 uncompressed_sample_offset = 6;
inline bool CMsgVoiceAudio::has_uncompressed_sample_offset() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgVoiceAudio::clear_uncompressed_sample_offset() {
  uncompressed_sample_offset_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgVoiceAudio::uncompressed_sample_offset() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgVoiceAudio.uncompressed_sample_offset)
  return uncompressed_sample_offset_;
}
inline void CMsgVoiceAudio::set_uncompressed_sample_offset(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  uncompressed_sample_offset_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgVoiceAudio.uncompressed_sample_offset)
}

// -------------------------------------------------------------------

// CCLCMsg_VoiceData

// optional .proto.dota.CMsgVoiceAudio audio = 1;
inline bool CCLCMsg_VoiceData::has_audio() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_VoiceData::clear_audio() {
  if (audio_ != nullptr) audio_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgVoiceAudio& CCLCMsg_VoiceData::audio() const {
  const ::proto::dota::CMsgVoiceAudio* p = audio_;
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_VoiceData.audio)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgVoiceAudio*>(
      &::proto::dota::_CMsgVoiceAudio_default_instance_);
}
inline ::proto::dota::CMsgVoiceAudio* CCLCMsg_VoiceData::release_audio() {
  // @@protoc_insertion_point(field_release:proto.dota.CCLCMsg_VoiceData.audio)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgVoiceAudio* temp = audio_;
  audio_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgVoiceAudio* CCLCMsg_VoiceData::mutable_audio() {
  _has_bits_[0] |= 0x00000001u;
  if (audio_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgVoiceAudio>(GetArenaNoVirtual());
    audio_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CCLCMsg_VoiceData.audio)
  return audio_;
}
inline void CCLCMsg_VoiceData::set_allocated_audio(::proto::dota::CMsgVoiceAudio* audio) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete audio_;
  }
  if (audio) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      audio = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, audio, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  audio_ = audio;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCLCMsg_VoiceData.audio)
}

// optional fixed64 xuid = 2;
inline bool CCLCMsg_VoiceData::has_xuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_VoiceData::clear_xuid() {
  xuid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CCLCMsg_VoiceData::xuid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_VoiceData.xuid)
  return xuid_;
}
inline void CCLCMsg_VoiceData::set_xuid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  xuid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_VoiceData.xuid)
}

// optional uint32 tick = 3;
inline bool CCLCMsg_VoiceData::has_tick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCLCMsg_VoiceData::clear_tick() {
  tick_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CCLCMsg_VoiceData::tick() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_VoiceData.tick)
  return tick_;
}
inline void CCLCMsg_VoiceData::set_tick(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  tick_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_VoiceData.tick)
}

// -------------------------------------------------------------------

// CCLCMsg_BaselineAck

// optional int32 baseline_tick = 1;
inline bool CCLCMsg_BaselineAck::has_baseline_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_BaselineAck::clear_baseline_tick() {
  baseline_tick_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CCLCMsg_BaselineAck::baseline_tick() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_BaselineAck.baseline_tick)
  return baseline_tick_;
}
inline void CCLCMsg_BaselineAck::set_baseline_tick(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  baseline_tick_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_BaselineAck.baseline_tick)
}

// optional int32 baseline_nr = 2;
inline bool CCLCMsg_BaselineAck::has_baseline_nr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_BaselineAck::clear_baseline_nr() {
  baseline_nr_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CCLCMsg_BaselineAck::baseline_nr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_BaselineAck.baseline_nr)
  return baseline_nr_;
}
inline void CCLCMsg_BaselineAck::set_baseline_nr(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  baseline_nr_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_BaselineAck.baseline_nr)
}

// -------------------------------------------------------------------

// CCLCMsg_ListenEvents

// repeated fixed32 event_mask = 1;
inline int CCLCMsg_ListenEvents::event_mask_size() const {
  return event_mask_.size();
}
inline void CCLCMsg_ListenEvents::clear_event_mask() {
  event_mask_.Clear();
}
inline ::google::protobuf::uint32 CCLCMsg_ListenEvents::event_mask(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_ListenEvents.event_mask)
  return event_mask_.Get(index);
}
inline void CCLCMsg_ListenEvents::set_event_mask(int index, ::google::protobuf::uint32 value) {
  event_mask_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_ListenEvents.event_mask)
}
inline void CCLCMsg_ListenEvents::add_event_mask(::google::protobuf::uint32 value) {
  event_mask_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CCLCMsg_ListenEvents.event_mask)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CCLCMsg_ListenEvents::event_mask() const {
  // @@protoc_insertion_point(field_list:proto.dota.CCLCMsg_ListenEvents.event_mask)
  return event_mask_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CCLCMsg_ListenEvents::mutable_event_mask() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CCLCMsg_ListenEvents.event_mask)
  return &event_mask_;
}

// -------------------------------------------------------------------

// CCLCMsg_RespondCvarValue

// optional int32 cookie = 1;
inline bool CCLCMsg_RespondCvarValue::has_cookie() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCLCMsg_RespondCvarValue::clear_cookie() {
  cookie_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CCLCMsg_RespondCvarValue::cookie() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_RespondCvarValue.cookie)
  return cookie_;
}
inline void CCLCMsg_RespondCvarValue::set_cookie(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  cookie_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_RespondCvarValue.cookie)
}

// optional int32 status_code = 2;
inline bool CCLCMsg_RespondCvarValue::has_status_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCLCMsg_RespondCvarValue::clear_status_code() {
  status_code_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CCLCMsg_RespondCvarValue::status_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_RespondCvarValue.status_code)
  return status_code_;
}
inline void CCLCMsg_RespondCvarValue::set_status_code(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  status_code_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_RespondCvarValue.status_code)
}

// optional string name = 3;
inline bool CCLCMsg_RespondCvarValue::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_RespondCvarValue::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCLCMsg_RespondCvarValue::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_RespondCvarValue.name)
  return name_.GetNoArena();
}
inline void CCLCMsg_RespondCvarValue::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_RespondCvarValue.name)
}
#if LANG_CXX11
inline void CCLCMsg_RespondCvarValue::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CCLCMsg_RespondCvarValue.name)
}
#endif
inline void CCLCMsg_RespondCvarValue::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CCLCMsg_RespondCvarValue.name)
}
inline void CCLCMsg_RespondCvarValue::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CCLCMsg_RespondCvarValue.name)
}
inline ::std::string* CCLCMsg_RespondCvarValue::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CCLCMsg_RespondCvarValue.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_RespondCvarValue::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CCLCMsg_RespondCvarValue.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_RespondCvarValue::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCLCMsg_RespondCvarValue.name)
}

// optional string value = 4;
inline bool CCLCMsg_RespondCvarValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_RespondCvarValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CCLCMsg_RespondCvarValue::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_RespondCvarValue.value)
  return value_.GetNoArena();
}
inline void CCLCMsg_RespondCvarValue::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_RespondCvarValue.value)
}
#if LANG_CXX11
inline void CCLCMsg_RespondCvarValue::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CCLCMsg_RespondCvarValue.value)
}
#endif
inline void CCLCMsg_RespondCvarValue::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CCLCMsg_RespondCvarValue.value)
}
inline void CCLCMsg_RespondCvarValue::set_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CCLCMsg_RespondCvarValue.value)
}
inline ::std::string* CCLCMsg_RespondCvarValue::mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CCLCMsg_RespondCvarValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_RespondCvarValue::release_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CCLCMsg_RespondCvarValue.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_RespondCvarValue::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCLCMsg_RespondCvarValue.value)
}

// -------------------------------------------------------------------

// CCLCMsg_FileCRCCheck

// optional int32 code_path = 1;
inline bool CCLCMsg_FileCRCCheck::has_code_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCLCMsg_FileCRCCheck::clear_code_path() {
  code_path_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CCLCMsg_FileCRCCheck::code_path() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_FileCRCCheck.code_path)
  return code_path_;
}
inline void CCLCMsg_FileCRCCheck::set_code_path(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  code_path_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_FileCRCCheck.code_path)
}

// optional string path = 2;
inline bool CCLCMsg_FileCRCCheck::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_FileCRCCheck::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCLCMsg_FileCRCCheck::path() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_FileCRCCheck.path)
  return path_.GetNoArena();
}
inline void CCLCMsg_FileCRCCheck::set_path(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_FileCRCCheck.path)
}
#if LANG_CXX11
inline void CCLCMsg_FileCRCCheck::set_path(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CCLCMsg_FileCRCCheck.path)
}
#endif
inline void CCLCMsg_FileCRCCheck::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CCLCMsg_FileCRCCheck.path)
}
inline void CCLCMsg_FileCRCCheck::set_path(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CCLCMsg_FileCRCCheck.path)
}
inline ::std::string* CCLCMsg_FileCRCCheck::mutable_path() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CCLCMsg_FileCRCCheck.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_FileCRCCheck::release_path() {
  // @@protoc_insertion_point(field_release:proto.dota.CCLCMsg_FileCRCCheck.path)
  if (!has_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_FileCRCCheck::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCLCMsg_FileCRCCheck.path)
}

// optional int32 code_filename = 3;
inline bool CCLCMsg_FileCRCCheck::has_code_filename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCLCMsg_FileCRCCheck::clear_code_filename() {
  code_filename_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CCLCMsg_FileCRCCheck::code_filename() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_FileCRCCheck.code_filename)
  return code_filename_;
}
inline void CCLCMsg_FileCRCCheck::set_code_filename(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  code_filename_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_FileCRCCheck.code_filename)
}

// optional string filename = 4;
inline bool CCLCMsg_FileCRCCheck::has_filename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_FileCRCCheck::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CCLCMsg_FileCRCCheck::filename() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_FileCRCCheck.filename)
  return filename_.GetNoArena();
}
inline void CCLCMsg_FileCRCCheck::set_filename(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_FileCRCCheck.filename)
}
#if LANG_CXX11
inline void CCLCMsg_FileCRCCheck::set_filename(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CCLCMsg_FileCRCCheck.filename)
}
#endif
inline void CCLCMsg_FileCRCCheck::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CCLCMsg_FileCRCCheck.filename)
}
inline void CCLCMsg_FileCRCCheck::set_filename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CCLCMsg_FileCRCCheck.filename)
}
inline ::std::string* CCLCMsg_FileCRCCheck::mutable_filename() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CCLCMsg_FileCRCCheck.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_FileCRCCheck::release_filename() {
  // @@protoc_insertion_point(field_release:proto.dota.CCLCMsg_FileCRCCheck.filename)
  if (!has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_FileCRCCheck::set_allocated_filename(::std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCLCMsg_FileCRCCheck.filename)
}

// optional fixed32 crc = 5;
inline bool CCLCMsg_FileCRCCheck::has_crc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCLCMsg_FileCRCCheck::clear_crc() {
  crc_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CCLCMsg_FileCRCCheck::crc() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_FileCRCCheck.crc)
  return crc_;
}
inline void CCLCMsg_FileCRCCheck::set_crc(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  crc_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_FileCRCCheck.crc)
}

// -------------------------------------------------------------------

// CCLCMsg_LoadingProgress

// optional int32 progress = 1;
inline bool CCLCMsg_LoadingProgress::has_progress() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_LoadingProgress::clear_progress() {
  progress_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CCLCMsg_LoadingProgress::progress() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_LoadingProgress.progress)
  return progress_;
}
inline void CCLCMsg_LoadingProgress::set_progress(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_LoadingProgress.progress)
}

// -------------------------------------------------------------------

// CCLCMsg_SplitPlayerConnect

// optional string playername = 1;
inline bool CCLCMsg_SplitPlayerConnect::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_SplitPlayerConnect::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCLCMsg_SplitPlayerConnect::playername() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_SplitPlayerConnect.playername)
  return playername_.GetNoArena();
}
inline void CCLCMsg_SplitPlayerConnect::set_playername(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_SplitPlayerConnect.playername)
}
#if LANG_CXX11
inline void CCLCMsg_SplitPlayerConnect::set_playername(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CCLCMsg_SplitPlayerConnect.playername)
}
#endif
inline void CCLCMsg_SplitPlayerConnect::set_playername(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CCLCMsg_SplitPlayerConnect.playername)
}
inline void CCLCMsg_SplitPlayerConnect::set_playername(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CCLCMsg_SplitPlayerConnect.playername)
}
inline ::std::string* CCLCMsg_SplitPlayerConnect::mutable_playername() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CCLCMsg_SplitPlayerConnect.playername)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_SplitPlayerConnect::release_playername() {
  // @@protoc_insertion_point(field_release:proto.dota.CCLCMsg_SplitPlayerConnect.playername)
  if (!has_playername()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return playername_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_SplitPlayerConnect::set_allocated_playername(::std::string* playername) {
  if (playername != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCLCMsg_SplitPlayerConnect.playername)
}

// -------------------------------------------------------------------

// CCLCMsg_ClientMessage

// optional int32 msg_type = 1;
inline bool CCLCMsg_ClientMessage::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_ClientMessage::clear_msg_type() {
  msg_type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CCLCMsg_ClientMessage::msg_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_ClientMessage.msg_type)
  return msg_type_;
}
inline void CCLCMsg_ClientMessage::set_msg_type(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_ClientMessage.msg_type)
}

// optional bytes data = 2;
inline bool CCLCMsg_ClientMessage::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_ClientMessage::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCLCMsg_ClientMessage::data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_ClientMessage.data)
  return data_.GetNoArena();
}
inline void CCLCMsg_ClientMessage::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_ClientMessage.data)
}
#if LANG_CXX11
inline void CCLCMsg_ClientMessage::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CCLCMsg_ClientMessage.data)
}
#endif
inline void CCLCMsg_ClientMessage::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CCLCMsg_ClientMessage.data)
}
inline void CCLCMsg_ClientMessage::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CCLCMsg_ClientMessage.data)
}
inline ::std::string* CCLCMsg_ClientMessage::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CCLCMsg_ClientMessage.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_ClientMessage::release_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CCLCMsg_ClientMessage.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_ClientMessage::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCLCMsg_ClientMessage.data)
}

// -------------------------------------------------------------------

// CCLCMsg_SplitPlayerDisconnect

// optional int32 slot = 1;
inline bool CCLCMsg_SplitPlayerDisconnect::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_SplitPlayerDisconnect::clear_slot() {
  slot_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CCLCMsg_SplitPlayerDisconnect::slot() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_SplitPlayerDisconnect.slot)
  return slot_;
}
inline void CCLCMsg_SplitPlayerDisconnect::set_slot(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  slot_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_SplitPlayerDisconnect.slot)
}

// -------------------------------------------------------------------

// CCLCMsg_ServerStatus

// optional bool simplified = 1;
inline bool CCLCMsg_ServerStatus::has_simplified() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_ServerStatus::clear_simplified() {
  simplified_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CCLCMsg_ServerStatus::simplified() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_ServerStatus.simplified)
  return simplified_;
}
inline void CCLCMsg_ServerStatus::set_simplified(bool value) {
  _has_bits_[0] |= 0x00000001u;
  simplified_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_ServerStatus.simplified)
}

// -------------------------------------------------------------------

// CCLCMsg_ServerPing

// -------------------------------------------------------------------

// CCLCMsg_RequestPause

// optional .proto.dota.RequestPause_t pause_type = 1 [default = RP_PAUSE];
inline bool CCLCMsg_RequestPause::has_pause_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_RequestPause::clear_pause_type() {
  pause_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::RequestPause_t CCLCMsg_RequestPause::pause_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_RequestPause.pause_type)
  return static_cast< ::proto::dota::RequestPause_t >(pause_type_);
}
inline void CCLCMsg_RequestPause::set_pause_type(::proto::dota::RequestPause_t value) {
  assert(::proto::dota::RequestPause_t_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  pause_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_RequestPause.pause_type)
}

// optional int32 pause_group = 2;
inline bool CCLCMsg_RequestPause::has_pause_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_RequestPause::clear_pause_group() {
  pause_group_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CCLCMsg_RequestPause::pause_group() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_RequestPause.pause_group)
  return pause_group_;
}
inline void CCLCMsg_RequestPause::set_pause_group(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  pause_group_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_RequestPause.pause_group)
}

// -------------------------------------------------------------------

// CCLCMsg_CmdKeyValues

// optional bytes data = 1;
inline bool CCLCMsg_CmdKeyValues::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_CmdKeyValues::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCLCMsg_CmdKeyValues::data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCLCMsg_CmdKeyValues.data)
  return data_.GetNoArena();
}
inline void CCLCMsg_CmdKeyValues::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CCLCMsg_CmdKeyValues.data)
}
#if LANG_CXX11
inline void CCLCMsg_CmdKeyValues::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CCLCMsg_CmdKeyValues.data)
}
#endif
inline void CCLCMsg_CmdKeyValues::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CCLCMsg_CmdKeyValues.data)
}
inline void CCLCMsg_CmdKeyValues::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CCLCMsg_CmdKeyValues.data)
}
inline ::std::string* CCLCMsg_CmdKeyValues::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CCLCMsg_CmdKeyValues.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_CmdKeyValues::release_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CCLCMsg_CmdKeyValues.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_CmdKeyValues::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCLCMsg_CmdKeyValues.data)
}

// -------------------------------------------------------------------

// CSVCMsg_ServerInfo

// optional int32 protocol = 1;
inline bool CSVCMsg_ServerInfo::has_protocol() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_protocol() {
  protocol_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::protocol() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.protocol)
  return protocol_;
}
inline void CSVCMsg_ServerInfo::set_protocol(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  protocol_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.protocol)
}

// optional int32 server_count = 2;
inline bool CSVCMsg_ServerInfo::has_server_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_server_count() {
  server_count_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::server_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.server_count)
  return server_count_;
}
inline void CSVCMsg_ServerInfo::set_server_count(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  server_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.server_count)
}

// optional bool is_dedicated = 3;
inline bool CSVCMsg_ServerInfo::has_is_dedicated() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_is_dedicated() {
  is_dedicated_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CSVCMsg_ServerInfo::is_dedicated() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.is_dedicated)
  return is_dedicated_;
}
inline void CSVCMsg_ServerInfo::set_is_dedicated(bool value) {
  _has_bits_[0] |= 0x00000200u;
  is_dedicated_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.is_dedicated)
}

// optional bool is_hltv = 4;
inline bool CSVCMsg_ServerInfo::has_is_hltv() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_is_hltv() {
  is_hltv_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CSVCMsg_ServerInfo::is_hltv() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.is_hltv)
  return is_hltv_;
}
inline void CSVCMsg_ServerInfo::set_is_hltv(bool value) {
  _has_bits_[0] |= 0x00000400u;
  is_hltv_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.is_hltv)
}

// optional bool is_replay = 5;
inline bool CSVCMsg_ServerInfo::has_is_replay() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_is_replay() {
  is_replay_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CSVCMsg_ServerInfo::is_replay() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.is_replay)
  return is_replay_;
}
inline void CSVCMsg_ServerInfo::set_is_replay(bool value) {
  _has_bits_[0] |= 0x00000800u;
  is_replay_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.is_replay)
}

// optional int32 c_os = 6;
inline bool CSVCMsg_ServerInfo::has_c_os() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_c_os() {
  c_os_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::c_os() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.c_os)
  return c_os_;
}
inline void CSVCMsg_ServerInfo::set_c_os(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  c_os_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.c_os)
}

// optional int32 max_clients = 10;
inline bool CSVCMsg_ServerInfo::has_max_clients() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_max_clients() {
  max_clients_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::max_clients() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.max_clients)
  return max_clients_;
}
inline void CSVCMsg_ServerInfo::set_max_clients(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00002000u;
  max_clients_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.max_clients)
}

// optional int32 max_classes = 11;
inline bool CSVCMsg_ServerInfo::has_max_classes() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_max_classes() {
  max_classes_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::max_classes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.max_classes)
  return max_classes_;
}
inline void CSVCMsg_ServerInfo::set_max_classes(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  max_classes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.max_classes)
}

// optional int32 player_slot = 12;
inline bool CSVCMsg_ServerInfo::has_player_slot() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_player_slot() {
  player_slot_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::player_slot() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.player_slot)
  return player_slot_;
}
inline void CSVCMsg_ServerInfo::set_player_slot(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00008000u;
  player_slot_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.player_slot)
}

// optional float tick_interval = 13;
inline bool CSVCMsg_ServerInfo::has_tick_interval() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_tick_interval() {
  tick_interval_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline float CSVCMsg_ServerInfo::tick_interval() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.tick_interval)
  return tick_interval_;
}
inline void CSVCMsg_ServerInfo::set_tick_interval(float value) {
  _has_bits_[0] |= 0x00010000u;
  tick_interval_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.tick_interval)
}

// optional string game_dir = 14;
inline bool CSVCMsg_ServerInfo::has_game_dir() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_game_dir() {
  game_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_ServerInfo::game_dir() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.game_dir)
  return game_dir_.GetNoArena();
}
inline void CSVCMsg_ServerInfo::set_game_dir(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  game_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.game_dir)
}
#if LANG_CXX11
inline void CSVCMsg_ServerInfo::set_game_dir(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  game_dir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_ServerInfo.game_dir)
}
#endif
inline void CSVCMsg_ServerInfo::set_game_dir(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  game_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_ServerInfo.game_dir)
}
inline void CSVCMsg_ServerInfo::set_game_dir(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  game_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_ServerInfo.game_dir)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_game_dir() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_ServerInfo.game_dir)
  return game_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ServerInfo::release_game_dir() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_ServerInfo.game_dir)
  if (!has_game_dir()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return game_dir_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_allocated_game_dir(::std::string* game_dir) {
  if (game_dir != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  game_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_dir);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_ServerInfo.game_dir)
}

// optional string map_name = 15;
inline bool CSVCMsg_ServerInfo::has_map_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_map_name() {
  map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CSVCMsg_ServerInfo::map_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.map_name)
  return map_name_.GetNoArena();
}
inline void CSVCMsg_ServerInfo::set_map_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.map_name)
}
#if LANG_CXX11
inline void CSVCMsg_ServerInfo::set_map_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  map_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_ServerInfo.map_name)
}
#endif
inline void CSVCMsg_ServerInfo::set_map_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_ServerInfo.map_name)
}
inline void CSVCMsg_ServerInfo::set_map_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_ServerInfo.map_name)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_map_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_ServerInfo.map_name)
  return map_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ServerInfo::release_map_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_ServerInfo.map_name)
  if (!has_map_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return map_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_allocated_map_name(::std::string* map_name) {
  if (map_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  map_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_ServerInfo.map_name)
}

// optional string sky_name = 16;
inline bool CSVCMsg_ServerInfo::has_sky_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_sky_name() {
  sky_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CSVCMsg_ServerInfo::sky_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.sky_name)
  return sky_name_.GetNoArena();
}
inline void CSVCMsg_ServerInfo::set_sky_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  sky_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.sky_name)
}
#if LANG_CXX11
inline void CSVCMsg_ServerInfo::set_sky_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  sky_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_ServerInfo.sky_name)
}
#endif
inline void CSVCMsg_ServerInfo::set_sky_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  sky_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_ServerInfo.sky_name)
}
inline void CSVCMsg_ServerInfo::set_sky_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  sky_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_ServerInfo.sky_name)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_sky_name() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_ServerInfo.sky_name)
  return sky_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ServerInfo::release_sky_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_ServerInfo.sky_name)
  if (!has_sky_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return sky_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_allocated_sky_name(::std::string* sky_name) {
  if (sky_name != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  sky_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sky_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_ServerInfo.sky_name)
}

// optional string host_name = 17;
inline bool CSVCMsg_ServerInfo::has_host_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_host_name() {
  host_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& CSVCMsg_ServerInfo::host_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.host_name)
  return host_name_.GetNoArena();
}
inline void CSVCMsg_ServerInfo::set_host_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.host_name)
}
#if LANG_CXX11
inline void CSVCMsg_ServerInfo::set_host_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  host_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_ServerInfo.host_name)
}
#endif
inline void CSVCMsg_ServerInfo::set_host_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_ServerInfo.host_name)
}
inline void CSVCMsg_ServerInfo::set_host_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_ServerInfo.host_name)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_host_name() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_ServerInfo.host_name)
  return host_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ServerInfo::release_host_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_ServerInfo.host_name)
  if (!has_host_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return host_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_allocated_host_name(::std::string* host_name) {
  if (host_name != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  host_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_ServerInfo.host_name)
}

// optional string addon_name = 18;
inline bool CSVCMsg_ServerInfo::has_addon_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_addon_name() {
  addon_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& CSVCMsg_ServerInfo::addon_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.addon_name)
  return addon_name_.GetNoArena();
}
inline void CSVCMsg_ServerInfo::set_addon_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  addon_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.addon_name)
}
#if LANG_CXX11
inline void CSVCMsg_ServerInfo::set_addon_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  addon_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_ServerInfo.addon_name)
}
#endif
inline void CSVCMsg_ServerInfo::set_addon_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  addon_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_ServerInfo.addon_name)
}
inline void CSVCMsg_ServerInfo::set_addon_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  addon_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_ServerInfo.addon_name)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_addon_name() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_ServerInfo.addon_name)
  return addon_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ServerInfo::release_addon_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_ServerInfo.addon_name)
  if (!has_addon_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return addon_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_allocated_addon_name(::std::string* addon_name) {
  if (addon_name != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  addon_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addon_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_ServerInfo.addon_name)
}

// optional .proto.dota.CSVCMsg_GameSessionConfiguration game_session_config = 19;
inline bool CSVCMsg_ServerInfo::has_game_session_config() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline const ::proto::dota::CSVCMsg_GameSessionConfiguration& CSVCMsg_ServerInfo::game_session_config() const {
  const ::proto::dota::CSVCMsg_GameSessionConfiguration* p = game_session_config_;
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.game_session_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CSVCMsg_GameSessionConfiguration*>(
      &::proto::dota::_CSVCMsg_GameSessionConfiguration_default_instance_);
}
inline ::proto::dota::CSVCMsg_GameSessionConfiguration* CSVCMsg_ServerInfo::release_game_session_config() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_ServerInfo.game_session_config)
  _has_bits_[0] &= ~0x00000040u;
  ::proto::dota::CSVCMsg_GameSessionConfiguration* temp = game_session_config_;
  game_session_config_ = nullptr;
  return temp;
}
inline ::proto::dota::CSVCMsg_GameSessionConfiguration* CSVCMsg_ServerInfo::mutable_game_session_config() {
  _has_bits_[0] |= 0x00000040u;
  if (game_session_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CSVCMsg_GameSessionConfiguration>(GetArenaNoVirtual());
    game_session_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_ServerInfo.game_session_config)
  return game_session_config_;
}
inline void CSVCMsg_ServerInfo::set_allocated_game_session_config(::proto::dota::CSVCMsg_GameSessionConfiguration* game_session_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(game_session_config_);
  }
  if (game_session_config) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      game_session_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, game_session_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  game_session_config_ = game_session_config;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_ServerInfo.game_session_config)
}

// optional bytes game_session_manifest = 20;
inline bool CSVCMsg_ServerInfo::has_game_session_manifest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_ServerInfo::clear_game_session_manifest() {
  game_session_manifest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::std::string& CSVCMsg_ServerInfo::game_session_manifest() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerInfo.game_session_manifest)
  return game_session_manifest_.GetNoArena();
}
inline void CSVCMsg_ServerInfo::set_game_session_manifest(const ::std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  game_session_manifest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerInfo.game_session_manifest)
}
#if LANG_CXX11
inline void CSVCMsg_ServerInfo::set_game_session_manifest(::std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  game_session_manifest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_ServerInfo.game_session_manifest)
}
#endif
inline void CSVCMsg_ServerInfo::set_game_session_manifest(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  game_session_manifest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_ServerInfo.game_session_manifest)
}
inline void CSVCMsg_ServerInfo::set_game_session_manifest(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  game_session_manifest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_ServerInfo.game_session_manifest)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_game_session_manifest() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_ServerInfo.game_session_manifest)
  return game_session_manifest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ServerInfo::release_game_session_manifest() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_ServerInfo.game_session_manifest)
  if (!has_game_session_manifest()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return game_session_manifest_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ServerInfo::set_allocated_game_session_manifest(::std::string* game_session_manifest) {
  if (game_session_manifest != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  game_session_manifest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_session_manifest);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_ServerInfo.game_session_manifest)
}

// -------------------------------------------------------------------

// CSVCMsg_ClassInfo_class_t

// optional int32 class_id = 1;
inline bool CSVCMsg_ClassInfo_class_t::has_class_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_ClassInfo_class_t::clear_class_id() {
  class_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CSVCMsg_ClassInfo_class_t::class_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ClassInfo.class_t.class_id)
  return class_id_;
}
inline void CSVCMsg_ClassInfo_class_t::set_class_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  class_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ClassInfo.class_t.class_id)
}

// optional string data_table_name = 2;
inline bool CSVCMsg_ClassInfo_class_t::has_data_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_ClassInfo_class_t::clear_data_table_name() {
  data_table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_ClassInfo_class_t::data_table_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ClassInfo.class_t.data_table_name)
  return data_table_name_.GetNoArena();
}
inline void CSVCMsg_ClassInfo_class_t::set_data_table_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ClassInfo.class_t.data_table_name)
}
#if LANG_CXX11
inline void CSVCMsg_ClassInfo_class_t::set_data_table_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_table_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_ClassInfo.class_t.data_table_name)
}
#endif
inline void CSVCMsg_ClassInfo_class_t::set_data_table_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_ClassInfo.class_t.data_table_name)
}
inline void CSVCMsg_ClassInfo_class_t::set_data_table_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_ClassInfo.class_t.data_table_name)
}
inline ::std::string* CSVCMsg_ClassInfo_class_t::mutable_data_table_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_ClassInfo.class_t.data_table_name)
  return data_table_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ClassInfo_class_t::release_data_table_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_ClassInfo.class_t.data_table_name)
  if (!has_data_table_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_table_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ClassInfo_class_t::set_allocated_data_table_name(::std::string* data_table_name) {
  if (data_table_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_table_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_table_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_ClassInfo.class_t.data_table_name)
}

// optional string class_name = 3;
inline bool CSVCMsg_ClassInfo_class_t::has_class_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_ClassInfo_class_t::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CSVCMsg_ClassInfo_class_t::class_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ClassInfo.class_t.class_name)
  return class_name_.GetNoArena();
}
inline void CSVCMsg_ClassInfo_class_t::set_class_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ClassInfo.class_t.class_name)
}
#if LANG_CXX11
inline void CSVCMsg_ClassInfo_class_t::set_class_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_ClassInfo.class_t.class_name)
}
#endif
inline void CSVCMsg_ClassInfo_class_t::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_ClassInfo.class_t.class_name)
}
inline void CSVCMsg_ClassInfo_class_t::set_class_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_ClassInfo.class_t.class_name)
}
inline ::std::string* CSVCMsg_ClassInfo_class_t::mutable_class_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_ClassInfo.class_t.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ClassInfo_class_t::release_class_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_ClassInfo.class_t.class_name)
  if (!has_class_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return class_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ClassInfo_class_t::set_allocated_class_name(::std::string* class_name) {
  if (class_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_ClassInfo.class_t.class_name)
}

// -------------------------------------------------------------------

// CSVCMsg_ClassInfo

// optional bool create_on_client = 1;
inline bool CSVCMsg_ClassInfo::has_create_on_client() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_ClassInfo::clear_create_on_client() {
  create_on_client_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CSVCMsg_ClassInfo::create_on_client() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ClassInfo.create_on_client)
  return create_on_client_;
}
inline void CSVCMsg_ClassInfo::set_create_on_client(bool value) {
  _has_bits_[0] |= 0x00000001u;
  create_on_client_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ClassInfo.create_on_client)
}

// repeated .proto.dota.CSVCMsg_ClassInfo.class_t classes = 2;
inline int CSVCMsg_ClassInfo::classes_size() const {
  return classes_.size();
}
inline void CSVCMsg_ClassInfo::clear_classes() {
  classes_.Clear();
}
inline ::proto::dota::CSVCMsg_ClassInfo_class_t* CSVCMsg_ClassInfo::mutable_classes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_ClassInfo.classes)
  return classes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_ClassInfo_class_t >*
CSVCMsg_ClassInfo::mutable_classes() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CSVCMsg_ClassInfo.classes)
  return &classes_;
}
inline const ::proto::dota::CSVCMsg_ClassInfo_class_t& CSVCMsg_ClassInfo::classes(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ClassInfo.classes)
  return classes_.Get(index);
}
inline ::proto::dota::CSVCMsg_ClassInfo_class_t* CSVCMsg_ClassInfo::add_classes() {
  // @@protoc_insertion_point(field_add:proto.dota.CSVCMsg_ClassInfo.classes)
  return classes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_ClassInfo_class_t >&
CSVCMsg_ClassInfo::classes() const {
  // @@protoc_insertion_point(field_list:proto.dota.CSVCMsg_ClassInfo.classes)
  return classes_;
}

// -------------------------------------------------------------------

// CSVCMsg_SetPause

// optional bool paused = 1;
inline bool CSVCMsg_SetPause::has_paused() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SetPause::clear_paused() {
  paused_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CSVCMsg_SetPause::paused() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SetPause.paused)
  return paused_;
}
inline void CSVCMsg_SetPause::set_paused(bool value) {
  _has_bits_[0] |= 0x00000001u;
  paused_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SetPause.paused)
}

// -------------------------------------------------------------------

// CSVCMsg_VoiceInit

// optional int32 quality = 1;
inline bool CSVCMsg_VoiceInit::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_VoiceInit::clear_quality() {
  quality_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_VoiceInit::quality() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_VoiceInit.quality)
  return quality_;
}
inline void CSVCMsg_VoiceInit::set_quality(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  quality_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_VoiceInit.quality)
}

// optional string codec = 2;
inline bool CSVCMsg_VoiceInit::has_codec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_VoiceInit::clear_codec() {
  codec_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_VoiceInit::codec() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_VoiceInit.codec)
  return codec_.GetNoArena();
}
inline void CSVCMsg_VoiceInit::set_codec(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  codec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_VoiceInit.codec)
}
#if LANG_CXX11
inline void CSVCMsg_VoiceInit::set_codec(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  codec_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_VoiceInit.codec)
}
#endif
inline void CSVCMsg_VoiceInit::set_codec(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  codec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_VoiceInit.codec)
}
inline void CSVCMsg_VoiceInit::set_codec(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  codec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_VoiceInit.codec)
}
inline ::std::string* CSVCMsg_VoiceInit::mutable_codec() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_VoiceInit.codec)
  return codec_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_VoiceInit::release_codec() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_VoiceInit.codec)
  if (!has_codec()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return codec_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_VoiceInit::set_allocated_codec(::std::string* codec) {
  if (codec != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  codec_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codec);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_VoiceInit.codec)
}

// optional int32 version = 3 [default = 0];
inline bool CSVCMsg_VoiceInit::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_VoiceInit::clear_version() {
  version_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CSVCMsg_VoiceInit::version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_VoiceInit.version)
  return version_;
}
inline void CSVCMsg_VoiceInit::set_version(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_VoiceInit.version)
}

// -------------------------------------------------------------------

// CSVCMsg_Print

// optional string text = 1;
inline bool CSVCMsg_Print::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Print::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_Print::text() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Print.text)
  return text_.GetNoArena();
}
inline void CSVCMsg_Print::set_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Print.text)
}
#if LANG_CXX11
inline void CSVCMsg_Print::set_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_Print.text)
}
#endif
inline void CSVCMsg_Print::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_Print.text)
}
inline void CSVCMsg_Print::set_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_Print.text)
}
inline ::std::string* CSVCMsg_Print::mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_Print.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_Print::release_text() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_Print.text)
  if (!has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_Print::set_allocated_text(::std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_Print.text)
}

// -------------------------------------------------------------------

// CSVCMsg_Sounds_sounddata_t

// optional sint32 origin_x = 1;
inline bool CSVCMsg_Sounds_sounddata_t::has_origin_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_origin_x() {
  origin_x_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::origin_x() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.origin_x)
  return origin_x_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_origin_x(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  origin_x_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.origin_x)
}

// optional sint32 origin_y = 2;
inline bool CSVCMsg_Sounds_sounddata_t::has_origin_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_origin_y() {
  origin_y_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::origin_y() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.origin_y)
  return origin_y_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_origin_y(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  origin_y_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.origin_y)
}

// optional sint32 origin_z = 3;
inline bool CSVCMsg_Sounds_sounddata_t::has_origin_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_origin_z() {
  origin_z_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::origin_z() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.origin_z)
  return origin_z_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_origin_z(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  origin_z_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.origin_z)
}

// optional uint32 volume = 4;
inline bool CSVCMsg_Sounds_sounddata_t::has_volume() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_volume() {
  volume_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CSVCMsg_Sounds_sounddata_t::volume() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.volume)
  return volume_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_volume(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  volume_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.volume)
}

// optional float delay_value = 5;
inline bool CSVCMsg_Sounds_sounddata_t::has_delay_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_delay_value() {
  delay_value_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CSVCMsg_Sounds_sounddata_t::delay_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.delay_value)
  return delay_value_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_delay_value(float value) {
  _has_bits_[0] |= 0x00000010u;
  delay_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.delay_value)
}

// optional int32 sequence_number = 6;
inline bool CSVCMsg_Sounds_sounddata_t::has_sequence_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sequence_number() {
  sequence_number_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::sequence_number() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.sequence_number)
  return sequence_number_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sequence_number(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  sequence_number_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.sequence_number)
}

// optional int32 entity_index = 7;
inline bool CSVCMsg_Sounds_sounddata_t::has_entity_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_entity_index() {
  entity_index_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::entity_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.entity_index)
  return entity_index_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_entity_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  entity_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.entity_index)
}

// optional int32 channel = 8;
inline bool CSVCMsg_Sounds_sounddata_t::has_channel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_channel() {
  channel_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::channel() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.channel)
  return channel_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_channel(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  channel_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.channel)
}

// optional int32 pitch = 9;
inline bool CSVCMsg_Sounds_sounddata_t::has_pitch() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_pitch() {
  pitch_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::pitch() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.pitch)
  return pitch_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_pitch(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  pitch_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.pitch)
}

// optional int32 flags = 10;
inline bool CSVCMsg_Sounds_sounddata_t::has_flags() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.flags)
  return flags_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_flags(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.flags)
}

// optional uint32 sound_num = 11;
inline bool CSVCMsg_Sounds_sounddata_t::has_sound_num() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sound_num() {
  sound_num_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CSVCMsg_Sounds_sounddata_t::sound_num() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.sound_num)
  return sound_num_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sound_num(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  sound_num_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.sound_num)
}

// optional fixed32 sound_num_handle = 12;
inline bool CSVCMsg_Sounds_sounddata_t::has_sound_num_handle() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sound_num_handle() {
  sound_num_handle_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CSVCMsg_Sounds_sounddata_t::sound_num_handle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.sound_num_handle)
  return sound_num_handle_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sound_num_handle(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  sound_num_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.sound_num_handle)
}

// optional int32 speaker_entity = 13;
inline bool CSVCMsg_Sounds_sounddata_t::has_speaker_entity() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_speaker_entity() {
  speaker_entity_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::speaker_entity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.speaker_entity)
  return speaker_entity_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_speaker_entity(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  speaker_entity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.speaker_entity)
}

// optional int32 random_seed = 14;
inline bool CSVCMsg_Sounds_sounddata_t::has_random_seed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_random_seed() {
  random_seed_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::random_seed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.random_seed)
  return random_seed_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_random_seed(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00002000u;
  random_seed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.random_seed)
}

// optional int32 sound_level = 15;
inline bool CSVCMsg_Sounds_sounddata_t::has_sound_level() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sound_level() {
  sound_level_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::sound_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.sound_level)
  return sound_level_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sound_level(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  sound_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.sound_level)
}

// optional bool is_sentence = 16;
inline bool CSVCMsg_Sounds_sounddata_t::has_is_sentence() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_is_sentence() {
  is_sentence_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool CSVCMsg_Sounds_sounddata_t::is_sentence() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.is_sentence)
  return is_sentence_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_is_sentence(bool value) {
  _has_bits_[0] |= 0x00008000u;
  is_sentence_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.is_sentence)
}

// optional bool is_ambient = 17;
inline bool CSVCMsg_Sounds_sounddata_t::has_is_ambient() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_is_ambient() {
  is_ambient_ = false;
  _has_bits_[0] &= ~0x00010000u;
}
inline bool CSVCMsg_Sounds_sounddata_t::is_ambient() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.is_ambient)
  return is_ambient_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_is_ambient(bool value) {
  _has_bits_[0] |= 0x00010000u;
  is_ambient_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.is_ambient)
}

// optional uint32 guid = 18;
inline bool CSVCMsg_Sounds_sounddata_t::has_guid() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_guid() {
  guid_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::uint32 CSVCMsg_Sounds_sounddata_t::guid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.guid)
  return guid_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_guid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.guid)
}

// optional fixed64 sound_resource_id = 19;
inline bool CSVCMsg_Sounds_sounddata_t::has_sound_resource_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sound_resource_id() {
  sound_resource_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00020000u;
}
inline ::google::protobuf::uint64 CSVCMsg_Sounds_sounddata_t::sound_resource_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounddata_t.sound_resource_id)
  return sound_resource_id_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sound_resource_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00020000u;
  sound_resource_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.sounddata_t.sound_resource_id)
}

// -------------------------------------------------------------------

// CSVCMsg_Sounds

// optional bool reliable_sound = 1;
inline bool CSVCMsg_Sounds::has_reliable_sound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Sounds::clear_reliable_sound() {
  reliable_sound_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CSVCMsg_Sounds::reliable_sound() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.reliable_sound)
  return reliable_sound_;
}
inline void CSVCMsg_Sounds::set_reliable_sound(bool value) {
  _has_bits_[0] |= 0x00000001u;
  reliable_sound_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Sounds.reliable_sound)
}

// repeated .proto.dota.CSVCMsg_Sounds.sounddata_t sounds = 2;
inline int CSVCMsg_Sounds::sounds_size() const {
  return sounds_.size();
}
inline void CSVCMsg_Sounds::clear_sounds() {
  sounds_.Clear();
}
inline ::proto::dota::CSVCMsg_Sounds_sounddata_t* CSVCMsg_Sounds::mutable_sounds(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_Sounds.sounds)
  return sounds_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_Sounds_sounddata_t >*
CSVCMsg_Sounds::mutable_sounds() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CSVCMsg_Sounds.sounds)
  return &sounds_;
}
inline const ::proto::dota::CSVCMsg_Sounds_sounddata_t& CSVCMsg_Sounds::sounds(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Sounds.sounds)
  return sounds_.Get(index);
}
inline ::proto::dota::CSVCMsg_Sounds_sounddata_t* CSVCMsg_Sounds::add_sounds() {
  // @@protoc_insertion_point(field_add:proto.dota.CSVCMsg_Sounds.sounds)
  return sounds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_Sounds_sounddata_t >&
CSVCMsg_Sounds::sounds() const {
  // @@protoc_insertion_point(field_list:proto.dota.CSVCMsg_Sounds.sounds)
  return sounds_;
}

// -------------------------------------------------------------------

// CSVCMsg_Prefetch

// optional int32 sound_index = 1;
inline bool CSVCMsg_Prefetch::has_sound_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Prefetch::clear_sound_index() {
  sound_index_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CSVCMsg_Prefetch::sound_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Prefetch.sound_index)
  return sound_index_;
}
inline void CSVCMsg_Prefetch::set_sound_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  sound_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Prefetch.sound_index)
}

// optional .proto.dota.PrefetchType resource_type = 2 [default = PFT_SOUND];
inline bool CSVCMsg_Prefetch::has_resource_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_Prefetch::clear_resource_type() {
  resource_type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::PrefetchType CSVCMsg_Prefetch::resource_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Prefetch.resource_type)
  return static_cast< ::proto::dota::PrefetchType >(resource_type_);
}
inline void CSVCMsg_Prefetch::set_resource_type(::proto::dota::PrefetchType value) {
  assert(::proto::dota::PrefetchType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  resource_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Prefetch.resource_type)
}

// -------------------------------------------------------------------

// CSVCMsg_SetView

// optional int32 entity_index = 1;
inline bool CSVCMsg_SetView::has_entity_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SetView::clear_entity_index() {
  entity_index_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CSVCMsg_SetView::entity_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SetView.entity_index)
  return entity_index_;
}
inline void CSVCMsg_SetView::set_entity_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  entity_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SetView.entity_index)
}

// optional int32 slot = 2;
inline bool CSVCMsg_SetView::has_slot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_SetView::clear_slot() {
  slot_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_SetView::slot() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SetView.slot)
  return slot_;
}
inline void CSVCMsg_SetView::set_slot(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  slot_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SetView.slot)
}

// -------------------------------------------------------------------

// CSVCMsg_FixAngle

// optional bool relative = 1;
inline bool CSVCMsg_FixAngle::has_relative() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_FixAngle::clear_relative() {
  relative_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CSVCMsg_FixAngle::relative() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_FixAngle.relative)
  return relative_;
}
inline void CSVCMsg_FixAngle::set_relative(bool value) {
  _has_bits_[0] |= 0x00000002u;
  relative_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_FixAngle.relative)
}

// optional .proto.dota.CMsgQAngle angle = 2;
inline bool CSVCMsg_FixAngle::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CMsgQAngle& CSVCMsg_FixAngle::angle() const {
  const ::proto::dota::CMsgQAngle* p = angle_;
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_FixAngle.angle)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgQAngle*>(
      &::proto::dota::_CMsgQAngle_default_instance_);
}
inline ::proto::dota::CMsgQAngle* CSVCMsg_FixAngle::release_angle() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_FixAngle.angle)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgQAngle* temp = angle_;
  angle_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgQAngle* CSVCMsg_FixAngle::mutable_angle() {
  _has_bits_[0] |= 0x00000001u;
  if (angle_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgQAngle>(GetArenaNoVirtual());
    angle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_FixAngle.angle)
  return angle_;
}
inline void CSVCMsg_FixAngle::set_allocated_angle(::proto::dota::CMsgQAngle* angle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(angle_);
  }
  if (angle) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      angle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, angle, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  angle_ = angle;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_FixAngle.angle)
}

// -------------------------------------------------------------------

// CSVCMsg_CrosshairAngle

// optional .proto.dota.CMsgQAngle angle = 1;
inline bool CSVCMsg_CrosshairAngle::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CMsgQAngle& CSVCMsg_CrosshairAngle::angle() const {
  const ::proto::dota::CMsgQAngle* p = angle_;
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_CrosshairAngle.angle)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgQAngle*>(
      &::proto::dota::_CMsgQAngle_default_instance_);
}
inline ::proto::dota::CMsgQAngle* CSVCMsg_CrosshairAngle::release_angle() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_CrosshairAngle.angle)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgQAngle* temp = angle_;
  angle_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgQAngle* CSVCMsg_CrosshairAngle::mutable_angle() {
  _has_bits_[0] |= 0x00000001u;
  if (angle_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgQAngle>(GetArenaNoVirtual());
    angle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_CrosshairAngle.angle)
  return angle_;
}
inline void CSVCMsg_CrosshairAngle::set_allocated_angle(::proto::dota::CMsgQAngle* angle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(angle_);
  }
  if (angle) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      angle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, angle, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  angle_ = angle;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_CrosshairAngle.angle)
}

// -------------------------------------------------------------------

// CSVCMsg_BSPDecal

// optional .proto.dota.CMsgVector pos = 1;
inline bool CSVCMsg_BSPDecal::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::proto::dota::CMsgVector& CSVCMsg_BSPDecal::pos() const {
  const ::proto::dota::CMsgVector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_BSPDecal.pos)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgVector*>(
      &::proto::dota::_CMsgVector_default_instance_);
}
inline ::proto::dota::CMsgVector* CSVCMsg_BSPDecal::release_pos() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_BSPDecal.pos)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgVector* temp = pos_;
  pos_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgVector* CSVCMsg_BSPDecal::mutable_pos() {
  _has_bits_[0] |= 0x00000001u;
  if (pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgVector>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_BSPDecal.pos)
  return pos_;
}
inline void CSVCMsg_BSPDecal::set_allocated_pos(::proto::dota::CMsgVector* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pos_);
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_BSPDecal.pos)
}

// optional int32 decal_texture_index = 2;
inline bool CSVCMsg_BSPDecal::has_decal_texture_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_BSPDecal::clear_decal_texture_index() {
  decal_texture_index_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_BSPDecal::decal_texture_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_BSPDecal.decal_texture_index)
  return decal_texture_index_;
}
inline void CSVCMsg_BSPDecal::set_decal_texture_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  decal_texture_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_BSPDecal.decal_texture_index)
}

// optional int32 entity_index = 3;
inline bool CSVCMsg_BSPDecal::has_entity_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_BSPDecal::clear_entity_index() {
  entity_index_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CSVCMsg_BSPDecal::entity_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_BSPDecal.entity_index)
  return entity_index_;
}
inline void CSVCMsg_BSPDecal::set_entity_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  entity_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_BSPDecal.entity_index)
}

// optional int32 model_index = 4;
inline bool CSVCMsg_BSPDecal::has_model_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_BSPDecal::clear_model_index() {
  model_index_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CSVCMsg_BSPDecal::model_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_BSPDecal.model_index)
  return model_index_;
}
inline void CSVCMsg_BSPDecal::set_model_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  model_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_BSPDecal.model_index)
}

// optional bool low_priority = 5;
inline bool CSVCMsg_BSPDecal::has_low_priority() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_BSPDecal::clear_low_priority() {
  low_priority_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CSVCMsg_BSPDecal::low_priority() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_BSPDecal.low_priority)
  return low_priority_;
}
inline void CSVCMsg_BSPDecal::set_low_priority(bool value) {
  _has_bits_[0] |= 0x00000010u;
  low_priority_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_BSPDecal.low_priority)
}

// -------------------------------------------------------------------

// CSVCMsg_SplitScreen

// optional .proto.dota.ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
inline bool CSVCMsg_SplitScreen::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SplitScreen::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::proto::dota::ESplitScreenMessageType CSVCMsg_SplitScreen::type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SplitScreen.type)
  return static_cast< ::proto::dota::ESplitScreenMessageType >(type_);
}
inline void CSVCMsg_SplitScreen::set_type(::proto::dota::ESplitScreenMessageType value) {
  assert(::proto::dota::ESplitScreenMessageType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SplitScreen.type)
}

// optional int32 slot = 2;
inline bool CSVCMsg_SplitScreen::has_slot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_SplitScreen::clear_slot() {
  slot_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_SplitScreen::slot() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SplitScreen.slot)
  return slot_;
}
inline void CSVCMsg_SplitScreen::set_slot(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  slot_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SplitScreen.slot)
}

// optional int32 player_index = 3;
inline bool CSVCMsg_SplitScreen::has_player_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_SplitScreen::clear_player_index() {
  player_index_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CSVCMsg_SplitScreen::player_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SplitScreen.player_index)
  return player_index_;
}
inline void CSVCMsg_SplitScreen::set_player_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  player_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SplitScreen.player_index)
}

// -------------------------------------------------------------------

// CSVCMsg_GetCvarValue

// optional int32 cookie = 1;
inline bool CSVCMsg_GetCvarValue::has_cookie() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GetCvarValue::clear_cookie() {
  cookie_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_GetCvarValue::cookie() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_GetCvarValue.cookie)
  return cookie_;
}
inline void CSVCMsg_GetCvarValue::set_cookie(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  cookie_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_GetCvarValue.cookie)
}

// optional string cvar_name = 2;
inline bool CSVCMsg_GetCvarValue::has_cvar_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GetCvarValue::clear_cvar_name() {
  cvar_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_GetCvarValue::cvar_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_GetCvarValue.cvar_name)
  return cvar_name_.GetNoArena();
}
inline void CSVCMsg_GetCvarValue::set_cvar_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  cvar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_GetCvarValue.cvar_name)
}
#if LANG_CXX11
inline void CSVCMsg_GetCvarValue::set_cvar_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  cvar_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_GetCvarValue.cvar_name)
}
#endif
inline void CSVCMsg_GetCvarValue::set_cvar_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  cvar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_GetCvarValue.cvar_name)
}
inline void CSVCMsg_GetCvarValue::set_cvar_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  cvar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_GetCvarValue.cvar_name)
}
inline ::std::string* CSVCMsg_GetCvarValue::mutable_cvar_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_GetCvarValue.cvar_name)
  return cvar_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GetCvarValue::release_cvar_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_GetCvarValue.cvar_name)
  if (!has_cvar_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return cvar_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GetCvarValue::set_allocated_cvar_name(::std::string* cvar_name) {
  if (cvar_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  cvar_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cvar_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_GetCvarValue.cvar_name)
}

// -------------------------------------------------------------------

// CSVCMsg_Menu

// optional int32 dialog_type = 1;
inline bool CSVCMsg_Menu::has_dialog_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_Menu::clear_dialog_type() {
  dialog_type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_Menu::dialog_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Menu.dialog_type)
  return dialog_type_;
}
inline void CSVCMsg_Menu::set_dialog_type(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  dialog_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Menu.dialog_type)
}

// optional bytes menu_key_values = 2;
inline bool CSVCMsg_Menu::has_menu_key_values() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Menu::clear_menu_key_values() {
  menu_key_values_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_Menu::menu_key_values() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_Menu.menu_key_values)
  return menu_key_values_.GetNoArena();
}
inline void CSVCMsg_Menu::set_menu_key_values(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  menu_key_values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_Menu.menu_key_values)
}
#if LANG_CXX11
inline void CSVCMsg_Menu::set_menu_key_values(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  menu_key_values_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_Menu.menu_key_values)
}
#endif
inline void CSVCMsg_Menu::set_menu_key_values(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  menu_key_values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_Menu.menu_key_values)
}
inline void CSVCMsg_Menu::set_menu_key_values(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  menu_key_values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_Menu.menu_key_values)
}
inline ::std::string* CSVCMsg_Menu::mutable_menu_key_values() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_Menu.menu_key_values)
  return menu_key_values_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_Menu::release_menu_key_values() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_Menu.menu_key_values)
  if (!has_menu_key_values()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return menu_key_values_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_Menu::set_allocated_menu_key_values(::std::string* menu_key_values) {
  if (menu_key_values != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  menu_key_values_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), menu_key_values);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_Menu.menu_key_values)
}

// -------------------------------------------------------------------

// CSVCMsg_SendTable_sendprop_t

// optional int32 type = 1;
inline bool CSVCMsg_SendTable_sendprop_t::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SendTable.sendprop_t.type)
  return type_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_type(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SendTable.sendprop_t.type)
}

// optional string var_name = 2;
inline bool CSVCMsg_SendTable_sendprop_t::has_var_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_var_name() {
  var_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_SendTable_sendprop_t::var_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SendTable.sendprop_t.var_name)
  return var_name_.GetNoArena();
}
inline void CSVCMsg_SendTable_sendprop_t::set_var_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  var_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SendTable.sendprop_t.var_name)
}
#if LANG_CXX11
inline void CSVCMsg_SendTable_sendprop_t::set_var_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  var_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_SendTable.sendprop_t.var_name)
}
#endif
inline void CSVCMsg_SendTable_sendprop_t::set_var_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  var_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_SendTable.sendprop_t.var_name)
}
inline void CSVCMsg_SendTable_sendprop_t::set_var_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  var_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_SendTable.sendprop_t.var_name)
}
inline ::std::string* CSVCMsg_SendTable_sendprop_t::mutable_var_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_SendTable.sendprop_t.var_name)
  return var_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_SendTable_sendprop_t::release_var_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_SendTable.sendprop_t.var_name)
  if (!has_var_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return var_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_SendTable_sendprop_t::set_allocated_var_name(::std::string* var_name) {
  if (var_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  var_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), var_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_SendTable.sendprop_t.var_name)
}

// optional int32 flags = 3;
inline bool CSVCMsg_SendTable_sendprop_t::has_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SendTable.sendprop_t.flags)
  return flags_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_flags(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SendTable.sendprop_t.flags)
}

// optional int32 priority = 4;
inline bool CSVCMsg_SendTable_sendprop_t::has_priority() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_priority() {
  priority_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::priority() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SendTable.sendprop_t.priority)
  return priority_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_priority(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  priority_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SendTable.sendprop_t.priority)
}

// optional string dt_name = 5;
inline bool CSVCMsg_SendTable_sendprop_t::has_dt_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_dt_name() {
  dt_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CSVCMsg_SendTable_sendprop_t::dt_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SendTable.sendprop_t.dt_name)
  return dt_name_.GetNoArena();
}
inline void CSVCMsg_SendTable_sendprop_t::set_dt_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  dt_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SendTable.sendprop_t.dt_name)
}
#if LANG_CXX11
inline void CSVCMsg_SendTable_sendprop_t::set_dt_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  dt_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_SendTable.sendprop_t.dt_name)
}
#endif
inline void CSVCMsg_SendTable_sendprop_t::set_dt_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  dt_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_SendTable.sendprop_t.dt_name)
}
inline void CSVCMsg_SendTable_sendprop_t::set_dt_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  dt_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_SendTable.sendprop_t.dt_name)
}
inline ::std::string* CSVCMsg_SendTable_sendprop_t::mutable_dt_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_SendTable.sendprop_t.dt_name)
  return dt_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_SendTable_sendprop_t::release_dt_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_SendTable.sendprop_t.dt_name)
  if (!has_dt_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return dt_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_SendTable_sendprop_t::set_allocated_dt_name(::std::string* dt_name) {
  if (dt_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dt_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dt_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_SendTable.sendprop_t.dt_name)
}

// optional int32 num_elements = 6;
inline bool CSVCMsg_SendTable_sendprop_t::has_num_elements() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_num_elements() {
  num_elements_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::num_elements() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SendTable.sendprop_t.num_elements)
  return num_elements_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_num_elements(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  num_elements_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SendTable.sendprop_t.num_elements)
}

// optional float low_value = 7;
inline bool CSVCMsg_SendTable_sendprop_t::has_low_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_low_value() {
  low_value_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float CSVCMsg_SendTable_sendprop_t::low_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SendTable.sendprop_t.low_value)
  return low_value_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_low_value(float value) {
  _has_bits_[0] |= 0x00000040u;
  low_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SendTable.sendprop_t.low_value)
}

// optional float high_value = 8;
inline bool CSVCMsg_SendTable_sendprop_t::has_high_value() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_high_value() {
  high_value_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline float CSVCMsg_SendTable_sendprop_t::high_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SendTable.sendprop_t.high_value)
  return high_value_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_high_value(float value) {
  _has_bits_[0] |= 0x00000080u;
  high_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SendTable.sendprop_t.high_value)
}

// optional int32 num_bits = 9;
inline bool CSVCMsg_SendTable_sendprop_t::has_num_bits() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_num_bits() {
  num_bits_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::num_bits() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SendTable.sendprop_t.num_bits)
  return num_bits_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_num_bits(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  num_bits_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SendTable.sendprop_t.num_bits)
}

// -------------------------------------------------------------------

// CSVCMsg_SendTable

// optional bool is_end = 1;
inline bool CSVCMsg_SendTable::has_is_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_SendTable::clear_is_end() {
  is_end_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CSVCMsg_SendTable::is_end() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SendTable.is_end)
  return is_end_;
}
inline void CSVCMsg_SendTable::set_is_end(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_end_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SendTable.is_end)
}

// optional string net_table_name = 2;
inline bool CSVCMsg_SendTable::has_net_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SendTable::clear_net_table_name() {
  net_table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_SendTable::net_table_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SendTable.net_table_name)
  return net_table_name_.GetNoArena();
}
inline void CSVCMsg_SendTable::set_net_table_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  net_table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SendTable.net_table_name)
}
#if LANG_CXX11
inline void CSVCMsg_SendTable::set_net_table_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  net_table_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_SendTable.net_table_name)
}
#endif
inline void CSVCMsg_SendTable::set_net_table_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  net_table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_SendTable.net_table_name)
}
inline void CSVCMsg_SendTable::set_net_table_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  net_table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_SendTable.net_table_name)
}
inline ::std::string* CSVCMsg_SendTable::mutable_net_table_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_SendTable.net_table_name)
  return net_table_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_SendTable::release_net_table_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_SendTable.net_table_name)
  if (!has_net_table_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return net_table_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_SendTable::set_allocated_net_table_name(::std::string* net_table_name) {
  if (net_table_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  net_table_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), net_table_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_SendTable.net_table_name)
}

// optional bool needs_decoder = 3;
inline bool CSVCMsg_SendTable::has_needs_decoder() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_SendTable::clear_needs_decoder() {
  needs_decoder_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CSVCMsg_SendTable::needs_decoder() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SendTable.needs_decoder)
  return needs_decoder_;
}
inline void CSVCMsg_SendTable::set_needs_decoder(bool value) {
  _has_bits_[0] |= 0x00000004u;
  needs_decoder_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_SendTable.needs_decoder)
}

// repeated .proto.dota.CSVCMsg_SendTable.sendprop_t props = 4;
inline int CSVCMsg_SendTable::props_size() const {
  return props_.size();
}
inline void CSVCMsg_SendTable::clear_props() {
  props_.Clear();
}
inline ::proto::dota::CSVCMsg_SendTable_sendprop_t* CSVCMsg_SendTable::mutable_props(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_SendTable.props)
  return props_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_SendTable_sendprop_t >*
CSVCMsg_SendTable::mutable_props() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CSVCMsg_SendTable.props)
  return &props_;
}
inline const ::proto::dota::CSVCMsg_SendTable_sendprop_t& CSVCMsg_SendTable::props(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_SendTable.props)
  return props_.Get(index);
}
inline ::proto::dota::CSVCMsg_SendTable_sendprop_t* CSVCMsg_SendTable::add_props() {
  // @@protoc_insertion_point(field_add:proto.dota.CSVCMsg_SendTable.props)
  return props_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_SendTable_sendprop_t >&
CSVCMsg_SendTable::props() const {
  // @@protoc_insertion_point(field_list:proto.dota.CSVCMsg_SendTable.props)
  return props_;
}

// -------------------------------------------------------------------

// CSVCMsg_GameEventList_key_t

// optional int32 type = 1;
inline bool CSVCMsg_GameEventList_key_t::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GameEventList_key_t::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_GameEventList_key_t::type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_GameEventList.key_t.type)
  return type_;
}
inline void CSVCMsg_GameEventList_key_t::set_type(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_GameEventList.key_t.type)
}

// optional string name = 2;
inline bool CSVCMsg_GameEventList_key_t::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GameEventList_key_t::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_GameEventList_key_t::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_GameEventList.key_t.name)
  return name_.GetNoArena();
}
inline void CSVCMsg_GameEventList_key_t::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_GameEventList.key_t.name)
}
#if LANG_CXX11
inline void CSVCMsg_GameEventList_key_t::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_GameEventList.key_t.name)
}
#endif
inline void CSVCMsg_GameEventList_key_t::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_GameEventList.key_t.name)
}
inline void CSVCMsg_GameEventList_key_t::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_GameEventList.key_t.name)
}
inline ::std::string* CSVCMsg_GameEventList_key_t::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_GameEventList.key_t.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameEventList_key_t::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_GameEventList.key_t.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEventList_key_t::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_GameEventList.key_t.name)
}

// -------------------------------------------------------------------

// CSVCMsg_GameEventList_descriptor_t

// optional int32 eventid = 1;
inline bool CSVCMsg_GameEventList_descriptor_t::has_eventid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GameEventList_descriptor_t::clear_eventid() {
  eventid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_GameEventList_descriptor_t::eventid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_GameEventList.descriptor_t.eventid)
  return eventid_;
}
inline void CSVCMsg_GameEventList_descriptor_t::set_eventid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eventid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_GameEventList.descriptor_t.eventid)
}

// optional string name = 2;
inline bool CSVCMsg_GameEventList_descriptor_t::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GameEventList_descriptor_t::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_GameEventList_descriptor_t::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_GameEventList.descriptor_t.name)
  return name_.GetNoArena();
}
inline void CSVCMsg_GameEventList_descriptor_t::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_GameEventList.descriptor_t.name)
}
#if LANG_CXX11
inline void CSVCMsg_GameEventList_descriptor_t::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_GameEventList.descriptor_t.name)
}
#endif
inline void CSVCMsg_GameEventList_descriptor_t::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_GameEventList.descriptor_t.name)
}
inline void CSVCMsg_GameEventList_descriptor_t::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_GameEventList.descriptor_t.name)
}
inline ::std::string* CSVCMsg_GameEventList_descriptor_t::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_GameEventList.descriptor_t.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_GameEventList_descriptor_t::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_GameEventList.descriptor_t.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_GameEventList_descriptor_t::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_GameEventList.descriptor_t.name)
}

// repeated .proto.dota.CSVCMsg_GameEventList.key_t keys = 3;
inline int CSVCMsg_GameEventList_descriptor_t::keys_size() const {
  return keys_.size();
}
inline void CSVCMsg_GameEventList_descriptor_t::clear_keys() {
  keys_.Clear();
}
inline ::proto::dota::CSVCMsg_GameEventList_key_t* CSVCMsg_GameEventList_descriptor_t::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_GameEventList.descriptor_t.keys)
  return keys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_GameEventList_key_t >*
CSVCMsg_GameEventList_descriptor_t::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CSVCMsg_GameEventList.descriptor_t.keys)
  return &keys_;
}
inline const ::proto::dota::CSVCMsg_GameEventList_key_t& CSVCMsg_GameEventList_descriptor_t::keys(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_GameEventList.descriptor_t.keys)
  return keys_.Get(index);
}
inline ::proto::dota::CSVCMsg_GameEventList_key_t* CSVCMsg_GameEventList_descriptor_t::add_keys() {
  // @@protoc_insertion_point(field_add:proto.dota.CSVCMsg_GameEventList.descriptor_t.keys)
  return keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_GameEventList_key_t >&
CSVCMsg_GameEventList_descriptor_t::keys() const {
  // @@protoc_insertion_point(field_list:proto.dota.CSVCMsg_GameEventList.descriptor_t.keys)
  return keys_;
}

// -------------------------------------------------------------------

// CSVCMsg_GameEventList

// repeated .proto.dota.CSVCMsg_GameEventList.descriptor_t descriptors = 1;
inline int CSVCMsg_GameEventList::descriptors_size() const {
  return descriptors_.size();
}
inline void CSVCMsg_GameEventList::clear_descriptors() {
  descriptors_.Clear();
}
inline ::proto::dota::CSVCMsg_GameEventList_descriptor_t* CSVCMsg_GameEventList::mutable_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_GameEventList.descriptors)
  return descriptors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_GameEventList_descriptor_t >*
CSVCMsg_GameEventList::mutable_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CSVCMsg_GameEventList.descriptors)
  return &descriptors_;
}
inline const ::proto::dota::CSVCMsg_GameEventList_descriptor_t& CSVCMsg_GameEventList::descriptors(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_GameEventList.descriptors)
  return descriptors_.Get(index);
}
inline ::proto::dota::CSVCMsg_GameEventList_descriptor_t* CSVCMsg_GameEventList::add_descriptors() {
  // @@protoc_insertion_point(field_add:proto.dota.CSVCMsg_GameEventList.descriptors)
  return descriptors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CSVCMsg_GameEventList_descriptor_t >&
CSVCMsg_GameEventList::descriptors() const {
  // @@protoc_insertion_point(field_list:proto.dota.CSVCMsg_GameEventList.descriptors)
  return descriptors_;
}

// -------------------------------------------------------------------

// CSVCMsg_PacketEntities

// optional int32 max_entries = 1;
inline bool CSVCMsg_PacketEntities::has_max_entries() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_PacketEntities::clear_max_entries() {
  max_entries_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_PacketEntities::max_entries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketEntities.max_entries)
  return max_entries_;
}
inline void CSVCMsg_PacketEntities::set_max_entries(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  max_entries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketEntities.max_entries)
}

// optional int32 updated_entries = 2;
inline bool CSVCMsg_PacketEntities::has_updated_entries() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_PacketEntities::clear_updated_entries() {
  updated_entries_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CSVCMsg_PacketEntities::updated_entries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketEntities.updated_entries)
  return updated_entries_;
}
inline void CSVCMsg_PacketEntities::set_updated_entries(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  updated_entries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketEntities.updated_entries)
}

// optional bool is_delta = 3;
inline bool CSVCMsg_PacketEntities::has_is_delta() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_PacketEntities::clear_is_delta() {
  is_delta_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CSVCMsg_PacketEntities::is_delta() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketEntities.is_delta)
  return is_delta_;
}
inline void CSVCMsg_PacketEntities::set_is_delta(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_delta_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketEntities.is_delta)
}

// optional bool update_baseline = 4;
inline bool CSVCMsg_PacketEntities::has_update_baseline() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_PacketEntities::clear_update_baseline() {
  update_baseline_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CSVCMsg_PacketEntities::update_baseline() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketEntities.update_baseline)
  return update_baseline_;
}
inline void CSVCMsg_PacketEntities::set_update_baseline(bool value) {
  _has_bits_[0] |= 0x00000020u;
  update_baseline_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketEntities.update_baseline)
}

// optional int32 baseline = 5;
inline bool CSVCMsg_PacketEntities::has_baseline() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_PacketEntities::clear_baseline() {
  baseline_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CSVCMsg_PacketEntities::baseline() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketEntities.baseline)
  return baseline_;
}
inline void CSVCMsg_PacketEntities::set_baseline(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  baseline_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketEntities.baseline)
}

// optional int32 delta_from = 6;
inline bool CSVCMsg_PacketEntities::has_delta_from() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_PacketEntities::clear_delta_from() {
  delta_from_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::int32 CSVCMsg_PacketEntities::delta_from() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketEntities.delta_from)
  return delta_from_;
}
inline void CSVCMsg_PacketEntities::set_delta_from(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  delta_from_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketEntities.delta_from)
}

// optional bytes entity_data = 7;
inline bool CSVCMsg_PacketEntities::has_entity_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_PacketEntities::clear_entity_data() {
  entity_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_PacketEntities::entity_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketEntities.entity_data)
  return entity_data_.GetNoArena();
}
inline void CSVCMsg_PacketEntities::set_entity_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  entity_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketEntities.entity_data)
}
#if LANG_CXX11
inline void CSVCMsg_PacketEntities::set_entity_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  entity_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_PacketEntities.entity_data)
}
#endif
inline void CSVCMsg_PacketEntities::set_entity_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  entity_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_PacketEntities.entity_data)
}
inline void CSVCMsg_PacketEntities::set_entity_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  entity_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_PacketEntities.entity_data)
}
inline ::std::string* CSVCMsg_PacketEntities::mutable_entity_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_PacketEntities.entity_data)
  return entity_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_PacketEntities::release_entity_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_PacketEntities.entity_data)
  if (!has_entity_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return entity_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_PacketEntities::set_allocated_entity_data(::std::string* entity_data) {
  if (entity_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  entity_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_PacketEntities.entity_data)
}

// optional bool pending_full_frame = 8;
inline bool CSVCMsg_PacketEntities::has_pending_full_frame() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_PacketEntities::clear_pending_full_frame() {
  pending_full_frame_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CSVCMsg_PacketEntities::pending_full_frame() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketEntities.pending_full_frame)
  return pending_full_frame_;
}
inline void CSVCMsg_PacketEntities::set_pending_full_frame(bool value) {
  _has_bits_[0] |= 0x00000040u;
  pending_full_frame_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketEntities.pending_full_frame)
}

// optional uint32 active_spawngroup_handle = 9;
inline bool CSVCMsg_PacketEntities::has_active_spawngroup_handle() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_PacketEntities::clear_active_spawngroup_handle() {
  active_spawngroup_handle_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CSVCMsg_PacketEntities::active_spawngroup_handle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketEntities.active_spawngroup_handle)
  return active_spawngroup_handle_;
}
inline void CSVCMsg_PacketEntities::set_active_spawngroup_handle(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  active_spawngroup_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketEntities.active_spawngroup_handle)
}

// optional uint32 max_spawngroup_creationsequence = 10;
inline bool CSVCMsg_PacketEntities::has_max_spawngroup_creationsequence() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSVCMsg_PacketEntities::clear_max_spawngroup_creationsequence() {
  max_spawngroup_creationsequence_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CSVCMsg_PacketEntities::max_spawngroup_creationsequence() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketEntities.max_spawngroup_creationsequence)
  return max_spawngroup_creationsequence_;
}
inline void CSVCMsg_PacketEntities::set_max_spawngroup_creationsequence(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  max_spawngroup_creationsequence_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketEntities.max_spawngroup_creationsequence)
}

// optional uint32 last_cmd_number = 11;
inline bool CSVCMsg_PacketEntities::has_last_cmd_number() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSVCMsg_PacketEntities::clear_last_cmd_number() {
  last_cmd_number_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CSVCMsg_PacketEntities::last_cmd_number() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketEntities.last_cmd_number)
  return last_cmd_number_;
}
inline void CSVCMsg_PacketEntities::set_last_cmd_number(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  last_cmd_number_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketEntities.last_cmd_number)
}

// -------------------------------------------------------------------

// CSVCMsg_TempEntities

// optional bool reliable = 1;
inline bool CSVCMsg_TempEntities::has_reliable() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_TempEntities::clear_reliable() {
  reliable_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CSVCMsg_TempEntities::reliable() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_TempEntities.reliable)
  return reliable_;
}
inline void CSVCMsg_TempEntities::set_reliable(bool value) {
  _has_bits_[0] |= 0x00000002u;
  reliable_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_TempEntities.reliable)
}

// optional int32 num_entries = 2;
inline bool CSVCMsg_TempEntities::has_num_entries() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_TempEntities::clear_num_entries() {
  num_entries_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CSVCMsg_TempEntities::num_entries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_TempEntities.num_entries)
  return num_entries_;
}
inline void CSVCMsg_TempEntities::set_num_entries(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_entries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_TempEntities.num_entries)
}

// optional bytes entity_data = 3;
inline bool CSVCMsg_TempEntities::has_entity_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_TempEntities::clear_entity_data() {
  entity_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_TempEntities::entity_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_TempEntities.entity_data)
  return entity_data_.GetNoArena();
}
inline void CSVCMsg_TempEntities::set_entity_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  entity_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_TempEntities.entity_data)
}
#if LANG_CXX11
inline void CSVCMsg_TempEntities::set_entity_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  entity_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_TempEntities.entity_data)
}
#endif
inline void CSVCMsg_TempEntities::set_entity_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  entity_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_TempEntities.entity_data)
}
inline void CSVCMsg_TempEntities::set_entity_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  entity_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_TempEntities.entity_data)
}
inline ::std::string* CSVCMsg_TempEntities::mutable_entity_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_TempEntities.entity_data)
  return entity_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_TempEntities::release_entity_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_TempEntities.entity_data)
  if (!has_entity_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return entity_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_TempEntities::set_allocated_entity_data(::std::string* entity_data) {
  if (entity_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  entity_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_TempEntities.entity_data)
}

// -------------------------------------------------------------------

// CSVCMsg_CreateStringTable

// optional string name = 1;
inline bool CSVCMsg_CreateStringTable::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_CreateStringTable::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_CreateStringTable::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_CreateStringTable.name)
  return name_.GetNoArena();
}
inline void CSVCMsg_CreateStringTable::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_CreateStringTable.name)
}
#if LANG_CXX11
inline void CSVCMsg_CreateStringTable::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_CreateStringTable.name)
}
#endif
inline void CSVCMsg_CreateStringTable::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_CreateStringTable.name)
}
inline void CSVCMsg_CreateStringTable::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_CreateStringTable.name)
}
inline ::std::string* CSVCMsg_CreateStringTable::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_CreateStringTable.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_CreateStringTable::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_CreateStringTable.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_CreateStringTable::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_CreateStringTable.name)
}

// optional int32 num_entries = 2;
inline bool CSVCMsg_CreateStringTable::has_num_entries() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_CreateStringTable::clear_num_entries() {
  num_entries_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::num_entries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_CreateStringTable.num_entries)
  return num_entries_;
}
inline void CSVCMsg_CreateStringTable::set_num_entries(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_entries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_CreateStringTable.num_entries)
}

// optional bool user_data_fixed_size = 3;
inline bool CSVCMsg_CreateStringTable::has_user_data_fixed_size() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_CreateStringTable::clear_user_data_fixed_size() {
  user_data_fixed_size_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CSVCMsg_CreateStringTable::user_data_fixed_size() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_CreateStringTable.user_data_fixed_size)
  return user_data_fixed_size_;
}
inline void CSVCMsg_CreateStringTable::set_user_data_fixed_size(bool value) {
  _has_bits_[0] |= 0x00000040u;
  user_data_fixed_size_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_CreateStringTable.user_data_fixed_size)
}

// optional int32 user_data_size = 4;
inline bool CSVCMsg_CreateStringTable::has_user_data_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_CreateStringTable::clear_user_data_size() {
  user_data_size_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::user_data_size() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_CreateStringTable.user_data_size)
  return user_data_size_;
}
inline void CSVCMsg_CreateStringTable::set_user_data_size(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  user_data_size_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_CreateStringTable.user_data_size)
}

// optional int32 user_data_size_bits = 5;
inline bool CSVCMsg_CreateStringTable::has_user_data_size_bits() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_CreateStringTable::clear_user_data_size_bits() {
  user_data_size_bits_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::user_data_size_bits() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_CreateStringTable.user_data_size_bits)
  return user_data_size_bits_;
}
inline void CSVCMsg_CreateStringTable::set_user_data_size_bits(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  user_data_size_bits_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_CreateStringTable.user_data_size_bits)
}

// optional int32 flags = 6;
inline bool CSVCMsg_CreateStringTable::has_flags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_CreateStringTable::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_CreateStringTable.flags)
  return flags_;
}
inline void CSVCMsg_CreateStringTable::set_flags(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_CreateStringTable.flags)
}

// optional bytes string_data = 7;
inline bool CSVCMsg_CreateStringTable::has_string_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_CreateStringTable::clear_string_data() {
  string_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CSVCMsg_CreateStringTable::string_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_CreateStringTable.string_data)
  return string_data_.GetNoArena();
}
inline void CSVCMsg_CreateStringTable::set_string_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  string_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_CreateStringTable.string_data)
}
#if LANG_CXX11
inline void CSVCMsg_CreateStringTable::set_string_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  string_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_CreateStringTable.string_data)
}
#endif
inline void CSVCMsg_CreateStringTable::set_string_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  string_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_CreateStringTable.string_data)
}
inline void CSVCMsg_CreateStringTable::set_string_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  string_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_CreateStringTable.string_data)
}
inline ::std::string* CSVCMsg_CreateStringTable::mutable_string_data() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_CreateStringTable.string_data)
  return string_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_CreateStringTable::release_string_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_CreateStringTable.string_data)
  if (!has_string_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return string_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_CreateStringTable::set_allocated_string_data(::std::string* string_data) {
  if (string_data != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  string_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_CreateStringTable.string_data)
}

// optional int32 uncompressed_size = 8;
inline bool CSVCMsg_CreateStringTable::has_uncompressed_size() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_CreateStringTable::clear_uncompressed_size() {
  uncompressed_size_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::uncompressed_size() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_CreateStringTable.uncompressed_size)
  return uncompressed_size_;
}
inline void CSVCMsg_CreateStringTable::set_uncompressed_size(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  uncompressed_size_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_CreateStringTable.uncompressed_size)
}

// optional bool data_compressed = 9;
inline bool CSVCMsg_CreateStringTable::has_data_compressed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_CreateStringTable::clear_data_compressed() {
  data_compressed_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CSVCMsg_CreateStringTable::data_compressed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_CreateStringTable.data_compressed)
  return data_compressed_;
}
inline void CSVCMsg_CreateStringTable::set_data_compressed(bool value) {
  _has_bits_[0] |= 0x00000080u;
  data_compressed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_CreateStringTable.data_compressed)
}

// -------------------------------------------------------------------

// CSVCMsg_UpdateStringTable

// optional int32 table_id = 1;
inline bool CSVCMsg_UpdateStringTable::has_table_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_UpdateStringTable::clear_table_id() {
  table_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_UpdateStringTable::table_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_UpdateStringTable.table_id)
  return table_id_;
}
inline void CSVCMsg_UpdateStringTable::set_table_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  table_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_UpdateStringTable.table_id)
}

// optional int32 num_changed_entries = 2;
inline bool CSVCMsg_UpdateStringTable::has_num_changed_entries() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_UpdateStringTable::clear_num_changed_entries() {
  num_changed_entries_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CSVCMsg_UpdateStringTable::num_changed_entries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_UpdateStringTable.num_changed_entries)
  return num_changed_entries_;
}
inline void CSVCMsg_UpdateStringTable::set_num_changed_entries(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_changed_entries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_UpdateStringTable.num_changed_entries)
}

// optional bytes string_data = 3;
inline bool CSVCMsg_UpdateStringTable::has_string_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_UpdateStringTable::clear_string_data() {
  string_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_UpdateStringTable::string_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_UpdateStringTable.string_data)
  return string_data_.GetNoArena();
}
inline void CSVCMsg_UpdateStringTable::set_string_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  string_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_UpdateStringTable.string_data)
}
#if LANG_CXX11
inline void CSVCMsg_UpdateStringTable::set_string_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  string_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_UpdateStringTable.string_data)
}
#endif
inline void CSVCMsg_UpdateStringTable::set_string_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  string_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_UpdateStringTable.string_data)
}
inline void CSVCMsg_UpdateStringTable::set_string_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  string_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_UpdateStringTable.string_data)
}
inline ::std::string* CSVCMsg_UpdateStringTable::mutable_string_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_UpdateStringTable.string_data)
  return string_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_UpdateStringTable::release_string_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_UpdateStringTable.string_data)
  if (!has_string_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return string_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_UpdateStringTable::set_allocated_string_data(::std::string* string_data) {
  if (string_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  string_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_UpdateStringTable.string_data)
}

// -------------------------------------------------------------------

// CSVCMsg_VoiceData

// optional .proto.dota.CMsgVoiceAudio audio = 1;
inline bool CSVCMsg_VoiceData::has_audio() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_VoiceData::clear_audio() {
  if (audio_ != nullptr) audio_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgVoiceAudio& CSVCMsg_VoiceData::audio() const {
  const ::proto::dota::CMsgVoiceAudio* p = audio_;
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_VoiceData.audio)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgVoiceAudio*>(
      &::proto::dota::_CMsgVoiceAudio_default_instance_);
}
inline ::proto::dota::CMsgVoiceAudio* CSVCMsg_VoiceData::release_audio() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_VoiceData.audio)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgVoiceAudio* temp = audio_;
  audio_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgVoiceAudio* CSVCMsg_VoiceData::mutable_audio() {
  _has_bits_[0] |= 0x00000001u;
  if (audio_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgVoiceAudio>(GetArenaNoVirtual());
    audio_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_VoiceData.audio)
  return audio_;
}
inline void CSVCMsg_VoiceData::set_allocated_audio(::proto::dota::CMsgVoiceAudio* audio) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete audio_;
  }
  if (audio) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      audio = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, audio, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  audio_ = audio;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_VoiceData.audio)
}

// optional int32 client = 2;
inline bool CSVCMsg_VoiceData::has_client() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_VoiceData::clear_client() {
  client_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_VoiceData::client() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_VoiceData.client)
  return client_;
}
inline void CSVCMsg_VoiceData::set_client(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  client_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_VoiceData.client)
}

// optional bool proximity = 3;
inline bool CSVCMsg_VoiceData::has_proximity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_VoiceData::clear_proximity() {
  proximity_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CSVCMsg_VoiceData::proximity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_VoiceData.proximity)
  return proximity_;
}
inline void CSVCMsg_VoiceData::set_proximity(bool value) {
  _has_bits_[0] |= 0x00000004u;
  proximity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_VoiceData.proximity)
}

// optional fixed64 xuid = 4;
inline bool CSVCMsg_VoiceData::has_xuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_VoiceData::clear_xuid() {
  xuid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CSVCMsg_VoiceData::xuid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_VoiceData.xuid)
  return xuid_;
}
inline void CSVCMsg_VoiceData::set_xuid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  xuid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_VoiceData.xuid)
}

// optional int32 audible_mask = 5;
inline bool CSVCMsg_VoiceData::has_audible_mask() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_VoiceData::clear_audible_mask() {
  audible_mask_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 CSVCMsg_VoiceData::audible_mask() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_VoiceData.audible_mask)
  return audible_mask_;
}
inline void CSVCMsg_VoiceData::set_audible_mask(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  audible_mask_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_VoiceData.audible_mask)
}

// optional uint32 tick = 6;
inline bool CSVCMsg_VoiceData::has_tick() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_VoiceData::clear_tick() {
  tick_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CSVCMsg_VoiceData::tick() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_VoiceData.tick)
  return tick_;
}
inline void CSVCMsg_VoiceData::set_tick(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  tick_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_VoiceData.tick)
}

// -------------------------------------------------------------------

// CSVCMsg_PacketReliable

// optional int32 tick = 1;
inline bool CSVCMsg_PacketReliable::has_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_PacketReliable::clear_tick() {
  tick_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CSVCMsg_PacketReliable::tick() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketReliable.tick)
  return tick_;
}
inline void CSVCMsg_PacketReliable::set_tick(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  tick_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketReliable.tick)
}

// optional int32 messagessize = 2;
inline bool CSVCMsg_PacketReliable::has_messagessize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_PacketReliable::clear_messagessize() {
  messagessize_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_PacketReliable::messagessize() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketReliable.messagessize)
  return messagessize_;
}
inline void CSVCMsg_PacketReliable::set_messagessize(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  messagessize_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketReliable.messagessize)
}

// optional bool state = 3;
inline bool CSVCMsg_PacketReliable::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_PacketReliable::clear_state() {
  state_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CSVCMsg_PacketReliable::state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PacketReliable.state)
  return state_;
}
inline void CSVCMsg_PacketReliable::set_state(bool value) {
  _has_bits_[0] |= 0x00000004u;
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_PacketReliable.state)
}

// -------------------------------------------------------------------

// CSVCMsg_FullFrameSplit

// optional int32 tick = 1;
inline bool CSVCMsg_FullFrameSplit::has_tick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_FullFrameSplit::clear_tick() {
  tick_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_FullFrameSplit::tick() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_FullFrameSplit.tick)
  return tick_;
}
inline void CSVCMsg_FullFrameSplit::set_tick(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  tick_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_FullFrameSplit.tick)
}

// optional int32 section = 2;
inline bool CSVCMsg_FullFrameSplit::has_section() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_FullFrameSplit::clear_section() {
  section_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CSVCMsg_FullFrameSplit::section() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_FullFrameSplit.section)
  return section_;
}
inline void CSVCMsg_FullFrameSplit::set_section(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  section_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_FullFrameSplit.section)
}

// optional int32 total = 3;
inline bool CSVCMsg_FullFrameSplit::has_total() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_FullFrameSplit::clear_total() {
  total_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CSVCMsg_FullFrameSplit::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_FullFrameSplit.total)
  return total_;
}
inline void CSVCMsg_FullFrameSplit::set_total(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_FullFrameSplit.total)
}

// optional bytes data = 4;
inline bool CSVCMsg_FullFrameSplit::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_FullFrameSplit::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_FullFrameSplit::data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_FullFrameSplit.data)
  return data_.GetNoArena();
}
inline void CSVCMsg_FullFrameSplit::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_FullFrameSplit.data)
}
#if LANG_CXX11
inline void CSVCMsg_FullFrameSplit::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_FullFrameSplit.data)
}
#endif
inline void CSVCMsg_FullFrameSplit::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_FullFrameSplit.data)
}
inline void CSVCMsg_FullFrameSplit::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_FullFrameSplit.data)
}
inline ::std::string* CSVCMsg_FullFrameSplit::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_FullFrameSplit.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_FullFrameSplit::release_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_FullFrameSplit.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_FullFrameSplit::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_FullFrameSplit.data)
}

// -------------------------------------------------------------------

// CSVCMsg_HLTVStatus

// optional string master = 1;
inline bool CSVCMsg_HLTVStatus::has_master() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_HLTVStatus::clear_master() {
  master_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_HLTVStatus::master() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_HLTVStatus.master)
  return master_.GetNoArena();
}
inline void CSVCMsg_HLTVStatus::set_master(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  master_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_HLTVStatus.master)
}
#if LANG_CXX11
inline void CSVCMsg_HLTVStatus::set_master(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  master_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_HLTVStatus.master)
}
#endif
inline void CSVCMsg_HLTVStatus::set_master(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  master_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_HLTVStatus.master)
}
inline void CSVCMsg_HLTVStatus::set_master(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  master_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_HLTVStatus.master)
}
inline ::std::string* CSVCMsg_HLTVStatus::mutable_master() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_HLTVStatus.master)
  return master_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_HLTVStatus::release_master() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_HLTVStatus.master)
  if (!has_master()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return master_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_HLTVStatus::set_allocated_master(::std::string* master) {
  if (master != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  master_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), master);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_HLTVStatus.master)
}

// optional int32 clients = 2;
inline bool CSVCMsg_HLTVStatus::has_clients() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_HLTVStatus::clear_clients() {
  clients_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CSVCMsg_HLTVStatus::clients() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_HLTVStatus.clients)
  return clients_;
}
inline void CSVCMsg_HLTVStatus::set_clients(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  clients_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_HLTVStatus.clients)
}

// optional int32 slots = 3;
inline bool CSVCMsg_HLTVStatus::has_slots() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_HLTVStatus::clear_slots() {
  slots_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CSVCMsg_HLTVStatus::slots() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_HLTVStatus.slots)
  return slots_;
}
inline void CSVCMsg_HLTVStatus::set_slots(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  slots_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_HLTVStatus.slots)
}

// optional int32 proxies = 4;
inline bool CSVCMsg_HLTVStatus::has_proxies() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_HLTVStatus::clear_proxies() {
  proxies_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CSVCMsg_HLTVStatus::proxies() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_HLTVStatus.proxies)
  return proxies_;
}
inline void CSVCMsg_HLTVStatus::set_proxies(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  proxies_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_HLTVStatus.proxies)
}

// -------------------------------------------------------------------

// CSVCMsg_ServerSteamID

// optional uint64 steam_id = 1;
inline bool CSVCMsg_ServerSteamID::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_ServerSteamID::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CSVCMsg_ServerSteamID::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ServerSteamID.steam_id)
  return steam_id_;
}
inline void CSVCMsg_ServerSteamID::set_steam_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ServerSteamID.steam_id)
}

// -------------------------------------------------------------------

// CSVCMsg_CmdKeyValues

// optional bytes data = 1;
inline bool CSVCMsg_CmdKeyValues::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_CmdKeyValues::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_CmdKeyValues::data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_CmdKeyValues.data)
  return data_.GetNoArena();
}
inline void CSVCMsg_CmdKeyValues::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_CmdKeyValues.data)
}
#if LANG_CXX11
inline void CSVCMsg_CmdKeyValues::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_CmdKeyValues.data)
}
#endif
inline void CSVCMsg_CmdKeyValues::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_CmdKeyValues.data)
}
inline void CSVCMsg_CmdKeyValues::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_CmdKeyValues.data)
}
inline ::std::string* CSVCMsg_CmdKeyValues::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_CmdKeyValues.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_CmdKeyValues::release_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_CmdKeyValues.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_CmdKeyValues::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_CmdKeyValues.data)
}

// -------------------------------------------------------------------

// CMsgIPCAddress

// optional fixed64 computer_guid = 1;
inline bool CMsgIPCAddress::has_computer_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgIPCAddress::clear_computer_guid() {
  computer_guid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CMsgIPCAddress::computer_guid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgIPCAddress.computer_guid)
  return computer_guid_;
}
inline void CMsgIPCAddress::set_computer_guid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  computer_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgIPCAddress.computer_guid)
}

// optional uint32 process_id = 2;
inline bool CMsgIPCAddress::has_process_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgIPCAddress::clear_process_id() {
  process_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgIPCAddress::process_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgIPCAddress.process_id)
  return process_id_;
}
inline void CMsgIPCAddress::set_process_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  process_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgIPCAddress.process_id)
}

// -------------------------------------------------------------------

// CMsgServerPeer

// optional int32 player_slot = 1;
inline bool CMsgServerPeer::has_player_slot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerPeer::clear_player_slot() {
  player_slot_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CMsgServerPeer::player_slot() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerPeer.player_slot)
  return player_slot_;
}
inline void CMsgServerPeer::set_player_slot(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  player_slot_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerPeer.player_slot)
}

// optional fixed64 steamid = 2;
inline bool CMsgServerPeer::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerPeer::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgServerPeer::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerPeer.steamid)
  return steamid_;
}
inline void CMsgServerPeer::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerPeer.steamid)
}

// optional .proto.dota.CMsgIPCAddress ipc = 3;
inline bool CMsgServerPeer::has_ipc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerPeer::clear_ipc() {
  if (ipc_ != nullptr) ipc_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CMsgIPCAddress& CMsgServerPeer::ipc() const {
  const ::proto::dota::CMsgIPCAddress* p = ipc_;
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerPeer.ipc)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgIPCAddress*>(
      &::proto::dota::_CMsgIPCAddress_default_instance_);
}
inline ::proto::dota::CMsgIPCAddress* CMsgServerPeer::release_ipc() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgServerPeer.ipc)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CMsgIPCAddress* temp = ipc_;
  ipc_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgIPCAddress* CMsgServerPeer::mutable_ipc() {
  _has_bits_[0] |= 0x00000001u;
  if (ipc_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgIPCAddress>(GetArenaNoVirtual());
    ipc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerPeer.ipc)
  return ipc_;
}
inline void CMsgServerPeer::set_allocated_ipc(::proto::dota::CMsgIPCAddress* ipc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ipc_;
  }
  if (ipc) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ipc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ipc, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ipc_ = ipc;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgServerPeer.ipc)
}

// optional bool they_hear_you = 4;
inline bool CMsgServerPeer::has_they_hear_you() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerPeer::clear_they_hear_you() {
  they_hear_you_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgServerPeer::they_hear_you() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerPeer.they_hear_you)
  return they_hear_you_;
}
inline void CMsgServerPeer::set_they_hear_you(bool value) {
  _has_bits_[0] |= 0x00000008u;
  they_hear_you_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerPeer.they_hear_you)
}

// optional bool you_hear_them = 5;
inline bool CMsgServerPeer::has_you_hear_them() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgServerPeer::clear_you_hear_them() {
  you_hear_them_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgServerPeer::you_hear_them() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerPeer.you_hear_them)
  return you_hear_them_;
}
inline void CMsgServerPeer::set_you_hear_them(bool value) {
  _has_bits_[0] |= 0x00000010u;
  you_hear_them_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerPeer.you_hear_them)
}

// optional bool is_listenserver_host = 6;
inline bool CMsgServerPeer::has_is_listenserver_host() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgServerPeer::clear_is_listenserver_host() {
  is_listenserver_host_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CMsgServerPeer::is_listenserver_host() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerPeer.is_listenserver_host)
  return is_listenserver_host_;
}
inline void CMsgServerPeer::set_is_listenserver_host(bool value) {
  _has_bits_[0] |= 0x00000020u;
  is_listenserver_host_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerPeer.is_listenserver_host)
}

// -------------------------------------------------------------------

// CSVCMsg_PeerList

// repeated .proto.dota.CMsgServerPeer peer = 1;
inline int CSVCMsg_PeerList::peer_size() const {
  return peer_.size();
}
inline void CSVCMsg_PeerList::clear_peer() {
  peer_.Clear();
}
inline ::proto::dota::CMsgServerPeer* CSVCMsg_PeerList::mutable_peer(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_PeerList.peer)
  return peer_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerPeer >*
CSVCMsg_PeerList::mutable_peer() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CSVCMsg_PeerList.peer)
  return &peer_;
}
inline const ::proto::dota::CMsgServerPeer& CSVCMsg_PeerList::peer(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_PeerList.peer)
  return peer_.Get(index);
}
inline ::proto::dota::CMsgServerPeer* CSVCMsg_PeerList::add_peer() {
  // @@protoc_insertion_point(field_add:proto.dota.CSVCMsg_PeerList.peer)
  return peer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerPeer >&
CSVCMsg_PeerList::peer() const {
  // @@protoc_insertion_point(field_list:proto.dota.CSVCMsg_PeerList.peer)
  return peer_;
}

// -------------------------------------------------------------------

// CSVCMsg_ClearAllStringTables

// optional string mapname = 1;
inline bool CSVCMsg_ClearAllStringTables::has_mapname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_ClearAllStringTables::clear_mapname() {
  mapname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CSVCMsg_ClearAllStringTables::mapname() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_ClearAllStringTables.mapname)
  return mapname_.GetNoArena();
}
inline void CSVCMsg_ClearAllStringTables::set_mapname(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_ClearAllStringTables.mapname)
}
#if LANG_CXX11
inline void CSVCMsg_ClearAllStringTables::set_mapname(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  mapname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSVCMsg_ClearAllStringTables.mapname)
}
#endif
inline void CSVCMsg_ClearAllStringTables::set_mapname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_ClearAllStringTables.mapname)
}
inline void CSVCMsg_ClearAllStringTables::set_mapname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_ClearAllStringTables.mapname)
}
inline ::std::string* CSVCMsg_ClearAllStringTables::mutable_mapname() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_ClearAllStringTables.mapname)
  return mapname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSVCMsg_ClearAllStringTables::release_mapname() {
  // @@protoc_insertion_point(field_release:proto.dota.CSVCMsg_ClearAllStringTables.mapname)
  if (!has_mapname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return mapname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSVCMsg_ClearAllStringTables::set_allocated_mapname(::std::string* mapname) {
  if (mapname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  mapname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapname);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSVCMsg_ClearAllStringTables.mapname)
}

// -------------------------------------------------------------------

// ProtoFlattenedSerializerField_t

// optional int32 var_type_sym = 1;
inline bool ProtoFlattenedSerializerField_t::has_var_type_sym() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoFlattenedSerializerField_t::clear_var_type_sym() {
  var_type_sym_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::var_type_sym() const {
  // @@protoc_insertion_point(field_get:proto.dota.ProtoFlattenedSerializerField_t.var_type_sym)
  return var_type_sym_;
}
inline void ProtoFlattenedSerializerField_t::set_var_type_sym(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  var_type_sym_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ProtoFlattenedSerializerField_t.var_type_sym)
}

// optional int32 var_name_sym = 2;
inline bool ProtoFlattenedSerializerField_t::has_var_name_sym() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoFlattenedSerializerField_t::clear_var_name_sym() {
  var_name_sym_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::var_name_sym() const {
  // @@protoc_insertion_point(field_get:proto.dota.ProtoFlattenedSerializerField_t.var_name_sym)
  return var_name_sym_;
}
inline void ProtoFlattenedSerializerField_t::set_var_name_sym(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  var_name_sym_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ProtoFlattenedSerializerField_t.var_name_sym)
}

// optional int32 bit_count = 3;
inline bool ProtoFlattenedSerializerField_t::has_bit_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoFlattenedSerializerField_t::clear_bit_count() {
  bit_count_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::bit_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.ProtoFlattenedSerializerField_t.bit_count)
  return bit_count_;
}
inline void ProtoFlattenedSerializerField_t::set_bit_count(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  bit_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ProtoFlattenedSerializerField_t.bit_count)
}

// optional float low_value = 4;
inline bool ProtoFlattenedSerializerField_t::has_low_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoFlattenedSerializerField_t::clear_low_value() {
  low_value_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float ProtoFlattenedSerializerField_t::low_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.ProtoFlattenedSerializerField_t.low_value)
  return low_value_;
}
inline void ProtoFlattenedSerializerField_t::set_low_value(float value) {
  _has_bits_[0] |= 0x00000008u;
  low_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ProtoFlattenedSerializerField_t.low_value)
}

// optional float high_value = 5;
inline bool ProtoFlattenedSerializerField_t::has_high_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoFlattenedSerializerField_t::clear_high_value() {
  high_value_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float ProtoFlattenedSerializerField_t::high_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.ProtoFlattenedSerializerField_t.high_value)
  return high_value_;
}
inline void ProtoFlattenedSerializerField_t::set_high_value(float value) {
  _has_bits_[0] |= 0x00000010u;
  high_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ProtoFlattenedSerializerField_t.high_value)
}

// optional int32 encode_flags = 6;
inline bool ProtoFlattenedSerializerField_t::has_encode_flags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoFlattenedSerializerField_t::clear_encode_flags() {
  encode_flags_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::encode_flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.ProtoFlattenedSerializerField_t.encode_flags)
  return encode_flags_;
}
inline void ProtoFlattenedSerializerField_t::set_encode_flags(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  encode_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ProtoFlattenedSerializerField_t.encode_flags)
}

// optional int32 field_serializer_name_sym = 7;
inline bool ProtoFlattenedSerializerField_t::has_field_serializer_name_sym() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoFlattenedSerializerField_t::clear_field_serializer_name_sym() {
  field_serializer_name_sym_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::field_serializer_name_sym() const {
  // @@protoc_insertion_point(field_get:proto.dota.ProtoFlattenedSerializerField_t.field_serializer_name_sym)
  return field_serializer_name_sym_;
}
inline void ProtoFlattenedSerializerField_t::set_field_serializer_name_sym(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  field_serializer_name_sym_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ProtoFlattenedSerializerField_t.field_serializer_name_sym)
}

// optional int32 field_serializer_version = 8;
inline bool ProtoFlattenedSerializerField_t::has_field_serializer_version() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoFlattenedSerializerField_t::clear_field_serializer_version() {
  field_serializer_version_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::field_serializer_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.ProtoFlattenedSerializerField_t.field_serializer_version)
  return field_serializer_version_;
}
inline void ProtoFlattenedSerializerField_t::set_field_serializer_version(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  field_serializer_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ProtoFlattenedSerializerField_t.field_serializer_version)
}

// optional int32 send_node_sym = 9;
inline bool ProtoFlattenedSerializerField_t::has_send_node_sym() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoFlattenedSerializerField_t::clear_send_node_sym() {
  send_node_sym_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::send_node_sym() const {
  // @@protoc_insertion_point(field_get:proto.dota.ProtoFlattenedSerializerField_t.send_node_sym)
  return send_node_sym_;
}
inline void ProtoFlattenedSerializerField_t::set_send_node_sym(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  send_node_sym_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ProtoFlattenedSerializerField_t.send_node_sym)
}

// optional int32 var_encoder_sym = 10;
inline bool ProtoFlattenedSerializerField_t::has_var_encoder_sym() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProtoFlattenedSerializerField_t::clear_var_encoder_sym() {
  var_encoder_sym_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::var_encoder_sym() const {
  // @@protoc_insertion_point(field_get:proto.dota.ProtoFlattenedSerializerField_t.var_encoder_sym)
  return var_encoder_sym_;
}
inline void ProtoFlattenedSerializerField_t::set_var_encoder_sym(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  var_encoder_sym_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ProtoFlattenedSerializerField_t.var_encoder_sym)
}

// -------------------------------------------------------------------

// ProtoFlattenedSerializer_t

// optional int32 serializer_name_sym = 1;
inline bool ProtoFlattenedSerializer_t::has_serializer_name_sym() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoFlattenedSerializer_t::clear_serializer_name_sym() {
  serializer_name_sym_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 ProtoFlattenedSerializer_t::serializer_name_sym() const {
  // @@protoc_insertion_point(field_get:proto.dota.ProtoFlattenedSerializer_t.serializer_name_sym)
  return serializer_name_sym_;
}
inline void ProtoFlattenedSerializer_t::set_serializer_name_sym(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  serializer_name_sym_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ProtoFlattenedSerializer_t.serializer_name_sym)
}

// optional int32 serializer_version = 2;
inline bool ProtoFlattenedSerializer_t::has_serializer_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoFlattenedSerializer_t::clear_serializer_version() {
  serializer_version_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ProtoFlattenedSerializer_t::serializer_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.ProtoFlattenedSerializer_t.serializer_version)
  return serializer_version_;
}
inline void ProtoFlattenedSerializer_t::set_serializer_version(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  serializer_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.ProtoFlattenedSerializer_t.serializer_version)
}

// repeated int32 fields_index = 3;
inline int ProtoFlattenedSerializer_t::fields_index_size() const {
  return fields_index_.size();
}
inline void ProtoFlattenedSerializer_t::clear_fields_index() {
  fields_index_.Clear();
}
inline ::google::protobuf::int32 ProtoFlattenedSerializer_t::fields_index(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.ProtoFlattenedSerializer_t.fields_index)
  return fields_index_.Get(index);
}
inline void ProtoFlattenedSerializer_t::set_fields_index(int index, ::google::protobuf::int32 value) {
  fields_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.ProtoFlattenedSerializer_t.fields_index)
}
inline void ProtoFlattenedSerializer_t::add_fields_index(::google::protobuf::int32 value) {
  fields_index_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.ProtoFlattenedSerializer_t.fields_index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtoFlattenedSerializer_t::fields_index() const {
  // @@protoc_insertion_point(field_list:proto.dota.ProtoFlattenedSerializer_t.fields_index)
  return fields_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtoFlattenedSerializer_t::mutable_fields_index() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.ProtoFlattenedSerializer_t.fields_index)
  return &fields_index_;
}

// -------------------------------------------------------------------

// CSVCMsg_FlattenedSerializer

// repeated .proto.dota.ProtoFlattenedSerializer_t serializers = 1;
inline int CSVCMsg_FlattenedSerializer::serializers_size() const {
  return serializers_.size();
}
inline void CSVCMsg_FlattenedSerializer::clear_serializers() {
  serializers_.Clear();
}
inline ::proto::dota::ProtoFlattenedSerializer_t* CSVCMsg_FlattenedSerializer::mutable_serializers(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_FlattenedSerializer.serializers)
  return serializers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::ProtoFlattenedSerializer_t >*
CSVCMsg_FlattenedSerializer::mutable_serializers() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CSVCMsg_FlattenedSerializer.serializers)
  return &serializers_;
}
inline const ::proto::dota::ProtoFlattenedSerializer_t& CSVCMsg_FlattenedSerializer::serializers(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_FlattenedSerializer.serializers)
  return serializers_.Get(index);
}
inline ::proto::dota::ProtoFlattenedSerializer_t* CSVCMsg_FlattenedSerializer::add_serializers() {
  // @@protoc_insertion_point(field_add:proto.dota.CSVCMsg_FlattenedSerializer.serializers)
  return serializers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::ProtoFlattenedSerializer_t >&
CSVCMsg_FlattenedSerializer::serializers() const {
  // @@protoc_insertion_point(field_list:proto.dota.CSVCMsg_FlattenedSerializer.serializers)
  return serializers_;
}

// repeated string symbols = 2;
inline int CSVCMsg_FlattenedSerializer::symbols_size() const {
  return symbols_.size();
}
inline void CSVCMsg_FlattenedSerializer::clear_symbols() {
  symbols_.Clear();
}
inline const ::std::string& CSVCMsg_FlattenedSerializer::symbols(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_FlattenedSerializer.symbols)
  return symbols_.Get(index);
}
inline ::std::string* CSVCMsg_FlattenedSerializer::mutable_symbols(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_FlattenedSerializer.symbols)
  return symbols_.Mutable(index);
}
inline void CSVCMsg_FlattenedSerializer::set_symbols(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_FlattenedSerializer.symbols)
  symbols_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CSVCMsg_FlattenedSerializer::set_symbols(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_FlattenedSerializer.symbols)
  symbols_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CSVCMsg_FlattenedSerializer::set_symbols(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  symbols_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CSVCMsg_FlattenedSerializer.symbols)
}
inline void CSVCMsg_FlattenedSerializer::set_symbols(int index, const char* value, size_t size) {
  symbols_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSVCMsg_FlattenedSerializer.symbols)
}
inline ::std::string* CSVCMsg_FlattenedSerializer::add_symbols() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CSVCMsg_FlattenedSerializer.symbols)
  return symbols_.Add();
}
inline void CSVCMsg_FlattenedSerializer::add_symbols(const ::std::string& value) {
  symbols_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CSVCMsg_FlattenedSerializer.symbols)
}
#if LANG_CXX11
inline void CSVCMsg_FlattenedSerializer::add_symbols(::std::string&& value) {
  symbols_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CSVCMsg_FlattenedSerializer.symbols)
}
#endif
inline void CSVCMsg_FlattenedSerializer::add_symbols(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  symbols_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CSVCMsg_FlattenedSerializer.symbols)
}
inline void CSVCMsg_FlattenedSerializer::add_symbols(const char* value, size_t size) {
  symbols_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CSVCMsg_FlattenedSerializer.symbols)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CSVCMsg_FlattenedSerializer::symbols() const {
  // @@protoc_insertion_point(field_list:proto.dota.CSVCMsg_FlattenedSerializer.symbols)
  return symbols_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CSVCMsg_FlattenedSerializer::mutable_symbols() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CSVCMsg_FlattenedSerializer.symbols)
  return &symbols_;
}

// repeated .proto.dota.ProtoFlattenedSerializerField_t fields = 3;
inline int CSVCMsg_FlattenedSerializer::fields_size() const {
  return fields_.size();
}
inline void CSVCMsg_FlattenedSerializer::clear_fields() {
  fields_.Clear();
}
inline ::proto::dota::ProtoFlattenedSerializerField_t* CSVCMsg_FlattenedSerializer::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CSVCMsg_FlattenedSerializer.fields)
  return fields_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::ProtoFlattenedSerializerField_t >*
CSVCMsg_FlattenedSerializer::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CSVCMsg_FlattenedSerializer.fields)
  return &fields_;
}
inline const ::proto::dota::ProtoFlattenedSerializerField_t& CSVCMsg_FlattenedSerializer::fields(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_FlattenedSerializer.fields)
  return fields_.Get(index);
}
inline ::proto::dota::ProtoFlattenedSerializerField_t* CSVCMsg_FlattenedSerializer::add_fields() {
  // @@protoc_insertion_point(field_add:proto.dota.CSVCMsg_FlattenedSerializer.fields)
  return fields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::ProtoFlattenedSerializerField_t >&
CSVCMsg_FlattenedSerializer::fields() const {
  // @@protoc_insertion_point(field_list:proto.dota.CSVCMsg_FlattenedSerializer.fields)
  return fields_;
}

// -------------------------------------------------------------------

// CSVCMsg_StopSound

// optional fixed32 guid = 1;
inline bool CSVCMsg_StopSound::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_StopSound::clear_guid() {
  guid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CSVCMsg_StopSound::guid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSVCMsg_StopSound.guid)
  return guid_;
}
inline void CSVCMsg_StopSound::set_guid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSVCMsg_StopSound.guid)
}

// -------------------------------------------------------------------

// CBidirMsg_RebroadcastGameEvent

// optional bool posttoserver = 1;
inline bool CBidirMsg_RebroadcastGameEvent::has_posttoserver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBidirMsg_RebroadcastGameEvent::clear_posttoserver() {
  posttoserver_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CBidirMsg_RebroadcastGameEvent::posttoserver() const {
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RebroadcastGameEvent.posttoserver)
  return posttoserver_;
}
inline void CBidirMsg_RebroadcastGameEvent::set_posttoserver(bool value) {
  _has_bits_[0] |= 0x00000001u;
  posttoserver_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CBidirMsg_RebroadcastGameEvent.posttoserver)
}

// optional int32 buftype = 2;
inline bool CBidirMsg_RebroadcastGameEvent::has_buftype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CBidirMsg_RebroadcastGameEvent::clear_buftype() {
  buftype_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CBidirMsg_RebroadcastGameEvent::buftype() const {
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RebroadcastGameEvent.buftype)
  return buftype_;
}
inline void CBidirMsg_RebroadcastGameEvent::set_buftype(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  buftype_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CBidirMsg_RebroadcastGameEvent.buftype)
}

// optional uint32 clientbitcount = 3;
inline bool CBidirMsg_RebroadcastGameEvent::has_clientbitcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CBidirMsg_RebroadcastGameEvent::clear_clientbitcount() {
  clientbitcount_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CBidirMsg_RebroadcastGameEvent::clientbitcount() const {
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RebroadcastGameEvent.clientbitcount)
  return clientbitcount_;
}
inline void CBidirMsg_RebroadcastGameEvent::set_clientbitcount(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  clientbitcount_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CBidirMsg_RebroadcastGameEvent.clientbitcount)
}

// optional uint64 receivingclients = 4;
inline bool CBidirMsg_RebroadcastGameEvent::has_receivingclients() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CBidirMsg_RebroadcastGameEvent::clear_receivingclients() {
  receivingclients_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CBidirMsg_RebroadcastGameEvent::receivingclients() const {
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RebroadcastGameEvent.receivingclients)
  return receivingclients_;
}
inline void CBidirMsg_RebroadcastGameEvent::set_receivingclients(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  receivingclients_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CBidirMsg_RebroadcastGameEvent.receivingclients)
}

// -------------------------------------------------------------------

// CBidirMsg_RebroadcastSource

// optional int32 eventsource = 1;
inline bool CBidirMsg_RebroadcastSource::has_eventsource() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBidirMsg_RebroadcastSource::clear_eventsource() {
  eventsource_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CBidirMsg_RebroadcastSource::eventsource() const {
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RebroadcastSource.eventsource)
  return eventsource_;
}
inline void CBidirMsg_RebroadcastSource::set_eventsource(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eventsource_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CBidirMsg_RebroadcastSource.eventsource)
}

// -------------------------------------------------------------------

// SerializedNetAddress_t

// required bytes serializedAddress = 1;
inline bool SerializedNetAddress_t::has_serializedaddress() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SerializedNetAddress_t::clear_serializedaddress() {
  serializedaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SerializedNetAddress_t::serializedaddress() const {
  // @@protoc_insertion_point(field_get:proto.dota.SerializedNetAddress_t.serializedAddress)
  return serializedaddress_.GetNoArena();
}
inline void SerializedNetAddress_t::set_serializedaddress(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  serializedaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.SerializedNetAddress_t.serializedAddress)
}
#if LANG_CXX11
inline void SerializedNetAddress_t::set_serializedaddress(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  serializedaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.SerializedNetAddress_t.serializedAddress)
}
#endif
inline void SerializedNetAddress_t::set_serializedaddress(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  serializedaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.SerializedNetAddress_t.serializedAddress)
}
inline void SerializedNetAddress_t::set_serializedaddress(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  serializedaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.SerializedNetAddress_t.serializedAddress)
}
inline ::std::string* SerializedNetAddress_t::mutable_serializedaddress() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.SerializedNetAddress_t.serializedAddress)
  return serializedaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SerializedNetAddress_t::release_serializedaddress() {
  // @@protoc_insertion_point(field_release:proto.dota.SerializedNetAddress_t.serializedAddress)
  if (!has_serializedaddress()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return serializedaddress_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SerializedNetAddress_t::set_allocated_serializedaddress(::std::string* serializedaddress) {
  if (serializedaddress != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  serializedaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serializedaddress);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.SerializedNetAddress_t.serializedAddress)
}

// -------------------------------------------------------------------

// CBidirMsg_RelayInfo

// required .proto.dota.CBidirMsg_RelayInfo.Operation_t operation = 1 [default = RIO_REQUEST_RELAY];
inline bool CBidirMsg_RelayInfo::has_operation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CBidirMsg_RelayInfo::clear_operation() {
  operation_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::proto::dota::CBidirMsg_RelayInfo_Operation_t CBidirMsg_RelayInfo::operation() const {
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RelayInfo.operation)
  return static_cast< ::proto::dota::CBidirMsg_RelayInfo_Operation_t >(operation_);
}
inline void CBidirMsg_RelayInfo::set_operation(::proto::dota::CBidirMsg_RelayInfo_Operation_t value) {
  assert(::proto::dota::CBidirMsg_RelayInfo_Operation_t_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  operation_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CBidirMsg_RelayInfo.operation)
}

// optional .proto.dota.SerializedNetAddress_t serializedTargetAddress = 2;
inline bool CBidirMsg_RelayInfo::has_serializedtargetaddress() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBidirMsg_RelayInfo::clear_serializedtargetaddress() {
  if (serializedtargetaddress_ != nullptr) serializedtargetaddress_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::SerializedNetAddress_t& CBidirMsg_RelayInfo::serializedtargetaddress() const {
  const ::proto::dota::SerializedNetAddress_t* p = serializedtargetaddress_;
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RelayInfo.serializedTargetAddress)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::SerializedNetAddress_t*>(
      &::proto::dota::_SerializedNetAddress_t_default_instance_);
}
inline ::proto::dota::SerializedNetAddress_t* CBidirMsg_RelayInfo::release_serializedtargetaddress() {
  // @@protoc_insertion_point(field_release:proto.dota.CBidirMsg_RelayInfo.serializedTargetAddress)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::SerializedNetAddress_t* temp = serializedtargetaddress_;
  serializedtargetaddress_ = nullptr;
  return temp;
}
inline ::proto::dota::SerializedNetAddress_t* CBidirMsg_RelayInfo::mutable_serializedtargetaddress() {
  _has_bits_[0] |= 0x00000001u;
  if (serializedtargetaddress_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::SerializedNetAddress_t>(GetArenaNoVirtual());
    serializedtargetaddress_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CBidirMsg_RelayInfo.serializedTargetAddress)
  return serializedtargetaddress_;
}
inline void CBidirMsg_RelayInfo::set_allocated_serializedtargetaddress(::proto::dota::SerializedNetAddress_t* serializedtargetaddress) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete serializedtargetaddress_;
  }
  if (serializedtargetaddress) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      serializedtargetaddress = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, serializedtargetaddress, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  serializedtargetaddress_ = serializedtargetaddress;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CBidirMsg_RelayInfo.serializedTargetAddress)
}

// optional uint32 additionalHops = 3;
inline bool CBidirMsg_RelayInfo::has_additionalhops() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CBidirMsg_RelayInfo::clear_additionalhops() {
  additionalhops_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CBidirMsg_RelayInfo::additionalhops() const {
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RelayInfo.additionalHops)
  return additionalhops_;
}
inline void CBidirMsg_RelayInfo::set_additionalhops(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  additionalhops_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CBidirMsg_RelayInfo.additionalHops)
}

// -------------------------------------------------------------------

// SignedPayload_t

// required bytes payloadData = 1;
inline bool SignedPayload_t::has_payloaddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignedPayload_t::clear_payloaddata() {
  payloaddata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SignedPayload_t::payloaddata() const {
  // @@protoc_insertion_point(field_get:proto.dota.SignedPayload_t.payloadData)
  return payloaddata_.GetNoArena();
}
inline void SignedPayload_t::set_payloaddata(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  payloaddata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.SignedPayload_t.payloadData)
}
#if LANG_CXX11
inline void SignedPayload_t::set_payloaddata(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  payloaddata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.SignedPayload_t.payloadData)
}
#endif
inline void SignedPayload_t::set_payloaddata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  payloaddata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.SignedPayload_t.payloadData)
}
inline void SignedPayload_t::set_payloaddata(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  payloaddata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.SignedPayload_t.payloadData)
}
inline ::std::string* SignedPayload_t::mutable_payloaddata() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.SignedPayload_t.payloadData)
  return payloaddata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignedPayload_t::release_payloaddata() {
  // @@protoc_insertion_point(field_release:proto.dota.SignedPayload_t.payloadData)
  if (!has_payloaddata()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return payloaddata_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignedPayload_t::set_allocated_payloaddata(::std::string* payloaddata) {
  if (payloaddata != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  payloaddata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payloaddata);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.SignedPayload_t.payloadData)
}

// required uint32 signature = 2;
inline bool SignedPayload_t::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SignedPayload_t::clear_signature() {
  signature_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 SignedPayload_t::signature() const {
  // @@protoc_insertion_point(field_get:proto.dota.SignedPayload_t.signature)
  return signature_;
}
inline void SignedPayload_t::set_signature(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  signature_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.SignedPayload_t.signature)
}

// required bool bPayloadEncrypted = 3;
inline bool SignedPayload_t::has_bpayloadencrypted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SignedPayload_t::clear_bpayloadencrypted() {
  bpayloadencrypted_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool SignedPayload_t::bpayloadencrypted() const {
  // @@protoc_insertion_point(field_get:proto.dota.SignedPayload_t.bPayloadEncrypted)
  return bpayloadencrypted_;
}
inline void SignedPayload_t::set_bpayloadencrypted(bool value) {
  _has_bits_[0] |= 0x00000004u;
  bpayloadencrypted_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.SignedPayload_t.bPayloadEncrypted)
}

// -------------------------------------------------------------------

// CBidirMsg_RelayPacket_SignedDestinationAddress_t

// required .proto.dota.SerializedNetAddress_t serializedAddr = 1;
inline bool CBidirMsg_RelayPacket_SignedDestinationAddress_t::has_serializedaddr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::clear_serializedaddr() {
  if (serializedaddr_ != nullptr) serializedaddr_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::SerializedNetAddress_t& CBidirMsg_RelayPacket_SignedDestinationAddress_t::serializedaddr() const {
  const ::proto::dota::SerializedNetAddress_t* p = serializedaddr_;
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.serializedAddr)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::SerializedNetAddress_t*>(
      &::proto::dota::_SerializedNetAddress_t_default_instance_);
}
inline ::proto::dota::SerializedNetAddress_t* CBidirMsg_RelayPacket_SignedDestinationAddress_t::release_serializedaddr() {
  // @@protoc_insertion_point(field_release:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.serializedAddr)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::SerializedNetAddress_t* temp = serializedaddr_;
  serializedaddr_ = nullptr;
  return temp;
}
inline ::proto::dota::SerializedNetAddress_t* CBidirMsg_RelayPacket_SignedDestinationAddress_t::mutable_serializedaddr() {
  _has_bits_[0] |= 0x00000002u;
  if (serializedaddr_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::SerializedNetAddress_t>(GetArenaNoVirtual());
    serializedaddr_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.serializedAddr)
  return serializedaddr_;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_allocated_serializedaddr(::proto::dota::SerializedNetAddress_t* serializedaddr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete serializedaddr_;
  }
  if (serializedaddr) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      serializedaddr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, serializedaddr, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  serializedaddr_ = serializedaddr;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.serializedAddr)
}

// required uint32 signature = 2;
inline bool CBidirMsg_RelayPacket_SignedDestinationAddress_t::has_signature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::clear_signature() {
  signature_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CBidirMsg_RelayPacket_SignedDestinationAddress_t::signature() const {
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.signature)
  return signature_;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_signature(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  signature_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.signature)
}

// optional bytes encryptedPayloadKey = 3;
inline bool CBidirMsg_RelayPacket_SignedDestinationAddress_t::has_encryptedpayloadkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::clear_encryptedpayloadkey() {
  encryptedpayloadkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CBidirMsg_RelayPacket_SignedDestinationAddress_t::encryptedpayloadkey() const {
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
  return encryptedpayloadkey_.GetNoArena();
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_encryptedpayloadkey(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  encryptedpayloadkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
}
#if LANG_CXX11
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_encryptedpayloadkey(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  encryptedpayloadkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
}
#endif
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_encryptedpayloadkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  encryptedpayloadkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_encryptedpayloadkey(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  encryptedpayloadkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
}
inline ::std::string* CBidirMsg_RelayPacket_SignedDestinationAddress_t::mutable_encryptedpayloadkey() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
  return encryptedpayloadkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CBidirMsg_RelayPacket_SignedDestinationAddress_t::release_encryptedpayloadkey() {
  // @@protoc_insertion_point(field_release:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
  if (!has_encryptedpayloadkey()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return encryptedpayloadkey_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_allocated_encryptedpayloadkey(::std::string* encryptedpayloadkey) {
  if (encryptedpayloadkey != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  encryptedpayloadkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encryptedpayloadkey);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
}

// -------------------------------------------------------------------

// CBidirMsg_RelayPacket

// required uint32 prevhopcount = 1;
inline bool CBidirMsg_RelayPacket::has_prevhopcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CBidirMsg_RelayPacket::clear_prevhopcount() {
  prevhopcount_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CBidirMsg_RelayPacket::prevhopcount() const {
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RelayPacket.prevhopcount)
  return prevhopcount_;
}
inline void CBidirMsg_RelayPacket::set_prevhopcount(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  prevhopcount_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CBidirMsg_RelayPacket.prevhopcount)
}

// required .proto.dota.SerializedNetAddress_t originalSender = 2;
inline bool CBidirMsg_RelayPacket::has_originalsender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBidirMsg_RelayPacket::clear_originalsender() {
  if (originalsender_ != nullptr) originalsender_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::SerializedNetAddress_t& CBidirMsg_RelayPacket::originalsender() const {
  const ::proto::dota::SerializedNetAddress_t* p = originalsender_;
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RelayPacket.originalSender)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::SerializedNetAddress_t*>(
      &::proto::dota::_SerializedNetAddress_t_default_instance_);
}
inline ::proto::dota::SerializedNetAddress_t* CBidirMsg_RelayPacket::release_originalsender() {
  // @@protoc_insertion_point(field_release:proto.dota.CBidirMsg_RelayPacket.originalSender)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::SerializedNetAddress_t* temp = originalsender_;
  originalsender_ = nullptr;
  return temp;
}
inline ::proto::dota::SerializedNetAddress_t* CBidirMsg_RelayPacket::mutable_originalsender() {
  _has_bits_[0] |= 0x00000001u;
  if (originalsender_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::SerializedNetAddress_t>(GetArenaNoVirtual());
    originalsender_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CBidirMsg_RelayPacket.originalSender)
  return originalsender_;
}
inline void CBidirMsg_RelayPacket::set_allocated_originalsender(::proto::dota::SerializedNetAddress_t* originalsender) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete originalsender_;
  }
  if (originalsender) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      originalsender = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, originalsender, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  originalsender_ = originalsender;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CBidirMsg_RelayPacket.originalSender)
}

// required .proto.dota.SignedPayload_t signedPayload = 3;
inline bool CBidirMsg_RelayPacket::has_signedpayload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CBidirMsg_RelayPacket::clear_signedpayload() {
  if (signedpayload_ != nullptr) signedpayload_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::dota::SignedPayload_t& CBidirMsg_RelayPacket::signedpayload() const {
  const ::proto::dota::SignedPayload_t* p = signedpayload_;
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RelayPacket.signedPayload)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::SignedPayload_t*>(
      &::proto::dota::_SignedPayload_t_default_instance_);
}
inline ::proto::dota::SignedPayload_t* CBidirMsg_RelayPacket::release_signedpayload() {
  // @@protoc_insertion_point(field_release:proto.dota.CBidirMsg_RelayPacket.signedPayload)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::dota::SignedPayload_t* temp = signedpayload_;
  signedpayload_ = nullptr;
  return temp;
}
inline ::proto::dota::SignedPayload_t* CBidirMsg_RelayPacket::mutable_signedpayload() {
  _has_bits_[0] |= 0x00000002u;
  if (signedpayload_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::SignedPayload_t>(GetArenaNoVirtual());
    signedpayload_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CBidirMsg_RelayPacket.signedPayload)
  return signedpayload_;
}
inline void CBidirMsg_RelayPacket::set_allocated_signedpayload(::proto::dota::SignedPayload_t* signedpayload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete signedpayload_;
  }
  if (signedpayload) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      signedpayload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, signedpayload, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  signedpayload_ = signedpayload;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CBidirMsg_RelayPacket.signedPayload)
}

// repeated .proto.dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t recipientList = 4;
inline int CBidirMsg_RelayPacket::recipientlist_size() const {
  return recipientlist_.size();
}
inline void CBidirMsg_RelayPacket::clear_recipientlist() {
  recipientlist_.Clear();
}
inline ::proto::dota::CBidirMsg_RelayPacket_SignedDestinationAddress_t* CBidirMsg_RelayPacket::mutable_recipientlist(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CBidirMsg_RelayPacket.recipientList)
  return recipientlist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CBidirMsg_RelayPacket_SignedDestinationAddress_t >*
CBidirMsg_RelayPacket::mutable_recipientlist() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CBidirMsg_RelayPacket.recipientList)
  return &recipientlist_;
}
inline const ::proto::dota::CBidirMsg_RelayPacket_SignedDestinationAddress_t& CBidirMsg_RelayPacket::recipientlist(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CBidirMsg_RelayPacket.recipientList)
  return recipientlist_.Get(index);
}
inline ::proto::dota::CBidirMsg_RelayPacket_SignedDestinationAddress_t* CBidirMsg_RelayPacket::add_recipientlist() {
  // @@protoc_insertion_point(field_add:proto.dota.CBidirMsg_RelayPacket.recipientList)
  return recipientlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CBidirMsg_RelayPacket_SignedDestinationAddress_t >&
CBidirMsg_RelayPacket::recipientlist() const {
  // @@protoc_insertion_point(field_list:proto.dota.CBidirMsg_RelayPacket.recipientList)
  return recipientlist_;
}

// -------------------------------------------------------------------

// CMsgServerNetworkStats_Port

// optional int32 port = 1;
inline bool CMsgServerNetworkStats_Port::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerNetworkStats_Port::clear_port() {
  port_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CMsgServerNetworkStats_Port::port() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.Port.port)
  return port_;
}
inline void CMsgServerNetworkStats_Port::set_port(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  port_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.Port.port)
}

// optional string name = 2;
inline bool CMsgServerNetworkStats_Port::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerNetworkStats_Port::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgServerNetworkStats_Port::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.Port.name)
  return name_.GetNoArena();
}
inline void CMsgServerNetworkStats_Port::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.Port.name)
}
#if LANG_CXX11
inline void CMsgServerNetworkStats_Port::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgServerNetworkStats.Port.name)
}
#endif
inline void CMsgServerNetworkStats_Port::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgServerNetworkStats.Port.name)
}
inline void CMsgServerNetworkStats_Port::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgServerNetworkStats.Port.name)
}
inline ::std::string* CMsgServerNetworkStats_Port::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerNetworkStats.Port.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgServerNetworkStats_Port::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgServerNetworkStats.Port.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgServerNetworkStats_Port::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgServerNetworkStats.Port.name)
}

// -------------------------------------------------------------------

// CMsgServerNetworkStats_Player

// optional uint64 steamid = 1;
inline bool CMsgServerNetworkStats_Player::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerNetworkStats_Player::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgServerNetworkStats_Player::steamid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.Player.steamid)
  return steamid_;
}
inline void CMsgServerNetworkStats_Player::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.Player.steamid)
}

// optional string remote_addr = 2;
inline bool CMsgServerNetworkStats_Player::has_remote_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerNetworkStats_Player::clear_remote_addr() {
  remote_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgServerNetworkStats_Player::remote_addr() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.Player.remote_addr)
  return remote_addr_.GetNoArena();
}
inline void CMsgServerNetworkStats_Player::set_remote_addr(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.Player.remote_addr)
}
#if LANG_CXX11
inline void CMsgServerNetworkStats_Player::set_remote_addr(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  remote_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgServerNetworkStats.Player.remote_addr)
}
#endif
inline void CMsgServerNetworkStats_Player::set_remote_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgServerNetworkStats.Player.remote_addr)
}
inline void CMsgServerNetworkStats_Player::set_remote_addr(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  remote_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgServerNetworkStats.Player.remote_addr)
}
inline ::std::string* CMsgServerNetworkStats_Player::mutable_remote_addr() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerNetworkStats.Player.remote_addr)
  return remote_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgServerNetworkStats_Player::release_remote_addr() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgServerNetworkStats.Player.remote_addr)
  if (!has_remote_addr()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return remote_addr_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgServerNetworkStats_Player::set_allocated_remote_addr(::std::string* remote_addr) {
  if (remote_addr != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  remote_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remote_addr);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgServerNetworkStats.Player.remote_addr)
}

// optional int32 ping_stddev_ms = 3;
inline bool CMsgServerNetworkStats_Player::has_ping_stddev_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerNetworkStats_Player::clear_ping_stddev_ms() {
  ping_stddev_ms_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CMsgServerNetworkStats_Player::ping_stddev_ms() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.Player.ping_stddev_ms)
  return ping_stddev_ms_;
}
inline void CMsgServerNetworkStats_Player::set_ping_stddev_ms(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  ping_stddev_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.Player.ping_stddev_ms)
}

// optional int32 ping_avg_ms = 4;
inline bool CMsgServerNetworkStats_Player::has_ping_avg_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerNetworkStats_Player::clear_ping_avg_ms() {
  ping_avg_ms_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CMsgServerNetworkStats_Player::ping_avg_ms() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.Player.ping_avg_ms)
  return ping_avg_ms_;
}
inline void CMsgServerNetworkStats_Player::set_ping_avg_ms(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ping_avg_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.Player.ping_avg_ms)
}

// optional float packet_loss_pct = 5;
inline bool CMsgServerNetworkStats_Player::has_packet_loss_pct() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgServerNetworkStats_Player::clear_packet_loss_pct() {
  packet_loss_pct_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CMsgServerNetworkStats_Player::packet_loss_pct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.Player.packet_loss_pct)
  return packet_loss_pct_;
}
inline void CMsgServerNetworkStats_Player::set_packet_loss_pct(float value) {
  _has_bits_[0] |= 0x00000010u;
  packet_loss_pct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.Player.packet_loss_pct)
}

// optional bool is_bot = 6;
inline bool CMsgServerNetworkStats_Player::has_is_bot() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgServerNetworkStats_Player::clear_is_bot() {
  is_bot_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CMsgServerNetworkStats_Player::is_bot() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.Player.is_bot)
  return is_bot_;
}
inline void CMsgServerNetworkStats_Player::set_is_bot(bool value) {
  _has_bits_[0] |= 0x00000020u;
  is_bot_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.Player.is_bot)
}

// -------------------------------------------------------------------

// CMsgServerNetworkStats

// optional bool dedicated = 1;
inline bool CMsgServerNetworkStats::has_dedicated() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerNetworkStats::clear_dedicated() {
  dedicated_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgServerNetworkStats::dedicated() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.dedicated)
  return dedicated_;
}
inline void CMsgServerNetworkStats::set_dedicated(bool value) {
  _has_bits_[0] |= 0x00000001u;
  dedicated_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.dedicated)
}

// optional int32 cpu_usage = 2;
inline bool CMsgServerNetworkStats::has_cpu_usage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerNetworkStats::clear_cpu_usage() {
  cpu_usage_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CMsgServerNetworkStats::cpu_usage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.cpu_usage)
  return cpu_usage_;
}
inline void CMsgServerNetworkStats::set_cpu_usage(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  cpu_usage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.cpu_usage)
}

// optional int32 memory_used_mb = 3;
inline bool CMsgServerNetworkStats::has_memory_used_mb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerNetworkStats::clear_memory_used_mb() {
  memory_used_mb_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CMsgServerNetworkStats::memory_used_mb() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.memory_used_mb)
  return memory_used_mb_;
}
inline void CMsgServerNetworkStats::set_memory_used_mb(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  memory_used_mb_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.memory_used_mb)
}

// optional int32 memory_free_mb = 4;
inline bool CMsgServerNetworkStats::has_memory_free_mb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerNetworkStats::clear_memory_free_mb() {
  memory_free_mb_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CMsgServerNetworkStats::memory_free_mb() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.memory_free_mb)
  return memory_free_mb_;
}
inline void CMsgServerNetworkStats::set_memory_free_mb(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  memory_free_mb_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.memory_free_mb)
}

// optional int32 uptime = 5;
inline bool CMsgServerNetworkStats::has_uptime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgServerNetworkStats::clear_uptime() {
  uptime_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 CMsgServerNetworkStats::uptime() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.uptime)
  return uptime_;
}
inline void CMsgServerNetworkStats::set_uptime(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  uptime_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.uptime)
}

// optional int32 spawn_count = 6;
inline bool CMsgServerNetworkStats::has_spawn_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgServerNetworkStats::clear_spawn_count() {
  spawn_count_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 CMsgServerNetworkStats::spawn_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.spawn_count)
  return spawn_count_;
}
inline void CMsgServerNetworkStats::set_spawn_count(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  spawn_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.spawn_count)
}

// optional int32 num_clients = 8;
inline bool CMsgServerNetworkStats::has_num_clients() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgServerNetworkStats::clear_num_clients() {
  num_clients_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::int32 CMsgServerNetworkStats::num_clients() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.num_clients)
  return num_clients_;
}
inline void CMsgServerNetworkStats::set_num_clients(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  num_clients_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.num_clients)
}

// optional int32 num_bots = 9;
inline bool CMsgServerNetworkStats::has_num_bots() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgServerNetworkStats::clear_num_bots() {
  num_bots_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::int32 CMsgServerNetworkStats::num_bots() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.num_bots)
  return num_bots_;
}
inline void CMsgServerNetworkStats::set_num_bots(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  num_bots_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.num_bots)
}

// optional int32 num_spectators = 10;
inline bool CMsgServerNetworkStats::has_num_spectators() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgServerNetworkStats::clear_num_spectators() {
  num_spectators_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::int32 CMsgServerNetworkStats::num_spectators() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.num_spectators)
  return num_spectators_;
}
inline void CMsgServerNetworkStats::set_num_spectators(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  num_spectators_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.num_spectators)
}

// optional int32 num_tv_relays = 11;
inline bool CMsgServerNetworkStats::has_num_tv_relays() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgServerNetworkStats::clear_num_tv_relays() {
  num_tv_relays_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::int32 CMsgServerNetworkStats::num_tv_relays() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.num_tv_relays)
  return num_tv_relays_;
}
inline void CMsgServerNetworkStats::set_num_tv_relays(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  num_tv_relays_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.num_tv_relays)
}

// optional float fps = 12;
inline bool CMsgServerNetworkStats::has_fps() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgServerNetworkStats::clear_fps() {
  fps_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline float CMsgServerNetworkStats::fps() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.fps)
  return fps_;
}
inline void CMsgServerNetworkStats::set_fps(float value) {
  _has_bits_[0] |= 0x00000400u;
  fps_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.fps)
}

// repeated .proto.dota.CMsgServerNetworkStats.Port ports = 17;
inline int CMsgServerNetworkStats::ports_size() const {
  return ports_.size();
}
inline void CMsgServerNetworkStats::clear_ports() {
  ports_.Clear();
}
inline ::proto::dota::CMsgServerNetworkStats_Port* CMsgServerNetworkStats::mutable_ports(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerNetworkStats.ports)
  return ports_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerNetworkStats_Port >*
CMsgServerNetworkStats::mutable_ports() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerNetworkStats.ports)
  return &ports_;
}
inline const ::proto::dota::CMsgServerNetworkStats_Port& CMsgServerNetworkStats::ports(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.ports)
  return ports_.Get(index);
}
inline ::proto::dota::CMsgServerNetworkStats_Port* CMsgServerNetworkStats::add_ports() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerNetworkStats.ports)
  return ports_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerNetworkStats_Port >&
CMsgServerNetworkStats::ports() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerNetworkStats.ports)
  return ports_;
}

// optional float avg_latency_out = 18;
inline bool CMsgServerNetworkStats::has_avg_latency_out() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgServerNetworkStats::clear_avg_latency_out() {
  avg_latency_out_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline float CMsgServerNetworkStats::avg_latency_out() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.avg_latency_out)
  return avg_latency_out_;
}
inline void CMsgServerNetworkStats::set_avg_latency_out(float value) {
  _has_bits_[0] |= 0x00000800u;
  avg_latency_out_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.avg_latency_out)
}

// optional float avg_latency_in = 19;
inline bool CMsgServerNetworkStats::has_avg_latency_in() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgServerNetworkStats::clear_avg_latency_in() {
  avg_latency_in_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline float CMsgServerNetworkStats::avg_latency_in() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.avg_latency_in)
  return avg_latency_in_;
}
inline void CMsgServerNetworkStats::set_avg_latency_in(float value) {
  _has_bits_[0] |= 0x00001000u;
  avg_latency_in_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.avg_latency_in)
}

// optional float avg_packets_out = 20;
inline bool CMsgServerNetworkStats::has_avg_packets_out() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgServerNetworkStats::clear_avg_packets_out() {
  avg_packets_out_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline float CMsgServerNetworkStats::avg_packets_out() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.avg_packets_out)
  return avg_packets_out_;
}
inline void CMsgServerNetworkStats::set_avg_packets_out(float value) {
  _has_bits_[0] |= 0x00002000u;
  avg_packets_out_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.avg_packets_out)
}

// optional float avg_packets_in = 21;
inline bool CMsgServerNetworkStats::has_avg_packets_in() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgServerNetworkStats::clear_avg_packets_in() {
  avg_packets_in_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline float CMsgServerNetworkStats::avg_packets_in() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.avg_packets_in)
  return avg_packets_in_;
}
inline void CMsgServerNetworkStats::set_avg_packets_in(float value) {
  _has_bits_[0] |= 0x00004000u;
  avg_packets_in_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.avg_packets_in)
}

// optional float avg_loss_out = 22;
inline bool CMsgServerNetworkStats::has_avg_loss_out() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgServerNetworkStats::clear_avg_loss_out() {
  avg_loss_out_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline float CMsgServerNetworkStats::avg_loss_out() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.avg_loss_out)
  return avg_loss_out_;
}
inline void CMsgServerNetworkStats::set_avg_loss_out(float value) {
  _has_bits_[0] |= 0x00008000u;
  avg_loss_out_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.avg_loss_out)
}

// optional float avg_loss_in = 23;
inline bool CMsgServerNetworkStats::has_avg_loss_in() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgServerNetworkStats::clear_avg_loss_in() {
  avg_loss_in_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline float CMsgServerNetworkStats::avg_loss_in() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.avg_loss_in)
  return avg_loss_in_;
}
inline void CMsgServerNetworkStats::set_avg_loss_in(float value) {
  _has_bits_[0] |= 0x00010000u;
  avg_loss_in_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.avg_loss_in)
}

// optional float avg_data_out = 24;
inline bool CMsgServerNetworkStats::has_avg_data_out() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgServerNetworkStats::clear_avg_data_out() {
  avg_data_out_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline float CMsgServerNetworkStats::avg_data_out() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.avg_data_out)
  return avg_data_out_;
}
inline void CMsgServerNetworkStats::set_avg_data_out(float value) {
  _has_bits_[0] |= 0x00020000u;
  avg_data_out_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.avg_data_out)
}

// optional float avg_data_in = 25;
inline bool CMsgServerNetworkStats::has_avg_data_in() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgServerNetworkStats::clear_avg_data_in() {
  avg_data_in_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline float CMsgServerNetworkStats::avg_data_in() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.avg_data_in)
  return avg_data_in_;
}
inline void CMsgServerNetworkStats::set_avg_data_in(float value) {
  _has_bits_[0] |= 0x00080000u;
  avg_data_in_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.avg_data_in)
}

// optional uint64 total_data_in = 26;
inline bool CMsgServerNetworkStats::has_total_data_in() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgServerNetworkStats::clear_total_data_in() {
  total_data_in_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::uint64 CMsgServerNetworkStats::total_data_in() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.total_data_in)
  return total_data_in_;
}
inline void CMsgServerNetworkStats::set_total_data_in(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00040000u;
  total_data_in_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.total_data_in)
}

// optional uint64 total_packets_in = 27;
inline bool CMsgServerNetworkStats::has_total_packets_in() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgServerNetworkStats::clear_total_packets_in() {
  total_packets_in_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00100000u;
}
inline ::google::protobuf::uint64 CMsgServerNetworkStats::total_packets_in() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.total_packets_in)
  return total_packets_in_;
}
inline void CMsgServerNetworkStats::set_total_packets_in(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00100000u;
  total_packets_in_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.total_packets_in)
}

// optional uint64 total_data_out = 28;
inline bool CMsgServerNetworkStats::has_total_data_out() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgServerNetworkStats::clear_total_data_out() {
  total_data_out_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00200000u;
}
inline ::google::protobuf::uint64 CMsgServerNetworkStats::total_data_out() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.total_data_out)
  return total_data_out_;
}
inline void CMsgServerNetworkStats::set_total_data_out(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00200000u;
  total_data_out_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.total_data_out)
}

// optional uint64 total_packets_out = 29;
inline bool CMsgServerNetworkStats::has_total_packets_out() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgServerNetworkStats::clear_total_packets_out() {
  total_packets_out_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00400000u;
}
inline ::google::protobuf::uint64 CMsgServerNetworkStats::total_packets_out() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.total_packets_out)
  return total_packets_out_;
}
inline void CMsgServerNetworkStats::set_total_packets_out(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00400000u;
  total_packets_out_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerNetworkStats.total_packets_out)
}

// repeated .proto.dota.CMsgServerNetworkStats.Player players = 30;
inline int CMsgServerNetworkStats::players_size() const {
  return players_.size();
}
inline void CMsgServerNetworkStats::clear_players() {
  players_.Clear();
}
inline ::proto::dota::CMsgServerNetworkStats_Player* CMsgServerNetworkStats::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerNetworkStats.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerNetworkStats_Player >*
CMsgServerNetworkStats::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerNetworkStats.players)
  return &players_;
}
inline const ::proto::dota::CMsgServerNetworkStats_Player& CMsgServerNetworkStats::players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerNetworkStats.players)
  return players_.Get(index);
}
inline ::proto::dota::CMsgServerNetworkStats_Player* CMsgServerNetworkStats::add_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerNetworkStats.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgServerNetworkStats_Player >&
CMsgServerNetworkStats::players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerNetworkStats.players)
  return players_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::dota::CBidirMsg_RelayInfo_Operation_t> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CBidirMsg_RelayInfo_Operation_t>() {
  return ::proto::dota::CBidirMsg_RelayInfo_Operation_t_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CLC_Messages> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CLC_Messages>() {
  return ::proto::dota::CLC_Messages_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::SVC_Messages> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::SVC_Messages>() {
  return ::proto::dota::SVC_Messages_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::VoiceDataFormat_t> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::VoiceDataFormat_t>() {
  return ::proto::dota::VoiceDataFormat_t_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::RequestPause_t> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::RequestPause_t>() {
  return ::proto::dota::RequestPause_t_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::PrefetchType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::PrefetchType>() {
  return ::proto::dota::PrefetchType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::ESplitScreenMessageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::ESplitScreenMessageType>() {
  return ::proto::dota::ESplitScreenMessageType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EQueryCvarValueStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EQueryCvarValueStatus>() {
  return ::proto::dota::EQueryCvarValueStatus_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::DIALOG_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DIALOG_TYPE>() {
  return ::proto::dota::DIALOG_TYPE_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::SVC_Messages_LowFrequency> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::SVC_Messages_LowFrequency>() {
  return ::proto::dota::SVC_Messages_LowFrequency_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::Bidirectional_Messages> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::Bidirectional_Messages>() {
  return ::proto::dota::Bidirectional_Messages_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::Bidirectional_Messages_LowFrequency> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::Bidirectional_Messages_LowFrequency>() {
  return ::proto::dota::Bidirectional_Messages_LowFrequency_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_netmessages_2eproto
