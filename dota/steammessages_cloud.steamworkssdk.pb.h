// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_cloud.steamworkssdk.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5fcloud_2esteamworkssdk_2eproto
#define PROTOBUF_INCLUDED_steammessages_5fcloud_2esteamworkssdk_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamworkssdk.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fcloud_2esteamworkssdk_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_5fcloud_2esteamworkssdk_2eproto();
namespace proto {
namespace dota {
class CCloud_Delete_Request;
class CCloud_Delete_RequestDefaultTypeInternal;
extern CCloud_Delete_RequestDefaultTypeInternal _CCloud_Delete_Request_default_instance_;
class CCloud_Delete_Response;
class CCloud_Delete_ResponseDefaultTypeInternal;
extern CCloud_Delete_ResponseDefaultTypeInternal _CCloud_Delete_Response_default_instance_;
class CCloud_EnumerateUserFiles_Request;
class CCloud_EnumerateUserFiles_RequestDefaultTypeInternal;
extern CCloud_EnumerateUserFiles_RequestDefaultTypeInternal _CCloud_EnumerateUserFiles_Request_default_instance_;
class CCloud_EnumerateUserFiles_Response;
class CCloud_EnumerateUserFiles_ResponseDefaultTypeInternal;
extern CCloud_EnumerateUserFiles_ResponseDefaultTypeInternal _CCloud_EnumerateUserFiles_Response_default_instance_;
class CCloud_GetFileDetails_Request;
class CCloud_GetFileDetails_RequestDefaultTypeInternal;
extern CCloud_GetFileDetails_RequestDefaultTypeInternal _CCloud_GetFileDetails_Request_default_instance_;
class CCloud_GetFileDetails_Response;
class CCloud_GetFileDetails_ResponseDefaultTypeInternal;
extern CCloud_GetFileDetails_ResponseDefaultTypeInternal _CCloud_GetFileDetails_Response_default_instance_;
class CCloud_GetUploadServerInfo_Request;
class CCloud_GetUploadServerInfo_RequestDefaultTypeInternal;
extern CCloud_GetUploadServerInfo_RequestDefaultTypeInternal _CCloud_GetUploadServerInfo_Request_default_instance_;
class CCloud_GetUploadServerInfo_Response;
class CCloud_GetUploadServerInfo_ResponseDefaultTypeInternal;
extern CCloud_GetUploadServerInfo_ResponseDefaultTypeInternal _CCloud_GetUploadServerInfo_Response_default_instance_;
class CCloud_UserFile;
class CCloud_UserFileDefaultTypeInternal;
extern CCloud_UserFileDefaultTypeInternal _CCloud_UserFile_default_instance_;
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::dota::CCloud_Delete_Request* Arena::CreateMaybeMessage<::proto::dota::CCloud_Delete_Request>(Arena*);
template<> ::proto::dota::CCloud_Delete_Response* Arena::CreateMaybeMessage<::proto::dota::CCloud_Delete_Response>(Arena*);
template<> ::proto::dota::CCloud_EnumerateUserFiles_Request* Arena::CreateMaybeMessage<::proto::dota::CCloud_EnumerateUserFiles_Request>(Arena*);
template<> ::proto::dota::CCloud_EnumerateUserFiles_Response* Arena::CreateMaybeMessage<::proto::dota::CCloud_EnumerateUserFiles_Response>(Arena*);
template<> ::proto::dota::CCloud_GetFileDetails_Request* Arena::CreateMaybeMessage<::proto::dota::CCloud_GetFileDetails_Request>(Arena*);
template<> ::proto::dota::CCloud_GetFileDetails_Response* Arena::CreateMaybeMessage<::proto::dota::CCloud_GetFileDetails_Response>(Arena*);
template<> ::proto::dota::CCloud_GetUploadServerInfo_Request* Arena::CreateMaybeMessage<::proto::dota::CCloud_GetUploadServerInfo_Request>(Arena*);
template<> ::proto::dota::CCloud_GetUploadServerInfo_Response* Arena::CreateMaybeMessage<::proto::dota::CCloud_GetUploadServerInfo_Response>(Arena*);
template<> ::proto::dota::CCloud_UserFile* Arena::CreateMaybeMessage<::proto::dota::CCloud_UserFile>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace dota {

// ===================================================================

class CCloud_GetUploadServerInfo_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCloud_GetUploadServerInfo_Request) */ {
 public:
  CCloud_GetUploadServerInfo_Request();
  virtual ~CCloud_GetUploadServerInfo_Request();

  CCloud_GetUploadServerInfo_Request(const CCloud_GetUploadServerInfo_Request& from);

  inline CCloud_GetUploadServerInfo_Request& operator=(const CCloud_GetUploadServerInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCloud_GetUploadServerInfo_Request(CCloud_GetUploadServerInfo_Request&& from) noexcept
    : CCloud_GetUploadServerInfo_Request() {
    *this = ::std::move(from);
  }

  inline CCloud_GetUploadServerInfo_Request& operator=(CCloud_GetUploadServerInfo_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCloud_GetUploadServerInfo_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCloud_GetUploadServerInfo_Request* internal_default_instance() {
    return reinterpret_cast<const CCloud_GetUploadServerInfo_Request*>(
               &_CCloud_GetUploadServerInfo_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CCloud_GetUploadServerInfo_Request* other);
  friend void swap(CCloud_GetUploadServerInfo_Request& a, CCloud_GetUploadServerInfo_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCloud_GetUploadServerInfo_Request* New() const final {
    return CreateMaybeMessage<CCloud_GetUploadServerInfo_Request>(nullptr);
  }

  CCloud_GetUploadServerInfo_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCloud_GetUploadServerInfo_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCloud_GetUploadServerInfo_Request& from);
  void MergeFrom(const CCloud_GetUploadServerInfo_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCloud_GetUploadServerInfo_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1 [(.proto.dota.description) = "App ID to which a file will be uploaded to."];
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCloud_GetUploadServerInfo_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CCloud_GetUploadServerInfo_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCloud_GetUploadServerInfo_Response) */ {
 public:
  CCloud_GetUploadServerInfo_Response();
  virtual ~CCloud_GetUploadServerInfo_Response();

  CCloud_GetUploadServerInfo_Response(const CCloud_GetUploadServerInfo_Response& from);

  inline CCloud_GetUploadServerInfo_Response& operator=(const CCloud_GetUploadServerInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCloud_GetUploadServerInfo_Response(CCloud_GetUploadServerInfo_Response&& from) noexcept
    : CCloud_GetUploadServerInfo_Response() {
    *this = ::std::move(from);
  }

  inline CCloud_GetUploadServerInfo_Response& operator=(CCloud_GetUploadServerInfo_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCloud_GetUploadServerInfo_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCloud_GetUploadServerInfo_Response* internal_default_instance() {
    return reinterpret_cast<const CCloud_GetUploadServerInfo_Response*>(
               &_CCloud_GetUploadServerInfo_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CCloud_GetUploadServerInfo_Response* other);
  friend void swap(CCloud_GetUploadServerInfo_Response& a, CCloud_GetUploadServerInfo_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCloud_GetUploadServerInfo_Response* New() const final {
    return CreateMaybeMessage<CCloud_GetUploadServerInfo_Response>(nullptr);
  }

  CCloud_GetUploadServerInfo_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCloud_GetUploadServerInfo_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCloud_GetUploadServerInfo_Response& from);
  void MergeFrom(const CCloud_GetUploadServerInfo_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCloud_GetUploadServerInfo_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string server_url = 1;
  bool has_server_url() const;
  void clear_server_url();
  static const int kServerUrlFieldNumber = 1;
  const ::std::string& server_url() const;
  void set_server_url(const ::std::string& value);
  #if LANG_CXX11
  void set_server_url(::std::string&& value);
  #endif
  void set_server_url(const char* value);
  void set_server_url(const char* value, size_t size);
  ::std::string* mutable_server_url();
  ::std::string* release_server_url();
  void set_allocated_server_url(::std::string* server_url);

  // @@protoc_insertion_point(class_scope:proto.dota.CCloud_GetUploadServerInfo_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr server_url_;
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CCloud_GetFileDetails_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCloud_GetFileDetails_Request) */ {
 public:
  CCloud_GetFileDetails_Request();
  virtual ~CCloud_GetFileDetails_Request();

  CCloud_GetFileDetails_Request(const CCloud_GetFileDetails_Request& from);

  inline CCloud_GetFileDetails_Request& operator=(const CCloud_GetFileDetails_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCloud_GetFileDetails_Request(CCloud_GetFileDetails_Request&& from) noexcept
    : CCloud_GetFileDetails_Request() {
    *this = ::std::move(from);
  }

  inline CCloud_GetFileDetails_Request& operator=(CCloud_GetFileDetails_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCloud_GetFileDetails_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCloud_GetFileDetails_Request* internal_default_instance() {
    return reinterpret_cast<const CCloud_GetFileDetails_Request*>(
               &_CCloud_GetFileDetails_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CCloud_GetFileDetails_Request* other);
  friend void swap(CCloud_GetFileDetails_Request& a, CCloud_GetFileDetails_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCloud_GetFileDetails_Request* New() const final {
    return CreateMaybeMessage<CCloud_GetFileDetails_Request>(nullptr);
  }

  CCloud_GetFileDetails_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCloud_GetFileDetails_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCloud_GetFileDetails_Request& from);
  void MergeFrom(const CCloud_GetFileDetails_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCloud_GetFileDetails_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ugcid = 1 [(.proto.dota.description) = "ID of the Cloud file to get details for."];
  bool has_ugcid() const;
  void clear_ugcid();
  static const int kUgcidFieldNumber = 1;
  ::google::protobuf::uint64 ugcid() const;
  void set_ugcid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2 [(.proto.dota.description) = "App ID the file belongs to."];
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 2;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCloud_GetFileDetails_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 ugcid_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CCloud_UserFile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCloud_UserFile) */ {
 public:
  CCloud_UserFile();
  virtual ~CCloud_UserFile();

  CCloud_UserFile(const CCloud_UserFile& from);

  inline CCloud_UserFile& operator=(const CCloud_UserFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCloud_UserFile(CCloud_UserFile&& from) noexcept
    : CCloud_UserFile() {
    *this = ::std::move(from);
  }

  inline CCloud_UserFile& operator=(CCloud_UserFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCloud_UserFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCloud_UserFile* internal_default_instance() {
    return reinterpret_cast<const CCloud_UserFile*>(
               &_CCloud_UserFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CCloud_UserFile* other);
  friend void swap(CCloud_UserFile& a, CCloud_UserFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCloud_UserFile* New() const final {
    return CreateMaybeMessage<CCloud_UserFile>(nullptr);
  }

  CCloud_UserFile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCloud_UserFile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCloud_UserFile& from);
  void MergeFrom(const CCloud_UserFile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCloud_UserFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 3;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 3;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional string url = 6;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 6;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional uint64 ugcid = 2;
  bool has_ugcid() const;
  void clear_ugcid();
  static const int kUgcidFieldNumber = 2;
  ::google::protobuf::uint64 ugcid() const;
  void set_ugcid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint32 file_size = 5;
  bool has_file_size() const;
  void clear_file_size();
  static const int kFileSizeFieldNumber = 5;
  ::google::protobuf::uint32 file_size() const;
  void set_file_size(::google::protobuf::uint32 value);

  // optional uint64 timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // optional fixed64 steamid_creator = 7;
  bool has_steamid_creator() const;
  void clear_steamid_creator();
  static const int kSteamidCreatorFieldNumber = 7;
  ::google::protobuf::uint64 steamid_creator() const;
  void set_steamid_creator(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCloud_UserFile)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint64 ugcid_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 file_size_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint64 steamid_creator_;
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CCloud_GetFileDetails_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCloud_GetFileDetails_Response) */ {
 public:
  CCloud_GetFileDetails_Response();
  virtual ~CCloud_GetFileDetails_Response();

  CCloud_GetFileDetails_Response(const CCloud_GetFileDetails_Response& from);

  inline CCloud_GetFileDetails_Response& operator=(const CCloud_GetFileDetails_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCloud_GetFileDetails_Response(CCloud_GetFileDetails_Response&& from) noexcept
    : CCloud_GetFileDetails_Response() {
    *this = ::std::move(from);
  }

  inline CCloud_GetFileDetails_Response& operator=(CCloud_GetFileDetails_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCloud_GetFileDetails_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCloud_GetFileDetails_Response* internal_default_instance() {
    return reinterpret_cast<const CCloud_GetFileDetails_Response*>(
               &_CCloud_GetFileDetails_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CCloud_GetFileDetails_Response* other);
  friend void swap(CCloud_GetFileDetails_Response& a, CCloud_GetFileDetails_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCloud_GetFileDetails_Response* New() const final {
    return CreateMaybeMessage<CCloud_GetFileDetails_Response>(nullptr);
  }

  CCloud_GetFileDetails_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCloud_GetFileDetails_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCloud_GetFileDetails_Response& from);
  void MergeFrom(const CCloud_GetFileDetails_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCloud_GetFileDetails_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CCloud_UserFile details = 1;
  bool has_details() const;
  void clear_details();
  static const int kDetailsFieldNumber = 1;
  const ::proto::dota::CCloud_UserFile& details() const;
  ::proto::dota::CCloud_UserFile* release_details();
  ::proto::dota::CCloud_UserFile* mutable_details();
  void set_allocated_details(::proto::dota::CCloud_UserFile* details);

  // @@protoc_insertion_point(class_scope:proto.dota.CCloud_GetFileDetails_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::dota::CCloud_UserFile* details_;
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CCloud_EnumerateUserFiles_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCloud_EnumerateUserFiles_Request) */ {
 public:
  CCloud_EnumerateUserFiles_Request();
  virtual ~CCloud_EnumerateUserFiles_Request();

  CCloud_EnumerateUserFiles_Request(const CCloud_EnumerateUserFiles_Request& from);

  inline CCloud_EnumerateUserFiles_Request& operator=(const CCloud_EnumerateUserFiles_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCloud_EnumerateUserFiles_Request(CCloud_EnumerateUserFiles_Request&& from) noexcept
    : CCloud_EnumerateUserFiles_Request() {
    *this = ::std::move(from);
  }

  inline CCloud_EnumerateUserFiles_Request& operator=(CCloud_EnumerateUserFiles_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCloud_EnumerateUserFiles_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCloud_EnumerateUserFiles_Request* internal_default_instance() {
    return reinterpret_cast<const CCloud_EnumerateUserFiles_Request*>(
               &_CCloud_EnumerateUserFiles_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CCloud_EnumerateUserFiles_Request* other);
  friend void swap(CCloud_EnumerateUserFiles_Request& a, CCloud_EnumerateUserFiles_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCloud_EnumerateUserFiles_Request* New() const final {
    return CreateMaybeMessage<CCloud_EnumerateUserFiles_Request>(nullptr);
  }

  CCloud_EnumerateUserFiles_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCloud_EnumerateUserFiles_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCloud_EnumerateUserFiles_Request& from);
  void MergeFrom(const CCloud_EnumerateUserFiles_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCloud_EnumerateUserFiles_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1 [(.proto.dota.description) = "App ID to enumerate the files of."];
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional bool extended_details = 2 [(.proto.dota.description) = "(Optional) Get extended details back on the files found. Defaults to only returned the app Id and UGC Id of the files found."];
  bool has_extended_details() const;
  void clear_extended_details();
  static const int kExtendedDetailsFieldNumber = 2;
  bool extended_details() const;
  void set_extended_details(bool value);

  // optional uint32 count = 3 [(.proto.dota.description) = "(Optional) Maximum number of results to return on this call. Defaults to a maximum of 500 files returned."];
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional uint32 start_index = 4 [(.proto.dota.description) = "(Optional) Starting index to begin enumeration at. Defaults to the beginning of the list."];
  bool has_start_index() const;
  void clear_start_index();
  static const int kStartIndexFieldNumber = 4;
  ::google::protobuf::uint32 start_index() const;
  void set_start_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCloud_EnumerateUserFiles_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 appid_;
  bool extended_details_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 start_index_;
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CCloud_EnumerateUserFiles_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCloud_EnumerateUserFiles_Response) */ {
 public:
  CCloud_EnumerateUserFiles_Response();
  virtual ~CCloud_EnumerateUserFiles_Response();

  CCloud_EnumerateUserFiles_Response(const CCloud_EnumerateUserFiles_Response& from);

  inline CCloud_EnumerateUserFiles_Response& operator=(const CCloud_EnumerateUserFiles_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCloud_EnumerateUserFiles_Response(CCloud_EnumerateUserFiles_Response&& from) noexcept
    : CCloud_EnumerateUserFiles_Response() {
    *this = ::std::move(from);
  }

  inline CCloud_EnumerateUserFiles_Response& operator=(CCloud_EnumerateUserFiles_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCloud_EnumerateUserFiles_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCloud_EnumerateUserFiles_Response* internal_default_instance() {
    return reinterpret_cast<const CCloud_EnumerateUserFiles_Response*>(
               &_CCloud_EnumerateUserFiles_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CCloud_EnumerateUserFiles_Response* other);
  friend void swap(CCloud_EnumerateUserFiles_Response& a, CCloud_EnumerateUserFiles_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCloud_EnumerateUserFiles_Response* New() const final {
    return CreateMaybeMessage<CCloud_EnumerateUserFiles_Response>(nullptr);
  }

  CCloud_EnumerateUserFiles_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCloud_EnumerateUserFiles_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCloud_EnumerateUserFiles_Response& from);
  void MergeFrom(const CCloud_EnumerateUserFiles_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCloud_EnumerateUserFiles_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CCloud_UserFile files = 1;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 1;
  ::proto::dota::CCloud_UserFile* mutable_files(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CCloud_UserFile >*
      mutable_files();
  const ::proto::dota::CCloud_UserFile& files(int index) const;
  ::proto::dota::CCloud_UserFile* add_files();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CCloud_UserFile >&
      files() const;

  // optional uint32 total_files = 2;
  bool has_total_files() const;
  void clear_total_files();
  static const int kTotalFilesFieldNumber = 2;
  ::google::protobuf::uint32 total_files() const;
  void set_total_files(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCloud_EnumerateUserFiles_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CCloud_UserFile > files_;
  ::google::protobuf::uint32 total_files_;
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CCloud_Delete_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCloud_Delete_Request) */ {
 public:
  CCloud_Delete_Request();
  virtual ~CCloud_Delete_Request();

  CCloud_Delete_Request(const CCloud_Delete_Request& from);

  inline CCloud_Delete_Request& operator=(const CCloud_Delete_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCloud_Delete_Request(CCloud_Delete_Request&& from) noexcept
    : CCloud_Delete_Request() {
    *this = ::std::move(from);
  }

  inline CCloud_Delete_Request& operator=(CCloud_Delete_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCloud_Delete_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCloud_Delete_Request* internal_default_instance() {
    return reinterpret_cast<const CCloud_Delete_Request*>(
               &_CCloud_Delete_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CCloud_Delete_Request* other);
  friend void swap(CCloud_Delete_Request& a, CCloud_Delete_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCloud_Delete_Request* New() const final {
    return CreateMaybeMessage<CCloud_Delete_Request>(nullptr);
  }

  CCloud_Delete_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCloud_Delete_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCloud_Delete_Request& from);
  void MergeFrom(const CCloud_Delete_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCloud_Delete_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 1;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional uint32 appid = 2 [(.proto.dota.description) = "App ID the file belongs to."];
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 2;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CCloud_Delete_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CCloud_Delete_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CCloud_Delete_Response) */ {
 public:
  CCloud_Delete_Response();
  virtual ~CCloud_Delete_Response();

  CCloud_Delete_Response(const CCloud_Delete_Response& from);

  inline CCloud_Delete_Response& operator=(const CCloud_Delete_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCloud_Delete_Response(CCloud_Delete_Response&& from) noexcept
    : CCloud_Delete_Response() {
    *this = ::std::move(from);
  }

  inline CCloud_Delete_Response& operator=(CCloud_Delete_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCloud_Delete_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCloud_Delete_Response* internal_default_instance() {
    return reinterpret_cast<const CCloud_Delete_Response*>(
               &_CCloud_Delete_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CCloud_Delete_Response* other);
  friend void swap(CCloud_Delete_Response& a, CCloud_Delete_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCloud_Delete_Response* New() const final {
    return CreateMaybeMessage<CCloud_Delete_Response>(nullptr);
  }

  CCloud_Delete_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCloud_Delete_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCloud_Delete_Response& from);
  void MergeFrom(const CCloud_Delete_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCloud_Delete_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CCloud_Delete_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CCloud_GetUploadServerInfo_Request

// optional uint32 appid = 1 [(.proto.dota.description) = "App ID to which a file will be uploaded to."];
inline bool CCloud_GetUploadServerInfo_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_GetUploadServerInfo_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CCloud_GetUploadServerInfo_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_GetUploadServerInfo_Request.appid)
  return appid_;
}
inline void CCloud_GetUploadServerInfo_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_GetUploadServerInfo_Request.appid)
}

// -------------------------------------------------------------------

// CCloud_GetUploadServerInfo_Response

// optional string server_url = 1;
inline bool CCloud_GetUploadServerInfo_Response::has_server_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_GetUploadServerInfo_Response::clear_server_url() {
  server_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCloud_GetUploadServerInfo_Response::server_url() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_GetUploadServerInfo_Response.server_url)
  return server_url_.GetNoArena();
}
inline void CCloud_GetUploadServerInfo_Response::set_server_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  server_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_GetUploadServerInfo_Response.server_url)
}
#if LANG_CXX11
inline void CCloud_GetUploadServerInfo_Response::set_server_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  server_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CCloud_GetUploadServerInfo_Response.server_url)
}
#endif
inline void CCloud_GetUploadServerInfo_Response::set_server_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  server_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CCloud_GetUploadServerInfo_Response.server_url)
}
inline void CCloud_GetUploadServerInfo_Response::set_server_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  server_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CCloud_GetUploadServerInfo_Response.server_url)
}
inline ::std::string* CCloud_GetUploadServerInfo_Response::mutable_server_url() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CCloud_GetUploadServerInfo_Response.server_url)
  return server_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCloud_GetUploadServerInfo_Response::release_server_url() {
  // @@protoc_insertion_point(field_release:proto.dota.CCloud_GetUploadServerInfo_Response.server_url)
  if (!has_server_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return server_url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCloud_GetUploadServerInfo_Response::set_allocated_server_url(::std::string* server_url) {
  if (server_url != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  server_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCloud_GetUploadServerInfo_Response.server_url)
}

// -------------------------------------------------------------------

// CCloud_GetFileDetails_Request

// optional uint64 ugcid = 1 [(.proto.dota.description) = "ID of the Cloud file to get details for."];
inline bool CCloud_GetFileDetails_Request::has_ugcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_GetFileDetails_Request::clear_ugcid() {
  ugcid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CCloud_GetFileDetails_Request::ugcid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_GetFileDetails_Request.ugcid)
  return ugcid_;
}
inline void CCloud_GetFileDetails_Request::set_ugcid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  ugcid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_GetFileDetails_Request.ugcid)
}

// optional uint32 appid = 2 [(.proto.dota.description) = "App ID the file belongs to."];
inline bool CCloud_GetFileDetails_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCloud_GetFileDetails_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CCloud_GetFileDetails_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_GetFileDetails_Request.appid)
  return appid_;
}
inline void CCloud_GetFileDetails_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_GetFileDetails_Request.appid)
}

// -------------------------------------------------------------------

// CCloud_UserFile

// optional uint32 appid = 1;
inline bool CCloud_UserFile::has_appid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCloud_UserFile::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CCloud_UserFile::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_UserFile.appid)
  return appid_;
}
inline void CCloud_UserFile::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_UserFile.appid)
}

// optional uint64 ugcid = 2;
inline bool CCloud_UserFile::has_ugcid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCloud_UserFile::clear_ugcid() {
  ugcid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CCloud_UserFile::ugcid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_UserFile.ugcid)
  return ugcid_;
}
inline void CCloud_UserFile::set_ugcid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  ugcid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_UserFile.ugcid)
}

// optional string filename = 3;
inline bool CCloud_UserFile::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_UserFile::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCloud_UserFile::filename() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_UserFile.filename)
  return filename_.GetNoArena();
}
inline void CCloud_UserFile::set_filename(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_UserFile.filename)
}
#if LANG_CXX11
inline void CCloud_UserFile::set_filename(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CCloud_UserFile.filename)
}
#endif
inline void CCloud_UserFile::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CCloud_UserFile.filename)
}
inline void CCloud_UserFile::set_filename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CCloud_UserFile.filename)
}
inline ::std::string* CCloud_UserFile::mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CCloud_UserFile.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCloud_UserFile::release_filename() {
  // @@protoc_insertion_point(field_release:proto.dota.CCloud_UserFile.filename)
  if (!has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCloud_UserFile::set_allocated_filename(::std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCloud_UserFile.filename)
}

// optional uint64 timestamp = 4;
inline bool CCloud_UserFile::has_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCloud_UserFile::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint64 CCloud_UserFile::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_UserFile.timestamp)
  return timestamp_;
}
inline void CCloud_UserFile::set_timestamp(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_UserFile.timestamp)
}

// optional uint32 file_size = 5;
inline bool CCloud_UserFile::has_file_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCloud_UserFile::clear_file_size() {
  file_size_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CCloud_UserFile::file_size() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_UserFile.file_size)
  return file_size_;
}
inline void CCloud_UserFile::set_file_size(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  file_size_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_UserFile.file_size)
}

// optional string url = 6;
inline bool CCloud_UserFile::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCloud_UserFile::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CCloud_UserFile::url() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_UserFile.url)
  return url_.GetNoArena();
}
inline void CCloud_UserFile::set_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_UserFile.url)
}
#if LANG_CXX11
inline void CCloud_UserFile::set_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CCloud_UserFile.url)
}
#endif
inline void CCloud_UserFile::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CCloud_UserFile.url)
}
inline void CCloud_UserFile::set_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CCloud_UserFile.url)
}
inline ::std::string* CCloud_UserFile::mutable_url() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CCloud_UserFile.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCloud_UserFile::release_url() {
  // @@protoc_insertion_point(field_release:proto.dota.CCloud_UserFile.url)
  if (!has_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCloud_UserFile::set_allocated_url(::std::string* url) {
  if (url != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCloud_UserFile.url)
}

// optional fixed64 steamid_creator = 7;
inline bool CCloud_UserFile::has_steamid_creator() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCloud_UserFile::clear_steamid_creator() {
  steamid_creator_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint64 CCloud_UserFile::steamid_creator() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_UserFile.steamid_creator)
  return steamid_creator_;
}
inline void CCloud_UserFile::set_steamid_creator(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  steamid_creator_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_UserFile.steamid_creator)
}

// -------------------------------------------------------------------

// CCloud_GetFileDetails_Response

// optional .proto.dota.CCloud_UserFile details = 1;
inline bool CCloud_GetFileDetails_Response::has_details() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_GetFileDetails_Response::clear_details() {
  if (details_ != nullptr) details_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::dota::CCloud_UserFile& CCloud_GetFileDetails_Response::details() const {
  const ::proto::dota::CCloud_UserFile* p = details_;
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_GetFileDetails_Response.details)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CCloud_UserFile*>(
      &::proto::dota::_CCloud_UserFile_default_instance_);
}
inline ::proto::dota::CCloud_UserFile* CCloud_GetFileDetails_Response::release_details() {
  // @@protoc_insertion_point(field_release:proto.dota.CCloud_GetFileDetails_Response.details)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::dota::CCloud_UserFile* temp = details_;
  details_ = nullptr;
  return temp;
}
inline ::proto::dota::CCloud_UserFile* CCloud_GetFileDetails_Response::mutable_details() {
  _has_bits_[0] |= 0x00000001u;
  if (details_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CCloud_UserFile>(GetArenaNoVirtual());
    details_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CCloud_GetFileDetails_Response.details)
  return details_;
}
inline void CCloud_GetFileDetails_Response::set_allocated_details(::proto::dota::CCloud_UserFile* details) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete details_;
  }
  if (details) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      details = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, details, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  details_ = details;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCloud_GetFileDetails_Response.details)
}

// -------------------------------------------------------------------

// CCloud_EnumerateUserFiles_Request

// optional uint32 appid = 1 [(.proto.dota.description) = "App ID to enumerate the files of."];
inline bool CCloud_EnumerateUserFiles_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_EnumerateUserFiles_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CCloud_EnumerateUserFiles_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_EnumerateUserFiles_Request.appid)
  return appid_;
}
inline void CCloud_EnumerateUserFiles_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_EnumerateUserFiles_Request.appid)
}

// optional bool extended_details = 2 [(.proto.dota.description) = "(Optional) Get extended details back on the files found. Defaults to only returned the app Id and UGC Id of the files found."];
inline bool CCloud_EnumerateUserFiles_Request::has_extended_details() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCloud_EnumerateUserFiles_Request::clear_extended_details() {
  extended_details_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CCloud_EnumerateUserFiles_Request::extended_details() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_EnumerateUserFiles_Request.extended_details)
  return extended_details_;
}
inline void CCloud_EnumerateUserFiles_Request::set_extended_details(bool value) {
  _has_bits_[0] |= 0x00000002u;
  extended_details_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_EnumerateUserFiles_Request.extended_details)
}

// optional uint32 count = 3 [(.proto.dota.description) = "(Optional) Maximum number of results to return on this call. Defaults to a maximum of 500 files returned."];
inline bool CCloud_EnumerateUserFiles_Request::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCloud_EnumerateUserFiles_Request::clear_count() {
  count_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CCloud_EnumerateUserFiles_Request::count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_EnumerateUserFiles_Request.count)
  return count_;
}
inline void CCloud_EnumerateUserFiles_Request::set_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_EnumerateUserFiles_Request.count)
}

// optional uint32 start_index = 4 [(.proto.dota.description) = "(Optional) Starting index to begin enumeration at. Defaults to the beginning of the list."];
inline bool CCloud_EnumerateUserFiles_Request::has_start_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCloud_EnumerateUserFiles_Request::clear_start_index() {
  start_index_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CCloud_EnumerateUserFiles_Request::start_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_EnumerateUserFiles_Request.start_index)
  return start_index_;
}
inline void CCloud_EnumerateUserFiles_Request::set_start_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  start_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_EnumerateUserFiles_Request.start_index)
}

// -------------------------------------------------------------------

// CCloud_EnumerateUserFiles_Response

// repeated .proto.dota.CCloud_UserFile files = 1;
inline int CCloud_EnumerateUserFiles_Response::files_size() const {
  return files_.size();
}
inline void CCloud_EnumerateUserFiles_Response::clear_files() {
  files_.Clear();
}
inline ::proto::dota::CCloud_UserFile* CCloud_EnumerateUserFiles_Response::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CCloud_EnumerateUserFiles_Response.files)
  return files_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CCloud_UserFile >*
CCloud_EnumerateUserFiles_Response::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CCloud_EnumerateUserFiles_Response.files)
  return &files_;
}
inline const ::proto::dota::CCloud_UserFile& CCloud_EnumerateUserFiles_Response::files(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_EnumerateUserFiles_Response.files)
  return files_.Get(index);
}
inline ::proto::dota::CCloud_UserFile* CCloud_EnumerateUserFiles_Response::add_files() {
  // @@protoc_insertion_point(field_add:proto.dota.CCloud_EnumerateUserFiles_Response.files)
  return files_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CCloud_UserFile >&
CCloud_EnumerateUserFiles_Response::files() const {
  // @@protoc_insertion_point(field_list:proto.dota.CCloud_EnumerateUserFiles_Response.files)
  return files_;
}

// optional uint32 total_files = 2;
inline bool CCloud_EnumerateUserFiles_Response::has_total_files() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_EnumerateUserFiles_Response::clear_total_files() {
  total_files_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CCloud_EnumerateUserFiles_Response::total_files() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_EnumerateUserFiles_Response.total_files)
  return total_files_;
}
inline void CCloud_EnumerateUserFiles_Response::set_total_files(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  total_files_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_EnumerateUserFiles_Response.total_files)
}

// -------------------------------------------------------------------

// CCloud_Delete_Request

// optional string filename = 1;
inline bool CCloud_Delete_Request::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCloud_Delete_Request::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCloud_Delete_Request::filename() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_Delete_Request.filename)
  return filename_.GetNoArena();
}
inline void CCloud_Delete_Request::set_filename(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_Delete_Request.filename)
}
#if LANG_CXX11
inline void CCloud_Delete_Request::set_filename(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CCloud_Delete_Request.filename)
}
#endif
inline void CCloud_Delete_Request::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CCloud_Delete_Request.filename)
}
inline void CCloud_Delete_Request::set_filename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CCloud_Delete_Request.filename)
}
inline ::std::string* CCloud_Delete_Request::mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CCloud_Delete_Request.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCloud_Delete_Request::release_filename() {
  // @@protoc_insertion_point(field_release:proto.dota.CCloud_Delete_Request.filename)
  if (!has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCloud_Delete_Request::set_allocated_filename(::std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CCloud_Delete_Request.filename)
}

// optional uint32 appid = 2 [(.proto.dota.description) = "App ID the file belongs to."];
inline bool CCloud_Delete_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCloud_Delete_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CCloud_Delete_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CCloud_Delete_Request.appid)
  return appid_;
}
inline void CCloud_Delete_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CCloud_Delete_Request.appid)
}

// -------------------------------------------------------------------

// CCloud_Delete_Response

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_5fcloud_2esteamworkssdk_2eproto
