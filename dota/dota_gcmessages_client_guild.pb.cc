// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client_guild.proto

#include "dota_gcmessages_client_guild.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_dota_5fgcmessages_5fclient_5fguild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAAccountGuildMembershipsSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dota_5fgcmessages_5fclient_5fguild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAAccountGuildMembershipsSDO_Membership_dota_5fgcmessages_5fclient_5fguild_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dota_5fgcmessages_5fclient_5fguild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildAuditSDO_Entry_dota_5fgcmessages_5fclient_5fguild_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dota_5fgcmessages_5fclient_5fguild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildOpenPartyRefresh_OpenParty_dota_5fgcmessages_5fclient_5fguild_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dota_5fgcmessages_5fclient_5fguild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dota_5fgcmessages_5fclient_5fguild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildSDO_Member_dota_5fgcmessages_5fclient_5fguild_2eproto;
namespace proto {
namespace dota {
class CMsgDOTAGuildSDO_MemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildSDO_Member> _instance;
} _CMsgDOTAGuildSDO_Member_default_instance_;
class CMsgDOTAGuildSDO_InvitationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildSDO_Invitation> _instance;
} _CMsgDOTAGuildSDO_Invitation_default_instance_;
class CMsgDOTAGuildSDODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildSDO> _instance;
} _CMsgDOTAGuildSDO_default_instance_;
class CMsgDOTAGuildAuditSDO_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildAuditSDO_Entry> _instance;
} _CMsgDOTAGuildAuditSDO_Entry_default_instance_;
class CMsgDOTAGuildAuditSDODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildAuditSDO> _instance;
} _CMsgDOTAGuildAuditSDO_default_instance_;
class CMsgDOTAAccountGuildMembershipsSDO_MembershipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAAccountGuildMembershipsSDO_Membership> _instance;
} _CMsgDOTAAccountGuildMembershipsSDO_Membership_default_instance_;
class CMsgDOTAAccountGuildMembershipsSDO_InvitationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAAccountGuildMembershipsSDO_Invitation> _instance;
} _CMsgDOTAAccountGuildMembershipsSDO_Invitation_default_instance_;
class CMsgDOTAAccountGuildMembershipsSDODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAAccountGuildMembershipsSDO> _instance;
} _CMsgDOTAAccountGuildMembershipsSDO_default_instance_;
class CMsgDOTAGuildCreateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildCreateRequest> _instance;
} _CMsgDOTAGuildCreateRequest_default_instance_;
class CMsgDOTAGuildCreateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildCreateResponse> _instance;
} _CMsgDOTAGuildCreateResponse_default_instance_;
class CMsgDOTAGuildSetAccountRoleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildSetAccountRoleRequest> _instance;
} _CMsgDOTAGuildSetAccountRoleRequest_default_instance_;
class CMsgDOTAGuildSetAccountRoleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildSetAccountRoleResponse> _instance;
} _CMsgDOTAGuildSetAccountRoleResponse_default_instance_;
class CMsgDOTAGuildInviteAccountRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildInviteAccountRequest> _instance;
} _CMsgDOTAGuildInviteAccountRequest_default_instance_;
class CMsgDOTAGuildInviteAccountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildInviteAccountResponse> _instance;
} _CMsgDOTAGuildInviteAccountResponse_default_instance_;
class CMsgDOTAGuildCancelInviteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildCancelInviteRequest> _instance;
} _CMsgDOTAGuildCancelInviteRequest_default_instance_;
class CMsgDOTAGuildCancelInviteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildCancelInviteResponse> _instance;
} _CMsgDOTAGuildCancelInviteResponse_default_instance_;
class CMsgDOTAGuildUpdateDetailsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildUpdateDetailsRequest> _instance;
} _CMsgDOTAGuildUpdateDetailsRequest_default_instance_;
class CMsgDOTAGuildUpdateDetailsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildUpdateDetailsResponse> _instance;
} _CMsgDOTAGuildUpdateDetailsResponse_default_instance_;
class CMsgDOTAGCToGCUpdateOpenGuildPartyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGCToGCUpdateOpenGuildPartyRequest> _instance;
} _CMsgDOTAGCToGCUpdateOpenGuildPartyRequest_default_instance_;
class CMsgDOTAGCToGCUpdateOpenGuildPartyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGCToGCUpdateOpenGuildPartyResponse> _instance;
} _CMsgDOTAGCToGCUpdateOpenGuildPartyResponse_default_instance_;
class CMsgDOTAGCToGCDestroyOpenGuildPartyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGCToGCDestroyOpenGuildPartyRequest> _instance;
} _CMsgDOTAGCToGCDestroyOpenGuildPartyRequest_default_instance_;
class CMsgDOTAGCToGCDestroyOpenGuildPartyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGCToGCDestroyOpenGuildPartyResponse> _instance;
} _CMsgDOTAGCToGCDestroyOpenGuildPartyResponse_default_instance_;
class CMsgDOTAPartySetOpenGuildRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAPartySetOpenGuildRequest> _instance;
} _CMsgDOTAPartySetOpenGuildRequest_default_instance_;
class CMsgDOTAPartySetOpenGuildResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAPartySetOpenGuildResponse> _instance;
} _CMsgDOTAPartySetOpenGuildResponse_default_instance_;
class CMsgDOTAJoinOpenGuildPartyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAJoinOpenGuildPartyRequest> _instance;
} _CMsgDOTAJoinOpenGuildPartyRequest_default_instance_;
class CMsgDOTAJoinOpenGuildPartyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAJoinOpenGuildPartyResponse> _instance;
} _CMsgDOTAJoinOpenGuildPartyResponse_default_instance_;
class CMsgDOTAGuildOpenPartyRefresh_OpenPartyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildOpenPartyRefresh_OpenParty> _instance;
} _CMsgDOTAGuildOpenPartyRefresh_OpenParty_default_instance_;
class CMsgDOTAGuildOpenPartyRefreshDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildOpenPartyRefresh> _instance;
} _CMsgDOTAGuildOpenPartyRefresh_default_instance_;
class CMsgDOTARequestGuildDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTARequestGuildData> _instance;
} _CMsgDOTARequestGuildData_default_instance_;
class CMsgDOTAGuildInviteDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildInviteData> _instance;
} _CMsgDOTAGuildInviteData_default_instance_;
class CMsgDOTAGuildUpdateMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildUpdateMessage> _instance;
} _CMsgDOTAGuildUpdateMessage_default_instance_;
class CMsgDOTAGuildEditLogoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildEditLogoRequest> _instance;
} _CMsgDOTAGuildEditLogoRequest_default_instance_;
class CMsgDOTAGuildEditLogoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDOTAGuildEditLogoResponse> _instance;
} _CMsgDOTAGuildEditLogoResponse_default_instance_;
}  // namespace dota
}  // namespace proto
static void InitDefaultsCMsgDOTAGuildSDO_Member_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildSDO_Member_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildSDO_Member();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildSDO_Member::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildSDO_Member_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildSDO_Member_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildSDO_Invitation_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildSDO_Invitation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildSDO_Invitation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildSDO_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildSDO_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildSDO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildSDO::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgDOTAGuildSDO_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgDOTAGuildSDO_dota_5fgcmessages_5fclient_5fguild_2eproto}, {
      &scc_info_CMsgDOTAGuildSDO_Member_dota_5fgcmessages_5fclient_5fguild_2eproto.base,
      &scc_info_CMsgDOTAGuildSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto.base,}};

static void InitDefaultsCMsgDOTAGuildAuditSDO_Entry_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildAuditSDO_Entry_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildAuditSDO_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildAuditSDO_Entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildAuditSDO_Entry_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildAuditSDO_Entry_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildAuditSDO_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildAuditSDO_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildAuditSDO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildAuditSDO::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgDOTAGuildAuditSDO_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgDOTAGuildAuditSDO_dota_5fgcmessages_5fclient_5fguild_2eproto}, {
      &scc_info_CMsgDOTAGuildAuditSDO_Entry_dota_5fgcmessages_5fclient_5fguild_2eproto.base,}};

static void InitDefaultsCMsgDOTAAccountGuildMembershipsSDO_Membership_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAAccountGuildMembershipsSDO_Membership_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Membership();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Membership::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAAccountGuildMembershipsSDO_Membership_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAAccountGuildMembershipsSDO_Membership_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAAccountGuildMembershipsSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAAccountGuildMembershipsSDO_Invitation_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Invitation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Invitation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAAccountGuildMembershipsSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAAccountGuildMembershipsSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAAccountGuildMembershipsSDO_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAAccountGuildMembershipsSDO_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgDOTAAccountGuildMembershipsSDO_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgDOTAAccountGuildMembershipsSDO_dota_5fgcmessages_5fclient_5fguild_2eproto}, {
      &scc_info_CMsgDOTAAccountGuildMembershipsSDO_Membership_dota_5fgcmessages_5fclient_5fguild_2eproto.base,
      &scc_info_CMsgDOTAAccountGuildMembershipsSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto.base,}};

static void InitDefaultsCMsgDOTAGuildCreateRequest_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildCreateRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildCreateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildCreateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildCreateRequest_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildCreateRequest_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildCreateResponse_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildCreateResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildCreateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildCreateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildCreateResponse_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildCreateResponse_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildSetAccountRoleRequest_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildSetAccountRoleRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildSetAccountRoleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildSetAccountRoleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildSetAccountRoleRequest_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildSetAccountRoleRequest_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildSetAccountRoleResponse_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildSetAccountRoleResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildSetAccountRoleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildSetAccountRoleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildSetAccountRoleResponse_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildSetAccountRoleResponse_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildInviteAccountRequest_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildInviteAccountRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildInviteAccountRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildInviteAccountRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildInviteAccountRequest_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildInviteAccountRequest_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildInviteAccountResponse_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildInviteAccountResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildInviteAccountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildInviteAccountResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildInviteAccountResponse_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildInviteAccountResponse_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildCancelInviteRequest_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildCancelInviteRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildCancelInviteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildCancelInviteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildCancelInviteRequest_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildCancelInviteRequest_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildCancelInviteResponse_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildCancelInviteResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildCancelInviteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildCancelInviteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildCancelInviteResponse_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildCancelInviteResponse_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildUpdateDetailsRequest_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildUpdateDetailsRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildUpdateDetailsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildUpdateDetailsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildUpdateDetailsRequest_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildUpdateDetailsRequest_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildUpdateDetailsResponse_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildUpdateDetailsResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildUpdateDetailsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildUpdateDetailsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildUpdateDetailsResponse_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildUpdateDetailsResponse_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGCToGCUpdateOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGCToGCUpdateOpenGuildPartyRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGCToGCUpdateOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGCToGCUpdateOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGCToGCUpdateOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGCToGCUpdateOpenGuildPartyResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGCToGCUpdateOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGCToGCUpdateOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGCToGCDestroyOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGCToGCDestroyOpenGuildPartyRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGCToGCDestroyOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGCToGCDestroyOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGCToGCDestroyOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGCToGCDestroyOpenGuildPartyResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGCToGCDestroyOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGCToGCDestroyOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAPartySetOpenGuildRequest_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAPartySetOpenGuildRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAPartySetOpenGuildRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAPartySetOpenGuildRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAPartySetOpenGuildRequest_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAPartySetOpenGuildRequest_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAPartySetOpenGuildResponse_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAPartySetOpenGuildResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAPartySetOpenGuildResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAPartySetOpenGuildResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAPartySetOpenGuildResponse_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAPartySetOpenGuildResponse_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAJoinOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAJoinOpenGuildPartyRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAJoinOpenGuildPartyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAJoinOpenGuildPartyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAJoinOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAJoinOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAJoinOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAJoinOpenGuildPartyResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAJoinOpenGuildPartyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAJoinOpenGuildPartyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAJoinOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAJoinOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildOpenPartyRefresh_OpenParty_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildOpenPartyRefresh_OpenParty_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildOpenPartyRefresh_OpenParty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildOpenPartyRefresh_OpenParty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildOpenPartyRefresh_OpenParty_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildOpenPartyRefresh_OpenParty_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildOpenPartyRefresh_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildOpenPartyRefresh_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildOpenPartyRefresh();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildOpenPartyRefresh::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgDOTAGuildOpenPartyRefresh_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgDOTAGuildOpenPartyRefresh_dota_5fgcmessages_5fclient_5fguild_2eproto}, {
      &scc_info_CMsgDOTAGuildOpenPartyRefresh_OpenParty_dota_5fgcmessages_5fclient_5fguild_2eproto.base,}};

static void InitDefaultsCMsgDOTARequestGuildData_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTARequestGuildData_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTARequestGuildData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTARequestGuildData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTARequestGuildData_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTARequestGuildData_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildInviteData_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildInviteData_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildInviteData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildInviteData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildInviteData_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildInviteData_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildUpdateMessage_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildUpdateMessage_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildUpdateMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildUpdateMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildUpdateMessage_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildUpdateMessage_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildEditLogoRequest_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildEditLogoRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildEditLogoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildEditLogoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildEditLogoRequest_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildEditLogoRequest_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

static void InitDefaultsCMsgDOTAGuildEditLogoResponse_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDOTAGuildEditLogoResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgDOTAGuildEditLogoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDOTAGuildEditLogoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTAGuildEditLogoResponse_dota_5fgcmessages_5fclient_5fguild_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDOTAGuildEditLogoResponse_dota_5fgcmessages_5fclient_5fguild_2eproto}, {}};

void InitDefaults_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildSDO_Member_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildSDO_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildAuditSDO_Entry_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildAuditSDO_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAAccountGuildMembershipsSDO_Membership_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAAccountGuildMembershipsSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAAccountGuildMembershipsSDO_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildCreateRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildCreateResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildSetAccountRoleRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildSetAccountRoleResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildInviteAccountRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildInviteAccountResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildCancelInviteRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildCancelInviteResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildUpdateDetailsRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildUpdateDetailsResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGCToGCUpdateOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGCToGCUpdateOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGCToGCDestroyOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGCToGCDestroyOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAPartySetOpenGuildRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAPartySetOpenGuildResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAJoinOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAJoinOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildOpenPartyRefresh_OpenParty_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildOpenPartyRefresh_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTARequestGuildData_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildInviteData_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildUpdateMessage_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildEditLogoRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDOTAGuildEditLogoResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[33];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[8];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO_Member, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO_Member, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO_Member, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO_Member, time_joined_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO_Member, role_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO_Invitation, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO_Invitation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO_Invitation, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO_Invitation, time_sent_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO_Invitation, account_id_sender_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, name_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, tag_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, time_created_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, time_disbanded_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, logo_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, base_logo_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, banner_logo_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, members_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, invitations_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, message_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSDO, incremental_),
  3,
  0,
  1,
  4,
  8,
  5,
  6,
  7,
  ~0u,
  ~0u,
  2,
  9,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildAuditSDO_Entry, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildAuditSDO_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildAuditSDO_Entry, event_index_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildAuditSDO_Entry, timestamp_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildAuditSDO_Entry, action_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildAuditSDO_Entry, account_id_requestor_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildAuditSDO_Entry, account_id_target_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildAuditSDO_Entry, reference_data_a_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildAuditSDO_Entry, reference_data_b_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildAuditSDO, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildAuditSDO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildAuditSDO, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildAuditSDO, entries_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Membership, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Membership, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Membership, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Membership, role_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Invitation, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Invitation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Invitation, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Invitation, time_sent_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Invitation, account_id_sender_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO, memberships_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO, invitations_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCreateRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCreateRequest, name_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCreateRequest, tag_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCreateRequest, logo_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCreateRequest, base_logo_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCreateRequest, banner_logo_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCreateResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCreateResponse, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCreateResponse, errors_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSetAccountRoleRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSetAccountRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSetAccountRoleRequest, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSetAccountRoleRequest, target_account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSetAccountRoleRequest, target_role_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSetAccountRoleResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSetAccountRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildSetAccountRoleResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteAccountRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteAccountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteAccountRequest, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteAccountRequest, target_account_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteAccountResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteAccountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteAccountResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCancelInviteRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCancelInviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCancelInviteRequest, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCancelInviteRequest, target_account_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCancelInviteResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCancelInviteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildCancelInviteResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildUpdateDetailsRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildUpdateDetailsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildUpdateDetailsRequest, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildUpdateDetailsRequest, logo_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildUpdateDetailsRequest, base_logo_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildUpdateDetailsRequest, banner_logo_),
  3,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildUpdateDetailsResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildUpdateDetailsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildUpdateDetailsResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest, party_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest, member_account_ids_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest, description_),
  1,
  2,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyResponse, maintain_association_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyRequest, party_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyRequest, guild_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAPartySetOpenGuildRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAPartySetOpenGuildRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAPartySetOpenGuildRequest, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAPartySetOpenGuildRequest, description_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAPartySetOpenGuildResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAPartySetOpenGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAPartySetOpenGuildResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAJoinOpenGuildPartyRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAJoinOpenGuildPartyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAJoinOpenGuildPartyRequest, party_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAJoinOpenGuildPartyResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAJoinOpenGuildPartyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAJoinOpenGuildPartyResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildOpenPartyRefresh_OpenParty, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildOpenPartyRefresh_OpenParty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildOpenPartyRefresh_OpenParty, party_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildOpenPartyRefresh_OpenParty, member_account_ids_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildOpenPartyRefresh_OpenParty, time_created_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildOpenPartyRefresh_OpenParty, description_),
  1,
  ~0u,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildOpenPartyRefresh, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildOpenPartyRefresh, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildOpenPartyRefresh, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildOpenPartyRefresh, open_parties_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTARequestGuildData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTARequestGuildData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteData, invited_to_guild_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteData, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteData, guild_name_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteData, guild_tag_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteData, logo_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteData, inviter_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteData, inviter_name_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildInviteData, member_count_),
  3,
  4,
  0,
  1,
  5,
  6,
  2,
  7,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildUpdateMessage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildUpdateMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildUpdateMessage, message_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildUpdateMessage, guild_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildEditLogoRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildEditLogoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildEditLogoRequest, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildEditLogoRequest, logo_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildEditLogoResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildEditLogoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildEditLogoResponse, guild_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDOTAGuildEditLogoResponse, result_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::proto::dota::CMsgDOTAGuildSDO_Member)},
  { 11, 19, sizeof(::proto::dota::CMsgDOTAGuildSDO_Invitation)},
  { 22, 39, sizeof(::proto::dota::CMsgDOTAGuildSDO)},
  { 51, 63, sizeof(::proto::dota::CMsgDOTAGuildAuditSDO_Entry)},
  { 70, 77, sizeof(::proto::dota::CMsgDOTAGuildAuditSDO)},
  { 79, 86, sizeof(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Membership)},
  { 88, 96, sizeof(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Invitation)},
  { 99, 107, sizeof(::proto::dota::CMsgDOTAAccountGuildMembershipsSDO)},
  { 110, 120, sizeof(::proto::dota::CMsgDOTAGuildCreateRequest)},
  { 125, 132, sizeof(::proto::dota::CMsgDOTAGuildCreateResponse)},
  { 134, 142, sizeof(::proto::dota::CMsgDOTAGuildSetAccountRoleRequest)},
  { 145, 151, sizeof(::proto::dota::CMsgDOTAGuildSetAccountRoleResponse)},
  { 152, 159, sizeof(::proto::dota::CMsgDOTAGuildInviteAccountRequest)},
  { 161, 167, sizeof(::proto::dota::CMsgDOTAGuildInviteAccountResponse)},
  { 168, 175, sizeof(::proto::dota::CMsgDOTAGuildCancelInviteRequest)},
  { 177, 183, sizeof(::proto::dota::CMsgDOTAGuildCancelInviteResponse)},
  { 184, 193, sizeof(::proto::dota::CMsgDOTAGuildUpdateDetailsRequest)},
  { 197, 203, sizeof(::proto::dota::CMsgDOTAGuildUpdateDetailsResponse)},
  { 204, 213, sizeof(::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)},
  { 217, 223, sizeof(::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)},
  { 224, 231, sizeof(::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)},
  { 233, 238, sizeof(::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)},
  { 238, 245, sizeof(::proto::dota::CMsgDOTAPartySetOpenGuildRequest)},
  { 247, 253, sizeof(::proto::dota::CMsgDOTAPartySetOpenGuildResponse)},
  { 254, 260, sizeof(::proto::dota::CMsgDOTAJoinOpenGuildPartyRequest)},
  { 261, 267, sizeof(::proto::dota::CMsgDOTAJoinOpenGuildPartyResponse)},
  { 268, 277, sizeof(::proto::dota::CMsgDOTAGuildOpenPartyRefresh_OpenParty)},
  { 281, 288, sizeof(::proto::dota::CMsgDOTAGuildOpenPartyRefresh)},
  { 290, 295, sizeof(::proto::dota::CMsgDOTARequestGuildData)},
  { 295, 308, sizeof(::proto::dota::CMsgDOTAGuildInviteData)},
  { 316, 323, sizeof(::proto::dota::CMsgDOTAGuildUpdateMessage)},
  { 325, 332, sizeof(::proto::dota::CMsgDOTAGuildEditLogoRequest)},
  { 334, 341, sizeof(::proto::dota::CMsgDOTAGuildEditLogoResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildSDO_Member_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildSDO_Invitation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildSDO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildAuditSDO_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildAuditSDO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAAccountGuildMembershipsSDO_Membership_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAAccountGuildMembershipsSDO_Invitation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAAccountGuildMembershipsSDO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildCreateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildCreateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildSetAccountRoleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildSetAccountRoleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildInviteAccountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildInviteAccountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildCancelInviteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildCancelInviteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildUpdateDetailsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildUpdateDetailsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGCToGCUpdateOpenGuildPartyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGCToGCUpdateOpenGuildPartyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGCToGCDestroyOpenGuildPartyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGCToGCDestroyOpenGuildPartyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAPartySetOpenGuildRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAPartySetOpenGuildResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAJoinOpenGuildPartyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAJoinOpenGuildPartyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildOpenPartyRefresh_OpenParty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildOpenPartyRefresh_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTARequestGuildData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildInviteData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildUpdateMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildEditLogoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDOTAGuildEditLogoResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto = {
  {}, AddDescriptors_dota_5fgcmessages_5fclient_5fguild_2eproto, "dota_gcmessages_client_guild.proto", schemas,
  file_default_instances, TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto::offsets,
  file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto, 33, file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto, file_level_service_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto,
};

const char descriptor_table_protodef_dota_5fgcmessages_5fclient_5fguild_2eproto[] =
  "\n\"dota_gcmessages_client_guild.proto\022\npr"
  "oto.dota\"\316\003\n\020CMsgDOTAGuildSDO\022\020\n\010guild_i"
  "d\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\013\n\003tag\030\003 \001(\t\022\024\n\014ti"
  "me_created\030\004 \001(\r\022\026\n\016time_disbanded\030\005 \001(\r"
  "\022\014\n\004logo\030\006 \001(\004\022\021\n\tbase_logo\030\007 \001(\004\022\023\n\013ban"
  "ner_logo\030\010 \001(\004\0224\n\007members\030\t \003(\0132#.proto."
  "dota.CMsgDOTAGuildSDO.Member\022<\n\013invitati"
  "ons\030\n \003(\0132\'.proto.dota.CMsgDOTAGuildSDO."
  "Invitation\022\017\n\007message\030\013 \001(\t\022\023\n\013increment"
  "al\030\014 \001(\010\032\?\n\006Member\022\022\n\naccount_id\030\001 \001(\r\022\023"
  "\n\013time_joined\030\002 \001(\r\022\014\n\004role\030\003 \001(\r\032N\n\nInv"
  "itation\022\022\n\naccount_id\030\001 \001(\r\022\021\n\ttime_sent"
  "\030\002 \001(\r\022\031\n\021account_id_sender\030\003 \001(\r\"\222\002\n\025CM"
  "sgDOTAGuildAuditSDO\022\020\n\010guild_id\030\001 \001(\r\0228\n"
  "\007entries\030\002 \003(\0132\'.proto.dota.CMsgDOTAGuil"
  "dAuditSDO.Entry\032\254\001\n\005Entry\022\023\n\013event_index"
  "\030\001 \001(\r\022\021\n\ttimestamp\030\002 \001(\r\022\016\n\006action\030\003 \001("
  "\r\022\034\n\024account_id_requestor\030\004 \001(\r\022\031\n\021accou"
  "nt_id_target\030\005 \001(\r\022\030\n\020reference_data_a\030\006"
  " \001(\r\022\030\n\020reference_data_b\030\007 \001(\r\"\324\002\n\"CMsgD"
  "OTAAccountGuildMembershipsSDO\022\022\n\naccount"
  "_id\030\001 \001(\r\022N\n\013memberships\030\002 \003(\01329.proto.d"
  "ota.CMsgDOTAAccountGuildMembershipsSDO.M"
  "embership\022N\n\013invitations\030\003 \003(\01329.proto.d"
  "ota.CMsgDOTAAccountGuildMembershipsSDO.I"
  "nvitation\032,\n\nMembership\022\020\n\010guild_id\030\001 \001("
  "\r\022\014\n\004role\030\002 \001(\r\032L\n\nInvitation\022\020\n\010guild_i"
  "d\030\001 \001(\r\022\021\n\ttime_sent\030\002 \001(\r\022\031\n\021account_id"
  "_sender\030\003 \001(\r\"m\n\032CMsgDOTAGuildCreateRequ"
  "est\022\014\n\004name\030\001 \001(\t\022\013\n\003tag\030\002 \001(\t\022\014\n\004logo\030\003"
  " \001(\004\022\021\n\tbase_logo\030\004 \001(\004\022\023\n\013banner_logo\030\005"
  " \001(\004\"\305\002\n\033CMsgDOTAGuildCreateResponse\022\020\n\010"
  "guild_id\030\001 \001(\r\022>\n\006errors\030\002 \003(\0162..proto.d"
  "ota.CMsgDOTAGuildCreateResponse.EError\"\323"
  "\001\n\006EError\022\017\n\013UNSPECIFIED\020\000\022\016\n\nNAME_EMPTY"
  "\020\001\022\027\n\023NAME_BAD_CHARACTERS\020\002\022\021\n\rNAME_TOO_"
  "LONG\020\003\022\016\n\nNAME_TAKEN\020\004\022\r\n\tTAG_EMPTY\020\005\022\026\n"
  "\022TAG_BAD_CHARACTERS\020\006\022\020\n\014TAG_TOO_LONG\020\007\022"
  "\033\n\027ACCOUNT_TOO_MANY_GUILDS\020\010\022\026\n\022LOGO_UPL"
  "OAD_FAILED\020\t\"f\n\"CMsgDOTAGuildSetAccountR"
  "oleRequest\022\020\n\010guild_id\030\001 \001(\r\022\031\n\021target_a"
  "ccount_id\030\002 \001(\r\022\023\n\013target_role\030\003 \001(\r\"\240\002\n"
  "#CMsgDOTAGuildSetAccountRoleResponse\022P\n\006"
  "result\030\001 \001(\01627.proto.dota.CMsgDOTAGuildS"
  "etAccountRoleResponse.EResult:\007SUCCESS\"\246"
  "\001\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECI"
  "FIED\020\001\022\027\n\023ERROR_NO_PERMISSION\020\002\022\031\n\025ERROR"
  "_NO_OTHER_LEADER\020\003\022!\n\035ERROR_ACCOUNT_TOO_"
  "MANY_GUILDS\020\004\022 \n\034ERROR_GUILD_TOO_MANY_ME"
  "MBERS\020\005\"P\n!CMsgDOTAGuildInviteAccountReq"
  "uest\022\020\n\010guild_id\030\001 \001(\r\022\031\n\021target_account"
  "_id\030\002 \001(\r\"\356\002\n\"CMsgDOTAGuildInviteAccount"
  "Response\022O\n\006result\030\001 \001(\01626.proto.dota.CM"
  "sgDOTAGuildInviteAccountResponse.EResult"
  ":\007SUCCESS\"\366\001\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ER"
  "ROR_UNSPECIFIED\020\001\022\027\n\023ERROR_NO_PERMISSION"
  "\020\002\022!\n\035ERROR_ACCOUNT_ALREADY_INVITED\020\003\022\"\n"
  "\036ERROR_ACCOUNT_ALREADY_IN_GUILD\020\004\022\"\n\036ERR"
  "OR_ACCOUNT_TOO_MANY_INVITES\020\005\022 \n\034ERROR_G"
  "UILD_TOO_MANY_INVITES\020\006\022!\n\035ERROR_ACCOUNT"
  "_TOO_MANY_GUILDS\020\007\"O\n CMsgDOTAGuildCance"
  "lInviteRequest\022\020\n\010guild_id\030\001 \001(\r\022\031\n\021targ"
  "et_account_id\030\002 \001(\r\"\273\001\n!CMsgDOTAGuildCan"
  "celInviteResponse\022N\n\006result\030\001 \001(\01625.prot"
  "o.dota.CMsgDOTAGuildCancelInviteResponse"
  ".EResult:\007SUCCESS\"F\n\007EResult\022\013\n\007SUCCESS\020"
  "\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\027\n\023ERROR_NO_PER"
  "MISSION\020\002\"k\n!CMsgDOTAGuildUpdateDetailsR"
  "equest\022\020\n\010guild_id\030\001 \001(\r\022\014\n\004logo\030\002 \001(\004\022\021"
  "\n\tbase_logo\030\003 \001(\004\022\023\n\013banner_logo\030\004 \001(\004\"\275"
  "\001\n\"CMsgDOTAGuildUpdateDetailsResponse\022O\n"
  "\006result\030\001 \001(\01626.proto.dota.CMsgDOTAGuild"
  "UpdateDetailsResponse.EResult:\007SUCCESS\"F"
  "\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIF"
  "IED\020\001\022\027\n\023ERROR_NO_PERMISSION\020\002\"\200\001\n)CMsgD"
  "OTAGCToGCUpdateOpenGuildPartyRequest\022\020\n\010"
  "party_id\030\001 \001(\004\022\020\n\010guild_id\030\002 \001(\r\022\032\n\022memb"
  "er_account_ids\030\003 \003(\r\022\023\n\013description\030\004 \001("
  "\t\"J\n*CMsgDOTAGCToGCUpdateOpenGuildPartyR"
  "esponse\022\034\n\024maintain_association\030\001 \001(\010\"P\n"
  "*CMsgDOTAGCToGCDestroyOpenGuildPartyRequ"
  "est\022\020\n\010party_id\030\001 \001(\004\022\020\n\010guild_id\030\002 \001(\r\""
  "-\n+CMsgDOTAGCToGCDestroyOpenGuildPartyRe"
  "sponse\"I\n CMsgDOTAPartySetOpenGuildReque"
  "st\022\020\n\010guild_id\030\001 \001(\r\022\023\n\013description\030\002 \001("
  "\t\"\242\001\n!CMsgDOTAPartySetOpenGuildResponse\022"
  "N\n\006result\030\001 \001(\01625.proto.dota.CMsgDOTAPar"
  "tySetOpenGuildResponse.EResult:\007SUCCESS\""
  "-\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECI"
  "FIED\020\001\"5\n!CMsgDOTAJoinOpenGuildPartyRequ"
  "est\022\020\n\010party_id\030\001 \001(\004\"\244\001\n\"CMsgDOTAJoinOp"
  "enGuildPartyResponse\022O\n\006result\030\001 \001(\01626.p"
  "roto.dota.CMsgDOTAJoinOpenGuildPartyResp"
  "onse.EResult:\007SUCCESS\"-\n\007EResult\022\013\n\007SUCC"
  "ESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\"\342\001\n\035CMsgDOT"
  "AGuildOpenPartyRefresh\022\020\n\010guild_id\030\001 \001(\r"
  "\022I\n\014open_parties\030\002 \003(\01323.proto.dota.CMsg"
  "DOTAGuildOpenPartyRefresh.OpenParty\032d\n\tO"
  "penParty\022\020\n\010party_id\030\001 \001(\004\022\032\n\022member_acc"
  "ount_ids\030\002 \003(\r\022\024\n\014time_created\030\003 \001(\r\022\023\n\013"
  "description\030\004 \001(\t\"\032\n\030CMsgDOTARequestGuil"
  "dData\"\267\001\n\027CMsgDOTAGuildInviteData\022\030\n\020inv"
  "ited_to_guild\030\001 \001(\010\022\020\n\010guild_id\030\002 \001(\r\022\022\n"
  "\nguild_name\030\003 \001(\t\022\021\n\tguild_tag\030\004 \001(\t\022\014\n\004"
  "logo\030\005 \001(\004\022\017\n\007inviter\030\006 \001(\r\022\024\n\014inviter_n"
  "ame\030\007 \001(\t\022\024\n\014member_count\030\010 \001(\r\"\?\n\032CMsgD"
  "OTAGuildUpdateMessage\022\017\n\007message\030\001 \001(\t\022\020"
  "\n\010guild_id\030\002 \001(\r\">\n\034CMsgDOTAGuildEditLog"
  "oRequest\022\020\n\010guild_id\030\001 \001(\r\022\014\n\004logo\030\002 \001(\004"
  "\"\327\001\n\035CMsgDOTAGuildEditLogoResponse\022\020\n\010gu"
  "ild_id\030\001 \001(\r\022J\n\006result\030\002 \001(\01621.proto.dot"
  "a.CMsgDOTAGuildEditLogoResponse.EResult:"
  "\007SUCCESS\"X\n\007EResult\022\013\n\007SUCCESS\020\000\022\021\n\rNO_P"
  "ERMISSION\020\001\022\026\n\022LOGO_UPLOAD_FAILED\020\002\022\025\n\021U"
  "NSPECIFIED_ERROR\020\003B\005H\001\200\001\000"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto = {
  false, InitDefaults_dota_5fgcmessages_5fclient_5fguild_2eproto, 
  descriptor_table_protodef_dota_5fgcmessages_5fclient_5fguild_2eproto,
  "dota_gcmessages_client_guild.proto", &assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto, 4585,
};

void AddDescriptors_dota_5fgcmessages_5fclient_5fguild_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_dota_5fgcmessages_5fclient_5fguild_2eproto = []() { AddDescriptors_dota_5fgcmessages_5fclient_5fguild_2eproto(); return true; }();
namespace proto {
namespace dota {
const ::google::protobuf::EnumDescriptor* CMsgDOTAGuildCreateResponse_EError_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[0];
}
bool CMsgDOTAGuildCreateResponse_EError_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse::UNSPECIFIED;
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse::NAME_EMPTY;
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse::NAME_BAD_CHARACTERS;
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse::NAME_TOO_LONG;
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse::NAME_TAKEN;
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse::TAG_EMPTY;
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse::TAG_BAD_CHARACTERS;
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse::TAG_TOO_LONG;
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse::ACCOUNT_TOO_MANY_GUILDS;
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse::LOGO_UPLOAD_FAILED;
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse::EError_MIN;
const CMsgDOTAGuildCreateResponse_EError CMsgDOTAGuildCreateResponse::EError_MAX;
const int CMsgDOTAGuildCreateResponse::EError_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgDOTAGuildSetAccountRoleResponse_EResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[1];
}
bool CMsgDOTAGuildSetAccountRoleResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgDOTAGuildSetAccountRoleResponse_EResult CMsgDOTAGuildSetAccountRoleResponse::SUCCESS;
const CMsgDOTAGuildSetAccountRoleResponse_EResult CMsgDOTAGuildSetAccountRoleResponse::ERROR_UNSPECIFIED;
const CMsgDOTAGuildSetAccountRoleResponse_EResult CMsgDOTAGuildSetAccountRoleResponse::ERROR_NO_PERMISSION;
const CMsgDOTAGuildSetAccountRoleResponse_EResult CMsgDOTAGuildSetAccountRoleResponse::ERROR_NO_OTHER_LEADER;
const CMsgDOTAGuildSetAccountRoleResponse_EResult CMsgDOTAGuildSetAccountRoleResponse::ERROR_ACCOUNT_TOO_MANY_GUILDS;
const CMsgDOTAGuildSetAccountRoleResponse_EResult CMsgDOTAGuildSetAccountRoleResponse::ERROR_GUILD_TOO_MANY_MEMBERS;
const CMsgDOTAGuildSetAccountRoleResponse_EResult CMsgDOTAGuildSetAccountRoleResponse::EResult_MIN;
const CMsgDOTAGuildSetAccountRoleResponse_EResult CMsgDOTAGuildSetAccountRoleResponse::EResult_MAX;
const int CMsgDOTAGuildSetAccountRoleResponse::EResult_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgDOTAGuildInviteAccountResponse_EResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[2];
}
bool CMsgDOTAGuildInviteAccountResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgDOTAGuildInviteAccountResponse_EResult CMsgDOTAGuildInviteAccountResponse::SUCCESS;
const CMsgDOTAGuildInviteAccountResponse_EResult CMsgDOTAGuildInviteAccountResponse::ERROR_UNSPECIFIED;
const CMsgDOTAGuildInviteAccountResponse_EResult CMsgDOTAGuildInviteAccountResponse::ERROR_NO_PERMISSION;
const CMsgDOTAGuildInviteAccountResponse_EResult CMsgDOTAGuildInviteAccountResponse::ERROR_ACCOUNT_ALREADY_INVITED;
const CMsgDOTAGuildInviteAccountResponse_EResult CMsgDOTAGuildInviteAccountResponse::ERROR_ACCOUNT_ALREADY_IN_GUILD;
const CMsgDOTAGuildInviteAccountResponse_EResult CMsgDOTAGuildInviteAccountResponse::ERROR_ACCOUNT_TOO_MANY_INVITES;
const CMsgDOTAGuildInviteAccountResponse_EResult CMsgDOTAGuildInviteAccountResponse::ERROR_GUILD_TOO_MANY_INVITES;
const CMsgDOTAGuildInviteAccountResponse_EResult CMsgDOTAGuildInviteAccountResponse::ERROR_ACCOUNT_TOO_MANY_GUILDS;
const CMsgDOTAGuildInviteAccountResponse_EResult CMsgDOTAGuildInviteAccountResponse::EResult_MIN;
const CMsgDOTAGuildInviteAccountResponse_EResult CMsgDOTAGuildInviteAccountResponse::EResult_MAX;
const int CMsgDOTAGuildInviteAccountResponse::EResult_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgDOTAGuildCancelInviteResponse_EResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[3];
}
bool CMsgDOTAGuildCancelInviteResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgDOTAGuildCancelInviteResponse_EResult CMsgDOTAGuildCancelInviteResponse::SUCCESS;
const CMsgDOTAGuildCancelInviteResponse_EResult CMsgDOTAGuildCancelInviteResponse::ERROR_UNSPECIFIED;
const CMsgDOTAGuildCancelInviteResponse_EResult CMsgDOTAGuildCancelInviteResponse::ERROR_NO_PERMISSION;
const CMsgDOTAGuildCancelInviteResponse_EResult CMsgDOTAGuildCancelInviteResponse::EResult_MIN;
const CMsgDOTAGuildCancelInviteResponse_EResult CMsgDOTAGuildCancelInviteResponse::EResult_MAX;
const int CMsgDOTAGuildCancelInviteResponse::EResult_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgDOTAGuildUpdateDetailsResponse_EResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[4];
}
bool CMsgDOTAGuildUpdateDetailsResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgDOTAGuildUpdateDetailsResponse_EResult CMsgDOTAGuildUpdateDetailsResponse::SUCCESS;
const CMsgDOTAGuildUpdateDetailsResponse_EResult CMsgDOTAGuildUpdateDetailsResponse::ERROR_UNSPECIFIED;
const CMsgDOTAGuildUpdateDetailsResponse_EResult CMsgDOTAGuildUpdateDetailsResponse::ERROR_NO_PERMISSION;
const CMsgDOTAGuildUpdateDetailsResponse_EResult CMsgDOTAGuildUpdateDetailsResponse::EResult_MIN;
const CMsgDOTAGuildUpdateDetailsResponse_EResult CMsgDOTAGuildUpdateDetailsResponse::EResult_MAX;
const int CMsgDOTAGuildUpdateDetailsResponse::EResult_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgDOTAPartySetOpenGuildResponse_EResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[5];
}
bool CMsgDOTAPartySetOpenGuildResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgDOTAPartySetOpenGuildResponse_EResult CMsgDOTAPartySetOpenGuildResponse::SUCCESS;
const CMsgDOTAPartySetOpenGuildResponse_EResult CMsgDOTAPartySetOpenGuildResponse::ERROR_UNSPECIFIED;
const CMsgDOTAPartySetOpenGuildResponse_EResult CMsgDOTAPartySetOpenGuildResponse::EResult_MIN;
const CMsgDOTAPartySetOpenGuildResponse_EResult CMsgDOTAPartySetOpenGuildResponse::EResult_MAX;
const int CMsgDOTAPartySetOpenGuildResponse::EResult_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgDOTAJoinOpenGuildPartyResponse_EResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[6];
}
bool CMsgDOTAJoinOpenGuildPartyResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgDOTAJoinOpenGuildPartyResponse_EResult CMsgDOTAJoinOpenGuildPartyResponse::SUCCESS;
const CMsgDOTAJoinOpenGuildPartyResponse_EResult CMsgDOTAJoinOpenGuildPartyResponse::ERROR_UNSPECIFIED;
const CMsgDOTAJoinOpenGuildPartyResponse_EResult CMsgDOTAJoinOpenGuildPartyResponse::EResult_MIN;
const CMsgDOTAJoinOpenGuildPartyResponse_EResult CMsgDOTAJoinOpenGuildPartyResponse::EResult_MAX;
const int CMsgDOTAJoinOpenGuildPartyResponse::EResult_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgDOTAGuildEditLogoResponse_EResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[7];
}
bool CMsgDOTAGuildEditLogoResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgDOTAGuildEditLogoResponse_EResult CMsgDOTAGuildEditLogoResponse::SUCCESS;
const CMsgDOTAGuildEditLogoResponse_EResult CMsgDOTAGuildEditLogoResponse::NO_PERMISSION;
const CMsgDOTAGuildEditLogoResponse_EResult CMsgDOTAGuildEditLogoResponse::LOGO_UPLOAD_FAILED;
const CMsgDOTAGuildEditLogoResponse_EResult CMsgDOTAGuildEditLogoResponse::UNSPECIFIED_ERROR;
const CMsgDOTAGuildEditLogoResponse_EResult CMsgDOTAGuildEditLogoResponse::EResult_MIN;
const CMsgDOTAGuildEditLogoResponse_EResult CMsgDOTAGuildEditLogoResponse::EResult_MAX;
const int CMsgDOTAGuildEditLogoResponse::EResult_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void CMsgDOTAGuildSDO_Member::InitAsDefaultInstance() {
}
class CMsgDOTAGuildSDO_Member::HasBitSetters {
 public:
  static void set_has_account_id(CMsgDOTAGuildSDO_Member* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_time_joined(CMsgDOTAGuildSDO_Member* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_role(CMsgDOTAGuildSDO_Member* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildSDO_Member::kAccountIdFieldNumber;
const int CMsgDOTAGuildSDO_Member::kTimeJoinedFieldNumber;
const int CMsgDOTAGuildSDO_Member::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildSDO_Member::CMsgDOTAGuildSDO_Member()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildSDO.Member)
}
CMsgDOTAGuildSDO_Member::CMsgDOTAGuildSDO_Member(const CMsgDOTAGuildSDO_Member& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(role_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildSDO.Member)
}

void CMsgDOTAGuildSDO_Member::SharedCtor() {
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(role_));
}

CMsgDOTAGuildSDO_Member::~CMsgDOTAGuildSDO_Member() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildSDO.Member)
  SharedDtor();
}

void CMsgDOTAGuildSDO_Member::SharedDtor() {
}

void CMsgDOTAGuildSDO_Member::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildSDO_Member& CMsgDOTAGuildSDO_Member::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildSDO_Member_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildSDO_Member::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildSDO.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&role_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(role_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildSDO_Member::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildSDO_Member*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 time_joined = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_time_joined(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 role = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_role(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildSDO_Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildSDO.Member)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_joined = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_time_joined(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_joined_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 role = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_role(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &role_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildSDO.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildSDO.Member)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildSDO_Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildSDO.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 time_joined = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_joined(), output);
  }

  // optional uint32 role = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->role(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildSDO.Member)
}

::google::protobuf::uint8* CMsgDOTAGuildSDO_Member::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildSDO.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 time_joined = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_joined(), target);
  }

  // optional uint32 role = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->role(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildSDO.Member)
  return target;
}

size_t CMsgDOTAGuildSDO_Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildSDO.Member)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 time_joined = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_joined());
    }

    // optional uint32 role = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->role());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildSDO_Member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildSDO.Member)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildSDO_Member* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildSDO_Member>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildSDO.Member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildSDO.Member)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildSDO_Member::MergeFrom(const CMsgDOTAGuildSDO_Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildSDO.Member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_joined_ = from.time_joined_;
    }
    if (cached_has_bits & 0x00000004u) {
      role_ = from.role_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildSDO_Member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildSDO.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildSDO_Member::CopyFrom(const CMsgDOTAGuildSDO_Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildSDO.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildSDO_Member::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildSDO_Member::Swap(CMsgDOTAGuildSDO_Member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildSDO_Member::InternalSwap(CMsgDOTAGuildSDO_Member* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
  swap(time_joined_, other->time_joined_);
  swap(role_, other->role_);
}

::google::protobuf::Metadata CMsgDOTAGuildSDO_Member::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildSDO_Invitation::InitAsDefaultInstance() {
}
class CMsgDOTAGuildSDO_Invitation::HasBitSetters {
 public:
  static void set_has_account_id(CMsgDOTAGuildSDO_Invitation* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_time_sent(CMsgDOTAGuildSDO_Invitation* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_account_id_sender(CMsgDOTAGuildSDO_Invitation* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildSDO_Invitation::kAccountIdFieldNumber;
const int CMsgDOTAGuildSDO_Invitation::kTimeSentFieldNumber;
const int CMsgDOTAGuildSDO_Invitation::kAccountIdSenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildSDO_Invitation::CMsgDOTAGuildSDO_Invitation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildSDO.Invitation)
}
CMsgDOTAGuildSDO_Invitation::CMsgDOTAGuildSDO_Invitation(const CMsgDOTAGuildSDO_Invitation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&account_id_sender_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(account_id_sender_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildSDO.Invitation)
}

void CMsgDOTAGuildSDO_Invitation::SharedCtor() {
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&account_id_sender_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(account_id_sender_));
}

CMsgDOTAGuildSDO_Invitation::~CMsgDOTAGuildSDO_Invitation() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildSDO.Invitation)
  SharedDtor();
}

void CMsgDOTAGuildSDO_Invitation::SharedDtor() {
}

void CMsgDOTAGuildSDO_Invitation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildSDO_Invitation& CMsgDOTAGuildSDO_Invitation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildSDO_Invitation::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildSDO.Invitation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&account_id_sender_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(account_id_sender_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildSDO_Invitation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildSDO_Invitation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 time_sent = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_time_sent(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 account_id_sender = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_account_id_sender(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildSDO_Invitation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildSDO.Invitation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_sent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_time_sent(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_sent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 account_id_sender = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_account_id_sender(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_sender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildSDO.Invitation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildSDO.Invitation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildSDO_Invitation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildSDO.Invitation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 time_sent = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_sent(), output);
  }

  // optional uint32 account_id_sender = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->account_id_sender(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildSDO.Invitation)
}

::google::protobuf::uint8* CMsgDOTAGuildSDO_Invitation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildSDO.Invitation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 time_sent = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_sent(), target);
  }

  // optional uint32 account_id_sender = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->account_id_sender(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildSDO.Invitation)
  return target;
}

size_t CMsgDOTAGuildSDO_Invitation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildSDO.Invitation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 time_sent = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_sent());
    }

    // optional uint32 account_id_sender = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id_sender());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildSDO_Invitation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildSDO.Invitation)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildSDO_Invitation* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildSDO_Invitation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildSDO.Invitation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildSDO.Invitation)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildSDO_Invitation::MergeFrom(const CMsgDOTAGuildSDO_Invitation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildSDO.Invitation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_sent_ = from.time_sent_;
    }
    if (cached_has_bits & 0x00000004u) {
      account_id_sender_ = from.account_id_sender_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildSDO_Invitation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildSDO.Invitation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildSDO_Invitation::CopyFrom(const CMsgDOTAGuildSDO_Invitation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildSDO.Invitation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildSDO_Invitation::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildSDO_Invitation::Swap(CMsgDOTAGuildSDO_Invitation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildSDO_Invitation::InternalSwap(CMsgDOTAGuildSDO_Invitation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
  swap(time_sent_, other->time_sent_);
  swap(account_id_sender_, other->account_id_sender_);
}

::google::protobuf::Metadata CMsgDOTAGuildSDO_Invitation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildSDO::InitAsDefaultInstance() {
}
class CMsgDOTAGuildSDO::HasBitSetters {
 public:
  static void set_has_guild_id(CMsgDOTAGuildSDO* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_name(CMsgDOTAGuildSDO* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_tag(CMsgDOTAGuildSDO* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_time_created(CMsgDOTAGuildSDO* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_time_disbanded(CMsgDOTAGuildSDO* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_logo(CMsgDOTAGuildSDO* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_base_logo(CMsgDOTAGuildSDO* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_banner_logo(CMsgDOTAGuildSDO* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_message(CMsgDOTAGuildSDO* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_incremental(CMsgDOTAGuildSDO* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildSDO::kGuildIdFieldNumber;
const int CMsgDOTAGuildSDO::kNameFieldNumber;
const int CMsgDOTAGuildSDO::kTagFieldNumber;
const int CMsgDOTAGuildSDO::kTimeCreatedFieldNumber;
const int CMsgDOTAGuildSDO::kTimeDisbandedFieldNumber;
const int CMsgDOTAGuildSDO::kLogoFieldNumber;
const int CMsgDOTAGuildSDO::kBaseLogoFieldNumber;
const int CMsgDOTAGuildSDO::kBannerLogoFieldNumber;
const int CMsgDOTAGuildSDO::kMembersFieldNumber;
const int CMsgDOTAGuildSDO::kInvitationsFieldNumber;
const int CMsgDOTAGuildSDO::kMessageFieldNumber;
const int CMsgDOTAGuildSDO::kIncrementalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildSDO::CMsgDOTAGuildSDO()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildSDO)
}
CMsgDOTAGuildSDO::CMsgDOTAGuildSDO(const CMsgDOTAGuildSDO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      members_(from.members_),
      invitations_(from.invitations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag()) {
    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&incremental_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(incremental_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildSDO)
}

void CMsgDOTAGuildSDO::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDOTAGuildSDO_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guild_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&incremental_) -
      reinterpret_cast<char*>(&guild_id_)) + sizeof(incremental_));
}

CMsgDOTAGuildSDO::~CMsgDOTAGuildSDO() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildSDO)
  SharedDtor();
}

void CMsgDOTAGuildSDO::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDOTAGuildSDO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildSDO& CMsgDOTAGuildSDO::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildSDO_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildSDO::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildSDO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  invitations_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      tag_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&banner_logo_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(banner_logo_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&time_disbanded_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&incremental_) -
        reinterpret_cast<char*>(&time_disbanded_)) + sizeof(incremental_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildSDO::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildSDO*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDOTAGuildSDO.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string tag = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDOTAGuildSDO.tag");
        object = msg->mutable_tag();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 time_created = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_time_created(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 time_disbanded = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_time_disbanded(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 logo = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_logo(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 base_logo = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_base_logo(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 banner_logo = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_banner_logo(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgDOTAGuildSDO.Member members = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgDOTAGuildSDO_Member::_InternalParse;
          object = msg->add_members();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 74 && (ptr += 1));
        break;
      }
      // repeated .proto.dota.CMsgDOTAGuildSDO.Invitation invitations = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgDOTAGuildSDO_Invitation::_InternalParse;
          object = msg->add_invitations();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 82 && (ptr += 1));
        break;
      }
      // optional string message = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDOTAGuildSDO.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool incremental = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_incremental(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildSDO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildSDO)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDOTAGuildSDO.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag().data(), static_cast<int>(this->tag().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDOTAGuildSDO.tag");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_created = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_time_created(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_disbanded = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_time_disbanded(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_disbanded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 logo = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_logo(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 base_logo = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_base_logo(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &base_logo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 banner_logo = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_banner_logo(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &banner_logo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgDOTAGuildSDO.Member members = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgDOTAGuildSDO.Invitation invitations = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_invitations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDOTAGuildSDO.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool incremental = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {
          HasBitSetters::set_has_incremental(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &incremental_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildSDO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildSDO)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildSDO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildSDO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guild_id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildSDO.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string tag = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildSDO.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tag(), output);
  }

  // optional uint32 time_created = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->time_created(), output);
  }

  // optional uint32 time_disbanded = 5;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->time_disbanded(), output);
  }

  // optional uint64 logo = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->logo(), output);
  }

  // optional uint64 base_logo = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->base_logo(), output);
  }

  // optional uint64 banner_logo = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->banner_logo(), output);
  }

  // repeated .proto.dota.CMsgDOTAGuildSDO.Member members = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->members(static_cast<int>(i)),
      output);
  }

  // repeated .proto.dota.CMsgDOTAGuildSDO.Invitation invitations = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invitations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->invitations(static_cast<int>(i)),
      output);
  }

  // optional string message = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildSDO.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->message(), output);
  }

  // optional bool incremental = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->incremental(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildSDO)
}

::google::protobuf::uint8* CMsgDOTAGuildSDO::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildSDO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guild_id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildSDO.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string tag = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildSDO.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tag(), target);
  }

  // optional uint32 time_created = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->time_created(), target);
  }

  // optional uint32 time_disbanded = 5;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->time_disbanded(), target);
  }

  // optional uint64 logo = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->logo(), target);
  }

  // optional uint64 base_logo = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->base_logo(), target);
  }

  // optional uint64 banner_logo = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->banner_logo(), target);
  }

  // repeated .proto.dota.CMsgDOTAGuildSDO.Member members = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->members(static_cast<int>(i)), target);
  }

  // repeated .proto.dota.CMsgDOTAGuildSDO.Invitation invitations = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invitations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->invitations(static_cast<int>(i)), target);
  }

  // optional string message = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildSDO.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->message(), target);
  }

  // optional bool incremental = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->incremental(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildSDO)
  return target;
}

size_t CMsgDOTAGuildSDO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildSDO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgDOTAGuildSDO.Member members = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->members(static_cast<int>(i)));
    }
  }

  // repeated .proto.dota.CMsgDOTAGuildSDO.Invitation invitations = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->invitations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->invitations(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string tag = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag());
    }

    // optional string message = 11;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

    // optional uint32 time_created = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_created());
    }

    // optional uint64 logo = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->logo());
    }

    // optional uint64 base_logo = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->base_logo());
    }

    // optional uint64 banner_logo = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->banner_logo());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional uint32 time_disbanded = 5;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_disbanded());
    }

    // optional bool incremental = 12;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildSDO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildSDO)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildSDO* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildSDO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildSDO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildSDO)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildSDO::MergeFrom(const CMsgDOTAGuildSDO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildSDO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  invitations_.MergeFrom(from.invitations_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000008u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      time_created_ = from.time_created_;
    }
    if (cached_has_bits & 0x00000020u) {
      logo_ = from.logo_;
    }
    if (cached_has_bits & 0x00000040u) {
      base_logo_ = from.base_logo_;
    }
    if (cached_has_bits & 0x00000080u) {
      banner_logo_ = from.banner_logo_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      time_disbanded_ = from.time_disbanded_;
    }
    if (cached_has_bits & 0x00000200u) {
      incremental_ = from.incremental_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildSDO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildSDO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildSDO::CopyFrom(const CMsgDOTAGuildSDO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildSDO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildSDO::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildSDO::Swap(CMsgDOTAGuildSDO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildSDO::InternalSwap(CMsgDOTAGuildSDO* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&members_)->InternalSwap(CastToBase(&other->members_));
  CastToBase(&invitations_)->InternalSwap(CastToBase(&other->invitations_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tag_.Swap(&other->tag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guild_id_, other->guild_id_);
  swap(time_created_, other->time_created_);
  swap(logo_, other->logo_);
  swap(base_logo_, other->base_logo_);
  swap(banner_logo_, other->banner_logo_);
  swap(time_disbanded_, other->time_disbanded_);
  swap(incremental_, other->incremental_);
}

::google::protobuf::Metadata CMsgDOTAGuildSDO::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildAuditSDO_Entry::InitAsDefaultInstance() {
}
class CMsgDOTAGuildAuditSDO_Entry::HasBitSetters {
 public:
  static void set_has_event_index(CMsgDOTAGuildAuditSDO_Entry* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_timestamp(CMsgDOTAGuildAuditSDO_Entry* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_action(CMsgDOTAGuildAuditSDO_Entry* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_account_id_requestor(CMsgDOTAGuildAuditSDO_Entry* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_account_id_target(CMsgDOTAGuildAuditSDO_Entry* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_reference_data_a(CMsgDOTAGuildAuditSDO_Entry* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_reference_data_b(CMsgDOTAGuildAuditSDO_Entry* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildAuditSDO_Entry::kEventIndexFieldNumber;
const int CMsgDOTAGuildAuditSDO_Entry::kTimestampFieldNumber;
const int CMsgDOTAGuildAuditSDO_Entry::kActionFieldNumber;
const int CMsgDOTAGuildAuditSDO_Entry::kAccountIdRequestorFieldNumber;
const int CMsgDOTAGuildAuditSDO_Entry::kAccountIdTargetFieldNumber;
const int CMsgDOTAGuildAuditSDO_Entry::kReferenceDataAFieldNumber;
const int CMsgDOTAGuildAuditSDO_Entry::kReferenceDataBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildAuditSDO_Entry::CMsgDOTAGuildAuditSDO_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
}
CMsgDOTAGuildAuditSDO_Entry::CMsgDOTAGuildAuditSDO_Entry(const CMsgDOTAGuildAuditSDO_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&event_index_, &from.event_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&reference_data_b_) -
    reinterpret_cast<char*>(&event_index_)) + sizeof(reference_data_b_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
}

void CMsgDOTAGuildAuditSDO_Entry::SharedCtor() {
  ::memset(&event_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reference_data_b_) -
      reinterpret_cast<char*>(&event_index_)) + sizeof(reference_data_b_));
}

CMsgDOTAGuildAuditSDO_Entry::~CMsgDOTAGuildAuditSDO_Entry() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
  SharedDtor();
}

void CMsgDOTAGuildAuditSDO_Entry::SharedDtor() {
}

void CMsgDOTAGuildAuditSDO_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildAuditSDO_Entry& CMsgDOTAGuildAuditSDO_Entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildAuditSDO_Entry_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildAuditSDO_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&event_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reference_data_b_) -
        reinterpret_cast<char*>(&event_index_)) + sizeof(reference_data_b_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildAuditSDO_Entry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildAuditSDO_Entry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 event_index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_event_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 timestamp = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_timestamp(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 action = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_action(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 account_id_requestor = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_account_id_requestor(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 account_id_target = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_account_id_target(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 reference_data_a = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_reference_data_a(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 reference_data_b = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_reference_data_b(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildAuditSDO_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 event_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_event_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_timestamp(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_action(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 account_id_requestor = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_account_id_requestor(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_requestor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 account_id_target = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_account_id_target(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 reference_data_a = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_reference_data_a(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reference_data_a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 reference_data_b = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_reference_data_b(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reference_data_b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildAuditSDO_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 event_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->event_index(), output);
  }

  // optional uint32 timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->timestamp(), output);
  }

  // optional uint32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->action(), output);
  }

  // optional uint32 account_id_requestor = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->account_id_requestor(), output);
  }

  // optional uint32 account_id_target = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->account_id_target(), output);
  }

  // optional uint32 reference_data_a = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->reference_data_a(), output);
  }

  // optional uint32 reference_data_b = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->reference_data_b(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
}

::google::protobuf::uint8* CMsgDOTAGuildAuditSDO_Entry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 event_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->event_index(), target);
  }

  // optional uint32 timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->timestamp(), target);
  }

  // optional uint32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->action(), target);
  }

  // optional uint32 account_id_requestor = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->account_id_requestor(), target);
  }

  // optional uint32 account_id_target = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->account_id_target(), target);
  }

  // optional uint32 reference_data_a = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->reference_data_a(), target);
  }

  // optional uint32 reference_data_b = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->reference_data_b(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
  return target;
}

size_t CMsgDOTAGuildAuditSDO_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional uint32 event_index = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_index());
    }

    // optional uint32 timestamp = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

    // optional uint32 action = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->action());
    }

    // optional uint32 account_id_requestor = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id_requestor());
    }

    // optional uint32 account_id_target = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id_target());
    }

    // optional uint32 reference_data_a = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reference_data_a());
    }

    // optional uint32 reference_data_b = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reference_data_b());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildAuditSDO_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildAuditSDO_Entry* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildAuditSDO_Entry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildAuditSDO_Entry::MergeFrom(const CMsgDOTAGuildAuditSDO_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      event_index_ = from.event_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      action_ = from.action_;
    }
    if (cached_has_bits & 0x00000008u) {
      account_id_requestor_ = from.account_id_requestor_;
    }
    if (cached_has_bits & 0x00000010u) {
      account_id_target_ = from.account_id_target_;
    }
    if (cached_has_bits & 0x00000020u) {
      reference_data_a_ = from.reference_data_a_;
    }
    if (cached_has_bits & 0x00000040u) {
      reference_data_b_ = from.reference_data_b_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildAuditSDO_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildAuditSDO_Entry::CopyFrom(const CMsgDOTAGuildAuditSDO_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildAuditSDO.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildAuditSDO_Entry::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildAuditSDO_Entry::Swap(CMsgDOTAGuildAuditSDO_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildAuditSDO_Entry::InternalSwap(CMsgDOTAGuildAuditSDO_Entry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(event_index_, other->event_index_);
  swap(timestamp_, other->timestamp_);
  swap(action_, other->action_);
  swap(account_id_requestor_, other->account_id_requestor_);
  swap(account_id_target_, other->account_id_target_);
  swap(reference_data_a_, other->reference_data_a_);
  swap(reference_data_b_, other->reference_data_b_);
}

::google::protobuf::Metadata CMsgDOTAGuildAuditSDO_Entry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildAuditSDO::InitAsDefaultInstance() {
}
class CMsgDOTAGuildAuditSDO::HasBitSetters {
 public:
  static void set_has_guild_id(CMsgDOTAGuildAuditSDO* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildAuditSDO::kGuildIdFieldNumber;
const int CMsgDOTAGuildAuditSDO::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildAuditSDO::CMsgDOTAGuildAuditSDO()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildAuditSDO)
}
CMsgDOTAGuildAuditSDO::CMsgDOTAGuildAuditSDO(const CMsgDOTAGuildAuditSDO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildAuditSDO)
}

void CMsgDOTAGuildAuditSDO::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDOTAGuildAuditSDO_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  guild_id_ = 0u;
}

CMsgDOTAGuildAuditSDO::~CMsgDOTAGuildAuditSDO() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildAuditSDO)
  SharedDtor();
}

void CMsgDOTAGuildAuditSDO::SharedDtor() {
}

void CMsgDOTAGuildAuditSDO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildAuditSDO& CMsgDOTAGuildAuditSDO::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildAuditSDO_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildAuditSDO::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildAuditSDO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildAuditSDO::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildAuditSDO*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgDOTAGuildAuditSDO.Entry entries = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgDOTAGuildAuditSDO_Entry::_InternalParse;
          object = msg->add_entries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildAuditSDO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildAuditSDO)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgDOTAGuildAuditSDO.Entry entries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildAuditSDO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildAuditSDO)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildAuditSDO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildAuditSDO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guild_id(), output);
  }

  // repeated .proto.dota.CMsgDOTAGuildAuditSDO.Entry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->entries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildAuditSDO)
}

::google::protobuf::uint8* CMsgDOTAGuildAuditSDO::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildAuditSDO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guild_id(), target);
  }

  // repeated .proto.dota.CMsgDOTAGuildAuditSDO.Entry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->entries(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildAuditSDO)
  return target;
}

size_t CMsgDOTAGuildAuditSDO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildAuditSDO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgDOTAGuildAuditSDO.Entry entries = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // optional uint32 guild_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guild_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildAuditSDO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildAuditSDO)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildAuditSDO* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildAuditSDO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildAuditSDO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildAuditSDO)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildAuditSDO::MergeFrom(const CMsgDOTAGuildAuditSDO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildAuditSDO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.has_guild_id()) {
    set_guild_id(from.guild_id());
  }
}

void CMsgDOTAGuildAuditSDO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildAuditSDO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildAuditSDO::CopyFrom(const CMsgDOTAGuildAuditSDO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildAuditSDO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildAuditSDO::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildAuditSDO::Swap(CMsgDOTAGuildAuditSDO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildAuditSDO::InternalSwap(CMsgDOTAGuildAuditSDO* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  swap(guild_id_, other->guild_id_);
}

::google::protobuf::Metadata CMsgDOTAGuildAuditSDO::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAAccountGuildMembershipsSDO_Membership::InitAsDefaultInstance() {
}
class CMsgDOTAAccountGuildMembershipsSDO_Membership::HasBitSetters {
 public:
  static void set_has_guild_id(CMsgDOTAAccountGuildMembershipsSDO_Membership* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_role(CMsgDOTAAccountGuildMembershipsSDO_Membership* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAAccountGuildMembershipsSDO_Membership::kGuildIdFieldNumber;
const int CMsgDOTAAccountGuildMembershipsSDO_Membership::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAAccountGuildMembershipsSDO_Membership::CMsgDOTAAccountGuildMembershipsSDO_Membership()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
}
CMsgDOTAAccountGuildMembershipsSDO_Membership::CMsgDOTAAccountGuildMembershipsSDO_Membership(const CMsgDOTAAccountGuildMembershipsSDO_Membership& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(role_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
}

void CMsgDOTAAccountGuildMembershipsSDO_Membership::SharedCtor() {
  ::memset(&guild_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_) -
      reinterpret_cast<char*>(&guild_id_)) + sizeof(role_));
}

CMsgDOTAAccountGuildMembershipsSDO_Membership::~CMsgDOTAAccountGuildMembershipsSDO_Membership() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
  SharedDtor();
}

void CMsgDOTAAccountGuildMembershipsSDO_Membership::SharedDtor() {
}

void CMsgDOTAAccountGuildMembershipsSDO_Membership::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAAccountGuildMembershipsSDO_Membership& CMsgDOTAAccountGuildMembershipsSDO_Membership::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAAccountGuildMembershipsSDO_Membership_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAAccountGuildMembershipsSDO_Membership::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&role_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(role_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAAccountGuildMembershipsSDO_Membership::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAAccountGuildMembershipsSDO_Membership*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 role = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_role(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAAccountGuildMembershipsSDO_Membership::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 role = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_role(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &role_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAAccountGuildMembershipsSDO_Membership::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guild_id(), output);
  }

  // optional uint32 role = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->role(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
}

::google::protobuf::uint8* CMsgDOTAAccountGuildMembershipsSDO_Membership::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guild_id(), target);
  }

  // optional uint32 role = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->role(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
  return target;
}

size_t CMsgDOTAAccountGuildMembershipsSDO_Membership::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

    // optional uint32 role = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->role());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAAccountGuildMembershipsSDO_Membership::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAAccountGuildMembershipsSDO_Membership* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAAccountGuildMembershipsSDO_Membership>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
    MergeFrom(*source);
  }
}

void CMsgDOTAAccountGuildMembershipsSDO_Membership::MergeFrom(const CMsgDOTAAccountGuildMembershipsSDO_Membership& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      role_ = from.role_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAAccountGuildMembershipsSDO_Membership::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAAccountGuildMembershipsSDO_Membership::CopyFrom(const CMsgDOTAAccountGuildMembershipsSDO_Membership& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAAccountGuildMembershipsSDO_Membership::IsInitialized() const {
  return true;
}

void CMsgDOTAAccountGuildMembershipsSDO_Membership::Swap(CMsgDOTAAccountGuildMembershipsSDO_Membership* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAAccountGuildMembershipsSDO_Membership::InternalSwap(CMsgDOTAAccountGuildMembershipsSDO_Membership* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
  swap(role_, other->role_);
}

::google::protobuf::Metadata CMsgDOTAAccountGuildMembershipsSDO_Membership::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAAccountGuildMembershipsSDO_Invitation::InitAsDefaultInstance() {
}
class CMsgDOTAAccountGuildMembershipsSDO_Invitation::HasBitSetters {
 public:
  static void set_has_guild_id(CMsgDOTAAccountGuildMembershipsSDO_Invitation* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_time_sent(CMsgDOTAAccountGuildMembershipsSDO_Invitation* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_account_id_sender(CMsgDOTAAccountGuildMembershipsSDO_Invitation* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAAccountGuildMembershipsSDO_Invitation::kGuildIdFieldNumber;
const int CMsgDOTAAccountGuildMembershipsSDO_Invitation::kTimeSentFieldNumber;
const int CMsgDOTAAccountGuildMembershipsSDO_Invitation::kAccountIdSenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAAccountGuildMembershipsSDO_Invitation::CMsgDOTAAccountGuildMembershipsSDO_Invitation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
}
CMsgDOTAAccountGuildMembershipsSDO_Invitation::CMsgDOTAAccountGuildMembershipsSDO_Invitation(const CMsgDOTAAccountGuildMembershipsSDO_Invitation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&account_id_sender_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(account_id_sender_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
}

void CMsgDOTAAccountGuildMembershipsSDO_Invitation::SharedCtor() {
  ::memset(&guild_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&account_id_sender_) -
      reinterpret_cast<char*>(&guild_id_)) + sizeof(account_id_sender_));
}

CMsgDOTAAccountGuildMembershipsSDO_Invitation::~CMsgDOTAAccountGuildMembershipsSDO_Invitation() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
  SharedDtor();
}

void CMsgDOTAAccountGuildMembershipsSDO_Invitation::SharedDtor() {
}

void CMsgDOTAAccountGuildMembershipsSDO_Invitation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAAccountGuildMembershipsSDO_Invitation& CMsgDOTAAccountGuildMembershipsSDO_Invitation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAAccountGuildMembershipsSDO_Invitation_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAAccountGuildMembershipsSDO_Invitation::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&account_id_sender_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(account_id_sender_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAAccountGuildMembershipsSDO_Invitation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAAccountGuildMembershipsSDO_Invitation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 time_sent = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_time_sent(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 account_id_sender = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_account_id_sender(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAAccountGuildMembershipsSDO_Invitation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_sent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_time_sent(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_sent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 account_id_sender = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_account_id_sender(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_sender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAAccountGuildMembershipsSDO_Invitation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guild_id(), output);
  }

  // optional uint32 time_sent = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_sent(), output);
  }

  // optional uint32 account_id_sender = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->account_id_sender(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
}

::google::protobuf::uint8* CMsgDOTAAccountGuildMembershipsSDO_Invitation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guild_id(), target);
  }

  // optional uint32 time_sent = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_sent(), target);
  }

  // optional uint32 account_id_sender = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->account_id_sender(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
  return target;
}

size_t CMsgDOTAAccountGuildMembershipsSDO_Invitation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

    // optional uint32 time_sent = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_sent());
    }

    // optional uint32 account_id_sender = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id_sender());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAAccountGuildMembershipsSDO_Invitation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAAccountGuildMembershipsSDO_Invitation* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAAccountGuildMembershipsSDO_Invitation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
    MergeFrom(*source);
  }
}

void CMsgDOTAAccountGuildMembershipsSDO_Invitation::MergeFrom(const CMsgDOTAAccountGuildMembershipsSDO_Invitation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_sent_ = from.time_sent_;
    }
    if (cached_has_bits & 0x00000004u) {
      account_id_sender_ = from.account_id_sender_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAAccountGuildMembershipsSDO_Invitation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAAccountGuildMembershipsSDO_Invitation::CopyFrom(const CMsgDOTAAccountGuildMembershipsSDO_Invitation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAAccountGuildMembershipsSDO_Invitation::IsInitialized() const {
  return true;
}

void CMsgDOTAAccountGuildMembershipsSDO_Invitation::Swap(CMsgDOTAAccountGuildMembershipsSDO_Invitation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAAccountGuildMembershipsSDO_Invitation::InternalSwap(CMsgDOTAAccountGuildMembershipsSDO_Invitation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
  swap(time_sent_, other->time_sent_);
  swap(account_id_sender_, other->account_id_sender_);
}

::google::protobuf::Metadata CMsgDOTAAccountGuildMembershipsSDO_Invitation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAAccountGuildMembershipsSDO::InitAsDefaultInstance() {
}
class CMsgDOTAAccountGuildMembershipsSDO::HasBitSetters {
 public:
  static void set_has_account_id(CMsgDOTAAccountGuildMembershipsSDO* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAAccountGuildMembershipsSDO::kAccountIdFieldNumber;
const int CMsgDOTAAccountGuildMembershipsSDO::kMembershipsFieldNumber;
const int CMsgDOTAAccountGuildMembershipsSDO::kInvitationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAAccountGuildMembershipsSDO::CMsgDOTAAccountGuildMembershipsSDO()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
}
CMsgDOTAAccountGuildMembershipsSDO::CMsgDOTAAccountGuildMembershipsSDO(const CMsgDOTAAccountGuildMembershipsSDO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      memberships_(from.memberships_),
      invitations_(from.invitations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
}

void CMsgDOTAAccountGuildMembershipsSDO::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDOTAAccountGuildMembershipsSDO_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  account_id_ = 0u;
}

CMsgDOTAAccountGuildMembershipsSDO::~CMsgDOTAAccountGuildMembershipsSDO() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
  SharedDtor();
}

void CMsgDOTAAccountGuildMembershipsSDO::SharedDtor() {
}

void CMsgDOTAAccountGuildMembershipsSDO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAAccountGuildMembershipsSDO& CMsgDOTAAccountGuildMembershipsSDO::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAAccountGuildMembershipsSDO_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAAccountGuildMembershipsSDO::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  memberships_.Clear();
  invitations_.Clear();
  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAAccountGuildMembershipsSDO::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAAccountGuildMembershipsSDO*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership memberships = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Membership::_InternalParse;
          object = msg->add_memberships();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation invitations = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Invitation::_InternalParse;
          object = msg->add_invitations();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAAccountGuildMembershipsSDO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership memberships = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_memberships()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation invitations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_invitations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAAccountGuildMembershipsSDO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // repeated .proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership memberships = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->memberships_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->memberships(static_cast<int>(i)),
      output);
  }

  // repeated .proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation invitations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invitations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->invitations(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
}

::google::protobuf::uint8* CMsgDOTAAccountGuildMembershipsSDO::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // repeated .proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership memberships = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->memberships_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->memberships(static_cast<int>(i)), target);
  }

  // repeated .proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation invitations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invitations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->invitations(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
  return target;
}

size_t CMsgDOTAAccountGuildMembershipsSDO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Membership memberships = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->memberships_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->memberships(static_cast<int>(i)));
    }
  }

  // repeated .proto.dota.CMsgDOTAAccountGuildMembershipsSDO.Invitation invitations = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->invitations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->invitations(static_cast<int>(i)));
    }
  }

  // optional uint32 account_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAAccountGuildMembershipsSDO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAAccountGuildMembershipsSDO* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAAccountGuildMembershipsSDO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
    MergeFrom(*source);
  }
}

void CMsgDOTAAccountGuildMembershipsSDO::MergeFrom(const CMsgDOTAAccountGuildMembershipsSDO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  memberships_.MergeFrom(from.memberships_);
  invitations_.MergeFrom(from.invitations_);
  if (from.has_account_id()) {
    set_account_id(from.account_id());
  }
}

void CMsgDOTAAccountGuildMembershipsSDO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAAccountGuildMembershipsSDO::CopyFrom(const CMsgDOTAAccountGuildMembershipsSDO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAAccountGuildMembershipsSDO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAAccountGuildMembershipsSDO::IsInitialized() const {
  return true;
}

void CMsgDOTAAccountGuildMembershipsSDO::Swap(CMsgDOTAAccountGuildMembershipsSDO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAAccountGuildMembershipsSDO::InternalSwap(CMsgDOTAAccountGuildMembershipsSDO* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&memberships_)->InternalSwap(CastToBase(&other->memberships_));
  CastToBase(&invitations_)->InternalSwap(CastToBase(&other->invitations_));
  swap(account_id_, other->account_id_);
}

::google::protobuf::Metadata CMsgDOTAAccountGuildMembershipsSDO::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildCreateRequest::InitAsDefaultInstance() {
}
class CMsgDOTAGuildCreateRequest::HasBitSetters {
 public:
  static void set_has_name(CMsgDOTAGuildCreateRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_tag(CMsgDOTAGuildCreateRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_logo(CMsgDOTAGuildCreateRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_base_logo(CMsgDOTAGuildCreateRequest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_banner_logo(CMsgDOTAGuildCreateRequest* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildCreateRequest::kNameFieldNumber;
const int CMsgDOTAGuildCreateRequest::kTagFieldNumber;
const int CMsgDOTAGuildCreateRequest::kLogoFieldNumber;
const int CMsgDOTAGuildCreateRequest::kBaseLogoFieldNumber;
const int CMsgDOTAGuildCreateRequest::kBannerLogoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildCreateRequest::CMsgDOTAGuildCreateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildCreateRequest)
}
CMsgDOTAGuildCreateRequest::CMsgDOTAGuildCreateRequest(const CMsgDOTAGuildCreateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag()) {
    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  ::memcpy(&logo_, &from.logo_,
    static_cast<size_t>(reinterpret_cast<char*>(&banner_logo_) -
    reinterpret_cast<char*>(&logo_)) + sizeof(banner_logo_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildCreateRequest)
}

void CMsgDOTAGuildCreateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDOTAGuildCreateRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&logo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&banner_logo_) -
      reinterpret_cast<char*>(&logo_)) + sizeof(banner_logo_));
}

CMsgDOTAGuildCreateRequest::~CMsgDOTAGuildCreateRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildCreateRequest)
  SharedDtor();
}

void CMsgDOTAGuildCreateRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDOTAGuildCreateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildCreateRequest& CMsgDOTAGuildCreateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildCreateRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      tag_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&logo_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&banner_logo_) -
        reinterpret_cast<char*>(&logo_)) + sizeof(banner_logo_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildCreateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildCreateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDOTAGuildCreateRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string tag = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDOTAGuildCreateRequest.tag");
        object = msg->mutable_tag();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint64 logo = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_logo(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 base_logo = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_base_logo(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 banner_logo = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_banner_logo(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildCreateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildCreateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDOTAGuildCreateRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag().data(), static_cast<int>(this->tag().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDOTAGuildCreateRequest.tag");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 logo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_logo(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 base_logo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_base_logo(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &base_logo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 banner_logo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_banner_logo(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &banner_logo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildCreateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildCreateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildCreateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildCreateRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string tag = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildCreateRequest.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tag(), output);
  }

  // optional uint64 logo = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->logo(), output);
  }

  // optional uint64 base_logo = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->base_logo(), output);
  }

  // optional uint64 banner_logo = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->banner_logo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildCreateRequest)
}

::google::protobuf::uint8* CMsgDOTAGuildCreateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildCreateRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string tag = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildCreateRequest.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tag(), target);
  }

  // optional uint64 logo = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->logo(), target);
  }

  // optional uint64 base_logo = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->base_logo(), target);
  }

  // optional uint64 banner_logo = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->banner_logo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildCreateRequest)
  return target;
}

size_t CMsgDOTAGuildCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildCreateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string tag = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag());
    }

    // optional uint64 logo = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->logo());
    }

    // optional uint64 base_logo = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->base_logo());
    }

    // optional uint64 banner_logo = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->banner_logo());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildCreateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildCreateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildCreateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildCreateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildCreateRequest)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildCreateRequest::MergeFrom(const CMsgDOTAGuildCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
    }
    if (cached_has_bits & 0x00000004u) {
      logo_ = from.logo_;
    }
    if (cached_has_bits & 0x00000008u) {
      base_logo_ = from.base_logo_;
    }
    if (cached_has_bits & 0x00000010u) {
      banner_logo_ = from.banner_logo_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildCreateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildCreateRequest::CopyFrom(const CMsgDOTAGuildCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildCreateRequest::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildCreateRequest::Swap(CMsgDOTAGuildCreateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildCreateRequest::InternalSwap(CMsgDOTAGuildCreateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tag_.Swap(&other->tag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(logo_, other->logo_);
  swap(base_logo_, other->base_logo_);
  swap(banner_logo_, other->banner_logo_);
}

::google::protobuf::Metadata CMsgDOTAGuildCreateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildCreateResponse::InitAsDefaultInstance() {
}
class CMsgDOTAGuildCreateResponse::HasBitSetters {
 public:
  static void set_has_guild_id(CMsgDOTAGuildCreateResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildCreateResponse::kGuildIdFieldNumber;
const int CMsgDOTAGuildCreateResponse::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildCreateResponse::CMsgDOTAGuildCreateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildCreateResponse)
}
CMsgDOTAGuildCreateResponse::CMsgDOTAGuildCreateResponse(const CMsgDOTAGuildCreateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildCreateResponse)
}

void CMsgDOTAGuildCreateResponse::SharedCtor() {
  guild_id_ = 0u;
}

CMsgDOTAGuildCreateResponse::~CMsgDOTAGuildCreateResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildCreateResponse)
  SharedDtor();
}

void CMsgDOTAGuildCreateResponse::SharedDtor() {
}

void CMsgDOTAGuildCreateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildCreateResponse& CMsgDOTAGuildCreateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildCreateResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildCreateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildCreateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgDOTAGuildCreateResponse.EError errors = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
            if (!::proto::dota::CMsgDOTAGuildCreateResponse_EError_IsValid(val)) {
              ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
              break;
            }
            msg->add_errors(static_cast<::proto::dota::CMsgDOTAGuildCreateResponse_EError>(val));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetEnumValidator(::proto::dota::CMsgDOTAGuildCreateResponse_EError_IsValid, msg->mutable_unknown_fields(), 2);
        parser_till_end = ::google::protobuf::internal::PackedValidEnumParser;
        object = msg->mutable_errors();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildCreateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildCreateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgDOTAGuildCreateResponse.EError errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgDOTAGuildCreateResponse_EError_IsValid(value)) {
            add_errors(static_cast< ::proto::dota::CMsgDOTAGuildCreateResponse_EError >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::proto::dota::CMsgDOTAGuildCreateResponse_EError_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildCreateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildCreateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildCreateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guild_id(), output);
  }

  // repeated .proto.dota.CMsgDOTAGuildCreateResponse.EError errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildCreateResponse)
}

::google::protobuf::uint8* CMsgDOTAGuildCreateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guild_id(), target);
  }

  // repeated .proto.dota.CMsgDOTAGuildCreateResponse.EError errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildCreateResponse)
  return target;
}

size_t CMsgDOTAGuildCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildCreateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgDOTAGuildCreateResponse.EError errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->errors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional uint32 guild_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guild_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildCreateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildCreateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildCreateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildCreateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildCreateResponse)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildCreateResponse::MergeFrom(const CMsgDOTAGuildCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_guild_id()) {
    set_guild_id(from.guild_id());
  }
}

void CMsgDOTAGuildCreateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildCreateResponse::CopyFrom(const CMsgDOTAGuildCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildCreateResponse::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildCreateResponse::Swap(CMsgDOTAGuildCreateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildCreateResponse::InternalSwap(CMsgDOTAGuildCreateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errors_.InternalSwap(&other->errors_);
  swap(guild_id_, other->guild_id_);
}

::google::protobuf::Metadata CMsgDOTAGuildCreateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildSetAccountRoleRequest::InitAsDefaultInstance() {
}
class CMsgDOTAGuildSetAccountRoleRequest::HasBitSetters {
 public:
  static void set_has_guild_id(CMsgDOTAGuildSetAccountRoleRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_target_account_id(CMsgDOTAGuildSetAccountRoleRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_target_role(CMsgDOTAGuildSetAccountRoleRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildSetAccountRoleRequest::kGuildIdFieldNumber;
const int CMsgDOTAGuildSetAccountRoleRequest::kTargetAccountIdFieldNumber;
const int CMsgDOTAGuildSetAccountRoleRequest::kTargetRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildSetAccountRoleRequest::CMsgDOTAGuildSetAccountRoleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
}
CMsgDOTAGuildSetAccountRoleRequest::CMsgDOTAGuildSetAccountRoleRequest(const CMsgDOTAGuildSetAccountRoleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_role_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(target_role_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
}

void CMsgDOTAGuildSetAccountRoleRequest::SharedCtor() {
  ::memset(&guild_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_role_) -
      reinterpret_cast<char*>(&guild_id_)) + sizeof(target_role_));
}

CMsgDOTAGuildSetAccountRoleRequest::~CMsgDOTAGuildSetAccountRoleRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
  SharedDtor();
}

void CMsgDOTAGuildSetAccountRoleRequest::SharedDtor() {
}

void CMsgDOTAGuildSetAccountRoleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildSetAccountRoleRequest& CMsgDOTAGuildSetAccountRoleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildSetAccountRoleRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildSetAccountRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_role_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(target_role_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildSetAccountRoleRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildSetAccountRoleRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 target_account_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_target_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 target_role = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_target_role(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildSetAccountRoleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_target_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_role = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_target_role(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_role_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildSetAccountRoleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guild_id(), output);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_account_id(), output);
  }

  // optional uint32 target_role = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_role(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
}

::google::protobuf::uint8* CMsgDOTAGuildSetAccountRoleRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guild_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_account_id(), target);
  }

  // optional uint32 target_role = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_role(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
  return target;
}

size_t CMsgDOTAGuildSetAccountRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_account_id());
    }

    // optional uint32 target_role = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_role());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildSetAccountRoleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildSetAccountRoleRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildSetAccountRoleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildSetAccountRoleRequest::MergeFrom(const CMsgDOTAGuildSetAccountRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_account_id_ = from.target_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      target_role_ = from.target_role_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildSetAccountRoleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildSetAccountRoleRequest::CopyFrom(const CMsgDOTAGuildSetAccountRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildSetAccountRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildSetAccountRoleRequest::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildSetAccountRoleRequest::Swap(CMsgDOTAGuildSetAccountRoleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildSetAccountRoleRequest::InternalSwap(CMsgDOTAGuildSetAccountRoleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
  swap(target_account_id_, other->target_account_id_);
  swap(target_role_, other->target_role_);
}

::google::protobuf::Metadata CMsgDOTAGuildSetAccountRoleRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildSetAccountRoleResponse::InitAsDefaultInstance() {
}
class CMsgDOTAGuildSetAccountRoleResponse::HasBitSetters {
 public:
  static void set_has_result(CMsgDOTAGuildSetAccountRoleResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildSetAccountRoleResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildSetAccountRoleResponse::CMsgDOTAGuildSetAccountRoleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
}
CMsgDOTAGuildSetAccountRoleResponse::CMsgDOTAGuildSetAccountRoleResponse(const CMsgDOTAGuildSetAccountRoleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
}

void CMsgDOTAGuildSetAccountRoleResponse::SharedCtor() {
  result_ = 0;
}

CMsgDOTAGuildSetAccountRoleResponse::~CMsgDOTAGuildSetAccountRoleResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
  SharedDtor();
}

void CMsgDOTAGuildSetAccountRoleResponse::SharedDtor() {
}

void CMsgDOTAGuildSetAccountRoleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildSetAccountRoleResponse& CMsgDOTAGuildSetAccountRoleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildSetAccountRoleResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildSetAccountRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildSetAccountRoleResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildSetAccountRoleResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgDOTAGuildSetAccountRoleResponse.EResult result = 1 [default = SUCCESS];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgDOTAGuildSetAccountRoleResponse_EResult_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_result(static_cast<::proto::dota::CMsgDOTAGuildSetAccountRoleResponse_EResult>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildSetAccountRoleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgDOTAGuildSetAccountRoleResponse.EResult result = 1 [default = SUCCESS];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgDOTAGuildSetAccountRoleResponse_EResult_IsValid(value)) {
            set_result(static_cast< ::proto::dota::CMsgDOTAGuildSetAccountRoleResponse_EResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildSetAccountRoleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgDOTAGuildSetAccountRoleResponse.EResult result = 1 [default = SUCCESS];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
}

::google::protobuf::uint8* CMsgDOTAGuildSetAccountRoleResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgDOTAGuildSetAccountRoleResponse.EResult result = 1 [default = SUCCESS];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
  return target;
}

size_t CMsgDOTAGuildSetAccountRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.dota.CMsgDOTAGuildSetAccountRoleResponse.EResult result = 1 [default = SUCCESS];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildSetAccountRoleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildSetAccountRoleResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildSetAccountRoleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildSetAccountRoleResponse::MergeFrom(const CMsgDOTAGuildSetAccountRoleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgDOTAGuildSetAccountRoleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildSetAccountRoleResponse::CopyFrom(const CMsgDOTAGuildSetAccountRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildSetAccountRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildSetAccountRoleResponse::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildSetAccountRoleResponse::Swap(CMsgDOTAGuildSetAccountRoleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildSetAccountRoleResponse::InternalSwap(CMsgDOTAGuildSetAccountRoleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::google::protobuf::Metadata CMsgDOTAGuildSetAccountRoleResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildInviteAccountRequest::InitAsDefaultInstance() {
}
class CMsgDOTAGuildInviteAccountRequest::HasBitSetters {
 public:
  static void set_has_guild_id(CMsgDOTAGuildInviteAccountRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_target_account_id(CMsgDOTAGuildInviteAccountRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildInviteAccountRequest::kGuildIdFieldNumber;
const int CMsgDOTAGuildInviteAccountRequest::kTargetAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildInviteAccountRequest::CMsgDOTAGuildInviteAccountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildInviteAccountRequest)
}
CMsgDOTAGuildInviteAccountRequest::CMsgDOTAGuildInviteAccountRequest(const CMsgDOTAGuildInviteAccountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_account_id_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildInviteAccountRequest)
}

void CMsgDOTAGuildInviteAccountRequest::SharedCtor() {
  ::memset(&guild_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_account_id_) -
      reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
}

CMsgDOTAGuildInviteAccountRequest::~CMsgDOTAGuildInviteAccountRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildInviteAccountRequest)
  SharedDtor();
}

void CMsgDOTAGuildInviteAccountRequest::SharedDtor() {
}

void CMsgDOTAGuildInviteAccountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildInviteAccountRequest& CMsgDOTAGuildInviteAccountRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildInviteAccountRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildInviteAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildInviteAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_account_id_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildInviteAccountRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildInviteAccountRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 target_account_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_target_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildInviteAccountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildInviteAccountRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_target_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildInviteAccountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildInviteAccountRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildInviteAccountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildInviteAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guild_id(), output);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_account_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildInviteAccountRequest)
}

::google::protobuf::uint8* CMsgDOTAGuildInviteAccountRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildInviteAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guild_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_account_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildInviteAccountRequest)
  return target;
}

size_t CMsgDOTAGuildInviteAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildInviteAccountRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildInviteAccountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildInviteAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildInviteAccountRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildInviteAccountRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildInviteAccountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildInviteAccountRequest)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildInviteAccountRequest::MergeFrom(const CMsgDOTAGuildInviteAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildInviteAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_account_id_ = from.target_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildInviteAccountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildInviteAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildInviteAccountRequest::CopyFrom(const CMsgDOTAGuildInviteAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildInviteAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildInviteAccountRequest::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildInviteAccountRequest::Swap(CMsgDOTAGuildInviteAccountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildInviteAccountRequest::InternalSwap(CMsgDOTAGuildInviteAccountRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
  swap(target_account_id_, other->target_account_id_);
}

::google::protobuf::Metadata CMsgDOTAGuildInviteAccountRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildInviteAccountResponse::InitAsDefaultInstance() {
}
class CMsgDOTAGuildInviteAccountResponse::HasBitSetters {
 public:
  static void set_has_result(CMsgDOTAGuildInviteAccountResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildInviteAccountResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildInviteAccountResponse::CMsgDOTAGuildInviteAccountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildInviteAccountResponse)
}
CMsgDOTAGuildInviteAccountResponse::CMsgDOTAGuildInviteAccountResponse(const CMsgDOTAGuildInviteAccountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildInviteAccountResponse)
}

void CMsgDOTAGuildInviteAccountResponse::SharedCtor() {
  result_ = 0;
}

CMsgDOTAGuildInviteAccountResponse::~CMsgDOTAGuildInviteAccountResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildInviteAccountResponse)
  SharedDtor();
}

void CMsgDOTAGuildInviteAccountResponse::SharedDtor() {
}

void CMsgDOTAGuildInviteAccountResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildInviteAccountResponse& CMsgDOTAGuildInviteAccountResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildInviteAccountResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildInviteAccountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildInviteAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildInviteAccountResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildInviteAccountResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgDOTAGuildInviteAccountResponse.EResult result = 1 [default = SUCCESS];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgDOTAGuildInviteAccountResponse_EResult_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_result(static_cast<::proto::dota::CMsgDOTAGuildInviteAccountResponse_EResult>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildInviteAccountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildInviteAccountResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgDOTAGuildInviteAccountResponse.EResult result = 1 [default = SUCCESS];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgDOTAGuildInviteAccountResponse_EResult_IsValid(value)) {
            set_result(static_cast< ::proto::dota::CMsgDOTAGuildInviteAccountResponse_EResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildInviteAccountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildInviteAccountResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildInviteAccountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildInviteAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgDOTAGuildInviteAccountResponse.EResult result = 1 [default = SUCCESS];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildInviteAccountResponse)
}

::google::protobuf::uint8* CMsgDOTAGuildInviteAccountResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildInviteAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgDOTAGuildInviteAccountResponse.EResult result = 1 [default = SUCCESS];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildInviteAccountResponse)
  return target;
}

size_t CMsgDOTAGuildInviteAccountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildInviteAccountResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.dota.CMsgDOTAGuildInviteAccountResponse.EResult result = 1 [default = SUCCESS];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildInviteAccountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildInviteAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildInviteAccountResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildInviteAccountResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildInviteAccountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildInviteAccountResponse)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildInviteAccountResponse::MergeFrom(const CMsgDOTAGuildInviteAccountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildInviteAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgDOTAGuildInviteAccountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildInviteAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildInviteAccountResponse::CopyFrom(const CMsgDOTAGuildInviteAccountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildInviteAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildInviteAccountResponse::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildInviteAccountResponse::Swap(CMsgDOTAGuildInviteAccountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildInviteAccountResponse::InternalSwap(CMsgDOTAGuildInviteAccountResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::google::protobuf::Metadata CMsgDOTAGuildInviteAccountResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildCancelInviteRequest::InitAsDefaultInstance() {
}
class CMsgDOTAGuildCancelInviteRequest::HasBitSetters {
 public:
  static void set_has_guild_id(CMsgDOTAGuildCancelInviteRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_target_account_id(CMsgDOTAGuildCancelInviteRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildCancelInviteRequest::kGuildIdFieldNumber;
const int CMsgDOTAGuildCancelInviteRequest::kTargetAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildCancelInviteRequest::CMsgDOTAGuildCancelInviteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildCancelInviteRequest)
}
CMsgDOTAGuildCancelInviteRequest::CMsgDOTAGuildCancelInviteRequest(const CMsgDOTAGuildCancelInviteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_account_id_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildCancelInviteRequest)
}

void CMsgDOTAGuildCancelInviteRequest::SharedCtor() {
  ::memset(&guild_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_account_id_) -
      reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
}

CMsgDOTAGuildCancelInviteRequest::~CMsgDOTAGuildCancelInviteRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildCancelInviteRequest)
  SharedDtor();
}

void CMsgDOTAGuildCancelInviteRequest::SharedDtor() {
}

void CMsgDOTAGuildCancelInviteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildCancelInviteRequest& CMsgDOTAGuildCancelInviteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildCancelInviteRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildCancelInviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildCancelInviteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_account_id_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildCancelInviteRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildCancelInviteRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 target_account_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_target_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildCancelInviteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildCancelInviteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_target_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildCancelInviteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildCancelInviteRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildCancelInviteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildCancelInviteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guild_id(), output);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_account_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildCancelInviteRequest)
}

::google::protobuf::uint8* CMsgDOTAGuildCancelInviteRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildCancelInviteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guild_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_account_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildCancelInviteRequest)
  return target;
}

size_t CMsgDOTAGuildCancelInviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildCancelInviteRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildCancelInviteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildCancelInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildCancelInviteRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildCancelInviteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildCancelInviteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildCancelInviteRequest)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildCancelInviteRequest::MergeFrom(const CMsgDOTAGuildCancelInviteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildCancelInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_account_id_ = from.target_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildCancelInviteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildCancelInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildCancelInviteRequest::CopyFrom(const CMsgDOTAGuildCancelInviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildCancelInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildCancelInviteRequest::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildCancelInviteRequest::Swap(CMsgDOTAGuildCancelInviteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildCancelInviteRequest::InternalSwap(CMsgDOTAGuildCancelInviteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
  swap(target_account_id_, other->target_account_id_);
}

::google::protobuf::Metadata CMsgDOTAGuildCancelInviteRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildCancelInviteResponse::InitAsDefaultInstance() {
}
class CMsgDOTAGuildCancelInviteResponse::HasBitSetters {
 public:
  static void set_has_result(CMsgDOTAGuildCancelInviteResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildCancelInviteResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildCancelInviteResponse::CMsgDOTAGuildCancelInviteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildCancelInviteResponse)
}
CMsgDOTAGuildCancelInviteResponse::CMsgDOTAGuildCancelInviteResponse(const CMsgDOTAGuildCancelInviteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildCancelInviteResponse)
}

void CMsgDOTAGuildCancelInviteResponse::SharedCtor() {
  result_ = 0;
}

CMsgDOTAGuildCancelInviteResponse::~CMsgDOTAGuildCancelInviteResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildCancelInviteResponse)
  SharedDtor();
}

void CMsgDOTAGuildCancelInviteResponse::SharedDtor() {
}

void CMsgDOTAGuildCancelInviteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildCancelInviteResponse& CMsgDOTAGuildCancelInviteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildCancelInviteResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildCancelInviteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildCancelInviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildCancelInviteResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildCancelInviteResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgDOTAGuildCancelInviteResponse.EResult result = 1 [default = SUCCESS];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgDOTAGuildCancelInviteResponse_EResult_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_result(static_cast<::proto::dota::CMsgDOTAGuildCancelInviteResponse_EResult>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildCancelInviteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildCancelInviteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgDOTAGuildCancelInviteResponse.EResult result = 1 [default = SUCCESS];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgDOTAGuildCancelInviteResponse_EResult_IsValid(value)) {
            set_result(static_cast< ::proto::dota::CMsgDOTAGuildCancelInviteResponse_EResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildCancelInviteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildCancelInviteResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildCancelInviteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildCancelInviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgDOTAGuildCancelInviteResponse.EResult result = 1 [default = SUCCESS];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildCancelInviteResponse)
}

::google::protobuf::uint8* CMsgDOTAGuildCancelInviteResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildCancelInviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgDOTAGuildCancelInviteResponse.EResult result = 1 [default = SUCCESS];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildCancelInviteResponse)
  return target;
}

size_t CMsgDOTAGuildCancelInviteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildCancelInviteResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.dota.CMsgDOTAGuildCancelInviteResponse.EResult result = 1 [default = SUCCESS];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildCancelInviteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildCancelInviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildCancelInviteResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildCancelInviteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildCancelInviteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildCancelInviteResponse)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildCancelInviteResponse::MergeFrom(const CMsgDOTAGuildCancelInviteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildCancelInviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgDOTAGuildCancelInviteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildCancelInviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildCancelInviteResponse::CopyFrom(const CMsgDOTAGuildCancelInviteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildCancelInviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildCancelInviteResponse::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildCancelInviteResponse::Swap(CMsgDOTAGuildCancelInviteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildCancelInviteResponse::InternalSwap(CMsgDOTAGuildCancelInviteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::google::protobuf::Metadata CMsgDOTAGuildCancelInviteResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildUpdateDetailsRequest::InitAsDefaultInstance() {
}
class CMsgDOTAGuildUpdateDetailsRequest::HasBitSetters {
 public:
  static void set_has_guild_id(CMsgDOTAGuildUpdateDetailsRequest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_logo(CMsgDOTAGuildUpdateDetailsRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_base_logo(CMsgDOTAGuildUpdateDetailsRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_banner_logo(CMsgDOTAGuildUpdateDetailsRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildUpdateDetailsRequest::kGuildIdFieldNumber;
const int CMsgDOTAGuildUpdateDetailsRequest::kLogoFieldNumber;
const int CMsgDOTAGuildUpdateDetailsRequest::kBaseLogoFieldNumber;
const int CMsgDOTAGuildUpdateDetailsRequest::kBannerLogoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildUpdateDetailsRequest::CMsgDOTAGuildUpdateDetailsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
}
CMsgDOTAGuildUpdateDetailsRequest::CMsgDOTAGuildUpdateDetailsRequest(const CMsgDOTAGuildUpdateDetailsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&logo_, &from.logo_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&logo_)) + sizeof(guild_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
}

void CMsgDOTAGuildUpdateDetailsRequest::SharedCtor() {
  ::memset(&logo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_id_) -
      reinterpret_cast<char*>(&logo_)) + sizeof(guild_id_));
}

CMsgDOTAGuildUpdateDetailsRequest::~CMsgDOTAGuildUpdateDetailsRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
  SharedDtor();
}

void CMsgDOTAGuildUpdateDetailsRequest::SharedDtor() {
}

void CMsgDOTAGuildUpdateDetailsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildUpdateDetailsRequest& CMsgDOTAGuildUpdateDetailsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildUpdateDetailsRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildUpdateDetailsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&logo_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_id_) -
        reinterpret_cast<char*>(&logo_)) + sizeof(guild_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildUpdateDetailsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildUpdateDetailsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 logo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_logo(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 base_logo = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_base_logo(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 banner_logo = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_banner_logo(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildUpdateDetailsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 logo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_logo(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 base_logo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_base_logo(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &base_logo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 banner_logo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_banner_logo(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &banner_logo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildUpdateDetailsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guild_id(), output);
  }

  // optional uint64 logo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->logo(), output);
  }

  // optional uint64 base_logo = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->base_logo(), output);
  }

  // optional uint64 banner_logo = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->banner_logo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
}

::google::protobuf::uint8* CMsgDOTAGuildUpdateDetailsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guild_id(), target);
  }

  // optional uint64 logo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->logo(), target);
  }

  // optional uint64 base_logo = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->base_logo(), target);
  }

  // optional uint64 banner_logo = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->banner_logo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
  return target;
}

size_t CMsgDOTAGuildUpdateDetailsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint64 logo = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->logo());
    }

    // optional uint64 base_logo = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->base_logo());
    }

    // optional uint64 banner_logo = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->banner_logo());
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildUpdateDetailsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildUpdateDetailsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildUpdateDetailsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildUpdateDetailsRequest::MergeFrom(const CMsgDOTAGuildUpdateDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      logo_ = from.logo_;
    }
    if (cached_has_bits & 0x00000002u) {
      base_logo_ = from.base_logo_;
    }
    if (cached_has_bits & 0x00000004u) {
      banner_logo_ = from.banner_logo_;
    }
    if (cached_has_bits & 0x00000008u) {
      guild_id_ = from.guild_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildUpdateDetailsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildUpdateDetailsRequest::CopyFrom(const CMsgDOTAGuildUpdateDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildUpdateDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildUpdateDetailsRequest::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildUpdateDetailsRequest::Swap(CMsgDOTAGuildUpdateDetailsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildUpdateDetailsRequest::InternalSwap(CMsgDOTAGuildUpdateDetailsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(logo_, other->logo_);
  swap(base_logo_, other->base_logo_);
  swap(banner_logo_, other->banner_logo_);
  swap(guild_id_, other->guild_id_);
}

::google::protobuf::Metadata CMsgDOTAGuildUpdateDetailsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildUpdateDetailsResponse::InitAsDefaultInstance() {
}
class CMsgDOTAGuildUpdateDetailsResponse::HasBitSetters {
 public:
  static void set_has_result(CMsgDOTAGuildUpdateDetailsResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildUpdateDetailsResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildUpdateDetailsResponse::CMsgDOTAGuildUpdateDetailsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
}
CMsgDOTAGuildUpdateDetailsResponse::CMsgDOTAGuildUpdateDetailsResponse(const CMsgDOTAGuildUpdateDetailsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
}

void CMsgDOTAGuildUpdateDetailsResponse::SharedCtor() {
  result_ = 0;
}

CMsgDOTAGuildUpdateDetailsResponse::~CMsgDOTAGuildUpdateDetailsResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
  SharedDtor();
}

void CMsgDOTAGuildUpdateDetailsResponse::SharedDtor() {
}

void CMsgDOTAGuildUpdateDetailsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildUpdateDetailsResponse& CMsgDOTAGuildUpdateDetailsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildUpdateDetailsResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildUpdateDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildUpdateDetailsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildUpdateDetailsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgDOTAGuildUpdateDetailsResponse.EResult result = 1 [default = SUCCESS];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgDOTAGuildUpdateDetailsResponse_EResult_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_result(static_cast<::proto::dota::CMsgDOTAGuildUpdateDetailsResponse_EResult>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildUpdateDetailsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgDOTAGuildUpdateDetailsResponse.EResult result = 1 [default = SUCCESS];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgDOTAGuildUpdateDetailsResponse_EResult_IsValid(value)) {
            set_result(static_cast< ::proto::dota::CMsgDOTAGuildUpdateDetailsResponse_EResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildUpdateDetailsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgDOTAGuildUpdateDetailsResponse.EResult result = 1 [default = SUCCESS];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
}

::google::protobuf::uint8* CMsgDOTAGuildUpdateDetailsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgDOTAGuildUpdateDetailsResponse.EResult result = 1 [default = SUCCESS];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
  return target;
}

size_t CMsgDOTAGuildUpdateDetailsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.dota.CMsgDOTAGuildUpdateDetailsResponse.EResult result = 1 [default = SUCCESS];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildUpdateDetailsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildUpdateDetailsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildUpdateDetailsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildUpdateDetailsResponse::MergeFrom(const CMsgDOTAGuildUpdateDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgDOTAGuildUpdateDetailsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildUpdateDetailsResponse::CopyFrom(const CMsgDOTAGuildUpdateDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildUpdateDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildUpdateDetailsResponse::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildUpdateDetailsResponse::Swap(CMsgDOTAGuildUpdateDetailsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildUpdateDetailsResponse::InternalSwap(CMsgDOTAGuildUpdateDetailsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::google::protobuf::Metadata CMsgDOTAGuildUpdateDetailsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::InitAsDefaultInstance() {
}
class CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::HasBitSetters {
 public:
  static void set_has_party_id(CMsgDOTAGCToGCUpdateOpenGuildPartyRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_guild_id(CMsgDOTAGCToGCUpdateOpenGuildPartyRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_description(CMsgDOTAGCToGCUpdateOpenGuildPartyRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::kPartyIdFieldNumber;
const int CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::kGuildIdFieldNumber;
const int CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::kMemberAccountIdsFieldNumber;
const int CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
}
CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest(const CMsgDOTAGCToGCUpdateOpenGuildPartyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      member_account_ids_(from.member_account_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&party_id_, &from.party_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&party_id_)) + sizeof(guild_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDOTAGCToGCUpdateOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&party_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_id_) -
      reinterpret_cast<char*>(&party_id_)) + sizeof(guild_id_));
}

CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::~CMsgDOTAGCToGCUpdateOpenGuildPartyRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
  SharedDtor();
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGCToGCUpdateOpenGuildPartyRequest& CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGCToGCUpdateOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_account_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    description_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&party_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_id_) -
        reinterpret_cast<char*>(&party_id_)) + sizeof(guild_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGCToGCUpdateOpenGuildPartyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 party_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_party_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 guild_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 member_account_ids = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 24) {
          do {
            msg->add_member_account_ids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_member_account_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional string description = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 party_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_party_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &party_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 guild_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 member_account_ids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_member_account_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_member_account_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 party_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->party_id(), output);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->guild_id(), output);
  }

  // repeated uint32 member_account_ids = 3;
  for (int i = 0, n = this->member_account_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->member_account_ids(i), output);
  }

  // optional string description = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
}

::google::protobuf::uint8* CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 party_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->party_id(), target);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->guild_id(), target);
  }

  // repeated uint32 member_account_ids = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->member_account_ids_, target);

  // optional string description = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
  return target;
}

size_t CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 member_account_ids = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->member_account_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->member_account_ids_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string description = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional uint64 party_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->party_id());
    }

    // optional uint32 guild_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGCToGCUpdateOpenGuildPartyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGCToGCUpdateOpenGuildPartyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
    MergeFrom(*source);
  }
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::MergeFrom(const CMsgDOTAGCToGCUpdateOpenGuildPartyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_account_ids_.MergeFrom(from.member_account_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000002u) {
      party_id_ = from.party_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      guild_id_ = from.guild_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::CopyFrom(const CMsgDOTAGCToGCUpdateOpenGuildPartyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::IsInitialized() const {
  return true;
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::Swap(CMsgDOTAGCToGCUpdateOpenGuildPartyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::InternalSwap(CMsgDOTAGCToGCUpdateOpenGuildPartyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  member_account_ids_.InternalSwap(&other->member_account_ids_);
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(party_id_, other->party_id_);
  swap(guild_id_, other->guild_id_);
}

::google::protobuf::Metadata CMsgDOTAGCToGCUpdateOpenGuildPartyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::InitAsDefaultInstance() {
}
class CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::HasBitSetters {
 public:
  static void set_has_maintain_association(CMsgDOTAGCToGCUpdateOpenGuildPartyResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::kMaintainAssociationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::CMsgDOTAGCToGCUpdateOpenGuildPartyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
}
CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::CMsgDOTAGCToGCUpdateOpenGuildPartyResponse(const CMsgDOTAGCToGCUpdateOpenGuildPartyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  maintain_association_ = from.maintain_association_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::SharedCtor() {
  maintain_association_ = false;
}

CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::~CMsgDOTAGCToGCUpdateOpenGuildPartyResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
  SharedDtor();
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::SharedDtor() {
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGCToGCUpdateOpenGuildPartyResponse& CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGCToGCUpdateOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  maintain_association_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGCToGCUpdateOpenGuildPartyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool maintain_association = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_maintain_association(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool maintain_association = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_maintain_association(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &maintain_association_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool maintain_association = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->maintain_association(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
}

::google::protobuf::uint8* CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool maintain_association = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->maintain_association(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
  return target;
}

size_t CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool maintain_association = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGCToGCUpdateOpenGuildPartyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGCToGCUpdateOpenGuildPartyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
    MergeFrom(*source);
  }
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::MergeFrom(const CMsgDOTAGCToGCUpdateOpenGuildPartyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_maintain_association()) {
    set_maintain_association(from.maintain_association());
  }
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::CopyFrom(const CMsgDOTAGCToGCUpdateOpenGuildPartyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGCToGCUpdateOpenGuildPartyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::IsInitialized() const {
  return true;
}

void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::Swap(CMsgDOTAGCToGCUpdateOpenGuildPartyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::InternalSwap(CMsgDOTAGCToGCUpdateOpenGuildPartyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(maintain_association_, other->maintain_association_);
}

::google::protobuf::Metadata CMsgDOTAGCToGCUpdateOpenGuildPartyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::InitAsDefaultInstance() {
}
class CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::HasBitSetters {
 public:
  static void set_has_party_id(CMsgDOTAGCToGCDestroyOpenGuildPartyRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_guild_id(CMsgDOTAGCToGCDestroyOpenGuildPartyRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::kPartyIdFieldNumber;
const int CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::kGuildIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::CMsgDOTAGCToGCDestroyOpenGuildPartyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
}
CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::CMsgDOTAGCToGCDestroyOpenGuildPartyRequest(const CMsgDOTAGCToGCDestroyOpenGuildPartyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&party_id_, &from.party_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&party_id_)) + sizeof(guild_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::SharedCtor() {
  ::memset(&party_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_id_) -
      reinterpret_cast<char*>(&party_id_)) + sizeof(guild_id_));
}

CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::~CMsgDOTAGCToGCDestroyOpenGuildPartyRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
  SharedDtor();
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::SharedDtor() {
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGCToGCDestroyOpenGuildPartyRequest& CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGCToGCDestroyOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&party_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_id_) -
        reinterpret_cast<char*>(&party_id_)) + sizeof(guild_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGCToGCDestroyOpenGuildPartyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 party_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_party_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 guild_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 party_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_party_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &party_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 guild_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 party_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->party_id(), output);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->guild_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
}

::google::protobuf::uint8* CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 party_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->party_id(), target);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->guild_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
  return target;
}

size_t CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 party_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->party_id());
    }

    // optional uint32 guild_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGCToGCDestroyOpenGuildPartyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGCToGCDestroyOpenGuildPartyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
    MergeFrom(*source);
  }
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::MergeFrom(const CMsgDOTAGCToGCDestroyOpenGuildPartyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      party_id_ = from.party_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      guild_id_ = from.guild_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::CopyFrom(const CMsgDOTAGCToGCDestroyOpenGuildPartyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::IsInitialized() const {
  return true;
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::Swap(CMsgDOTAGCToGCDestroyOpenGuildPartyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::InternalSwap(CMsgDOTAGCToGCDestroyOpenGuildPartyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(party_id_, other->party_id_);
  swap(guild_id_, other->guild_id_);
}

::google::protobuf::Metadata CMsgDOTAGCToGCDestroyOpenGuildPartyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::InitAsDefaultInstance() {
}
class CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::CMsgDOTAGCToGCDestroyOpenGuildPartyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
}
CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::CMsgDOTAGCToGCDestroyOpenGuildPartyResponse(const CMsgDOTAGCToGCDestroyOpenGuildPartyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::SharedCtor() {
}

CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::~CMsgDOTAGCToGCDestroyOpenGuildPartyResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
  SharedDtor();
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::SharedDtor() {
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGCToGCDestroyOpenGuildPartyResponse& CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGCToGCDestroyOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGCToGCDestroyOpenGuildPartyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
}

::google::protobuf::uint8* CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
  return target;
}

size_t CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGCToGCDestroyOpenGuildPartyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGCToGCDestroyOpenGuildPartyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
    MergeFrom(*source);
  }
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::MergeFrom(const CMsgDOTAGCToGCDestroyOpenGuildPartyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::CopyFrom(const CMsgDOTAGCToGCDestroyOpenGuildPartyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGCToGCDestroyOpenGuildPartyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::IsInitialized() const {
  return true;
}

void CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::Swap(CMsgDOTAGCToGCDestroyOpenGuildPartyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::InternalSwap(CMsgDOTAGCToGCDestroyOpenGuildPartyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgDOTAGCToGCDestroyOpenGuildPartyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAPartySetOpenGuildRequest::InitAsDefaultInstance() {
}
class CMsgDOTAPartySetOpenGuildRequest::HasBitSetters {
 public:
  static void set_has_guild_id(CMsgDOTAPartySetOpenGuildRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_description(CMsgDOTAPartySetOpenGuildRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAPartySetOpenGuildRequest::kGuildIdFieldNumber;
const int CMsgDOTAPartySetOpenGuildRequest::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAPartySetOpenGuildRequest::CMsgDOTAPartySetOpenGuildRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
}
CMsgDOTAPartySetOpenGuildRequest::CMsgDOTAPartySetOpenGuildRequest(const CMsgDOTAPartySetOpenGuildRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
}

void CMsgDOTAPartySetOpenGuildRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDOTAPartySetOpenGuildRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guild_id_ = 0u;
}

CMsgDOTAPartySetOpenGuildRequest::~CMsgDOTAPartySetOpenGuildRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
  SharedDtor();
}

void CMsgDOTAPartySetOpenGuildRequest::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDOTAPartySetOpenGuildRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAPartySetOpenGuildRequest& CMsgDOTAPartySetOpenGuildRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAPartySetOpenGuildRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAPartySetOpenGuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    description_.ClearNonDefaultToEmptyNoArena();
  }
  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAPartySetOpenGuildRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAPartySetOpenGuildRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string description = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDOTAPartySetOpenGuildRequest.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAPartySetOpenGuildRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDOTAPartySetOpenGuildRequest.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAPartySetOpenGuildRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guild_id(), output);
  }

  // optional string description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAPartySetOpenGuildRequest.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
}

::google::protobuf::uint8* CMsgDOTAPartySetOpenGuildRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guild_id(), target);
  }

  // optional string description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAPartySetOpenGuildRequest.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
  return target;
}

size_t CMsgDOTAPartySetOpenGuildRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string description = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAPartySetOpenGuildRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAPartySetOpenGuildRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAPartySetOpenGuildRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
    MergeFrom(*source);
  }
}

void CMsgDOTAPartySetOpenGuildRequest::MergeFrom(const CMsgDOTAPartySetOpenGuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000002u) {
      guild_id_ = from.guild_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAPartySetOpenGuildRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAPartySetOpenGuildRequest::CopyFrom(const CMsgDOTAPartySetOpenGuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAPartySetOpenGuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAPartySetOpenGuildRequest::IsInitialized() const {
  return true;
}

void CMsgDOTAPartySetOpenGuildRequest::Swap(CMsgDOTAPartySetOpenGuildRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAPartySetOpenGuildRequest::InternalSwap(CMsgDOTAPartySetOpenGuildRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guild_id_, other->guild_id_);
}

::google::protobuf::Metadata CMsgDOTAPartySetOpenGuildRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAPartySetOpenGuildResponse::InitAsDefaultInstance() {
}
class CMsgDOTAPartySetOpenGuildResponse::HasBitSetters {
 public:
  static void set_has_result(CMsgDOTAPartySetOpenGuildResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAPartySetOpenGuildResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAPartySetOpenGuildResponse::CMsgDOTAPartySetOpenGuildResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
}
CMsgDOTAPartySetOpenGuildResponse::CMsgDOTAPartySetOpenGuildResponse(const CMsgDOTAPartySetOpenGuildResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
}

void CMsgDOTAPartySetOpenGuildResponse::SharedCtor() {
  result_ = 0;
}

CMsgDOTAPartySetOpenGuildResponse::~CMsgDOTAPartySetOpenGuildResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
  SharedDtor();
}

void CMsgDOTAPartySetOpenGuildResponse::SharedDtor() {
}

void CMsgDOTAPartySetOpenGuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAPartySetOpenGuildResponse& CMsgDOTAPartySetOpenGuildResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAPartySetOpenGuildResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAPartySetOpenGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAPartySetOpenGuildResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAPartySetOpenGuildResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgDOTAPartySetOpenGuildResponse.EResult result = 1 [default = SUCCESS];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgDOTAPartySetOpenGuildResponse_EResult_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_result(static_cast<::proto::dota::CMsgDOTAPartySetOpenGuildResponse_EResult>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAPartySetOpenGuildResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgDOTAPartySetOpenGuildResponse.EResult result = 1 [default = SUCCESS];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgDOTAPartySetOpenGuildResponse_EResult_IsValid(value)) {
            set_result(static_cast< ::proto::dota::CMsgDOTAPartySetOpenGuildResponse_EResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAPartySetOpenGuildResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgDOTAPartySetOpenGuildResponse.EResult result = 1 [default = SUCCESS];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
}

::google::protobuf::uint8* CMsgDOTAPartySetOpenGuildResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgDOTAPartySetOpenGuildResponse.EResult result = 1 [default = SUCCESS];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
  return target;
}

size_t CMsgDOTAPartySetOpenGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.dota.CMsgDOTAPartySetOpenGuildResponse.EResult result = 1 [default = SUCCESS];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAPartySetOpenGuildResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAPartySetOpenGuildResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAPartySetOpenGuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
    MergeFrom(*source);
  }
}

void CMsgDOTAPartySetOpenGuildResponse::MergeFrom(const CMsgDOTAPartySetOpenGuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgDOTAPartySetOpenGuildResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAPartySetOpenGuildResponse::CopyFrom(const CMsgDOTAPartySetOpenGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAPartySetOpenGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAPartySetOpenGuildResponse::IsInitialized() const {
  return true;
}

void CMsgDOTAPartySetOpenGuildResponse::Swap(CMsgDOTAPartySetOpenGuildResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAPartySetOpenGuildResponse::InternalSwap(CMsgDOTAPartySetOpenGuildResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::google::protobuf::Metadata CMsgDOTAPartySetOpenGuildResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAJoinOpenGuildPartyRequest::InitAsDefaultInstance() {
}
class CMsgDOTAJoinOpenGuildPartyRequest::HasBitSetters {
 public:
  static void set_has_party_id(CMsgDOTAJoinOpenGuildPartyRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAJoinOpenGuildPartyRequest::kPartyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAJoinOpenGuildPartyRequest::CMsgDOTAJoinOpenGuildPartyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
}
CMsgDOTAJoinOpenGuildPartyRequest::CMsgDOTAJoinOpenGuildPartyRequest(const CMsgDOTAJoinOpenGuildPartyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  party_id_ = from.party_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
}

void CMsgDOTAJoinOpenGuildPartyRequest::SharedCtor() {
  party_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgDOTAJoinOpenGuildPartyRequest::~CMsgDOTAJoinOpenGuildPartyRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
  SharedDtor();
}

void CMsgDOTAJoinOpenGuildPartyRequest::SharedDtor() {
}

void CMsgDOTAJoinOpenGuildPartyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAJoinOpenGuildPartyRequest& CMsgDOTAJoinOpenGuildPartyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAJoinOpenGuildPartyRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAJoinOpenGuildPartyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  party_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAJoinOpenGuildPartyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAJoinOpenGuildPartyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 party_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_party_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAJoinOpenGuildPartyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 party_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_party_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &party_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAJoinOpenGuildPartyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 party_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->party_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
}

::google::protobuf::uint8* CMsgDOTAJoinOpenGuildPartyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 party_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->party_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
  return target;
}

size_t CMsgDOTAJoinOpenGuildPartyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 party_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->party_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAJoinOpenGuildPartyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAJoinOpenGuildPartyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAJoinOpenGuildPartyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
    MergeFrom(*source);
  }
}

void CMsgDOTAJoinOpenGuildPartyRequest::MergeFrom(const CMsgDOTAJoinOpenGuildPartyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_party_id()) {
    set_party_id(from.party_id());
  }
}

void CMsgDOTAJoinOpenGuildPartyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAJoinOpenGuildPartyRequest::CopyFrom(const CMsgDOTAJoinOpenGuildPartyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAJoinOpenGuildPartyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAJoinOpenGuildPartyRequest::IsInitialized() const {
  return true;
}

void CMsgDOTAJoinOpenGuildPartyRequest::Swap(CMsgDOTAJoinOpenGuildPartyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAJoinOpenGuildPartyRequest::InternalSwap(CMsgDOTAJoinOpenGuildPartyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(party_id_, other->party_id_);
}

::google::protobuf::Metadata CMsgDOTAJoinOpenGuildPartyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAJoinOpenGuildPartyResponse::InitAsDefaultInstance() {
}
class CMsgDOTAJoinOpenGuildPartyResponse::HasBitSetters {
 public:
  static void set_has_result(CMsgDOTAJoinOpenGuildPartyResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAJoinOpenGuildPartyResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAJoinOpenGuildPartyResponse::CMsgDOTAJoinOpenGuildPartyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
}
CMsgDOTAJoinOpenGuildPartyResponse::CMsgDOTAJoinOpenGuildPartyResponse(const CMsgDOTAJoinOpenGuildPartyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
}

void CMsgDOTAJoinOpenGuildPartyResponse::SharedCtor() {
  result_ = 0;
}

CMsgDOTAJoinOpenGuildPartyResponse::~CMsgDOTAJoinOpenGuildPartyResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
  SharedDtor();
}

void CMsgDOTAJoinOpenGuildPartyResponse::SharedDtor() {
}

void CMsgDOTAJoinOpenGuildPartyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAJoinOpenGuildPartyResponse& CMsgDOTAJoinOpenGuildPartyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAJoinOpenGuildPartyResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAJoinOpenGuildPartyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAJoinOpenGuildPartyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAJoinOpenGuildPartyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgDOTAJoinOpenGuildPartyResponse.EResult result = 1 [default = SUCCESS];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgDOTAJoinOpenGuildPartyResponse_EResult_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_result(static_cast<::proto::dota::CMsgDOTAJoinOpenGuildPartyResponse_EResult>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAJoinOpenGuildPartyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgDOTAJoinOpenGuildPartyResponse.EResult result = 1 [default = SUCCESS];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgDOTAJoinOpenGuildPartyResponse_EResult_IsValid(value)) {
            set_result(static_cast< ::proto::dota::CMsgDOTAJoinOpenGuildPartyResponse_EResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAJoinOpenGuildPartyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgDOTAJoinOpenGuildPartyResponse.EResult result = 1 [default = SUCCESS];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
}

::google::protobuf::uint8* CMsgDOTAJoinOpenGuildPartyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgDOTAJoinOpenGuildPartyResponse.EResult result = 1 [default = SUCCESS];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
  return target;
}

size_t CMsgDOTAJoinOpenGuildPartyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.dota.CMsgDOTAJoinOpenGuildPartyResponse.EResult result = 1 [default = SUCCESS];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAJoinOpenGuildPartyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAJoinOpenGuildPartyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAJoinOpenGuildPartyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
    MergeFrom(*source);
  }
}

void CMsgDOTAJoinOpenGuildPartyResponse::MergeFrom(const CMsgDOTAJoinOpenGuildPartyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgDOTAJoinOpenGuildPartyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAJoinOpenGuildPartyResponse::CopyFrom(const CMsgDOTAJoinOpenGuildPartyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAJoinOpenGuildPartyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAJoinOpenGuildPartyResponse::IsInitialized() const {
  return true;
}

void CMsgDOTAJoinOpenGuildPartyResponse::Swap(CMsgDOTAJoinOpenGuildPartyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAJoinOpenGuildPartyResponse::InternalSwap(CMsgDOTAJoinOpenGuildPartyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::google::protobuf::Metadata CMsgDOTAJoinOpenGuildPartyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildOpenPartyRefresh_OpenParty::InitAsDefaultInstance() {
}
class CMsgDOTAGuildOpenPartyRefresh_OpenParty::HasBitSetters {
 public:
  static void set_has_party_id(CMsgDOTAGuildOpenPartyRefresh_OpenParty* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_time_created(CMsgDOTAGuildOpenPartyRefresh_OpenParty* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_description(CMsgDOTAGuildOpenPartyRefresh_OpenParty* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildOpenPartyRefresh_OpenParty::kPartyIdFieldNumber;
const int CMsgDOTAGuildOpenPartyRefresh_OpenParty::kMemberAccountIdsFieldNumber;
const int CMsgDOTAGuildOpenPartyRefresh_OpenParty::kTimeCreatedFieldNumber;
const int CMsgDOTAGuildOpenPartyRefresh_OpenParty::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildOpenPartyRefresh_OpenParty::CMsgDOTAGuildOpenPartyRefresh_OpenParty()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
}
CMsgDOTAGuildOpenPartyRefresh_OpenParty::CMsgDOTAGuildOpenPartyRefresh_OpenParty(const CMsgDOTAGuildOpenPartyRefresh_OpenParty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      member_account_ids_(from.member_account_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&party_id_, &from.party_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_created_) -
    reinterpret_cast<char*>(&party_id_)) + sizeof(time_created_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
}

void CMsgDOTAGuildOpenPartyRefresh_OpenParty::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDOTAGuildOpenPartyRefresh_OpenParty_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&party_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_created_) -
      reinterpret_cast<char*>(&party_id_)) + sizeof(time_created_));
}

CMsgDOTAGuildOpenPartyRefresh_OpenParty::~CMsgDOTAGuildOpenPartyRefresh_OpenParty() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
  SharedDtor();
}

void CMsgDOTAGuildOpenPartyRefresh_OpenParty::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDOTAGuildOpenPartyRefresh_OpenParty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildOpenPartyRefresh_OpenParty& CMsgDOTAGuildOpenPartyRefresh_OpenParty::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildOpenPartyRefresh_OpenParty_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildOpenPartyRefresh_OpenParty::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_account_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    description_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&party_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_created_) -
        reinterpret_cast<char*>(&party_id_)) + sizeof(time_created_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildOpenPartyRefresh_OpenParty::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildOpenPartyRefresh_OpenParty*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 party_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_party_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 member_account_ids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_member_account_ids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_member_account_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 time_created = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_time_created(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string description = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildOpenPartyRefresh_OpenParty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 party_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_party_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &party_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 member_account_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_member_account_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_member_account_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_created = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_time_created(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildOpenPartyRefresh_OpenParty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 party_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->party_id(), output);
  }

  // repeated uint32 member_account_ids = 2;
  for (int i = 0, n = this->member_account_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->member_account_ids(i), output);
  }

  // optional uint32 time_created = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->time_created(), output);
  }

  // optional string description = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
}

::google::protobuf::uint8* CMsgDOTAGuildOpenPartyRefresh_OpenParty::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 party_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->party_id(), target);
  }

  // repeated uint32 member_account_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->member_account_ids_, target);

  // optional uint32 time_created = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->time_created(), target);
  }

  // optional string description = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
  return target;
}

size_t CMsgDOTAGuildOpenPartyRefresh_OpenParty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 member_account_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->member_account_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->member_account_ids_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string description = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional uint64 party_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->party_id());
    }

    // optional uint32 time_created = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_created());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildOpenPartyRefresh_OpenParty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildOpenPartyRefresh_OpenParty* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildOpenPartyRefresh_OpenParty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildOpenPartyRefresh_OpenParty::MergeFrom(const CMsgDOTAGuildOpenPartyRefresh_OpenParty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_account_ids_.MergeFrom(from.member_account_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000002u) {
      party_id_ = from.party_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_created_ = from.time_created_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildOpenPartyRefresh_OpenParty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildOpenPartyRefresh_OpenParty::CopyFrom(const CMsgDOTAGuildOpenPartyRefresh_OpenParty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildOpenPartyRefresh_OpenParty::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildOpenPartyRefresh_OpenParty::Swap(CMsgDOTAGuildOpenPartyRefresh_OpenParty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildOpenPartyRefresh_OpenParty::InternalSwap(CMsgDOTAGuildOpenPartyRefresh_OpenParty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  member_account_ids_.InternalSwap(&other->member_account_ids_);
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(party_id_, other->party_id_);
  swap(time_created_, other->time_created_);
}

::google::protobuf::Metadata CMsgDOTAGuildOpenPartyRefresh_OpenParty::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildOpenPartyRefresh::InitAsDefaultInstance() {
}
class CMsgDOTAGuildOpenPartyRefresh::HasBitSetters {
 public:
  static void set_has_guild_id(CMsgDOTAGuildOpenPartyRefresh* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildOpenPartyRefresh::kGuildIdFieldNumber;
const int CMsgDOTAGuildOpenPartyRefresh::kOpenPartiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildOpenPartyRefresh::CMsgDOTAGuildOpenPartyRefresh()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
}
CMsgDOTAGuildOpenPartyRefresh::CMsgDOTAGuildOpenPartyRefresh(const CMsgDOTAGuildOpenPartyRefresh& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      open_parties_(from.open_parties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
}

void CMsgDOTAGuildOpenPartyRefresh::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDOTAGuildOpenPartyRefresh_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  guild_id_ = 0u;
}

CMsgDOTAGuildOpenPartyRefresh::~CMsgDOTAGuildOpenPartyRefresh() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
  SharedDtor();
}

void CMsgDOTAGuildOpenPartyRefresh::SharedDtor() {
}

void CMsgDOTAGuildOpenPartyRefresh::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildOpenPartyRefresh& CMsgDOTAGuildOpenPartyRefresh::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildOpenPartyRefresh_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildOpenPartyRefresh::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  open_parties_.Clear();
  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildOpenPartyRefresh::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildOpenPartyRefresh*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty open_parties = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgDOTAGuildOpenPartyRefresh_OpenParty::_InternalParse;
          object = msg->add_open_parties();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildOpenPartyRefresh::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty open_parties = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_open_parties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildOpenPartyRefresh::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guild_id(), output);
  }

  // repeated .proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty open_parties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->open_parties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->open_parties(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
}

::google::protobuf::uint8* CMsgDOTAGuildOpenPartyRefresh::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guild_id(), target);
  }

  // repeated .proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty open_parties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->open_parties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->open_parties(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
  return target;
}

size_t CMsgDOTAGuildOpenPartyRefresh::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgDOTAGuildOpenPartyRefresh.OpenParty open_parties = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->open_parties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->open_parties(static_cast<int>(i)));
    }
  }

  // optional uint32 guild_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guild_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildOpenPartyRefresh::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildOpenPartyRefresh* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildOpenPartyRefresh>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildOpenPartyRefresh::MergeFrom(const CMsgDOTAGuildOpenPartyRefresh& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  open_parties_.MergeFrom(from.open_parties_);
  if (from.has_guild_id()) {
    set_guild_id(from.guild_id());
  }
}

void CMsgDOTAGuildOpenPartyRefresh::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildOpenPartyRefresh::CopyFrom(const CMsgDOTAGuildOpenPartyRefresh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildOpenPartyRefresh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildOpenPartyRefresh::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildOpenPartyRefresh::Swap(CMsgDOTAGuildOpenPartyRefresh* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildOpenPartyRefresh::InternalSwap(CMsgDOTAGuildOpenPartyRefresh* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&open_parties_)->InternalSwap(CastToBase(&other->open_parties_));
  swap(guild_id_, other->guild_id_);
}

::google::protobuf::Metadata CMsgDOTAGuildOpenPartyRefresh::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTARequestGuildData::InitAsDefaultInstance() {
}
class CMsgDOTARequestGuildData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTARequestGuildData::CMsgDOTARequestGuildData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTARequestGuildData)
}
CMsgDOTARequestGuildData::CMsgDOTARequestGuildData(const CMsgDOTARequestGuildData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTARequestGuildData)
}

void CMsgDOTARequestGuildData::SharedCtor() {
}

CMsgDOTARequestGuildData::~CMsgDOTARequestGuildData() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTARequestGuildData)
  SharedDtor();
}

void CMsgDOTARequestGuildData::SharedDtor() {
}

void CMsgDOTARequestGuildData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTARequestGuildData& CMsgDOTARequestGuildData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTARequestGuildData_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTARequestGuildData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTARequestGuildData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTARequestGuildData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTARequestGuildData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTARequestGuildData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTARequestGuildData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTARequestGuildData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTARequestGuildData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTARequestGuildData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTARequestGuildData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTARequestGuildData)
}

::google::protobuf::uint8* CMsgDOTARequestGuildData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTARequestGuildData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTARequestGuildData)
  return target;
}

size_t CMsgDOTARequestGuildData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTARequestGuildData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTARequestGuildData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTARequestGuildData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTARequestGuildData* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTARequestGuildData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTARequestGuildData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTARequestGuildData)
    MergeFrom(*source);
  }
}

void CMsgDOTARequestGuildData::MergeFrom(const CMsgDOTARequestGuildData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTARequestGuildData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgDOTARequestGuildData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTARequestGuildData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTARequestGuildData::CopyFrom(const CMsgDOTARequestGuildData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTARequestGuildData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTARequestGuildData::IsInitialized() const {
  return true;
}

void CMsgDOTARequestGuildData::Swap(CMsgDOTARequestGuildData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTARequestGuildData::InternalSwap(CMsgDOTARequestGuildData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgDOTARequestGuildData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildInviteData::InitAsDefaultInstance() {
}
class CMsgDOTAGuildInviteData::HasBitSetters {
 public:
  static void set_has_invited_to_guild(CMsgDOTAGuildInviteData* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_guild_id(CMsgDOTAGuildInviteData* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_guild_name(CMsgDOTAGuildInviteData* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_guild_tag(CMsgDOTAGuildInviteData* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_logo(CMsgDOTAGuildInviteData* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_inviter(CMsgDOTAGuildInviteData* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_inviter_name(CMsgDOTAGuildInviteData* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_member_count(CMsgDOTAGuildInviteData* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildInviteData::kInvitedToGuildFieldNumber;
const int CMsgDOTAGuildInviteData::kGuildIdFieldNumber;
const int CMsgDOTAGuildInviteData::kGuildNameFieldNumber;
const int CMsgDOTAGuildInviteData::kGuildTagFieldNumber;
const int CMsgDOTAGuildInviteData::kLogoFieldNumber;
const int CMsgDOTAGuildInviteData::kInviterFieldNumber;
const int CMsgDOTAGuildInviteData::kInviterNameFieldNumber;
const int CMsgDOTAGuildInviteData::kMemberCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildInviteData::CMsgDOTAGuildInviteData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildInviteData)
}
CMsgDOTAGuildInviteData::CMsgDOTAGuildInviteData(const CMsgDOTAGuildInviteData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guild_name()) {
    guild_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_name_);
  }
  guild_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guild_tag()) {
    guild_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_tag_);
  }
  inviter_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_inviter_name()) {
    inviter_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inviter_name_);
  }
  ::memcpy(&invited_to_guild_, &from.invited_to_guild_,
    static_cast<size_t>(reinterpret_cast<char*>(&member_count_) -
    reinterpret_cast<char*>(&invited_to_guild_)) + sizeof(member_count_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildInviteData)
}

void CMsgDOTAGuildInviteData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDOTAGuildInviteData_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guild_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inviter_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&invited_to_guild_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_count_) -
      reinterpret_cast<char*>(&invited_to_guild_)) + sizeof(member_count_));
}

CMsgDOTAGuildInviteData::~CMsgDOTAGuildInviteData() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildInviteData)
  SharedDtor();
}

void CMsgDOTAGuildInviteData::SharedDtor() {
  guild_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guild_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inviter_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDOTAGuildInviteData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildInviteData& CMsgDOTAGuildInviteData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildInviteData_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildInviteData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildInviteData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      guild_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      guild_tag_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      inviter_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&invited_to_guild_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&member_count_) -
        reinterpret_cast<char*>(&invited_to_guild_)) + sizeof(member_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildInviteData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildInviteData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool invited_to_guild = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_invited_to_guild(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 guild_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string guild_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDOTAGuildInviteData.guild_name");
        object = msg->mutable_guild_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string guild_tag = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDOTAGuildInviteData.guild_tag");
        object = msg->mutable_guild_tag();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint64 logo = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_logo(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 inviter = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_inviter(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string inviter_name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDOTAGuildInviteData.inviter_name");
        object = msg->mutable_inviter_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 member_count = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_member_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildInviteData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildInviteData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool invited_to_guild = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_invited_to_guild(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &invited_to_guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 guild_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string guild_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guild_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guild_name().data(), static_cast<int>(this->guild_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDOTAGuildInviteData.guild_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string guild_tag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guild_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guild_tag().data(), static_cast<int>(this->guild_tag().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDOTAGuildInviteData.guild_tag");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 logo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_logo(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 inviter = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_inviter(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inviter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string inviter_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inviter_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->inviter_name().data(), static_cast<int>(this->inviter_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDOTAGuildInviteData.inviter_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 member_count = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_member_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &member_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildInviteData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildInviteData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildInviteData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildInviteData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool invited_to_guild = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->invited_to_guild(), output);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->guild_id(), output);
  }

  // optional string guild_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guild_name().data(), static_cast<int>(this->guild_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildInviteData.guild_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->guild_name(), output);
  }

  // optional string guild_tag = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guild_tag().data(), static_cast<int>(this->guild_tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildInviteData.guild_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->guild_tag(), output);
  }

  // optional uint64 logo = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->logo(), output);
  }

  // optional uint32 inviter = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->inviter(), output);
  }

  // optional string inviter_name = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inviter_name().data(), static_cast<int>(this->inviter_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildInviteData.inviter_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->inviter_name(), output);
  }

  // optional uint32 member_count = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->member_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildInviteData)
}

::google::protobuf::uint8* CMsgDOTAGuildInviteData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildInviteData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool invited_to_guild = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->invited_to_guild(), target);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->guild_id(), target);
  }

  // optional string guild_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guild_name().data(), static_cast<int>(this->guild_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildInviteData.guild_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->guild_name(), target);
  }

  // optional string guild_tag = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guild_tag().data(), static_cast<int>(this->guild_tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildInviteData.guild_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->guild_tag(), target);
  }

  // optional uint64 logo = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->logo(), target);
  }

  // optional uint32 inviter = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->inviter(), target);
  }

  // optional string inviter_name = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inviter_name().data(), static_cast<int>(this->inviter_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildInviteData.inviter_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->inviter_name(), target);
  }

  // optional uint32 member_count = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->member_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildInviteData)
  return target;
}

size_t CMsgDOTAGuildInviteData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildInviteData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string guild_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guild_name());
    }

    // optional string guild_tag = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guild_tag());
    }

    // optional string inviter_name = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inviter_name());
    }

    // optional bool invited_to_guild = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional uint32 guild_id = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

    // optional uint64 logo = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->logo());
    }

    // optional uint32 inviter = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inviter());
    }

    // optional uint32 member_count = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->member_count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildInviteData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildInviteData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildInviteData* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildInviteData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildInviteData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildInviteData)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildInviteData::MergeFrom(const CMsgDOTAGuildInviteData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildInviteData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      guild_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      guild_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_tag_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      inviter_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inviter_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      invited_to_guild_ = from.invited_to_guild_;
    }
    if (cached_has_bits & 0x00000010u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      logo_ = from.logo_;
    }
    if (cached_has_bits & 0x00000040u) {
      inviter_ = from.inviter_;
    }
    if (cached_has_bits & 0x00000080u) {
      member_count_ = from.member_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildInviteData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildInviteData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildInviteData::CopyFrom(const CMsgDOTAGuildInviteData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildInviteData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildInviteData::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildInviteData::Swap(CMsgDOTAGuildInviteData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildInviteData::InternalSwap(CMsgDOTAGuildInviteData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  guild_name_.Swap(&other->guild_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guild_tag_.Swap(&other->guild_tag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  inviter_name_.Swap(&other->inviter_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(invited_to_guild_, other->invited_to_guild_);
  swap(guild_id_, other->guild_id_);
  swap(logo_, other->logo_);
  swap(inviter_, other->inviter_);
  swap(member_count_, other->member_count_);
}

::google::protobuf::Metadata CMsgDOTAGuildInviteData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildUpdateMessage::InitAsDefaultInstance() {
}
class CMsgDOTAGuildUpdateMessage::HasBitSetters {
 public:
  static void set_has_message(CMsgDOTAGuildUpdateMessage* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_guild_id(CMsgDOTAGuildUpdateMessage* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildUpdateMessage::kMessageFieldNumber;
const int CMsgDOTAGuildUpdateMessage::kGuildIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildUpdateMessage::CMsgDOTAGuildUpdateMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildUpdateMessage)
}
CMsgDOTAGuildUpdateMessage::CMsgDOTAGuildUpdateMessage(const CMsgDOTAGuildUpdateMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildUpdateMessage)
}

void CMsgDOTAGuildUpdateMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDOTAGuildUpdateMessage_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guild_id_ = 0u;
}

CMsgDOTAGuildUpdateMessage::~CMsgDOTAGuildUpdateMessage() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildUpdateMessage)
  SharedDtor();
}

void CMsgDOTAGuildUpdateMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDOTAGuildUpdateMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildUpdateMessage& CMsgDOTAGuildUpdateMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildUpdateMessage_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildUpdateMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildUpdateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildUpdateMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildUpdateMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string message = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDOTAGuildUpdateMessage.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 guild_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildUpdateMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildUpdateMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDOTAGuildUpdateMessage.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 guild_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildUpdateMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildUpdateMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildUpdateMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildUpdateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildUpdateMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->guild_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildUpdateMessage)
}

::google::protobuf::uint8* CMsgDOTAGuildUpdateMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildUpdateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDOTAGuildUpdateMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->guild_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildUpdateMessage)
  return target;
}

size_t CMsgDOTAGuildUpdateMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildUpdateMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string message = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional uint32 guild_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildUpdateMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildUpdateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildUpdateMessage* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildUpdateMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildUpdateMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildUpdateMessage)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildUpdateMessage::MergeFrom(const CMsgDOTAGuildUpdateMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildUpdateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      guild_id_ = from.guild_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildUpdateMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildUpdateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildUpdateMessage::CopyFrom(const CMsgDOTAGuildUpdateMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildUpdateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildUpdateMessage::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildUpdateMessage::Swap(CMsgDOTAGuildUpdateMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildUpdateMessage::InternalSwap(CMsgDOTAGuildUpdateMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guild_id_, other->guild_id_);
}

::google::protobuf::Metadata CMsgDOTAGuildUpdateMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildEditLogoRequest::InitAsDefaultInstance() {
}
class CMsgDOTAGuildEditLogoRequest::HasBitSetters {
 public:
  static void set_has_guild_id(CMsgDOTAGuildEditLogoRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_logo(CMsgDOTAGuildEditLogoRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildEditLogoRequest::kGuildIdFieldNumber;
const int CMsgDOTAGuildEditLogoRequest::kLogoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildEditLogoRequest::CMsgDOTAGuildEditLogoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildEditLogoRequest)
}
CMsgDOTAGuildEditLogoRequest::CMsgDOTAGuildEditLogoRequest(const CMsgDOTAGuildEditLogoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&logo_, &from.logo_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&logo_)) + sizeof(guild_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildEditLogoRequest)
}

void CMsgDOTAGuildEditLogoRequest::SharedCtor() {
  ::memset(&logo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_id_) -
      reinterpret_cast<char*>(&logo_)) + sizeof(guild_id_));
}

CMsgDOTAGuildEditLogoRequest::~CMsgDOTAGuildEditLogoRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildEditLogoRequest)
  SharedDtor();
}

void CMsgDOTAGuildEditLogoRequest::SharedDtor() {
}

void CMsgDOTAGuildEditLogoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildEditLogoRequest& CMsgDOTAGuildEditLogoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildEditLogoRequest_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildEditLogoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildEditLogoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&logo_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_id_) -
        reinterpret_cast<char*>(&logo_)) + sizeof(guild_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildEditLogoRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildEditLogoRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 logo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_logo(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildEditLogoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildEditLogoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 logo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_logo(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildEditLogoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildEditLogoRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildEditLogoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildEditLogoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guild_id(), output);
  }

  // optional uint64 logo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->logo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildEditLogoRequest)
}

::google::protobuf::uint8* CMsgDOTAGuildEditLogoRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildEditLogoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guild_id(), target);
  }

  // optional uint64 logo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->logo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildEditLogoRequest)
  return target;
}

size_t CMsgDOTAGuildEditLogoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildEditLogoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 logo = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->logo());
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildEditLogoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildEditLogoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildEditLogoRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildEditLogoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildEditLogoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildEditLogoRequest)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildEditLogoRequest::MergeFrom(const CMsgDOTAGuildEditLogoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildEditLogoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      logo_ = from.logo_;
    }
    if (cached_has_bits & 0x00000002u) {
      guild_id_ = from.guild_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildEditLogoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildEditLogoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildEditLogoRequest::CopyFrom(const CMsgDOTAGuildEditLogoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildEditLogoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildEditLogoRequest::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildEditLogoRequest::Swap(CMsgDOTAGuildEditLogoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildEditLogoRequest::InternalSwap(CMsgDOTAGuildEditLogoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(logo_, other->logo_);
  swap(guild_id_, other->guild_id_);
}

::google::protobuf::Metadata CMsgDOTAGuildEditLogoRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDOTAGuildEditLogoResponse::InitAsDefaultInstance() {
}
class CMsgDOTAGuildEditLogoResponse::HasBitSetters {
 public:
  static void set_has_guild_id(CMsgDOTAGuildEditLogoResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_result(CMsgDOTAGuildEditLogoResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDOTAGuildEditLogoResponse::kGuildIdFieldNumber;
const int CMsgDOTAGuildEditLogoResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDOTAGuildEditLogoResponse::CMsgDOTAGuildEditLogoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDOTAGuildEditLogoResponse)
}
CMsgDOTAGuildEditLogoResponse::CMsgDOTAGuildEditLogoResponse(const CMsgDOTAGuildEditLogoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDOTAGuildEditLogoResponse)
}

void CMsgDOTAGuildEditLogoResponse::SharedCtor() {
  ::memset(&guild_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&guild_id_)) + sizeof(result_));
}

CMsgDOTAGuildEditLogoResponse::~CMsgDOTAGuildEditLogoResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDOTAGuildEditLogoResponse)
  SharedDtor();
}

void CMsgDOTAGuildEditLogoResponse::SharedDtor() {
}

void CMsgDOTAGuildEditLogoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDOTAGuildEditLogoResponse& CMsgDOTAGuildEditLogoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDOTAGuildEditLogoResponse_dota_5fgcmessages_5fclient_5fguild_2eproto.base);
  return *internal_default_instance();
}


void CMsgDOTAGuildEditLogoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDOTAGuildEditLogoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&result_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDOTAGuildEditLogoResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDOTAGuildEditLogoResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_guild_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .proto.dota.CMsgDOTAGuildEditLogoResponse.EResult result = 2 [default = SUCCESS];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgDOTAGuildEditLogoResponse_EResult_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_result(static_cast<::proto::dota::CMsgDOTAGuildEditLogoResponse_EResult>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDOTAGuildEditLogoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDOTAGuildEditLogoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 guild_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_guild_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.CMsgDOTAGuildEditLogoResponse.EResult result = 2 [default = SUCCESS];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgDOTAGuildEditLogoResponse_EResult_IsValid(value)) {
            set_result(static_cast< ::proto::dota::CMsgDOTAGuildEditLogoResponse_EResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDOTAGuildEditLogoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDOTAGuildEditLogoResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDOTAGuildEditLogoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDOTAGuildEditLogoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guild_id(), output);
  }

  // optional .proto.dota.CMsgDOTAGuildEditLogoResponse.EResult result = 2 [default = SUCCESS];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDOTAGuildEditLogoResponse)
}

::google::protobuf::uint8* CMsgDOTAGuildEditLogoResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDOTAGuildEditLogoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guild_id(), target);
  }

  // optional .proto.dota.CMsgDOTAGuildEditLogoResponse.EResult result = 2 [default = SUCCESS];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDOTAGuildEditLogoResponse)
  return target;
}

size_t CMsgDOTAGuildEditLogoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDOTAGuildEditLogoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guild_id());
    }

    // optional .proto.dota.CMsgDOTAGuildEditLogoResponse.EResult result = 2 [default = SUCCESS];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDOTAGuildEditLogoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDOTAGuildEditLogoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDOTAGuildEditLogoResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDOTAGuildEditLogoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDOTAGuildEditLogoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDOTAGuildEditLogoResponse)
    MergeFrom(*source);
  }
}

void CMsgDOTAGuildEditLogoResponse::MergeFrom(const CMsgDOTAGuildEditLogoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDOTAGuildEditLogoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDOTAGuildEditLogoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDOTAGuildEditLogoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDOTAGuildEditLogoResponse::CopyFrom(const CMsgDOTAGuildEditLogoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDOTAGuildEditLogoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDOTAGuildEditLogoResponse::IsInitialized() const {
  return true;
}

void CMsgDOTAGuildEditLogoResponse::Swap(CMsgDOTAGuildEditLogoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDOTAGuildEditLogoResponse::InternalSwap(CMsgDOTAGuildEditLogoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
  swap(result_, other->result_);
}

::google::protobuf::Metadata CMsgDOTAGuildEditLogoResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return ::file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildSDO_Member* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildSDO_Member >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildSDO_Member >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildSDO_Invitation* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildSDO_Invitation >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildSDO_Invitation >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildSDO* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildSDO >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildSDO >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildAuditSDO_Entry* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildAuditSDO_Entry >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildAuditSDO_Entry >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildAuditSDO* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildAuditSDO >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildAuditSDO >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Membership* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Membership >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Membership >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Invitation* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Invitation >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO_Invitation >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAAccountGuildMembershipsSDO >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildCreateRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildCreateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildCreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildCreateResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildCreateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildCreateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildSetAccountRoleRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildSetAccountRoleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildSetAccountRoleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildSetAccountRoleResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildSetAccountRoleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildSetAccountRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildInviteAccountRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildInviteAccountRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildInviteAccountRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildInviteAccountResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildInviteAccountResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildInviteAccountResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildCancelInviteRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildCancelInviteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildCancelInviteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildCancelInviteResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildCancelInviteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildCancelInviteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildUpdateDetailsRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildUpdateDetailsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildUpdateDetailsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildUpdateDetailsResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildUpdateDetailsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildUpdateDetailsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGCToGCUpdateOpenGuildPartyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGCToGCDestroyOpenGuildPartyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAPartySetOpenGuildRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAPartySetOpenGuildRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAPartySetOpenGuildRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAPartySetOpenGuildResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAPartySetOpenGuildResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAPartySetOpenGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAJoinOpenGuildPartyRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAJoinOpenGuildPartyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAJoinOpenGuildPartyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAJoinOpenGuildPartyResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAJoinOpenGuildPartyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAJoinOpenGuildPartyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildOpenPartyRefresh_OpenParty* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildOpenPartyRefresh_OpenParty >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildOpenPartyRefresh_OpenParty >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildOpenPartyRefresh* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildOpenPartyRefresh >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildOpenPartyRefresh >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTARequestGuildData* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTARequestGuildData >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTARequestGuildData >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildInviteData* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildInviteData >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildInviteData >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildUpdateMessage* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildUpdateMessage >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildUpdateMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildEditLogoRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildEditLogoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildEditLogoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDOTAGuildEditLogoResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgDOTAGuildEditLogoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDOTAGuildEditLogoResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
